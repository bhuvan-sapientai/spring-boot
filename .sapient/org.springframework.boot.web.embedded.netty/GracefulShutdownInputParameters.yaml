---
modelFingerprint: "0073B2377751988FFDA2B97478F281DF"
targetClass:
  fullClassName: "org.springframework.boot.web.embedded.netty.GracefulShutdown"
methods:
- method:
    name: "shutDownGracefully"
    sourceCodeSignature: "void shutDownGracefully(GracefulShutdownCallback callback)"
    returnType: "void"
    parameters:
    - name: "callback"
      type: "org.springframework.boot.web.server.GracefulShutdownCallback"
    instructionFingerprint: "3E8157C2038BC8A037F5853D6335BCD1"
  paths:
  - pathId: "path1"
    testPathName: "shutDownGracefullyWhenServerIsNull"
    constructorSignature: "<init>(java.util.function.Supplier<reactor.netty.DisposableServer>)\
      \ : void"
    modelFingerprint: "F559A4313F932BB29530B16FB8D81DCA"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "30D9C7FF2E5D60E29084C8269F40AE00"
      valueUuid: "target"
    - type: "INPUT"
      name: "callback"
      modelFingerprint: "7490EC711E28D772941A498D8390C18B"
      valueUuid: "callback"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.Supplier.get() : java.lang.Object"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.GracefulShutdown"
        parameters:
        - name: "disposableServer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Supplier"
            uuid: "disposableServer"
      valueType: "org.springframework.boot.web.embedded.netty.GracefulShutdown"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.GracefulShutdownCallback"
      uuid: "callback"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 50
      expression: "server == null"
      range: "(50,7)-(50,20)"
      evaluatedAs: true
- method:
    name: "abort"
    sourceCodeSignature: "void abort()"
    returnType: "void"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.InterruptedException"
    instructionFingerprint: "438A92E5E0BA7E2840BAA888D6DF5B2B"
  paths:
  - pathId: "path1"
    testPathName: "abortWhenShutdownThreadIsNull"
    constructorSignature: "<init>(java.util.function.Supplier<reactor.netty.DisposableServer>)\
      \ : void"
    modelFingerprint: "15765BA75FF70D748B32842171BACABE"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "30D9C7FF2E5D60E29084C8269F40AE00"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.GracefulShutdown"
        parameters:
        - name: "disposableServer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Supplier"
            uuid: "disposableServer"
      valueType: "org.springframework.boot.web.embedded.netty.GracefulShutdown"
      uuid: "target"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 77
      expression: "shutdownThread != null"
      range: "(77,7)-(77,28)"
      evaluatedAs: false
