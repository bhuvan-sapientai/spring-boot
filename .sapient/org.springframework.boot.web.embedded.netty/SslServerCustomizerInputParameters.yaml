---
modelFingerprint: "F03F33A6AB3CCE42C0393D9C4079CF71"
targetClass:
  fullClassName: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
methods:
- method:
    name: "apply"
    sourceCodeSignature: "HttpServer apply(HttpServer server)"
    returnType: "reactor.netty.http.server.HttpServer"
    parameters:
    - name: "server"
      type: "reactor.netty.http.server.HttpServer"
    instructionFingerprint: "BC0353E8753CC5CAA366402F2731A6A0"
  paths:
  - pathId: "path1"
    testPathName: "applyTest"
    constructorSignature: "<init>(org.springframework.boot.web.server.Http2,org.springframework.boot.web.server.Ssl$ClientAuth,org.springframework.boot.ssl.SslBundle)\
      \ : void"
    modelFingerprint: "9BE686EEEC3CA8BC2B35683DF8D7F45C"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "DFAB62FA5EB96559F1DFFC6F9D84D165"
      valueUuid: "target"
    - type: "INPUT"
      name: "server"
      modelFingerprint: "A4E1067D3FAADFDF78F188E5448EFBD6"
      valueUuid: "server"
    - type: "STATIC"
      name: "Ssl.ClientAuth.class.real"
      modelFingerprint: "E9FCD56EC15B26F6D045B5883C2A5A16"
      valueUuid: "Ssl.ClientAuth.class.real"
      methodExercised:
        expression: "map(clientAuth:clientAuth,none:Enum-io.netty.handler.ssl.ClientAuth-NONE,want:Enum-io.netty.handler.ssl.ClientAuth-OPTIONAL,need:Enum-io.netty.handler.ssl.ClientAuth-REQUIRE):clientAuth2"
        staticAccess: true
    - type: "FIELD"
      name: "http2"
      modelFingerprint: "9E4594DBA1DEFFA6967F6DD1CEA62DED"
      valueUuid: "http2"
      methodExercised:
        expression: "isEnabled():enabled"
    - type: "LOCAL_VARIABLE"
      name: "sslBundle"
      modelFingerprint: "DC8480E3842FCCB68F29E3DD8A77CD51"
      valueUuid: "sslBundle"
      methodExercised:
        expression: "getManagers():sslManagerBundle"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "FBAB39F1C10E18FDEBBD081FA46DCA8E"
      valueUuid: "sslManagerBundle"
      methodExercised:
        expression: "getKeyManagerFactory():keyManagerFactory"
    - type: "STATIC"
      name: "Http2SslContextSpec.class"
      modelFingerprint: "DF633EA5CA4AC70F500082F5FE512DBA"
      valueUuid: "Http2SslContextSpec.class"
      methodExercised:
        expression: "forServer(keyManagerFactory:keyManagerFactory):http2SslContextSpec"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "sslBundle"
      modelFingerprint: "DC8480E3842FCCB68F29E3DD8A77CD51"
      valueUuid: "sslBundle"
      methodExercised:
        expression: "getManagers():sslManagerBundle2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "0C773518FF3D9A2A28B1281FA4102501"
      valueUuid: "sslManagerBundle2"
      methodExercised:
        expression: "getTrustManagerFactory():trustManagerFactory"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "218C246F5FB589BAB9EDCEB09799AFD9"
      valueUuid: "sslContextBuilder"
      methodExercised:
        expression: "trustManager(trustManagerFactory:trustManagerFactory):sslContextBuilder2"
    - type: "LOCAL_VARIABLE"
      name: "sslBundle"
      modelFingerprint: "8B50072218265B4159EA5BC2B13C4F63"
      valueUuid: "sslBundle"
      methodExercised:
        expression: "getOptions():sslOptions"
    - type: "LOCAL_VARIABLE"
      name: "options"
      modelFingerprint: "64C9161995BBED0B41AB11A83AA25EDC"
      valueUuid: "sslOptions"
      methodExercised:
        expression: "getEnabledProtocols():stringArray"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "3C2B754BE07CDBCE761653023B77FE26"
      valueUuid: "sslContextBuilder"
      methodExercised:
        expression: "protocols(protocols:stringArray):sslContextBuilder3"
    - type: "LOCAL_VARIABLE"
      name: "options"
      modelFingerprint: "E3C4A99D1E2152F69729FACFD6418113"
      valueUuid: "sslOptions"
      methodExercised:
        expression: "getCiphers():stringArray2"
    - type: "STATIC"
      name: "SslOptions.class.real"
      modelFingerprint: "8A345E37670FE911716202FF12097BB1"
      valueUuid: "SslOptions.class.real"
      methodExercised:
        expression: "asSet(array:stringArray2):set"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "78A2F08CDA19412C79677BD65F70C42C"
      valueUuid: "sslContextBuilder"
      methodExercised:
        expression: "ciphers(ciphers:set):sslContextBuilder4"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "9961867BF38334131109A77C2F2CB646"
      valueUuid: "sslContextBuilder"
      methodExercised:
        expression: "clientAuth(clientAuth:clientAuth2):sslContextBuilder5"
    - type: "LOCAL_VARIABLE"
      name: "sslContextSpec"
      modelFingerprint: "D9B3EABB4DA6D61FCB2009E853DC4E70"
      valueUuid: "http2SslContextSpec"
      methodExercised:
        expression: "configure(sslCtxBuilder:uniqueUuid1):abstractProtocolSslContextSpec"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "424F6AC77CE369E6960F0C519B467F29"
      valueUuid: "sslProvider.SslContextSpec"
      methodExercised:
        expression: "sslContext(arg0:abstractProtocolSslContextSpec):sslProvider.Builder"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "0BBB0686CC2B62ED2171E14C87F22F05"
      valueUuid: "sslProvider.Builder"
      methodExercised:
        expression: "build():sslProvider"
    - type: "FIELD"
      name: "sslProvider"
      modelFingerprint: "D0503D705B591F194C7313DBAB1414BD"
      valueUuid: "sslProvider"
      methodExercised:
        expression: "getSslContext():sslContext"
    - type: "LOCAL_VARIABLE"
      name: "spec"
      modelFingerprint: "D7390D71C848F8E813B731E412204533"
      valueUuid: "sslProvider.SslContextSpec2"
      methodExercised:
        expression: "sslContext(arg0:sslContext):sslProvider.Builder2"
    - type: "LOCAL_VARIABLE"
      name: "promise"
      modelFingerprint: "4975CDA0074E5FC6CA1F71C6D4B4E940"
      valueUuid: "promise"
      methodExercised:
        expression: "setSuccess(arg0:sslProvider):promise2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "435C26FF324CE759CBA5139B23434BB7"
      valueUuid: "sslProvider.Builder2"
      methodExercised:
        expression: "setSniAsyncMappings(arg0:uniqueUuid2):sslProvider.Builder3"
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "0A8D9302C327ABA3E9AAEAD6BE842E6D"
      valueUuid: "server"
      methodExercised:
        expression: "secure(sslProviderBuilder:uniqueUuid3):httpServer"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B676716AA27AA0693153D07BD7989D79"
      valueUuid: "httpServer"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_POTENTIAL_HARM_FULL_SYSTEM_CALL"
      source: ".setSniAsyncMappings((domainName, promise) -> promise.setSuccess(this.sslProvider));"
      lineNumber: 73
      details: "Potential harmful system call (Promise.setSuccess) detected; Learn\
        \ more: https://github.com/Sapient-AI/docs#disabled-generated-tests"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
        parameters:
        - name: "http2"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.server.Http2"
              parameters: []
              propertiesMap:
                enabled:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: true
                  valueType: "boolean"
                  uuid: "enabled"
            valueType: "org.springframework.boot.web.server.Http2"
            uuid: "http2"
        - name: "clientAuth"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NEED"
            valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
            uuid: "clientAuth"
        - name: "sslBundle"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "sslBundle"
        propertiesMap:
          sslProvider:
            sapientType: "MOCK"
            valueType: "reactor.netty.tcp.SslProvider"
            uuid: "sslProvider"
      valueType: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "server"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
      uuid: "Ssl.ClientAuth.class.real"
    - sapientType: "ENUM"
      content: !<regular>
        value: "REQUIRE"
      valueType: "io.netty.handler.ssl.ClientAuth"
      uuid: "clientAuth2"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NEED"
      valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
      uuid: "clientAuth"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "io.netty.handler.ssl.ClientAuth"
      uuid: "Enum-io.netty.handler.ssl.ClientAuth-NONE"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "OPTIONAL"
      valueType: "io.netty.handler.ssl.ClientAuth"
      uuid: "Enum-io.netty.handler.ssl.ClientAuth-OPTIONAL"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "REQUIRE"
      valueType: "io.netty.handler.ssl.ClientAuth"
      uuid: "Enum-io.netty.handler.ssl.ClientAuth-REQUIRE"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Http2"
        parameters: []
        propertiesMap:
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "enabled"
      valueType: "org.springframework.boot.web.server.Http2"
      uuid: "http2"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "enabled"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslManagerBundle"
      uuid: "sslManagerBundle"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslManagerBundle"
      uuid: "sslManagerBundle"
    - sapientType: "MOCK"
      valueType: "javax.net.ssl.KeyManagerFactory"
      uuid: "keyManagerFactory"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.Http2SslContextSpec"
      uuid: "Http2SslContextSpec.class"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.Http2SslContextSpec"
      uuid: "http2SslContextSpec"
    - sapientType: "MOCK"
      valueType: "javax.net.ssl.KeyManagerFactory"
      uuid: "keyManagerFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslManagerBundle"
      uuid: "sslManagerBundle2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslManagerBundle"
      uuid: "sslManagerBundle2"
    - sapientType: "MOCK"
      valueType: "javax.net.ssl.TrustManagerFactory"
      uuid: "trustManagerFactory"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder2"
    - sapientType: "MOCK"
      valueType: "javax.net.ssl.TrustManagerFactory"
      uuid: "trustManagerFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "sslOptions"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "sslOptions"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder3"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "sslOptions"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray2"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "SslOptions.class.real"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.String"
      uuid: "set"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray2"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder4"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.String"
      uuid: "set"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder5"
    - sapientType: "ENUM"
      content: !<regular>
        value: "REQUIRE"
      valueType: "io.netty.handler.ssl.ClientAuth"
      uuid: "clientAuth2"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.Http2SslContextSpec"
      uuid: "http2SslContextSpec"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.AbstractProtocolSslContextSpec"
      uuid: "abstractProtocolSslContextSpec"
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid1"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.SslProvider$SslContextSpec"
      uuid: "sslProvider.SslContextSpec"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.SslProvider$Builder"
      uuid: "sslProvider.Builder"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.AbstractProtocolSslContextSpec"
      uuid: "abstractProtocolSslContextSpec"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.SslProvider$Builder"
      uuid: "sslProvider.Builder"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.SslProvider"
      uuid: "sslProvider"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.SslProvider"
      uuid: "sslProvider"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContext"
      uuid: "sslContext"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.SslProvider$SslContextSpec"
      uuid: "sslProvider.SslContextSpec2"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.SslProvider$Builder"
      uuid: "sslProvider.Builder2"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContext"
      uuid: "sslContext"
    - sapientType: "MOCK"
      valueType: "io.netty.util.concurrent.Promise"
      uuid: "promise"
    - sapientType: "MOCK"
      valueType: "io.netty.util.concurrent.Promise"
      uuid: "promise2"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.SslProvider"
      uuid: "sslProvider"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.SslProvider$Builder"
      uuid: "sslProvider.Builder2"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.SslProvider$Builder"
      uuid: "sslProvider.Builder3"
    - sapientType: "ANY"
      valueType: "io.netty.util.AsyncMapping"
      genericValueType: "java.lang.String,reactor.netty.tcp.SslProvider"
      uuid: "uniqueUuid2"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "server"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer"
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      genericValueType: "? super reactor.netty.tcp.SslProvider$SslContextSpec"
      uuid: "uniqueUuid3"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer"
- method:
    name: "updateSslBundle"
    sourceCodeSignature: "void updateSslBundle(SslBundle sslBundle)"
    returnType: "void"
    parameters:
    - name: "sslBundle"
      type: "org.springframework.boot.ssl.SslBundle"
    instructionFingerprint: "6064BB7F279EEB338CF92EE29FC7E42B"
  paths:
  - pathId: "path1"
    testPathName: "updateSslBundleTest"
    constructorSignature: "<init>(org.springframework.boot.web.server.Http2,org.springframework.boot.web.server.Ssl$ClientAuth,org.springframework.boot.ssl.SslBundle)\
      \ : void"
    modelFingerprint: "88FC0C2B8678A14BA064B034E7D6CF8D"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "DFAB62FA5EB96559F1DFFC6F9D84D165"
      valueUuid: "target"
    - type: "INPUT"
      name: "sslBundle"
      modelFingerprint: "342B5E5262471CA8C6BA381A510A52AA"
      valueUuid: "sslBundle"
    - type: "STATIC"
      name: "Ssl.ClientAuth.class.real"
      modelFingerprint: "E9FCD56EC15B26F6D045B5883C2A5A16"
      valueUuid: "Ssl.ClientAuth.class.real"
      methodExercised:
        expression: "map(clientAuth:clientAuth,none:Enum-io.netty.handler.ssl.ClientAuth-NONE,want:Enum-io.netty.handler.ssl.ClientAuth-OPTIONAL,need:Enum-io.netty.handler.ssl.ClientAuth-REQUIRE):clientAuth2"
        staticAccess: true
    - type: "FIELD"
      name: "http2"
      modelFingerprint: "9E4594DBA1DEFFA6967F6DD1CEA62DED"
      valueUuid: "http2"
      methodExercised:
        expression: "isEnabled():enabled"
    - type: "LOCAL_VARIABLE"
      name: "sslBundle"
      modelFingerprint: "DC8480E3842FCCB68F29E3DD8A77CD51"
      valueUuid: "sslBundle2"
      methodExercised:
        expression: "getManagers():sslManagerBundle"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "FBAB39F1C10E18FDEBBD081FA46DCA8E"
      valueUuid: "sslManagerBundle"
      methodExercised:
        expression: "getKeyManagerFactory():keyManagerFactory"
    - type: "STATIC"
      name: "Http2SslContextSpec.class"
      modelFingerprint: "DF633EA5CA4AC70F500082F5FE512DBA"
      valueUuid: "Http2SslContextSpec.class"
      methodExercised:
        expression: "forServer(keyManagerFactory:keyManagerFactory):http2SslContextSpec"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "sslBundle"
      modelFingerprint: "DC8480E3842FCCB68F29E3DD8A77CD51"
      valueUuid: "sslBundle2"
      methodExercised:
        expression: "getManagers():sslManagerBundle2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "0C773518FF3D9A2A28B1281FA4102501"
      valueUuid: "sslManagerBundle2"
      methodExercised:
        expression: "getTrustManagerFactory():trustManagerFactory"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "218C246F5FB589BAB9EDCEB09799AFD9"
      valueUuid: "sslContextBuilder"
      methodExercised:
        expression: "trustManager(trustManagerFactory:trustManagerFactory):sslContextBuilder2"
    - type: "LOCAL_VARIABLE"
      name: "sslBundle"
      modelFingerprint: "8B50072218265B4159EA5BC2B13C4F63"
      valueUuid: "sslBundle2"
      methodExercised:
        expression: "getOptions():sslOptions"
    - type: "LOCAL_VARIABLE"
      name: "options"
      modelFingerprint: "64C9161995BBED0B41AB11A83AA25EDC"
      valueUuid: "sslOptions"
      methodExercised:
        expression: "getEnabledProtocols():stringArray"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "3C2B754BE07CDBCE761653023B77FE26"
      valueUuid: "sslContextBuilder"
      methodExercised:
        expression: "protocols(protocols:stringArray):sslContextBuilder3"
    - type: "LOCAL_VARIABLE"
      name: "options"
      modelFingerprint: "E3C4A99D1E2152F69729FACFD6418113"
      valueUuid: "sslOptions"
      methodExercised:
        expression: "getCiphers():stringArray2"
    - type: "STATIC"
      name: "SslOptions.class.real"
      modelFingerprint: "8A345E37670FE911716202FF12097BB1"
      valueUuid: "SslOptions.class.real"
      methodExercised:
        expression: "asSet(array:stringArray2):set"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "78A2F08CDA19412C79677BD65F70C42C"
      valueUuid: "sslContextBuilder"
      methodExercised:
        expression: "ciphers(ciphers:set):sslContextBuilder4"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "9961867BF38334131109A77C2F2CB646"
      valueUuid: "sslContextBuilder"
      methodExercised:
        expression: "clientAuth(clientAuth:clientAuth2):sslContextBuilder5"
    - type: "LOCAL_VARIABLE"
      name: "sslContextSpec"
      modelFingerprint: "D9B3EABB4DA6D61FCB2009E853DC4E70"
      valueUuid: "http2SslContextSpec"
      methodExercised:
        expression: "configure(sslCtxBuilder:uniqueUuid4):abstractProtocolSslContextSpec"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "424F6AC77CE369E6960F0C519B467F29"
      valueUuid: "sslProvider.SslContextSpec"
      methodExercised:
        expression: "sslContext(arg0:abstractProtocolSslContextSpec):sslProvider.Builder"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "2C5C66B1388D080757EFFA2A59500A22"
      valueUuid: "sslProvider.Builder"
      methodExercised:
        expression: "build():sslProvider"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "9FA78CCABF099635EFEE3BA0B561D386"
      methodExercised:
        expression: "createSslContextSpec(sslBundle:sslBundle):abstractProtocolSslContextSpec2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "354C35E63E84A0AD9DD426233CBD352A"
      valueUuid: "sslProvider.SslContextSpec2"
      methodExercised:
        expression: "sslContext(arg0:abstractProtocolSslContextSpec2):sslProvider.Builder2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "2C5C66B1388D080757EFFA2A59500A22"
      valueUuid: "sslProvider.Builder2"
      methodExercised:
        expression: "build():sslProvider2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_BUILDER_FUNCTION_NOT_ATTRIBUTE"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
        parameters:
        - name: "http2"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.server.Http2"
              parameters: []
              propertiesMap:
                enabled:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: true
                  valueType: "boolean"
                  uuid: "enabled"
            valueType: "org.springframework.boot.web.server.Http2"
            uuid: "http2"
        - name: "clientAuth"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NEED"
            valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
            uuid: "clientAuth"
        - name: "sslBundle"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "sslBundle2"
      valueType: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
      uuid: "Ssl.ClientAuth.class.real"
    - sapientType: "ENUM"
      content: !<regular>
        value: "REQUIRE"
      valueType: "io.netty.handler.ssl.ClientAuth"
      uuid: "clientAuth2"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NEED"
      valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
      uuid: "clientAuth"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "io.netty.handler.ssl.ClientAuth"
      uuid: "Enum-io.netty.handler.ssl.ClientAuth-NONE"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "OPTIONAL"
      valueType: "io.netty.handler.ssl.ClientAuth"
      uuid: "Enum-io.netty.handler.ssl.ClientAuth-OPTIONAL"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "REQUIRE"
      valueType: "io.netty.handler.ssl.ClientAuth"
      uuid: "Enum-io.netty.handler.ssl.ClientAuth-REQUIRE"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Http2"
        parameters: []
        propertiesMap:
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "enabled"
      valueType: "org.springframework.boot.web.server.Http2"
      uuid: "http2"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "enabled"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslManagerBundle"
      uuid: "sslManagerBundle"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslManagerBundle"
      uuid: "sslManagerBundle"
    - sapientType: "MOCK"
      valueType: "javax.net.ssl.KeyManagerFactory"
      uuid: "keyManagerFactory"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.Http2SslContextSpec"
      uuid: "Http2SslContextSpec.class"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.Http2SslContextSpec"
      uuid: "http2SslContextSpec"
    - sapientType: "MOCK"
      valueType: "javax.net.ssl.KeyManagerFactory"
      uuid: "keyManagerFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslManagerBundle"
      uuid: "sslManagerBundle2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslManagerBundle"
      uuid: "sslManagerBundle2"
    - sapientType: "MOCK"
      valueType: "javax.net.ssl.TrustManagerFactory"
      uuid: "trustManagerFactory"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder2"
    - sapientType: "MOCK"
      valueType: "javax.net.ssl.TrustManagerFactory"
      uuid: "trustManagerFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "sslOptions"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "sslOptions"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder3"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "sslOptions"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray2"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "SslOptions.class.real"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.String"
      uuid: "set"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray2"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder4"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.String"
      uuid: "set"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder5"
    - sapientType: "ENUM"
      content: !<regular>
        value: "REQUIRE"
      valueType: "io.netty.handler.ssl.ClientAuth"
      uuid: "clientAuth2"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.Http2SslContextSpec"
      uuid: "http2SslContextSpec"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.AbstractProtocolSslContextSpec"
      uuid: "abstractProtocolSslContextSpec"
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid4"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.SslProvider$SslContextSpec"
      uuid: "sslProvider.SslContextSpec"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.SslProvider$Builder"
      uuid: "sslProvider.Builder"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.AbstractProtocolSslContextSpec"
      uuid: "abstractProtocolSslContextSpec"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.SslProvider$Builder"
      uuid: "sslProvider.Builder"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.SslProvider"
      uuid: "sslProvider"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.AbstractProtocolSslContextSpec"
      genericValueType: "?"
      uuid: "abstractProtocolSslContextSpec2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.SslProvider$SslContextSpec"
      uuid: "sslProvider.SslContextSpec2"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.SslProvider$Builder"
      uuid: "sslProvider.Builder2"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.AbstractProtocolSslContextSpec"
      genericValueType: "?"
      uuid: "abstractProtocolSslContextSpec2"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.SslProvider$Builder"
      uuid: "sslProvider.Builder2"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.SslProvider"
      uuid: "sslProvider2"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "createSslContextSpec"
    sourceCodeSignature: "AbstractProtocolSslContextSpec<?> createSslContextSpec()"
    returnType: "reactor.netty.tcp.AbstractProtocolSslContextSpec"
    genericReturnType: "?"
    instructionFingerprint: "B7FA5316006A24D238D701F20DAE49AE"
  paths:
  - pathId: "path1"
    testPathName: "createSslContextSpecTest"
    constructorSignature: "<init>(org.springframework.boot.web.server.Http2,org.springframework.boot.web.server.Ssl$ClientAuth,org.springframework.boot.ssl.SslBundle)\
      \ : void"
    modelFingerprint: "4D101BAF994967302686F8497C5B9E57"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "DFAB62FA5EB96559F1DFFC6F9D84D165"
      valueUuid: "target"
    - type: "STATIC"
      name: "Ssl.ClientAuth.class.real"
      modelFingerprint: "E9FCD56EC15B26F6D045B5883C2A5A16"
      valueUuid: "Ssl.ClientAuth.class.real"
      methodExercised:
        expression: "map(clientAuth:clientAuth,none:Enum-io.netty.handler.ssl.ClientAuth-NONE,want:Enum-io.netty.handler.ssl.ClientAuth-OPTIONAL,need:Enum-io.netty.handler.ssl.ClientAuth-REQUIRE):clientAuth2"
        staticAccess: true
    - type: "FIELD"
      name: "http2"
      modelFingerprint: "9E4594DBA1DEFFA6967F6DD1CEA62DED"
      valueUuid: "http2"
      methodExercised:
        expression: "isEnabled():enabled"
    - type: "LOCAL_VARIABLE"
      name: "sslBundle"
      modelFingerprint: "DC8480E3842FCCB68F29E3DD8A77CD51"
      valueUuid: "sslBundle"
      methodExercised:
        expression: "getManagers():sslManagerBundle"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "FBAB39F1C10E18FDEBBD081FA46DCA8E"
      valueUuid: "sslManagerBundle"
      methodExercised:
        expression: "getKeyManagerFactory():keyManagerFactory"
    - type: "STATIC"
      name: "Http2SslContextSpec.class"
      modelFingerprint: "DF633EA5CA4AC70F500082F5FE512DBA"
      valueUuid: "Http2SslContextSpec.class"
      methodExercised:
        expression: "forServer(keyManagerFactory:keyManagerFactory):http2SslContextSpec"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "sslBundle"
      modelFingerprint: "DC8480E3842FCCB68F29E3DD8A77CD51"
      valueUuid: "sslBundle"
      methodExercised:
        expression: "getManagers():sslManagerBundle2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "0C773518FF3D9A2A28B1281FA4102501"
      valueUuid: "sslManagerBundle2"
      methodExercised:
        expression: "getTrustManagerFactory():trustManagerFactory"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "218C246F5FB589BAB9EDCEB09799AFD9"
      valueUuid: "sslContextBuilder"
      methodExercised:
        expression: "trustManager(trustManagerFactory:trustManagerFactory):sslContextBuilder2"
    - type: "LOCAL_VARIABLE"
      name: "sslBundle"
      modelFingerprint: "8B50072218265B4159EA5BC2B13C4F63"
      valueUuid: "sslBundle"
      methodExercised:
        expression: "getOptions():sslOptions"
    - type: "LOCAL_VARIABLE"
      name: "options"
      modelFingerprint: "64C9161995BBED0B41AB11A83AA25EDC"
      valueUuid: "sslOptions"
      methodExercised:
        expression: "getEnabledProtocols():stringArray"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "3C2B754BE07CDBCE761653023B77FE26"
      valueUuid: "sslContextBuilder"
      methodExercised:
        expression: "protocols(protocols:stringArray):sslContextBuilder3"
    - type: "LOCAL_VARIABLE"
      name: "options"
      modelFingerprint: "E3C4A99D1E2152F69729FACFD6418113"
      valueUuid: "sslOptions"
      methodExercised:
        expression: "getCiphers():stringArray2"
    - type: "STATIC"
      name: "SslOptions.class.real"
      modelFingerprint: "8A345E37670FE911716202FF12097BB1"
      valueUuid: "SslOptions.class.real"
      methodExercised:
        expression: "asSet(array:stringArray2):set"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "78A2F08CDA19412C79677BD65F70C42C"
      valueUuid: "sslContextBuilder"
      methodExercised:
        expression: "ciphers(ciphers:set):sslContextBuilder4"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "9961867BF38334131109A77C2F2CB646"
      valueUuid: "sslContextBuilder"
      methodExercised:
        expression: "clientAuth(clientAuth:clientAuth2):sslContextBuilder5"
    - type: "LOCAL_VARIABLE"
      name: "sslContextSpec"
      modelFingerprint: "D9B3EABB4DA6D61FCB2009E853DC4E70"
      valueUuid: "http2SslContextSpec"
      methodExercised:
        expression: "configure(sslCtxBuilder:uniqueUuid5):abstractProtocolSslContextSpec"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "424F6AC77CE369E6960F0C519B467F29"
      valueUuid: "sslProvider.SslContextSpec"
      methodExercised:
        expression: "sslContext(arg0:abstractProtocolSslContextSpec):sslProvider.Builder"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "2C5C66B1388D080757EFFA2A59500A22"
      valueUuid: "sslProvider.Builder"
      methodExercised:
        expression: "build():sslProvider"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "EFCBAF1EFED055378E7B72BC25F69B07"
      methodExercised:
        expression: "createSslContextSpec(sslBundle:sslBundle):abstractProtocolSslContextSpec2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "4C485807416C495532E04F2630B738D1"
      valueUuid: "abstractProtocolSslContextSpec2"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_BUILDER_FUNCTION_NOT_ATTRIBUTE"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
        parameters:
        - name: "http2"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.server.Http2"
              parameters: []
              propertiesMap:
                enabled:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: true
                  valueType: "boolean"
                  uuid: "enabled"
            valueType: "org.springframework.boot.web.server.Http2"
            uuid: "http2"
        - name: "clientAuth"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NEED"
            valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
            uuid: "clientAuth"
        - name: "sslBundle"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "sslBundle"
      valueType: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
      uuid: "Ssl.ClientAuth.class.real"
    - sapientType: "ENUM"
      content: !<regular>
        value: "REQUIRE"
      valueType: "io.netty.handler.ssl.ClientAuth"
      uuid: "clientAuth2"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NEED"
      valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
      uuid: "clientAuth"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "io.netty.handler.ssl.ClientAuth"
      uuid: "Enum-io.netty.handler.ssl.ClientAuth-NONE"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "OPTIONAL"
      valueType: "io.netty.handler.ssl.ClientAuth"
      uuid: "Enum-io.netty.handler.ssl.ClientAuth-OPTIONAL"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "REQUIRE"
      valueType: "io.netty.handler.ssl.ClientAuth"
      uuid: "Enum-io.netty.handler.ssl.ClientAuth-REQUIRE"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Http2"
        parameters: []
        propertiesMap:
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "enabled"
      valueType: "org.springframework.boot.web.server.Http2"
      uuid: "http2"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "enabled"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslManagerBundle"
      uuid: "sslManagerBundle"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslManagerBundle"
      uuid: "sslManagerBundle"
    - sapientType: "MOCK"
      valueType: "javax.net.ssl.KeyManagerFactory"
      uuid: "keyManagerFactory"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.Http2SslContextSpec"
      uuid: "Http2SslContextSpec.class"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.Http2SslContextSpec"
      uuid: "http2SslContextSpec"
    - sapientType: "MOCK"
      valueType: "javax.net.ssl.KeyManagerFactory"
      uuid: "keyManagerFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslManagerBundle"
      uuid: "sslManagerBundle2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslManagerBundle"
      uuid: "sslManagerBundle2"
    - sapientType: "MOCK"
      valueType: "javax.net.ssl.TrustManagerFactory"
      uuid: "trustManagerFactory"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder2"
    - sapientType: "MOCK"
      valueType: "javax.net.ssl.TrustManagerFactory"
      uuid: "trustManagerFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "sslOptions"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "sslOptions"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder3"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "sslOptions"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray2"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "SslOptions.class.real"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.String"
      uuid: "set"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray2"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder4"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.String"
      uuid: "set"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder5"
    - sapientType: "ENUM"
      content: !<regular>
        value: "REQUIRE"
      valueType: "io.netty.handler.ssl.ClientAuth"
      uuid: "clientAuth2"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.Http2SslContextSpec"
      uuid: "http2SslContextSpec"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.AbstractProtocolSslContextSpec"
      uuid: "abstractProtocolSslContextSpec"
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid5"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.SslProvider$SslContextSpec"
      uuid: "sslProvider.SslContextSpec"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.SslProvider$Builder"
      uuid: "sslProvider.Builder"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.AbstractProtocolSslContextSpec"
      uuid: "abstractProtocolSslContextSpec"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.SslProvider$Builder"
      uuid: "sslProvider.Builder"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.SslProvider"
      uuid: "sslProvider"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.AbstractProtocolSslContextSpec"
      genericValueType: "?"
      uuid: "abstractProtocolSslContextSpec2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.AbstractProtocolSslContextSpec"
      genericValueType: "?"
      uuid: "abstractProtocolSslContextSpec2"
- method:
    name: "createSslContextSpec"
    sourceCodeSignature: "AbstractProtocolSslContextSpec<?> createSslContextSpec(SslBundle\
      \ sslBundle)"
    returnType: "reactor.netty.tcp.AbstractProtocolSslContextSpec"
    genericReturnType: "?"
    parameters:
    - name: "sslBundle"
      type: "org.springframework.boot.ssl.SslBundle"
    instructionFingerprint: "0C66B7A0DD02456367798E07AFCD2E26"
  paths:
  - pathId: "path2"
    testPathName: "createSslContextSpec1WhenThisHttp2IsNull"
    constructorSignature: "<init>(org.springframework.boot.web.server.Http2,org.springframework.boot.web.server.Ssl$ClientAuth,org.springframework.boot.ssl.SslBundle)\
      \ : void"
    modelFingerprint: "A747FFA305606DA685EEAD77045D24E0"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "014F65BDAA0E5D449157C3CFF9427E5B"
      valueUuid: "target"
    - type: "INPUT"
      name: "sslBundle"
      modelFingerprint: "7DBE9A89C45B8DC7FFA8424BB77942A3"
      valueUuid: "sslBundle2"
    - type: "STATIC"
      name: "Ssl.ClientAuth.class.real"
      modelFingerprint: "E9FCD56EC15B26F6D045B5883C2A5A16"
      valueUuid: "Ssl.ClientAuth.class.real"
      methodExercised:
        expression: "map(clientAuth:clientAuth,none:Enum-io.netty.handler.ssl.ClientAuth-NONE,want:Enum-io.netty.handler.ssl.ClientAuth-OPTIONAL,need:Enum-io.netty.handler.ssl.ClientAuth-REQUIRE):clientAuth2"
        staticAccess: true
    - type: "FIELD"
      name: "http2"
      modelFingerprint: "70457D0AFA23004839183B3BD7BC0302"
      valueUuid: "http2"
      methodExercised:
        expression: "isEnabled():enabled"
    - type: "LOCAL_VARIABLE"
      name: "sslBundle"
      modelFingerprint: "DC8480E3842FCCB68F29E3DD8A77CD51"
      valueUuid: "sslBundle2"
      methodExercised:
        expression: "getManagers():sslManagerBundle"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "FBAB39F1C10E18FDEBBD081FA46DCA8E"
      valueUuid: "sslManagerBundle"
      methodExercised:
        expression: "getKeyManagerFactory():keyManagerFactory"
    - type: "STATIC"
      name: "Http2SslContextSpec.class"
      modelFingerprint: "DF633EA5CA4AC70F500082F5FE512DBA"
      valueUuid: "Http2SslContextSpec.class"
      methodExercised:
        expression: "forServer(keyManagerFactory:keyManagerFactory):http2SslContextSpec"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "sslBundle"
      modelFingerprint: "DC8480E3842FCCB68F29E3DD8A77CD51"
      valueUuid: "sslBundle2"
      methodExercised:
        expression: "getManagers():sslManagerBundle2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "0C773518FF3D9A2A28B1281FA4102501"
      valueUuid: "sslManagerBundle2"
      methodExercised:
        expression: "getTrustManagerFactory():trustManagerFactory"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "218C246F5FB589BAB9EDCEB09799AFD9"
      valueUuid: "sslContextBuilder"
      methodExercised:
        expression: "trustManager(trustManagerFactory:trustManagerFactory):sslContextBuilder2"
    - type: "LOCAL_VARIABLE"
      name: "sslBundle"
      modelFingerprint: "8B50072218265B4159EA5BC2B13C4F63"
      valueUuid: "sslBundle2"
      methodExercised:
        expression: "getOptions():sslOptions"
    - type: "LOCAL_VARIABLE"
      name: "options"
      modelFingerprint: "64C9161995BBED0B41AB11A83AA25EDC"
      valueUuid: "sslOptions"
      methodExercised:
        expression: "getEnabledProtocols():stringArray"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "3C2B754BE07CDBCE761653023B77FE26"
      valueUuid: "sslContextBuilder"
      methodExercised:
        expression: "protocols(protocols:stringArray):sslContextBuilder3"
    - type: "LOCAL_VARIABLE"
      name: "options"
      modelFingerprint: "E3C4A99D1E2152F69729FACFD6418113"
      valueUuid: "sslOptions"
      methodExercised:
        expression: "getCiphers():stringArray2"
    - type: "STATIC"
      name: "SslOptions.class.real"
      modelFingerprint: "8A345E37670FE911716202FF12097BB1"
      valueUuid: "SslOptions.class.real"
      methodExercised:
        expression: "asSet(array:stringArray2):set"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "78A2F08CDA19412C79677BD65F70C42C"
      valueUuid: "sslContextBuilder"
      methodExercised:
        expression: "ciphers(ciphers:set):sslContextBuilder4"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "9961867BF38334131109A77C2F2CB646"
      valueUuid: "sslContextBuilder"
      methodExercised:
        expression: "clientAuth(clientAuth:clientAuth2):sslContextBuilder5"
    - type: "LOCAL_VARIABLE"
      name: "sslContextSpec"
      modelFingerprint: "D9B3EABB4DA6D61FCB2009E853DC4E70"
      valueUuid: "http2SslContextSpec"
      methodExercised:
        expression: "configure(sslCtxBuilder:uniqueUuid6):abstractProtocolSslContextSpec"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "424F6AC77CE369E6960F0C519B467F29"
      valueUuid: "sslProvider.SslContextSpec"
      methodExercised:
        expression: "sslContext(arg0:abstractProtocolSslContextSpec):sslProvider.Builder"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "2C5C66B1388D080757EFFA2A59500A22"
      valueUuid: "sslProvider.Builder"
      methodExercised:
        expression: "build():sslProvider"
    - type: "LOCAL_VARIABLE"
      name: "sslBundle"
      modelFingerprint: "DC8480E3842FCCB68F29E3DD8A77CD51"
      valueUuid: "sslBundle2"
      methodExercised:
        expression: "getManagers():sslManagerBundle3"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "FBAB39F1C10E18FDEBBD081FA46DCA8E"
      valueUuid: "sslManagerBundle3"
      methodExercised:
        expression: "getKeyManagerFactory():keyManagerFactory2"
    - type: "STATIC"
      name: "Http11SslContextSpec.class"
      modelFingerprint: "1BFDE1BF12B5D0E7F0F3CF41DC98E37A"
      valueUuid: "Http11SslContextSpec.class"
      methodExercised:
        expression: "forServer(keyManagerFactory:keyManagerFactory2):http11SslContextSpec"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "sslBundle"
      modelFingerprint: "DC8480E3842FCCB68F29E3DD8A77CD51"
      valueUuid: "sslBundle2"
      methodExercised:
        expression: "getManagers():sslManagerBundle4"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "0C773518FF3D9A2A28B1281FA4102501"
      valueUuid: "sslManagerBundle4"
      methodExercised:
        expression: "getTrustManagerFactory():trustManagerFactory2"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "218C246F5FB589BAB9EDCEB09799AFD9"
      valueUuid: "sslContextBuilder6"
      methodExercised:
        expression: "trustManager(trustManagerFactory:trustManagerFactory2):sslContextBuilder7"
    - type: "LOCAL_VARIABLE"
      name: "sslBundle"
      modelFingerprint: "8B50072218265B4159EA5BC2B13C4F63"
      valueUuid: "sslBundle2"
      methodExercised:
        expression: "getOptions():sslOptions2"
    - type: "LOCAL_VARIABLE"
      name: "options"
      modelFingerprint: "64C9161995BBED0B41AB11A83AA25EDC"
      valueUuid: "sslOptions2"
      methodExercised:
        expression: "getEnabledProtocols():stringArray3"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "3C2B754BE07CDBCE761653023B77FE26"
      valueUuid: "sslContextBuilder6"
      methodExercised:
        expression: "protocols(protocols:stringArray3):sslContextBuilder8"
    - type: "LOCAL_VARIABLE"
      name: "options"
      modelFingerprint: "E3C4A99D1E2152F69729FACFD6418113"
      valueUuid: "sslOptions2"
      methodExercised:
        expression: "getCiphers():stringArray4"
    - type: "STATIC"
      name: "SslOptions.class.real"
      modelFingerprint: "8A345E37670FE911716202FF12097BB1"
      valueUuid: "SslOptions.class.real"
      methodExercised:
        expression: "asSet(array:stringArray4):set2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "78A2F08CDA19412C79677BD65F70C42C"
      valueUuid: "sslContextBuilder6"
      methodExercised:
        expression: "ciphers(ciphers:set2):sslContextBuilder9"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "9961867BF38334131109A77C2F2CB646"
      valueUuid: "sslContextBuilder6"
      methodExercised:
        expression: "clientAuth(clientAuth:clientAuth2):sslContextBuilder10"
    - type: "LOCAL_VARIABLE"
      name: "sslContextSpec"
      modelFingerprint: "A223300ACC81AAFABACB4D7F743CD2A5"
      valueUuid: "http11SslContextSpec"
      methodExercised:
        expression: "configure(sslCtxBuilder:uniqueUuid7):abstractProtocolSslContextSpec2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "999EC6814C28249EE0866C17FAE2E181"
      valueUuid: "abstractProtocolSslContextSpec2"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_BUILDER_FUNCTION_NOT_ATTRIBUTE"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
        parameters:
        - name: "http2"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.web.server.Http2"
            uuid: "http2"
            fixed: true
        - name: "clientAuth"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NEED"
            valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
            uuid: "clientAuth"
        - name: "sslBundle"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "sslBundle2"
      valueType: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle2"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
      uuid: "Ssl.ClientAuth.class.real"
    - sapientType: "ENUM"
      content: !<regular>
        value: "REQUIRE"
      valueType: "io.netty.handler.ssl.ClientAuth"
      uuid: "clientAuth2"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NEED"
      valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
      uuid: "clientAuth"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "io.netty.handler.ssl.ClientAuth"
      uuid: "Enum-io.netty.handler.ssl.ClientAuth-NONE"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "OPTIONAL"
      valueType: "io.netty.handler.ssl.ClientAuth"
      uuid: "Enum-io.netty.handler.ssl.ClientAuth-OPTIONAL"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "REQUIRE"
      valueType: "io.netty.handler.ssl.ClientAuth"
      uuid: "Enum-io.netty.handler.ssl.ClientAuth-REQUIRE"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.boot.web.server.Http2"
      uuid: "http2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "enabled"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslManagerBundle"
      uuid: "sslManagerBundle"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslManagerBundle"
      uuid: "sslManagerBundle"
    - sapientType: "MOCK"
      valueType: "javax.net.ssl.KeyManagerFactory"
      uuid: "keyManagerFactory"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.Http2SslContextSpec"
      uuid: "Http2SslContextSpec.class"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.Http2SslContextSpec"
      uuid: "http2SslContextSpec"
    - sapientType: "MOCK"
      valueType: "javax.net.ssl.KeyManagerFactory"
      uuid: "keyManagerFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslManagerBundle"
      uuid: "sslManagerBundle2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslManagerBundle"
      uuid: "sslManagerBundle2"
    - sapientType: "MOCK"
      valueType: "javax.net.ssl.TrustManagerFactory"
      uuid: "trustManagerFactory"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder2"
    - sapientType: "MOCK"
      valueType: "javax.net.ssl.TrustManagerFactory"
      uuid: "trustManagerFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "sslOptions"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "sslOptions"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder3"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "sslOptions"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray2"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "SslOptions.class.real"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.String"
      uuid: "set"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray2"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder4"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.String"
      uuid: "set"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder5"
    - sapientType: "ENUM"
      content: !<regular>
        value: "REQUIRE"
      valueType: "io.netty.handler.ssl.ClientAuth"
      uuid: "clientAuth2"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.Http2SslContextSpec"
      uuid: "http2SslContextSpec"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.AbstractProtocolSslContextSpec"
      uuid: "abstractProtocolSslContextSpec"
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid6"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.SslProvider$SslContextSpec"
      uuid: "sslProvider.SslContextSpec"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.SslProvider$Builder"
      uuid: "sslProvider.Builder"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.AbstractProtocolSslContextSpec"
      uuid: "abstractProtocolSslContextSpec"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.SslProvider$Builder"
      uuid: "sslProvider.Builder"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.SslProvider"
      uuid: "sslProvider"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslManagerBundle"
      uuid: "sslManagerBundle3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslManagerBundle"
      uuid: "sslManagerBundle3"
    - sapientType: "MOCK"
      valueType: "javax.net.ssl.KeyManagerFactory"
      uuid: "keyManagerFactory2"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.Http11SslContextSpec"
      uuid: "Http11SslContextSpec.class"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.Http11SslContextSpec"
      uuid: "http11SslContextSpec"
    - sapientType: "MOCK"
      valueType: "javax.net.ssl.KeyManagerFactory"
      uuid: "keyManagerFactory2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslManagerBundle"
      uuid: "sslManagerBundle4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslManagerBundle"
      uuid: "sslManagerBundle4"
    - sapientType: "MOCK"
      valueType: "javax.net.ssl.TrustManagerFactory"
      uuid: "trustManagerFactory2"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder6"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder7"
    - sapientType: "MOCK"
      valueType: "javax.net.ssl.TrustManagerFactory"
      uuid: "trustManagerFactory2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "sslOptions2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "sslOptions2"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray3"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder6"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder8"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "sslOptions2"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray4"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "SslOptions.class.real"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.String"
      uuid: "set2"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray4"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder6"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder9"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.String"
      uuid: "set2"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder6"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder10"
    - sapientType: "ENUM"
      content: !<regular>
        value: "REQUIRE"
      valueType: "io.netty.handler.ssl.ClientAuth"
      uuid: "clientAuth2"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.Http11SslContextSpec"
      uuid: "http11SslContextSpec"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.AbstractProtocolSslContextSpec"
      uuid: "abstractProtocolSslContextSpec2"
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid7"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.AbstractProtocolSslContextSpec"
      uuid: "abstractProtocolSslContextSpec2"
    branches:
    - lineNumber: 104
      expression: "this.http2 != null"
      range: "(104,55)-(104,72)"
      evaluatedAs: false
  - pathId: "path1"
    testPathName: "createSslContextSpec1WhenThisHttp2IsEnabled"
    constructorSignature: "<init>(org.springframework.boot.web.server.Http2,org.springframework.boot.web.server.Ssl$ClientAuth,org.springframework.boot.ssl.SslBundle)\
      \ : void"
    modelFingerprint: "1CF56ED2FB63EE1715C535C1EF49C68F"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "DFAB62FA5EB96559F1DFFC6F9D84D165"
      valueUuid: "target"
    - type: "INPUT"
      name: "sslBundle"
      modelFingerprint: "7DBE9A89C45B8DC7FFA8424BB77942A3"
      valueUuid: "sslBundle2"
    - type: "STATIC"
      name: "Ssl.ClientAuth.class.real"
      modelFingerprint: "E9FCD56EC15B26F6D045B5883C2A5A16"
      valueUuid: "Ssl.ClientAuth.class.real"
      methodExercised:
        expression: "map(clientAuth:clientAuth,none:Enum-io.netty.handler.ssl.ClientAuth-NONE,want:Enum-io.netty.handler.ssl.ClientAuth-OPTIONAL,need:Enum-io.netty.handler.ssl.ClientAuth-REQUIRE):clientAuth2"
        staticAccess: true
    - type: "FIELD"
      name: "http2"
      modelFingerprint: "9E4594DBA1DEFFA6967F6DD1CEA62DED"
      valueUuid: "http2"
      methodExercised:
        expression: "isEnabled():enabled"
    - type: "LOCAL_VARIABLE"
      name: "sslBundle"
      modelFingerprint: "DC8480E3842FCCB68F29E3DD8A77CD51"
      valueUuid: "sslBundle2"
      methodExercised:
        expression: "getManagers():sslManagerBundle"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "FBAB39F1C10E18FDEBBD081FA46DCA8E"
      valueUuid: "sslManagerBundle"
      methodExercised:
        expression: "getKeyManagerFactory():keyManagerFactory"
    - type: "STATIC"
      name: "Http2SslContextSpec.class"
      modelFingerprint: "DF633EA5CA4AC70F500082F5FE512DBA"
      valueUuid: "Http2SslContextSpec.class"
      methodExercised:
        expression: "forServer(keyManagerFactory:keyManagerFactory):http2SslContextSpec"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "sslBundle"
      modelFingerprint: "DC8480E3842FCCB68F29E3DD8A77CD51"
      valueUuid: "sslBundle2"
      methodExercised:
        expression: "getManagers():sslManagerBundle2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "0C773518FF3D9A2A28B1281FA4102501"
      valueUuid: "sslManagerBundle2"
      methodExercised:
        expression: "getTrustManagerFactory():trustManagerFactory"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "218C246F5FB589BAB9EDCEB09799AFD9"
      valueUuid: "sslContextBuilder"
      methodExercised:
        expression: "trustManager(trustManagerFactory:trustManagerFactory):sslContextBuilder2"
    - type: "LOCAL_VARIABLE"
      name: "sslBundle"
      modelFingerprint: "8B50072218265B4159EA5BC2B13C4F63"
      valueUuid: "sslBundle2"
      methodExercised:
        expression: "getOptions():sslOptions"
    - type: "LOCAL_VARIABLE"
      name: "options"
      modelFingerprint: "64C9161995BBED0B41AB11A83AA25EDC"
      valueUuid: "sslOptions"
      methodExercised:
        expression: "getEnabledProtocols():stringArray"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "3C2B754BE07CDBCE761653023B77FE26"
      valueUuid: "sslContextBuilder"
      methodExercised:
        expression: "protocols(protocols:stringArray):sslContextBuilder3"
    - type: "LOCAL_VARIABLE"
      name: "options"
      modelFingerprint: "E3C4A99D1E2152F69729FACFD6418113"
      valueUuid: "sslOptions"
      methodExercised:
        expression: "getCiphers():stringArray2"
    - type: "STATIC"
      name: "SslOptions.class.real"
      modelFingerprint: "8A345E37670FE911716202FF12097BB1"
      valueUuid: "SslOptions.class.real"
      methodExercised:
        expression: "asSet(array:stringArray2):set"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "78A2F08CDA19412C79677BD65F70C42C"
      valueUuid: "sslContextBuilder"
      methodExercised:
        expression: "ciphers(ciphers:set):sslContextBuilder4"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "9961867BF38334131109A77C2F2CB646"
      valueUuid: "sslContextBuilder"
      methodExercised:
        expression: "clientAuth(clientAuth:clientAuth2):sslContextBuilder5"
    - type: "LOCAL_VARIABLE"
      name: "sslContextSpec"
      modelFingerprint: "D9B3EABB4DA6D61FCB2009E853DC4E70"
      valueUuid: "http2SslContextSpec"
      methodExercised:
        expression: "configure(sslCtxBuilder:uniqueUuid8):abstractProtocolSslContextSpec"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "424F6AC77CE369E6960F0C519B467F29"
      valueUuid: "sslProvider.SslContextSpec"
      methodExercised:
        expression: "sslContext(arg0:abstractProtocolSslContextSpec):sslProvider.Builder"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "2C5C66B1388D080757EFFA2A59500A22"
      valueUuid: "sslProvider.Builder"
      methodExercised:
        expression: "build():sslProvider"
    - type: "FIELD"
      name: "http2"
      modelFingerprint: "9E4594DBA1DEFFA6967F6DD1CEA62DED"
      valueUuid: "http2"
      methodExercised:
        expression: "isEnabled():enabled"
    - type: "LOCAL_VARIABLE"
      name: "sslBundle"
      modelFingerprint: "DC8480E3842FCCB68F29E3DD8A77CD51"
      valueUuid: "sslBundle2"
      methodExercised:
        expression: "getManagers():sslManagerBundle3"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "FBAB39F1C10E18FDEBBD081FA46DCA8E"
      valueUuid: "sslManagerBundle3"
      methodExercised:
        expression: "getKeyManagerFactory():keyManagerFactory2"
    - type: "STATIC"
      name: "Http2SslContextSpec.class"
      modelFingerprint: "DF633EA5CA4AC70F500082F5FE512DBA"
      valueUuid: "Http2SslContextSpec.class"
      methodExercised:
        expression: "forServer(keyManagerFactory:keyManagerFactory2):http2SslContextSpec2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "sslBundle"
      modelFingerprint: "DC8480E3842FCCB68F29E3DD8A77CD51"
      valueUuid: "sslBundle2"
      methodExercised:
        expression: "getManagers():sslManagerBundle4"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "0C773518FF3D9A2A28B1281FA4102501"
      valueUuid: "sslManagerBundle4"
      methodExercised:
        expression: "getTrustManagerFactory():trustManagerFactory2"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "218C246F5FB589BAB9EDCEB09799AFD9"
      valueUuid: "sslContextBuilder6"
      methodExercised:
        expression: "trustManager(trustManagerFactory:trustManagerFactory2):sslContextBuilder7"
    - type: "LOCAL_VARIABLE"
      name: "sslBundle"
      modelFingerprint: "8B50072218265B4159EA5BC2B13C4F63"
      valueUuid: "sslBundle2"
      methodExercised:
        expression: "getOptions():sslOptions2"
    - type: "LOCAL_VARIABLE"
      name: "options"
      modelFingerprint: "64C9161995BBED0B41AB11A83AA25EDC"
      valueUuid: "sslOptions2"
      methodExercised:
        expression: "getEnabledProtocols():stringArray3"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "3C2B754BE07CDBCE761653023B77FE26"
      valueUuid: "sslContextBuilder6"
      methodExercised:
        expression: "protocols(protocols:stringArray3):sslContextBuilder8"
    - type: "LOCAL_VARIABLE"
      name: "options"
      modelFingerprint: "E3C4A99D1E2152F69729FACFD6418113"
      valueUuid: "sslOptions2"
      methodExercised:
        expression: "getCiphers():stringArray4"
    - type: "STATIC"
      name: "SslOptions.class.real"
      modelFingerprint: "8A345E37670FE911716202FF12097BB1"
      valueUuid: "SslOptions.class.real"
      methodExercised:
        expression: "asSet(array:stringArray4):set2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "78A2F08CDA19412C79677BD65F70C42C"
      valueUuid: "sslContextBuilder6"
      methodExercised:
        expression: "ciphers(ciphers:set2):sslContextBuilder9"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "9961867BF38334131109A77C2F2CB646"
      valueUuid: "sslContextBuilder6"
      methodExercised:
        expression: "clientAuth(clientAuth:clientAuth2):sslContextBuilder10"
    - type: "LOCAL_VARIABLE"
      name: "sslContextSpec"
      modelFingerprint: "D9B3EABB4DA6D61FCB2009E853DC4E70"
      valueUuid: "http2SslContextSpec2"
      methodExercised:
        expression: "configure(sslCtxBuilder:uniqueUuid9):abstractProtocolSslContextSpec2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "999EC6814C28249EE0866C17FAE2E181"
      valueUuid: "abstractProtocolSslContextSpec2"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_BUILDER_FUNCTION_NOT_ATTRIBUTE"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
        parameters:
        - name: "http2"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.server.Http2"
              parameters: []
              propertiesMap:
                enabled:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: true
                  valueType: "boolean"
                  uuid: "enabled"
            valueType: "org.springframework.boot.web.server.Http2"
            uuid: "http2"
        - name: "clientAuth"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NEED"
            valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
            uuid: "clientAuth"
        - name: "sslBundle"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "sslBundle2"
      valueType: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle2"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
      uuid: "Ssl.ClientAuth.class.real"
    - sapientType: "ENUM"
      content: !<regular>
        value: "REQUIRE"
      valueType: "io.netty.handler.ssl.ClientAuth"
      uuid: "clientAuth2"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NEED"
      valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
      uuid: "clientAuth"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "io.netty.handler.ssl.ClientAuth"
      uuid: "Enum-io.netty.handler.ssl.ClientAuth-NONE"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "OPTIONAL"
      valueType: "io.netty.handler.ssl.ClientAuth"
      uuid: "Enum-io.netty.handler.ssl.ClientAuth-OPTIONAL"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "REQUIRE"
      valueType: "io.netty.handler.ssl.ClientAuth"
      uuid: "Enum-io.netty.handler.ssl.ClientAuth-REQUIRE"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Http2"
        parameters: []
        propertiesMap:
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "enabled"
      valueType: "org.springframework.boot.web.server.Http2"
      uuid: "http2"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "enabled"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslManagerBundle"
      uuid: "sslManagerBundle"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslManagerBundle"
      uuid: "sslManagerBundle"
    - sapientType: "MOCK"
      valueType: "javax.net.ssl.KeyManagerFactory"
      uuid: "keyManagerFactory"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.Http2SslContextSpec"
      uuid: "Http2SslContextSpec.class"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.Http2SslContextSpec"
      uuid: "http2SslContextSpec"
    - sapientType: "MOCK"
      valueType: "javax.net.ssl.KeyManagerFactory"
      uuid: "keyManagerFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslManagerBundle"
      uuid: "sslManagerBundle2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslManagerBundle"
      uuid: "sslManagerBundle2"
    - sapientType: "MOCK"
      valueType: "javax.net.ssl.TrustManagerFactory"
      uuid: "trustManagerFactory"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder2"
    - sapientType: "MOCK"
      valueType: "javax.net.ssl.TrustManagerFactory"
      uuid: "trustManagerFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "sslOptions"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "sslOptions"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder3"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "sslOptions"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray2"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "SslOptions.class.real"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.String"
      uuid: "set"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray2"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder4"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.String"
      uuid: "set"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder5"
    - sapientType: "ENUM"
      content: !<regular>
        value: "REQUIRE"
      valueType: "io.netty.handler.ssl.ClientAuth"
      uuid: "clientAuth2"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.Http2SslContextSpec"
      uuid: "http2SslContextSpec"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.AbstractProtocolSslContextSpec"
      uuid: "abstractProtocolSslContextSpec"
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid8"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.SslProvider$SslContextSpec"
      uuid: "sslProvider.SslContextSpec"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.SslProvider$Builder"
      uuid: "sslProvider.Builder"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.AbstractProtocolSslContextSpec"
      uuid: "abstractProtocolSslContextSpec"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.SslProvider$Builder"
      uuid: "sslProvider.Builder"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.SslProvider"
      uuid: "sslProvider"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Http2"
        parameters: []
        propertiesMap:
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "enabled"
      valueType: "org.springframework.boot.web.server.Http2"
      uuid: "http2"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "enabled"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslManagerBundle"
      uuid: "sslManagerBundle3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslManagerBundle"
      uuid: "sslManagerBundle3"
    - sapientType: "MOCK"
      valueType: "javax.net.ssl.KeyManagerFactory"
      uuid: "keyManagerFactory2"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.Http2SslContextSpec"
      uuid: "Http2SslContextSpec.class"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.Http2SslContextSpec"
      uuid: "http2SslContextSpec2"
    - sapientType: "MOCK"
      valueType: "javax.net.ssl.KeyManagerFactory"
      uuid: "keyManagerFactory2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslManagerBundle"
      uuid: "sslManagerBundle4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslManagerBundle"
      uuid: "sslManagerBundle4"
    - sapientType: "MOCK"
      valueType: "javax.net.ssl.TrustManagerFactory"
      uuid: "trustManagerFactory2"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder6"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder7"
    - sapientType: "MOCK"
      valueType: "javax.net.ssl.TrustManagerFactory"
      uuid: "trustManagerFactory2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "sslOptions2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "sslOptions2"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray3"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder6"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder8"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "sslOptions2"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray4"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "SslOptions.class.real"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.String"
      uuid: "set2"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray4"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder6"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder9"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.String"
      uuid: "set2"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder6"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.ssl.SslContextBuilder"
      uuid: "sslContextBuilder10"
    - sapientType: "ENUM"
      content: !<regular>
        value: "REQUIRE"
      valueType: "io.netty.handler.ssl.ClientAuth"
      uuid: "clientAuth2"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.Http2SslContextSpec"
      uuid: "http2SslContextSpec2"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.AbstractProtocolSslContextSpec"
      uuid: "abstractProtocolSslContextSpec2"
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid9"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.AbstractProtocolSslContextSpec"
      uuid: "abstractProtocolSslContextSpec2"
    branches:
    - lineNumber: 104
      expression: "this.http2 != null"
      range: "(104,55)-(104,72)"
      evaluatedAs: true
    - lineNumber: 104
      expression: "this.http2.isEnabled()"
      range: "(104,77)-(104,98)"
      evaluatedAs: true
