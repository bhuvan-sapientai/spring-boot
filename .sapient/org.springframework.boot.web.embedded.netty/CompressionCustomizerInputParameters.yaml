---
modelFingerprint: "9D4CFD528086374D61FD72C8E0717388"
targetClass:
  fullClassName: "org.springframework.boot.web.embedded.netty.CompressionCustomizer"
methods:
- method:
    name: "apply"
    sourceCodeSignature: "HttpServer apply(HttpServer server)"
    returnType: "reactor.netty.http.server.HttpServer"
    parameters:
    - name: "server"
      type: "reactor.netty.http.server.HttpServer"
    instructionFingerprint: "D46EE7B3DDAE9290C20CC67F7558B99E"
  paths:
  - pathId: "path1"
    testPathName: "applyWhenObjectUtilsIsEmptyExcludedUserAgents"
    constructorSignature: "<init>(org.springframework.boot.web.server.Compression)\
      \ : void"
    modelFingerprint: "2EABA5DD8D55FDA13044E61F25DF0D2B"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "AAFFFBAF0DCC560D1996EA0DC2FB4472"
      valueUuid: "target"
    - type: "INPUT"
      name: "server"
      modelFingerprint: "A4E1067D3FAADFDF78F188E5448EFBD6"
      valueUuid: "server"
    - type: "FIELD"
      name: "compression"
      modelFingerprint: "68E113C9080EBED7BF47B68A985996BB"
      valueUuid: "compression"
      methodExercised:
        expression: "getMinResponseSize():minResponseSize"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B26E94A430461D363015300E87C92BF1"
      valueUuid: "minResponseSize"
      methodExercised:
        expression: "isNegative():boolean1"
    - type: "FIELD"
      name: "compression"
      modelFingerprint: "68E113C9080EBED7BF47B68A985996BB"
      valueUuid: "compression"
      methodExercised:
        expression: "getMinResponseSize():minResponseSize"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F8E34765D65977BFCB5FCF2E0BF58C69"
      valueUuid: "minResponseSize"
      methodExercised:
        expression: "toBytes():long1"
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "D9021369FFD72F875633016E7407A326"
      valueUuid: "server"
      methodExercised:
        expression: "compress(minResponseSize:int1):httpServer"
    - type: "FIELD"
      name: "compression"
      modelFingerprint: "7900A80D7B43ED22032E261E67942298"
      valueUuid: "compression"
      methodExercised:
        expression: "getMimeTypes():mimeTypes"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "E9919A491CCDDB252D9A43BADB2C94FA"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "isEmpty(array:mimeTypes):boolean2"
        staticAccess: true
    - type: "FIELD"
      name: "compression"
      modelFingerprint: "E933D6EFF5E3ECCDDBAABDA6C12E4EBE"
      valueUuid: "compression"
      methodExercised:
        expression: "getExcludedUserAgents():excludedUserAgents"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "E9919A491CCDDB252D9A43BADB2C94FA"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "isEmpty(array:excludedUserAgents):boolean3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "068BD2207D4D2000F5CB6D7953EF59FC"
      valueUuid: "httpServer"
      methodExercised:
        expression: "compress(predicate:biPredicate):httpServer2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B676716AA27AA0693153D07BD7989D79"
      valueUuid: "httpServer2"
    disabled: true
    failureReason:
      reason: "FUNCTIONAL_INTERFACE_AS_INVOKE_DYNAMIC_PARAMETER_MISMATCH"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.CompressionCustomizer"
        parameters:
        - name: "compression"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.server.Compression"
              parameters: []
              propertiesMap:
                minResponseSize:
                  sapientType: "MOCK"
                  valueType: "org.springframework.util.unit.DataSize"
                  uuid: "minResponseSize"
                excludedUserAgents:
                  sapientType: "ARRAY"
                  content: !<array>
                    values: {}
                  valueType: "java.lang.String[]"
                  uuid: "excludedUserAgents"
                mimeTypes:
                  sapientType: "ARRAY"
                  content: !<array>
                    values: {}
                  valueType: "java.lang.String[]"
                  uuid: "mimeTypes"
            valueType: "org.springframework.boot.web.server.Compression"
            uuid: "compression"
      valueType: "org.springframework.boot.web.embedded.netty.CompressionCustomizer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "server"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Compression"
        parameters: []
        propertiesMap:
          minResponseSize:
            sapientType: "MOCK"
            valueType: "org.springframework.util.unit.DataSize"
            uuid: "minResponseSize"
          excludedUserAgents:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "excludedUserAgents"
          mimeTypes:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "mimeTypes"
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "compression"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.unit.DataSize"
      uuid: "minResponseSize"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.unit.DataSize"
      uuid: "minResponseSize"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Compression"
        parameters: []
        propertiesMap:
          minResponseSize:
            sapientType: "MOCK"
            valueType: "org.springframework.util.unit.DataSize"
            uuid: "minResponseSize"
          excludedUserAgents:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "excludedUserAgents"
          mimeTypes:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "mimeTypes"
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "compression"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.unit.DataSize"
      uuid: "minResponseSize"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.unit.DataSize"
      uuid: "minResponseSize"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "long"
      uuid: "long1"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "server"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      originalValueType: "long"
      uuid: "int1"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Compression"
        parameters: []
        propertiesMap:
          minResponseSize:
            sapientType: "MOCK"
            valueType: "org.springframework.util.unit.DataSize"
            uuid: "minResponseSize"
          excludedUserAgents:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "excludedUserAgents"
          mimeTypes:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "mimeTypes"
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "compression"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "mimeTypes"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "mimeTypes"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Compression"
        parameters: []
        propertiesMap:
          minResponseSize:
            sapientType: "MOCK"
            valueType: "org.springframework.util.unit.DataSize"
            uuid: "minResponseSize"
          excludedUserAgents:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "excludedUserAgents"
          mimeTypes:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "mimeTypes"
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "compression"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "excludedUserAgents"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "excludedUserAgents"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer2"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer2"
    branches:
    - lineNumber: 55
      expression: "!this.compression.getMinResponseSize().isNegative()"
      range: "(55,7)-(55,57)"
      evaluatedAs: true
    - lineNumber: 66
      expression: "ObjectUtils.isEmpty(mimeTypeValues)"
      range: "(66,7)-(66,41)"
      evaluatedAs: true
      internalMethodName: "getMimeTypesPredicate"
    - lineNumber: 86
      expression: "ObjectUtils.isEmpty(excludedUserAgents)"
      range: "(86,7)-(86,45)"
      evaluatedAs: true
      internalMethodName: "getExcludedUserAgentsPredicate"
  - pathId: "path2"
    testPathName: "applyWhenArraysStreamExcludedUserAgentsNoneMatchHeadersContainsHttpHeaderNamesUSER_AGENTCandidateTrue"
    constructorSignature: "<init>(org.springframework.boot.web.server.Compression)\
      \ : void"
    modelFingerprint: "E2BB48E14FDDE6FBD599D25093383104"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "AAFFFBAF0DCC560D1996EA0DC2FB4472"
      valueUuid: "target"
    - type: "INPUT"
      name: "server"
      modelFingerprint: "A4E1067D3FAADFDF78F188E5448EFBD6"
      valueUuid: "server"
    - type: "FIELD"
      name: "compression"
      modelFingerprint: "68E113C9080EBED7BF47B68A985996BB"
      valueUuid: "compression"
      methodExercised:
        expression: "getMinResponseSize():minResponseSize"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B26E94A430461D363015300E87C92BF1"
      valueUuid: "minResponseSize"
      methodExercised:
        expression: "isNegative():boolean1"
    - type: "FIELD"
      name: "compression"
      modelFingerprint: "68E113C9080EBED7BF47B68A985996BB"
      valueUuid: "compression"
      methodExercised:
        expression: "getMinResponseSize():minResponseSize"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F8E34765D65977BFCB5FCF2E0BF58C69"
      valueUuid: "minResponseSize"
      methodExercised:
        expression: "toBytes():long1"
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "D9021369FFD72F875633016E7407A326"
      valueUuid: "server"
      methodExercised:
        expression: "compress(minResponseSize:int1):httpServer"
    - type: "FIELD"
      name: "compression"
      modelFingerprint: "7900A80D7B43ED22032E261E67942298"
      valueUuid: "compression"
      methodExercised:
        expression: "getMimeTypes():mimeTypes"
    - type: "STATIC"
      name: "ObjectUtils.class"
      modelFingerprint: "E9919A491CCDDB252D9A43BADB2C94FA"
      valueUuid: "ObjectUtils.class"
      methodExercised:
        expression: "isEmpty(array:mimeTypes):boolean2"
        staticAccess: true
    - type: "FIELD"
      name: "compression"
      modelFingerprint: "E933D6EFF5E3ECCDDBAABDA6C12E4EBE"
      valueUuid: "compression"
      methodExercised:
        expression: "getExcludedUserAgents():excludedUserAgents"
    - type: "STATIC"
      name: "ObjectUtils.class"
      modelFingerprint: "470A241B4963EF9E5832DA35C2D4B98E"
      valueUuid: "ObjectUtils.class"
      methodExercised:
        expression: "isEmpty(array:excludedUserAgents):boolean3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "request"
      modelFingerprint: "2EF0170357B55BC3C1F2249DA3ED3E26"
      valueUuid: "httpServerRequest"
      methodExercised:
        expression: "requestHeaders():httpHeaders"
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "068BD2207D4D2000F5CB6D7953EF59FC"
      valueUuid: "httpServer"
      methodExercised:
        expression: "compress(predicate:biPredicate):httpServer2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B676716AA27AA0693153D07BD7989D79"
      valueUuid: "httpServer2"
    disabled: true
    failureReason:
      reason: "FUNCTIONAL_INTERFACE_AS_INVOKE_DYNAMIC_PARAMETER_MISMATCH"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.CompressionCustomizer"
        parameters:
        - name: "compression"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.server.Compression"
              parameters: []
              propertiesMap:
                minResponseSize:
                  sapientType: "MOCK"
                  valueType: "org.springframework.util.unit.DataSize"
                  uuid: "minResponseSize"
                excludedUserAgents:
                  sapientType: "ARRAY"
                  content: !<array>
                    values: {}
                  valueType: "java.lang.String[]"
                  uuid: "excludedUserAgents"
                mimeTypes:
                  sapientType: "ARRAY"
                  content: !<array>
                    values: {}
                  valueType: "java.lang.String[]"
                  uuid: "mimeTypes"
            valueType: "org.springframework.boot.web.server.Compression"
            uuid: "compression"
      valueType: "org.springframework.boot.web.embedded.netty.CompressionCustomizer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "server"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Compression"
        parameters: []
        propertiesMap:
          minResponseSize:
            sapientType: "MOCK"
            valueType: "org.springframework.util.unit.DataSize"
            uuid: "minResponseSize"
          excludedUserAgents:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "excludedUserAgents"
          mimeTypes:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "mimeTypes"
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "compression"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.unit.DataSize"
      uuid: "minResponseSize"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.unit.DataSize"
      uuid: "minResponseSize"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Compression"
        parameters: []
        propertiesMap:
          minResponseSize:
            sapientType: "MOCK"
            valueType: "org.springframework.util.unit.DataSize"
            uuid: "minResponseSize"
          excludedUserAgents:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "excludedUserAgents"
          mimeTypes:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "mimeTypes"
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "compression"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.unit.DataSize"
      uuid: "minResponseSize"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.unit.DataSize"
      uuid: "minResponseSize"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "long"
      uuid: "long1"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "server"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      originalValueType: "long"
      uuid: "int1"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Compression"
        parameters: []
        propertiesMap:
          minResponseSize:
            sapientType: "MOCK"
            valueType: "org.springframework.util.unit.DataSize"
            uuid: "minResponseSize"
          excludedUserAgents:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "excludedUserAgents"
          mimeTypes:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "mimeTypes"
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "compression"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "mimeTypes"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "mimeTypes"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Compression"
        parameters: []
        propertiesMap:
          minResponseSize:
            sapientType: "MOCK"
            valueType: "org.springframework.util.unit.DataSize"
            uuid: "minResponseSize"
          excludedUserAgents:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "excludedUserAgents"
          mimeTypes:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "mimeTypes"
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "compression"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "excludedUserAgents"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "excludedUserAgents"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServerRequest"
      uuid: "httpServerRequest"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.codec.http.HttpHeaders"
      uuid: "httpHeaders"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer2"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer2"
    branches:
    - lineNumber: 55
      expression: "!this.compression.getMinResponseSize().isNegative()"
      range: "(55,7)-(55,57)"
      evaluatedAs: true
    - lineNumber: 66
      expression: "ObjectUtils.isEmpty(mimeTypeValues)"
      range: "(66,7)-(66,41)"
      evaluatedAs: true
      internalMethodName: "getMimeTypesPredicate"
    - lineNumber: 86
      expression: "ObjectUtils.isEmpty(excludedUserAgents)"
      range: "(86,7)-(86,45)"
      evaluatedAs: false
      internalMethodName: "getExcludedUserAgentsPredicate"
    - lineNumber: 91
      expression: "Arrays.stream(excludedUserAgents).noneMatch((candidate) -> headers.contains(HttpHeaderNames.USER_AGENT,\
        \ candidate, true))"
      range: "(91,11)-(92,92)"
      evaluatedAs: true
  - pathId: "path3"
    testPathName: "applyWhenStringUtilsNotHasLengthContentType"
    constructorSignature: "<init>(org.springframework.boot.web.server.Compression)\
      \ : void"
    modelFingerprint: "28C0C86918FCFF1AB6641A892CF7FCAD"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "AAFFFBAF0DCC560D1996EA0DC2FB4472"
      valueUuid: "target"
    - type: "INPUT"
      name: "server"
      modelFingerprint: "A4E1067D3FAADFDF78F188E5448EFBD6"
      valueUuid: "server"
    - type: "FIELD"
      name: "compression"
      modelFingerprint: "68E113C9080EBED7BF47B68A985996BB"
      valueUuid: "compression"
      methodExercised:
        expression: "getMinResponseSize():minResponseSize"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B26E94A430461D363015300E87C92BF1"
      valueUuid: "minResponseSize"
      methodExercised:
        expression: "isNegative():boolean1"
    - type: "FIELD"
      name: "compression"
      modelFingerprint: "68E113C9080EBED7BF47B68A985996BB"
      valueUuid: "compression"
      methodExercised:
        expression: "getMinResponseSize():minResponseSize"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F8E34765D65977BFCB5FCF2E0BF58C69"
      valueUuid: "minResponseSize"
      methodExercised:
        expression: "toBytes():long1"
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "D9021369FFD72F875633016E7407A326"
      valueUuid: "server"
      methodExercised:
        expression: "compress(minResponseSize:int1):httpServer"
    - type: "FIELD"
      name: "compression"
      modelFingerprint: "7900A80D7B43ED22032E261E67942298"
      valueUuid: "compression"
      methodExercised:
        expression: "getMimeTypes():mimeTypes"
    - type: "STATIC"
      name: "ObjectUtils.class"
      modelFingerprint: "470A241B4963EF9E5832DA35C2D4B98E"
      valueUuid: "ObjectUtils.class"
      methodExercised:
        expression: "isEmpty(array:mimeTypes):boolean2"
        staticAccess: true
    - type: "FIELD"
      name: "compression"
      modelFingerprint: "E933D6EFF5E3ECCDDBAABDA6C12E4EBE"
      valueUuid: "compression"
      methodExercised:
        expression: "getExcludedUserAgents():excludedUserAgents"
    - type: "STATIC"
      name: "ObjectUtils.class"
      modelFingerprint: "470A241B4963EF9E5832DA35C2D4B98E"
      valueUuid: "ObjectUtils.class"
      methodExercised:
        expression: "isEmpty(array:excludedUserAgents):boolean3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "request"
      modelFingerprint: "2EF0170357B55BC3C1F2249DA3ED3E26"
      valueUuid: "httpServerRequest"
      methodExercised:
        expression: "requestHeaders():httpHeaders"
    - type: "LOCAL_VARIABLE"
      name: "response"
      modelFingerprint: "32A5BE35FA1700B4348B80E57879A538"
      valueUuid: "httpServerResponse"
      methodExercised:
        expression: "responseHeaders():httpHeaders2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B88151783E5A3715740348C0CB910150"
      valueUuid: "httpHeaders2"
      methodExercised:
        expression: "get(name:asciiString):string"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "D246E7716687CDA656330B7EF1470B21"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasLength(str:string):boolean5"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "068BD2207D4D2000F5CB6D7953EF59FC"
      valueUuid: "httpServer"
      methodExercised:
        expression: "compress(predicate:biPredicate):httpServer2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B676716AA27AA0693153D07BD7989D79"
      valueUuid: "httpServer2"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.stream.Stream.map(java.util.function.Function)\
        \ : java.util.stream.Stream"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.CompressionCustomizer"
        parameters:
        - name: "compression"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.server.Compression"
              parameters: []
              propertiesMap:
                minResponseSize:
                  sapientType: "MOCK"
                  valueType: "org.springframework.util.unit.DataSize"
                  uuid: "minResponseSize"
                excludedUserAgents:
                  sapientType: "ARRAY"
                  content: !<array>
                    values: {}
                  valueType: "java.lang.String[]"
                  uuid: "excludedUserAgents"
                mimeTypes:
                  sapientType: "ARRAY"
                  content: !<array>
                    values: {}
                  valueType: "java.lang.String[]"
                  uuid: "mimeTypes"
            valueType: "org.springframework.boot.web.server.Compression"
            uuid: "compression"
      valueType: "org.springframework.boot.web.embedded.netty.CompressionCustomizer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "server"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Compression"
        parameters: []
        propertiesMap:
          minResponseSize:
            sapientType: "MOCK"
            valueType: "org.springframework.util.unit.DataSize"
            uuid: "minResponseSize"
          excludedUserAgents:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "excludedUserAgents"
          mimeTypes:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "mimeTypes"
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "compression"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.unit.DataSize"
      uuid: "minResponseSize"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.unit.DataSize"
      uuid: "minResponseSize"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Compression"
        parameters: []
        propertiesMap:
          minResponseSize:
            sapientType: "MOCK"
            valueType: "org.springframework.util.unit.DataSize"
            uuid: "minResponseSize"
          excludedUserAgents:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "excludedUserAgents"
          mimeTypes:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "mimeTypes"
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "compression"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.unit.DataSize"
      uuid: "minResponseSize"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.unit.DataSize"
      uuid: "minResponseSize"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "long"
      uuid: "long1"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "server"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      originalValueType: "long"
      uuid: "int1"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Compression"
        parameters: []
        propertiesMap:
          minResponseSize:
            sapientType: "MOCK"
            valueType: "org.springframework.util.unit.DataSize"
            uuid: "minResponseSize"
          excludedUserAgents:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "excludedUserAgents"
          mimeTypes:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "mimeTypes"
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "compression"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "mimeTypes"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "mimeTypes"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Compression"
        parameters: []
        propertiesMap:
          minResponseSize:
            sapientType: "MOCK"
            valueType: "org.springframework.util.unit.DataSize"
            uuid: "minResponseSize"
          excludedUserAgents:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "excludedUserAgents"
          mimeTypes:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "mimeTypes"
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "compression"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "excludedUserAgents"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "excludedUserAgents"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServerRequest"
      uuid: "httpServerRequest"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.codec.http.HttpHeaders"
      uuid: "httpHeaders"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServerResponse"
      uuid: "httpServerResponse"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.codec.http.HttpHeaders"
      uuid: "httpHeaders2"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.codec.http.HttpHeaders"
      uuid: "httpHeaders2"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "io.netty.handler.codec.http.HttpHeaderNames"
        fieldName: "CONTENT_TYPE"
      valueType: "io.netty.util.AsciiString"
      uuid: "asciiString"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean5"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer2"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer2"
    branches:
    - lineNumber: 55
      expression: "!this.compression.getMinResponseSize().isNegative()"
      range: "(55,7)-(55,57)"
      evaluatedAs: true
    - lineNumber: 66
      expression: "ObjectUtils.isEmpty(mimeTypeValues)"
      range: "(66,7)-(66,41)"
      evaluatedAs: false
      internalMethodName: "getMimeTypesPredicate"
    - lineNumber: 86
      expression: "ObjectUtils.isEmpty(excludedUserAgents)"
      range: "(86,7)-(86,45)"
      evaluatedAs: false
      internalMethodName: "getExcludedUserAgentsPredicate"
    - lineNumber: 91
      expression: "Arrays.stream(excludedUserAgents).noneMatch((candidate) -> headers.contains(HttpHeaderNames.USER_AGENT,\
        \ candidate, true))"
      range: "(91,11)-(92,92)"
      evaluatedAs: false
    - lineNumber: 72
      expression: "!StringUtils.hasLength(contentType)"
      range: "(72,8)-(72,42)"
      evaluatedAs: true
      internalMethodName: "lambda$getMimeTypesPredicate$2"
  - pathId: "path4"
    testPathName: "applyWhenStringUtilsHasLengthContentType"
    constructorSignature: "<init>(org.springframework.boot.web.server.Compression)\
      \ : void"
    modelFingerprint: "32A7A008ABFE43AE3F1FC37347F18A6E"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "AAFFFBAF0DCC560D1996EA0DC2FB4472"
      valueUuid: "target"
    - type: "INPUT"
      name: "server"
      modelFingerprint: "A4E1067D3FAADFDF78F188E5448EFBD6"
      valueUuid: "server"
    - type: "FIELD"
      name: "compression"
      modelFingerprint: "68E113C9080EBED7BF47B68A985996BB"
      valueUuid: "compression"
      methodExercised:
        expression: "getMinResponseSize():minResponseSize"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B26E94A430461D363015300E87C92BF1"
      valueUuid: "minResponseSize"
      methodExercised:
        expression: "isNegative():boolean1"
    - type: "FIELD"
      name: "compression"
      modelFingerprint: "68E113C9080EBED7BF47B68A985996BB"
      valueUuid: "compression"
      methodExercised:
        expression: "getMinResponseSize():minResponseSize"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F8E34765D65977BFCB5FCF2E0BF58C69"
      valueUuid: "minResponseSize"
      methodExercised:
        expression: "toBytes():long1"
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "D9021369FFD72F875633016E7407A326"
      valueUuid: "server"
      methodExercised:
        expression: "compress(minResponseSize:int1):httpServer"
    - type: "FIELD"
      name: "compression"
      modelFingerprint: "7900A80D7B43ED22032E261E67942298"
      valueUuid: "compression"
      methodExercised:
        expression: "getMimeTypes():mimeTypes"
    - type: "STATIC"
      name: "ObjectUtils.class"
      modelFingerprint: "470A241B4963EF9E5832DA35C2D4B98E"
      valueUuid: "ObjectUtils.class"
      methodExercised:
        expression: "isEmpty(array:mimeTypes):boolean2"
        staticAccess: true
    - type: "FIELD"
      name: "compression"
      modelFingerprint: "E933D6EFF5E3ECCDDBAABDA6C12E4EBE"
      valueUuid: "compression"
      methodExercised:
        expression: "getExcludedUserAgents():excludedUserAgents"
    - type: "STATIC"
      name: "ObjectUtils.class"
      modelFingerprint: "470A241B4963EF9E5832DA35C2D4B98E"
      valueUuid: "ObjectUtils.class"
      methodExercised:
        expression: "isEmpty(array:excludedUserAgents):boolean3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "request"
      modelFingerprint: "2EF0170357B55BC3C1F2249DA3ED3E26"
      valueUuid: "httpServerRequest"
      methodExercised:
        expression: "requestHeaders():httpHeaders"
    - type: "LOCAL_VARIABLE"
      name: "response"
      modelFingerprint: "32A5BE35FA1700B4348B80E57879A538"
      valueUuid: "httpServerResponse"
      methodExercised:
        expression: "responseHeaders():httpHeaders2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B88151783E5A3715740348C0CB910150"
      valueUuid: "httpHeaders2"
      methodExercised:
        expression: "get(name:asciiString):string"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "D472C44A00843A81AFD0D831F31357FF"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasLength(str:string):boolean5"
        staticAccess: true
    - type: "STATIC"
      name: "MimeTypeUtils.class"
      modelFingerprint: "83DE60A3C4DB62D3390425FE62330320"
      valueUuid: "MimeTypeUtils.class"
      methodExercised:
        expression: "parseMimeType(mimeType:string):mimeType"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "068BD2207D4D2000F5CB6D7953EF59FC"
      valueUuid: "httpServer"
      methodExercised:
        expression: "compress(predicate:biPredicate):httpServer2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B676716AA27AA0693153D07BD7989D79"
      valueUuid: "httpServer2"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.stream.Stream.map(java.util.function.Function)\
        \ : java.util.stream.Stream"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.CompressionCustomizer"
        parameters:
        - name: "compression"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.server.Compression"
              parameters: []
              propertiesMap:
                minResponseSize:
                  sapientType: "MOCK"
                  valueType: "org.springframework.util.unit.DataSize"
                  uuid: "minResponseSize"
                excludedUserAgents:
                  sapientType: "ARRAY"
                  content: !<array>
                    values: {}
                  valueType: "java.lang.String[]"
                  uuid: "excludedUserAgents"
                mimeTypes:
                  sapientType: "ARRAY"
                  content: !<array>
                    values: {}
                  valueType: "java.lang.String[]"
                  uuid: "mimeTypes"
            valueType: "org.springframework.boot.web.server.Compression"
            uuid: "compression"
      valueType: "org.springframework.boot.web.embedded.netty.CompressionCustomizer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "server"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Compression"
        parameters: []
        propertiesMap:
          minResponseSize:
            sapientType: "MOCK"
            valueType: "org.springframework.util.unit.DataSize"
            uuid: "minResponseSize"
          excludedUserAgents:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "excludedUserAgents"
          mimeTypes:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "mimeTypes"
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "compression"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.unit.DataSize"
      uuid: "minResponseSize"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.unit.DataSize"
      uuid: "minResponseSize"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Compression"
        parameters: []
        propertiesMap:
          minResponseSize:
            sapientType: "MOCK"
            valueType: "org.springframework.util.unit.DataSize"
            uuid: "minResponseSize"
          excludedUserAgents:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "excludedUserAgents"
          mimeTypes:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "mimeTypes"
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "compression"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.unit.DataSize"
      uuid: "minResponseSize"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.unit.DataSize"
      uuid: "minResponseSize"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "long"
      uuid: "long1"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "server"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      originalValueType: "long"
      uuid: "int1"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Compression"
        parameters: []
        propertiesMap:
          minResponseSize:
            sapientType: "MOCK"
            valueType: "org.springframework.util.unit.DataSize"
            uuid: "minResponseSize"
          excludedUserAgents:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "excludedUserAgents"
          mimeTypes:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "mimeTypes"
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "compression"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "mimeTypes"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "mimeTypes"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Compression"
        parameters: []
        propertiesMap:
          minResponseSize:
            sapientType: "MOCK"
            valueType: "org.springframework.util.unit.DataSize"
            uuid: "minResponseSize"
          excludedUserAgents:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "excludedUserAgents"
          mimeTypes:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "mimeTypes"
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "compression"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "excludedUserAgents"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "excludedUserAgents"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServerRequest"
      uuid: "httpServerRequest"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.codec.http.HttpHeaders"
      uuid: "httpHeaders"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServerResponse"
      uuid: "httpServerResponse"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.codec.http.HttpHeaders"
      uuid: "httpHeaders2"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.codec.http.HttpHeaders"
      uuid: "httpHeaders2"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "io.netty.handler.codec.http.HttpHeaderNames"
        fieldName: "CONTENT_TYPE"
      valueType: "io.netty.util.AsciiString"
      uuid: "asciiString"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean5"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.MimeTypeUtils"
      uuid: "MimeTypeUtils.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.MimeType"
      uuid: "mimeType"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer2"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer2"
    branches:
    - lineNumber: 55
      expression: "!this.compression.getMinResponseSize().isNegative()"
      range: "(55,7)-(55,57)"
      evaluatedAs: true
    - lineNumber: 66
      expression: "ObjectUtils.isEmpty(mimeTypeValues)"
      range: "(66,7)-(66,41)"
      evaluatedAs: false
      internalMethodName: "getMimeTypesPredicate"
    - lineNumber: 86
      expression: "ObjectUtils.isEmpty(excludedUserAgents)"
      range: "(86,7)-(86,45)"
      evaluatedAs: false
      internalMethodName: "getExcludedUserAgentsPredicate"
    - lineNumber: 91
      expression: "Arrays.stream(excludedUserAgents).noneMatch((candidate) -> headers.contains(HttpHeaderNames.USER_AGENT,\
        \ candidate, true))"
      range: "(91,11)-(92,92)"
      evaluatedAs: false
    - lineNumber: 72
      expression: "!StringUtils.hasLength(contentType)"
      range: "(72,8)-(72,42)"
      evaluatedAs: false
      internalMethodName: "lambda$getMimeTypesPredicate$2"
  - pathId: "path6"
    testPathName: "applyWhenCaughtInvalidMimeTypeException"
    constructorSignature: "<init>(org.springframework.boot.web.server.Compression)\
      \ : void"
    modelFingerprint: "CA153A10B4FD2E710E02C20487CE441E"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "AAFFFBAF0DCC560D1996EA0DC2FB4472"
      valueUuid: "target"
    - type: "INPUT"
      name: "server"
      modelFingerprint: "A4E1067D3FAADFDF78F188E5448EFBD6"
      valueUuid: "server"
    - type: "FIELD"
      name: "compression"
      modelFingerprint: "68E113C9080EBED7BF47B68A985996BB"
      valueUuid: "compression"
      methodExercised:
        expression: "getMinResponseSize():minResponseSize"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B26E94A430461D363015300E87C92BF1"
      valueUuid: "minResponseSize"
      methodExercised:
        expression: "isNegative():boolean1"
    - type: "FIELD"
      name: "compression"
      modelFingerprint: "68E113C9080EBED7BF47B68A985996BB"
      valueUuid: "compression"
      methodExercised:
        expression: "getMinResponseSize():minResponseSize"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F8E34765D65977BFCB5FCF2E0BF58C69"
      valueUuid: "minResponseSize"
      methodExercised:
        expression: "toBytes():long1"
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "D9021369FFD72F875633016E7407A326"
      valueUuid: "server"
      methodExercised:
        expression: "compress(minResponseSize:int1):httpServer"
    - type: "FIELD"
      name: "compression"
      modelFingerprint: "7900A80D7B43ED22032E261E67942298"
      valueUuid: "compression"
      methodExercised:
        expression: "getMimeTypes():mimeTypes"
    - type: "STATIC"
      name: "ObjectUtils.class"
      modelFingerprint: "470A241B4963EF9E5832DA35C2D4B98E"
      valueUuid: "ObjectUtils.class"
      methodExercised:
        expression: "isEmpty(array:mimeTypes):boolean2"
        staticAccess: true
    - type: "FIELD"
      name: "compression"
      modelFingerprint: "E933D6EFF5E3ECCDDBAABDA6C12E4EBE"
      valueUuid: "compression"
      methodExercised:
        expression: "getExcludedUserAgents():excludedUserAgents"
    - type: "STATIC"
      name: "ObjectUtils.class"
      modelFingerprint: "470A241B4963EF9E5832DA35C2D4B98E"
      valueUuid: "ObjectUtils.class"
      methodExercised:
        expression: "isEmpty(array:excludedUserAgents):boolean3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "request"
      modelFingerprint: "2EF0170357B55BC3C1F2249DA3ED3E26"
      valueUuid: "httpServerRequest"
      methodExercised:
        expression: "requestHeaders():httpHeaders"
    - type: "LOCAL_VARIABLE"
      name: "response"
      modelFingerprint: "32A5BE35FA1700B4348B80E57879A538"
      valueUuid: "httpServerResponse"
      methodExercised:
        expression: "responseHeaders():httpHeaders2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B88151783E5A3715740348C0CB910150"
      valueUuid: "httpHeaders2"
      methodExercised:
        expression: "get(name:asciiString):string"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "D472C44A00843A81AFD0D831F31357FF"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasLength(str:string):boolean5"
        staticAccess: true
    - type: "STATIC"
      name: "MimeTypeUtils.class"
      modelFingerprint: "83DE60A3C4DB62D3390425FE62330320"
      valueUuid: "MimeTypeUtils.class"
      methodExercised:
        expression: "parseMimeType(mimeType:string):mimeType"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "068BD2207D4D2000F5CB6D7953EF59FC"
      valueUuid: "httpServer"
      methodExercised:
        expression: "compress(predicate:biPredicate):httpServer2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B676716AA27AA0693153D07BD7989D79"
      valueUuid: "httpServer2"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.stream.Stream.map(java.util.function.Function)\
        \ : java.util.stream.Stream"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.CompressionCustomizer"
        parameters:
        - name: "compression"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.server.Compression"
              parameters: []
              propertiesMap:
                minResponseSize:
                  sapientType: "MOCK"
                  valueType: "org.springframework.util.unit.DataSize"
                  uuid: "minResponseSize"
                excludedUserAgents:
                  sapientType: "ARRAY"
                  content: !<array>
                    values: {}
                  valueType: "java.lang.String[]"
                  uuid: "excludedUserAgents"
                mimeTypes:
                  sapientType: "ARRAY"
                  content: !<array>
                    values: {}
                  valueType: "java.lang.String[]"
                  uuid: "mimeTypes"
            valueType: "org.springframework.boot.web.server.Compression"
            uuid: "compression"
      valueType: "org.springframework.boot.web.embedded.netty.CompressionCustomizer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "server"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Compression"
        parameters: []
        propertiesMap:
          minResponseSize:
            sapientType: "MOCK"
            valueType: "org.springframework.util.unit.DataSize"
            uuid: "minResponseSize"
          excludedUserAgents:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "excludedUserAgents"
          mimeTypes:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "mimeTypes"
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "compression"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.unit.DataSize"
      uuid: "minResponseSize"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.unit.DataSize"
      uuid: "minResponseSize"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Compression"
        parameters: []
        propertiesMap:
          minResponseSize:
            sapientType: "MOCK"
            valueType: "org.springframework.util.unit.DataSize"
            uuid: "minResponseSize"
          excludedUserAgents:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "excludedUserAgents"
          mimeTypes:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "mimeTypes"
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "compression"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.unit.DataSize"
      uuid: "minResponseSize"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.unit.DataSize"
      uuid: "minResponseSize"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "long"
      uuid: "long1"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "server"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      originalValueType: "long"
      uuid: "int1"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Compression"
        parameters: []
        propertiesMap:
          minResponseSize:
            sapientType: "MOCK"
            valueType: "org.springframework.util.unit.DataSize"
            uuid: "minResponseSize"
          excludedUserAgents:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "excludedUserAgents"
          mimeTypes:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "mimeTypes"
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "compression"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "mimeTypes"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "mimeTypes"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Compression"
        parameters: []
        propertiesMap:
          minResponseSize:
            sapientType: "MOCK"
            valueType: "org.springframework.util.unit.DataSize"
            uuid: "minResponseSize"
          excludedUserAgents:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "excludedUserAgents"
          mimeTypes:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "mimeTypes"
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "compression"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "excludedUserAgents"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "excludedUserAgents"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServerRequest"
      uuid: "httpServerRequest"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.codec.http.HttpHeaders"
      uuid: "httpHeaders"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServerResponse"
      uuid: "httpServerResponse"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.codec.http.HttpHeaders"
      uuid: "httpHeaders2"
    - sapientType: "MOCK"
      valueType: "io.netty.handler.codec.http.HttpHeaders"
      uuid: "httpHeaders2"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "io.netty.handler.codec.http.HttpHeaderNames"
        fieldName: "CONTENT_TYPE"
      valueType: "io.netty.util.AsciiString"
      uuid: "asciiString"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean5"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.MimeTypeUtils"
      uuid: "MimeTypeUtils.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.MimeType"
      uuid: "mimeType"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer2"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer2"
    branches:
    - lineNumber: 55
      expression: "!this.compression.getMinResponseSize().isNegative()"
      range: "(55,7)-(55,57)"
      evaluatedAs: true
    - lineNumber: 66
      expression: "ObjectUtils.isEmpty(mimeTypeValues)"
      range: "(66,7)-(66,41)"
      evaluatedAs: false
      internalMethodName: "getMimeTypesPredicate"
    - lineNumber: 86
      expression: "ObjectUtils.isEmpty(excludedUserAgents)"
      range: "(86,7)-(86,45)"
      evaluatedAs: false
      internalMethodName: "getExcludedUserAgentsPredicate"
    - lineNumber: 91
      expression: "Arrays.stream(excludedUserAgents).noneMatch((candidate) -> headers.contains(HttpHeaderNames.USER_AGENT,\
        \ candidate, true))"
      range: "(91,11)-(92,92)"
      evaluatedAs: false
    - lineNumber: 72
      expression: "!StringUtils.hasLength(contentType)"
      range: "(72,8)-(72,42)"
      evaluatedAs: false
      internalMethodName: "lambda$getMimeTypesPredicate$2"
    - lineNumber: 79
      expression: "catch-exception (InvalidMimeTypeException)"
      range: "(79,4)-(79,37)"
      evaluatedAs: true
      internalMethodName: "lambda$getMimeTypesPredicate$2"
    catchBlockExercised:
      idExternalInstruction: 21
      id: 1
      catchExceptions:
      - "org.springframework.util.InvalidMimeTypeException"
