---
modelFingerprint: "73C0FD250156A9711634B5AEA84A3A4D"
targetClass:
  fullClassName: "org.springframework.boot.web.embedded.netty.NettyWebServer"
methods:
- method:
    name: "setRouteProviders"
    sourceCodeSignature: "void setRouteProviders(List<NettyRouteProvider> routeProviders)"
    returnType: "void"
    parameters:
    - name: "routeProviders"
      type: "java.util.List"
    instructionFingerprint: "2B65D13FD71266073A1F6D3E0D1290EF"
  paths:
  - pathId: "path1"
    testPathName: "setRouteProvidersTest"
    constructorSignature: "<init>(reactor.netty.http.server.HttpServer,org.springframework.http.server.reactive.ReactorHttpHandlerAdapter,java.time.Duration,org.springframework.boot.web.server.Shutdown,org.springframework.http.client.ReactorResourceFactory)\
      \ : void"
    modelFingerprint: "FC510D574BC6D816B010CA0ED79A9BC5"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "start"
    sourceCodeSignature: "void start()"
    returnType: "void"
    throwsExceptions:
    - "org.springframework.boot.web.server.WebServerException"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.UnsupportedOperationException"
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.UnsupportedOperationException"
    instructionFingerprint: "FF2038440C2574A78B7035392EC62A75"
  paths:
  - pathId: "path5"
    testPathName: "startWhenCaughtExceptionThrowsWebServerException"
    constructorSignature: "<init>(reactor.netty.http.server.HttpServer,org.springframework.http.server.reactive.ReactorHttpHandlerAdapter,java.time.Duration,org.springframework.boot.web.server.Shutdown,org.springframework.http.client.ReactorResourceFactory)\
      \ : void"
    modelFingerprint: "B590A7E92A85BFB515C0B7726F63DD3E"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "829B7528C154DEAD5D0227803140FA7A"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "8C5FE6A5AD487C0315BC625AB19BD10B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:httpServer,message:uniqueUuid1):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "2CAE952A6F7D4FEC4A6FD57F6CAE5B69"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:handlerAdapter,message:uniqueUuid2):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "httpServer"
      modelFingerprint: "B952110026BA55944AB3C596731560A7"
      valueUuid: "httpServer"
      methodExercised:
        expression: "channelGroup(channelGroup:defaultChannelGroup):httpServer2"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "51F531FC1EF388B4A84589696EBEB215"
      methodExercised:
        expression: "startHttpServer():disposableServer"
    - type: "STATIC"
      name: "PortInUseException.class"
      modelFingerprint: "6FE593A567EDE90936C434B7F380C104"
      valueUuid: "PortInUseException.class"
      methodExercised:
        expression: "ifCausedBy(ex:disposableServer,causedBy:uniqueUuid3,action:uniqueUuid4):void3"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5EAE4F0A113A744DCFE4584F5F89125"
      valueUuid: "webServerException"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.NettyWebServer"
        parameters:
        - name: "httpServer"
          value:
            sapientType: "MOCK"
            valueType: "reactor.netty.http.server.HttpServer"
            uuid: "httpServer"
        - name: "handlerAdapter"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter"
            uuid: "handlerAdapter"
        - name: "lifecycleTimeout"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "lifecycleTimeout-days"
            valueType: "java.time.Duration"
            uuid: "lifecycleTimeout"
        - name: "shutdown"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "GRACEFUL"
            valueType: "org.springframework.boot.web.server.Shutdown"
            uuid: "shutdown"
        - name: "resourceFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.http.client.ReactorResourceFactory"
            uuid: "resourceFactory"
      valueType: "org.springframework.boot.web.embedded.netty.NettyWebServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer"
    - sapientType: "BASIC"
      content: !<regular>
        value: "HttpServer must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter"
      uuid: "handlerAdapter"
    - sapientType: "BASIC"
      content: !<regular>
        value: "HandlerAdapter must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer2"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "io.netty.channel.group.DefaultChannelGroup"
        parameters:
        - name: "executor"
          value:
            sapientType: "MOCK"
            valueType: "io.netty.util.concurrent.EventExecutor"
            uuid: "defaultChannelGroup-executor"
        values: []
      valueType: "io.netty.channel.group.DefaultChannelGroup"
      uuid: "defaultChannelGroup"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.RuntimeException"
        parameters: []
      valueType: "java.lang.RuntimeException"
      uuid: "disposableServer"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.PortInUseException"
      uuid: "PortInUseException.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.RuntimeException"
        parameters: []
      valueType: "java.lang.RuntimeException"
      uuid: "disposableServer"
    - sapientType: "CLASS"
      content: !<regular>
        value: "reactor.netty.ChannelBindException"
      valueType: "java.lang.Class"
      genericValueType: "reactor.netty.ChannelBindException"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid4"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.springframework.boot.web.server.WebServerException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Unable to start Netty"
            valueType: "java.lang.String"
            uuid: "uniqueUuid5"
            fixed: true
        - name: "cause"
          value:
            sapientType: "EXCEPTION"
            content: !<new>
              target: "java.lang.RuntimeException"
              parameters: []
            valueType: "java.lang.RuntimeException"
            uuid: "disposableServer"
      valueType: "org.springframework.boot.web.server.WebServerException"
      uuid: "webServerException"
      fixed: true
    branches:
    - lineNumber: 128
      expression: "this.disposableServer == null"
      range: "(128,7)-(128,35)"
      evaluatedAs: true
    - lineNumber: 132
      expression: "catch-exception (Exception)"
      range: "(132,4)-(132,22)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
  - pathId: "path1"
    testPathName: "startWhenMessageNotIsEmpty"
    constructorSignature: "<init>(reactor.netty.http.server.HttpServer,org.springframework.http.server.reactive.ReactorHttpHandlerAdapter,java.time.Duration,org.springframework.boot.web.server.Shutdown,org.springframework.http.client.ReactorResourceFactory)\
      \ : void"
    modelFingerprint: "C5B37660057099E850DB15380ED3A6B4"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "829B7528C154DEAD5D0227803140FA7A"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "8C5FE6A5AD487C0315BC625AB19BD10B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:httpServer,message:uniqueUuid8):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "2CAE952A6F7D4FEC4A6FD57F6CAE5B69"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:handlerAdapter,message:uniqueUuid9):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "httpServer"
      modelFingerprint: "B952110026BA55944AB3C596731560A7"
      valueUuid: "httpServer"
      methodExercised:
        expression: "channelGroup(channelGroup:defaultChannelGroup):httpServer2"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "F06B150C28A7772ED53DB03DA157387D"
      methodExercised:
        expression: "startHttpServer():disposableServer"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_POTENTIAL_HARM_FULL_SYSTEM_CALL"
      source: "awaitThread.start();"
      lineNumber: 227
      details: "Potential harmful system call (Thread.start) detected; Learn more:\
        \ https://github.com/Sapient-AI/docs#disabled-generated-tests"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.NettyWebServer"
        parameters:
        - name: "httpServer"
          value:
            sapientType: "MOCK"
            valueType: "reactor.netty.http.server.HttpServer"
            uuid: "httpServer"
        - name: "handlerAdapter"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter"
            uuid: "handlerAdapter"
        - name: "lifecycleTimeout"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "lifecycleTimeout-days"
            valueType: "java.time.Duration"
            uuid: "lifecycleTimeout"
        - name: "shutdown"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "GRACEFUL"
            valueType: "org.springframework.boot.web.server.Shutdown"
            uuid: "shutdown"
        - name: "resourceFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.http.client.ReactorResourceFactory"
            uuid: "resourceFactory"
      valueType: "org.springframework.boot.web.embedded.netty.NettyWebServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer"
    - sapientType: "BASIC"
      content: !<regular>
        value: "HttpServer must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter"
      uuid: "handlerAdapter"
    - sapientType: "BASIC"
      content: !<regular>
        value: "HandlerAdapter must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid9"
      fixed: true
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer2"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "io.netty.channel.group.DefaultChannelGroup"
        parameters:
        - name: "executor"
          value:
            sapientType: "MOCK"
            valueType: "io.netty.util.concurrent.EventExecutor"
            uuid: "defaultChannelGroup-executor"
        values: []
      valueType: "io.netty.channel.group.DefaultChannelGroup"
      uuid: "defaultChannelGroup"
    - sapientType: "MOCK"
      valueType: "reactor.netty.DisposableServer"
      uuid: "disposableServer"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 128
      expression: "this.disposableServer == null"
      range: "(128,7)-(128,35)"
      evaluatedAs: true
    - lineNumber: 140
      expression: "this.disposableServer != null"
      range: "(140,8)-(140,36)"
      evaluatedAs: true
    - lineNumber: 162
      expression: "!message.isEmpty()"
      range: "(162,20)-(162,37)"
      evaluatedAs: false
      internalMethodName: "tryAppend"
    - lineNumber: 152
      expression: "!message.isEmpty()"
      range: "(152,11)-(152,28)"
      evaluatedAs: true
      internalMethodName: "getStartedOnMessage"
  - pathId: "path3"
    testPathName: "startWhenMessageIsEmpty"
    constructorSignature: "<init>(reactor.netty.http.server.HttpServer,org.springframework.http.server.reactive.ReactorHttpHandlerAdapter,java.time.Duration,org.springframework.boot.web.server.Shutdown,org.springframework.http.client.ReactorResourceFactory)\
      \ : void"
    modelFingerprint: "54E274714879F757DD6748ADFBA12B78"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0EC4C9306CFE73B60FA0AE7EA97A1AE"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "8C5FE6A5AD487C0315BC625AB19BD10B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:httpServer,message:uniqueUuid10):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "2CAE952A6F7D4FEC4A6FD57F6CAE5B69"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:handlerAdapter,message:uniqueUuid11):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "httpServer"
      modelFingerprint: "B952110026BA55944AB3C596731560A7"
      valueUuid: "httpServer"
      methodExercised:
        expression: "channelGroup(channelGroup:defaultChannelGroup):httpServer2"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "F06B150C28A7772ED53DB03DA157387D"
      methodExercised:
        expression: "startHttpServer():disposableServer"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_POTENTIAL_HARM_FULL_SYSTEM_CALL"
      source: "awaitThread.start();"
      lineNumber: 227
      details: "Potential harmful system call (Thread.start) detected; Learn more:\
        \ https://github.com/Sapient-AI/docs#disabled-generated-tests"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.NettyWebServer"
        parameters:
        - name: "httpServer"
          value:
            sapientType: "MOCK"
            valueType: "reactor.netty.http.server.HttpServer"
            uuid: "httpServer"
        - name: "handlerAdapter"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter"
            uuid: "handlerAdapter"
        - name: "lifecycleTimeout"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "lifecycleTimeout-days"
            valueType: "java.time.Duration"
            uuid: "lifecycleTimeout"
        - name: "shutdown"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "GRACEFUL"
            valueType: "org.springframework.boot.web.server.Shutdown"
            uuid: "shutdown"
        - name: "resourceFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.http.client.ReactorResourceFactory"
            uuid: "resourceFactory"
      valueType: "org.springframework.boot.web.embedded.netty.NettyWebServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer"
    - sapientType: "BASIC"
      content: !<regular>
        value: "HttpServer must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid10"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter"
      uuid: "handlerAdapter"
    - sapientType: "BASIC"
      content: !<regular>
        value: "HandlerAdapter must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid11"
      fixed: true
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer2"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "io.netty.channel.group.DefaultChannelGroup"
        parameters:
        - name: "executor"
          value:
            sapientType: "MOCK"
            valueType: "io.netty.util.concurrent.EventExecutor"
            uuid: "defaultChannelGroup-executor"
        values: []
      valueType: "io.netty.channel.group.DefaultChannelGroup"
      uuid: "defaultChannelGroup"
    - sapientType: "MOCK"
      valueType: "reactor.netty.DisposableServer"
      uuid: "disposableServer"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 128
      expression: "this.disposableServer == null"
      range: "(128,7)-(128,35)"
      evaluatedAs: true
    - lineNumber: 140
      expression: "this.disposableServer != null"
      range: "(140,8)-(140,36)"
      evaluatedAs: true
    - lineNumber: 162
      expression: "!message.isEmpty()"
      range: "(162,20)-(162,37)"
      evaluatedAs: false
      internalMethodName: "tryAppend"
    - lineNumber: 152
      expression: "!message.isEmpty()"
      range: "(152,11)-(152,28)"
      evaluatedAs: false
      internalMethodName: "getStartedOnMessage"
  - pathId: "path6"
    testPathName: "startWhenCaughtUnsupportedOperationExceptionAndMessageNotIsEmpty"
    constructorSignature: "<init>(reactor.netty.http.server.HttpServer,org.springframework.http.server.reactive.ReactorHttpHandlerAdapter,java.time.Duration,org.springframework.boot.web.server.Shutdown,org.springframework.http.client.ReactorResourceFactory)\
      \ : void"
    modelFingerprint: "A59E1338FC7DB19BCBFCEBAF207A25C4"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "829B7528C154DEAD5D0227803140FA7A"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "8C5FE6A5AD487C0315BC625AB19BD10B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:httpServer,message:uniqueUuid12):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "2CAE952A6F7D4FEC4A6FD57F6CAE5B69"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:handlerAdapter,message:uniqueUuid13):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "httpServer"
      modelFingerprint: "B952110026BA55944AB3C596731560A7"
      valueUuid: "httpServer"
      methodExercised:
        expression: "channelGroup(channelGroup:defaultChannelGroup):httpServer2"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "F06B150C28A7772ED53DB03DA157387D"
      methodExercised:
        expression: "startHttpServer():disposableServer"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_POTENTIAL_HARM_FULL_SYSTEM_CALL"
      source: "awaitThread.start();"
      lineNumber: 227
      details: "Potential harmful system call (Thread.start) detected; Learn more:\
        \ https://github.com/Sapient-AI/docs#disabled-generated-tests"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.NettyWebServer"
        parameters:
        - name: "httpServer"
          value:
            sapientType: "MOCK"
            valueType: "reactor.netty.http.server.HttpServer"
            uuid: "httpServer"
        - name: "handlerAdapter"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter"
            uuid: "handlerAdapter"
        - name: "lifecycleTimeout"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "lifecycleTimeout-days"
            valueType: "java.time.Duration"
            uuid: "lifecycleTimeout"
        - name: "shutdown"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "GRACEFUL"
            valueType: "org.springframework.boot.web.server.Shutdown"
            uuid: "shutdown"
        - name: "resourceFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.http.client.ReactorResourceFactory"
            uuid: "resourceFactory"
      valueType: "org.springframework.boot.web.embedded.netty.NettyWebServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer"
    - sapientType: "BASIC"
      content: !<regular>
        value: "HttpServer must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid12"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter"
      uuid: "handlerAdapter"
    - sapientType: "BASIC"
      content: !<regular>
        value: "HandlerAdapter must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid13"
      fixed: true
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer2"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "io.netty.channel.group.DefaultChannelGroup"
        parameters:
        - name: "executor"
          value:
            sapientType: "MOCK"
            valueType: "io.netty.util.concurrent.EventExecutor"
            uuid: "defaultChannelGroup-executor"
        values: []
      valueType: "io.netty.channel.group.DefaultChannelGroup"
      uuid: "defaultChannelGroup"
    - sapientType: "MOCK"
      valueType: "reactor.netty.DisposableServer"
      uuid: "disposableServer"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 128
      expression: "this.disposableServer == null"
      range: "(128,7)-(128,35)"
      evaluatedAs: true
    - lineNumber: 140
      expression: "this.disposableServer != null"
      range: "(140,8)-(140,36)"
      evaluatedAs: true
    - lineNumber: 162
      expression: "!message.isEmpty()"
      range: "(162,20)-(162,37)"
      evaluatedAs: false
      internalMethodName: "tryAppend"
    - lineNumber: 165
      expression: "catch-exception (UnsupportedOperationException)"
      range: "(165,3)-(165,41)"
      evaluatedAs: true
      internalMethodName: "tryAppend"
    - lineNumber: 152
      expression: "!message.isEmpty()"
      range: "(152,11)-(152,28)"
      evaluatedAs: true
      internalMethodName: "getStartedOnMessage"
    catchBlockExercised:
      idExternalInstruction: 14
      id: 2
      catchExceptions:
      - "java.lang.UnsupportedOperationException"
  - pathId: "path7"
    testPathName: "startWhenMessageIsEmptyAndCaughtUnsupportedOperationExceptionAndMessageNotIsEmpty"
    constructorSignature: "<init>(reactor.netty.http.server.HttpServer,org.springframework.http.server.reactive.ReactorHttpHandlerAdapter,java.time.Duration,org.springframework.boot.web.server.Shutdown,org.springframework.http.client.ReactorResourceFactory)\
      \ : void"
    modelFingerprint: "9564DA3FF6853591074309C43C8F7197"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0EC4C9306CFE73B60FA0AE7EA97A1AE"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "8C5FE6A5AD487C0315BC625AB19BD10B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:httpServer,message:uniqueUuid14):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "2CAE952A6F7D4FEC4A6FD57F6CAE5B69"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:handlerAdapter,message:uniqueUuid15):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "httpServer"
      modelFingerprint: "B952110026BA55944AB3C596731560A7"
      valueUuid: "httpServer"
      methodExercised:
        expression: "channelGroup(channelGroup:defaultChannelGroup):httpServer2"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "F06B150C28A7772ED53DB03DA157387D"
      methodExercised:
        expression: "startHttpServer():disposableServer"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_POTENTIAL_HARM_FULL_SYSTEM_CALL"
      source: "awaitThread.start();"
      lineNumber: 227
      details: "Potential harmful system call (Thread.start) detected; Learn more:\
        \ https://github.com/Sapient-AI/docs#disabled-generated-tests"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.NettyWebServer"
        parameters:
        - name: "httpServer"
          value:
            sapientType: "MOCK"
            valueType: "reactor.netty.http.server.HttpServer"
            uuid: "httpServer"
        - name: "handlerAdapter"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter"
            uuid: "handlerAdapter"
        - name: "lifecycleTimeout"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "lifecycleTimeout-days"
            valueType: "java.time.Duration"
            uuid: "lifecycleTimeout"
        - name: "shutdown"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "GRACEFUL"
            valueType: "org.springframework.boot.web.server.Shutdown"
            uuid: "shutdown"
        - name: "resourceFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.http.client.ReactorResourceFactory"
            uuid: "resourceFactory"
      valueType: "org.springframework.boot.web.embedded.netty.NettyWebServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer"
    - sapientType: "BASIC"
      content: !<regular>
        value: "HttpServer must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid14"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter"
      uuid: "handlerAdapter"
    - sapientType: "BASIC"
      content: !<regular>
        value: "HandlerAdapter must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid15"
      fixed: true
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer2"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "io.netty.channel.group.DefaultChannelGroup"
        parameters:
        - name: "executor"
          value:
            sapientType: "MOCK"
            valueType: "io.netty.util.concurrent.EventExecutor"
            uuid: "defaultChannelGroup-executor"
        values: []
      valueType: "io.netty.channel.group.DefaultChannelGroup"
      uuid: "defaultChannelGroup"
    - sapientType: "MOCK"
      valueType: "reactor.netty.DisposableServer"
      uuid: "disposableServer"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 128
      expression: "this.disposableServer == null"
      range: "(128,7)-(128,35)"
      evaluatedAs: true
    - lineNumber: 140
      expression: "this.disposableServer != null"
      range: "(140,8)-(140,36)"
      evaluatedAs: true
    - lineNumber: 162
      expression: "!message.isEmpty()"
      range: "(162,20)-(162,37)"
      evaluatedAs: false
      internalMethodName: "tryAppend"
    - lineNumber: 165
      expression: "catch-exception (UnsupportedOperationException)"
      range: "(165,3)-(165,41)"
      evaluatedAs: true
      internalMethodName: "tryAppend"
    - lineNumber: 152
      expression: "!message.isEmpty()"
      range: "(152,11)-(152,28)"
      evaluatedAs: true
      internalMethodName: "getStartedOnMessage"
    catchBlockExercised:
      idExternalInstruction: 25
      id: 2
      catchExceptions:
      - "java.lang.UnsupportedOperationException"
- method:
    name: "getStartedLogMessage"
    sourceCodeSignature: "String getStartedLogMessage()"
    returnType: "java.lang.String"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.UnsupportedOperationException"
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.UnsupportedOperationException"
    instructionFingerprint: "B075F81B5405B6A05C8EB22D81BA4D21"
  paths:
  - pathId: "path1"
    testPathName: "getStartedLogMessageWhenMessageIsEmptyThrowsNullPointerException"
    constructorSignature: "<init>(reactor.netty.http.server.HttpServer,org.springframework.http.server.reactive.ReactorHttpHandlerAdapter,java.time.Duration,org.springframework.boot.web.server.Shutdown,org.springframework.http.client.ReactorResourceFactory)\
      \ : void"
    modelFingerprint: "94B6B7A28B867E539DA3C0EB02C8AE69"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "829B7528C154DEAD5D0227803140FA7A"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "8C5FE6A5AD487C0315BC625AB19BD10B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:httpServer,message:uniqueUuid16):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "2CAE952A6F7D4FEC4A6FD57F6CAE5B69"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:handlerAdapter,message:uniqueUuid17):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "httpServer"
      modelFingerprint: "B952110026BA55944AB3C596731560A7"
      valueUuid: "httpServer"
      methodExercised:
        expression: "channelGroup(channelGroup:defaultChannelGroup):httpServer2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "085DC12750BAC37E63C370C4A90AE3FA"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "Object value = supplier.get();"
      lineNumber: 161
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: supplier - Method: get"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.NettyWebServer"
        parameters:
        - name: "httpServer"
          value:
            sapientType: "MOCK"
            valueType: "reactor.netty.http.server.HttpServer"
            uuid: "httpServer"
        - name: "handlerAdapter"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter"
            uuid: "handlerAdapter"
        - name: "lifecycleTimeout"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "lifecycleTimeout-days"
            valueType: "java.time.Duration"
            uuid: "lifecycleTimeout"
        - name: "shutdown"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "GRACEFUL"
            valueType: "org.springframework.boot.web.server.Shutdown"
            uuid: "shutdown"
        - name: "resourceFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.http.client.ReactorResourceFactory"
            uuid: "resourceFactory"
      valueType: "org.springframework.boot.web.embedded.netty.NettyWebServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer"
    - sapientType: "BASIC"
      content: !<regular>
        value: "HttpServer must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid16"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter"
      uuid: "handlerAdapter"
    - sapientType: "BASIC"
      content: !<regular>
        value: "HandlerAdapter must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid17"
      fixed: true
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer2"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "io.netty.channel.group.DefaultChannelGroup"
        parameters:
        - name: "executor"
          value:
            sapientType: "MOCK"
            valueType: "io.netty.util.concurrent.EventExecutor"
            uuid: "defaultChannelGroup-executor"
        values: []
      valueType: "io.netty.channel.group.DefaultChannelGroup"
      uuid: "defaultChannelGroup"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.NullPointerException"
        parameters: []
      valueType: "java.lang.NullPointerException"
      uuid: "expectedResult"
    branches:
    - lineNumber: 162
      expression: "!message.isEmpty()"
      range: "(162,20)-(162,37)"
      evaluatedAs: false
      internalMethodName: "tryAppend"
- method:
    name: "startHttpServer"
    sourceCodeSignature: "DisposableServer startHttpServer()"
    returnType: "reactor.netty.DisposableServer"
    instructionFingerprint: "A10D6385C2F5B68B25C5144C05E9BB35"
  paths:
  - pathId: "path1"
    testPathName: "startHttpServerWhenThisLifecycleTimeoutIsNotNull"
    constructorSignature: "<init>(reactor.netty.http.server.HttpServer,org.springframework.http.server.reactive.ReactorHttpHandlerAdapter,java.time.Duration,org.springframework.boot.web.server.Shutdown,org.springframework.http.client.ReactorResourceFactory)\
      \ : void"
    modelFingerprint: "4E8B1665E2B92F2C3BE5E65A69E72838"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "608D2922512AE839AB9DF87F2E01683E"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "8C5FE6A5AD487C0315BC625AB19BD10B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:httpServer,message:uniqueUuid18):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "2CAE952A6F7D4FEC4A6FD57F6CAE5B69"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:handlerAdapter,message:uniqueUuid19):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "httpServer"
      modelFingerprint: "2703ECC9FCC3F0D404369D1FAE39E0D3"
      valueUuid: "httpServer"
      methodExercised:
        expression: "channelGroup(channelGroup:defaultChannelGroup):httpServer2"
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "AF7415397F58C72E2865F54404679BF3"
      valueUuid: "httpServer2"
      methodExercised:
        expression: "handle(handler:handlerAdapter):httpServer3"
    - type: "FIELD"
      name: "resourceFactory"
      modelFingerprint: "632DC6F651367F1DA562CC8B1B245265"
      valueUuid: "resourceFactory"
      methodExercised:
        expression: "getLoopResources():loopResources"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "C3BAFE8F5261359018B44776774A8319"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:loopResources,message:uniqueUuid20):void3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "10A655E73E9E7135198E654CCAADBD8F"
      valueUuid: "httpServer3"
      methodExercised:
        expression: "runOn(channelResources:loopResources):transport"
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "BE5BEB491E4BE3159B2C4B79CED15168"
      valueUuid: "transport"
      methodExercised:
        expression: "bindNow(timeout:lifecycleTimeout):disposableServer"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "1AD13B31987D8B49C095AF393E2F05D2"
      valueUuid: "disposableServer"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.NettyWebServer"
        parameters:
        - name: "httpServer"
          value:
            sapientType: "MOCK"
            valueType: "reactor.netty.http.server.HttpServer"
            uuid: "httpServer"
        - name: "handlerAdapter"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter"
            uuid: "handlerAdapter"
        - name: "lifecycleTimeout"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "lifecycleTimeout-days"
            valueType: "java.time.Duration"
            uuid: "lifecycleTimeout"
        - name: "shutdown"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "GRACEFUL"
            valueType: "org.springframework.boot.web.server.Shutdown"
            uuid: "shutdown"
        - name: "resourceFactory"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.http.client.ReactorResourceFactory"
              parameters: []
              propertiesMap:
                loopResources:
                  sapientType: "MOCK"
                  valueType: "reactor.netty.resources.LoopResources"
                  uuid: "loopResources"
            valueType: "org.springframework.http.client.ReactorResourceFactory"
            uuid: "resourceFactory"
      valueType: "org.springframework.boot.web.embedded.netty.NettyWebServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer"
    - sapientType: "BASIC"
      content: !<regular>
        value: "HttpServer must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid18"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter"
      uuid: "handlerAdapter"
    - sapientType: "BASIC"
      content: !<regular>
        value: "HandlerAdapter must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid19"
      fixed: true
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer2"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "io.netty.channel.group.DefaultChannelGroup"
        parameters:
        - name: "executor"
          value:
            sapientType: "MOCK"
            valueType: "io.netty.util.concurrent.EventExecutor"
            uuid: "defaultChannelGroup-executor"
        values: []
      valueType: "io.netty.channel.group.DefaultChannelGroup"
      uuid: "defaultChannelGroup"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer2"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer3"
    - sapientType: "MOCK"
      valueType: "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter"
      uuid: "handlerAdapter"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.http.client.ReactorResourceFactory"
        parameters: []
        propertiesMap:
          loopResources:
            sapientType: "MOCK"
            valueType: "reactor.netty.resources.LoopResources"
            uuid: "loopResources"
      valueType: "org.springframework.http.client.ReactorResourceFactory"
      uuid: "resourceFactory"
    - sapientType: "MOCK"
      valueType: "reactor.netty.resources.LoopResources"
      uuid: "loopResources"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "reactor.netty.resources.LoopResources"
      uuid: "loopResources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "No LoopResources: is ReactorResourceFactory not initialized yet?"
      valueType: "java.lang.String"
      uuid: "uniqueUuid20"
      fixed: true
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer3"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "transport"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "reactor.netty.resources.LoopResources"
      uuid: "loopResources"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "transport"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "reactor.netty.DisposableServer"
      uuid: "disposableServer"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "lifecycleTimeout-days"
      valueType: "java.time.Duration"
      uuid: "lifecycleTimeout"
    - sapientType: "MOCK"
      valueType: "reactor.netty.DisposableServer"
      uuid: "disposableServer"
    branches:
    - lineNumber: 172
      expression: "this.routeProviders.isEmpty()"
      range: "(172,7)-(172,35)"
      evaluatedAs: true
    - lineNumber: 178
      expression: "this.resourceFactory != null"
      range: "(178,7)-(178,34)"
      evaluatedAs: true
    - lineNumber: 183
      expression: "this.lifecycleTimeout != null"
      range: "(183,7)-(183,35)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "startHttpServerWhenThisLifecycleTimeoutIsNull"
    constructorSignature: "<init>(reactor.netty.http.server.HttpServer,org.springframework.http.server.reactive.ReactorHttpHandlerAdapter,java.time.Duration,org.springframework.boot.web.server.Shutdown,org.springframework.http.client.ReactorResourceFactory)\
      \ : void"
    modelFingerprint: "4FD0DEC325A3E4D613160A8DB519276E"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "EC81D36FEDA2898CA243E16C7ACABFC2"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "8C5FE6A5AD487C0315BC625AB19BD10B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:httpServer,message:uniqueUuid21):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "2CAE952A6F7D4FEC4A6FD57F6CAE5B69"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:handlerAdapter,message:uniqueUuid22):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "httpServer"
      modelFingerprint: "2703ECC9FCC3F0D404369D1FAE39E0D3"
      valueUuid: "httpServer"
      methodExercised:
        expression: "channelGroup(channelGroup:defaultChannelGroup):httpServer2"
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "AF7415397F58C72E2865F54404679BF3"
      valueUuid: "httpServer2"
      methodExercised:
        expression: "handle(handler:handlerAdapter):httpServer3"
    - type: "FIELD"
      name: "resourceFactory"
      modelFingerprint: "632DC6F651367F1DA562CC8B1B245265"
      valueUuid: "resourceFactory"
      methodExercised:
        expression: "getLoopResources():loopResources"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "C3BAFE8F5261359018B44776774A8319"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:loopResources,message:uniqueUuid23):void3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "10A655E73E9E7135198E654CCAADBD8F"
      valueUuid: "httpServer3"
      methodExercised:
        expression: "runOn(channelResources:loopResources):transport"
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "946FDAF4137E05DADBDFE720C1E9BDD8"
      valueUuid: "transport"
      methodExercised:
        expression: "bindNow():disposableServer"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "1AD13B31987D8B49C095AF393E2F05D2"
      valueUuid: "disposableServer"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.NettyWebServer"
        parameters:
        - name: "httpServer"
          value:
            sapientType: "MOCK"
            valueType: "reactor.netty.http.server.HttpServer"
            uuid: "httpServer"
        - name: "handlerAdapter"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter"
            uuid: "handlerAdapter"
        - name: "lifecycleTimeout"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "lifecycleTimeout"
            fixed: true
        - name: "shutdown"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "GRACEFUL"
            valueType: "org.springframework.boot.web.server.Shutdown"
            uuid: "shutdown"
        - name: "resourceFactory"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.http.client.ReactorResourceFactory"
              parameters: []
              propertiesMap:
                loopResources:
                  sapientType: "MOCK"
                  valueType: "reactor.netty.resources.LoopResources"
                  uuid: "loopResources"
            valueType: "org.springframework.http.client.ReactorResourceFactory"
            uuid: "resourceFactory"
      valueType: "org.springframework.boot.web.embedded.netty.NettyWebServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer"
    - sapientType: "BASIC"
      content: !<regular>
        value: "HttpServer must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid21"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter"
      uuid: "handlerAdapter"
    - sapientType: "BASIC"
      content: !<regular>
        value: "HandlerAdapter must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid22"
      fixed: true
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer2"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "io.netty.channel.group.DefaultChannelGroup"
        parameters:
        - name: "executor"
          value:
            sapientType: "MOCK"
            valueType: "io.netty.util.concurrent.EventExecutor"
            uuid: "defaultChannelGroup-executor"
        values: []
      valueType: "io.netty.channel.group.DefaultChannelGroup"
      uuid: "defaultChannelGroup"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer2"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer3"
    - sapientType: "MOCK"
      valueType: "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter"
      uuid: "handlerAdapter"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.http.client.ReactorResourceFactory"
        parameters: []
        propertiesMap:
          loopResources:
            sapientType: "MOCK"
            valueType: "reactor.netty.resources.LoopResources"
            uuid: "loopResources"
      valueType: "org.springframework.http.client.ReactorResourceFactory"
      uuid: "resourceFactory"
    - sapientType: "MOCK"
      valueType: "reactor.netty.resources.LoopResources"
      uuid: "loopResources"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "reactor.netty.resources.LoopResources"
      uuid: "loopResources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "No LoopResources: is ReactorResourceFactory not initialized yet?"
      valueType: "java.lang.String"
      uuid: "uniqueUuid23"
      fixed: true
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer3"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "transport"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "reactor.netty.resources.LoopResources"
      uuid: "loopResources"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "transport"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "reactor.netty.DisposableServer"
      uuid: "disposableServer"
    - sapientType: "MOCK"
      valueType: "reactor.netty.DisposableServer"
      uuid: "disposableServer"
    branches:
    - lineNumber: 172
      expression: "this.routeProviders.isEmpty()"
      range: "(172,7)-(172,35)"
      evaluatedAs: true
    - lineNumber: 178
      expression: "this.resourceFactory != null"
      range: "(178,7)-(178,34)"
      evaluatedAs: true
    - lineNumber: 183
      expression: "this.lifecycleTimeout != null"
      range: "(183,7)-(183,35)"
      evaluatedAs: false
- method:
    name: "shutDownGracefully"
    sourceCodeSignature: "void shutDownGracefully(GracefulShutdownCallback callback)"
    returnType: "void"
    parameters:
    - name: "callback"
      type: "org.springframework.boot.web.server.GracefulShutdownCallback"
    instructionFingerprint: "C2D84AB66A213B81821919AEDD40EA41"
  paths:
  - pathId: "path1"
    testPathName: "shutDownGracefullyWhenThisGracefulShutdownIsNotNull"
    constructorSignature: "<init>(reactor.netty.http.server.HttpServer,org.springframework.http.server.reactive.ReactorHttpHandlerAdapter,java.time.Duration,org.springframework.boot.web.server.Shutdown,org.springframework.http.client.ReactorResourceFactory)\
      \ : void"
    modelFingerprint: "193915DBBC7FB101A1F8021926203DED"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "829B7528C154DEAD5D0227803140FA7A"
      valueUuid: "target"
    - type: "INPUT"
      name: "callback"
      modelFingerprint: "7490EC711E28D772941A498D8390C18B"
      valueUuid: "callback"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "8C5FE6A5AD487C0315BC625AB19BD10B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:httpServer,message:uniqueUuid24):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "2CAE952A6F7D4FEC4A6FD57F6CAE5B69"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:handlerAdapter,message:uniqueUuid25):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "httpServer"
      modelFingerprint: "B952110026BA55944AB3C596731560A7"
      valueUuid: "httpServer"
      methodExercised:
        expression: "channelGroup(channelGroup:defaultChannelGroup):httpServer2"
    - type: "FIELD"
      name: "gracefulShutdown"
      modelFingerprint: "88DD3B5F247B2DB373B9100357340D36"
      valueUuid: "gracefulShutdown"
      methodExercised:
        expression: "shutDownGracefully(callback:callback):void3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.gracefulShutdown.shutDownGracefully(callback);"
      lineNumber: 206
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: gracefulShutdown - Method: shutDownGracefully"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.NettyWebServer"
        parameters:
        - name: "httpServer"
          value:
            sapientType: "MOCK"
            valueType: "reactor.netty.http.server.HttpServer"
            uuid: "httpServer"
        - name: "handlerAdapter"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter"
            uuid: "handlerAdapter"
        - name: "lifecycleTimeout"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "lifecycleTimeout-days"
            valueType: "java.time.Duration"
            uuid: "lifecycleTimeout"
        - name: "shutdown"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "GRACEFUL"
            valueType: "org.springframework.boot.web.server.Shutdown"
            uuid: "shutdown"
        - name: "resourceFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.http.client.ReactorResourceFactory"
            uuid: "resourceFactory"
      valueType: "org.springframework.boot.web.embedded.netty.NettyWebServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.GracefulShutdownCallback"
      uuid: "callback"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer"
    - sapientType: "BASIC"
      content: !<regular>
        value: "HttpServer must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid24"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter"
      uuid: "handlerAdapter"
    - sapientType: "BASIC"
      content: !<regular>
        value: "HandlerAdapter must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid25"
      fixed: true
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer2"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "io.netty.channel.group.DefaultChannelGroup"
        parameters:
        - name: "executor"
          value:
            sapientType: "MOCK"
            valueType: "io.netty.util.concurrent.EventExecutor"
            uuid: "defaultChannelGroup-executor"
        values: []
      valueType: "io.netty.channel.group.DefaultChannelGroup"
      uuid: "defaultChannelGroup"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.GracefulShutdown"
        parameters:
        - name: "disposableServer"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "reactor.netty.DisposableServer"
            uuid: "uniqueUuid26"
      valueType: "org.springframework.boot.web.embedded.netty.GracefulShutdown"
      uuid: "gracefulShutdown"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.GracefulShutdownCallback"
      uuid: "callback"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 202
      expression: "this.gracefulShutdown == null"
      range: "(202,7)-(202,35)"
      evaluatedAs: false
- method:
    name: "stop"
    sourceCodeSignature: "void stop()"
    returnType: "void"
    throwsExceptions:
    - "org.springframework.boot.web.server.WebServerException"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 4
      catchExceptions:
      - "java.lang.IllegalStateException"
    instructionFingerprint: "5D8BE431231D6106E8BB49B42985323C"
  paths:
  - pathId: "path1"
    testPathName: "stopWhenThisDisposableServerIsNull"
    constructorSignature: "<init>(reactor.netty.http.server.HttpServer,org.springframework.http.server.reactive.ReactorHttpHandlerAdapter,java.time.Duration,org.springframework.boot.web.server.Shutdown,org.springframework.http.client.ReactorResourceFactory)\
      \ : void"
    modelFingerprint: "ABBFB2A8A11ABDA9661C4EA027C08E4F"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "829B7528C154DEAD5D0227803140FA7A"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "8C5FE6A5AD487C0315BC625AB19BD10B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:httpServer,message:uniqueUuid27):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "2CAE952A6F7D4FEC4A6FD57F6CAE5B69"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:handlerAdapter,message:uniqueUuid28):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "httpServer"
      modelFingerprint: "B952110026BA55944AB3C596731560A7"
      valueUuid: "httpServer"
      methodExercised:
        expression: "channelGroup(channelGroup:defaultChannelGroup):httpServer2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.NettyWebServer"
        parameters:
        - name: "httpServer"
          value:
            sapientType: "MOCK"
            valueType: "reactor.netty.http.server.HttpServer"
            uuid: "httpServer"
        - name: "handlerAdapter"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter"
            uuid: "handlerAdapter"
        - name: "lifecycleTimeout"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "lifecycleTimeout-days"
            valueType: "java.time.Duration"
            uuid: "lifecycleTimeout"
        - name: "shutdown"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "GRACEFUL"
            valueType: "org.springframework.boot.web.server.Shutdown"
            uuid: "shutdown"
        - name: "resourceFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.http.client.ReactorResourceFactory"
            uuid: "resourceFactory"
      valueType: "org.springframework.boot.web.embedded.netty.NettyWebServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer"
    - sapientType: "BASIC"
      content: !<regular>
        value: "HttpServer must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid27"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter"
      uuid: "handlerAdapter"
    - sapientType: "BASIC"
      content: !<regular>
        value: "HandlerAdapter must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid28"
      fixed: true
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer2"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "io.netty.channel.group.DefaultChannelGroup"
        parameters:
        - name: "executor"
          value:
            sapientType: "MOCK"
            valueType: "io.netty.util.concurrent.EventExecutor"
            uuid: "defaultChannelGroup-executor"
        values: []
      valueType: "io.netty.channel.group.DefaultChannelGroup"
      uuid: "defaultChannelGroup"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 232
      expression: "this.disposableServer != null"
      range: "(232,7)-(232,35)"
      evaluatedAs: false
- method:
    name: "getPort"
    sourceCodeSignature: "int getPort()"
    returnType: "int"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 5
      catchExceptions:
      - "java.lang.UnsupportedOperationException"
    instructionFingerprint: "85120D34FB36E6F2C2A541D86B03CB21"
  paths:
  - pathId: "path1"
    testPathName: "getPortWhenThisDisposableServerIsNull"
    constructorSignature: "<init>(reactor.netty.http.server.HttpServer,org.springframework.http.server.reactive.ReactorHttpHandlerAdapter,java.time.Duration,org.springframework.boot.web.server.Shutdown,org.springframework.http.client.ReactorResourceFactory)\
      \ : void"
    modelFingerprint: "36417EC230887882F3CA65CDFBB34EF3"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "829B7528C154DEAD5D0227803140FA7A"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "8C5FE6A5AD487C0315BC625AB19BD10B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:httpServer,message:uniqueUuid29):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "2CAE952A6F7D4FEC4A6FD57F6CAE5B69"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:handlerAdapter,message:uniqueUuid30):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "httpServer"
      modelFingerprint: "B952110026BA55944AB3C596731560A7"
      valueUuid: "httpServer"
      methodExercised:
        expression: "channelGroup(channelGroup:defaultChannelGroup):httpServer2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "CF1F5D4123F6E66B21425B46488E3BA4"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.NettyWebServer"
        parameters:
        - name: "httpServer"
          value:
            sapientType: "MOCK"
            valueType: "reactor.netty.http.server.HttpServer"
            uuid: "httpServer"
        - name: "handlerAdapter"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter"
            uuid: "handlerAdapter"
        - name: "lifecycleTimeout"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "lifecycleTimeout-days"
            valueType: "java.time.Duration"
            uuid: "lifecycleTimeout"
        - name: "shutdown"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "GRACEFUL"
            valueType: "org.springframework.boot.web.server.Shutdown"
            uuid: "shutdown"
        - name: "resourceFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.http.client.ReactorResourceFactory"
            uuid: "resourceFactory"
      valueType: "org.springframework.boot.web.embedded.netty.NettyWebServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer"
    - sapientType: "BASIC"
      content: !<regular>
        value: "HttpServer must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid29"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter"
      uuid: "handlerAdapter"
    - sapientType: "BASIC"
      content: !<regular>
        value: "HandlerAdapter must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid30"
      fixed: true
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer2"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "io.netty.channel.group.DefaultChannelGroup"
        parameters:
        - name: "executor"
          value:
            sapientType: "MOCK"
            valueType: "io.netty.util.concurrent.EventExecutor"
            uuid: "defaultChannelGroup-executor"
        values: []
      valueType: "io.netty.channel.group.DefaultChannelGroup"
      uuid: "defaultChannelGroup"
    - sapientType: "BASIC"
      content: !<regular>
        value: -1
      valueType: "int"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 253
      expression: "this.disposableServer != null"
      range: "(253,7)-(253,35)"
      evaluatedAs: false
