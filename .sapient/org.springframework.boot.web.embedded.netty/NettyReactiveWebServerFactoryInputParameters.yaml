---
modelFingerprint: "1049E8449D94AB39F703846897761A3D"
targetClass:
  fullClassName: "org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory"
methods:
- method:
    name: "getWebServer"
    sourceCodeSignature: "WebServer getWebServer(HttpHandler httpHandler)"
    returnType: "org.springframework.boot.web.server.WebServer"
    parameters:
    - name: "httpHandler"
      type: "org.springframework.http.server.reactive.HttpHandler"
    instructionFingerprint: "F682FB0462369B40A52A5F41D9B6904A"
  paths:
  - pathId: "path1"
    testPathName: "getWebServerWhenGetSslIsEnabledAndThisServerCustomizersIsEmpty"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "75D6A48B7E3D0D0FBE9AAD5FEC54106F"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7C52F4C60272E21E0DAF74FEB8CBA6AB"
      valueUuid: "target"
    - type: "INPUT"
      name: "httpHandler"
      modelFingerprint: "54ADB25CEDDDFBF94C6420F7A69C5FBC"
      valueUuid: "httpHandler"
    - type: "STATIC"
      name: "HttpServer.class"
      modelFingerprint: "64F7135C2F1D1D5A71F05B1FE7A624EE"
      valueUuid: "HttpServer.class"
      methodExercised:
        expression: "create():httpServer"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "BA070CE899F8426CABFE38BE6B127843"
      valueUuid: "httpServer"
      methodExercised:
        expression: "bindAddress(bindAddressSupplier:uniqueUuid1):httpServer2"
    - type: "STATIC"
      name: "Ssl.class"
      modelFingerprint: "BB955C7AD5A7C21C536977E57745A4D0"
      valueUuid: "Ssl.class"
      methodExercised:
        expression: "isEnabled(ssl:ssl):boolean1"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "3709689234DD9DFE8A794E13877C6889"
      valueUuid: "ssl"
      methodExercised:
        expression: "getClientAuth():clientAuth"
    - type: "STATIC"
      name: "WebServerSslBundle.class"
      modelFingerprint: "D1767D56D737768EC2D5BFA9A32FEAD6"
      valueUuid: "WebServerSslBundle.class"
      methodExercised:
        expression: "get(ssl:fieldSsl,sslBundles:fieldSslBundles):sslBundle"
        throwsExceptions:
        - "org.springframework.boot.ssl.NoSuchSslBundleException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "70BF8A9840D32D4B902D5E58D33B7C0D"
      valueUuid: "ssl"
      methodExercised:
        expression: "getBundle():bundle"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "A91647CB447119BB97CB86EA51675C61"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:bundle):boolean2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "customizer"
      modelFingerprint: "CD0DE4A31414E7DEB4ABA28E2BC5B595"
      valueUuid: "sslServerCustomizer"
      methodExercised:
        expression: "updateSslBundle(null:sslBundle2):void2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "1A69CE2ABBEF1A6396D18378E8090163"
      valueUuid: "sslBundles"
      methodExercised:
        expression: "addBundleUpdateHandler(name:bundle,updateHandler:uniqueUuid2):void"
        throwsExceptions:
        - "org.springframework.boot.ssl.NoSuchSslBundleException"
    - type: "LOCAL_VARIABLE"
      name: "customizer"
      modelFingerprint: "7C6B3CA015CF4D3D9646C459BC8B79F0"
      valueUuid: "sslServerCustomizer"
      methodExercised:
        expression: "apply(server:httpServer2):httpServer3"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "DFF8BCBE23C0F60E28B1C6278E0B8402"
      valueUuid: "compression"
      methodExercised:
        expression: "getEnabled():enabled"
    - type: "LOCAL_VARIABLE"
      name: "compressionCustomizer"
      modelFingerprint: "16EF68623A681722028E6BE7DFAFC4FD"
      valueUuid: "compressionCustomizer"
      methodExercised:
        expression: "apply(server:httpServer3):httpServer4"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "465C4DC2AB9F4684891C4D36EA819FC3"
      valueUuid: "http2"
      methodExercised:
        expression: "isEnabled():enabled2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B256D7ACB2D2E9FC11C0DC2515740F95"
      valueUuid: "ssl"
      methodExercised:
        expression: "isEnabled():enabled3"
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "C4F3D95A2A7D5C4DB3A892BEBA4C0519"
      valueUuid: "httpServer4"
      methodExercised:
        expression: "protocol(supportedProtocols:objectArray):httpServer5"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "AEEE098DF7740744A9C1AC1AA4B9A533"
      valueUuid: "httpServer5"
      methodExercised:
        expression: "forwarded(forwardedEnabled:fieldboolean1):httpServer6"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "CEC4A90AF75C25FC6E9AEBBD3C386CD8"
      methodExercised:
        expression: "createNettyWebServer(httpServer:httpServer6,handlerAdapter:reactorHttpHandlerAdapter,lifecycleTimeout:fieldDuration,shutdown:fieldShutdown):nettyWebServer"
    - type: "LOCAL_VARIABLE"
      name: "webServer"
      modelFingerprint: "ABD871A00F6A483B8A41DC0017B27119"
      valueUuid: "nettyWebServer"
      methodExercised:
        expression: "setRouteProviders(routeProviders:arrayList):void3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C3C47E854CE48A23379703BE214AE977"
      valueUuid: "nettyWebServer"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      source: "SslServerCustomizer customizer = new SslServerCustomizer(getHttp2(),\
        \ getSsl().getClientAuth(), getSslBundle());"
      lineNumber: 175
      details: "No constructor found to create an object without any exception for\
        \ class org.springframework.boot.web.embedded.netty.SslServerCustomizer"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
        propertiesMap:
          http2:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.server.Http2"
              parameters: []
              propertiesMap:
                enabled:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: true
                  valueType: "boolean"
                  uuid: "enabled2"
            valueType: "org.springframework.boot.web.server.Http2"
            uuid: "http2"
          compression:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.server.Compression"
              parameters: []
              propertiesMap:
                enabled:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: true
                  valueType: "boolean"
                  uuid: "enabled"
            valueType: "org.springframework.boot.web.server.Compression"
            uuid: "compression"
          ssl:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.server.Ssl"
              parameters: []
              propertiesMap:
                bundle:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "A"
                  valueType: "java.lang.String"
                  uuid: "bundle"
                clientAuth:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "NONE"
                  valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
                  uuid: "clientAuth"
                enabled:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: true
                  valueType: "boolean"
                  uuid: "enabled3"
            valueType: "org.springframework.boot.web.server.Ssl"
            uuid: "ssl"
          shutdown:
            sapientType: "ENUM"
            content: !<regular>
              value: "GRACEFUL"
            valueType: "org.springframework.boot.web.server.Shutdown"
            uuid: "fieldShutdown"
          sslBundles:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslBundles"
            uuid: "sslBundles"
      valueType: "org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.http.server.reactive.HttpHandler"
      uuid: "httpHandler"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "HttpServer.class"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer2"
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "? extends java.net.SocketAddress"
      uuid: "uniqueUuid1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.Ssl"
      uuid: "Ssl.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Ssl"
        parameters: []
        propertiesMap:
          bundle:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "bundle"
          clientAuth:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
            uuid: "clientAuth"
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "enabled3"
      valueType: "org.springframework.boot.web.server.Ssl"
      uuid: "ssl"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Ssl"
        parameters: []
        propertiesMap:
          bundle:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "bundle"
          clientAuth:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
            uuid: "clientAuth"
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "enabled3"
      valueType: "org.springframework.boot.web.server.Ssl"
      uuid: "ssl"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
      uuid: "clientAuth"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.WebServerSslBundle"
      uuid: "WebServerSslBundle.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.web.server.Ssl"
      uuid: "fieldSsl"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.ssl.SslBundles"
      uuid: "fieldSslBundles"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Ssl"
        parameters: []
        propertiesMap:
          bundle:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "bundle"
          clientAuth:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
            uuid: "clientAuth"
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "enabled3"
      valueType: "org.springframework.boot.web.server.Ssl"
      uuid: "ssl"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "bundle"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "bundle"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
        parameters:
        - name: "http2"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.server.Http2"
              parameters: []
              propertiesMap:
                enabled:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: true
                  valueType: "boolean"
                  uuid: "enabled2"
            valueType: "org.springframework.boot.web.server.Http2"
            uuid: "http2"
        - name: "clientAuth"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
            uuid: "clientAuth"
        - name: "sslBundle"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "sslBundle"
      valueType: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
      uuid: "sslServerCustomizer"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundles"
      uuid: "sslBundles"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "bundle"
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      genericValueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "uniqueUuid2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
        parameters:
        - name: "http2"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.server.Http2"
              parameters: []
              propertiesMap:
                enabled:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: true
                  valueType: "boolean"
                  uuid: "enabled2"
            valueType: "org.springframework.boot.web.server.Http2"
            uuid: "http2"
        - name: "clientAuth"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
            uuid: "clientAuth"
        - name: "sslBundle"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "sslBundle"
      valueType: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
      uuid: "sslServerCustomizer"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "reactor.netty.http.server.HttpServer"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
            parameters:
            - name: "http2"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.web.server.Http2"
                  parameters: []
                  propertiesMap:
                    enabled:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: true
                      valueType: "boolean"
                      uuid: "enabled2"
                valueType: "org.springframework.boot.web.server.Http2"
                uuid: "http2"
            - name: "clientAuth"
              value:
                sapientType: "ENUM"
                content: !<regular>
                  value: "NONE"
                valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
                uuid: "clientAuth"
            - name: "sslBundle"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ssl.SslBundle"
                uuid: "sslBundle"
          valueType: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
          uuid: "sslServerCustomizer"
          fixed: true
        methodParameters:
        - name: "server"
          value:
            sapientType: "MOCK"
            valueType: "reactor.netty.http.server.HttpServer"
            uuid: "httpServer2"
        methodName: "apply"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer3"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Compression"
        parameters: []
        propertiesMap:
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "enabled"
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "compression"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "enabled"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.CompressionCustomizer"
        parameters:
        - name: "compression"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.server.Compression"
              parameters: []
              propertiesMap:
                enabled:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: true
                  valueType: "boolean"
                  uuid: "enabled"
            valueType: "org.springframework.boot.web.server.Compression"
            uuid: "compression"
      valueType: "org.springframework.boot.web.embedded.netty.CompressionCustomizer"
      uuid: "compressionCustomizer"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "reactor.netty.http.server.HttpServer"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.web.embedded.netty.CompressionCustomizer"
            parameters:
            - name: "compression"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.web.server.Compression"
                  parameters: []
                  propertiesMap:
                    enabled:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: true
                      valueType: "boolean"
                      uuid: "enabled"
                valueType: "org.springframework.boot.web.server.Compression"
                uuid: "compression"
          valueType: "org.springframework.boot.web.embedded.netty.CompressionCustomizer"
          uuid: "compressionCustomizer"
          fixed: true
        methodParameters:
        - name: "server"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "reactor.netty.http.server.HttpServer"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
                  parameters:
                  - name: "http2"
                    value:
                      sapientType: "OBJECT"
                      content: !<new>
                        target: "org.springframework.boot.web.server.Http2"
                        parameters: []
                        propertiesMap:
                          enabled:
                            sapientType: "BASIC"
                            content: !<regular>
                              value: true
                            valueType: "boolean"
                            uuid: "enabled2"
                      valueType: "org.springframework.boot.web.server.Http2"
                      uuid: "http2"
                  - name: "clientAuth"
                    value:
                      sapientType: "ENUM"
                      content: !<regular>
                        value: "NONE"
                      valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
                      uuid: "clientAuth"
                  - name: "sslBundle"
                    value:
                      sapientType: "MOCK"
                      valueType: "org.springframework.boot.ssl.SslBundle"
                      uuid: "sslBundle"
                valueType: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
                uuid: "sslServerCustomizer"
                fixed: true
              methodParameters:
              - name: "server"
                value:
                  sapientType: "MOCK"
                  valueType: "reactor.netty.http.server.HttpServer"
                  uuid: "httpServer2"
              methodName: "apply"
            valueType: "reactor.netty.http.server.HttpServer"
            uuid: "httpServer3"
        methodName: "apply"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer4"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "reactor.netty.http.server.HttpServer"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
            parameters:
            - name: "http2"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.web.server.Http2"
                  parameters: []
                  propertiesMap:
                    enabled:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: true
                      valueType: "boolean"
                      uuid: "enabled2"
                valueType: "org.springframework.boot.web.server.Http2"
                uuid: "http2"
            - name: "clientAuth"
              value:
                sapientType: "ENUM"
                content: !<regular>
                  value: "NONE"
                valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
                uuid: "clientAuth"
            - name: "sslBundle"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ssl.SslBundle"
                uuid: "sslBundle"
          valueType: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
          uuid: "sslServerCustomizer"
          fixed: true
        methodParameters:
        - name: "server"
          value:
            sapientType: "MOCK"
            valueType: "reactor.netty.http.server.HttpServer"
            uuid: "httpServer2"
        methodName: "apply"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Http2"
        parameters: []
        propertiesMap:
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "enabled2"
      valueType: "org.springframework.boot.web.server.Http2"
      uuid: "http2"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "enabled2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Ssl"
        parameters: []
        propertiesMap:
          bundle:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "bundle"
          clientAuth:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
            uuid: "clientAuth"
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "enabled3"
      valueType: "org.springframework.boot.web.server.Ssl"
      uuid: "ssl"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "enabled3"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "reactor.netty.http.server.HttpServer"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.web.embedded.netty.CompressionCustomizer"
            parameters:
            - name: "compression"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.web.server.Compression"
                  parameters: []
                  propertiesMap:
                    enabled:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: true
                      valueType: "boolean"
                      uuid: "enabled"
                valueType: "org.springframework.boot.web.server.Compression"
                uuid: "compression"
          valueType: "org.springframework.boot.web.embedded.netty.CompressionCustomizer"
          uuid: "compressionCustomizer"
          fixed: true
        methodParameters:
        - name: "server"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "reactor.netty.http.server.HttpServer"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
                  parameters:
                  - name: "http2"
                    value:
                      sapientType: "OBJECT"
                      content: !<new>
                        target: "org.springframework.boot.web.server.Http2"
                        parameters: []
                        propertiesMap:
                          enabled:
                            sapientType: "BASIC"
                            content: !<regular>
                              value: true
                            valueType: "boolean"
                            uuid: "enabled2"
                      valueType: "org.springframework.boot.web.server.Http2"
                      uuid: "http2"
                  - name: "clientAuth"
                    value:
                      sapientType: "ENUM"
                      content: !<regular>
                        value: "NONE"
                      valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
                      uuid: "clientAuth"
                  - name: "sslBundle"
                    value:
                      sapientType: "MOCK"
                      valueType: "org.springframework.boot.ssl.SslBundle"
                      uuid: "sslBundle"
                valueType: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
                uuid: "sslServerCustomizer"
                fixed: true
              methodParameters:
              - name: "server"
                value:
                  sapientType: "MOCK"
                  valueType: "reactor.netty.http.server.HttpServer"
                  uuid: "httpServer2"
              methodName: "apply"
            valueType: "reactor.netty.http.server.HttpServer"
            uuid: "httpServer3"
        methodName: "apply"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer4"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "reactor.netty.http.server.HttpServer"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "reactor.netty.http.server.HttpServer"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.boot.web.embedded.netty.CompressionCustomizer"
                parameters:
                - name: "compression"
                  value:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "org.springframework.boot.web.server.Compression"
                      parameters: []
                      propertiesMap:
                        enabled:
                          sapientType: "BASIC"
                          content: !<regular>
                            value: true
                          valueType: "boolean"
                          uuid: "enabled"
                    valueType: "org.springframework.boot.web.server.Compression"
                    uuid: "compression"
              valueType: "org.springframework.boot.web.embedded.netty.CompressionCustomizer"
              uuid: "compressionCustomizer"
              fixed: true
            methodParameters:
            - name: "server"
              value:
                sapientType: "OBJECT"
                content: !<method_return_from_value>
                  target: "reactor.netty.http.server.HttpServer"
                  localVariableValue:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
                      parameters:
                      - name: "http2"
                        value:
                          sapientType: "OBJECT"
                          content: !<new>
                            target: "org.springframework.boot.web.server.Http2"
                            parameters: []
                            propertiesMap:
                              enabled:
                                sapientType: "BASIC"
                                content: !<regular>
                                  value: true
                                valueType: "boolean"
                                uuid: "enabled2"
                          valueType: "org.springframework.boot.web.server.Http2"
                          uuid: "http2"
                      - name: "clientAuth"
                        value:
                          sapientType: "ENUM"
                          content: !<regular>
                            value: "NONE"
                          valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
                          uuid: "clientAuth"
                      - name: "sslBundle"
                        value:
                          sapientType: "MOCK"
                          valueType: "org.springframework.boot.ssl.SslBundle"
                          uuid: "sslBundle"
                    valueType: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
                    uuid: "sslServerCustomizer"
                    fixed: true
                  methodParameters:
                  - name: "server"
                    value:
                      sapientType: "MOCK"
                      valueType: "reactor.netty.http.server.HttpServer"
                      uuid: "httpServer2"
                  methodName: "apply"
                valueType: "reactor.netty.http.server.HttpServer"
                uuid: "httpServer3"
            methodName: "apply"
          valueType: "reactor.netty.http.server.HttpServer"
          uuid: "httpServer4"
        methodParameters:
        - name: "supportedProtocols"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "HTTP11"
                  valueType: "reactor.netty.http.HttpProtocol"
                1:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "H2"
                  valueType: "reactor.netty.http.HttpProtocol"
            valueType: "reactor.netty.http.HttpProtocol[]"
            uuid: "objectArray"
            collectionUuid: "arrayList2"
        methodName: "protocol"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer5"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "ENUM"
            content: !<regular>
              value: "HTTP11"
            valueType: "reactor.netty.http.HttpProtocol"
            uuid: "uniqueUuid3"
          1:
            sapientType: "ENUM"
            content: !<regular>
              value: "H2"
            valueType: "reactor.netty.http.HttpProtocol"
            uuid: "uniqueUuid4"
      valueType: "reactor.netty.http.HttpProtocol[]"
      uuid: "objectArray"
      collectionUuid: "arrayList2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "reactor.netty.http.server.HttpServer"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "reactor.netty.http.server.HttpServer"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.boot.web.embedded.netty.CompressionCustomizer"
                parameters:
                - name: "compression"
                  value:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "org.springframework.boot.web.server.Compression"
                      parameters: []
                      propertiesMap:
                        enabled:
                          sapientType: "BASIC"
                          content: !<regular>
                            value: true
                          valueType: "boolean"
                          uuid: "enabled"
                    valueType: "org.springframework.boot.web.server.Compression"
                    uuid: "compression"
              valueType: "org.springframework.boot.web.embedded.netty.CompressionCustomizer"
              uuid: "compressionCustomizer"
              fixed: true
            methodParameters:
            - name: "server"
              value:
                sapientType: "OBJECT"
                content: !<method_return_from_value>
                  target: "reactor.netty.http.server.HttpServer"
                  localVariableValue:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
                      parameters:
                      - name: "http2"
                        value:
                          sapientType: "OBJECT"
                          content: !<new>
                            target: "org.springframework.boot.web.server.Http2"
                            parameters: []
                            propertiesMap:
                              enabled:
                                sapientType: "BASIC"
                                content: !<regular>
                                  value: true
                                valueType: "boolean"
                                uuid: "enabled2"
                          valueType: "org.springframework.boot.web.server.Http2"
                          uuid: "http2"
                      - name: "clientAuth"
                        value:
                          sapientType: "ENUM"
                          content: !<regular>
                            value: "NONE"
                          valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
                          uuid: "clientAuth"
                      - name: "sslBundle"
                        value:
                          sapientType: "MOCK"
                          valueType: "org.springframework.boot.ssl.SslBundle"
                          uuid: "sslBundle"
                    valueType: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
                    uuid: "sslServerCustomizer"
                    fixed: true
                  methodParameters:
                  - name: "server"
                    value:
                      sapientType: "MOCK"
                      valueType: "reactor.netty.http.server.HttpServer"
                      uuid: "httpServer2"
                  methodName: "apply"
                valueType: "reactor.netty.http.server.HttpServer"
                uuid: "httpServer3"
            methodName: "apply"
          valueType: "reactor.netty.http.server.HttpServer"
          uuid: "httpServer4"
        methodParameters:
        - name: "supportedProtocols"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "HTTP11"
                  valueType: "reactor.netty.http.HttpProtocol"
                1:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "H2"
                  valueType: "reactor.netty.http.HttpProtocol"
            valueType: "reactor.netty.http.HttpProtocol[]"
            uuid: "objectArray"
            collectionUuid: "arrayList2"
        methodName: "protocol"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer5"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "reactor.netty.http.server.HttpServer"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "reactor.netty.http.server.HttpServer"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<method_return_from_value>
                target: "reactor.netty.http.server.HttpServer"
                localVariableValue:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.springframework.boot.web.embedded.netty.CompressionCustomizer"
                    parameters:
                    - name: "compression"
                      value:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.springframework.boot.web.server.Compression"
                          parameters: []
                          propertiesMap:
                            enabled:
                              sapientType: "BASIC"
                              content: !<regular>
                                value: true
                              valueType: "boolean"
                              uuid: "enabled"
                        valueType: "org.springframework.boot.web.server.Compression"
                        uuid: "compression"
                  valueType: "org.springframework.boot.web.embedded.netty.CompressionCustomizer"
                  uuid: "compressionCustomizer"
                  fixed: true
                methodParameters:
                - name: "server"
                  value:
                    sapientType: "OBJECT"
                    content: !<method_return_from_value>
                      target: "reactor.netty.http.server.HttpServer"
                      localVariableValue:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
                          parameters:
                          - name: "http2"
                            value:
                              sapientType: "OBJECT"
                              content: !<new>
                                target: "org.springframework.boot.web.server.Http2"
                                parameters: []
                                propertiesMap:
                                  enabled:
                                    sapientType: "BASIC"
                                    content: !<regular>
                                      value: true
                                    valueType: "boolean"
                                    uuid: "enabled2"
                              valueType: "org.springframework.boot.web.server.Http2"
                              uuid: "http2"
                          - name: "clientAuth"
                            value:
                              sapientType: "ENUM"
                              content: !<regular>
                                value: "NONE"
                              valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
                              uuid: "clientAuth"
                          - name: "sslBundle"
                            value:
                              sapientType: "MOCK"
                              valueType: "org.springframework.boot.ssl.SslBundle"
                              uuid: "sslBundle"
                        valueType: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
                        uuid: "sslServerCustomizer"
                        fixed: true
                      methodParameters:
                      - name: "server"
                        value:
                          sapientType: "MOCK"
                          valueType: "reactor.netty.http.server.HttpServer"
                          uuid: "httpServer2"
                      methodName: "apply"
                    valueType: "reactor.netty.http.server.HttpServer"
                    uuid: "httpServer3"
                methodName: "apply"
              valueType: "reactor.netty.http.server.HttpServer"
              uuid: "httpServer4"
            methodParameters:
            - name: "supportedProtocols"
              value:
                sapientType: "ARRAY"
                content: !<array>
                  values:
                    0:
                      sapientType: "ENUM"
                      content: !<regular>
                        value: "HTTP11"
                      valueType: "reactor.netty.http.HttpProtocol"
                    1:
                      sapientType: "ENUM"
                      content: !<regular>
                        value: "H2"
                      valueType: "reactor.netty.http.HttpProtocol"
                valueType: "reactor.netty.http.HttpProtocol[]"
                uuid: "objectArray"
                collectionUuid: "arrayList2"
            methodName: "protocol"
          valueType: "reactor.netty.http.server.HttpServer"
          uuid: "httpServer5"
        methodParameters:
        - name: "forwardedEnabled"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "fieldboolean1"
        methodName: "forwarded"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer6"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "fieldboolean1"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.NettyWebServer"
        parameters:
        - name: "httpServer"
          value:
            sapientType: "MOCK"
            valueType: "reactor.netty.http.server.HttpServer"
            uuid: "nettyWebServer-httpServer"
        - name: "handlerAdapter"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter"
            uuid: "nettyWebServer-handlerAdapter"
        - name: "lifecycleTimeout"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "nettyWebServer-lifecycleTimeout-days"
            valueType: "java.time.Duration"
            uuid: "nettyWebServer-lifecycleTimeout"
        - name: "shutdown"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "GRACEFUL"
            valueType: "org.springframework.boot.web.server.Shutdown"
            uuid: "nettyWebServer-shutdown"
        propertiesMap:
          routeProviders:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.web.embedded.netty.NettyRouteProvider"
            uuid: "arrayList"
      valueType: "org.springframework.boot.web.embedded.netty.NettyWebServer"
      uuid: "nettyWebServer"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "reactor.netty.http.server.HttpServer"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "reactor.netty.http.server.HttpServer"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<method_return_from_value>
                target: "reactor.netty.http.server.HttpServer"
                localVariableValue:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.springframework.boot.web.embedded.netty.CompressionCustomizer"
                    parameters:
                    - name: "compression"
                      value:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.springframework.boot.web.server.Compression"
                          parameters: []
                          propertiesMap:
                            enabled:
                              sapientType: "BASIC"
                              content: !<regular>
                                value: true
                              valueType: "boolean"
                              uuid: "enabled"
                        valueType: "org.springframework.boot.web.server.Compression"
                        uuid: "compression"
                  valueType: "org.springframework.boot.web.embedded.netty.CompressionCustomizer"
                  uuid: "compressionCustomizer"
                  fixed: true
                methodParameters:
                - name: "server"
                  value:
                    sapientType: "OBJECT"
                    content: !<method_return_from_value>
                      target: "reactor.netty.http.server.HttpServer"
                      localVariableValue:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
                          parameters:
                          - name: "http2"
                            value:
                              sapientType: "OBJECT"
                              content: !<new>
                                target: "org.springframework.boot.web.server.Http2"
                                parameters: []
                                propertiesMap:
                                  enabled:
                                    sapientType: "BASIC"
                                    content: !<regular>
                                      value: true
                                    valueType: "boolean"
                                    uuid: "enabled2"
                              valueType: "org.springframework.boot.web.server.Http2"
                              uuid: "http2"
                          - name: "clientAuth"
                            value:
                              sapientType: "ENUM"
                              content: !<regular>
                                value: "NONE"
                              valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
                              uuid: "clientAuth"
                          - name: "sslBundle"
                            value:
                              sapientType: "MOCK"
                              valueType: "org.springframework.boot.ssl.SslBundle"
                              uuid: "sslBundle"
                        valueType: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
                        uuid: "sslServerCustomizer"
                        fixed: true
                      methodParameters:
                      - name: "server"
                        value:
                          sapientType: "MOCK"
                          valueType: "reactor.netty.http.server.HttpServer"
                          uuid: "httpServer2"
                      methodName: "apply"
                    valueType: "reactor.netty.http.server.HttpServer"
                    uuid: "httpServer3"
                methodName: "apply"
              valueType: "reactor.netty.http.server.HttpServer"
              uuid: "httpServer4"
            methodParameters:
            - name: "supportedProtocols"
              value:
                sapientType: "ARRAY"
                content: !<array>
                  values:
                    0:
                      sapientType: "ENUM"
                      content: !<regular>
                        value: "HTTP11"
                      valueType: "reactor.netty.http.HttpProtocol"
                    1:
                      sapientType: "ENUM"
                      content: !<regular>
                        value: "H2"
                      valueType: "reactor.netty.http.HttpProtocol"
                valueType: "reactor.netty.http.HttpProtocol[]"
                uuid: "objectArray"
                collectionUuid: "arrayList2"
            methodName: "protocol"
          valueType: "reactor.netty.http.server.HttpServer"
          uuid: "httpServer5"
        methodParameters:
        - name: "forwardedEnabled"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "fieldboolean1"
        methodName: "forwarded"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer6"
    - sapientType: "ANY"
      valueType: "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter"
      uuid: "reactorHttpHandlerAdapter"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.time.Duration"
      uuid: "fieldDuration"
    - sapientType: "ENUM"
      content: !<regular>
        value: "GRACEFUL"
      valueType: "org.springframework.boot.web.server.Shutdown"
      uuid: "fieldShutdown"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.NettyWebServer"
        parameters:
        - name: "httpServer"
          value:
            sapientType: "MOCK"
            valueType: "reactor.netty.http.server.HttpServer"
            uuid: "nettyWebServer-httpServer"
        - name: "handlerAdapter"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter"
            uuid: "nettyWebServer-handlerAdapter"
        - name: "lifecycleTimeout"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "nettyWebServer-lifecycleTimeout-days"
            valueType: "java.time.Duration"
            uuid: "nettyWebServer-lifecycleTimeout"
        - name: "shutdown"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "GRACEFUL"
            valueType: "org.springframework.boot.web.server.Shutdown"
            uuid: "nettyWebServer-shutdown"
        propertiesMap:
          routeProviders:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.web.embedded.netty.NettyRouteProvider"
            uuid: "arrayList"
      valueType: "org.springframework.boot.web.embedded.netty.NettyWebServer"
      uuid: "nettyWebServer"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.web.embedded.netty.NettyRouteProvider"
      uuid: "arrayList"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.NettyWebServer"
        parameters:
        - name: "httpServer"
          value:
            sapientType: "MOCK"
            valueType: "reactor.netty.http.server.HttpServer"
            uuid: "nettyWebServer-httpServer"
        - name: "handlerAdapter"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter"
            uuid: "nettyWebServer-handlerAdapter"
        - name: "lifecycleTimeout"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "nettyWebServer-lifecycleTimeout-days"
            valueType: "java.time.Duration"
            uuid: "nettyWebServer-lifecycleTimeout"
        - name: "shutdown"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "GRACEFUL"
            valueType: "org.springframework.boot.web.server.Shutdown"
            uuid: "nettyWebServer-shutdown"
        propertiesMap:
          routeProviders:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.web.embedded.netty.NettyRouteProvider"
            uuid: "arrayList"
      valueType: "org.springframework.boot.web.embedded.netty.NettyWebServer"
      uuid: "nettyWebServer"
    branches:
    - lineNumber: 163
      expression: "Ssl.isEnabled(getSsl())"
      range: "(163,7)-(163,29)"
      evaluatedAs: true
      internalMethodName: "createHttpServer"
    - lineNumber: 177
      expression: "StringUtils.hasText(bundleName)"
      range: "(177,7)-(177,37)"
      evaluatedAs: true
      internalMethodName: "customizeSslConfiguration"
    - lineNumber: 166
      expression: "getCompression() != null"
      range: "(166,7)-(166,30)"
      evaluatedAs: true
      internalMethodName: "createHttpServer"
    - lineNumber: 166
      expression: "getCompression().getEnabled()"
      range: "(166,35)-(166,63)"
      evaluatedAs: true
      internalMethodName: "createHttpServer"
    - lineNumber: 186
      expression: "getHttp2() != null"
      range: "(186,7)-(186,24)"
      evaluatedAs: true
      internalMethodName: "listProtocols"
    - lineNumber: 186
      expression: "getHttp2().isEnabled()"
      range: "(186,29)-(186,50)"
      evaluatedAs: true
      internalMethodName: "listProtocols"
    - lineNumber: 187
      expression: "getSsl() != null"
      range: "(187,8)-(187,23)"
      evaluatedAs: true
      internalMethodName: "listProtocols"
    - lineNumber: 187
      expression: "getSsl().isEnabled()"
      range: "(187,28)-(187,47)"
      evaluatedAs: true
      internalMethodName: "listProtocols"
    - lineNumber: 205
      expression: "for-each(this.serverCustomizers)"
      range: "(205,43)-(205,64)"
      evaluatedAs: false
      internalMethodName: "applyCustomizers"
  - pathId: "path2"
    testPathName: "getWebServerWhenGetSslNotIsEnabledAndThisServerCustomizersIsEmpty"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "318D5AA4DDB3F8C25DF4727BFE10D4C3"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7C52F4C60272E21E0DAF74FEB8CBA6AB"
      valueUuid: "target"
    - type: "INPUT"
      name: "httpHandler"
      modelFingerprint: "54ADB25CEDDDFBF94C6420F7A69C5FBC"
      valueUuid: "httpHandler"
    - type: "STATIC"
      name: "HttpServer.class"
      modelFingerprint: "64F7135C2F1D1D5A71F05B1FE7A624EE"
      valueUuid: "HttpServer.class"
      methodExercised:
        expression: "create():httpServer"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "BA070CE899F8426CABFE38BE6B127843"
      valueUuid: "httpServer"
      methodExercised:
        expression: "bindAddress(bindAddressSupplier:uniqueUuid5):httpServer2"
    - type: "STATIC"
      name: "Ssl.class"
      modelFingerprint: "BB955C7AD5A7C21C536977E57745A4D0"
      valueUuid: "Ssl.class"
      methodExercised:
        expression: "isEnabled(ssl:ssl):boolean1"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "3709689234DD9DFE8A794E13877C6889"
      valueUuid: "ssl"
      methodExercised:
        expression: "getClientAuth():clientAuth"
    - type: "STATIC"
      name: "WebServerSslBundle.class"
      modelFingerprint: "D1767D56D737768EC2D5BFA9A32FEAD6"
      valueUuid: "WebServerSslBundle.class"
      methodExercised:
        expression: "get(ssl:fieldSsl,sslBundles:fieldSslBundles):sslBundle"
        throwsExceptions:
        - "org.springframework.boot.ssl.NoSuchSslBundleException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "70BF8A9840D32D4B902D5E58D33B7C0D"
      valueUuid: "ssl"
      methodExercised:
        expression: "getBundle():bundle"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "A91647CB447119BB97CB86EA51675C61"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:bundle):boolean2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "customizer"
      modelFingerprint: "CD0DE4A31414E7DEB4ABA28E2BC5B595"
      valueUuid: "sslServerCustomizer"
      methodExercised:
        expression: "updateSslBundle(null:sslBundle2):void2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "1A69CE2ABBEF1A6396D18378E8090163"
      valueUuid: "sslBundles"
      methodExercised:
        expression: "addBundleUpdateHandler(name:bundle,updateHandler:uniqueUuid6):void"
        throwsExceptions:
        - "org.springframework.boot.ssl.NoSuchSslBundleException"
    - type: "LOCAL_VARIABLE"
      name: "customizer"
      modelFingerprint: "7C6B3CA015CF4D3D9646C459BC8B79F0"
      valueUuid: "sslServerCustomizer"
      methodExercised:
        expression: "apply(server:httpServer2):httpServer3"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "DFF8BCBE23C0F60E28B1C6278E0B8402"
      valueUuid: "compression"
      methodExercised:
        expression: "getEnabled():enabled"
    - type: "LOCAL_VARIABLE"
      name: "compressionCustomizer"
      modelFingerprint: "16EF68623A681722028E6BE7DFAFC4FD"
      valueUuid: "compressionCustomizer"
      methodExercised:
        expression: "apply(server:httpServer3):httpServer4"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "465C4DC2AB9F4684891C4D36EA819FC3"
      valueUuid: "http2"
      methodExercised:
        expression: "isEnabled():enabled2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "D6B3E7435866224ABFB200BF84B1B6D3"
      valueUuid: "ssl"
      methodExercised:
        expression: "isEnabled():enabled3"
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "2225FDBDE6E4F5AF7C3F03753C4B3AA2"
      valueUuid: "httpServer4"
      methodExercised:
        expression: "protocol(supportedProtocols:objectArray):httpServer5"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A3B89B6E991D95C0687F04E18CCEF096"
      valueUuid: "httpServer5"
      methodExercised:
        expression: "forwarded(forwardedEnabled:fieldboolean1):httpServer6"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "F7C545978848500B9FE7901A0417FC59"
      methodExercised:
        expression: "createNettyWebServer(httpServer:httpServer6,handlerAdapter:reactorHttpHandlerAdapter,lifecycleTimeout:fieldDuration,shutdown:fieldShutdown):nettyWebServer"
    - type: "LOCAL_VARIABLE"
      name: "webServer"
      modelFingerprint: "ABD871A00F6A483B8A41DC0017B27119"
      valueUuid: "nettyWebServer"
      methodExercised:
        expression: "setRouteProviders(routeProviders:arrayList):void3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C3C47E854CE48A23379703BE214AE977"
      valueUuid: "nettyWebServer"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      source: "SslServerCustomizer customizer = new SslServerCustomizer(getHttp2(),\
        \ getSsl().getClientAuth(), getSslBundle());"
      lineNumber: 175
      details: "No constructor found to create an object without any exception for\
        \ class org.springframework.boot.web.embedded.netty.SslServerCustomizer"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
        propertiesMap:
          http2:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.server.Http2"
              parameters: []
              propertiesMap:
                enabled:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: true
                  valueType: "boolean"
                  uuid: "enabled2"
            valueType: "org.springframework.boot.web.server.Http2"
            uuid: "http2"
          compression:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.server.Compression"
              parameters: []
              propertiesMap:
                enabled:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: true
                  valueType: "boolean"
                  uuid: "enabled"
            valueType: "org.springframework.boot.web.server.Compression"
            uuid: "compression"
          ssl:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.server.Ssl"
              parameters: []
              propertiesMap:
                bundle:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "A"
                  valueType: "java.lang.String"
                  uuid: "bundle"
                clientAuth:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "NONE"
                  valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
                  uuid: "clientAuth"
                enabled:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: false
                  valueType: "boolean"
                  uuid: "enabled3"
            valueType: "org.springframework.boot.web.server.Ssl"
            uuid: "ssl"
          shutdown:
            sapientType: "ENUM"
            content: !<regular>
              value: "GRACEFUL"
            valueType: "org.springframework.boot.web.server.Shutdown"
            uuid: "fieldShutdown"
          sslBundles:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslBundles"
            uuid: "sslBundles"
      valueType: "org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.http.server.reactive.HttpHandler"
      uuid: "httpHandler"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "HttpServer.class"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer2"
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "? extends java.net.SocketAddress"
      uuid: "uniqueUuid5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.Ssl"
      uuid: "Ssl.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Ssl"
        parameters: []
        propertiesMap:
          bundle:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "bundle"
          clientAuth:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
            uuid: "clientAuth"
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "enabled3"
      valueType: "org.springframework.boot.web.server.Ssl"
      uuid: "ssl"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Ssl"
        parameters: []
        propertiesMap:
          bundle:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "bundle"
          clientAuth:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
            uuid: "clientAuth"
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "enabled3"
      valueType: "org.springframework.boot.web.server.Ssl"
      uuid: "ssl"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
      uuid: "clientAuth"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.WebServerSslBundle"
      uuid: "WebServerSslBundle.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.web.server.Ssl"
      uuid: "fieldSsl"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.ssl.SslBundles"
      uuid: "fieldSslBundles"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Ssl"
        parameters: []
        propertiesMap:
          bundle:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "bundle"
          clientAuth:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
            uuid: "clientAuth"
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "enabled3"
      valueType: "org.springframework.boot.web.server.Ssl"
      uuid: "ssl"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "bundle"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "bundle"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
        parameters:
        - name: "http2"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.server.Http2"
              parameters: []
              propertiesMap:
                enabled:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: true
                  valueType: "boolean"
                  uuid: "enabled2"
            valueType: "org.springframework.boot.web.server.Http2"
            uuid: "http2"
        - name: "clientAuth"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
            uuid: "clientAuth"
        - name: "sslBundle"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "sslBundle"
      valueType: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
      uuid: "sslServerCustomizer"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundles"
      uuid: "sslBundles"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "bundle"
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      genericValueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "uniqueUuid6"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
        parameters:
        - name: "http2"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.server.Http2"
              parameters: []
              propertiesMap:
                enabled:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: true
                  valueType: "boolean"
                  uuid: "enabled2"
            valueType: "org.springframework.boot.web.server.Http2"
            uuid: "http2"
        - name: "clientAuth"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
            uuid: "clientAuth"
        - name: "sslBundle"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "sslBundle"
      valueType: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
      uuid: "sslServerCustomizer"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "reactor.netty.http.server.HttpServer"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
            parameters:
            - name: "http2"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.web.server.Http2"
                  parameters: []
                  propertiesMap:
                    enabled:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: true
                      valueType: "boolean"
                      uuid: "enabled2"
                valueType: "org.springframework.boot.web.server.Http2"
                uuid: "http2"
            - name: "clientAuth"
              value:
                sapientType: "ENUM"
                content: !<regular>
                  value: "NONE"
                valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
                uuid: "clientAuth"
            - name: "sslBundle"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ssl.SslBundle"
                uuid: "sslBundle"
          valueType: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
          uuid: "sslServerCustomizer"
          fixed: true
        methodParameters:
        - name: "server"
          value:
            sapientType: "MOCK"
            valueType: "reactor.netty.http.server.HttpServer"
            uuid: "httpServer2"
        methodName: "apply"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer3"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Compression"
        parameters: []
        propertiesMap:
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "enabled"
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "compression"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "enabled"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.CompressionCustomizer"
        parameters:
        - name: "compression"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.server.Compression"
              parameters: []
              propertiesMap:
                enabled:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: true
                  valueType: "boolean"
                  uuid: "enabled"
            valueType: "org.springframework.boot.web.server.Compression"
            uuid: "compression"
      valueType: "org.springframework.boot.web.embedded.netty.CompressionCustomizer"
      uuid: "compressionCustomizer"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "reactor.netty.http.server.HttpServer"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.web.embedded.netty.CompressionCustomizer"
            parameters:
            - name: "compression"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.web.server.Compression"
                  parameters: []
                  propertiesMap:
                    enabled:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: true
                      valueType: "boolean"
                      uuid: "enabled"
                valueType: "org.springframework.boot.web.server.Compression"
                uuid: "compression"
          valueType: "org.springframework.boot.web.embedded.netty.CompressionCustomizer"
          uuid: "compressionCustomizer"
          fixed: true
        methodParameters:
        - name: "server"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "reactor.netty.http.server.HttpServer"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
                  parameters:
                  - name: "http2"
                    value:
                      sapientType: "OBJECT"
                      content: !<new>
                        target: "org.springframework.boot.web.server.Http2"
                        parameters: []
                        propertiesMap:
                          enabled:
                            sapientType: "BASIC"
                            content: !<regular>
                              value: true
                            valueType: "boolean"
                            uuid: "enabled2"
                      valueType: "org.springframework.boot.web.server.Http2"
                      uuid: "http2"
                  - name: "clientAuth"
                    value:
                      sapientType: "ENUM"
                      content: !<regular>
                        value: "NONE"
                      valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
                      uuid: "clientAuth"
                  - name: "sslBundle"
                    value:
                      sapientType: "MOCK"
                      valueType: "org.springframework.boot.ssl.SslBundle"
                      uuid: "sslBundle"
                valueType: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
                uuid: "sslServerCustomizer"
                fixed: true
              methodParameters:
              - name: "server"
                value:
                  sapientType: "MOCK"
                  valueType: "reactor.netty.http.server.HttpServer"
                  uuid: "httpServer2"
              methodName: "apply"
            valueType: "reactor.netty.http.server.HttpServer"
            uuid: "httpServer3"
        methodName: "apply"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer4"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "reactor.netty.http.server.HttpServer"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
            parameters:
            - name: "http2"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.web.server.Http2"
                  parameters: []
                  propertiesMap:
                    enabled:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: true
                      valueType: "boolean"
                      uuid: "enabled2"
                valueType: "org.springframework.boot.web.server.Http2"
                uuid: "http2"
            - name: "clientAuth"
              value:
                sapientType: "ENUM"
                content: !<regular>
                  value: "NONE"
                valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
                uuid: "clientAuth"
            - name: "sslBundle"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ssl.SslBundle"
                uuid: "sslBundle"
          valueType: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
          uuid: "sslServerCustomizer"
          fixed: true
        methodParameters:
        - name: "server"
          value:
            sapientType: "MOCK"
            valueType: "reactor.netty.http.server.HttpServer"
            uuid: "httpServer2"
        methodName: "apply"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Http2"
        parameters: []
        propertiesMap:
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "enabled2"
      valueType: "org.springframework.boot.web.server.Http2"
      uuid: "http2"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "enabled2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Ssl"
        parameters: []
        propertiesMap:
          bundle:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "bundle"
          clientAuth:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
            uuid: "clientAuth"
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "enabled3"
      valueType: "org.springframework.boot.web.server.Ssl"
      uuid: "ssl"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "enabled3"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "reactor.netty.http.server.HttpServer"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.web.embedded.netty.CompressionCustomizer"
            parameters:
            - name: "compression"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.web.server.Compression"
                  parameters: []
                  propertiesMap:
                    enabled:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: true
                      valueType: "boolean"
                      uuid: "enabled"
                valueType: "org.springframework.boot.web.server.Compression"
                uuid: "compression"
          valueType: "org.springframework.boot.web.embedded.netty.CompressionCustomizer"
          uuid: "compressionCustomizer"
          fixed: true
        methodParameters:
        - name: "server"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "reactor.netty.http.server.HttpServer"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
                  parameters:
                  - name: "http2"
                    value:
                      sapientType: "OBJECT"
                      content: !<new>
                        target: "org.springframework.boot.web.server.Http2"
                        parameters: []
                        propertiesMap:
                          enabled:
                            sapientType: "BASIC"
                            content: !<regular>
                              value: true
                            valueType: "boolean"
                            uuid: "enabled2"
                      valueType: "org.springframework.boot.web.server.Http2"
                      uuid: "http2"
                  - name: "clientAuth"
                    value:
                      sapientType: "ENUM"
                      content: !<regular>
                        value: "NONE"
                      valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
                      uuid: "clientAuth"
                  - name: "sslBundle"
                    value:
                      sapientType: "MOCK"
                      valueType: "org.springframework.boot.ssl.SslBundle"
                      uuid: "sslBundle"
                valueType: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
                uuid: "sslServerCustomizer"
                fixed: true
              methodParameters:
              - name: "server"
                value:
                  sapientType: "MOCK"
                  valueType: "reactor.netty.http.server.HttpServer"
                  uuid: "httpServer2"
              methodName: "apply"
            valueType: "reactor.netty.http.server.HttpServer"
            uuid: "httpServer3"
        methodName: "apply"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer4"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "reactor.netty.http.server.HttpServer"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "reactor.netty.http.server.HttpServer"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.boot.web.embedded.netty.CompressionCustomizer"
                parameters:
                - name: "compression"
                  value:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "org.springframework.boot.web.server.Compression"
                      parameters: []
                      propertiesMap:
                        enabled:
                          sapientType: "BASIC"
                          content: !<regular>
                            value: true
                          valueType: "boolean"
                          uuid: "enabled"
                    valueType: "org.springframework.boot.web.server.Compression"
                    uuid: "compression"
              valueType: "org.springframework.boot.web.embedded.netty.CompressionCustomizer"
              uuid: "compressionCustomizer"
              fixed: true
            methodParameters:
            - name: "server"
              value:
                sapientType: "OBJECT"
                content: !<method_return_from_value>
                  target: "reactor.netty.http.server.HttpServer"
                  localVariableValue:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
                      parameters:
                      - name: "http2"
                        value:
                          sapientType: "OBJECT"
                          content: !<new>
                            target: "org.springframework.boot.web.server.Http2"
                            parameters: []
                            propertiesMap:
                              enabled:
                                sapientType: "BASIC"
                                content: !<regular>
                                  value: true
                                valueType: "boolean"
                                uuid: "enabled2"
                          valueType: "org.springframework.boot.web.server.Http2"
                          uuid: "http2"
                      - name: "clientAuth"
                        value:
                          sapientType: "ENUM"
                          content: !<regular>
                            value: "NONE"
                          valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
                          uuid: "clientAuth"
                      - name: "sslBundle"
                        value:
                          sapientType: "MOCK"
                          valueType: "org.springframework.boot.ssl.SslBundle"
                          uuid: "sslBundle"
                    valueType: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
                    uuid: "sslServerCustomizer"
                    fixed: true
                  methodParameters:
                  - name: "server"
                    value:
                      sapientType: "MOCK"
                      valueType: "reactor.netty.http.server.HttpServer"
                      uuid: "httpServer2"
                  methodName: "apply"
                valueType: "reactor.netty.http.server.HttpServer"
                uuid: "httpServer3"
            methodName: "apply"
          valueType: "reactor.netty.http.server.HttpServer"
          uuid: "httpServer4"
        methodParameters:
        - name: "supportedProtocols"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "HTTP11"
                  valueType: "reactor.netty.http.HttpProtocol"
                1:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "H2C"
                  valueType: "reactor.netty.http.HttpProtocol"
            valueType: "reactor.netty.http.HttpProtocol[]"
            uuid: "objectArray"
            collectionUuid: "arrayList2"
        methodName: "protocol"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer5"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "ENUM"
            content: !<regular>
              value: "HTTP11"
            valueType: "reactor.netty.http.HttpProtocol"
            uuid: "uniqueUuid7"
          1:
            sapientType: "ENUM"
            content: !<regular>
              value: "H2C"
            valueType: "reactor.netty.http.HttpProtocol"
            uuid: "uniqueUuid8"
      valueType: "reactor.netty.http.HttpProtocol[]"
      uuid: "objectArray"
      collectionUuid: "arrayList2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "reactor.netty.http.server.HttpServer"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "reactor.netty.http.server.HttpServer"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.boot.web.embedded.netty.CompressionCustomizer"
                parameters:
                - name: "compression"
                  value:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "org.springframework.boot.web.server.Compression"
                      parameters: []
                      propertiesMap:
                        enabled:
                          sapientType: "BASIC"
                          content: !<regular>
                            value: true
                          valueType: "boolean"
                          uuid: "enabled"
                    valueType: "org.springframework.boot.web.server.Compression"
                    uuid: "compression"
              valueType: "org.springframework.boot.web.embedded.netty.CompressionCustomizer"
              uuid: "compressionCustomizer"
              fixed: true
            methodParameters:
            - name: "server"
              value:
                sapientType: "OBJECT"
                content: !<method_return_from_value>
                  target: "reactor.netty.http.server.HttpServer"
                  localVariableValue:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
                      parameters:
                      - name: "http2"
                        value:
                          sapientType: "OBJECT"
                          content: !<new>
                            target: "org.springframework.boot.web.server.Http2"
                            parameters: []
                            propertiesMap:
                              enabled:
                                sapientType: "BASIC"
                                content: !<regular>
                                  value: true
                                valueType: "boolean"
                                uuid: "enabled2"
                          valueType: "org.springframework.boot.web.server.Http2"
                          uuid: "http2"
                      - name: "clientAuth"
                        value:
                          sapientType: "ENUM"
                          content: !<regular>
                            value: "NONE"
                          valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
                          uuid: "clientAuth"
                      - name: "sslBundle"
                        value:
                          sapientType: "MOCK"
                          valueType: "org.springframework.boot.ssl.SslBundle"
                          uuid: "sslBundle"
                    valueType: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
                    uuid: "sslServerCustomizer"
                    fixed: true
                  methodParameters:
                  - name: "server"
                    value:
                      sapientType: "MOCK"
                      valueType: "reactor.netty.http.server.HttpServer"
                      uuid: "httpServer2"
                  methodName: "apply"
                valueType: "reactor.netty.http.server.HttpServer"
                uuid: "httpServer3"
            methodName: "apply"
          valueType: "reactor.netty.http.server.HttpServer"
          uuid: "httpServer4"
        methodParameters:
        - name: "supportedProtocols"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "HTTP11"
                  valueType: "reactor.netty.http.HttpProtocol"
                1:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "H2C"
                  valueType: "reactor.netty.http.HttpProtocol"
            valueType: "reactor.netty.http.HttpProtocol[]"
            uuid: "objectArray"
            collectionUuid: "arrayList2"
        methodName: "protocol"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer5"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "reactor.netty.http.server.HttpServer"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "reactor.netty.http.server.HttpServer"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<method_return_from_value>
                target: "reactor.netty.http.server.HttpServer"
                localVariableValue:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.springframework.boot.web.embedded.netty.CompressionCustomizer"
                    parameters:
                    - name: "compression"
                      value:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.springframework.boot.web.server.Compression"
                          parameters: []
                          propertiesMap:
                            enabled:
                              sapientType: "BASIC"
                              content: !<regular>
                                value: true
                              valueType: "boolean"
                              uuid: "enabled"
                        valueType: "org.springframework.boot.web.server.Compression"
                        uuid: "compression"
                  valueType: "org.springframework.boot.web.embedded.netty.CompressionCustomizer"
                  uuid: "compressionCustomizer"
                  fixed: true
                methodParameters:
                - name: "server"
                  value:
                    sapientType: "OBJECT"
                    content: !<method_return_from_value>
                      target: "reactor.netty.http.server.HttpServer"
                      localVariableValue:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
                          parameters:
                          - name: "http2"
                            value:
                              sapientType: "OBJECT"
                              content: !<new>
                                target: "org.springframework.boot.web.server.Http2"
                                parameters: []
                                propertiesMap:
                                  enabled:
                                    sapientType: "BASIC"
                                    content: !<regular>
                                      value: true
                                    valueType: "boolean"
                                    uuid: "enabled2"
                              valueType: "org.springframework.boot.web.server.Http2"
                              uuid: "http2"
                          - name: "clientAuth"
                            value:
                              sapientType: "ENUM"
                              content: !<regular>
                                value: "NONE"
                              valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
                              uuid: "clientAuth"
                          - name: "sslBundle"
                            value:
                              sapientType: "MOCK"
                              valueType: "org.springframework.boot.ssl.SslBundle"
                              uuid: "sslBundle"
                        valueType: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
                        uuid: "sslServerCustomizer"
                        fixed: true
                      methodParameters:
                      - name: "server"
                        value:
                          sapientType: "MOCK"
                          valueType: "reactor.netty.http.server.HttpServer"
                          uuid: "httpServer2"
                      methodName: "apply"
                    valueType: "reactor.netty.http.server.HttpServer"
                    uuid: "httpServer3"
                methodName: "apply"
              valueType: "reactor.netty.http.server.HttpServer"
              uuid: "httpServer4"
            methodParameters:
            - name: "supportedProtocols"
              value:
                sapientType: "ARRAY"
                content: !<array>
                  values:
                    0:
                      sapientType: "ENUM"
                      content: !<regular>
                        value: "HTTP11"
                      valueType: "reactor.netty.http.HttpProtocol"
                    1:
                      sapientType: "ENUM"
                      content: !<regular>
                        value: "H2C"
                      valueType: "reactor.netty.http.HttpProtocol"
                valueType: "reactor.netty.http.HttpProtocol[]"
                uuid: "objectArray"
                collectionUuid: "arrayList2"
            methodName: "protocol"
          valueType: "reactor.netty.http.server.HttpServer"
          uuid: "httpServer5"
        methodParameters:
        - name: "forwardedEnabled"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "fieldboolean1"
        methodName: "forwarded"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer6"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "fieldboolean1"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.NettyWebServer"
        parameters:
        - name: "httpServer"
          value:
            sapientType: "MOCK"
            valueType: "reactor.netty.http.server.HttpServer"
            uuid: "nettyWebServer-httpServer"
        - name: "handlerAdapter"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter"
            uuid: "nettyWebServer-handlerAdapter"
        - name: "lifecycleTimeout"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "nettyWebServer-lifecycleTimeout-days"
            valueType: "java.time.Duration"
            uuid: "nettyWebServer-lifecycleTimeout"
        - name: "shutdown"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "GRACEFUL"
            valueType: "org.springframework.boot.web.server.Shutdown"
            uuid: "nettyWebServer-shutdown"
        propertiesMap:
          routeProviders:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.web.embedded.netty.NettyRouteProvider"
            uuid: "arrayList"
      valueType: "org.springframework.boot.web.embedded.netty.NettyWebServer"
      uuid: "nettyWebServer"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "reactor.netty.http.server.HttpServer"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "reactor.netty.http.server.HttpServer"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<method_return_from_value>
                target: "reactor.netty.http.server.HttpServer"
                localVariableValue:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.springframework.boot.web.embedded.netty.CompressionCustomizer"
                    parameters:
                    - name: "compression"
                      value:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.springframework.boot.web.server.Compression"
                          parameters: []
                          propertiesMap:
                            enabled:
                              sapientType: "BASIC"
                              content: !<regular>
                                value: true
                              valueType: "boolean"
                              uuid: "enabled"
                        valueType: "org.springframework.boot.web.server.Compression"
                        uuid: "compression"
                  valueType: "org.springframework.boot.web.embedded.netty.CompressionCustomizer"
                  uuid: "compressionCustomizer"
                  fixed: true
                methodParameters:
                - name: "server"
                  value:
                    sapientType: "OBJECT"
                    content: !<method_return_from_value>
                      target: "reactor.netty.http.server.HttpServer"
                      localVariableValue:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
                          parameters:
                          - name: "http2"
                            value:
                              sapientType: "OBJECT"
                              content: !<new>
                                target: "org.springframework.boot.web.server.Http2"
                                parameters: []
                                propertiesMap:
                                  enabled:
                                    sapientType: "BASIC"
                                    content: !<regular>
                                      value: true
                                    valueType: "boolean"
                                    uuid: "enabled2"
                              valueType: "org.springframework.boot.web.server.Http2"
                              uuid: "http2"
                          - name: "clientAuth"
                            value:
                              sapientType: "ENUM"
                              content: !<regular>
                                value: "NONE"
                              valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
                              uuid: "clientAuth"
                          - name: "sslBundle"
                            value:
                              sapientType: "MOCK"
                              valueType: "org.springframework.boot.ssl.SslBundle"
                              uuid: "sslBundle"
                        valueType: "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
                        uuid: "sslServerCustomizer"
                        fixed: true
                      methodParameters:
                      - name: "server"
                        value:
                          sapientType: "MOCK"
                          valueType: "reactor.netty.http.server.HttpServer"
                          uuid: "httpServer2"
                      methodName: "apply"
                    valueType: "reactor.netty.http.server.HttpServer"
                    uuid: "httpServer3"
                methodName: "apply"
              valueType: "reactor.netty.http.server.HttpServer"
              uuid: "httpServer4"
            methodParameters:
            - name: "supportedProtocols"
              value:
                sapientType: "ARRAY"
                content: !<array>
                  values:
                    0:
                      sapientType: "ENUM"
                      content: !<regular>
                        value: "HTTP11"
                      valueType: "reactor.netty.http.HttpProtocol"
                    1:
                      sapientType: "ENUM"
                      content: !<regular>
                        value: "H2C"
                      valueType: "reactor.netty.http.HttpProtocol"
                valueType: "reactor.netty.http.HttpProtocol[]"
                uuid: "objectArray"
                collectionUuid: "arrayList2"
            methodName: "protocol"
          valueType: "reactor.netty.http.server.HttpServer"
          uuid: "httpServer5"
        methodParameters:
        - name: "forwardedEnabled"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "fieldboolean1"
        methodName: "forwarded"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer6"
    - sapientType: "ANY"
      valueType: "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter"
      uuid: "reactorHttpHandlerAdapter"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.time.Duration"
      uuid: "fieldDuration"
    - sapientType: "ENUM"
      content: !<regular>
        value: "GRACEFUL"
      valueType: "org.springframework.boot.web.server.Shutdown"
      uuid: "fieldShutdown"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.NettyWebServer"
        parameters:
        - name: "httpServer"
          value:
            sapientType: "MOCK"
            valueType: "reactor.netty.http.server.HttpServer"
            uuid: "nettyWebServer-httpServer"
        - name: "handlerAdapter"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter"
            uuid: "nettyWebServer-handlerAdapter"
        - name: "lifecycleTimeout"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "nettyWebServer-lifecycleTimeout-days"
            valueType: "java.time.Duration"
            uuid: "nettyWebServer-lifecycleTimeout"
        - name: "shutdown"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "GRACEFUL"
            valueType: "org.springframework.boot.web.server.Shutdown"
            uuid: "nettyWebServer-shutdown"
        propertiesMap:
          routeProviders:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.web.embedded.netty.NettyRouteProvider"
            uuid: "arrayList"
      valueType: "org.springframework.boot.web.embedded.netty.NettyWebServer"
      uuid: "nettyWebServer"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.web.embedded.netty.NettyRouteProvider"
      uuid: "arrayList"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.NettyWebServer"
        parameters:
        - name: "httpServer"
          value:
            sapientType: "MOCK"
            valueType: "reactor.netty.http.server.HttpServer"
            uuid: "nettyWebServer-httpServer"
        - name: "handlerAdapter"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter"
            uuid: "nettyWebServer-handlerAdapter"
        - name: "lifecycleTimeout"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "nettyWebServer-lifecycleTimeout-days"
            valueType: "java.time.Duration"
            uuid: "nettyWebServer-lifecycleTimeout"
        - name: "shutdown"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "GRACEFUL"
            valueType: "org.springframework.boot.web.server.Shutdown"
            uuid: "nettyWebServer-shutdown"
        propertiesMap:
          routeProviders:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.web.embedded.netty.NettyRouteProvider"
            uuid: "arrayList"
      valueType: "org.springframework.boot.web.embedded.netty.NettyWebServer"
      uuid: "nettyWebServer"
    branches:
    - lineNumber: 163
      expression: "Ssl.isEnabled(getSsl())"
      range: "(163,7)-(163,29)"
      evaluatedAs: true
      internalMethodName: "createHttpServer"
    - lineNumber: 177
      expression: "StringUtils.hasText(bundleName)"
      range: "(177,7)-(177,37)"
      evaluatedAs: true
      internalMethodName: "customizeSslConfiguration"
    - lineNumber: 166
      expression: "getCompression() != null"
      range: "(166,7)-(166,30)"
      evaluatedAs: true
      internalMethodName: "createHttpServer"
    - lineNumber: 166
      expression: "getCompression().getEnabled()"
      range: "(166,35)-(166,63)"
      evaluatedAs: true
      internalMethodName: "createHttpServer"
    - lineNumber: 186
      expression: "getHttp2() != null"
      range: "(186,7)-(186,24)"
      evaluatedAs: true
      internalMethodName: "listProtocols"
    - lineNumber: 186
      expression: "getHttp2().isEnabled()"
      range: "(186,29)-(186,50)"
      evaluatedAs: true
      internalMethodName: "listProtocols"
    - lineNumber: 187
      expression: "getSsl() != null"
      range: "(187,8)-(187,23)"
      evaluatedAs: true
      internalMethodName: "listProtocols"
    - lineNumber: 187
      expression: "getSsl().isEnabled()"
      range: "(187,28)-(187,47)"
      evaluatedAs: false
      internalMethodName: "listProtocols"
    - lineNumber: 205
      expression: "for-each(this.serverCustomizers)"
      range: "(205,43)-(205,64)"
      evaluatedAs: false
      internalMethodName: "applyCustomizers"
- method:
    name: "createNettyWebServer"
    sourceCodeSignature: "NettyWebServer createNettyWebServer(HttpServer httpServer,\
      \ ReactorHttpHandlerAdapter handlerAdapter, Duration lifecycleTimeout, Shutdown\
      \ shutdown)"
    returnType: "org.springframework.boot.web.embedded.netty.NettyWebServer"
    parameters:
    - name: "httpServer"
      type: "reactor.netty.http.server.HttpServer"
    - name: "handlerAdapter"
      type: "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter"
    - name: "lifecycleTimeout"
      type: "java.time.Duration"
    - name: "shutdown"
      type: "org.springframework.boot.web.server.Shutdown"
    instructionFingerprint: "82C8B62F8B4A35D4E933AE97C8CF730F"
  paths:
  - pathId: "path1"
    testPathName: "createNettyWebServerTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "6EB265279BE10F4BE79B2756B1B54C9A"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7C52F4C60272E21E0DAF74FEB8CBA6AB"
      valueUuid: "target"
    - type: "INPUT"
      name: "httpServer"
      modelFingerprint: "DA8968AFBBB1AF74351A324A70F95B32"
      valueUuid: "httpServer"
    - type: "INPUT"
      name: "handlerAdapter"
      modelFingerprint: "45889A6C9026889ACEE4C4EA809F3C00"
      valueUuid: "handlerAdapter"
    - type: "INPUT"
      name: "lifecycleTimeout"
      modelFingerprint: "5649A31071B5326D1751E7B1F054DC16"
      valueUuid: "lifecycleTimeout"
    - type: "INPUT"
      name: "shutdown"
      modelFingerprint: "5B43578A930C45036AE8C781946149D2"
      valueUuid: "shutdown"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "CE6EB90F93B2E6AF61560CDCD148DDCC"
      valueUuid: "nettyWebServer"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "reactor.netty.http.server.HttpServer"
      uuid: "httpServer"
    - sapientType: "MOCK"
      valueType: "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter"
      uuid: "handlerAdapter"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "lifecycleTimeout-days"
      valueType: "java.time.Duration"
      uuid: "lifecycleTimeout"
    - sapientType: "ENUM"
      content: !<regular>
        value: "GRACEFUL"
      valueType: "org.springframework.boot.web.server.Shutdown"
      uuid: "shutdown"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.NettyWebServer"
        parameters:
        - name: "httpServer"
          value:
            sapientType: "MOCK"
            valueType: "reactor.netty.http.server.HttpServer"
            uuid: "httpServer"
        - name: "handlerAdapter"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter"
            uuid: "handlerAdapter"
        - name: "lifecycleTimeout"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "lifecycleTimeout-days"
            valueType: "java.time.Duration"
            uuid: "lifecycleTimeout"
        - name: "shutdown"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "GRACEFUL"
            valueType: "org.springframework.boot.web.server.Shutdown"
            uuid: "shutdown"
        - name: "resourceFactory"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.http.client.ReactorResourceFactory"
            uuid: "fieldReactorResourceFactory"
      valueType: "org.springframework.boot.web.embedded.netty.NettyWebServer"
      uuid: "nettyWebServer"
      fixed: true
- method:
    name: "getServerCustomizers"
    sourceCodeSignature: "Collection<NettyServerCustomizer> getServerCustomizers()"
    returnType: "java.util.Collection"
    genericReturnType: "org.springframework.boot.web.embedded.netty.NettyServerCustomizer"
    instructionFingerprint: "15E51329759185647C04C3DD7BA53BE6"
  paths:
  - pathId: "path1"
    testPathName: "getServerCustomizersTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "3DAC34485AAB3774B32DF4AB2202F24B"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7C52F4C60272E21E0DAF74FEB8CBA6AB"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "0AC3098C365E696832619B2FC6871931"
      valueUuid: "linkedHashSet2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.LinkedHashSet"
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "org.springframework.boot.web.embedded.netty.NettyServerCustomizer"
      uuid: "linkedHashSet2"
- method:
    name: "setServerCustomizers"
    sourceCodeSignature: "void setServerCustomizers(Collection<? extends NettyServerCustomizer>\
      \ serverCustomizers)"
    returnType: "void"
    parameters:
    - name: "serverCustomizers"
      type: "java.util.Collection"
    instructionFingerprint: "6BDEA9343F3CF28B0325F5F1663E3A2A"
  paths:
  - pathId: "path1"
    testPathName: "setServerCustomizersTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "5391B067F16E5B5B182C96981CF81268"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7C52F4C60272E21E0DAF74FEB8CBA6AB"
      valueUuid: "target"
    - type: "INPUT"
      name: "serverCustomizers"
      modelFingerprint: "861D558311EF6D435253123EE2D95AD7"
      valueUuid: "serverCustomizers"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "0BF7693D484E74346DA081D0A2500F15"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:serverCustomizers,message:uniqueUuid9):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    - type: "STATE_VERIFICATION_FIELD"
      name: "serverCustomizers"
      modelFingerprint: "ED49294CEBAB867FD7CA606EDB35C2AE"
      valueUuid: "linkedHashSet3"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "? extends org.springframework.boot.web.embedded.netty.NettyServerCustomizer"
      uuid: "serverCustomizers"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "? extends org.springframework.boot.web.embedded.netty.NettyServerCustomizer"
      uuid: "serverCustomizers"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ServerCustomizers must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid9"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.LinkedHashSet"
        parameters:
        - name: "c"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Collection"
            genericValueType: "? extends org.springframework.boot.web.embedded.netty.NettyServerCustomizer"
            uuid: "serverCustomizers"
        values: []
      valueType: "java.util.Set"
      genericValueType: "org.springframework.boot.web.embedded.netty.NettyServerCustomizer"
      uuid: "linkedHashSet3"
- method:
    name: "addServerCustomizers"
    sourceCodeSignature: "void addServerCustomizers(NettyServerCustomizer... serverCustomizers)"
    returnType: "void"
    parameters:
    - name: "serverCustomizers"
      type: "org.springframework.boot.web.embedded.netty.NettyServerCustomizer[]"
    instructionFingerprint: "47EBEC06A537F5F0E1020D417DBF911B"
  paths:
  - pathId: "path1"
    testPathName: "addServerCustomizersTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "6CC8DF1878E80EF5FC8392CF54A81CA4"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7C52F4C60272E21E0DAF74FEB8CBA6AB"
      valueUuid: "target"
    - type: "INPUT"
      name: "serverCustomizers"
      modelFingerprint: "F8F7B0C96A38AB16E4559FD8DE60AE4F"
      valueUuid: "serverCustomizers"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "B4531D2049E4B56EFA998BA18B6A0FD8"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:serverCustomizers,message:uniqueUuid10):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.embedded.netty.NettyServerCustomizer[]"
      uuid: "serverCustomizers"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.embedded.netty.NettyServerCustomizer[]"
      uuid: "serverCustomizers"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ServerCustomizer must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid10"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "addRouteProviders"
    sourceCodeSignature: "void addRouteProviders(NettyRouteProvider... routeProviders)"
    returnType: "void"
    parameters:
    - name: "routeProviders"
      type: "org.springframework.boot.web.embedded.netty.NettyRouteProvider[]"
    instructionFingerprint: "5A044AE3F04F3AC63865763FC140EC8C"
  paths:
  - pathId: "path1"
    testPathName: "addRouteProvidersTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "C1D3323326D52C79E7D0694839BD1A4A"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7C52F4C60272E21E0DAF74FEB8CBA6AB"
      valueUuid: "target"
    - type: "INPUT"
      name: "routeProviders"
      modelFingerprint: "DF9D395C9B8CA4013C82625510F03F79"
      valueUuid: "routeProviders"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "3CE61E4C3762BE15AC0A6026E9B18610"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:routeProviders,message:uniqueUuid11):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.embedded.netty.NettyRouteProvider[]"
      uuid: "routeProviders"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.embedded.netty.NettyRouteProvider[]"
      uuid: "routeProviders"
    - sapientType: "BASIC"
      content: !<regular>
        value: "NettyRouteProvider must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid11"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "setLifecycleTimeout"
    sourceCodeSignature: "void setLifecycleTimeout(Duration lifecycleTimeout)"
    returnType: "void"
    parameters:
    - name: "lifecycleTimeout"
      type: "java.time.Duration"
    instructionFingerprint: "AA9D769FAE7542B7754AB4B43E13E107"
  paths:
  - pathId: "path1"
    testPathName: "setLifecycleTimeoutTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "7B52FA54112746428FE0C7CDF8E841EA"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setUseForwardHeaders"
    sourceCodeSignature: "void setUseForwardHeaders(boolean useForwardHeaders)"
    returnType: "void"
    parameters:
    - name: "useForwardHeaders"
      type: "boolean"
    instructionFingerprint: "F73A56C7419C7966712F0ADD8F9504F9"
  paths:
  - pathId: "path1"
    testPathName: "setUseForwardHeadersTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "40443FED6294934A9F01F1164709A93B"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setResourceFactory"
    sourceCodeSignature: "void setResourceFactory(ReactorResourceFactory resourceFactory)"
    returnType: "void"
    parameters:
    - name: "resourceFactory"
      type: "org.springframework.http.client.ReactorResourceFactory"
    instructionFingerprint: "1E2B3A0308B6A049885F8436C156BBFD"
  paths:
  - pathId: "path1"
    testPathName: "setResourceFactoryTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "4D17FAE70A325B163C003B19EB632607"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setShutdown"
    sourceCodeSignature: "void setShutdown(Shutdown shutdown)"
    returnType: "void"
    parameters:
    - name: "shutdown"
      type: "org.springframework.boot.web.server.Shutdown"
    instructionFingerprint: "6CF34EEBA2198C9C497B0B5A82D88C06"
  paths:
  - pathId: "path1"
    testPathName: "setShutdownTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "F7A0F3E7ECC86728CE7D6FBBF47EC1F3"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "getShutdown"
    sourceCodeSignature: "Shutdown getShutdown()"
    returnType: "org.springframework.boot.web.server.Shutdown"
    instructionFingerprint: "E3D57C7835C5000EB61DDFA89451DB6C"
  paths:
  - pathId: "path1"
    testPathName: "getShutdownTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "FE82EEC71615001177874154EA14DE35"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
