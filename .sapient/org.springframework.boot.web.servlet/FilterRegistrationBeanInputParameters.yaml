---
modelFingerprint: "9662D8964A500EC2E007CCCD9431EFD1"
targetClass:
  fullClassName: "org.springframework.boot.web.servlet.FilterRegistrationBean"
methods:
- method:
    name: "getFilter"
    sourceCodeSignature: "T getFilter()"
    returnType: "jakarta.servlet.Filter"
    instructionFingerprint: "BE8B9F701847668B171288E85C39DC68"
  paths:
  - pathId: "path1"
    testPathName: "getFilterTest"
    constructorSignature: "<init>(jakarta.servlet.Filter,org.springframework.boot.web.servlet.ServletRegistrationBean<?>[])\
      \ : void"
    modelFingerprint: "F9EFC6F8569E7995856986281C72CA1A"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.Collections.addAll(java.util.Set<org.springframework.boot.web.servlet.ServletRegistrationBean<?>>,org.springframework.boot.web.servlet.ServletRegistrationBean<?>[])\
        \ : boolean"
    allValues: []
- method:
    name: "setFilter"
    sourceCodeSignature: "void setFilter(T filter)"
    returnType: "void"
    parameters:
    - name: "filter"
      type: "jakarta.servlet.Filter"
    instructionFingerprint: "2C629C70FDED19F44BD9E8E809E75D66"
  paths:
  - pathId: "path1"
    testPathName: "setFilterTest"
    constructorSignature: "<init>(jakarta.servlet.Filter,org.springframework.boot.web.servlet.ServletRegistrationBean<?>[])\
      \ : void"
    modelFingerprint: "425E167D369851AE8E3915398A6A6FB7"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "C350877671427C62B6B67D6E002BC4F2"
      valueUuid: "target"
    - type: "INPUT"
      name: "filter"
      modelFingerprint: "A1AC87C9BC0825C01BD1E4E646C97F69"
      valueUuid: "filter"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "593A7C93EAD2BB86C6D13F9ADB478D5B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:servletRegistrationBeans,message:uniqueUuid3):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "3AEF0C0E632F4C73D3827C539549ACC9"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:filter2,message:uniqueUuid4):void2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "3AEF0C0E632F4C73D3827C539549ACC9"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:filter,message:uniqueUuid5):void3"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.Collections.addAll(java.util.Set<org.springframework.boot.web.servlet.ServletRegistrationBean<?>>,org.springframework.boot.web.servlet.ServletRegistrationBean<?>[])\
        \ : boolean"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.FilterRegistrationBean"
        parameters:
        - name: "filter"
          value:
            sapientType: "MOCK"
            valueType: "jakarta.servlet.Filter"
            uuid: "filter2"
        - name: "servletRegistrationBeans"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.boot.web.servlet.ServletRegistrationBean[]"
            genericValueType: "?"
            uuid: "servletRegistrationBeans"
      valueType: "org.springframework.boot.web.servlet.FilterRegistrationBean"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "jakarta.servlet.Filter"
      uuid: "filter"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.servlet.ServletRegistrationBean[]"
      genericValueType: "?"
      uuid: "servletRegistrationBeans"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ServletRegistrationBeans must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "jakarta.servlet.Filter"
      uuid: "filter2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Filter must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "jakarta.servlet.Filter"
      uuid: "filter"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Filter must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
