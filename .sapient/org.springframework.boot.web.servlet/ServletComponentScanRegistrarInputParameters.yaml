---
modelFingerprint: "5A16CF18BF669F092D7FF14139668BF7"
targetClass:
  fullClassName: "org.springframework.boot.web.servlet.ServletComponentScanRegistrar"
methods:
- method:
    name: "registerBeanDefinitions"
    sourceCodeSignature: "void registerBeanDefinitions(AnnotationMetadata importingClassMetadata,\
      \ BeanDefinitionRegistry registry)"
    returnType: "void"
    parameters:
    - name: "importingClassMetadata"
      type: "org.springframework.core.type.AnnotationMetadata"
    - name: "registry"
      type: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
    instructionFingerprint: "CEE91C86350A08C9311118CC5F90D60B"
  paths:
  - pathId: "path1"
    testPathName: "registerBeanDefinitionsWhenRegistryContainsBeanDefinitionBEAN_NAME"
    constructorSignature: "<init>() : void"
    modelFingerprint: "18E5F6138F82E15AE588C361223B1F0D"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "importingClassMetadata"
      modelFingerprint: "B122F267E9AE3F017B7DA8C06952978F"
      valueUuid: "importingClassMetadata"
    - type: "INPUT"
      name: "registry"
      modelFingerprint: "14F926E67FDB678BF2FEC697D6F094DC"
      valueUuid: "registry"
    - type: "LOCAL_VARIABLE"
      name: "metadata"
      modelFingerprint: "BE1F9DD7F5B1DC2301D405E231776316"
      valueUuid: "importingClassMetadata"
      methodExercised:
        expression: "getAnnotationAttributes(annotationName:string):map"
    - type: "STATIC"
      name: "AnnotationAttributes.class"
      modelFingerprint: "5E807375B8B16F1DE666213ADD237A79"
      valueUuid: "AnnotationAttributes.class"
      methodExercised:
        expression: "fromMap(map:map):annotationAttributes"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "attributes"
      modelFingerprint: "8642A2A8B80CFC636C36CBFA7EF6A81F"
      valueUuid: "annotationAttributes"
      methodExercised:
        expression: "getStringArray(attributeName:uniqueUuid1):stringArray"
    - type: "LOCAL_VARIABLE"
      name: "attributes"
      modelFingerprint: "CD0C127CC47BB6E45453B771F5EF86F7"
      valueUuid: "annotationAttributes"
      methodExercised:
        expression: "getClassArray(attributeName:uniqueUuid2):classArray"
    - type: "STATIC"
      name: "ClassUtils.class"
      modelFingerprint: "1F9AE2300781F25B632937764F876547"
      valueUuid: "ClassUtils.class"
      methodExercised:
        expression: "getPackageName(clazz:class):string2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "metadata"
      modelFingerprint: "E9B4A40616243691A3F3FAE360C6572A"
      valueUuid: "importingClassMetadata"
      methodExercised:
        expression: "getClassName():string3"
    - type: "STATIC"
      name: "ClassUtils.class"
      modelFingerprint: "EEBC21902AC055FE71AC0E052372BFC8"
      valueUuid: "ClassUtils.class"
      methodExercised:
        expression: "getPackageName(fqClassName:string3):string4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "registry"
      modelFingerprint: "D012BBF0BB6100B0E2984EA634844DC1"
      valueUuid: "registry"
      methodExercised:
        expression: "containsBeanDefinition(beanName:uniqueUuid3):boolean4"
    - type: "LOCAL_VARIABLE"
      name: "registry"
      modelFingerprint: "620C861172537E24F3107A91E65B3C07"
      valueUuid: "registry"
      methodExercised:
        expression: "getBeanDefinition(beanName:uniqueUuid4):beanDefinition"
        throwsExceptions:
        - "org.springframework.beans.factory.NoSuchBeanDefinitionException"
    - type: "LOCAL_VARIABLE"
      name: "definition"
      modelFingerprint: "01C82E3228847AA3D40C33FF79BE058F"
      valueUuid: "beanDefinition"
      methodExercised:
        expression: "addPackageNames(additionalPackageNames:linkedHashSet):void"
        privateAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.core.annotation.AnnotationAttributes.getStringArray(java.lang.String)\
        \ : java.lang.String[]"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.ServletComponentScanRegistrar"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.ServletComponentScanRegistrar"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.type.AnnotationMetadata"
      uuid: "importingClassMetadata"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.type.AnnotationMetadata"
      uuid: "importingClassMetadata"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.web.servlet.ServletComponentScan"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.annotation.AnnotationAttributes"
      uuid: "AnnotationAttributes.class"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "org.springframework.core.annotation.AnnotationAttributes"
      uuid: "annotationAttributes"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "org.springframework.core.annotation.AnnotationAttributes"
      uuid: "annotationAttributes"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
      collectionUuid: "annotationAttributes"
    - sapientType: "BASIC"
      content: !<regular>
        value: "basePackages"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "org.springframework.core.annotation.AnnotationAttributes"
      uuid: "annotationAttributes"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "classArray"
      collectionUuid: "annotationAttributes"
    - sapientType: "BASIC"
      content: !<regular>
        value: "basePackageClasses"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getPackageName1"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.type.AnnotationMetadata"
      uuid: "importingClassMetadata"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getClassName1"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getPackageName1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getClassName1"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "servletComponentRegisteringPostProcessor"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.ServletComponentScanRegistrar$ServletComponentRegisteringPostProcessorBeanDefinition"
      uuid: "beanDefinition"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "servletComponentRegisteringPostProcessor"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.ServletComponentScanRegistrar$ServletComponentRegisteringPostProcessorBeanDefinition"
      uuid: "beanDefinition"
      explicitCastNeeded: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.LinkedHashSet"
      genericValueType: "java.lang.String"
      uuid: "linkedHashSet"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 73
      expression: "for-each(basePackageClasses)"
      range: "(73,36)-(73,53)"
      evaluatedAs: true
      internalMethodName: "getPackagesToScan"
    - lineNumber: 76
      expression: "packagesToScan.isEmpty()"
      range: "(76,7)-(76,30)"
      evaluatedAs: true
      internalMethodName: "getPackagesToScan"
    - lineNumber: 47
      expression: "registry.containsBeanDefinition(BEAN_NAME)"
      range: "(47,7)-(47,48)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "registerBeanDefinitionsWhenRegistryNotContainsBeanDefinitionBEAN_NAME"
    constructorSignature: "<init>() : void"
    modelFingerprint: "4D1BE5A4D9BC2EEAB4EE90F5423B4381"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "importingClassMetadata"
      modelFingerprint: "B122F267E9AE3F017B7DA8C06952978F"
      valueUuid: "importingClassMetadata"
    - type: "INPUT"
      name: "registry"
      modelFingerprint: "14F926E67FDB678BF2FEC697D6F094DC"
      valueUuid: "registry"
    - type: "LOCAL_VARIABLE"
      name: "metadata"
      modelFingerprint: "BE1F9DD7F5B1DC2301D405E231776316"
      valueUuid: "importingClassMetadata"
      methodExercised:
        expression: "getAnnotationAttributes(annotationName:string):map"
    - type: "STATIC"
      name: "AnnotationAttributes.class"
      modelFingerprint: "5E807375B8B16F1DE666213ADD237A79"
      valueUuid: "AnnotationAttributes.class"
      methodExercised:
        expression: "fromMap(map:map):annotationAttributes"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "attributes"
      modelFingerprint: "8642A2A8B80CFC636C36CBFA7EF6A81F"
      valueUuid: "annotationAttributes"
      methodExercised:
        expression: "getStringArray(attributeName:uniqueUuid5):stringArray"
    - type: "LOCAL_VARIABLE"
      name: "attributes"
      modelFingerprint: "CD0C127CC47BB6E45453B771F5EF86F7"
      valueUuid: "annotationAttributes"
      methodExercised:
        expression: "getClassArray(attributeName:uniqueUuid6):classArray"
    - type: "STATIC"
      name: "ClassUtils.class"
      modelFingerprint: "1F9AE2300781F25B632937764F876547"
      valueUuid: "ClassUtils.class"
      methodExercised:
        expression: "getPackageName(clazz:class):string2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "metadata"
      modelFingerprint: "E9B4A40616243691A3F3FAE360C6572A"
      valueUuid: "importingClassMetadata"
      methodExercised:
        expression: "getClassName():string3"
    - type: "STATIC"
      name: "ClassUtils.class"
      modelFingerprint: "EEBC21902AC055FE71AC0E052372BFC8"
      valueUuid: "ClassUtils.class"
      methodExercised:
        expression: "getPackageName(fqClassName:string3):string4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "registry"
      modelFingerprint: "D012BBF0BB6100B0E2984EA634844DC1"
      valueUuid: "registry"
      methodExercised:
        expression: "containsBeanDefinition(beanName:uniqueUuid7):boolean4"
    - type: "LOCAL_VARIABLE"
      name: "registry"
      modelFingerprint: "169B51B789CE93AC21B8D6E6C5083775"
      valueUuid: "registry"
      methodExercised:
        expression: "registerBeanDefinition(beanName:uniqueUuid8,beanDefinition:servletComponentScanRegistrar.ServletComponentRegisteringPostProcessorBeanDefinition):void"
        throwsExceptions:
        - "org.springframework.beans.factory.BeanDefinitionStoreException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.core.annotation.AnnotationAttributes.getStringArray(java.lang.String)\
        \ : java.lang.String[]"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.ServletComponentScanRegistrar"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.ServletComponentScanRegistrar"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.type.AnnotationMetadata"
      uuid: "importingClassMetadata"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.type.AnnotationMetadata"
      uuid: "importingClassMetadata"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.web.servlet.ServletComponentScan"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.annotation.AnnotationAttributes"
      uuid: "AnnotationAttributes.class"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "org.springframework.core.annotation.AnnotationAttributes"
      uuid: "annotationAttributes"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "org.springframework.core.annotation.AnnotationAttributes"
      uuid: "annotationAttributes"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
      collectionUuid: "annotationAttributes"
    - sapientType: "BASIC"
      content: !<regular>
        value: "basePackages"
      valueType: "java.lang.String"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "org.springframework.core.annotation.AnnotationAttributes"
      uuid: "annotationAttributes"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "classArray"
      collectionUuid: "annotationAttributes"
    - sapientType: "BASIC"
      content: !<regular>
        value: "basePackageClasses"
      valueType: "java.lang.String"
      uuid: "uniqueUuid6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getPackageName1"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.type.AnnotationMetadata"
      uuid: "importingClassMetadata"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getClassName1"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getPackageName1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getClassName1"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "servletComponentRegisteringPostProcessor"
      valueType: "java.lang.String"
      uuid: "uniqueUuid7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "servletComponentRegisteringPostProcessor"
      valueType: "java.lang.String"
      uuid: "uniqueUuid8"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.servlet.ServletComponentScanRegistrar$ServletComponentRegisteringPostProcessorBeanDefinition"
      uuid: "servletComponentScanRegistrar.ServletComponentRegisteringPostProcessorBeanDefinition"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 73
      expression: "for-each(basePackageClasses)"
      range: "(73,36)-(73,53)"
      evaluatedAs: true
      internalMethodName: "getPackagesToScan"
    - lineNumber: 76
      expression: "packagesToScan.isEmpty()"
      range: "(76,7)-(76,30)"
      evaluatedAs: true
      internalMethodName: "getPackagesToScan"
    - lineNumber: 47
      expression: "registry.containsBeanDefinition(BEAN_NAME)"
      range: "(47,7)-(47,48)"
      evaluatedAs: false
