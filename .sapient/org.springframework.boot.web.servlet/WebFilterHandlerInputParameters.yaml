---
modelFingerprint: "9681A88828E5B17FB43C00EA8EE1F36F"
targetClass:
  fullClassName: "org.springframework.boot.web.servlet.WebFilterHandler"
methods:
- method:
    name: "doHandle"
    sourceCodeSignature: "void doHandle(Map<String, Object> attributes, AnnotatedBeanDefinition\
      \ beanDefinition, BeanDefinitionRegistry registry)"
    returnType: "void"
    parameters:
    - name: "attributes"
      type: "java.util.Map"
    - name: "beanDefinition"
      type: "org.springframework.beans.factory.annotation.AnnotatedBeanDefinition"
    - name: "registry"
      type: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
    instructionFingerprint: "F78AD42C74E62441543D3F193A655129"
  paths:
  - pathId: "path1"
    testPathName: "doHandleWhenStringUtilsHasTextAttributesGetFilterName"
    constructorSignature: "<init>() : void"
    modelFingerprint: "7589F2AF06622C6960FFD54646414B90"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "attributes"
      modelFingerprint: "AE22E5CEF495124A4059C90E17CA00D8"
      valueUuid: "attributes"
    - type: "INPUT"
      name: "beanDefinition"
      modelFingerprint: "D1DAE1DD6624FE9FC2968773C02CAF5D"
      valueUuid: "beanDefinition"
    - type: "INPUT"
      name: "registry"
      modelFingerprint: "14F926E67FDB678BF2FEC697D6F094DC"
      valueUuid: "registry"
    - type: "STATIC"
      name: "BeanDefinitionBuilder.class"
      modelFingerprint: "792D14D3305F3693AD738E4022940620"
      valueUuid: "BeanDefinitionBuilder.class"
      methodExercised:
        expression: "rootBeanDefinition(beanClass:uniqueUuid9):beanDefinitionBuilder"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "7A95E5260696829A9DB7A6AC77D4C022"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid10,value:object):beanDefinitionBuilder2"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "B6A66408DED48A1DD831572C729890D6"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid11,value:enumSet):beanDefinitionBuilder3"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "A80C821A6FE202BF2A52B8957629884F"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid13,value:beanDefinition):beanDefinitionBuilder4"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "B6C8DDDEE88E8AF4778311288F3927BB"
      methodExercised:
        expression: "extractInitParameters(attributes:attributes):map"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "7BC92061154744A6682FE4934775087F"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid22,value:map):beanDefinitionBuilder5"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "C969F0656BA78A05799B3291CE698BC7"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasText(str:object3):boolean1"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "1E118203AEA4A7F23121231DB00A2157"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid23,value:object3):beanDefinitionBuilder6"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "F30D7D4A25C31F081A1F392405C01404"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid24,value:object5):beanDefinitionBuilder7"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "067BCC3F19C1AC43DC17F5AB8721DF85"
      methodExercised:
        expression: "extractUrlPatterns(attributes:attributes):stringArray"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "62A2AC4FCA82F61C60335F1315E08291"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid33,value:stringArray):beanDefinitionBuilder8"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "F983BD3F7E9582CFF6F71353BBF318DE"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "getBeanDefinition():abstractBeanDefinition"
    - type: "LOCAL_VARIABLE"
      name: "registry"
      modelFingerprint: "F1628BDBC0EA818DA4628748F6994553"
      valueUuid: "registry"
      methodExercised:
        expression: "registerBeanDefinition(beanName:object3,beanDefinition:abstractBeanDefinition):void"
        throwsExceptions:
        - "org.springframework.beans.factory.BeanDefinitionStoreException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.WebFilterHandler"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.WebFilterHandler"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "asyncSupported"
              valueType: "java.lang.String"
              uuid: "uniqueUuid26"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object"
              collectionUuid: "attributes"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid25"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "dispatcherTypes"
              valueType: "java.lang.String"
              uuid: "uniqueUuid28"
              fixed: true
            value:
              sapientType: "ARRAY"
              content: !<array>
                values: {}
              valueType: "jakarta.servlet.DispatcherType[]"
              uuid: "object2"
              collectionUuid: "attributes"
              explicitCastNeeded: true
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid27"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "servletNames"
              valueType: "java.lang.String"
              uuid: "uniqueUuid30"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object5"
              collectionUuid: "attributes"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid29"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "filterName"
              valueType: "java.lang.String"
              uuid: "uniqueUuid32"
              fixed: true
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: ""
              valueType: "java.lang.String"
              uuid: "object3"
              collectionUuid: "attributes"
              explicitCastNeeded: true
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid31"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "attributes"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.annotation.AnnotatedBeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "BeanDefinitionBuilder.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.web.servlet.FilterRegistrationBean"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.web.servlet.FilterRegistrationBean"
      uuid: "uniqueUuid9"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "asyncSupported"
      valueType: "java.lang.String"
      uuid: "uniqueUuid10"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
      collectionUuid: "attributes"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
          uuid: "beanDefinitionBuilder"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "dispatcherTypes"
            valueType: "java.lang.String"
            uuid: "uniqueUuid12"
            fixed: true
        - value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.EnumSet"
            genericValueType: "jakarta.servlet.DispatcherType"
            uuid: "enumSet"
        methodName: "addPropertyValue"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "dispatcherTypes"
      valueType: "java.lang.String"
      uuid: "uniqueUuid11"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.EnumSet"
      genericValueType: "jakarta.servlet.DispatcherType"
      uuid: "enumSet"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "filter"
      valueType: "java.lang.String"
      uuid: "uniqueUuid13"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.annotation.AnnotatedBeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "asyncSupported"
              valueType: "java.lang.String"
              uuid: "uniqueUuid26"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object"
              collectionUuid: "attributes"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid25"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "dispatcherTypes"
              valueType: "java.lang.String"
              uuid: "uniqueUuid28"
              fixed: true
            value:
              sapientType: "ARRAY"
              content: !<array>
                values: {}
              valueType: "jakarta.servlet.DispatcherType[]"
              uuid: "object2"
              collectionUuid: "attributes"
              explicitCastNeeded: true
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid27"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "servletNames"
              valueType: "java.lang.String"
              uuid: "uniqueUuid30"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object5"
              collectionUuid: "attributes"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid29"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "filterName"
              valueType: "java.lang.String"
              uuid: "uniqueUuid32"
              fixed: true
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: ""
              valueType: "java.lang.String"
              uuid: "object3"
              collectionUuid: "attributes"
              explicitCastNeeded: true
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid31"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "attributes"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "initParameters"
      valueType: "java.lang.String"
      uuid: "uniqueUuid22"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "object3"
      collectionUuid: "attributes"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "name"
      valueType: "java.lang.String"
      uuid: "uniqueUuid23"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "object3"
      collectionUuid: "attributes"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder7"
    - sapientType: "BASIC"
      content: !<regular>
        value: "servletNames"
      valueType: "java.lang.String"
      uuid: "uniqueUuid24"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object5"
      collectionUuid: "attributes"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "asyncSupported"
              valueType: "java.lang.String"
              uuid: "uniqueUuid26"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object"
              collectionUuid: "attributes"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid25"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "dispatcherTypes"
              valueType: "java.lang.String"
              uuid: "uniqueUuid28"
              fixed: true
            value:
              sapientType: "ARRAY"
              content: !<array>
                values: {}
              valueType: "jakarta.servlet.DispatcherType[]"
              uuid: "object2"
              collectionUuid: "attributes"
              explicitCastNeeded: true
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid27"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "servletNames"
              valueType: "java.lang.String"
              uuid: "uniqueUuid30"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object5"
              collectionUuid: "attributes"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid29"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "filterName"
              valueType: "java.lang.String"
              uuid: "uniqueUuid32"
              fixed: true
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: ""
              valueType: "java.lang.String"
              uuid: "object3"
              collectionUuid: "attributes"
              explicitCastNeeded: true
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid31"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "attributes"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder8"
    - sapientType: "BASIC"
      content: !<regular>
        value: "urlPatterns"
      valueType: "java.lang.String"
      uuid: "uniqueUuid33"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.beans.factory.support.AbstractBeanDefinition"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
          uuid: "beanDefinitionBuilder"
        methodParameters: []
        methodName: "getBeanDefinition"
      valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
      uuid: "abstractBeanDefinition"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "object3"
      collectionUuid: "attributes"
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.beans.factory.support.AbstractBeanDefinition"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
          uuid: "beanDefinitionBuilder"
        methodParameters: []
        methodName: "getBeanDefinition"
      valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
      uuid: "abstractBeanDefinition"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 60
      expression: "dispatcherTypes.length == 0"
      range: "(60,7)-(60,33)"
      evaluatedAs: true
      internalMethodName: "extractDispatcherTypes"
    - lineNumber: 70
      expression: "StringUtils.hasText((String) attributes.get(\\\"filterName\\\"\
        ))"
      range: "(70,20)-(70,77)"
      evaluatedAs: true
      internalMethodName: "determineName"
  - pathId: "path3"
    testPathName: "doHandleWhenDispatcherTypesLengthEquals1AndStringUtilsNotHasTextAttributesGetFilterName"
    constructorSignature: "<init>() : void"
    modelFingerprint: "B8A7616122B744B6B74CDE030ED54DA6"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "attributes"
      modelFingerprint: "F4077ECF3B7A3BB595C90E7FD4EAB0E2"
      valueUuid: "attributes"
    - type: "INPUT"
      name: "beanDefinition"
      modelFingerprint: "CEDDAAB7EF5E51F15F8ADFCA44047E03"
      valueUuid: "beanDefinition"
    - type: "INPUT"
      name: "registry"
      modelFingerprint: "14F926E67FDB678BF2FEC697D6F094DC"
      valueUuid: "registry"
    - type: "STATIC"
      name: "BeanDefinitionBuilder.class"
      modelFingerprint: "792D14D3305F3693AD738E4022940620"
      valueUuid: "BeanDefinitionBuilder.class"
      methodExercised:
        expression: "rootBeanDefinition(beanClass:uniqueUuid42):beanDefinitionBuilder"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "7A95E5260696829A9DB7A6AC77D4C022"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid43,value:object):beanDefinitionBuilder2"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "19AA625AF3188978B55D18A8EC4A0C42"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid44,value:enumSet):beanDefinitionBuilder3"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "C7D557D72A402BF2E8316AC253958B76"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid45,value:beanDefinition):beanDefinitionBuilder4"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "BC0900B9D69AEDBC8DDBCFADC2FFE3F4"
      methodExercised:
        expression: "extractInitParameters(attributes:attributes):map"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "7BC92061154744A6682FE4934775087F"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid54,value:map):beanDefinitionBuilder5"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "504AB0E22E35812A417FF19491128667"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:object3):boolean1"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "beanDefinition"
      modelFingerprint: "C605C8E41ACD03BF4EAD6E8D5E7F126B"
      valueUuid: "beanDefinition"
      methodExercised:
        expression: "getBeanClassName():string"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "1E118203AEA4A7F23121231DB00A2157"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid55,value:string):beanDefinitionBuilder6"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "F30D7D4A25C31F081A1F392405C01404"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid56,value:object4):beanDefinitionBuilder7"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "70A15046127339A725D792687957A041"
      methodExercised:
        expression: "extractUrlPatterns(attributes:attributes):stringArray"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "62A2AC4FCA82F61C60335F1315E08291"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid65,value:stringArray):beanDefinitionBuilder8"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "F983BD3F7E9582CFF6F71353BBF318DE"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "getBeanDefinition():abstractBeanDefinition"
    - type: "LOCAL_VARIABLE"
      name: "registry"
      modelFingerprint: "F1628BDBC0EA818DA4628748F6994553"
      valueUuid: "registry"
      methodExercised:
        expression: "registerBeanDefinition(beanName:string,beanDefinition:abstractBeanDefinition):void"
        throwsExceptions:
        - "org.springframework.beans.factory.BeanDefinitionStoreException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.WebFilterHandler"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.WebFilterHandler"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "filterName"
              valueType: "java.lang.String"
              uuid: "uniqueUuid58"
              fixed: true
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: ""
              valueType: "java.lang.String"
              uuid: "object3"
              collectionUuid: "attributes"
              explicitCastNeeded: true
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid57"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "servletNames"
              valueType: "java.lang.String"
              uuid: "uniqueUuid60"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object4"
              collectionUuid: "attributes"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid59"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "asyncSupported"
              valueType: "java.lang.String"
              uuid: "uniqueUuid62"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object"
              collectionUuid: "attributes"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid61"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "dispatcherTypes"
              valueType: "java.lang.String"
              uuid: "uniqueUuid64"
              fixed: true
            value:
              sapientType: "ARRAY"
              content: !<array>
                values:
                  0:
                    sapientType: "ENUM"
                    content: !<regular>
                      value: "FORWARD"
                    valueType: "jakarta.servlet.DispatcherType"
                    uuid: "dispatcherType"
              valueType: "jakarta.servlet.DispatcherType[]"
              uuid: "object2"
              collectionUuid: "attributes"
              explicitCastNeeded: true
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid63"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "attributes"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.annotation.AnnotatedBeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "BeanDefinitionBuilder.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.web.servlet.FilterRegistrationBean"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.web.servlet.FilterRegistrationBean"
      uuid: "uniqueUuid42"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "asyncSupported"
      valueType: "java.lang.String"
      uuid: "uniqueUuid43"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
      collectionUuid: "attributes"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "dispatcherTypes"
      valueType: "java.lang.String"
      uuid: "uniqueUuid44"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "ENUM"
          content: !<regular>
            value: "FORWARD"
          valueType: "jakarta.servlet.DispatcherType"
          uuid: "dispatcherType"
      valueType: "java.util.EnumSet"
      genericValueType: "jakarta.servlet.DispatcherType"
      uuid: "enumSet"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "filter"
      valueType: "java.lang.String"
      uuid: "uniqueUuid45"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.annotation.AnnotatedBeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "filterName"
              valueType: "java.lang.String"
              uuid: "uniqueUuid58"
              fixed: true
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: ""
              valueType: "java.lang.String"
              uuid: "object3"
              collectionUuid: "attributes"
              explicitCastNeeded: true
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid57"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "servletNames"
              valueType: "java.lang.String"
              uuid: "uniqueUuid60"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object4"
              collectionUuid: "attributes"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid59"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "asyncSupported"
              valueType: "java.lang.String"
              uuid: "uniqueUuid62"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object"
              collectionUuid: "attributes"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid61"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "dispatcherTypes"
              valueType: "java.lang.String"
              uuid: "uniqueUuid64"
              fixed: true
            value:
              sapientType: "ARRAY"
              content: !<array>
                values:
                  0:
                    sapientType: "ENUM"
                    content: !<regular>
                      value: "FORWARD"
                    valueType: "jakarta.servlet.DispatcherType"
                    uuid: "dispatcherType"
              valueType: "jakarta.servlet.DispatcherType[]"
              uuid: "object2"
              collectionUuid: "attributes"
              explicitCastNeeded: true
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid63"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "attributes"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "initParameters"
      valueType: "java.lang.String"
      uuid: "uniqueUuid54"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "object3"
      collectionUuid: "attributes"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.annotation.AnnotatedBeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanClassName1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "name"
      valueType: "java.lang.String"
      uuid: "uniqueUuid55"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanClassName1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder7"
    - sapientType: "BASIC"
      content: !<regular>
        value: "servletNames"
      valueType: "java.lang.String"
      uuid: "uniqueUuid56"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
      collectionUuid: "attributes"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "filterName"
              valueType: "java.lang.String"
              uuid: "uniqueUuid58"
              fixed: true
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: ""
              valueType: "java.lang.String"
              uuid: "object3"
              collectionUuid: "attributes"
              explicitCastNeeded: true
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid57"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "servletNames"
              valueType: "java.lang.String"
              uuid: "uniqueUuid60"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object4"
              collectionUuid: "attributes"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid59"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "asyncSupported"
              valueType: "java.lang.String"
              uuid: "uniqueUuid62"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object"
              collectionUuid: "attributes"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid61"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "dispatcherTypes"
              valueType: "java.lang.String"
              uuid: "uniqueUuid64"
              fixed: true
            value:
              sapientType: "ARRAY"
              content: !<array>
                values:
                  0:
                    sapientType: "ENUM"
                    content: !<regular>
                      value: "FORWARD"
                    valueType: "jakarta.servlet.DispatcherType"
                    uuid: "dispatcherType"
              valueType: "jakarta.servlet.DispatcherType[]"
              uuid: "object2"
              collectionUuid: "attributes"
              explicitCastNeeded: true
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid63"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "attributes"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder8"
    - sapientType: "BASIC"
      content: !<regular>
        value: "urlPatterns"
      valueType: "java.lang.String"
      uuid: "uniqueUuid65"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.beans.factory.support.AbstractBeanDefinition"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
          uuid: "beanDefinitionBuilder"
        methodParameters: []
        methodName: "getBeanDefinition"
      valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
      uuid: "abstractBeanDefinition"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanClassName1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.beans.factory.support.AbstractBeanDefinition"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
          uuid: "beanDefinitionBuilder"
        methodParameters: []
        methodName: "getBeanDefinition"
      valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
      uuid: "abstractBeanDefinition"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 60
      expression: "dispatcherTypes.length == 0"
      range: "(60,7)-(60,33)"
      evaluatedAs: false
      internalMethodName: "extractDispatcherTypes"
    - lineNumber: 63
      expression: "dispatcherTypes.length == 1"
      range: "(63,7)-(63,33)"
      evaluatedAs: true
      internalMethodName: "extractDispatcherTypes"
    - lineNumber: 70
      expression: "StringUtils.hasText((String) attributes.get(\\\"filterName\\\"\
        ))"
      range: "(70,20)-(70,77)"
      evaluatedAs: false
      internalMethodName: "determineName"
  - pathId: "path4"
    testPathName: "doHandleWhenDispatcherTypesLengthNotEquals1AndStringUtilsNotHasTextAttributesGetFilterName"
    constructorSignature: "<init>() : void"
    modelFingerprint: "8E4D1A6A3F8A10CAC6091045C3A98766"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "attributes"
      modelFingerprint: "850AA8C816111C5508AF51D81FC9E13B"
      valueUuid: "attributes"
    - type: "INPUT"
      name: "beanDefinition"
      modelFingerprint: "CEDDAAB7EF5E51F15F8ADFCA44047E03"
      valueUuid: "beanDefinition"
    - type: "INPUT"
      name: "registry"
      modelFingerprint: "14F926E67FDB678BF2FEC697D6F094DC"
      valueUuid: "registry"
    - type: "STATIC"
      name: "BeanDefinitionBuilder.class"
      modelFingerprint: "792D14D3305F3693AD738E4022940620"
      valueUuid: "BeanDefinitionBuilder.class"
      methodExercised:
        expression: "rootBeanDefinition(beanClass:uniqueUuid74):beanDefinitionBuilder"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "7A95E5260696829A9DB7A6AC77D4C022"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid75,value:object):beanDefinitionBuilder2"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "19AA625AF3188978B55D18A8EC4A0C42"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid76,value:enumSet):beanDefinitionBuilder3"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "C7D557D72A402BF2E8316AC253958B76"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid77,value:beanDefinition):beanDefinitionBuilder4"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "13CB70BFD91A2C1C6095AB0911AD7A1D"
      methodExercised:
        expression: "extractInitParameters(attributes:attributes):map"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "7BC92061154744A6682FE4934775087F"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid86,value:map):beanDefinitionBuilder5"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "54487C1342835B70D21156D482BFAC73"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasText(str:object3):boolean1"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "beanDefinition"
      modelFingerprint: "C605C8E41ACD03BF4EAD6E8D5E7F126B"
      valueUuid: "beanDefinition"
      methodExercised:
        expression: "getBeanClassName():string"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "1E118203AEA4A7F23121231DB00A2157"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid87,value:string):beanDefinitionBuilder6"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "F30D7D4A25C31F081A1F392405C01404"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid88,value:object4):beanDefinitionBuilder7"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "9DAE3F04710D6171DA371DA0608EF888"
      methodExercised:
        expression: "extractUrlPatterns(attributes:attributes):stringArray"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "62A2AC4FCA82F61C60335F1315E08291"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid97,value:stringArray):beanDefinitionBuilder8"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "F983BD3F7E9582CFF6F71353BBF318DE"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "getBeanDefinition():abstractBeanDefinition"
    - type: "LOCAL_VARIABLE"
      name: "registry"
      modelFingerprint: "F1628BDBC0EA818DA4628748F6994553"
      valueUuid: "registry"
      methodExercised:
        expression: "registerBeanDefinition(beanName:string,beanDefinition:abstractBeanDefinition):void"
        throwsExceptions:
        - "org.springframework.beans.factory.BeanDefinitionStoreException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.Arrays.copyOfRange(jakarta.servlet.DispatcherType[],int,int)\
        \ : jakarta.servlet.DispatcherType[]"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.WebFilterHandler"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.WebFilterHandler"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "dispatcherTypes"
              valueType: "java.lang.String"
              uuid: "uniqueUuid90"
              fixed: true
            value:
              sapientType: "ARRAY"
              content: !<array>
                values:
                  0:
                    sapientType: "ENUM"
                    content: !<regular>
                      value: "FORWARD"
                    valueType: "jakarta.servlet.DispatcherType"
                    uuid: "dispatcherType"
                  1:
                    sapientType: "ENUM"
                    content: !<regular>
                      value: "FORWARD"
                    valueType: "jakarta.servlet.DispatcherType"
                    uuid: "object2Item1"
                  2:
                    sapientType: "ENUM"
                    content: !<regular>
                      value: "FORWARD"
                    valueType: "jakarta.servlet.DispatcherType"
                    uuid: "object2Item2"
                  3:
                    sapientType: "ENUM"
                    content: !<regular>
                      value: "FORWARD"
                    valueType: "jakarta.servlet.DispatcherType"
                    uuid: "object2Item3"
              valueType: "jakarta.servlet.DispatcherType[]"
              uuid: "object2"
              collectionUuid: "attributes"
              explicitCastNeeded: true
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid89"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "filterName"
              valueType: "java.lang.String"
              uuid: "uniqueUuid92"
              fixed: true
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "A"
              valueType: "java.lang.String"
              uuid: "object3"
              collectionUuid: "attributes"
              explicitCastNeeded: true
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid91"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "asyncSupported"
              valueType: "java.lang.String"
              uuid: "uniqueUuid94"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object"
              collectionUuid: "attributes"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid93"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "servletNames"
              valueType: "java.lang.String"
              uuid: "uniqueUuid96"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object4"
              collectionUuid: "attributes"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid95"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "attributes"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.annotation.AnnotatedBeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "BeanDefinitionBuilder.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.web.servlet.FilterRegistrationBean"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.web.servlet.FilterRegistrationBean"
      uuid: "uniqueUuid74"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "asyncSupported"
      valueType: "java.lang.String"
      uuid: "uniqueUuid75"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
      collectionUuid: "attributes"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "dispatcherTypes"
      valueType: "java.lang.String"
      uuid: "uniqueUuid76"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "ENUM"
          content: !<regular>
            value: "FORWARD"
          valueType: "jakarta.servlet.DispatcherType"
          uuid: "dispatcherType"
      valueType: "java.util.EnumSet"
      genericValueType: "jakarta.servlet.DispatcherType"
      uuid: "enumSet"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "filter"
      valueType: "java.lang.String"
      uuid: "uniqueUuid77"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.annotation.AnnotatedBeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "dispatcherTypes"
              valueType: "java.lang.String"
              uuid: "uniqueUuid90"
              fixed: true
            value:
              sapientType: "ARRAY"
              content: !<array>
                values:
                  0:
                    sapientType: "ENUM"
                    content: !<regular>
                      value: "FORWARD"
                    valueType: "jakarta.servlet.DispatcherType"
                    uuid: "dispatcherType"
                  1:
                    sapientType: "ENUM"
                    content: !<regular>
                      value: "FORWARD"
                    valueType: "jakarta.servlet.DispatcherType"
                    uuid: "object2Item1"
                  2:
                    sapientType: "ENUM"
                    content: !<regular>
                      value: "FORWARD"
                    valueType: "jakarta.servlet.DispatcherType"
                    uuid: "object2Item2"
                  3:
                    sapientType: "ENUM"
                    content: !<regular>
                      value: "FORWARD"
                    valueType: "jakarta.servlet.DispatcherType"
                    uuid: "object2Item3"
              valueType: "jakarta.servlet.DispatcherType[]"
              uuid: "object2"
              collectionUuid: "attributes"
              explicitCastNeeded: true
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid89"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "filterName"
              valueType: "java.lang.String"
              uuid: "uniqueUuid92"
              fixed: true
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "A"
              valueType: "java.lang.String"
              uuid: "object3"
              collectionUuid: "attributes"
              explicitCastNeeded: true
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid91"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "asyncSupported"
              valueType: "java.lang.String"
              uuid: "uniqueUuid94"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object"
              collectionUuid: "attributes"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid93"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "servletNames"
              valueType: "java.lang.String"
              uuid: "uniqueUuid96"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object4"
              collectionUuid: "attributes"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid95"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "attributes"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "initParameters"
      valueType: "java.lang.String"
      uuid: "uniqueUuid86"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "object3"
      collectionUuid: "attributes"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.annotation.AnnotatedBeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanClassName1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "name"
      valueType: "java.lang.String"
      uuid: "uniqueUuid87"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanClassName1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder7"
    - sapientType: "BASIC"
      content: !<regular>
        value: "servletNames"
      valueType: "java.lang.String"
      uuid: "uniqueUuid88"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
      collectionUuid: "attributes"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "dispatcherTypes"
              valueType: "java.lang.String"
              uuid: "uniqueUuid90"
              fixed: true
            value:
              sapientType: "ARRAY"
              content: !<array>
                values:
                  0:
                    sapientType: "ENUM"
                    content: !<regular>
                      value: "FORWARD"
                    valueType: "jakarta.servlet.DispatcherType"
                    uuid: "dispatcherType"
                  1:
                    sapientType: "ENUM"
                    content: !<regular>
                      value: "FORWARD"
                    valueType: "jakarta.servlet.DispatcherType"
                    uuid: "object2Item1"
                  2:
                    sapientType: "ENUM"
                    content: !<regular>
                      value: "FORWARD"
                    valueType: "jakarta.servlet.DispatcherType"
                    uuid: "object2Item2"
                  3:
                    sapientType: "ENUM"
                    content: !<regular>
                      value: "FORWARD"
                    valueType: "jakarta.servlet.DispatcherType"
                    uuid: "object2Item3"
              valueType: "jakarta.servlet.DispatcherType[]"
              uuid: "object2"
              collectionUuid: "attributes"
              explicitCastNeeded: true
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid89"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "filterName"
              valueType: "java.lang.String"
              uuid: "uniqueUuid92"
              fixed: true
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "A"
              valueType: "java.lang.String"
              uuid: "object3"
              collectionUuid: "attributes"
              explicitCastNeeded: true
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid91"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "asyncSupported"
              valueType: "java.lang.String"
              uuid: "uniqueUuid94"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object"
              collectionUuid: "attributes"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid93"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "servletNames"
              valueType: "java.lang.String"
              uuid: "uniqueUuid96"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object4"
              collectionUuid: "attributes"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid95"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "attributes"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder8"
    - sapientType: "BASIC"
      content: !<regular>
        value: "urlPatterns"
      valueType: "java.lang.String"
      uuid: "uniqueUuid97"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.beans.factory.support.AbstractBeanDefinition"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
          uuid: "beanDefinitionBuilder"
        methodParameters: []
        methodName: "getBeanDefinition"
      valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
      uuid: "abstractBeanDefinition"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanClassName1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.beans.factory.support.AbstractBeanDefinition"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
          uuid: "beanDefinitionBuilder"
        methodParameters: []
        methodName: "getBeanDefinition"
      valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
      uuid: "abstractBeanDefinition"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 60
      expression: "dispatcherTypes.length == 0"
      range: "(60,7)-(60,33)"
      evaluatedAs: false
      internalMethodName: "extractDispatcherTypes"
    - lineNumber: 63
      expression: "dispatcherTypes.length == 1"
      range: "(63,7)-(63,33)"
      evaluatedAs: false
      internalMethodName: "extractDispatcherTypes"
    - lineNumber: 70
      expression: "StringUtils.hasText((String) attributes.get(\\\"filterName\\\"\
        ))"
      range: "(70,20)-(70,77)"
      evaluatedAs: false
      internalMethodName: "determineName"
