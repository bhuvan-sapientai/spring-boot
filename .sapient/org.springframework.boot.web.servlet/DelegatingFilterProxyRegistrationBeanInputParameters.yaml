---
modelFingerprint: "BAEAEF35AA6436CCDF7DEE20B68B0795"
targetClass:
  fullClassName: "org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean"
methods:
- method:
    name: "setApplicationContext"
    sourceCodeSignature: "void setApplicationContext(ApplicationContext applicationContext)"
    returnType: "void"
    throwsExceptions:
    - "org.springframework.beans.BeansException"
    parameters:
    - name: "applicationContext"
      type: "org.springframework.context.ApplicationContext"
    instructionFingerprint: "62E0683B7DE24D3FBC3480EF47432B8C"
  paths:
  - pathId: "path1"
    testPathName: "setApplicationContextTest"
    constructorSignature: "<init>(java.lang.String,org.springframework.boot.web.servlet.ServletRegistrationBean<?>[])\
      \ : void"
    modelFingerprint: "9AC8077E09DCD5925DDCE4F5A44830AC"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.Collections.addAll(java.util.Set<org.springframework.boot.web.servlet.ServletRegistrationBean<?>>,org.springframework.boot.web.servlet.ServletRegistrationBean<?>[])\
        \ : boolean"
    allValues: []
- method:
    name: "getTargetBeanName"
    sourceCodeSignature: "String getTargetBeanName()"
    returnType: "java.lang.String"
    instructionFingerprint: "3BFAF6C9C62B257E8377C775D12B7E9F"
  paths:
  - pathId: "path1"
    testPathName: "getTargetBeanNameTest"
    constructorSignature: "<init>(java.lang.String,org.springframework.boot.web.servlet.ServletRegistrationBean<?>[])\
      \ : void"
    modelFingerprint: "CFB9805AFC2D006F1217C18FE8E5DFB6"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.Collections.addAll(java.util.Set<org.springframework.boot.web.servlet.ServletRegistrationBean<?>>,org.springframework.boot.web.servlet.ServletRegistrationBean<?>[])\
        \ : boolean"
    allValues: []
- method:
    name: "getFilter"
    sourceCodeSignature: "DelegatingFilterProxy getFilter()"
    returnType: "org.springframework.web.filter.DelegatingFilterProxy"
    instructionFingerprint: "5B3A13C8FDB8AA13BDE06BAD6694810E"
  paths:
  - pathId: "path1"
    testPathName: "getFilter1Test"
    constructorSignature: "<init>(java.lang.String,org.springframework.boot.web.servlet.ServletRegistrationBean<?>[])\
      \ : void"
    modelFingerprint: "67D97AC0E946330DF408623F81A5805A"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "ECCB89DEE0E6CA943538AAAA8EA00C0F"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "593A7C93EAD2BB86C6D13F9ADB478D5B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:servletRegistrationBeans,message:uniqueUuid7):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "0B88876E1ADFAF18533C767B0E388E6A"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "hasLength(text:targetBeanName,message:uniqueUuid8):void2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "955BDB035516E7FD20B856B515092692"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "hasLength(text:targetBeanName,message:uniqueUuid9):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "3B3E8C5F6214CDEB4FAC94549D9085F5"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:fieldApplicationContext,message:uniqueUuid10):void4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "E48060563223C9D6C43BF14D82F68129"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "isInstanceOf(type:uniqueUuid11,obj:fieldApplicationContext):void5"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "DB819A382441100B9775C80A2E7CD04A"
      valueUuid: "nullNotNull"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.Collections.addAll(java.util.Set<org.springframework.boot.web.servlet.ServletRegistrationBean<?>>,org.springframework.boot.web.servlet.ServletRegistrationBean<?>[])\
        \ : boolean"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean"
        parameters:
        - name: "targetBeanName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "targetBeanName"
        - name: "servletRegistrationBeans"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.boot.web.servlet.ServletRegistrationBean[]"
            genericValueType: "?"
            uuid: "servletRegistrationBeans"
      valueType: "org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.servlet.ServletRegistrationBean[]"
      genericValueType: "?"
      uuid: "servletRegistrationBeans"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ServletRegistrationBeans must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "targetBeanName"
    - sapientType: "BASIC"
      content: !<regular>
        value: "TargetBeanName must not be null or empty"
      valueType: "java.lang.String"
      uuid: "uniqueUuid8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "targetBeanName"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be empty"
      valueType: "java.lang.String"
      uuid: "uniqueUuid9"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.web.context.WebApplicationContext"
      uuid: "fieldApplicationContext"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "ApplicationContext be injected"
      valueType: "java.lang.String"
      uuid: "uniqueUuid10"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.web.context.WebApplicationContext"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.web.context.WebApplicationContext"
      uuid: "uniqueUuid11"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.web.context.WebApplicationContext"
      uuid: "fieldApplicationContext"
      explicitCastNeeded: true
    - sapientType: "NOT_NULL"
      valueType: "org.springframework.web.filter.DelegatingFilterProxy"
      uuid: "nullNotNull"
      fixed: true
