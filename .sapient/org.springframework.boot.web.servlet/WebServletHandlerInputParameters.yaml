---
modelFingerprint: "57F0F0D5CA24F4853428CD0FCAE4AF6C"
targetClass:
  fullClassName: "org.springframework.boot.web.servlet.WebServletHandler"
methods:
- method:
    name: "doHandle"
    sourceCodeSignature: "void doHandle(Map<String, Object> attributes, AnnotatedBeanDefinition\
      \ beanDefinition, BeanDefinitionRegistry registry)"
    returnType: "void"
    parameters:
    - name: "attributes"
      type: "java.util.Map"
    - name: "beanDefinition"
      type: "org.springframework.beans.factory.annotation.AnnotatedBeanDefinition"
    - name: "registry"
      type: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
    instructionFingerprint: "08240662D40E3AADCD85C892AF31D9B9"
  paths:
  - pathId: "path1"
    testPathName: "doHandleWhenAttributesIsNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "FBF2CB05C6A6DD9E906F0D653A318673"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "attributes"
      modelFingerprint: "8F1FA6C9326F11B394DE90C34D5F493D"
      valueUuid: "attributes"
    - type: "INPUT"
      name: "beanDefinition"
      modelFingerprint: "CEDDAAB7EF5E51F15F8ADFCA44047E03"
      valueUuid: "beanDefinition"
    - type: "INPUT"
      name: "registry"
      modelFingerprint: "14F926E67FDB678BF2FEC697D6F094DC"
      valueUuid: "registry"
    - type: "STATIC"
      name: "BeanDefinitionBuilder.class"
      modelFingerprint: "1D9DA2128CA0916F45950917F9996790"
      valueUuid: "BeanDefinitionBuilder.class"
      methodExercised:
        expression: "rootBeanDefinition(beanClass:uniqueUuid8):beanDefinitionBuilder"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "7A95E5260696829A9DB7A6AC77D4C022"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid9,value:object):beanDefinitionBuilder2"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "05772B9D98CF19B816ADDC2431CD8B0B"
      methodExercised:
        expression: "extractInitParameters(attributes:attributes):map"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "7BC92061154744A6682FE4934775087F"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid17,value:map):beanDefinitionBuilder3"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "6595D299B6FC9EC192FA35B5D19F19A0"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid18,value:object2):beanDefinitionBuilder4"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "A91647CB447119BB97CB86EA51675C61"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:object3):boolean1"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "9DEFCE91C79B6BE8AF4D7FF24CF237D5"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid19,value:object3):beanDefinitionBuilder5"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "ECFD605E181002CBF2DB6A9EFF8319CD"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid20,value:beanDefinition):beanDefinitionBuilder6"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "0067D2F4463C8E2159E92C656E779414"
      methodExercised:
        expression: "extractUrlPatterns(attributes:attributes):stringArray"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "4BF61F639225955375D13C04A31BB398"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid28,value:stringArray):beanDefinitionBuilder7"
    - type: "LOCAL_VARIABLE"
      name: "beanDefinition"
      modelFingerprint: "58D091BC5D8F7A6777206396FC903C88"
      valueUuid: "beanDefinition"
      methodExercised:
        expression: "getMetadata():annotationMetadata"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A931D31C238D9F4848A348258B843D5C"
      valueUuid: "annotationMetadata"
      methodExercised:
        expression: "getAnnotationAttributes(annotationName:string):map2"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "EF39703F11267F845E1875B8D9C5559B"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid29,value:beanDefinition2):beanDefinitionBuilder8"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "F983BD3F7E9582CFF6F71353BBF318DE"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "getBeanDefinition():abstractBeanDefinition"
    - type: "LOCAL_VARIABLE"
      name: "registry"
      modelFingerprint: "1FA6CDCEBF26A22B85756AA92D5CFCA1"
      valueUuid: "registry"
      methodExercised:
        expression: "registerBeanDefinition(beanName:object3,beanDefinition:abstractBeanDefinition):void"
        throwsExceptions:
        - "org.springframework.beans.factory.BeanDefinitionStoreException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.WebServletHandler"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.WebServletHandler"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "name"
              valueType: "java.lang.String"
              uuid: "uniqueUuid22"
              fixed: true
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "A"
              valueType: "java.lang.String"
              uuid: "object3"
              collectionUuid: "attributes"
              explicitCastNeeded: true
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid21"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "attributesItem2Key1"
              valueType: "java.lang.String"
              uuid: "attributesKey1"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "attributesValue1"
          uuid: "uniqueUuid23"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "asyncSupported"
              valueType: "java.lang.String"
              uuid: "uniqueUuid25"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object"
              collectionUuid: "attributes"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid24"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "loadOnStartup"
              valueType: "java.lang.String"
              uuid: "uniqueUuid27"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object2"
              collectionUuid: "attributes"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid26"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "attributes"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.annotation.AnnotatedBeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "BeanDefinitionBuilder.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.web.servlet.ServletRegistrationBean"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.web.servlet.ServletRegistrationBean"
      uuid: "uniqueUuid8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "asyncSupported"
      valueType: "java.lang.String"
      uuid: "uniqueUuid9"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
      collectionUuid: "attributes"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "name"
              valueType: "java.lang.String"
              uuid: "uniqueUuid22"
              fixed: true
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "A"
              valueType: "java.lang.String"
              uuid: "object3"
              collectionUuid: "attributes"
              explicitCastNeeded: true
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid21"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "attributesItem2Key1"
              valueType: "java.lang.String"
              uuid: "attributesKey1"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "attributesValue1"
          uuid: "uniqueUuid23"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "asyncSupported"
              valueType: "java.lang.String"
              uuid: "uniqueUuid25"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object"
              collectionUuid: "attributes"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid24"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "loadOnStartup"
              valueType: "java.lang.String"
              uuid: "uniqueUuid27"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object2"
              collectionUuid: "attributes"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid26"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "attributes"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "initParameters"
      valueType: "java.lang.String"
      uuid: "uniqueUuid17"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "loadOnStartup"
      valueType: "java.lang.String"
      uuid: "uniqueUuid18"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object2"
      collectionUuid: "attributes"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "object3"
      collectionUuid: "attributes"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "name"
      valueType: "java.lang.String"
      uuid: "uniqueUuid19"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "object3"
      collectionUuid: "attributes"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "servlet"
      valueType: "java.lang.String"
      uuid: "uniqueUuid20"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.annotation.AnnotatedBeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "name"
              valueType: "java.lang.String"
              uuid: "uniqueUuid22"
              fixed: true
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "A"
              valueType: "java.lang.String"
              uuid: "object3"
              collectionUuid: "attributes"
              explicitCastNeeded: true
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid21"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "attributesItem2Key1"
              valueType: "java.lang.String"
              uuid: "attributesKey1"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "attributesValue1"
          uuid: "uniqueUuid23"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "asyncSupported"
              valueType: "java.lang.String"
              uuid: "uniqueUuid25"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object"
              collectionUuid: "attributes"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid24"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "loadOnStartup"
              valueType: "java.lang.String"
              uuid: "uniqueUuid27"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object2"
              collectionUuid: "attributes"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid26"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "attributes"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder7"
    - sapientType: "BASIC"
      content: !<regular>
        value: "urlMappings"
      valueType: "java.lang.String"
      uuid: "uniqueUuid28"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.annotation.AnnotatedBeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.type.AnnotationMetadata"
      uuid: "annotationMetadata"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.type.AnnotationMetadata"
      uuid: "annotationMetadata"
    - sapientType: "NULL"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "jakarta.servlet.annotation.MultipartConfig"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
          uuid: "beanDefinitionBuilder"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "multipartConfig"
            valueType: "java.lang.String"
            uuid: "uniqueUuid30"
            fixed: true
        - value:
            sapientType: "NULL"
            valueType: "org.springframework.beans.factory.config.BeanDefinition"
            uuid: "beanDefinition2"
            fixed: true
        methodName: "addPropertyValue"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder8"
    - sapientType: "BASIC"
      content: !<regular>
        value: "multipartConfig"
      valueType: "java.lang.String"
      uuid: "uniqueUuid29"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.beans.factory.config.BeanDefinition"
      uuid: "beanDefinition2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.beans.factory.support.AbstractBeanDefinition"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
          uuid: "beanDefinitionBuilder"
        methodParameters: []
        methodName: "getBeanDefinition"
      valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
      uuid: "abstractBeanDefinition"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "object3"
      collectionUuid: "attributes"
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.beans.factory.support.AbstractBeanDefinition"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
          uuid: "beanDefinitionBuilder"
        methodParameters: []
        methodName: "getBeanDefinition"
      valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
      uuid: "abstractBeanDefinition"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 58
      expression: "StringUtils.hasText((String) attributes.get(\\\"name\\\"))"
      range: "(58,20)-(58,71)"
      evaluatedAs: true
      internalMethodName: "determineName"
    - lineNumber: 65
      expression: "attributes == null"
      range: "(65,7)-(65,24)"
      evaluatedAs: true
      internalMethodName: "determineMultipartConfig"
  - pathId: "path2"
    testPathName: "doHandleWhenAttributesIsNotNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "82FDE79F47BD219A2B05C6D290393AD7"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "attributes"
      modelFingerprint: "0075FD84EDBA2F4843F80F38B939A59D"
      valueUuid: "attributes"
    - type: "INPUT"
      name: "beanDefinition"
      modelFingerprint: "CEDDAAB7EF5E51F15F8ADFCA44047E03"
      valueUuid: "beanDefinition"
    - type: "INPUT"
      name: "registry"
      modelFingerprint: "14F926E67FDB678BF2FEC697D6F094DC"
      valueUuid: "registry"
    - type: "STATIC"
      name: "BeanDefinitionBuilder.class"
      modelFingerprint: "1D9DA2128CA0916F45950917F9996790"
      valueUuid: "BeanDefinitionBuilder.class"
      methodExercised:
        expression: "rootBeanDefinition(beanClass:uniqueUuid37):beanDefinitionBuilder"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "7A95E5260696829A9DB7A6AC77D4C022"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid38,value:object):beanDefinitionBuilder2"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "5298024A186FFC3E8943178C03D6B550"
      methodExercised:
        expression: "extractInitParameters(attributes:attributes):map"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "7BC92061154744A6682FE4934775087F"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid45,value:map):beanDefinitionBuilder3"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "6595D299B6FC9EC192FA35B5D19F19A0"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid46,value:object2):beanDefinitionBuilder4"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "A91647CB447119BB97CB86EA51675C61"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:object3):boolean1"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "9DEFCE91C79B6BE8AF4D7FF24CF237D5"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid47,value:object3):beanDefinitionBuilder5"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "ECFD605E181002CBF2DB6A9EFF8319CD"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid48,value:beanDefinition):beanDefinitionBuilder6"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "EA7CEED5F5512438AB9861CC0C854F53"
      methodExercised:
        expression: "extractUrlPatterns(attributes:attributes):stringArray"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "4BF61F639225955375D13C04A31BB398"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid55,value:stringArray):beanDefinitionBuilder7"
    - type: "LOCAL_VARIABLE"
      name: "beanDefinition"
      modelFingerprint: "58D091BC5D8F7A6777206396FC903C88"
      valueUuid: "beanDefinition"
      methodExercised:
        expression: "getMetadata():annotationMetadata"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "AC70D643A854C223C9C298135273698C"
      valueUuid: "annotationMetadata"
      methodExercised:
        expression: "getAnnotationAttributes(annotationName:string):map2"
    - type: "STATIC"
      name: "BeanDefinitionBuilder.class"
      modelFingerprint: "133C413E81C8D8398496AB3C7F706259"
      valueUuid: "BeanDefinitionBuilder.class"
      methodExercised:
        expression: "rootBeanDefinition(beanClass:uniqueUuid64):beanDefinitionBuilder8"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "D371B1C593C4F522E8B39C75170D40B0"
      valueUuid: "beanDefinitionBuilder8"
      methodExercised:
        expression: "addConstructorArgValue(value:object5):beanDefinitionBuilder9"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "D371B1C593C4F522E8B39C75170D40B0"
      valueUuid: "beanDefinitionBuilder8"
      methodExercised:
        expression: "addConstructorArgValue(value:object6):beanDefinitionBuilder10"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "D371B1C593C4F522E8B39C75170D40B0"
      valueUuid: "beanDefinitionBuilder8"
      methodExercised:
        expression: "addConstructorArgValue(value:object7):beanDefinitionBuilder11"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "D371B1C593C4F522E8B39C75170D40B0"
      valueUuid: "beanDefinitionBuilder8"
      methodExercised:
        expression: "addConstructorArgValue(value:object8):beanDefinitionBuilder12"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "F983BD3F7E9582CFF6F71353BBF318DE"
      valueUuid: "beanDefinitionBuilder8"
      methodExercised:
        expression: "getBeanDefinition():abstractBeanDefinition"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "65A5B19CFA56CF40CC6A4F14191482FD"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid65,value:abstractBeanDefinition):beanDefinitionBuilder13"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "F983BD3F7E9582CFF6F71353BBF318DE"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "getBeanDefinition():abstractBeanDefinition2"
    - type: "LOCAL_VARIABLE"
      name: "registry"
      modelFingerprint: "1FA6CDCEBF26A22B85756AA92D5CFCA1"
      valueUuid: "registry"
      methodExercised:
        expression: "registerBeanDefinition(beanName:object3,beanDefinition:abstractBeanDefinition2):void"
        throwsExceptions:
        - "org.springframework.beans.factory.BeanDefinitionStoreException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.WebServletHandler"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.WebServletHandler"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "asyncSupported"
              valueType: "java.lang.String"
              uuid: "uniqueUuid50"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object"
              collectionUuid: "attributes"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid49"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "name"
              valueType: "java.lang.String"
              uuid: "uniqueUuid52"
              fixed: true
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "A"
              valueType: "java.lang.String"
              uuid: "object3"
              collectionUuid: "attributes"
              explicitCastNeeded: true
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid51"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "loadOnStartup"
              valueType: "java.lang.String"
              uuid: "uniqueUuid54"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object2"
              collectionUuid: "attributes"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid53"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "attributes"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.annotation.AnnotatedBeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "BeanDefinitionBuilder.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.web.servlet.ServletRegistrationBean"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.web.servlet.ServletRegistrationBean"
      uuid: "uniqueUuid37"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "asyncSupported"
      valueType: "java.lang.String"
      uuid: "uniqueUuid38"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
      collectionUuid: "attributes"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "asyncSupported"
              valueType: "java.lang.String"
              uuid: "uniqueUuid50"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object"
              collectionUuid: "attributes"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid49"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "name"
              valueType: "java.lang.String"
              uuid: "uniqueUuid52"
              fixed: true
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "A"
              valueType: "java.lang.String"
              uuid: "object3"
              collectionUuid: "attributes"
              explicitCastNeeded: true
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid51"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "loadOnStartup"
              valueType: "java.lang.String"
              uuid: "uniqueUuid54"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object2"
              collectionUuid: "attributes"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid53"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "attributes"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "initParameters"
      valueType: "java.lang.String"
      uuid: "uniqueUuid45"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "loadOnStartup"
      valueType: "java.lang.String"
      uuid: "uniqueUuid46"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object2"
      collectionUuid: "attributes"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "object3"
      collectionUuid: "attributes"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "name"
      valueType: "java.lang.String"
      uuid: "uniqueUuid47"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "object3"
      collectionUuid: "attributes"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "servlet"
      valueType: "java.lang.String"
      uuid: "uniqueUuid48"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.annotation.AnnotatedBeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "asyncSupported"
              valueType: "java.lang.String"
              uuid: "uniqueUuid50"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object"
              collectionUuid: "attributes"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid49"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "name"
              valueType: "java.lang.String"
              uuid: "uniqueUuid52"
              fixed: true
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "A"
              valueType: "java.lang.String"
              uuid: "object3"
              collectionUuid: "attributes"
              explicitCastNeeded: true
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid51"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "loadOnStartup"
              valueType: "java.lang.String"
              uuid: "uniqueUuid54"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object2"
              collectionUuid: "attributes"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid53"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "attributes"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder7"
    - sapientType: "BASIC"
      content: !<regular>
        value: "urlMappings"
      valueType: "java.lang.String"
      uuid: "uniqueUuid55"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.annotation.AnnotatedBeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.type.AnnotationMetadata"
      uuid: "annotationMetadata"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.type.AnnotationMetadata"
      uuid: "annotationMetadata"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "maxRequestSize"
              valueType: "java.lang.String"
              uuid: "uniqueUuid57"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object7"
              collectionUuid: "map2"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid56"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "maxFileSize"
              valueType: "java.lang.String"
              uuid: "uniqueUuid59"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object6"
              collectionUuid: "map2"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid58"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "fileSizeThreshold"
              valueType: "java.lang.String"
              uuid: "uniqueUuid61"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object8"
              collectionUuid: "map2"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid60"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "location"
              valueType: "java.lang.String"
              uuid: "uniqueUuid63"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object5"
              collectionUuid: "map2"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid62"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "jakarta.servlet.annotation.MultipartConfig"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "BeanDefinitionBuilder.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder8"
    - sapientType: "CLASS"
      content: !<regular>
        value: "jakarta.servlet.MultipartConfigElement"
      valueType: "java.lang.Class"
      genericValueType: "jakarta.servlet.MultipartConfigElement"
      uuid: "uniqueUuid64"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder8"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder9"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object5"
      collectionUuid: "map2"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder8"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder10"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object6"
      collectionUuid: "map2"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder8"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder11"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object7"
      collectionUuid: "map2"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder8"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder12"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object8"
      collectionUuid: "map2"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder8"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.beans.factory.support.AbstractBeanDefinition"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
          uuid: "beanDefinitionBuilder8"
        methodParameters: []
        methodName: "getBeanDefinition"
      valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
      uuid: "abstractBeanDefinition"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
          uuid: "beanDefinitionBuilder"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "multipartConfig"
            valueType: "java.lang.String"
            uuid: "uniqueUuid66"
            fixed: true
        - value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.beans.factory.support.AbstractBeanDefinition"
              localVariableValue:
                sapientType: "MOCK"
                valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
                uuid: "beanDefinitionBuilder8"
              methodParameters: []
              methodName: "getBeanDefinition"
            valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
            uuid: "abstractBeanDefinition"
        methodName: "addPropertyValue"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder13"
    - sapientType: "BASIC"
      content: !<regular>
        value: "multipartConfig"
      valueType: "java.lang.String"
      uuid: "uniqueUuid65"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.beans.factory.support.AbstractBeanDefinition"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
          uuid: "beanDefinitionBuilder8"
        methodParameters: []
        methodName: "getBeanDefinition"
      valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
      uuid: "abstractBeanDefinition"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.beans.factory.support.AbstractBeanDefinition"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
          uuid: "beanDefinitionBuilder"
        methodParameters: []
        methodName: "getBeanDefinition"
      valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
      uuid: "abstractBeanDefinition2"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "object3"
      collectionUuid: "attributes"
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.beans.factory.support.AbstractBeanDefinition"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
          uuid: "beanDefinitionBuilder"
        methodParameters: []
        methodName: "getBeanDefinition"
      valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
      uuid: "abstractBeanDefinition2"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 58
      expression: "StringUtils.hasText((String) attributes.get(\\\"name\\\"))"
      range: "(58,20)-(58,71)"
      evaluatedAs: true
      internalMethodName: "determineName"
    - lineNumber: 65
      expression: "attributes == null"
      range: "(65,7)-(65,24)"
      evaluatedAs: false
      internalMethodName: "determineMultipartConfig"
  - pathId: "path3"
    testPathName: "doHandleWhenStringUtilsNotHasTextAttributesGetNameAndAttributesIsNotNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "D3242CCFE09315D506A29F585CA6A81D"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "attributes"
      modelFingerprint: "F1A08258EFF873ED61C22AC3A63CD6D4"
      valueUuid: "attributes"
    - type: "INPUT"
      name: "beanDefinition"
      modelFingerprint: "CEDDAAB7EF5E51F15F8ADFCA44047E03"
      valueUuid: "beanDefinition"
    - type: "INPUT"
      name: "registry"
      modelFingerprint: "14F926E67FDB678BF2FEC697D6F094DC"
      valueUuid: "registry"
    - type: "STATIC"
      name: "BeanDefinitionBuilder.class"
      modelFingerprint: "1D9DA2128CA0916F45950917F9996790"
      valueUuid: "BeanDefinitionBuilder.class"
      methodExercised:
        expression: "rootBeanDefinition(beanClass:uniqueUuid74):beanDefinitionBuilder"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "7A95E5260696829A9DB7A6AC77D4C022"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid75,value:object):beanDefinitionBuilder2"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "E006A141A9D955D2BE2757C46153D64B"
      methodExercised:
        expression: "extractInitParameters(attributes:attributes):map"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "7BC92061154744A6682FE4934775087F"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid83,value:map):beanDefinitionBuilder3"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "6595D299B6FC9EC192FA35B5D19F19A0"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid84,value:object2):beanDefinitionBuilder4"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "54487C1342835B70D21156D482BFAC73"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasText(str:object3):boolean1"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "beanDefinition"
      modelFingerprint: "C605C8E41ACD03BF4EAD6E8D5E7F126B"
      valueUuid: "beanDefinition"
      methodExercised:
        expression: "getBeanClassName():string"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "1E118203AEA4A7F23121231DB00A2157"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid85,value:string):beanDefinitionBuilder5"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "ECFD605E181002CBF2DB6A9EFF8319CD"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid86,value:beanDefinition):beanDefinitionBuilder6"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "621DF13825CD2711ACBDA53E6DB96D5B"
      methodExercised:
        expression: "extractUrlPatterns(attributes:attributes):stringArray"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "4BF61F639225955375D13C04A31BB398"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid94,value:stringArray):beanDefinitionBuilder7"
    - type: "LOCAL_VARIABLE"
      name: "beanDefinition"
      modelFingerprint: "58D091BC5D8F7A6777206396FC903C88"
      valueUuid: "beanDefinition"
      methodExercised:
        expression: "getMetadata():annotationMetadata"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "D2D1F5D64161EA0C82C859139AC91B2B"
      valueUuid: "annotationMetadata"
      methodExercised:
        expression: "getAnnotationAttributes(annotationName:string2):map2"
    - type: "STATIC"
      name: "BeanDefinitionBuilder.class"
      modelFingerprint: "133C413E81C8D8398496AB3C7F706259"
      valueUuid: "BeanDefinitionBuilder.class"
      methodExercised:
        expression: "rootBeanDefinition(beanClass:uniqueUuid103):beanDefinitionBuilder8"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "D371B1C593C4F522E8B39C75170D40B0"
      valueUuid: "beanDefinitionBuilder8"
      methodExercised:
        expression: "addConstructorArgValue(value:object4):beanDefinitionBuilder9"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "D371B1C593C4F522E8B39C75170D40B0"
      valueUuid: "beanDefinitionBuilder8"
      methodExercised:
        expression: "addConstructorArgValue(value:object5):beanDefinitionBuilder10"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "D371B1C593C4F522E8B39C75170D40B0"
      valueUuid: "beanDefinitionBuilder8"
      methodExercised:
        expression: "addConstructorArgValue(value:object6):beanDefinitionBuilder11"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "D371B1C593C4F522E8B39C75170D40B0"
      valueUuid: "beanDefinitionBuilder8"
      methodExercised:
        expression: "addConstructorArgValue(value:object7):beanDefinitionBuilder12"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "F983BD3F7E9582CFF6F71353BBF318DE"
      valueUuid: "beanDefinitionBuilder8"
      methodExercised:
        expression: "getBeanDefinition():abstractBeanDefinition"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "65A5B19CFA56CF40CC6A4F14191482FD"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addPropertyValue(name:uniqueUuid104,value:abstractBeanDefinition):beanDefinitionBuilder13"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "F983BD3F7E9582CFF6F71353BBF318DE"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "getBeanDefinition():abstractBeanDefinition2"
    - type: "LOCAL_VARIABLE"
      name: "registry"
      modelFingerprint: "F1628BDBC0EA818DA4628748F6994553"
      valueUuid: "registry"
      methodExercised:
        expression: "registerBeanDefinition(beanName:string,beanDefinition:abstractBeanDefinition2):void"
        throwsExceptions:
        - "org.springframework.beans.factory.BeanDefinitionStoreException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.WebServletHandler"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.WebServletHandler"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "asyncSupported"
              valueType: "java.lang.String"
              uuid: "uniqueUuid88"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object"
              collectionUuid: "attributes"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid87"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "attributesItem2Key1"
              valueType: "java.lang.String"
              uuid: "attributesKey1"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "attributesValue1"
          uuid: "uniqueUuid89"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "loadOnStartup"
              valueType: "java.lang.String"
              uuid: "uniqueUuid91"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object2"
              collectionUuid: "attributes"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid90"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "name"
              valueType: "java.lang.String"
              uuid: "uniqueUuid93"
              fixed: true
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "A"
              valueType: "java.lang.String"
              uuid: "object3"
              collectionUuid: "attributes"
              explicitCastNeeded: true
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid92"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "attributes"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.annotation.AnnotatedBeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "BeanDefinitionBuilder.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.web.servlet.ServletRegistrationBean"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.web.servlet.ServletRegistrationBean"
      uuid: "uniqueUuid74"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "asyncSupported"
      valueType: "java.lang.String"
      uuid: "uniqueUuid75"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
      collectionUuid: "attributes"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "asyncSupported"
              valueType: "java.lang.String"
              uuid: "uniqueUuid88"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object"
              collectionUuid: "attributes"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid87"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "attributesItem2Key1"
              valueType: "java.lang.String"
              uuid: "attributesKey1"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "attributesValue1"
          uuid: "uniqueUuid89"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "loadOnStartup"
              valueType: "java.lang.String"
              uuid: "uniqueUuid91"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object2"
              collectionUuid: "attributes"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid90"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "name"
              valueType: "java.lang.String"
              uuid: "uniqueUuid93"
              fixed: true
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "A"
              valueType: "java.lang.String"
              uuid: "object3"
              collectionUuid: "attributes"
              explicitCastNeeded: true
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid92"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "attributes"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "initParameters"
      valueType: "java.lang.String"
      uuid: "uniqueUuid83"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "loadOnStartup"
      valueType: "java.lang.String"
      uuid: "uniqueUuid84"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object2"
      collectionUuid: "attributes"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "object3"
      collectionUuid: "attributes"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.annotation.AnnotatedBeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanClassName1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "name"
      valueType: "java.lang.String"
      uuid: "uniqueUuid85"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanClassName1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "servlet"
      valueType: "java.lang.String"
      uuid: "uniqueUuid86"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.annotation.AnnotatedBeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "asyncSupported"
              valueType: "java.lang.String"
              uuid: "uniqueUuid88"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object"
              collectionUuid: "attributes"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid87"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "attributesItem2Key1"
              valueType: "java.lang.String"
              uuid: "attributesKey1"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "attributesValue1"
          uuid: "uniqueUuid89"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "loadOnStartup"
              valueType: "java.lang.String"
              uuid: "uniqueUuid91"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object2"
              collectionUuid: "attributes"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid90"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "name"
              valueType: "java.lang.String"
              uuid: "uniqueUuid93"
              fixed: true
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "A"
              valueType: "java.lang.String"
              uuid: "object3"
              collectionUuid: "attributes"
              explicitCastNeeded: true
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid92"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "attributes"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder7"
    - sapientType: "BASIC"
      content: !<regular>
        value: "urlMappings"
      valueType: "java.lang.String"
      uuid: "uniqueUuid94"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.annotation.AnnotatedBeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.type.AnnotationMetadata"
      uuid: "annotationMetadata"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.type.AnnotationMetadata"
      uuid: "annotationMetadata"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "maxFileSize"
              valueType: "java.lang.String"
              uuid: "uniqueUuid96"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object5"
              collectionUuid: "map2"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid95"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "maxRequestSize"
              valueType: "java.lang.String"
              uuid: "uniqueUuid98"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object6"
              collectionUuid: "map2"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid97"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "location"
              valueType: "java.lang.String"
              uuid: "uniqueUuid100"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object4"
              collectionUuid: "map2"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid99"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "fileSizeThreshold"
              valueType: "java.lang.String"
              uuid: "uniqueUuid102"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object7"
              collectionUuid: "map2"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid101"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "jakarta.servlet.annotation.MultipartConfig"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "BeanDefinitionBuilder.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder8"
    - sapientType: "CLASS"
      content: !<regular>
        value: "jakarta.servlet.MultipartConfigElement"
      valueType: "java.lang.Class"
      genericValueType: "jakarta.servlet.MultipartConfigElement"
      uuid: "uniqueUuid103"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder8"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder9"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
      collectionUuid: "map2"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder8"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder10"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object5"
      collectionUuid: "map2"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder8"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder11"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object6"
      collectionUuid: "map2"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder8"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder12"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object7"
      collectionUuid: "map2"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder8"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.beans.factory.support.AbstractBeanDefinition"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
          uuid: "beanDefinitionBuilder8"
        methodParameters: []
        methodName: "getBeanDefinition"
      valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
      uuid: "abstractBeanDefinition"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
          uuid: "beanDefinitionBuilder"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "multipartConfig"
            valueType: "java.lang.String"
            uuid: "uniqueUuid105"
            fixed: true
        - value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.beans.factory.support.AbstractBeanDefinition"
              localVariableValue:
                sapientType: "MOCK"
                valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
                uuid: "beanDefinitionBuilder8"
              methodParameters: []
              methodName: "getBeanDefinition"
            valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
            uuid: "abstractBeanDefinition"
        methodName: "addPropertyValue"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder13"
    - sapientType: "BASIC"
      content: !<regular>
        value: "multipartConfig"
      valueType: "java.lang.String"
      uuid: "uniqueUuid104"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.beans.factory.support.AbstractBeanDefinition"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
          uuid: "beanDefinitionBuilder8"
        methodParameters: []
        methodName: "getBeanDefinition"
      valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
      uuid: "abstractBeanDefinition"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.beans.factory.support.AbstractBeanDefinition"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
          uuid: "beanDefinitionBuilder"
        methodParameters: []
        methodName: "getBeanDefinition"
      valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
      uuid: "abstractBeanDefinition2"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanClassName1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.beans.factory.support.AbstractBeanDefinition"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
          uuid: "beanDefinitionBuilder"
        methodParameters: []
        methodName: "getBeanDefinition"
      valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
      uuid: "abstractBeanDefinition2"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 58
      expression: "StringUtils.hasText((String) attributes.get(\\\"name\\\"))"
      range: "(58,20)-(58,71)"
      evaluatedAs: false
      internalMethodName: "determineName"
    - lineNumber: 65
      expression: "attributes == null"
      range: "(65,7)-(65,24)"
      evaluatedAs: false
      internalMethodName: "determineMultipartConfig"
