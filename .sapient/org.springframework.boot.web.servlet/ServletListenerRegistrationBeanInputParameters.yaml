---
modelFingerprint: "08A65156450375C021361C2557988FAA"
methods:
- method:
    name: "setListener"
    signature: "setListener(java.util.EventListener) : void"
    sourceCodeSignature: "void setListener(T listener)"
    instructionFingerprint: "86970CADC64C6D43542125E202871270"
  paths:
  - pathId: "path1"
    testPathName: "setListenerTest"
    constructorSignature: "<init>(java.util.EventListener) : void"
    modelFingerprint: "D98DD324983E8A58144C1E37F9223E06"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "474977368ACBA89CC943A40473E6B3BC"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "listener"
      modelFingerprint: "5467661B367EC9369178253359DA3459"
      index: 2
      valueUuid: "setListener_eventListener1"
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "5E81CB0B664151B2731C644DE7408B63"
      index: 3
      valueUuid: "uuid2"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "<init>_eventListener1"
        - name: "message"
          valueUuid: "uuid1"
        signature: "notNull(EventListener,String): void"
        returnValueUuid: "<init>_void1"
        access: 9
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "2ED94C7267CB899830CE4C716FEAC553"
      index: 4
      valueUuid: "uuid5"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "isTrue"
        parameters:
        - name: "expression"
          valueUuid: "uuid3"
        - name: "message"
          valueUuid: "uuid4"
        signature: "isTrue(boolean,String): void"
        returnValueUuid: "<init>_void2"
        access: 9
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "5E81CB0B664151B2731C644DE7408B63"
      index: 5
      valueUuid: "uuid7"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "setListener_eventListener1"
        - name: "message"
          valueUuid: "uuid6"
        signature: "notNull(EventListener,String): void"
        returnValueUuid: "setListener_void1"
        access: 9
    - type: "STATIC"
      name: "ServletListenerRegistrationBean"
      modelFingerprint: "9762588089F507A6CFA3484448592482"
      index: 6
      valueUuid: "uuid8"
      methodExercised:
        target: "org.springframework.boot.web.servlet.ServletListenerRegistrationBean"
        name: "isSupportedType"
        parameters:
        - name: "listener"
          valueUuid: "setListener_eventListener1"
        signature: "isSupportedType(EventListener): boolean"
        returnValueUuid: "setListener_boolean1"
        access: 9
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "C771FA83F10C0CA9D34626E194442ACB"
      index: 7
      valueUuid: "uuid10"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "isTrue"
        parameters:
        - name: "expression"
          valueUuid: "setListener_boolean1"
        - name: "message"
          valueUuid: "uuid9"
        signature: "isTrue(boolean,String): void"
        returnValueUuid: "setListener_void2"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 8
      valueUuid: "uuid11"
    - type: "STATE_VERIFICATION_FIELD"
      name: "listener"
      modelFingerprint: "E30A742ABFE84997D5758532CEE8B88F"
      index: 9
      valueUuid: "setListener_eventListener1"
      readMethodForField: "getListener"
      readMethodModifier: "PUBLIC"
    uuid: "33d93db6-b323-3f6d-961d-10c273404938"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.ServletListenerRegistrationBean"
        parameters:
        - name: "listener"
          value:
            sapientType: "MOCK"
            valueType: "java.util.EventListener"
            uuid: "<init>_eventListener1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.web.servlet.ServletListenerRegistrationBean"
      genericValueType: "java.util.EventListener"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.EventListener"
      uuid: "setListener_eventListener1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.EventListener"
      uuid: "<init>_eventListener1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Listener must not be null"
      valueType: "java.lang.String"
      uuid: "uuid1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Listener is not of a supported type"
      valueType: "java.lang.String"
      uuid: "uuid4"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid7"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "setListener_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.EventListener"
      uuid: "setListener_eventListener1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Listener must not be null"
      valueType: "java.lang.String"
      uuid: "uuid6"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.ServletListenerRegistrationBean"
      uuid: "uuid8"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "setListener_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.EventListener"
      uuid: "setListener_eventListener1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid10"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "setListener_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "setListener_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Listener is not of a supported type"
      valueType: "java.lang.String"
      uuid: "uuid9"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid11"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.EventListener"
      uuid: "setListener_eventListener1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "getListener"
    signature: "getListener() : java.util.EventListener"
    sourceCodeSignature: "T getListener()"
    instructionFingerprint: "1EE678D1B9B1D7246C4B1E6E77AEB41B"
  paths:
  - pathId: "path1"
    testPathName: "getListenerTest"
    constructorSignature: "<init>(java.util.EventListener) : void"
    modelFingerprint: "50B2A8FB0EB09DF680491C1D7BF81635"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "2114a3ae-8280-34b2-9e53-e77a594df9a5"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
- method:
    name: "getDescription"
    signature: "getDescription() : java.lang.String"
    sourceCodeSignature: "String getDescription()"
    instructionFingerprint: "DC0D7A3249404B5E9E72F7368570E56A"
  paths:
  - pathId: "path1"
    testPathName: "getDescriptionTest"
    constructorSignature: "<init>(java.util.EventListener) : void"
    modelFingerprint: "09DCA3A8C687F3B860E5B422DF3EAFDA"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "474977368ACBA89CC943A40473E6B3BC"
      index: 1
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "5E81CB0B664151B2731C644DE7408B63"
      index: 2
      valueUuid: "uuid2"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "<init>_eventListener1"
        - name: "message"
          valueUuid: "uuid1"
        signature: "notNull(EventListener,String): void"
        returnValueUuid: "<init>_void1"
        access: 9
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "2ED94C7267CB899830CE4C716FEAC553"
      index: 3
      valueUuid: "uuid5"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "isTrue"
        parameters:
        - name: "expression"
          valueUuid: "uuid3"
        - name: "message"
          valueUuid: "uuid4"
        signature: "isTrue(boolean,String): void"
        returnValueUuid: "<init>_void2"
        access: 9
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "5E81CB0B664151B2731C644DE7408B63"
      index: 4
      valueUuid: "uuid7"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "<init>_eventListener1"
        - name: "message"
          valueUuid: "uuid6"
        signature: "notNull(EventListener,String): void"
        returnValueUuid: "getDescription_void1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "BB3B3F2C176FC59645A17EC90FEBDF3A"
      index: 5
      valueUuid: "getDescription_string1"
    uuid: "c72539b8-9295-34c2-830f-8d27a3760c57"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.ServletListenerRegistrationBean"
        parameters:
        - name: "listener"
          value:
            sapientType: "MOCK"
            valueType: "java.util.EventListener"
            uuid: "<init>_eventListener1"
            fixed: false
            nameForMock: "<init>_eventListener1"
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.web.servlet.ServletListenerRegistrationBean"
      genericValueType: "java.util.EventListener"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.EventListener"
      uuid: "<init>_eventListener1"
      fixed: false
      nameForMock: "<init>_eventListener1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Listener must not be null"
      valueType: "java.lang.String"
      uuid: "uuid1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Listener is not of a supported type"
      valueType: "java.lang.String"
      uuid: "uuid4"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid7"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "getDescription_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.EventListener"
      uuid: "<init>_eventListener1"
      fixed: false
      nameForMock: "<init>_eventListener1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Listener must not be null"
      valueType: "java.lang.String"
      uuid: "uuid6"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "listener <init>_eventListener1"
      valueType: "java.lang.String"
      uuid: "getDescription_string1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "register"
    signature: "register(java.lang.String,jakarta.servlet.ServletContext) : void"
    sourceCodeSignature: "void register(String description, ServletContext servletContext)"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.RuntimeException"
    instructionFingerprint: "5764BF23AFD4C7E64EFE1E8A79D1024B"
  paths:
  - pathId: "path1"
    testPathName: "registerTest"
    constructorSignature: "<init>(java.util.EventListener) : void"
    modelFingerprint: "C6EC4FBFABD8A1C972E390199E24BFD0"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "474977368ACBA89CC943A40473E6B3BC"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "description"
      modelFingerprint: "C71E36E8022063E9EC5AE91C0756623E"
      index: 2
      valueUuid: "register_string1"
    - type: "INPUT"
      name: "servletContext"
      modelFingerprint: "8566B3F9425377F11C29530BF52821CC"
      index: 3
      valueUuid: "register_servletContext1"
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "5E81CB0B664151B2731C644DE7408B63"
      index: 4
      valueUuid: "uuid25"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "<init>_eventListener1"
        - name: "message"
          valueUuid: "uuid24"
        signature: "notNull(EventListener,String): void"
        returnValueUuid: "<init>_void1"
        access: 9
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "2ED94C7267CB899830CE4C716FEAC553"
      index: 5
      valueUuid: "uuid28"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "isTrue"
        parameters:
        - name: "expression"
          valueUuid: "uuid26"
        - name: "message"
          valueUuid: "uuid27"
        signature: "isTrue(boolean,String): void"
        returnValueUuid: "<init>_void2"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "servletContext"
      modelFingerprint: "BF3A31929C5AD0EC61F2A364A498BD9B"
      index: 6
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "register_servletContext1"
      methodExercised:
        target: "servletContext"
        name: "addListener"
        parameters:
        - name: "arg0"
          valueUuid: "<init>_eventListener1"
        signature: "addListener(EventListener): void"
        returnValueUuid: "register_void1"
        access: 1025
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 7
      valueUuid: "uuid29"
    uuid: "853913a6-18ed-366c-8d01-10d393fd970e"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.ServletListenerRegistrationBean"
        parameters:
        - name: "listener"
          value:
            sapientType: "MOCK"
            valueType: "java.util.EventListener"
            uuid: "<init>_eventListener1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.web.servlet.ServletListenerRegistrationBean"
      genericValueType: "java.util.EventListener"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "description1"
      valueType: "java.lang.String"
      uuid: "register_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "jakarta.servlet.ServletContext"
      uuid: "register_servletContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid25"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.EventListener"
      uuid: "<init>_eventListener1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Listener must not be null"
      valueType: "java.lang.String"
      uuid: "uuid24"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid28"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid26"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Listener is not of a supported type"
      valueType: "java.lang.String"
      uuid: "uuid27"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "jakarta.servlet.ServletContext"
      uuid: "register_servletContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "register_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.EventListener"
      uuid: "<init>_eventListener1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid29"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "registerWhenCaughtRuntimeExceptionThrowsIllegalStateException"
    constructorSignature: "<init>(java.util.EventListener) : void"
    modelFingerprint: "11BBA3D5132A442963B8E5946513C54A"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.RuntimeException"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "474977368ACBA89CC943A40473E6B3BC"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "description"
      modelFingerprint: "C71E36E8022063E9EC5AE91C0756623E"
      index: 2
      valueUuid: "register_string1"
    - type: "INPUT"
      name: "servletContext"
      modelFingerprint: "8566B3F9425377F11C29530BF52821CC"
      index: 3
      valueUuid: "register_servletContext1"
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "5E81CB0B664151B2731C644DE7408B63"
      index: 4
      valueUuid: "uuid31"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "<init>_eventListener1"
        - name: "message"
          valueUuid: "uuid30"
        signature: "notNull(EventListener,String): void"
        returnValueUuid: "<init>_void1"
        access: 9
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "2ED94C7267CB899830CE4C716FEAC553"
      index: 5
      valueUuid: "uuid34"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "isTrue"
        parameters:
        - name: "expression"
          valueUuid: "uuid32"
        - name: "message"
          valueUuid: "uuid33"
        signature: "isTrue(boolean,String): void"
        returnValueUuid: "<init>_void2"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "servletContext"
      modelFingerprint: "BF3A31929C5AD0EC61F2A364A498BD9B"
      index: 6
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "register_servletContext1"
      methodExercised:
        target: "servletContext"
        name: "addListener"
        parameters:
        - name: "arg0"
          valueUuid: "<init>_eventListener1"
        signature: "addListener(EventListener): void"
        returnValueUuid: "register_void1"
        access: 1025
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2D1523A63A0881B5C667CAB3BEFD915C"
      index: 7
      valueUuid: "register_illegalStateException1"
    uuid: "519405a4-5335-3ae2-b922-644631f3d678"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "CLASS_TYPE_COULD_NOT_BE_MOCKED_AND_NEEDS_TO_STRING"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.ServletListenerRegistrationBean"
        parameters:
        - name: "listener"
          value:
            sapientType: "MOCK"
            valueType: "java.util.EventListener"
            uuid: "<init>_eventListener1"
            fixed: false
            nameForMock: "<init>_eventListener1"
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.web.servlet.ServletListenerRegistrationBean"
      genericValueType: "java.util.EventListener"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "description1"
      valueType: "java.lang.String"
      uuid: "register_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "jakarta.servlet.ServletContext"
      uuid: "register_servletContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid31"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.EventListener"
      uuid: "<init>_eventListener1"
      fixed: false
      nameForMock: "<init>_eventListener1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Listener must not be null"
      valueType: "java.lang.String"
      uuid: "uuid30"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid34"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid32"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Listener is not of a supported type"
      valueType: "java.lang.String"
      uuid: "uuid33"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "jakarta.servlet.ServletContext"
      uuid: "register_servletContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "register_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.EventListener"
      uuid: "<init>_eventListener1"
      fixed: false
      nameForMock: "<init>_eventListener1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Failed to add listener '<init>_eventListener1' to servlet context"
            valueType: "java.lang.String"
            uuid: "register_string2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.RuntimeException"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.RuntimeException"
            uuid: "register_runtimeException1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.lang.IllegalStateException"
      uuid: "register_illegalStateException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "isSupportedType"
    signature: "isSupportedType(java.util.EventListener) : boolean"
    sourceCodeSignature: "boolean isSupportedType(EventListener listener)"
    instructionFingerprint: "E4FB159BA91C058D5D80E76ECEEB9699"
  paths:
  - pathId: "path1"
    testPathName: "isSupportedTypeWhenSUPPORTED_TYPESIsEmpty"
    modelFingerprint: "C6EC2677C87DE222A6BE4C9EAB418668"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "listener"
      modelFingerprint: "5467661B367EC9369178253359DA3459"
      index: 1
      valueUuid: "isSupportedType_eventListener1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3A21543F56248AC92654D6E439128AED"
      index: 2
      valueUuid: "uuid35"
    uuid: "f530f6f3-7f7b-3c10-9ae7-280573bf738f"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "MOCK"
      valueType: "java.util.EventListener"
      uuid: "isSupportedType_eventListener1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid35"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "getSupportedTypes"
    signature: "getSupportedTypes() : java.util.Set<java.lang.Class<?>>"
    sourceCodeSignature: "Set<Class<?>> getSupportedTypes()"
    instructionFingerprint: "5BFEE2B3D9BC5D73A234492A1E2BAB53"
  paths:
  - pathId: "path1"
    testPathName: "getSupportedTypesTest"
    modelFingerprint: "C635E093FF588F85D8040E858682621A"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B27C888F8BE9C79DA5CB35928B9FA04B"
      index: 1
      valueUuid: "<clinit>_set1"
    uuid: "3e294366-1d74-3819-9989-e14991f4b9b9"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "UNKNOWN_REASON"
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.Class<?>"
      uuid: "<clinit>_set1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
