---
modelFingerprint: "606B40CCE29297A6D060C83F652DCB10"
targetClass:
  fullClassName: "org.springframework.boot.context.properties.bind.validation.ValidationErrors"
methods:
- method:
    name: "getName"
    sourceCodeSignature: "ConfigurationPropertyName getName()"
    returnType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    instructionFingerprint: "06E2A263B53E34F1589FA3D256A7AF6F"
  paths:
  - pathId: "path1"
    testPathName: "getNameTest"
    constructorSignature: "<init>(org.springframework.boot.context.properties.source.ConfigurationPropertyName,java.util.Set<org.springframework.boot.context.properties.source.ConfigurationProperty>,java.util.List<org.springframework.validation.ObjectError>)\
      \ : void"
    modelFingerprint: "B56A519AD8FE983794CC962D94EE344D"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "getBoundProperties"
    sourceCodeSignature: "Set<ConfigurationProperty> getBoundProperties()"
    returnType: "java.util.Set"
    genericReturnType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
    instructionFingerprint: "CFED81DA944D430289C16D4662DADCA8"
  paths:
  - pathId: "path1"
    testPathName: "getBoundPropertiesTest"
    constructorSignature: "<init>(org.springframework.boot.context.properties.source.ConfigurationPropertyName,java.util.Set<org.springframework.boot.context.properties.source.ConfigurationProperty>,java.util.List<org.springframework.validation.ObjectError>)\
      \ : void"
    modelFingerprint: "39ABAC1CEC433432F34390697CB3D509"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "hasErrors"
    sourceCodeSignature: "boolean hasErrors()"
    returnType: "boolean"
    instructionFingerprint: "03A9FC525C47A1B92E49DB25DE96F7C1"
  paths:
  - pathId: "path1"
    testPathName: "hasErrorsWhenThisErrorsNotIsEmpty"
    constructorSignature: "<init>(org.springframework.boot.context.properties.source.ConfigurationPropertyName,java.util.Set<org.springframework.boot.context.properties.source.ConfigurationProperty>,java.util.List<org.springframework.validation.ObjectError>)\
      \ : void"
    modelFingerprint: "7590C5F7FE80EFF60A2601873E5A4241"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "0CD21AEE5F46ABEB3776150A933AD93C"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F400797EED7914A2CF42637724C47F90"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid7):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "3ED56F2B2094953E3F252A388F553F8F"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:boundProperties,message:uniqueUuid8):void2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "97215DDBFBFF89DFCA82BD6117DED934"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:errors,message:uniqueUuid9):void3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "boundProperty"
      modelFingerprint: "D7D2BF7D4932AA729976B3662733B7FD"
      valueUuid: "object2"
      methodExercised:
        expression: "getName():name2"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "96CCC4019394D922B18B23B15719CD07"
      valueUuid: "name"
      methodExercised:
        expression: "isParentOf(name:name2):boolean5"
    - type: "LOCAL_VARIABLE"
      name: "boundPropertyName"
      modelFingerprint: "6C73879346BE5D0763CA25DA32853CA7"
      valueUuid: "name2"
      methodExercised:
        expression: "getLastElement(form:Enum-org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form-UNIFORM):string"
    - type: "LOCAL_VARIABLE"
      name: "error"
      modelFingerprint: "77546006FCD64171B63BFC3DEDB9862B"
      valueUuid: "object"
      methodExercised:
        expression: "getField():field"
    - type: "STATIC"
      name: "Origin.class"
      modelFingerprint: "EE4633E8DED9D9D0D3B04A4DF6A4CCF6"
      valueUuid: "Origin.class"
      methodExercised:
        expression: "from(source:object2):origin"
        staticAccess: true
    - type: "STATIC"
      name: "OriginTrackedFieldError.class"
      modelFingerprint: "C3606A9AE2EF7E60CD897A8773A2E45E"
      valueUuid: "OriginTrackedFieldError.class"
      methodExercised:
        expression: "of(fieldError:object,origin:origin):fieldError"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8383DF6F1D02800B0E90FD4143032B37"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.validation.ValidationErrors"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
        - name: "boundProperties"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashSet"
              parameters: []
              values:
              - sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
                  parameters:
                  - name: "name"
                    value:
                      sapientType: "MOCK"
                      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                      uuid: "name2"
                  - name: "value"
                    value:
                      sapientType: "OBJECT"
                      content: !<new>
                        target: "java.lang.Object"
                        parameters: []
                      valueType: "java.lang.Object"
                      uuid: "object2-value"
                  - name: "origin"
                    value:
                      sapientType: "MOCK"
                      valueType: "org.springframework.boot.origin.Origin"
                      uuid: "object2-origin"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
                uuid: "object2"
                collectionUuid: "boundProperties"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            uuid: "boundProperties"
        - name: "errors"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.validation.FieldError"
                  parameters:
                  - name: "objectName"
                    value:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: "objectName1"
                      valueType: "java.lang.String"
                      uuid: "object-objectName"
                  - name: "field"
                    value:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: "B"
                      valueType: "java.lang.String"
                      uuid: "field"
                  - name: "defaultMessage"
                    value:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: "defaultMessage1"
                      valueType: "java.lang.String"
                      uuid: "object-defaultMessage"
                valueType: "org.springframework.validation.FieldError"
                uuid: "object"
                collectionUuid: "errors"
            valueType: "java.util.List"
            genericValueType: "org.springframework.validation.ObjectError"
            uuid: "errors"
      valueType: "org.springframework.boot.context.properties.bind.validation.ValidationErrors"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashSet"
        parameters: []
        values:
        - sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "name2"
            - name: "value"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "java.lang.Object"
                  parameters: []
                valueType: "java.lang.Object"
                uuid: "object2-value"
            - name: "origin"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "object2-origin"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "object2"
          collectionUuid: "boundProperties"
      valueType: "java.util.Set"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "boundProperties"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BoundProperties must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.validation.FieldError"
            parameters:
            - name: "objectName"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "objectName1"
                valueType: "java.lang.String"
                uuid: "object-objectName"
            - name: "field"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "B"
                valueType: "java.lang.String"
                uuid: "field"
            - name: "defaultMessage"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "defaultMessage1"
                valueType: "java.lang.String"
                uuid: "object-defaultMessage"
          valueType: "org.springframework.validation.FieldError"
          uuid: "object"
          collectionUuid: "errors"
      valueType: "java.util.List"
      genericValueType: "org.springframework.validation.ObjectError"
      uuid: "errors"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Errors must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid9"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name2"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "object2-value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "object2-origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "object2"
      collectionUuid: "boundProperties"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "ENUM"
      content: !<regular>
        value: "UNIFORM"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form"
      uuid: "Enum-org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form-UNIFORM"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.validation.FieldError"
        parameters:
        - name: "objectName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "objectName1"
            valueType: "java.lang.String"
            uuid: "object-objectName"
        - name: "field"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "B"
            valueType: "java.lang.String"
            uuid: "field"
        - name: "defaultMessage"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "defaultMessage1"
            valueType: "java.lang.String"
            uuid: "object-defaultMessage"
      valueType: "org.springframework.validation.FieldError"
      uuid: "object"
      collectionUuid: "errors"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "field"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "Origin.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name2"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "object2-value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "object2-origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "object2"
      collectionUuid: "boundProperties"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.validation.OriginTrackedFieldError"
      uuid: "OriginTrackedFieldError.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.validation.FieldError"
      uuid: "fieldError"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.validation.FieldError"
        parameters:
        - name: "objectName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "objectName1"
            valueType: "java.lang.String"
            uuid: "object-objectName"
        - name: "field"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "B"
            valueType: "java.lang.String"
            uuid: "field"
        - name: "defaultMessage"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "defaultMessage1"
            valueType: "java.lang.String"
            uuid: "object-defaultMessage"
      valueType: "org.springframework.validation.FieldError"
      uuid: "object"
      collectionUuid: "errors"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 118
      expression: "!this.errors.isEmpty()"
      range: "(118,10)-(118,31)"
      evaluatedAs: true
- method:
    name: "getAllErrors"
    sourceCodeSignature: "List<ObjectError> getAllErrors()"
    returnType: "java.util.List"
    genericReturnType: "org.springframework.validation.ObjectError"
    instructionFingerprint: "78B003DE2E94DB5BB61FB676C8D11179"
  paths:
  - pathId: "path1"
    testPathName: "getAllErrorsTest"
    constructorSignature: "<init>(org.springframework.boot.context.properties.source.ConfigurationPropertyName,java.util.Set<org.springframework.boot.context.properties.source.ConfigurationProperty>,java.util.List<org.springframework.validation.ObjectError>)\
      \ : void"
    modelFingerprint: "1BC7AB78A61CFB60114CADF9D1084B53"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "iterator"
    sourceCodeSignature: "Iterator<ObjectError> iterator()"
    returnType: "java.util.Iterator"
    genericReturnType: "org.springframework.validation.ObjectError"
    instructionFingerprint: "6D9F58CA4BCC36EAAE49A95967B6FFCB"
  paths:
  - pathId: "path1"
    testPathName: "iteratorTest"
    constructorSignature: "<init>(org.springframework.boot.context.properties.source.ConfigurationPropertyName,java.util.Set<org.springframework.boot.context.properties.source.ConfigurationProperty>,java.util.List<org.springframework.validation.ObjectError>)\
      \ : void"
    modelFingerprint: "33380460C78074F2323DA4E4691E2D7C"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "0CD21AEE5F46ABEB3776150A933AD93C"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F400797EED7914A2CF42637724C47F90"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid13):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "3ED56F2B2094953E3F252A388F553F8F"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:boundProperties,message:uniqueUuid14):void2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "97215DDBFBFF89DFCA82BD6117DED934"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:errors,message:uniqueUuid15):void3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "boundProperty"
      modelFingerprint: "D7D2BF7D4932AA729976B3662733B7FD"
      valueUuid: "object2"
      methodExercised:
        expression: "getName():name2"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "96CCC4019394D922B18B23B15719CD07"
      valueUuid: "name"
      methodExercised:
        expression: "isParentOf(name:name2):boolean5"
    - type: "LOCAL_VARIABLE"
      name: "boundPropertyName"
      modelFingerprint: "6C73879346BE5D0763CA25DA32853CA7"
      valueUuid: "name2"
      methodExercised:
        expression: "getLastElement(form:Enum-org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form-UNIFORM):string"
    - type: "LOCAL_VARIABLE"
      name: "error"
      modelFingerprint: "77546006FCD64171B63BFC3DEDB9862B"
      valueUuid: "object"
      methodExercised:
        expression: "getField():field"
    - type: "STATIC"
      name: "Origin.class"
      modelFingerprint: "EE4633E8DED9D9D0D3B04A4DF6A4CCF6"
      valueUuid: "Origin.class"
      methodExercised:
        expression: "from(source:object2):origin"
        staticAccess: true
    - type: "STATIC"
      name: "OriginTrackedFieldError.class"
      modelFingerprint: "C3606A9AE2EF7E60CD897A8773A2E45E"
      valueUuid: "OriginTrackedFieldError.class"
      methodExercised:
        expression: "of(fieldError:object,origin:origin):fieldError"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "926B486D752429288000A86B092764D3"
      valueUuid: "iterator3NotNull"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.validation.ValidationErrors"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
        - name: "boundProperties"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashSet"
              parameters: []
              values:
              - sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
                  parameters:
                  - name: "name"
                    value:
                      sapientType: "MOCK"
                      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                      uuid: "name2"
                  - name: "value"
                    value:
                      sapientType: "OBJECT"
                      content: !<new>
                        target: "java.lang.Object"
                        parameters: []
                      valueType: "java.lang.Object"
                      uuid: "object2-value"
                  - name: "origin"
                    value:
                      sapientType: "MOCK"
                      valueType: "org.springframework.boot.origin.Origin"
                      uuid: "object2-origin"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
                uuid: "object2"
                collectionUuid: "boundProperties"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            uuid: "boundProperties"
        - name: "errors"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.validation.FieldError"
                  parameters:
                  - name: "objectName"
                    value:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: "objectName1"
                      valueType: "java.lang.String"
                      uuid: "object-objectName"
                  - name: "field"
                    value:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: "B"
                      valueType: "java.lang.String"
                      uuid: "field"
                  - name: "defaultMessage"
                    value:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: "defaultMessage1"
                      valueType: "java.lang.String"
                      uuid: "object-defaultMessage"
                valueType: "org.springframework.validation.FieldError"
                uuid: "object"
                collectionUuid: "errors"
            valueType: "java.util.List"
            genericValueType: "org.springframework.validation.ObjectError"
            uuid: "errors"
      valueType: "org.springframework.boot.context.properties.bind.validation.ValidationErrors"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid13"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashSet"
        parameters: []
        values:
        - sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "name2"
            - name: "value"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "java.lang.Object"
                  parameters: []
                valueType: "java.lang.Object"
                uuid: "object2-value"
            - name: "origin"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "object2-origin"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "object2"
          collectionUuid: "boundProperties"
      valueType: "java.util.Set"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "boundProperties"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BoundProperties must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid14"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.validation.FieldError"
            parameters:
            - name: "objectName"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "objectName1"
                valueType: "java.lang.String"
                uuid: "object-objectName"
            - name: "field"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "B"
                valueType: "java.lang.String"
                uuid: "field"
            - name: "defaultMessage"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "defaultMessage1"
                valueType: "java.lang.String"
                uuid: "object-defaultMessage"
          valueType: "org.springframework.validation.FieldError"
          uuid: "object"
          collectionUuid: "errors"
      valueType: "java.util.List"
      genericValueType: "org.springframework.validation.ObjectError"
      uuid: "errors"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Errors must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid15"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name2"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "object2-value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "object2-origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "object2"
      collectionUuid: "boundProperties"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "ENUM"
      content: !<regular>
        value: "UNIFORM"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form"
      uuid: "Enum-org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form-UNIFORM"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.validation.FieldError"
        parameters:
        - name: "objectName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "objectName1"
            valueType: "java.lang.String"
            uuid: "object-objectName"
        - name: "field"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "B"
            valueType: "java.lang.String"
            uuid: "field"
        - name: "defaultMessage"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "defaultMessage1"
            valueType: "java.lang.String"
            uuid: "object-defaultMessage"
      valueType: "org.springframework.validation.FieldError"
      uuid: "object"
      collectionUuid: "errors"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "field"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "Origin.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name2"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "object2-value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "object2-origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "object2"
      collectionUuid: "boundProperties"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.validation.OriginTrackedFieldError"
      uuid: "OriginTrackedFieldError.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.validation.FieldError"
      uuid: "fieldError"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.validation.FieldError"
        parameters:
        - name: "objectName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "objectName1"
            valueType: "java.lang.String"
            uuid: "object-objectName"
        - name: "field"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "B"
            valueType: "java.lang.String"
            uuid: "field"
        - name: "defaultMessage"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "defaultMessage1"
            valueType: "java.lang.String"
            uuid: "object-defaultMessage"
      valueType: "org.springframework.validation.FieldError"
      uuid: "object"
      collectionUuid: "errors"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin"
    - sapientType: "NOT_NULL"
      valueType: "java.util.Iterator"
      genericValueType: "org.springframework.validation.ObjectError"
      uuid: "iterator3NotNull"
      fixed: true
      collectionUuid: "list"
