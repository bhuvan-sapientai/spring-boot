---
modelFingerprint: "59121075D21AEAD5915859D86F5D4916"
targetClass:
  fullClassName: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
methods:
- method:
    name: "onStart"
    sourceCodeSignature: "<T> Bindable<T> onStart(ConfigurationPropertyName name,\
      \ Bindable<T> target, BindContext context)"
    returnType: "org.springframework.boot.context.properties.bind.Bindable"
    parameters:
    - name: "name"
      type: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    - name: "target"
      type: "org.springframework.boot.context.properties.bind.Bindable"
    - name: "context"
      type: "org.springframework.boot.context.properties.bind.BindContext"
    instructionFingerprint: "853F9F6D910618B745FEF904F0E64FBA"
  paths:
  - pathId: "path1"
    testPathName: "onStartTest"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindHandler,org.springframework.validation.Validator[])\
      \ : void"
    modelFingerprint: "2F845F15AB107AAB4919FDF928296FB1"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "01580285664A316B96F4DAEB02C0B3E1"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "70D141791B7483A004E98507045D1A4D"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "657A0D5935396A840B697C7476D3E736"
      valueUuid: "context"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "8E1CCC542A6F671530DE4CBFB6CC7B6B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:parent,message:uniqueUuid1):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "1EF1A5E420BDD94008D96404DDBCFB0C"
      valueUuid: "target1"
      methodExercised:
        expression: "getType():type"
    - type: "FIELD"
      name: "parent"
      modelFingerprint: "8CAE0EEC8F16484E38E5A3C3E7D713DC"
      valueUuid: "parent"
      methodExercised:
        expression: "onStart(name:name,target:target1,context:context):bindable"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "11B5E8D4395677EA88062346247F39C3"
      valueUuid: "bindable"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
        parameters:
        - name: "parent"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "parent"
        - name: "validators"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.validation.Validator[]"
            uuid: "validators"
      valueType: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "parent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Parent must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "parent"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable"
- method:
    name: "onSuccess"
    sourceCodeSignature: "Object onSuccess(ConfigurationPropertyName name, Bindable<?>\
      \ target, BindContext context, Object result)"
    returnType: "java.lang.Object"
    parameters:
    - name: "name"
      type: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    - name: "target"
      type: "org.springframework.boot.context.properties.bind.Bindable"
    - name: "context"
      type: "org.springframework.boot.context.properties.bind.BindContext"
    - name: "result"
      type: "java.lang.Object"
    instructionFingerprint: "EDA77523E3EA51D49AAF5363093637C3"
  paths:
  - pathId: "path1"
    testPathName: "onSuccessWhenContextGetConfigurationPropertyIsNotNull"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindHandler,org.springframework.validation.Validator[])\
      \ : void"
    modelFingerprint: "98895002AD9042C44E28A7FBBF93A80C"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "01580285664A316B96F4DAEB02C0B3E1"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "3340664D785032C795BAABD64A310117"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "4751B65555804AA12E800A372C9B566E"
      valueUuid: "context"
    - type: "INPUT"
      name: "result"
      modelFingerprint: "31A650D2671F03F3038B5B482F360664"
      valueUuid: "result1"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "8E1CCC542A6F671530DE4CBFB6CC7B6B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:parent,message:uniqueUuid2):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "5F4DD773545E6A98E169AC1C2A144978"
      valueUuid: "context"
      methodExercised:
        expression: "getConfigurationProperty():configurationProperty"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "5F4DD773545E6A98E169AC1C2A144978"
      valueUuid: "context"
      methodExercised:
        expression: "getConfigurationProperty():configurationProperty2"
    - type: "FIELD"
      name: "parent"
      modelFingerprint: "A024543DAB89922A514F83A42505F3A3"
      valueUuid: "parent"
      methodExercised:
        expression: "onSuccess(name:name,target:target1,context:context,result:result1):object2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
        parameters:
        - name: "parent"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "parent"
        - name: "validators"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.validation.Validator[]"
            uuid: "validators"
      valueType: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "result1"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "parent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Parent must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "parent"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "result1"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object2"
    branches:
    - lineNumber: 77
      expression: "context.getConfigurationProperty() != null"
      range: "(77,7)-(77,48)"
      evaluatedAs: true
- method:
    name: "onFailure"
    sourceCodeSignature: "Object onFailure(ConfigurationPropertyName name, Bindable<?>\
      \ target, BindContext context, Exception error)"
    returnType: "java.lang.Object"
    throwsExceptions:
    - "java.lang.Exception"
    parameters:
    - name: "name"
      type: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    - name: "target"
      type: "org.springframework.boot.context.properties.bind.Bindable"
    - name: "context"
      type: "org.springframework.boot.context.properties.bind.BindContext"
    - name: "error"
      type: "java.lang.Exception"
    instructionFingerprint: "C5DB0DF2D50C55D0AFE04374D9038106"
  paths:
  - pathId: "path8"
    testPathName: "onFailureWhenTargetGetValueIsNullAndValidationTargetIsNullAndContextGetDepthNotEquals0"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindHandler,org.springframework.validation.Validator[])\
      \ : void"
    modelFingerprint: "293228925114F8062CB5789DB1663C4B"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "01580285664A316B96F4DAEB02C0B3E1"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F1407DA2B6198C4F666DAC57AA87F49E"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "4751B65555804AA12E800A372C9B566E"
      valueUuid: "context"
    - type: "INPUT"
      name: "error"
      modelFingerprint: "35835E2BFCD9D5A7221AF881AC276EE2"
      valueUuid: "error"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "8E1CCC542A6F671530DE4CBFB6CC7B6B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:parent,message:uniqueUuid3):void"
        staticAccess: true
    - type: "FIELD"
      name: "parent"
      modelFingerprint: "3215F61F49FE835A73C298F7C439FEE3"
      valueUuid: "parent"
      methodExercised:
        expression: "onFailure(name:name,target:target1,context:context,error:error):object"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "48706751B2DFAA36272D0E160F6DAA86"
      valueUuid: "context"
      methodExercised:
        expression: "getDepth():int1"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F47E8DA923D7CC4B632C43231BBA8EAF"
      valueUuid: "target1"
      methodExercised:
        expression: "getValue():value"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "9183F765B751C1ACB05205477E2907CD"
      valueUuid: "target1"
      methodExercised:
        expression: "getBoxedType():boxedType"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "839245556C80DD2528C73D5D2B32BC65"
      valueUuid: "boxedType"
      methodExercised:
        expression: "resolve():class"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "8557EB18EA3301F26DCDD1B615915394"
      valueUuid: "context"
      methodExercised:
        expression: "getDepth():int2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B5832848421B6892B8D06BE61ADCD847"
      valueUuid: "object"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
        parameters:
        - name: "parent"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "parent"
        - name: "validators"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.validation.Validator[]"
            uuid: "validators"
      valueType: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Exception"
        parameters: []
      valueType: "java.lang.Exception"
      uuid: "error"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "parent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Parent must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "parent"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Exception"
        parameters: []
      valueType: "java.lang.Exception"
      uuid: "error"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "NULL"
      valueType: "java.util.function.Supplier"
      uuid: "value"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "boxedType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "boxedType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "BASIC"
      content: !<regular>
        value: -1
      valueType: "int"
      uuid: "int2"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object"
      fixed: true
    branches:
    - lineNumber: 87
      expression: "result != null"
      range: "(87,7)-(87,20)"
      evaluatedAs: false
    - lineNumber: 110
      expression: "this.exception == null"
      range: "(110,7)-(110,28)"
      evaluatedAs: true
      internalMethodName: "validate"
    - lineNumber: 123
      expression: "result != null"
      range: "(123,7)-(123,20)"
      evaluatedAs: false
      internalMethodName: "getValidationTarget"
    - lineNumber: 126
      expression: "context.getDepth() == 0"
      range: "(126,7)-(126,29)"
      evaluatedAs: true
      internalMethodName: "getValidationTarget"
    - lineNumber: 126
      expression: "target.getValue() != null"
      range: "(126,34)-(126,58)"
      evaluatedAs: false
      internalMethodName: "getValidationTarget"
    - lineNumber: 113
      expression: "validationTarget != null"
      range: "(113,8)-(113,31)"
      evaluatedAs: false
      internalMethodName: "validate"
    - lineNumber: 117
      expression: "context.getDepth() == 0"
      range: "(117,7)-(117,29)"
      evaluatedAs: false
      internalMethodName: "validate"
  - pathId: "path5"
    testPathName: "onFailureWhenThisExceptionIsNull"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindHandler,org.springframework.validation.Validator[])\
      \ : void"
    modelFingerprint: "D318A57C62ECEB5D6C7278D11CBD1ACD"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D65134E59A4E7A9E727495B6A69F7589"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F1407DA2B6198C4F666DAC57AA87F49E"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "4751B65555804AA12E800A372C9B566E"
      valueUuid: "context"
    - type: "INPUT"
      name: "error"
      modelFingerprint: "35835E2BFCD9D5A7221AF881AC276EE2"
      valueUuid: "error"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "8E1CCC542A6F671530DE4CBFB6CC7B6B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:parent,message:uniqueUuid4):void"
        staticAccess: true
    - type: "FIELD"
      name: "parent"
      modelFingerprint: "3215F61F49FE835A73C298F7C439FEE3"
      valueUuid: "parent"
      methodExercised:
        expression: "onFailure(name:name,target:target1,context:context,error:error):object"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "48706751B2DFAA36272D0E160F6DAA86"
      valueUuid: "context"
      methodExercised:
        expression: "getDepth():int1"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "5C1D2E33D8EE42EE11D3247FB6D5AFFB"
      valueUuid: "target1"
      methodExercised:
        expression: "getValue():value"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "5C1D2E33D8EE42EE11D3247FB6D5AFFB"
      valueUuid: "target1"
      methodExercised:
        expression: "getValue():value"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "9183F765B751C1ACB05205477E2907CD"
      valueUuid: "target1"
      methodExercised:
        expression: "getBoxedType():boxedType"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "839245556C80DD2528C73D5D2B32BC65"
      valueUuid: "boxedType"
      methodExercised:
        expression: "resolve():class"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "48706751B2DFAA36272D0E160F6DAA86"
      valueUuid: "context"
      methodExercised:
        expression: "getDepth():int4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B5832848421B6892B8D06BE61ADCD847"
      valueUuid: "object"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.Supplier.get() : java.lang.Object"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
        parameters:
        - name: "parent"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "parent"
        - name: "validators"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.validation.Validator[]"
            uuid: "validators"
      valueType: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Exception"
        parameters: []
      valueType: "java.lang.Exception"
      uuid: "error"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "parent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Parent must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "parent"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Exception"
        parameters: []
      valueType: "java.lang.Exception"
      uuid: "error"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "value"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "value"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "boxedType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "boxedType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int4"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object"
      fixed: true
    branches:
    - lineNumber: 87
      expression: "result != null"
      range: "(87,7)-(87,20)"
      evaluatedAs: false
    - lineNumber: 110
      expression: "this.exception == null"
      range: "(110,7)-(110,28)"
      evaluatedAs: true
      internalMethodName: "validate"
    - lineNumber: 123
      expression: "result != null"
      range: "(123,7)-(123,20)"
      evaluatedAs: false
      internalMethodName: "getValidationTarget"
    - lineNumber: 126
      expression: "context.getDepth() == 0"
      range: "(126,7)-(126,29)"
      evaluatedAs: true
      internalMethodName: "getValidationTarget"
    - lineNumber: 126
      expression: "target.getValue() != null"
      range: "(126,34)-(126,58)"
      evaluatedAs: true
      internalMethodName: "getValidationTarget"
    - lineNumber: 113
      expression: "validationTarget != null"
      range: "(113,8)-(113,31)"
      evaluatedAs: true
      internalMethodName: "validate"
    - lineNumber: 134
      expression: "for-each(this.validators)"
      range: "(134,30)-(134,44)"
      evaluatedAs: false
      internalMethodName: "validateAndPush"
    - lineNumber: 140
      expression: "result != null"
      range: "(140,7)-(140,20)"
      evaluatedAs: false
      internalMethodName: "validateAndPush"
    - lineNumber: 117
      expression: "context.getDepth() == 0"
      range: "(117,7)-(117,29)"
      evaluatedAs: true
      internalMethodName: "validate"
    - lineNumber: 117
      expression: "this.exception != null"
      range: "(117,34)-(117,55)"
      evaluatedAs: false
      internalMethodName: "validate"
  - pathId: "path1"
    testPathName: "onFailureWhenThisExceptionIsNotNullThrowsBindValidationException"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindHandler,org.springframework.validation.Validator[])\
      \ : void"
    modelFingerprint: "A3CE71507BB63F42BF99DC86AEB2648E"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "46F42551117D83C70849631F90FF4CAA"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F1407DA2B6198C4F666DAC57AA87F49E"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "4751B65555804AA12E800A372C9B566E"
      valueUuid: "context"
    - type: "INPUT"
      name: "error"
      modelFingerprint: "35835E2BFCD9D5A7221AF881AC276EE2"
      valueUuid: "error"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "8E1CCC542A6F671530DE4CBFB6CC7B6B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:parent,message:uniqueUuid5):void"
        staticAccess: true
    - type: "FIELD"
      name: "parent"
      modelFingerprint: "E6C370A3BB6F83A16F55D4E73DCB33C7"
      valueUuid: "parent"
      methodExercised:
        expression: "onFailure(name:name,target:target1,context:context,error:error):object"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "9183F765B751C1ACB05205477E2907CD"
      valueUuid: "target1"
      methodExercised:
        expression: "getBoxedType():boxedType"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "839245556C80DD2528C73D5D2B32BC65"
      valueUuid: "boxedType"
      methodExercised:
        expression: "resolve():class"
    - type: "LOCAL_VARIABLE"
      name: "validator"
      modelFingerprint: "FD7C8FB871166DBF8734C4340DDC3A12"
      valueUuid: "validator"
      methodExercised:
        expression: "supports(clazz:class):boolean1"
    - type: "LOCAL_VARIABLE"
      name: "validator"
      modelFingerprint: "7B165E93464FCF02362D3A3B824375C2"
      valueUuid: "validator"
      methodExercised:
        expression: "validate(target:object,errors:validationBindHandler.ValidationResult):void5"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "48706751B2DFAA36272D0E160F6DAA86"
      valueUuid: "context"
      methodExercised:
        expression: "getDepth():int4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "0D56099F51013D2924735C98254806C6"
      valueUuid: "bindValidationException"
    disabled: false
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
        parameters:
        - name: "parent"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "parent"
        - name: "validators"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "MOCK"
                  valueType: "org.springframework.validation.Validator"
                  uuid: "validator"
            valueType: "org.springframework.validation.Validator[]"
            uuid: "validators"
      valueType: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Exception"
        parameters: []
      valueType: "java.lang.Exception"
      uuid: "error"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "parent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Parent must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "parent"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Exception"
        parameters: []
      valueType: "java.lang.Exception"
      uuid: "error"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "boxedType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "boxedType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.validation.Validator"
      uuid: "validator"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.validation.Validator"
      uuid: "validator"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler$ValidationResult"
      uuid: "validationBindHandler.ValidationResult"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int4"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.validation.BindValidationException"
        parameters:
        - name: "validationErrors"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.validation.ValidationErrors"
            uuid: "validationErrors"
      valueType: "org.springframework.boot.context.properties.bind.validation.BindValidationException"
      uuid: "bindValidationException"
      fixed: true
    branches:
    - lineNumber: 87
      expression: "result != null"
      range: "(87,7)-(87,20)"
      evaluatedAs: true
    - lineNumber: 110
      expression: "this.exception == null"
      range: "(110,7)-(110,28)"
      evaluatedAs: true
      internalMethodName: "validate"
    - lineNumber: 123
      expression: "result != null"
      range: "(123,7)-(123,20)"
      evaluatedAs: true
      internalMethodName: "getValidationTarget"
    - lineNumber: 113
      expression: "validationTarget != null"
      range: "(113,8)-(113,31)"
      evaluatedAs: true
      internalMethodName: "validate"
    - lineNumber: 134
      expression: "for-each(this.validators)"
      range: "(134,30)-(134,44)"
      evaluatedAs: true
      internalMethodName: "validateAndPush"
    - lineNumber: 135
      expression: "validator.supports(type)"
      range: "(135,8)-(135,31)"
      evaluatedAs: true
      internalMethodName: "validateAndPush"
    - lineNumber: 136
      expression: "result != null"
      range: "(136,15)-(136,28)"
      evaluatedAs: false
      internalMethodName: "validateAndPush"
    - lineNumber: 140
      expression: "result != null"
      range: "(140,7)-(140,20)"
      evaluatedAs: true
      internalMethodName: "validateAndPush"
    - lineNumber: 140
      expression: "result.hasErrors()"
      range: "(140,25)-(140,42)"
      evaluatedAs: true
      internalMethodName: "validateAndPush"
    - lineNumber: 117
      expression: "context.getDepth() == 0"
      range: "(117,7)-(117,29)"
      evaluatedAs: true
      internalMethodName: "validate"
    - lineNumber: 117
      expression: "this.exception != null"
      range: "(117,34)-(117,55)"
      evaluatedAs: true
      internalMethodName: "validate"
- method:
    name: "onFinish"
    sourceCodeSignature: "void onFinish(ConfigurationPropertyName name, Bindable<?>\
      \ target, BindContext context, Object result)"
    returnType: "void"
    throwsExceptions:
    - "java.lang.Exception"
    parameters:
    - name: "name"
      type: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    - name: "target"
      type: "org.springframework.boot.context.properties.bind.Bindable"
    - name: "context"
      type: "org.springframework.boot.context.properties.bind.BindContext"
    - name: "result"
      type: "java.lang.Object"
    instructionFingerprint: "36F49A200C21CA0E09B9803CD43840DC"
  paths:
  - pathId: "path8"
    testPathName: "onFinishWhenTargetGetValueIsNullAndValidationTargetIsNullAndContextGetDepthNotEquals0"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindHandler,org.springframework.validation.Validator[])\
      \ : void"
    modelFingerprint: "72DFB265034DE55897EFCFBAC6051A39"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "01580285664A316B96F4DAEB02C0B3E1"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F1407DA2B6198C4F666DAC57AA87F49E"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "4751B65555804AA12E800A372C9B566E"
      valueUuid: "context"
    - type: "INPUT"
      name: "result"
      modelFingerprint: "BCE09E88E8410EDF19C9C535D65BAD5E"
      valueUuid: "result1"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "8E1CCC542A6F671530DE4CBFB6CC7B6B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:parent,message:uniqueUuid6):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "48706751B2DFAA36272D0E160F6DAA86"
      valueUuid: "context"
      methodExercised:
        expression: "getDepth():int1"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F47E8DA923D7CC4B632C43231BBA8EAF"
      valueUuid: "target1"
      methodExercised:
        expression: "getValue():value"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "9183F765B751C1ACB05205477E2907CD"
      valueUuid: "target1"
      methodExercised:
        expression: "getBoxedType():boxedType"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "839245556C80DD2528C73D5D2B32BC65"
      valueUuid: "boxedType"
      methodExercised:
        expression: "resolve():class"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "8557EB18EA3301F26DCDD1B615915394"
      valueUuid: "context"
      methodExercised:
        expression: "getDepth():int2"
    - type: "FIELD"
      name: "parent"
      modelFingerprint: "5D5CA46CDCC2E8DE8C4BE80BA90B19EF"
      valueUuid: "parent"
      methodExercised:
        expression: "onFinish(name:name,target:target1,context:context,result:result1):void2"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
        parameters:
        - name: "parent"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "parent"
        - name: "validators"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.validation.Validator[]"
            uuid: "validators"
      valueType: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "result1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "parent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Parent must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "NULL"
      valueType: "java.util.function.Supplier"
      uuid: "value"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "boxedType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "boxedType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "BASIC"
      content: !<regular>
        value: -1
      valueType: "int"
      uuid: "int2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "parent"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "result1"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 110
      expression: "this.exception == null"
      range: "(110,7)-(110,28)"
      evaluatedAs: true
      internalMethodName: "validate"
    - lineNumber: 123
      expression: "result != null"
      range: "(123,7)-(123,20)"
      evaluatedAs: false
      internalMethodName: "getValidationTarget"
    - lineNumber: 126
      expression: "context.getDepth() == 0"
      range: "(126,7)-(126,29)"
      evaluatedAs: true
      internalMethodName: "getValidationTarget"
    - lineNumber: 126
      expression: "target.getValue() != null"
      range: "(126,34)-(126,58)"
      evaluatedAs: false
      internalMethodName: "getValidationTarget"
    - lineNumber: 113
      expression: "validationTarget != null"
      range: "(113,8)-(113,31)"
      evaluatedAs: false
      internalMethodName: "validate"
    - lineNumber: 117
      expression: "context.getDepth() == 0"
      range: "(117,7)-(117,29)"
      evaluatedAs: false
      internalMethodName: "validate"
  - pathId: "path2"
    testPathName: "onFinishWhenResultHasErrorsAndContextGetDepthNotEquals0"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindHandler,org.springframework.validation.Validator[])\
      \ : void"
    modelFingerprint: "D6DC22450C499F9D205EC7B89846739A"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "46F42551117D83C70849631F90FF4CAA"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F1407DA2B6198C4F666DAC57AA87F49E"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "4751B65555804AA12E800A372C9B566E"
      valueUuid: "context"
    - type: "INPUT"
      name: "result"
      modelFingerprint: "31A650D2671F03F3038B5B482F360664"
      valueUuid: "result1"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "8E1CCC542A6F671530DE4CBFB6CC7B6B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:parent,message:uniqueUuid7):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "9183F765B751C1ACB05205477E2907CD"
      valueUuid: "target1"
      methodExercised:
        expression: "getBoxedType():boxedType"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "839245556C80DD2528C73D5D2B32BC65"
      valueUuid: "boxedType"
      methodExercised:
        expression: "resolve():class"
    - type: "LOCAL_VARIABLE"
      name: "validator"
      modelFingerprint: "FD7C8FB871166DBF8734C4340DDC3A12"
      valueUuid: "validator"
      methodExercised:
        expression: "supports(clazz:class):boolean1"
    - type: "LOCAL_VARIABLE"
      name: "validator"
      modelFingerprint: "2EF5B8B4F83EACFA0980A9A33CC601C8"
      valueUuid: "validator"
      methodExercised:
        expression: "validate(target:result1,errors:validationBindHandler.ValidationResult):void2"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "0F523CA01BE79A8D812AD7A81C7A0E64"
      valueUuid: "context"
      methodExercised:
        expression: "getDepth():int4"
    - type: "FIELD"
      name: "parent"
      modelFingerprint: "FF4ECD12926EF764C5D74AB0F9B00793"
      valueUuid: "parent"
      methodExercised:
        expression: "onFinish(name:name,target:target1,context:context,result:result1):void3"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
        parameters:
        - name: "parent"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "parent"
        - name: "validators"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "MOCK"
                  valueType: "org.springframework.validation.Validator"
                  uuid: "validator"
            valueType: "org.springframework.validation.Validator[]"
            uuid: "validators"
      valueType: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "result1"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "parent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Parent must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "boxedType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "boxedType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.validation.Validator"
      uuid: "validator"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.validation.Validator"
      uuid: "validator"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "result1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler$ValidationResult"
      uuid: "validationBindHandler.ValidationResult"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "parent"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "result1"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 110
      expression: "this.exception == null"
      range: "(110,7)-(110,28)"
      evaluatedAs: true
      internalMethodName: "validate"
    - lineNumber: 123
      expression: "result != null"
      range: "(123,7)-(123,20)"
      evaluatedAs: true
      internalMethodName: "getValidationTarget"
    - lineNumber: 113
      expression: "validationTarget != null"
      range: "(113,8)-(113,31)"
      evaluatedAs: true
      internalMethodName: "validate"
    - lineNumber: 134
      expression: "for-each(this.validators)"
      range: "(134,30)-(134,44)"
      evaluatedAs: true
      internalMethodName: "validateAndPush"
    - lineNumber: 135
      expression: "validator.supports(type)"
      range: "(135,8)-(135,31)"
      evaluatedAs: true
      internalMethodName: "validateAndPush"
    - lineNumber: 136
      expression: "result != null"
      range: "(136,15)-(136,28)"
      evaluatedAs: false
      internalMethodName: "validateAndPush"
    - lineNumber: 140
      expression: "result != null"
      range: "(140,7)-(140,20)"
      evaluatedAs: true
      internalMethodName: "validateAndPush"
    - lineNumber: 140
      expression: "result.hasErrors()"
      range: "(140,25)-(140,42)"
      evaluatedAs: true
      internalMethodName: "validateAndPush"
    - lineNumber: 117
      expression: "context.getDepth() == 0"
      range: "(117,7)-(117,29)"
      evaluatedAs: false
      internalMethodName: "validate"
  - pathId: "path5"
    testPathName: "onFinishWhenThisExceptionIsNull"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindHandler,org.springframework.validation.Validator[])\
      \ : void"
    modelFingerprint: "9BC0A27A59E9773555506D6EB0FF5C72"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D65134E59A4E7A9E727495B6A69F7589"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F1407DA2B6198C4F666DAC57AA87F49E"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "4751B65555804AA12E800A372C9B566E"
      valueUuid: "context"
    - type: "INPUT"
      name: "result"
      modelFingerprint: "BCE09E88E8410EDF19C9C535D65BAD5E"
      valueUuid: "result1"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "8E1CCC542A6F671530DE4CBFB6CC7B6B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:parent,message:uniqueUuid8):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "48706751B2DFAA36272D0E160F6DAA86"
      valueUuid: "context"
      methodExercised:
        expression: "getDepth():int1"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "5C1D2E33D8EE42EE11D3247FB6D5AFFB"
      valueUuid: "target1"
      methodExercised:
        expression: "getValue():value"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "5C1D2E33D8EE42EE11D3247FB6D5AFFB"
      valueUuid: "target1"
      methodExercised:
        expression: "getValue():value"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "9183F765B751C1ACB05205477E2907CD"
      valueUuid: "target1"
      methodExercised:
        expression: "getBoxedType():boxedType"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "839245556C80DD2528C73D5D2B32BC65"
      valueUuid: "boxedType"
      methodExercised:
        expression: "resolve():class"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "48706751B2DFAA36272D0E160F6DAA86"
      valueUuid: "context"
      methodExercised:
        expression: "getDepth():int4"
    - type: "FIELD"
      name: "parent"
      modelFingerprint: "5D5CA46CDCC2E8DE8C4BE80BA90B19EF"
      valueUuid: "parent"
      methodExercised:
        expression: "onFinish(name:name,target:target1,context:context,result:result1):void2"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.Supplier.get() : java.lang.Object"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
        parameters:
        - name: "parent"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "parent"
        - name: "validators"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.validation.Validator[]"
            uuid: "validators"
      valueType: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "result1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "parent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Parent must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "value"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "value"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "boxedType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "boxedType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "parent"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "result1"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 110
      expression: "this.exception == null"
      range: "(110,7)-(110,28)"
      evaluatedAs: true
      internalMethodName: "validate"
    - lineNumber: 123
      expression: "result != null"
      range: "(123,7)-(123,20)"
      evaluatedAs: false
      internalMethodName: "getValidationTarget"
    - lineNumber: 126
      expression: "context.getDepth() == 0"
      range: "(126,7)-(126,29)"
      evaluatedAs: true
      internalMethodName: "getValidationTarget"
    - lineNumber: 126
      expression: "target.getValue() != null"
      range: "(126,34)-(126,58)"
      evaluatedAs: true
      internalMethodName: "getValidationTarget"
    - lineNumber: 113
      expression: "validationTarget != null"
      range: "(113,8)-(113,31)"
      evaluatedAs: true
      internalMethodName: "validate"
    - lineNumber: 134
      expression: "for-each(this.validators)"
      range: "(134,30)-(134,44)"
      evaluatedAs: false
      internalMethodName: "validateAndPush"
    - lineNumber: 140
      expression: "result != null"
      range: "(140,7)-(140,20)"
      evaluatedAs: false
      internalMethodName: "validateAndPush"
    - lineNumber: 117
      expression: "context.getDepth() == 0"
      range: "(117,7)-(117,29)"
      evaluatedAs: true
      internalMethodName: "validate"
    - lineNumber: 117
      expression: "this.exception != null"
      range: "(117,34)-(117,55)"
      evaluatedAs: false
      internalMethodName: "validate"
  - pathId: "path1"
    testPathName: "onFinishWhenThisExceptionIsNotNullThrowsBindValidationException"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindHandler,org.springframework.validation.Validator[])\
      \ : void"
    modelFingerprint: "57EB77C1643686EB5E487C3989814E8A"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "9A03E30B53268EC4821322683507AF83"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F1407DA2B6198C4F666DAC57AA87F49E"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "4751B65555804AA12E800A372C9B566E"
      valueUuid: "context"
    - type: "INPUT"
      name: "result"
      modelFingerprint: "31A650D2671F03F3038B5B482F360664"
      valueUuid: "result1"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "45DED21A09A1E07857992D008B5983B1"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:parent,message:uniqueUuid9):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "9183F765B751C1ACB05205477E2907CD"
      valueUuid: "target1"
      methodExercised:
        expression: "getBoxedType():boxedType"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "839245556C80DD2528C73D5D2B32BC65"
      valueUuid: "boxedType"
      methodExercised:
        expression: "resolve():class"
    - type: "LOCAL_VARIABLE"
      name: "validator"
      modelFingerprint: "FD7C8FB871166DBF8734C4340DDC3A12"
      valueUuid: "validator"
      methodExercised:
        expression: "supports(clazz:class):boolean1"
    - type: "LOCAL_VARIABLE"
      name: "validator"
      modelFingerprint: "2EF5B8B4F83EACFA0980A9A33CC601C8"
      valueUuid: "validator"
      methodExercised:
        expression: "validate(target:result1,errors:validationBindHandler.ValidationResult):void2"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "48706751B2DFAA36272D0E160F6DAA86"
      valueUuid: "context"
      methodExercised:
        expression: "getDepth():int4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "0D56099F51013D2924735C98254806C6"
      valueUuid: "bindValidationException"
    disabled: false
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
        parameters:
        - name: "parent"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "parent"
        - name: "validators"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "MOCK"
                  valueType: "org.springframework.validation.Validator"
                  uuid: "validator"
            valueType: "org.springframework.validation.Validator[]"
            uuid: "validators"
      valueType: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "result1"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "parent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Parent must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid9"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "boxedType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "boxedType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.validation.Validator"
      uuid: "validator"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.validation.Validator"
      uuid: "validator"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "result1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler$ValidationResult"
      uuid: "validationBindHandler.ValidationResult"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int4"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.validation.BindValidationException"
        parameters:
        - name: "validationErrors"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.validation.ValidationErrors"
            uuid: "validationErrors"
      valueType: "org.springframework.boot.context.properties.bind.validation.BindValidationException"
      uuid: "bindValidationException"
      fixed: true
    branches:
    - lineNumber: 110
      expression: "this.exception == null"
      range: "(110,7)-(110,28)"
      evaluatedAs: true
      internalMethodName: "validate"
    - lineNumber: 123
      expression: "result != null"
      range: "(123,7)-(123,20)"
      evaluatedAs: true
      internalMethodName: "getValidationTarget"
    - lineNumber: 113
      expression: "validationTarget != null"
      range: "(113,8)-(113,31)"
      evaluatedAs: true
      internalMethodName: "validate"
    - lineNumber: 134
      expression: "for-each(this.validators)"
      range: "(134,30)-(134,44)"
      evaluatedAs: true
      internalMethodName: "validateAndPush"
    - lineNumber: 135
      expression: "validator.supports(type)"
      range: "(135,8)-(135,31)"
      evaluatedAs: true
      internalMethodName: "validateAndPush"
    - lineNumber: 136
      expression: "result != null"
      range: "(136,15)-(136,28)"
      evaluatedAs: false
      internalMethodName: "validateAndPush"
    - lineNumber: 140
      expression: "result != null"
      range: "(140,7)-(140,20)"
      evaluatedAs: true
      internalMethodName: "validateAndPush"
    - lineNumber: 140
      expression: "result.hasErrors()"
      range: "(140,25)-(140,42)"
      evaluatedAs: true
      internalMethodName: "validateAndPush"
    - lineNumber: 117
      expression: "context.getDepth() == 0"
      range: "(117,7)-(117,29)"
      evaluatedAs: true
      internalMethodName: "validate"
    - lineNumber: 117
      expression: "this.exception != null"
      range: "(117,34)-(117,55)"
      evaluatedAs: true
      internalMethodName: "validate"
