---
modelFingerprint: "E1AF0A366ABA79E87D9DE9A3E431C416"
targetClass:
  fullClassName: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
methods:
- method:
    name: "setBuilderCustomizers"
    sourceCodeSignature: "void setBuilderCustomizers(Collection<? extends UndertowBuilderCustomizer>\
      \ customizers)"
    returnType: "void"
    parameters:
    - name: "customizers"
      type: "java.util.Collection"
    instructionFingerprint: "9CAF32C9D8C6A07F7D93E14928C2CC6C"
  paths:
  - pathId: "path1"
    testPathName: "setBuilderCustomizersTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "DB017E202CC256098C7B34B2C870A7E5"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7C52F4C60272E21E0DAF74FEB8CBA6AB"
      valueUuid: "target"
    - type: "INPUT"
      name: "customizers"
      modelFingerprint: "D6CDE84A8422B25B88E32F02CA69A859"
      valueUuid: "customizers"
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "5F8EAD4E3D4C6FDB5F8054DFB515C1FF"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "setBuilderCustomizers(customizers:customizers):void"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.delegate.setBuilderCustomizers(customizers);"
      lineNumber: 58
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: setBuilderCustomizers"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "? extends org.springframework.boot.web.embedded.undertow.UndertowBuilderCustomizer"
      uuid: "customizers"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "? extends org.springframework.boot.web.embedded.undertow.UndertowBuilderCustomizer"
      uuid: "customizers"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "addBuilderCustomizers"
    sourceCodeSignature: "void addBuilderCustomizers(UndertowBuilderCustomizer...\
      \ customizers)"
    returnType: "void"
    parameters:
    - name: "customizers"
      type: "org.springframework.boot.web.embedded.undertow.UndertowBuilderCustomizer[]"
    instructionFingerprint: "58E24B84D62C9CE1334244E65CB3E08B"
  paths:
  - pathId: "path1"
    testPathName: "addBuilderCustomizersTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "A73CCE2DEE627FC1C03E5A42B77865CC"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7C52F4C60272E21E0DAF74FEB8CBA6AB"
      valueUuid: "target"
    - type: "INPUT"
      name: "customizers"
      modelFingerprint: "445B448265B6941075307DDA239DDC7D"
      valueUuid: "customizers"
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "DF52889CE84D2077B464DA671D3CA2D2"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "addBuilderCustomizers(customizers:customizers):void"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.delegate.addBuilderCustomizers(customizers);"
      lineNumber: 63
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: addBuilderCustomizers"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowBuilderCustomizer[]"
      uuid: "customizers"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowBuilderCustomizer[]"
      uuid: "customizers"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "getBuilderCustomizers"
    sourceCodeSignature: "Collection<UndertowBuilderCustomizer> getBuilderCustomizers()"
    returnType: "java.util.Collection"
    genericReturnType: "org.springframework.boot.web.embedded.undertow.UndertowBuilderCustomizer"
    instructionFingerprint: "7F7E9E7B033DCD4500D01418116898FB"
  paths:
  - pathId: "path1"
    testPathName: "getBuilderCustomizersTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "FE2EB33C6B2134D4947CC51B5A9F521A"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7C52F4C60272E21E0DAF74FEB8CBA6AB"
      valueUuid: "target"
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "4A4014C091FE71F5D4D021EAAE996154"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "getBuilderCustomizers():collection"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "1A439E434E60ADBF99900092615BE6F9"
      valueUuid: "collection"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.delegate.getBuilderCustomizers();"
      lineNumber: 72
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: getBuilderCustomizers"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "org.springframework.boot.web.embedded.undertow.UndertowBuilderCustomizer"
      uuid: "collection"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "org.springframework.boot.web.embedded.undertow.UndertowBuilderCustomizer"
      uuid: "collection"
- method:
    name: "setBufferSize"
    sourceCodeSignature: "void setBufferSize(Integer bufferSize)"
    returnType: "void"
    parameters:
    - name: "bufferSize"
      type: "java.lang.Integer"
    instructionFingerprint: "DB8D134FD21370200FD8C013F99C1A33"
  paths:
  - pathId: "path1"
    testPathName: "setBufferSizeTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "2E4B2FC665C5282B01FDA086C65F1B7E"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F461F3F02B1CD73D1840390A310E4AB6"
      valueUuid: "target"
    - type: "INPUT"
      name: "bufferSize"
      modelFingerprint: "59A0C5BF3CCFB7E1DC066DFC319652A1"
      valueUuid: "bufferSize"
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "00301BC8BBBC849B26A5F866684A37E2"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "setBufferSize(bufferSize:bufferSize):void"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.delegate.setBufferSize(bufferSize);"
      lineNumber: 77
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: setBufferSize"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 8080
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 10
      valueType: "java.lang.Integer"
      uuid: "bufferSize"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 10
      valueType: "java.lang.Integer"
      uuid: "bufferSize"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "setIoThreads"
    sourceCodeSignature: "void setIoThreads(Integer ioThreads)"
    returnType: "void"
    parameters:
    - name: "ioThreads"
      type: "java.lang.Integer"
    instructionFingerprint: "67AC4E2D22D5366815F008B2BB3647C7"
  paths:
  - pathId: "path1"
    testPathName: "setIoThreadsTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "56D32AA31A589F59FAFAA1A2B5EBDEDB"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F461F3F02B1CD73D1840390A310E4AB6"
      valueUuid: "target"
    - type: "INPUT"
      name: "ioThreads"
      modelFingerprint: "A28D41013FFEFB6336C118367EAF9BDF"
      valueUuid: "ioThreads"
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "87011B9E8EA6DA8ADA1F317171943C46"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "setIoThreads(ioThreads:ioThreads):void"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.delegate.setIoThreads(ioThreads);"
      lineNumber: 82
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: setIoThreads"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 8080
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 4
      valueType: "java.lang.Integer"
      uuid: "ioThreads"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 4
      valueType: "java.lang.Integer"
      uuid: "ioThreads"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "setWorkerThreads"
    sourceCodeSignature: "void setWorkerThreads(Integer workerThreads)"
    returnType: "void"
    parameters:
    - name: "workerThreads"
      type: "java.lang.Integer"
    instructionFingerprint: "65A6EDBA329DDFC15E31E68D5B65EEFD"
  paths:
  - pathId: "path1"
    testPathName: "setWorkerThreadsTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "4E4215DA12D601371404016D765AAEEB"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F461F3F02B1CD73D1840390A310E4AB6"
      valueUuid: "target"
    - type: "INPUT"
      name: "workerThreads"
      modelFingerprint: "D5D0ECAC16AAFDBC682E0355B34E5661"
      valueUuid: "workerThreads"
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "F116AEEC1B7E99F5BC9F469476DEFE52"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "setWorkerThreads(workerThreads:workerThreads):void"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.delegate.setWorkerThreads(workerThreads);"
      lineNumber: 87
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: setWorkerThreads"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 8080
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 10
      valueType: "java.lang.Integer"
      uuid: "workerThreads"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 10
      valueType: "java.lang.Integer"
      uuid: "workerThreads"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "setUseDirectBuffers"
    sourceCodeSignature: "void setUseDirectBuffers(Boolean directBuffers)"
    returnType: "void"
    parameters:
    - name: "directBuffers"
      type: "java.lang.Boolean"
    instructionFingerprint: "DF6C9C75C2E5D45B7039F40663D00607"
  paths:
  - pathId: "path1"
    testPathName: "setUseDirectBuffersTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "9BDAB94DA396590A2BC17C9A0022626C"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F461F3F02B1CD73D1840390A310E4AB6"
      valueUuid: "target"
    - type: "INPUT"
      name: "directBuffers"
      modelFingerprint: "9D900241C5F64F24E1D95FAB68E06BF4"
      valueUuid: "directBuffers"
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "CA73CDE3D835D1511DB75B693E63866A"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "setUseDirectBuffers(directBuffers:directBuffers):void"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.delegate.setUseDirectBuffers(directBuffers);"
      lineNumber: 92
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: setUseDirectBuffers"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 8080
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "java.lang.Boolean"
      uuid: "directBuffers"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "java.lang.Boolean"
      uuid: "directBuffers"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "setUseForwardHeaders"
    sourceCodeSignature: "void setUseForwardHeaders(boolean useForwardHeaders)"
    returnType: "void"
    parameters:
    - name: "useForwardHeaders"
      type: "boolean"
    instructionFingerprint: "EA36D0630E2951DE168A468F919C8165"
  paths:
  - pathId: "path1"
    testPathName: "setUseForwardHeadersTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "59A4D23AFC618A8C55C1762FA1A29B73"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F461F3F02B1CD73D1840390A310E4AB6"
      valueUuid: "target"
    - type: "INPUT"
      name: "useForwardHeaders"
      modelFingerprint: "AF7E4388BC840B6627C31CFBDDF4346C"
      valueUuid: "useForwardHeaders"
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "20D4DE4AAF8ED7DA1B6B232285D0A06D"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "setUseForwardHeaders(useForwardHeaders:useForwardHeaders):void"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.delegate.setUseForwardHeaders(useForwardHeaders);"
      lineNumber: 97
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: setUseForwardHeaders"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 8080
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "useForwardHeaders"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "useForwardHeaders"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "isUseForwardHeaders"
    sourceCodeSignature: "boolean isUseForwardHeaders()"
    returnType: "boolean"
    instructionFingerprint: "9ABE91A0926D17AD18194451DFB10B7B"
  paths:
  - pathId: "path1"
    testPathName: "isUseForwardHeadersWhenThisDelegateIsUseForwardHeaders"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "E8B2C4F1B9E9DECDFA83CF926643DF24"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7C52F4C60272E21E0DAF74FEB8CBA6AB"
      valueUuid: "target"
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "EFF697B4CEF22E4398382232F35DD22F"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "isUseForwardHeaders():boolean1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8383DF6F1D02800B0E90FD4143032B37"
      valueUuid: "boolean1"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.delegate.isUseForwardHeaders();"
      lineNumber: 101
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: isUseForwardHeaders"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
      fixed: true
    branches:
    - lineNumber: 101
      expression: "this.delegate.isUseForwardHeaders()"
      range: "(101,10)-(101,44)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "isUseForwardHeadersWhenThisDelegateNotIsUseForwardHeaders"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "EA8A578192DD4B23725B540F28239D83"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7C52F4C60272E21E0DAF74FEB8CBA6AB"
      valueUuid: "target"
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "2636D02F77AB4514650C4654D6F0A82D"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "isUseForwardHeaders():boolean1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "boolean1"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.delegate.isUseForwardHeaders();"
      lineNumber: 101
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: isUseForwardHeaders"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
      fixed: true
    branches:
    - lineNumber: 101
      expression: "this.delegate.isUseForwardHeaders()"
      range: "(101,10)-(101,44)"
      evaluatedAs: false
- method:
    name: "setAccessLogDirectory"
    sourceCodeSignature: "void setAccessLogDirectory(File accessLogDirectory)"
    returnType: "void"
    parameters:
    - name: "accessLogDirectory"
      type: "java.io.File"
    instructionFingerprint: "07FFED52E5D77A089C9969EF93CD08B9"
  paths:
  - pathId: "path1"
    testPathName: "setAccessLogDirectoryTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "F25A9C762CCDDAAC191E17B9B4119105"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7C52F4C60272E21E0DAF74FEB8CBA6AB"
      valueUuid: "target"
    - type: "INPUT"
      name: "accessLogDirectory"
      modelFingerprint: "A0E0951A71CBB2332B8FFA73785900C6"
      valueUuid: "accessLogDirectory"
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "4A338F8415729EAACB938D260506FD6B"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "setAccessLogDirectory(accessLogDirectory:accessLogDirectory):void"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.delegate.setAccessLogDirectory(accessLogDirectory);"
      lineNumber: 106
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: setAccessLogDirectory"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "accessLogDirectory-pathname"
      valueType: "java.io.File"
      uuid: "accessLogDirectory"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "accessLogDirectory-pathname"
      valueType: "java.io.File"
      uuid: "accessLogDirectory"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "setAccessLogPattern"
    sourceCodeSignature: "void setAccessLogPattern(String accessLogPattern)"
    returnType: "void"
    parameters:
    - name: "accessLogPattern"
      type: "java.lang.String"
    instructionFingerprint: "A325E10AAF55C3BC515B9769EB56A3DA"
  paths:
  - pathId: "path1"
    testPathName: "setAccessLogPatternTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "56C9F024542826161248108A1D49FF60"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7C52F4C60272E21E0DAF74FEB8CBA6AB"
      valueUuid: "target"
    - type: "INPUT"
      name: "accessLogPattern"
      modelFingerprint: "48B1B82D7AF8620A414173E1C238A18D"
      valueUuid: "accessLogPattern"
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "CA35680E4B822B4B7D55B5D8E30FCCA7"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "setAccessLogPattern(accessLogPattern:accessLogPattern):void"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "REFLECTION_CALL_FAILURE"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "accessLogPattern"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "accessLogPattern"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "setAccessLogPrefix"
    sourceCodeSignature: "void setAccessLogPrefix(String accessLogPrefix)"
    returnType: "void"
    parameters:
    - name: "accessLogPrefix"
      type: "java.lang.String"
    instructionFingerprint: "F93584049AF5FCF8FE4B5882CCDC4BE7"
  paths:
  - pathId: "path1"
    testPathName: "setAccessLogPrefixTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "C79E50ADB2AF79768E414A2DB605CF44"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7C52F4C60272E21E0DAF74FEB8CBA6AB"
      valueUuid: "target"
    - type: "INPUT"
      name: "accessLogPrefix"
      modelFingerprint: "A10CBBEB2D3901C3ADA5236BCF817C57"
      valueUuid: "accessLogPrefix"
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "9EEEED4286E6431B3F45D232E9C8F335"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "setAccessLogPrefix(accessLogPrefix:accessLogPrefix):void"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.delegate.setAccessLogPrefix(accessLogPrefix);"
      lineNumber: 116
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: setAccessLogPrefix"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "<value>"
      valueType: "java.lang.String"
      uuid: "accessLogPrefix"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "<value>"
      valueType: "java.lang.String"
      uuid: "accessLogPrefix"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "setAccessLogSuffix"
    sourceCodeSignature: "void setAccessLogSuffix(String accessLogSuffix)"
    returnType: "void"
    parameters:
    - name: "accessLogSuffix"
      type: "java.lang.String"
    instructionFingerprint: "82CFFEA00DEB4E6B5EC296968C765B0A"
  paths:
  - pathId: "path1"
    testPathName: "setAccessLogSuffixTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "BB13B2910C45B770720F9000A1DFACFF"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7C52F4C60272E21E0DAF74FEB8CBA6AB"
      valueUuid: "target"
    - type: "INPUT"
      name: "accessLogSuffix"
      modelFingerprint: "58313DE5EE34B910B341F4232B3AB273"
      valueUuid: "accessLogSuffix"
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "EA7C5FAE96CB24A84C7228055A96F44E"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "setAccessLogSuffix(accessLogSuffix:accessLogSuffix):void"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.delegate.setAccessLogSuffix(accessLogSuffix);"
      lineNumber: 121
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: setAccessLogSuffix"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "<value>"
      valueType: "java.lang.String"
      uuid: "accessLogSuffix"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "<value>"
      valueType: "java.lang.String"
      uuid: "accessLogSuffix"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "isAccessLogEnabled"
    sourceCodeSignature: "boolean isAccessLogEnabled()"
    returnType: "boolean"
    instructionFingerprint: "9876FA16A7BDF45CB0DBE33F5644BA26"
  paths:
  - pathId: "path1"
    testPathName: "isAccessLogEnabledWhenThisDelegateIsAccessLogEnabled"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "CFD5AAA25EB8ECA1845A912B961066A8"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7C52F4C60272E21E0DAF74FEB8CBA6AB"
      valueUuid: "target"
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "0A2EEEF20EFC89324AE56FC386633CEC"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "isAccessLogEnabled():boolean1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8383DF6F1D02800B0E90FD4143032B37"
      valueUuid: "boolean1"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.delegate.isAccessLogEnabled();"
      lineNumber: 125
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: isAccessLogEnabled"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
      fixed: true
    branches:
    - lineNumber: 125
      expression: "this.delegate.isAccessLogEnabled()"
      range: "(125,10)-(125,43)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "isAccessLogEnabledWhenThisDelegateNotIsAccessLogEnabled"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "1CE3E2FFB6E78C807EEA7BD722EB5C9A"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7C52F4C60272E21E0DAF74FEB8CBA6AB"
      valueUuid: "target"
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "578CA110A173324F7617110C5025E87D"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "isAccessLogEnabled():boolean1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "boolean1"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.delegate.isAccessLogEnabled();"
      lineNumber: 125
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: isAccessLogEnabled"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
      fixed: true
    branches:
    - lineNumber: 125
      expression: "this.delegate.isAccessLogEnabled()"
      range: "(125,10)-(125,43)"
      evaluatedAs: false
- method:
    name: "setAccessLogEnabled"
    sourceCodeSignature: "void setAccessLogEnabled(boolean accessLogEnabled)"
    returnType: "void"
    parameters:
    - name: "accessLogEnabled"
      type: "boolean"
    instructionFingerprint: "6DD68800DFBD352564FE4E7601723FB6"
  paths:
  - pathId: "path1"
    testPathName: "setAccessLogEnabledTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "C1787F21C71B56EB75E899636791D46B"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F461F3F02B1CD73D1840390A310E4AB6"
      valueUuid: "target"
    - type: "INPUT"
      name: "accessLogEnabled"
      modelFingerprint: "3C1AB351A62207ECACF922DF71C8A76D"
      valueUuid: "accessLogEnabled"
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "0234DF2664C371497016A413C8D89A58"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "setAccessLogEnabled(accessLogEnabled:accessLogEnabled):void"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.delegate.setAccessLogEnabled(accessLogEnabled);"
      lineNumber: 130
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: setAccessLogEnabled"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 8080
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "accessLogEnabled"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "accessLogEnabled"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "setAccessLogRotate"
    sourceCodeSignature: "void setAccessLogRotate(boolean accessLogRotate)"
    returnType: "void"
    parameters:
    - name: "accessLogRotate"
      type: "boolean"
    instructionFingerprint: "9ADC3FC359A7C559B12A47B0E307F039"
  paths:
  - pathId: "path1"
    testPathName: "setAccessLogRotateTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "A6BFCB127E71D1C84EABF4053A28916E"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F461F3F02B1CD73D1840390A310E4AB6"
      valueUuid: "target"
    - type: "INPUT"
      name: "accessLogRotate"
      modelFingerprint: "0646A3D3B9CEAF0C2C98D3277A037A59"
      valueUuid: "accessLogRotate"
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "7CDD1F2F4D7F633F7861EC2B0CA173C6"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "setAccessLogRotate(accessLogRotate:accessLogRotate):void"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.delegate.setAccessLogRotate(accessLogRotate);"
      lineNumber: 135
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: setAccessLogRotate"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 8080
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "accessLogRotate"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "accessLogRotate"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "getWebServer"
    sourceCodeSignature: "WebServer getWebServer(org.springframework.http.server.reactive.HttpHandler\
      \ httpHandler)"
    returnType: "org.springframework.boot.web.server.WebServer"
    parameters:
    - name: "httpHandler"
      type: "org.springframework.http.server.reactive.HttpHandler"
    instructionFingerprint: "AF508463FB195BBE3DDEFDE58EFA906D"
  paths:
  - pathId: "path1"
    testPathName: "getWebServerWhenGetPortGreaterThanOrEqualsTo0"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "455B38054B3F33C09493D5C5DFBB4CDA"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D891B7CD133573AAD7982A1EB65D7E87"
      valueUuid: "target"
    - type: "INPUT"
      name: "httpHandler"
      modelFingerprint: "54ADB25CEDDDFBF94C6420F7A69C5FBC"
      valueUuid: "httpHandler"
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "84CF90851D8C009B4CAC2E13F4D569CA"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "createBuilder(factory:targetClassObject,sslBundleSupplier:uniqueUuid1):undertow.Builder"
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "A2BBAA995B3BBBEBEC9DC62829AEEB42"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "createHttpHandlerFactories(webServerFactory:targetClassObject,initialHttpHandlerFactories:httpHandlerFactoryArray):list"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "646E40F45B01EF7F8B75476792C9CBAD"
      valueUuid: "undertowWebServer"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "Undertow.Builder builder = this.delegate.createBuilder(this, this::getSslBundle);"
      lineNumber: 140
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: createBuilder"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.http.server.reactive.HttpHandler"
      uuid: "httpHandler"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.Undertow$Builder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
            parameters: []
          valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
          uuid: "undertowWebServerFactoryDelegate"
          fixed: true
        methodParameters:
        - name: "factory"
          value:
            sapientType: "THIS"
            valueType: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
            uuid: "targetClassObject"
            fixed: true
        - name: "sslBundleSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "uniqueUuid2"
        methodName: "createBuilder"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "uniqueUuid1"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.web.embedded.undertow.HttpHandlerFactory"
      uuid: "list"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.web.embedded.undertow.HttpHandlerFactory"
            uuid: "httpHandlerFactory"
      valueType: "org.springframework.boot.web.embedded.undertow.HttpHandlerFactory[]"
      uuid: "httpHandlerFactoryArray"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServer"
        parameters:
        - name: "builder"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "io.undertow.Undertow$Builder"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
                  parameters: []
                valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
                uuid: "undertowWebServerFactoryDelegate"
                fixed: true
              methodParameters:
              - name: "factory"
                value:
                  sapientType: "THIS"
                  valueType: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
                  uuid: "targetClassObject"
                  fixed: true
              - name: "sslBundleSupplier"
                value:
                  sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                  valueType: "java.util.function.Supplier"
                  genericValueType: "org.springframework.boot.ssl.SslBundle"
              methodName: "createBuilder"
            valueType: "io.undertow.Undertow$Builder"
            uuid: "undertow.Builder"
        - name: "httpHandlerFactories"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.web.embedded.undertow.HttpHandlerFactory"
            uuid: "list"
        - name: "autoStart"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "uniqueUuid3"
            fixed: true
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServer"
      uuid: "undertowWebServer"
      fixed: true
    branches:
    - lineNumber: 143
      expression: "getPort() >= 0"
      range: "(143,63)-(143,76)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "getWebServerWhenGetPortLessThan0"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "7CAEB0F37EDD90D21F2777E0F5726BA6"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F20B1B2E42F3BD76B8B1A75528BEF332"
      valueUuid: "target"
    - type: "INPUT"
      name: "httpHandler"
      modelFingerprint: "54ADB25CEDDDFBF94C6420F7A69C5FBC"
      valueUuid: "httpHandler"
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "84CF90851D8C009B4CAC2E13F4D569CA"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "createBuilder(factory:targetClassObject,sslBundleSupplier:uniqueUuid4):undertow.Builder"
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "A2BBAA995B3BBBEBEC9DC62829AEEB42"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "createHttpHandlerFactories(webServerFactory:targetClassObject,initialHttpHandlerFactories:httpHandlerFactoryArray):list"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "646E40F45B01EF7F8B75476792C9CBAD"
      valueUuid: "undertowWebServer"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "Undertow.Builder builder = this.delegate.createBuilder(this, this::getSslBundle);"
      lineNumber: 140
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: createBuilder"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: -1
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.http.server.reactive.HttpHandler"
      uuid: "httpHandler"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.Undertow$Builder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
            parameters: []
          valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
          uuid: "undertowWebServerFactoryDelegate"
          fixed: true
        methodParameters:
        - name: "factory"
          value:
            sapientType: "THIS"
            valueType: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
            uuid: "targetClassObject"
            fixed: true
        - name: "sslBundleSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "uniqueUuid5"
        methodName: "createBuilder"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "uniqueUuid4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.web.embedded.undertow.HttpHandlerFactory"
      uuid: "list"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.web.embedded.undertow.HttpHandlerFactory"
            uuid: "httpHandlerFactory"
      valueType: "org.springframework.boot.web.embedded.undertow.HttpHandlerFactory[]"
      uuid: "httpHandlerFactoryArray"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServer"
        parameters:
        - name: "builder"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "io.undertow.Undertow$Builder"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
                  parameters: []
                valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
                uuid: "undertowWebServerFactoryDelegate"
                fixed: true
              methodParameters:
              - name: "factory"
                value:
                  sapientType: "THIS"
                  valueType: "org.springframework.boot.web.embedded.undertow.UndertowReactiveWebServerFactory"
                  uuid: "targetClassObject"
                  fixed: true
              - name: "sslBundleSupplier"
                value:
                  sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                  valueType: "java.util.function.Supplier"
                  genericValueType: "org.springframework.boot.ssl.SslBundle"
              methodName: "createBuilder"
            valueType: "io.undertow.Undertow$Builder"
            uuid: "undertow.Builder"
        - name: "httpHandlerFactories"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.web.embedded.undertow.HttpHandlerFactory"
            uuid: "list"
        - name: "autoStart"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "uniqueUuid6"
            fixed: true
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServer"
      uuid: "undertowWebServer"
      fixed: true
    branches:
    - lineNumber: 143
      expression: "getPort() >= 0"
      range: "(143,63)-(143,76)"
      evaluatedAs: false
