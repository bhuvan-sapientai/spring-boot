---
modelFingerprint: "6D7170D61D822FBCFBE9C34E532F715B"
targetClass:
  fullClassName: "org.springframework.boot.web.embedded.undertow.CompositeResourceManager"
methods:
- method:
    name: "close"
    sourceCodeSignature: "void close()"
    returnType: "void"
    throwsExceptions:
    - "java.io.IOException"
    instructionFingerprint: "10226C33D817EB91F1B61D09EB0853E5"
  paths:
  - pathId: "path1"
    testPathName: "closeWhenThisResourceManagersIsNotEmpty"
    constructorSignature: "<init>(io.undertow.server.handlers.resource.ResourceManager[])\
      \ : void"
    modelFingerprint: "95F0F753636AA8EC8A45B9C18E292461"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "E9BDB84CA0FE3F28FAAE93114E1D261A"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      name: "resourceManager"
      modelFingerprint: "488B0F5967B7E07F205613B8B390BD23"
      valueUuid: "object"
      methodExercised:
        expression: "close():void"
        throwsExceptions:
        - "java.io.IOException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.CompositeResourceManager"
        parameters:
        - name: "resourceManagers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "MOCK"
                  valueType: "io.undertow.server.handlers.resource.ResourceManager"
                  uuid: "object"
                  collectionUuid: "list"
            valueType: "io.undertow.server.handlers.resource.ResourceManager[]"
            uuid: "resourceManagers"
      valueType: "org.springframework.boot.web.embedded.undertow.CompositeResourceManager"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "io.undertow.server.handlers.resource.ResourceManager"
      uuid: "object"
      collectionUuid: "list"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 43
      expression: "for-each(this.resourceManagers)"
      range: "(43,42)-(43,62)"
      evaluatedAs: true
- method:
    name: "getResource"
    sourceCodeSignature: "Resource getResource(String path)"
    returnType: "io.undertow.server.handlers.resource.Resource"
    throwsExceptions:
    - "java.io.IOException"
    parameters:
    - name: "path"
      type: "java.lang.String"
    instructionFingerprint: "3C9315E1BCC34836B7A193A9ACF400DB"
  paths:
  - pathId: "path1"
    testPathName: "getResourceWhenResourceIsNotNull"
    constructorSignature: "<init>(io.undertow.server.handlers.resource.ResourceManager[])\
      \ : void"
    modelFingerprint: "55713A4622534C187C464A11856F609F"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6741ADD396647EFA49FFE5012C5C4D49"
      valueUuid: "target"
    - type: "INPUT"
      name: "path"
      modelFingerprint: "CCCA5C8EB56E398E3BD20AA7A3D33AEC"
      valueUuid: "path"
    - type: "LOCAL_VARIABLE"
      name: "resourceManager"
      modelFingerprint: "43CBD83D56B41CB54A30695E2819EDB6"
      valueUuid: "object"
      methodExercised:
        expression: "getResource(arg0:path):resource"
        throwsExceptions:
        - "java.io.IOException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "451046CBEAB2BDB5600EB5169CC2F472"
      valueUuid: "resource"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.CompositeResourceManager"
        parameters:
        - name: "resourceManagers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "MOCK"
                  valueType: "io.undertow.server.handlers.resource.ResourceManager"
                  uuid: "object"
                  collectionUuid: "list"
            valueType: "io.undertow.server.handlers.resource.ResourceManager[]"
            uuid: "resourceManagers"
      valueType: "org.springframework.boot.web.embedded.undertow.CompositeResourceManager"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "path1"
      valueType: "java.lang.String"
      uuid: "path"
    - sapientType: "MOCK"
      valueType: "io.undertow.server.handlers.resource.ResourceManager"
      uuid: "object"
      collectionUuid: "list"
    - sapientType: "MOCK"
      valueType: "io.undertow.server.handlers.resource.Resource"
      uuid: "resource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "path1"
      valueType: "java.lang.String"
      uuid: "path"
    - sapientType: "MOCK"
      valueType: "io.undertow.server.handlers.resource.Resource"
      uuid: "resource"
    branches:
    - lineNumber: 50
      expression: "for-each(this.resourceManagers)"
      range: "(50,42)-(50,62)"
      evaluatedAs: true
    - lineNumber: 52
      expression: "resource != null"
      range: "(52,8)-(52,23)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "getResourceWhenResourceIsNull"
    constructorSignature: "<init>(io.undertow.server.handlers.resource.ResourceManager[])\
      \ : void"
    modelFingerprint: "32382BFD6F3C99AD93ED413AA93AF98F"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6741ADD396647EFA49FFE5012C5C4D49"
      valueUuid: "target"
    - type: "INPUT"
      name: "path"
      modelFingerprint: "CCCA5C8EB56E398E3BD20AA7A3D33AEC"
      valueUuid: "path"
    - type: "LOCAL_VARIABLE"
      name: "resourceManager"
      modelFingerprint: "263F8ED7F616160552CD92FF428E64CE"
      valueUuid: "object"
      methodExercised:
        expression: "getResource(arg0:path):resource"
        throwsExceptions:
        - "java.io.IOException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "DA19E518EBE1D1FDFE507D76D198D597"
      valueUuid: "resource2"
    disabled: false
    failureReason:
      reason: "ERROR_RECALCULATING_SUGGESTED_VALUES"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.CompositeResourceManager"
        parameters:
        - name: "resourceManagers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "MOCK"
                  valueType: "io.undertow.server.handlers.resource.ResourceManager"
                  uuid: "object"
                  collectionUuid: "list"
            valueType: "io.undertow.server.handlers.resource.ResourceManager[]"
            uuid: "resourceManagers"
      valueType: "org.springframework.boot.web.embedded.undertow.CompositeResourceManager"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "path1"
      valueType: "java.lang.String"
      uuid: "path"
    - sapientType: "MOCK"
      valueType: "io.undertow.server.handlers.resource.ResourceManager"
      uuid: "object"
      collectionUuid: "list"
    - sapientType: "NULL"
      valueType: "io.undertow.server.handlers.resource.Resource"
      uuid: "resource"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "path1"
      valueType: "java.lang.String"
      uuid: "path"
    - sapientType: "NULL"
      valueType: "io.undertow.server.handlers.resource.Resource"
      uuid: "resource2"
      fixed: true
    branches:
    - lineNumber: 50
      expression: "for-each(this.resourceManagers)"
      range: "(50,42)-(50,62)"
      evaluatedAs: true
    - lineNumber: 52
      expression: "resource != null"
      range: "(52,8)-(52,23)"
      evaluatedAs: false
- method:
    name: "isResourceChangeListenerSupported"
    sourceCodeSignature: "boolean isResourceChangeListenerSupported()"
    returnType: "boolean"
    instructionFingerprint: "5650F0A6BC716AF19FFAB2DA5B5E9965"
  paths:
  - pathId: "path1"
    testPathName: "isResourceChangeListenerSupportedTest"
    constructorSignature: "<init>(io.undertow.server.handlers.resource.ResourceManager[])\
      \ : void"
    modelFingerprint: "E715B1D2DD09D80A529128B87C750D6E"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "48996695DD85A358DF78856E23EED809"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.CompositeResourceManager"
        parameters:
        - name: "resourceManagers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "io.undertow.server.handlers.resource.ResourceManager[]"
            uuid: "resourceManagers"
      valueType: "org.springframework.boot.web.embedded.undertow.CompositeResourceManager"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "registerResourceChangeListener"
    sourceCodeSignature: "void registerResourceChangeListener(ResourceChangeListener\
      \ listener)"
    returnType: "void"
    parameters:
    - name: "listener"
      type: "io.undertow.server.handlers.resource.ResourceChangeListener"
    instructionFingerprint: "8AA177DADA2545739408B0D889F86A7E"
  paths:
  - pathId: "path1"
    testPathName: "registerResourceChangeListenerThrowsIllegalArgumentException"
    constructorSignature: "<init>(io.undertow.server.handlers.resource.ResourceManager[])\
      \ : void"
    modelFingerprint: "FE318D57BDACAED729A526ED53665143"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "48996695DD85A358DF78856E23EED809"
      valueUuid: "target"
    - type: "INPUT"
      name: "listener"
      modelFingerprint: "B4BF534C7912B78204F6876870E30D08"
      valueUuid: "listener"
    - type: "LOCAL_VARIABLE"
      name: "MESSAGES"
      modelFingerprint: "0D28E96E3FA0C60C71AA7DD6D1F012EB"
      valueUuid: "undertowMessages"
      methodExercised:
        expression: "resourceChangeListenerNotSupported():illegalArgumentException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "BE5DB93E80308BBB6AC7B5DF0ADD625F"
      valueUuid: "illegalArgumentException"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.CompositeResourceManager"
        parameters:
        - name: "resourceManagers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "io.undertow.server.handlers.resource.ResourceManager[]"
            uuid: "resourceManagers"
      valueType: "org.springframework.boot.web.embedded.undertow.CompositeResourceManager"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "io.undertow.server.handlers.resource.ResourceChangeListener"
      uuid: "listener"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "io.undertow.UndertowMessages"
        fieldName: "MESSAGES"
      valueType: "io.undertow.UndertowMessages"
      uuid: "undertowMessages"
    - sapientType: "EXCEPTION"
      content: !<method_return_from_value>
        target: "java.lang.IllegalArgumentException"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<static_field_return>
            target: "io.undertow.UndertowMessages"
            fieldName: "MESSAGES"
          valueType: "io.undertow.UndertowMessages"
          uuid: "undertowMessages"
        methodParameters: []
        methodName: "resourceChangeListenerNotSupported"
      valueType: "java.lang.IllegalArgumentException"
      uuid: "illegalArgumentException"
    - sapientType: "EXCEPTION"
      content: !<method_return_from_value>
        target: "java.lang.IllegalArgumentException"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<static_field_return>
            target: "io.undertow.UndertowMessages"
            fieldName: "MESSAGES"
          valueType: "io.undertow.UndertowMessages"
          uuid: "undertowMessages"
        methodParameters: []
        methodName: "resourceChangeListenerNotSupported"
      valueType: "java.lang.IllegalArgumentException"
      uuid: "illegalArgumentException"
- method:
    name: "removeResourceChangeListener"
    sourceCodeSignature: "void removeResourceChangeListener(ResourceChangeListener\
      \ listener)"
    returnType: "void"
    parameters:
    - name: "listener"
      type: "io.undertow.server.handlers.resource.ResourceChangeListener"
    instructionFingerprint: "1B3AB788EDD5E00A7695BE9E3AAA029E"
  paths:
  - pathId: "path1"
    testPathName: "removeResourceChangeListenerThrowsIllegalArgumentException"
    constructorSignature: "<init>(io.undertow.server.handlers.resource.ResourceManager[])\
      \ : void"
    modelFingerprint: "FE318D57BDACAED729A526ED53665143"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "48996695DD85A358DF78856E23EED809"
      valueUuid: "target"
    - type: "INPUT"
      name: "listener"
      modelFingerprint: "B4BF534C7912B78204F6876870E30D08"
      valueUuid: "listener"
    - type: "LOCAL_VARIABLE"
      name: "MESSAGES"
      modelFingerprint: "0D28E96E3FA0C60C71AA7DD6D1F012EB"
      valueUuid: "undertowMessages"
      methodExercised:
        expression: "resourceChangeListenerNotSupported():illegalArgumentException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "BE5DB93E80308BBB6AC7B5DF0ADD625F"
      valueUuid: "illegalArgumentException"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.CompositeResourceManager"
        parameters:
        - name: "resourceManagers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "io.undertow.server.handlers.resource.ResourceManager[]"
            uuid: "resourceManagers"
      valueType: "org.springframework.boot.web.embedded.undertow.CompositeResourceManager"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "io.undertow.server.handlers.resource.ResourceChangeListener"
      uuid: "listener"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "io.undertow.UndertowMessages"
        fieldName: "MESSAGES"
      valueType: "io.undertow.UndertowMessages"
      uuid: "undertowMessages"
    - sapientType: "EXCEPTION"
      content: !<method_return_from_value>
        target: "java.lang.IllegalArgumentException"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<static_field_return>
            target: "io.undertow.UndertowMessages"
            fieldName: "MESSAGES"
          valueType: "io.undertow.UndertowMessages"
          uuid: "undertowMessages"
        methodParameters: []
        methodName: "resourceChangeListenerNotSupported"
      valueType: "java.lang.IllegalArgumentException"
      uuid: "illegalArgumentException"
    - sapientType: "EXCEPTION"
      content: !<method_return_from_value>
        target: "java.lang.IllegalArgumentException"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<static_field_return>
            target: "io.undertow.UndertowMessages"
            fieldName: "MESSAGES"
          valueType: "io.undertow.UndertowMessages"
          uuid: "undertowMessages"
        methodParameters: []
        methodName: "resourceChangeListenerNotSupported"
      valueType: "java.lang.IllegalArgumentException"
      uuid: "illegalArgumentException"
