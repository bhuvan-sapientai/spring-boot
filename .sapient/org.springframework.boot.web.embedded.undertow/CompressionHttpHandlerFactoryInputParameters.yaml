---
modelFingerprint: "C33B79E50CB16227585E93824F7BC58C"
targetClass:
  fullClassName: "org.springframework.boot.web.embedded.undertow.CompressionHttpHandlerFactory"
methods:
- method:
    name: "getHandler"
    sourceCodeSignature: "HttpHandler getHandler(HttpHandler next)"
    returnType: "io.undertow.server.HttpHandler"
    parameters:
    - name: "next"
      type: "io.undertow.server.HttpHandler"
    instructionFingerprint: "5E877A277AD363419B9432265ECA4E09"
  paths:
  - pathId: "path1"
    testPathName: "getHandlerWhenThisCompressionNotGetEnabled"
    constructorSignature: "<init>(org.springframework.boot.web.server.Compression)\
      \ : void"
    modelFingerprint: "3033209604BD3E71AB32BE850D14917E"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "AAFFFBAF0DCC560D1996EA0DC2FB4472"
      valueUuid: "target"
    - type: "INPUT"
      name: "next"
      modelFingerprint: "E47074E28A8499F1A1530E8A3280B37E"
      valueUuid: "next"
    - type: "FIELD"
      name: "compression"
      modelFingerprint: "ADE3679B68AC703E82C875B7A520E685"
      valueUuid: "compression"
      methodExercised:
        expression: "getEnabled():enabled"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "1F80F96CF82886EB93495F70528D5CAD"
      valueUuid: "next"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.CompressionHttpHandlerFactory"
        parameters:
        - name: "compression"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.server.Compression"
              parameters: []
              propertiesMap:
                enabled:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: false
                  valueType: "boolean"
                  uuid: "enabled"
            valueType: "org.springframework.boot.web.server.Compression"
            uuid: "compression"
      valueType: "org.springframework.boot.web.embedded.undertow.CompressionHttpHandlerFactory"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "io.undertow.server.HttpHandler"
      uuid: "next"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Compression"
        parameters: []
        propertiesMap:
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "enabled"
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "compression"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "enabled"
    - sapientType: "MOCK"
      valueType: "io.undertow.server.HttpHandler"
      uuid: "next"
    branches:
    - lineNumber: 55
      expression: "!this.compression.getEnabled()"
      range: "(55,7)-(55,36)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "getHandlerWhenCompressionGetExcludedUserAgentsIsNotEmpty"
    constructorSignature: "<init>(org.springframework.boot.web.server.Compression)\
      \ : void"
    modelFingerprint: "2CDB125583CF4CBC8952946A52C00230"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "AAFFFBAF0DCC560D1996EA0DC2FB4472"
      valueUuid: "target"
    - type: "INPUT"
      name: "next"
      modelFingerprint: "E47074E28A8499F1A1530E8A3280B37E"
      valueUuid: "next"
    - type: "FIELD"
      name: "compression"
      modelFingerprint: "2CE446BE24FC2CE5B72A5C09B400C65C"
      valueUuid: "compression"
      methodExercised:
        expression: "getEnabled():enabled"
    - type: "LOCAL_VARIABLE"
      name: "compression"
      modelFingerprint: "0FEC5001104492762C447CFA267A40A3"
      valueUuid: "compression"
      methodExercised:
        expression: "getMinResponseSize():minResponseSize"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "27BB62B6FCEB2F5833F528E025595CC8"
      valueUuid: "minResponseSize"
      methodExercised:
        expression: "toBytes():long1"
    - type: "LOCAL_VARIABLE"
      name: "compression"
      modelFingerprint: "7362E9B0EF1B1A9A89F6BB4BC8C7F427"
      valueUuid: "compression"
      methodExercised:
        expression: "getMimeTypes():mimeTypes"
    - type: "LOCAL_VARIABLE"
      name: "compression"
      modelFingerprint: "79B98E6A0526987E0AB9E7F519B535E8"
      valueUuid: "compression"
      methodExercised:
        expression: "getExcludedUserAgents():excludedUserAgents"
    - type: "LOCAL_VARIABLE"
      name: "compression"
      modelFingerprint: "79B98E6A0526987E0AB9E7F519B535E8"
      valueUuid: "compression"
      methodExercised:
        expression: "getExcludedUserAgents():excludedUserAgents"
    - type: "STATIC"
      name: "Predicates.class"
      modelFingerprint: "D9868E269DAA9B0A876D6E98444CAD7C"
      valueUuid: "Predicates.class"
      methodExercised:
        expression: "regex(attribute:requestHeaderAttribute,pattern:string):predicate"
        staticAccess: true
    - type: "STATIC"
      name: "Predicates.class"
      modelFingerprint: "272BF19E0E25384C5CCC5FA5BD3F2791"
      valueUuid: "Predicates.class"
      methodExercised:
        expression: "not(predicate:predicate):predicate2"
        staticAccess: true
    - type: "STATIC"
      name: "Predicates.class"
      modelFingerprint: "6AE94D17B81507C97B7022E129703784"
      valueUuid: "Predicates.class"
      methodExercised:
        expression: "and(predicates:objectArray):predicate3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "repository"
      modelFingerprint: "D6C7AB88515618E5E82ECBE10696D983"
      valueUuid: "contentEncodingRepository"
      methodExercised:
        expression: "addEncodingHandler(encoding:uniqueUuid1,encoder:gzipEncodingProvider,priority:uniqueUuid2,enabledPredicate:predicate3):contentEncodingRepository2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "D76B3F9BCF5B86A468586BC2EC602644"
      valueUuid: "encodingHandler"
      methodExercised:
        expression: "setNext(next:next):encodingHandler2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2CB64DC819D9D65E786A771D60B1FB5D"
      valueUuid: "encodingHandler2"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.CompressionHttpHandlerFactory"
        parameters:
        - name: "compression"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.server.Compression"
              parameters: []
              propertiesMap:
                minResponseSize:
                  sapientType: "MOCK"
                  valueType: "org.springframework.util.unit.DataSize"
                  uuid: "minResponseSize"
                excludedUserAgents:
                  sapientType: "ARRAY"
                  content: !<array>
                    values:
                      0:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: "excludedUserAgentsItem1"
                        valueType: "java.lang.String"
                        uuid: "string"
                  valueType: "java.lang.String[]"
                  uuid: "excludedUserAgents"
                mimeTypes:
                  sapientType: "ARRAY"
                  content: !<array>
                    values: {}
                  valueType: "java.lang.String[]"
                  uuid: "mimeTypes"
                enabled:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: true
                  valueType: "boolean"
                  uuid: "enabled"
            valueType: "org.springframework.boot.web.server.Compression"
            uuid: "compression"
      valueType: "org.springframework.boot.web.embedded.undertow.CompressionHttpHandlerFactory"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "io.undertow.server.HttpHandler"
      uuid: "next"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Compression"
        parameters: []
        propertiesMap:
          minResponseSize:
            sapientType: "MOCK"
            valueType: "org.springframework.util.unit.DataSize"
            uuid: "minResponseSize"
          excludedUserAgents:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "excludedUserAgentsItem1"
                  valueType: "java.lang.String"
                  uuid: "string"
            valueType: "java.lang.String[]"
            uuid: "excludedUserAgents"
          mimeTypes:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "mimeTypes"
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "enabled"
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "compression"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "enabled"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Compression"
        parameters: []
        propertiesMap:
          minResponseSize:
            sapientType: "MOCK"
            valueType: "org.springframework.util.unit.DataSize"
            uuid: "minResponseSize"
          excludedUserAgents:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "excludedUserAgentsItem1"
                  valueType: "java.lang.String"
                  uuid: "string"
            valueType: "java.lang.String[]"
            uuid: "excludedUserAgents"
          mimeTypes:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "mimeTypes"
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "enabled"
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "compression"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.unit.DataSize"
      uuid: "minResponseSize"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.unit.DataSize"
      uuid: "minResponseSize"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "long"
      uuid: "long1"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Compression"
        parameters: []
        propertiesMap:
          minResponseSize:
            sapientType: "MOCK"
            valueType: "org.springframework.util.unit.DataSize"
            uuid: "minResponseSize"
          excludedUserAgents:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "excludedUserAgentsItem1"
                  valueType: "java.lang.String"
                  uuid: "string"
            valueType: "java.lang.String[]"
            uuid: "excludedUserAgents"
          mimeTypes:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "mimeTypes"
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "enabled"
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "compression"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "mimeTypes"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Compression"
        parameters: []
        propertiesMap:
          minResponseSize:
            sapientType: "MOCK"
            valueType: "org.springframework.util.unit.DataSize"
            uuid: "minResponseSize"
          excludedUserAgents:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "excludedUserAgentsItem1"
                  valueType: "java.lang.String"
                  uuid: "string"
            valueType: "java.lang.String[]"
            uuid: "excludedUserAgents"
          mimeTypes:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "mimeTypes"
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "enabled"
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "compression"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "excludedUserAgentsItem1"
            valueType: "java.lang.String"
            uuid: "string"
      valueType: "java.lang.String[]"
      uuid: "excludedUserAgents"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Compression"
        parameters: []
        propertiesMap:
          minResponseSize:
            sapientType: "MOCK"
            valueType: "org.springframework.util.unit.DataSize"
            uuid: "minResponseSize"
          excludedUserAgents:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "excludedUserAgentsItem1"
                  valueType: "java.lang.String"
                  uuid: "string"
            valueType: "java.lang.String[]"
            uuid: "excludedUserAgents"
          mimeTypes:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "mimeTypes"
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "enabled"
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "compression"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "excludedUserAgentsItem1"
            valueType: "java.lang.String"
            uuid: "string"
      valueType: "java.lang.String[]"
      uuid: "excludedUserAgents"
    - sapientType: "MOCK"
      valueType: "io.undertow.predicate.Predicates"
      uuid: "Predicates.class"
    - sapientType: "MOCK"
      valueType: "io.undertow.predicate.Predicate"
      uuid: "predicate"
    - sapientType: "ANY"
      valueType: "io.undertow.attribute.RequestHeaderAttribute"
      uuid: "requestHeaderAttribute"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "excludedUserAgentsItem1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "io.undertow.predicate.Predicates"
      uuid: "Predicates.class"
    - sapientType: "MOCK"
      valueType: "io.undertow.predicate.Predicate"
      uuid: "predicate2"
    - sapientType: "MOCK"
      valueType: "io.undertow.predicate.Predicate"
      uuid: "predicate"
    - sapientType: "MOCK"
      valueType: "io.undertow.predicate.Predicates"
      uuid: "Predicates.class"
    - sapientType: "MOCK"
      valueType: "io.undertow.predicate.Predicate"
      uuid: "predicate3"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "io.undertow.predicate.Predicate"
            uuid: "object"
          1:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "io.undertow.predicate.Predicate"
            uuid: "object2"
          2:
            sapientType: "MOCK"
            valueType: "io.undertow.predicate.Predicate"
            uuid: "predicate2"
      valueType: "io.undertow.predicate.Predicate[]"
      uuid: "objectArray"
      collectionUuid: "arrayList"
    - sapientType: "OBJECT"
      content: !<new>
        target: "io.undertow.server.handlers.encoding.ContentEncodingRepository"
        parameters: []
      valueType: "io.undertow.server.handlers.encoding.ContentEncodingRepository"
      uuid: "contentEncodingRepository"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.server.handlers.encoding.ContentEncodingRepository"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "io.undertow.server.handlers.encoding.ContentEncodingRepository"
            parameters: []
          valueType: "io.undertow.server.handlers.encoding.ContentEncodingRepository"
          uuid: "contentEncodingRepository"
          fixed: true
        methodParameters:
        - name: "encoding"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "gzip"
            valueType: "java.lang.String"
            uuid: "uniqueUuid3"
            fixed: true
        - name: "encoder"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "io.undertow.server.handlers.encoding.GzipEncodingProvider"
              parameters: []
            valueType: "io.undertow.server.handlers.encoding.GzipEncodingProvider"
            uuid: "gzipEncodingProvider"
            fixed: true
        - name: "priority"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 50
            valueType: "int"
            uuid: "uniqueUuid4"
            fixed: true
        - name: "enabledPredicate"
          value:
            sapientType: "MOCK"
            valueType: "io.undertow.predicate.Predicate"
            uuid: "predicate3"
        methodName: "addEncodingHandler"
      valueType: "io.undertow.server.handlers.encoding.ContentEncodingRepository"
      uuid: "contentEncodingRepository2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "gzip"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "ANY"
      valueType: "io.undertow.server.handlers.encoding.GzipEncodingProvider"
      uuid: "gzipEncodingProvider"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 50
      valueType: "int"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.predicate.Predicate"
      uuid: "predicate3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "io.undertow.server.handlers.encoding.EncodingHandler"
        parameters:
        - name: "contentEncodingRepository"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "io.undertow.server.handlers.encoding.ContentEncodingRepository"
              parameters: []
            valueType: "io.undertow.server.handlers.encoding.ContentEncodingRepository"
            uuid: "contentEncodingRepository"
            fixed: true
      valueType: "io.undertow.server.handlers.encoding.EncodingHandler"
      uuid: "encodingHandler"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.server.handlers.encoding.EncodingHandler"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "io.undertow.server.handlers.encoding.EncodingHandler"
            parameters:
            - name: "contentEncodingRepository"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "io.undertow.server.handlers.encoding.ContentEncodingRepository"
                  parameters: []
                valueType: "io.undertow.server.handlers.encoding.ContentEncodingRepository"
                uuid: "contentEncodingRepository"
                fixed: true
          valueType: "io.undertow.server.handlers.encoding.EncodingHandler"
          uuid: "encodingHandler"
          fixed: true
        methodParameters:
        - name: "next"
          value:
            sapientType: "MOCK"
            valueType: "io.undertow.server.HttpHandler"
            uuid: "next"
        methodName: "setNext"
      valueType: "io.undertow.server.handlers.encoding.EncodingHandler"
      uuid: "encodingHandler2"
    - sapientType: "MOCK"
      valueType: "io.undertow.server.HttpHandler"
      uuid: "next"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.server.handlers.encoding.EncodingHandler"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "io.undertow.server.handlers.encoding.EncodingHandler"
            parameters:
            - name: "contentEncodingRepository"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "io.undertow.server.handlers.encoding.ContentEncodingRepository"
                  parameters: []
                valueType: "io.undertow.server.handlers.encoding.ContentEncodingRepository"
                uuid: "contentEncodingRepository"
                fixed: true
          valueType: "io.undertow.server.handlers.encoding.EncodingHandler"
          uuid: "encodingHandler"
          fixed: true
        methodParameters:
        - name: "next"
          value:
            sapientType: "MOCK"
            valueType: "io.undertow.server.HttpHandler"
            uuid: "next"
        methodName: "setNext"
      valueType: "io.undertow.server.handlers.encoding.EncodingHandler"
      uuid: "encodingHandler2"
    branches:
    - lineNumber: 55
      expression: "!this.compression.getEnabled()"
      range: "(55,7)-(55,36)"
      evaluatedAs: false
    - lineNumber: 68
      expression: "compression.getExcludedUserAgents() != null"
      range: "(68,7)-(68,49)"
      evaluatedAs: true
      internalMethodName: "getCompressionPredicates"
    - lineNumber: 69
      expression: "for-each(compression.getExcludedUserAgents())"
      range: "(69,24)-(69,58)"
      evaluatedAs: true
      internalMethodName: "getCompressionPredicates"
    calledSomeStaticInternalMethod: true
