---
modelFingerprint: "223D693EFCD79970B57EED0F780D4A8A"
methods:
- method:
    name: "getHandler"
    signature: "getHandler(io.undertow.server.HttpHandler) : io.undertow.server.HttpHandler"
    sourceCodeSignature: "HttpHandler getHandler(HttpHandler next)"
    instructionFingerprint: "5E877A277AD363419B9432265ECA4E09"
  paths:
  - pathId: "path1"
    testPathName: "getHandlerWhenThisCompressionNotGetEnabled"
    constructorSignature: "<init>(org.springframework.boot.web.server.Compression)\
      \ : void"
    modelFingerprint: "3F5A15464FE09620D7CAE185A3555E3F"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "A8922C58F1363EE43C25DC56F9003769"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "next"
      modelFingerprint: "03A29F3089AF6BE5C3C38D533F8B8F9A"
      index: 2
      valueUuid: "getHandler_httpHandler1"
    - type: "FIELD"
      name: "compression"
      modelFingerprint: "DA53E916D7E6BB705F6CF2FA453CCBEE"
      index: 3
      valueUuid: "<init>_compression1"
      methodExercised:
        target: "this.compression"
        name: "getEnabled"
        parameters: []
        signature: "getEnabled(): boolean"
        returnValueUuid: "getHandler_boolean1"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "301DF687A02B9C7AC0977020AA6669F3"
      index: 4
      valueUuid: "getHandler_httpHandler1"
    uuid: "4d2dfd2c-fa93-3fb7-b24b-408fe7e662c0"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.CompressionHttpHandlerFactory"
        parameters:
        - name: "compression"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.server.Compression"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
              propertiesMap:
                enabled:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: false
                  valueType: "boolean"
                  uuid: "getHandler_boolean1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "org.springframework.boot.web.server.Compression"
            uuid: "<init>_compression1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.web.embedded.undertow.CompressionHttpHandlerFactory"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "io.undertow.server.HttpHandler"
      uuid: "getHandler_httpHandler1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Compression"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
        propertiesMap:
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "getHandler_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "<init>_compression1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getHandler_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "io.undertow.server.HttpHandler"
      uuid: "getHandler_httpHandler1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path4"
    testPathName: "getHandlerWhenCompressionGetExcludedUserAgentsIsNull"
    constructorSignature: "<init>(org.springframework.boot.web.server.Compression)\
      \ : void"
    modelFingerprint: "71212068F49ABCEF2A8D321F500AB4CF"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "918e8fa0-d886-3b43-a345-1378c6333ed8"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "object of type EncodingHandler"
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path2"
    testPathName: "getHandlerWhenCompressionGetExcludedUserAgentsIsNotEmpty"
    constructorSignature: "<init>(org.springframework.boot.web.server.Compression)\
      \ : void"
    modelFingerprint: "9C9BE43C7BE27E3AB546A001469E8455"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "A8922C58F1363EE43C25DC56F9003769"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "next"
      modelFingerprint: "03A29F3089AF6BE5C3C38D533F8B8F9A"
      index: 2
      valueUuid: "getHandler_httpHandler1"
    - type: "FIELD"
      name: "compression"
      modelFingerprint: "6754F232FD2881E3F27E19007DA11B6A"
      index: 3
      valueUuid: "<init>_compression1"
      methodExercised:
        target: "this.compression"
        name: "getEnabled"
        parameters: []
        signature: "getEnabled(): boolean"
        returnValueUuid: "getHandler_boolean1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "compression"
      modelFingerprint: "42589D667F74DC7679D5DA1DE1144921"
      index: 4
      valueUuid: "<init>_compression1"
      methodExercised:
        target: "compression"
        name: "getMinResponseSize"
        parameters: []
        signature: "getMinResponseSize(): DataSize"
        returnValueUuid: "getCompressionPredicates_dataSize1"
        access: 1
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "17EF82362465647EAD3070F1A0BA3928"
      index: 5
      valueUuid: "getCompressionPredicates_dataSize1"
      methodExercised:
        target: "org.springframework.util.unit.DataSize"
        name: "toBytes"
        parameters: []
        signature: "toBytes(): long"
        returnValueUuid: "getCompressionPredicates_long1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "compression"
      modelFingerprint: "76A47B21E6D1A7C1F21A9C9E41BCBC39"
      index: 6
      valueUuid: "<init>_compression1"
      methodExercised:
        target: "compression"
        name: "getMimeTypes"
        parameters: []
        signature: "getMimeTypes(): String[]"
        returnValueUuid: "getCompressionPredicates_string[]1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "compression"
      modelFingerprint: "0C846FA8897382B5DBBC5B42F0BADC18"
      index: 7
      valueUuid: "<init>_compression1"
      methodExercised:
        target: "compression"
        name: "getExcludedUserAgents"
        parameters: []
        signature: "getExcludedUserAgents(): String[]"
        returnValueUuid: "getCompressionPredicates_string[]2"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "compression"
      modelFingerprint: "0C846FA8897382B5DBBC5B42F0BADC18"
      index: 8
      valueUuid: "<init>_compression1"
      methodExercised:
        target: "compression"
        name: "getExcludedUserAgents"
        parameters: []
        signature: "getExcludedUserAgents(): String[]"
        returnValueUuid: "getCompressionPredicates_string[]2"
        access: 1
    - type: "STATIC"
      name: "Predicates"
      modelFingerprint: "EEF1E67EE4D141639E897478971A27E3"
      index: 9
      valueUuid: "uuid4"
      methodExercised:
        target: "io.undertow.predicate.Predicates"
        name: "regex"
        parameters:
        - name: "attribute"
          valueUuid: "getCompressionPredicates_requestHeaderAttribute1"
        - name: "pattern"
          valueUuid: "getCompressionPredicates_string1"
        signature: "regex(RequestHeaderAttribute,String): Predicate"
        returnValueUuid: "getCompressionPredicates_predicate1"
        access: 9
    - type: "STATIC"
      name: "Predicates"
      modelFingerprint: "42B1F0845518BECE37EDF8321BEDB91A"
      index: 10
      valueUuid: "uuid5"
      methodExercised:
        target: "io.undertow.predicate.Predicates"
        name: "not"
        parameters:
        - name: "predicate"
          valueUuid: "getCompressionPredicates_predicate1"
        signature: "not(Predicate): Predicate"
        returnValueUuid: "getCompressionPredicates_predicate2"
        access: 9
    - type: "STATIC"
      name: "Predicates"
      modelFingerprint: "81464BD83BAAD97284303AF6BA6269A2"
      index: 11
      valueUuid: "uuid6"
      methodExercised:
        target: "io.undertow.predicate.Predicates"
        name: "and"
        parameters:
        - name: "predicates"
          valueUuid: "getCompressionPredicates_object[]1"
        signature: "and(Predicate[]): Predicate"
        returnValueUuid: "getHandler_predicate1"
        access: 137
    - type: "LOCAL_VARIABLE"
      name: "repository"
      modelFingerprint: "C63C5700707F950647AA4A51F8300391"
      index: 12
      valueUuid: "getHandler_contentEncodingRepository1"
      methodExercised:
        target: "repository"
        name: "addEncodingHandler"
        parameters:
        - name: "encoding"
          valueUuid: "uuid7"
        - name: "encoder"
          valueUuid: "getHandler_gzipEncodingProvider1"
        - name: "priority"
          valueUuid: "uuid8"
        - name: "enabledPredicate"
          valueUuid: "getHandler_predicate1"
        signature: "addEncodingHandler(String,GzipEncodingProvider,int,Predicate):\
          \ ContentEncodingRepository"
        returnValueUuid: "getHandler_contentEncodingRepository2"
        access: 33
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "07A9B4EE83B885CAD23DCEDEA71D7C4F"
      index: 13
      valueUuid: "getHandler_encodingHandler1"
      methodExercised:
        target: "io.undertow.server.handlers.encoding.EncodingHandler"
        name: "setNext"
        parameters:
        - name: "next"
          valueUuid: "getHandler_httpHandler1"
        signature: "setNext(HttpHandler): EncodingHandler"
        returnValueUuid: "getHandler_encodingHandler2"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7A04DC5A004A5BAB61D58307D46726FF"
      index: 14
      valueUuid: "getHandler_encodingHandler2"
    uuid: "f2eddcf4-047f-3e4d-a740-fdab8d20e36e"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "object of type EncodingHandler, repository"
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.CompressionHttpHandlerFactory"
        parameters:
        - name: "compression"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.server.Compression"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
              propertiesMap:
                minResponseSize:
                  sapientType: "MOCK"
                  valueType: "org.springframework.util.unit.DataSize"
                  uuid: "getCompressionPredicates_dataSize1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                excludedUserAgents:
                  sapientType: "ARRAY"
                  content: !<array>
                    values:
                      0:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: "excludedUserAgentsItem1"
                        valueType: "java.lang.String"
                        uuid: "getCompressionPredicates_string1"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                  valueType: "java.lang.String[]"
                  uuid: "getCompressionPredicates_string[]2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                mimeTypes:
                  sapientType: "ARRAY"
                  content: !<array>
                    values: {}
                  valueType: "java.lang.String[]"
                  uuid: "getCompressionPredicates_string[]1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                enabled:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: true
                  valueType: "boolean"
                  uuid: "getHandler_boolean1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "org.springframework.boot.web.server.Compression"
            uuid: "<init>_compression1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.web.embedded.undertow.CompressionHttpHandlerFactory"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "io.undertow.server.HttpHandler"
      uuid: "getHandler_httpHandler1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Compression"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
        propertiesMap:
          minResponseSize:
            sapientType: "MOCK"
            valueType: "org.springframework.util.unit.DataSize"
            uuid: "getCompressionPredicates_dataSize1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          excludedUserAgents:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "excludedUserAgentsItem1"
                  valueType: "java.lang.String"
                  uuid: "getCompressionPredicates_string1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "java.lang.String[]"
            uuid: "getCompressionPredicates_string[]2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          mimeTypes:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "getCompressionPredicates_string[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "getHandler_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "<init>_compression1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getHandler_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Compression"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
        propertiesMap:
          minResponseSize:
            sapientType: "MOCK"
            valueType: "org.springframework.util.unit.DataSize"
            uuid: "getCompressionPredicates_dataSize1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          excludedUserAgents:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "excludedUserAgentsItem1"
                  valueType: "java.lang.String"
                  uuid: "getCompressionPredicates_string1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "java.lang.String[]"
            uuid: "getCompressionPredicates_string[]2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          mimeTypes:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "getCompressionPredicates_string[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "getHandler_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "<init>_compression1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.unit.DataSize"
      uuid: "getCompressionPredicates_dataSize1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.unit.DataSize"
      uuid: "getCompressionPredicates_dataSize1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "long"
      uuid: "getCompressionPredicates_long1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Compression"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
        propertiesMap:
          minResponseSize:
            sapientType: "MOCK"
            valueType: "org.springframework.util.unit.DataSize"
            uuid: "getCompressionPredicates_dataSize1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          excludedUserAgents:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "excludedUserAgentsItem1"
                  valueType: "java.lang.String"
                  uuid: "getCompressionPredicates_string1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "java.lang.String[]"
            uuid: "getCompressionPredicates_string[]2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          mimeTypes:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "getCompressionPredicates_string[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "getHandler_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "<init>_compression1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "getCompressionPredicates_string[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Compression"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
        propertiesMap:
          minResponseSize:
            sapientType: "MOCK"
            valueType: "org.springframework.util.unit.DataSize"
            uuid: "getCompressionPredicates_dataSize1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          excludedUserAgents:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "excludedUserAgentsItem1"
                  valueType: "java.lang.String"
                  uuid: "getCompressionPredicates_string1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "java.lang.String[]"
            uuid: "getCompressionPredicates_string[]2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          mimeTypes:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "getCompressionPredicates_string[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "getHandler_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "<init>_compression1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "excludedUserAgentsItem1"
            valueType: "java.lang.String"
            uuid: "getCompressionPredicates_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.lang.String[]"
      uuid: "getCompressionPredicates_string[]2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Compression"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
        propertiesMap:
          minResponseSize:
            sapientType: "MOCK"
            valueType: "org.springframework.util.unit.DataSize"
            uuid: "getCompressionPredicates_dataSize1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          excludedUserAgents:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "excludedUserAgentsItem1"
                  valueType: "java.lang.String"
                  uuid: "getCompressionPredicates_string1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "java.lang.String[]"
            uuid: "getCompressionPredicates_string[]2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          mimeTypes:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "getCompressionPredicates_string[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "getHandler_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "<init>_compression1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "excludedUserAgentsItem1"
            valueType: "java.lang.String"
            uuid: "getCompressionPredicates_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.lang.String[]"
      uuid: "getCompressionPredicates_string[]2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "io.undertow.predicate.Predicates"
      uuid: "uuid4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "io.undertow.predicate.Predicate"
      uuid: "getCompressionPredicates_predicate1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "io.undertow.attribute.RequestHeaderAttribute"
        parameters:
        - name: "requestHeader"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "io.undertow.util.HttpString"
              parameters:
              - name: "string"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "User-Agent"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              privateConstructor: false
              createdByTargetCode: true
            valueType: "io.undertow.util.HttpString"
            uuid: "getCompressionPredicates_httpString1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "io.undertow.attribute.RequestHeaderAttribute"
      uuid: "getCompressionPredicates_requestHeaderAttribute1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "excludedUserAgentsItem1"
      valueType: "java.lang.String"
      uuid: "getCompressionPredicates_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "io.undertow.predicate.Predicates"
      uuid: "uuid5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "io.undertow.predicate.Predicate"
      uuid: "getCompressionPredicates_predicate2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "io.undertow.predicate.Predicate"
      uuid: "getCompressionPredicates_predicate1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "io.undertow.predicate.Predicates"
      uuid: "uuid6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "io.undertow.predicate.Predicate"
      uuid: "getHandler_predicate1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "io.undertow.predicate.Predicate"
            uuid: "getCompressionPredicates_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          1:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "io.undertow.predicate.Predicate"
            uuid: "getCompressionPredicates_object2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          2:
            sapientType: "MOCK"
            valueType: "io.undertow.predicate.Predicate"
            uuid: "getCompressionPredicates_predicate2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "io.undertow.predicate.Predicate[]"
      uuid: "getCompressionPredicates_object[]1"
      fixed: false
      collectionUuid: "getCompressionPredicates_arrayList1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "io.undertow.server.handlers.encoding.ContentEncodingRepository"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "io.undertow.server.handlers.encoding.ContentEncodingRepository"
      uuid: "getHandler_contentEncodingRepository1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.server.handlers.encoding.ContentEncodingRepository"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "io.undertow.server.handlers.encoding.ContentEncodingRepository"
            parameters: []
            privateConstructor: false
            createdByTargetCode: true
          valueType: "io.undertow.server.handlers.encoding.ContentEncodingRepository"
          uuid: "getHandler_contentEncodingRepository1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters:
        - name: "encoding"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "gzip"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "encoder"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "io.undertow.server.handlers.encoding.GzipEncodingProvider"
              parameters: []
              privateConstructor: false
              createdByTargetCode: true
            valueType: "io.undertow.server.handlers.encoding.GzipEncodingProvider"
            uuid: "getHandler_gzipEncodingProvider1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "priority"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 50
            valueType: "int"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "enabledPredicate"
          value:
            sapientType: "MOCK"
            valueType: "io.undertow.predicate.Predicate"
            uuid: "getHandler_predicate1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        methodName: "addEncodingHandler"
      valueType: "io.undertow.server.handlers.encoding.ContentEncodingRepository"
      uuid: "getHandler_contentEncodingRepository2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "gzip"
      valueType: "java.lang.String"
      uuid: "uuid7"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "io.undertow.server.handlers.encoding.GzipEncodingProvider"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "io.undertow.server.handlers.encoding.GzipEncodingProvider"
      uuid: "getHandler_gzipEncodingProvider1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 50
      valueType: "int"
      uuid: "uuid8"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "io.undertow.predicate.Predicate"
      uuid: "getHandler_predicate1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "io.undertow.server.handlers.encoding.EncodingHandler"
        parameters:
        - name: "contentEncodingRepository"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "io.undertow.server.handlers.encoding.ContentEncodingRepository"
              parameters: []
              privateConstructor: false
              createdByTargetCode: true
            valueType: "io.undertow.server.handlers.encoding.ContentEncodingRepository"
            uuid: "getHandler_contentEncodingRepository1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "io.undertow.server.handlers.encoding.EncodingHandler"
      uuid: "getHandler_encodingHandler1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.server.handlers.encoding.EncodingHandler"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "io.undertow.server.handlers.encoding.EncodingHandler"
            parameters:
            - name: "contentEncodingRepository"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "io.undertow.server.handlers.encoding.ContentEncodingRepository"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: true
                valueType: "io.undertow.server.handlers.encoding.ContentEncodingRepository"
                uuid: "getHandler_contentEncodingRepository1"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: true
          valueType: "io.undertow.server.handlers.encoding.EncodingHandler"
          uuid: "getHandler_encodingHandler1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters:
        - name: "next"
          value:
            sapientType: "MOCK"
            valueType: "io.undertow.server.HttpHandler"
            uuid: "getHandler_httpHandler1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        methodName: "setNext"
      valueType: "io.undertow.server.handlers.encoding.EncodingHandler"
      uuid: "getHandler_encodingHandler2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "io.undertow.server.HttpHandler"
      uuid: "getHandler_httpHandler1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.server.handlers.encoding.EncodingHandler"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "io.undertow.server.handlers.encoding.EncodingHandler"
            parameters:
            - name: "contentEncodingRepository"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "io.undertow.server.handlers.encoding.ContentEncodingRepository"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: true
                valueType: "io.undertow.server.handlers.encoding.ContentEncodingRepository"
                uuid: "getHandler_contentEncodingRepository1"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: true
          valueType: "io.undertow.server.handlers.encoding.EncodingHandler"
          uuid: "getHandler_encodingHandler1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters:
        - name: "next"
          value:
            sapientType: "MOCK"
            valueType: "io.undertow.server.HttpHandler"
            uuid: "getHandler_httpHandler1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        methodName: "setNext"
      valueType: "io.undertow.server.handlers.encoding.EncodingHandler"
      uuid: "getHandler_encodingHandler2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path3"
    testPathName: "getHandlerWhenCompressionGetExcludedUserAgentsIsEmpty"
    constructorSignature: "<init>(org.springframework.boot.web.server.Compression)\
      \ : void"
    modelFingerprint: "5B829198303F77F69B97EE2E93C86F41"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "5e01dbee-5b16-33a2-b341-929e91a2e626"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "object of type EncodingHandler"
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
