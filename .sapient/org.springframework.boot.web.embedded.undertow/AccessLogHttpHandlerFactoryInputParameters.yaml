---
modelFingerprint: "4A436A129F083A1FA0CD70C38E43762E"
methods:
- method:
    name: "getHandler"
    signature: "getHandler(io.undertow.server.HttpHandler) : io.undertow.server.HttpHandler"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.io.IOException"
    instructionFingerprint: "A73B3F0218BD42780AEF1A1D2973A970"
  paths:
  - pathId: "path1"
    testPathName: "getHandlerWhenThisDirectoryNotMkdirsThrowsIllegalStateException"
    constructorSignature: "<init>(java.io.File,java.lang.String,java.lang.String,java.lang.String,boolean)\
      \ : void"
    filledByUser: false
    modelFingerprint: "7468C14216339E798AACB02E1A652852"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "6aa860a4-1793-3491-989b-45edbd46757d"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.io.File.isDirectory() : boolean"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path6"
    testPathName: "getHandlerWhenThisDirectoryNotIsDirectoryAndThisDirectoryNotMkdirsThrowsIllegalStateException"
    constructorSignature: "<init>(java.io.File,java.lang.String,java.lang.String,java.lang.String,boolean)\
      \ : void"
    filledByUser: false
    modelFingerprint: "9DFAFDB0FA2D1C16B25C80A2C303BF33"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4C3127F63EE0C6518EDC965FABF61F62"
      index: 1
      ignored: false
      valueUuid: "target"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "next"
      modelFingerprint: "03A29F3089AF6BE5C3C38D533F8B8F9A"
      index: 2
      ignored: false
      valueUuid: "getHandler_httpHandler1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "E72728D626ED1B4C4EB23290FFC5BEB4"
      index: 3
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "uuid6"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "state"
        parameters:
        - name: "expression"
          valueUuid: "uuid4"
        - name: "message"
          valueUuid: "uuid5"
        signature: "state(boolean,String): void"
        returnValueUuid: "createAccessLogDirectoryIfNecessary_void1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "1A3C66A630D71E94F3210DEA5FF12CDF"
      index: 4
      ignored: false
      valueUuid: "createAccessLogDirectoryIfNecessary_illegalStateException1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "22ad12ed-eff6-332d-910d-1e1de402d622"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.io.File.isDirectory() : boolean"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.AccessLogHttpHandlerFactory"
        parameters:
        - name: "directory"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.File"
              parameters:
              - name: "pathname"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pathname1"
                  valueType: "java.lang.String"
                  uuid: "<init>_file1-pathname"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.io.File"
              parameters:
              - name: "pathname"
                value:
                  sapientType: "BASIC"
                  valueType: "java.lang.String"
                  uuid: "<init>_file1-pathname"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.io.File"
            uuid: "<init>_file1"
            fixed: true
            nameForMock: "<init>_file1"
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "pattern"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pattern1"
            valueType: "java.lang.String"
            uuid: "<init>_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "prefix"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "prefix1"
            valueType: "java.lang.String"
            uuid: "<init>_string2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "suffix"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "suffix1"
            valueType: "java.lang.String"
            uuid: "<init>_string3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "rotate"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.springframework.boot.web.embedded.undertow.AccessLogHttpHandlerFactory"
        parameters:
        - name: "directory"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<new>
              target: "java.io.File"
              parameters:
              - name: "pathname"
                value:
                  sapientType: "BASIC"
                  valueType: "java.lang.String"
                  uuid: "<init>_file1-pathname"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.io.File"
            uuid: "<init>_file1"
            fixed: true
            nameForMock: "<init>_file1"
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "pattern"
          value:
            sapientType: "BASIC"
            valueType: "java.lang.String"
            uuid: "<init>_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "prefix"
          value:
            sapientType: "BASIC"
            valueType: "java.lang.String"
            uuid: "<init>_string2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "suffix"
          value:
            sapientType: "BASIC"
            valueType: "java.lang.String"
            uuid: "<init>_string3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "rotate"
          value:
            sapientType: "BASIC"
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.web.embedded.undertow.AccessLogHttpHandlerFactory"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "io.undertow.server.HttpHandler"
      uuid: "getHandler_httpHandler1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "createAccessLogDirectoryIfNecessary_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid4"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Access log directory is not set"
      valueType: "java.lang.String"
      uuid: "uuid5"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "s"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Failed to create access log directory '<init>_file1'"
            suggestedContent: !<regular>
              value: "Failed to create access log directory '<init>_file1'"
            valueType: "java.lang.String"
            uuid: "createAccessLogDirectoryIfNecessary_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      suggestedContent: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "s"
          value:
            sapientType: "BASIC"
            suggestedContent: !<regular>
              value: "Failed to create access log directory '<init>_file1'"
            valueType: "java.lang.String"
            uuid: "createAccessLogDirectoryIfNecessary_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.lang.IllegalStateException"
      uuid: "createAccessLogDirectoryIfNecessary_illegalStateException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "getHandlerWhenThisPatternIsNotNull"
    constructorSignature: "<init>(java.io.File,java.lang.String,java.lang.String,java.lang.String,boolean)\
      \ : void"
    filledByUser: false
    modelFingerprint: "37B4F81B7363E1E5C50CDBABD11E365C"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "29E54882CBAFBC3670F083D96532DBDB"
      index: 1
      ignored: false
      valueUuid: "target"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "next"
      modelFingerprint: "03A29F3089AF6BE5C3C38D533F8B8F9A"
      index: 2
      ignored: false
      valueUuid: "getHandler_httpHandler1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "FB4F4C0448F0DB4F5B623A042A1A11CB"
      index: 3
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "uuid9"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "state"
        parameters:
        - name: "expression"
          valueUuid: "uuid7"
        - name: "message"
          valueUuid: "uuid8"
        signature: "state(boolean,String): void"
        returnValueUuid: "createAccessLogDirectoryIfNecessary_void1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Xnio"
      modelFingerprint: "251A13A36375A8C0B3CB38FB2D98EFE0"
      index: 4
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "uuid10"
      methodExercised:
        target: "org.xnio.Xnio"
        name: "getInstance"
        parameters:
        - name: "classLoader"
          valueUuid: "createWorker_classLoader1"
        signature: "getInstance(ClassLoader): Xnio"
        returnValueUuid: "createWorker_xnio1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "2424FCBE2C514613773B380D3F5DA9AA"
      index: 5
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "createWorker_optionMap.Builder1"
      methodExercised:
        target: "org.xnio.OptionMap$Builder"
        name: "set"
        parameters:
        - name: "key"
          valueUuid: "createWorker_option1"
        - name: "value"
          valueUuid: "uuid11"
        signature: "set(Option,boolean): OptionMap$Builder"
        returnValueUuid: "createWorker_optionMap.Builder2"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E045FB91AB12F224A234A9DC91E70490"
      index: 6
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "createWorker_optionMap.Builder2"
      methodExercised:
        target: "org.xnio.OptionMap$Builder"
        name: "getMap"
        parameters: []
        signature: "getMap(): OptionMap"
        returnValueUuid: "createWorker_optionMap1"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "xnio"
      modelFingerprint: "11636744D16D8C53486F0ADFD30582FE"
      index: 7
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "createWorker_xnio1"
      methodExercised:
        target: "xnio"
        name: "createWorker"
        parameters:
        - name: "optionMap"
          valueUuid: "createWorker_optionMap1"
        throwsExceptions:
        - "java.io.IOException"
        - "java.lang.IllegalArgumentException"
        signature: "createWorker(OptionMap): XnioWorker throws java.io.IOException,java.lang.IllegalArgumentException"
        returnValueUuid: "createWorker_xnioWorker1"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "6AA39C1133B3756B9C5BA656EA13D60D"
      index: 8
      ignored: false
      valueUuid: "getHandler_accessLogHttpHandlerFactory.ClosableAccessLogHandler1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "d42715f4-3b23-304a-ae0d-1f1030249d3c"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.io.File.isDirectory() : boolean"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.AccessLogHttpHandlerFactory"
        parameters:
        - name: "directory"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.File"
              parameters:
              - name: "pathname"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pathname1"
                  valueType: "java.lang.String"
                  uuid: "<init>_file1-pathname"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.io.File"
              parameters:
              - name: "pathname"
                value:
                  sapientType: "BASIC"
                  valueType: "java.lang.String"
                  uuid: "<init>_file1-pathname"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.io.File"
            uuid: "<init>_file1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "pattern"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pattern1"
            valueType: "java.lang.String"
            uuid: "<init>_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "prefix"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "prefix1"
            valueType: "java.lang.String"
            uuid: "<init>_string2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "suffix"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "suffix1"
            valueType: "java.lang.String"
            uuid: "<init>_string3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "rotate"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.springframework.boot.web.embedded.undertow.AccessLogHttpHandlerFactory"
        parameters:
        - name: "directory"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<new>
              target: "java.io.File"
              parameters:
              - name: "pathname"
                value:
                  sapientType: "BASIC"
                  valueType: "java.lang.String"
                  uuid: "<init>_file1-pathname"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.io.File"
            uuid: "<init>_file1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "pattern"
          value:
            sapientType: "BASIC"
            valueType: "java.lang.String"
            uuid: "<init>_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "prefix"
          value:
            sapientType: "BASIC"
            valueType: "java.lang.String"
            uuid: "<init>_string2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "suffix"
          value:
            sapientType: "BASIC"
            valueType: "java.lang.String"
            uuid: "<init>_string3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "rotate"
          value:
            sapientType: "BASIC"
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.web.embedded.undertow.AccessLogHttpHandlerFactory"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "io.undertow.server.HttpHandler"
      uuid: "getHandler_httpHandler1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid9"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "createAccessLogDirectoryIfNecessary_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid7"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Access log directory is not set"
      valueType: "java.lang.String"
      uuid: "uuid8"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.xnio.Xnio"
      uuid: "uuid10"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.xnio.Xnio"
      uuid: "createWorker_xnio1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.ClassLoader"
        localVariableValue:
          sapientType: "CLASS"
          content: !<regular>
            value: "io.undertow.Undertow"
          valueType: "java.lang.Class"
          genericValueType: "io.undertow.Undertow"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "getClassLoader"
      suggestedContent: !<method_return_from_value>
        target: "java.lang.ClassLoader"
        localVariableValue:
          sapientType: "CLASS"
          content: !<regular>
            value: "io.undertow.Undertow"
          valueType: "java.lang.Class"
          genericValueType: "io.undertow.Undertow"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "getClassLoader"
      valueType: "java.lang.ClassLoader"
      uuid: "createWorker_classLoader1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.xnio.OptionMap$Builder"
      uuid: "createWorker_optionMap.Builder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.xnio.OptionMap$Builder"
      uuid: "createWorker_optionMap.Builder2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.xnio.Options"
        fieldName: "THREAD_DAEMON"
      suggestedContent: !<static_field_return>
        target: "org.xnio.Options"
        fieldName: "THREAD_DAEMON"
      valueType: "org.xnio.Option"
      genericValueType: "java.lang.Boolean"
      uuid: "createWorker_option1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid11"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.xnio.OptionMap$Builder"
      uuid: "createWorker_optionMap.Builder2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.xnio.OptionMap"
      uuid: "createWorker_optionMap1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.xnio.Xnio"
      uuid: "createWorker_xnio1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.xnio.XnioWorker"
      uuid: "createWorker_xnioWorker1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.xnio.OptionMap"
      uuid: "createWorker_optionMap1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NOT_NULL"
      valueType: "io.undertow.server.HttpHandler"
      uuid: "getHandler_accessLogHttpHandlerFactory.ClosableAccessLogHandler1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path3"
    testPathName: "getHandlerWhenThisPatternIsNull"
    constructorSignature: "<init>(java.io.File,java.lang.String,java.lang.String,java.lang.String,boolean)\
      \ : void"
    filledByUser: false
    modelFingerprint: "0B9F88E1D9B823BC9502258E7239C508"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "eda27521-fdf8-360f-96b0-5cecb89c6fc5"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.io.File.isDirectory() : boolean"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path4"
    testPathName: "getHandlerWhenThisPrefixIsNullAndThisPatternIsNotNull"
    constructorSignature: "<init>(java.io.File,java.lang.String,java.lang.String,java.lang.String,boolean)\
      \ : void"
    filledByUser: false
    modelFingerprint: "833DC59F8AB09819E0289180A55DF361"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "529154c4-4e29-3570-b1ef-064f120ad4d6"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.io.File.isDirectory() : boolean"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path5"
    testPathName: "getHandlerWhenThisPrefixIsNullAndThisPatternIsNull"
    constructorSignature: "<init>(java.io.File,java.lang.String,java.lang.String,java.lang.String,boolean)\
      \ : void"
    filledByUser: false
    modelFingerprint: "E9C89DAD9348E68BDB7E0E0305C8AB6E"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "0E07E5A05F98BCBBE0D5CE392838A0D0"
      index: 1
      ignored: false
      valueUuid: "target"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "next"
      modelFingerprint: "03A29F3089AF6BE5C3C38D533F8B8F9A"
      index: 2
      ignored: false
      valueUuid: "getHandler_httpHandler1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "FB4F4C0448F0DB4F5B623A042A1A11CB"
      index: 3
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "uuid24"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "state"
        parameters:
        - name: "expression"
          valueUuid: "uuid22"
        - name: "message"
          valueUuid: "uuid23"
        signature: "state(boolean,String): void"
        returnValueUuid: "createAccessLogDirectoryIfNecessary_void1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Xnio"
      modelFingerprint: "251A13A36375A8C0B3CB38FB2D98EFE0"
      index: 4
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "uuid25"
      methodExercised:
        target: "org.xnio.Xnio"
        name: "getInstance"
        parameters:
        - name: "classLoader"
          valueUuid: "createWorker_classLoader1"
        signature: "getInstance(ClassLoader): Xnio"
        returnValueUuid: "createWorker_xnio1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "2424FCBE2C514613773B380D3F5DA9AA"
      index: 5
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "createWorker_optionMap.Builder1"
      methodExercised:
        target: "org.xnio.OptionMap$Builder"
        name: "set"
        parameters:
        - name: "key"
          valueUuid: "createWorker_option1"
        - name: "value"
          valueUuid: "uuid26"
        signature: "set(Option,boolean): OptionMap$Builder"
        returnValueUuid: "createWorker_optionMap.Builder2"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E045FB91AB12F224A234A9DC91E70490"
      index: 6
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "createWorker_optionMap.Builder2"
      methodExercised:
        target: "org.xnio.OptionMap$Builder"
        name: "getMap"
        parameters: []
        signature: "getMap(): OptionMap"
        returnValueUuid: "createWorker_optionMap1"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "xnio"
      modelFingerprint: "11636744D16D8C53486F0ADFD30582FE"
      index: 7
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "createWorker_xnio1"
      methodExercised:
        target: "xnio"
        name: "createWorker"
        parameters:
        - name: "optionMap"
          valueUuid: "createWorker_optionMap1"
        throwsExceptions:
        - "java.io.IOException"
        - "java.lang.IllegalArgumentException"
        signature: "createWorker(OptionMap): XnioWorker throws java.io.IOException,java.lang.IllegalArgumentException"
        returnValueUuid: "createWorker_xnioWorker1"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "6AA39C1133B3756B9C5BA656EA13D60D"
      index: 8
      ignored: false
      valueUuid: "getHandler_accessLogHttpHandlerFactory.ClosableAccessLogHandler1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "16d98ffc-9672-33b9-b4f7-e2a62d07dad2"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.io.File.isDirectory() : boolean"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.AccessLogHttpHandlerFactory"
        parameters:
        - name: "directory"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.File"
              parameters:
              - name: "pathname"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pathname1"
                  valueType: "java.lang.String"
                  uuid: "<init>_file1-pathname"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.io.File"
              parameters:
              - name: "pathname"
                value:
                  sapientType: "BASIC"
                  valueType: "java.lang.String"
                  uuid: "<init>_file1-pathname"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.io.File"
            uuid: "<init>_file1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "pattern"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "<init>_string1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "prefix"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "<init>_string2"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "suffix"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "suffix1"
            valueType: "java.lang.String"
            uuid: "<init>_string3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "rotate"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.springframework.boot.web.embedded.undertow.AccessLogHttpHandlerFactory"
        parameters:
        - name: "directory"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<new>
              target: "java.io.File"
              parameters:
              - name: "pathname"
                value:
                  sapientType: "BASIC"
                  valueType: "java.lang.String"
                  uuid: "<init>_file1-pathname"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.io.File"
            uuid: "<init>_file1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "pattern"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "<init>_string1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "prefix"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "<init>_string2"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "suffix"
          value:
            sapientType: "BASIC"
            valueType: "java.lang.String"
            uuid: "<init>_string3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "rotate"
          value:
            sapientType: "BASIC"
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.web.embedded.undertow.AccessLogHttpHandlerFactory"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "io.undertow.server.HttpHandler"
      uuid: "getHandler_httpHandler1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid24"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "createAccessLogDirectoryIfNecessary_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid22"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Access log directory is not set"
      valueType: "java.lang.String"
      uuid: "uuid23"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.xnio.Xnio"
      uuid: "uuid25"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.xnio.Xnio"
      uuid: "createWorker_xnio1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.ClassLoader"
        localVariableValue:
          sapientType: "CLASS"
          content: !<regular>
            value: "io.undertow.Undertow"
          valueType: "java.lang.Class"
          genericValueType: "io.undertow.Undertow"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "getClassLoader"
      suggestedContent: !<method_return_from_value>
        target: "java.lang.ClassLoader"
        localVariableValue:
          sapientType: "CLASS"
          content: !<regular>
            value: "io.undertow.Undertow"
          valueType: "java.lang.Class"
          genericValueType: "io.undertow.Undertow"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "getClassLoader"
      valueType: "java.lang.ClassLoader"
      uuid: "createWorker_classLoader1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.xnio.OptionMap$Builder"
      uuid: "createWorker_optionMap.Builder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.xnio.OptionMap$Builder"
      uuid: "createWorker_optionMap.Builder2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.xnio.Options"
        fieldName: "THREAD_DAEMON"
      suggestedContent: !<static_field_return>
        target: "org.xnio.Options"
        fieldName: "THREAD_DAEMON"
      valueType: "org.xnio.Option"
      genericValueType: "java.lang.Boolean"
      uuid: "createWorker_option1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid26"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.xnio.OptionMap$Builder"
      uuid: "createWorker_optionMap.Builder2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.xnio.OptionMap"
      uuid: "createWorker_optionMap1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.xnio.Xnio"
      uuid: "createWorker_xnio1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.xnio.XnioWorker"
      uuid: "createWorker_xnioWorker1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.xnio.OptionMap"
      uuid: "createWorker_optionMap1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NOT_NULL"
      valueType: "io.undertow.server.HttpHandler"
      uuid: "getHandler_accessLogHttpHandlerFactory.ClosableAccessLogHandler1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path7"
    testPathName: "getHandlerWhenThisDirectoryMkdirsAndThisPrefixIsNullAndThisPatternIsNull"
    constructorSignature: "<init>(java.io.File,java.lang.String,java.lang.String,java.lang.String,boolean)\
      \ : void"
    filledByUser: false
    modelFingerprint: "C4115471A5195D40657C302045544E81"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "c5df634e-8fa8-3f44-8b52-cf0349ca89d3"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.io.File.isDirectory() : boolean"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path8"
    testPathName: "getHandlerWhenCaughtIOExceptionThrowsIllegalStateException"
    constructorSignature: "<init>(java.io.File,java.lang.String,java.lang.String,java.lang.String,boolean)\
      \ : void"
    filledByUser: false
    modelFingerprint: "9B2B2E2033EB3F598190DCC4F460DD97"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.io.IOException"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "29E54882CBAFBC3670F083D96532DBDB"
      index: 1
      ignored: false
      valueUuid: "target"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "next"
      modelFingerprint: "03A29F3089AF6BE5C3C38D533F8B8F9A"
      index: 2
      ignored: false
      valueUuid: "getHandler_httpHandler1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "FB4F4C0448F0DB4F5B623A042A1A11CB"
      index: 3
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "uuid34"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "state"
        parameters:
        - name: "expression"
          valueUuid: "uuid32"
        - name: "message"
          valueUuid: "uuid33"
        signature: "state(boolean,String): void"
        returnValueUuid: "createAccessLogDirectoryIfNecessary_void1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Xnio"
      modelFingerprint: "251A13A36375A8C0B3CB38FB2D98EFE0"
      index: 4
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "uuid35"
      methodExercised:
        target: "org.xnio.Xnio"
        name: "getInstance"
        parameters:
        - name: "classLoader"
          valueUuid: "createWorker_classLoader1"
        signature: "getInstance(ClassLoader): Xnio"
        returnValueUuid: "createWorker_xnio1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "2424FCBE2C514613773B380D3F5DA9AA"
      index: 5
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "createWorker_optionMap.Builder1"
      methodExercised:
        target: "org.xnio.OptionMap$Builder"
        name: "set"
        parameters:
        - name: "key"
          valueUuid: "createWorker_option1"
        - name: "value"
          valueUuid: "uuid36"
        signature: "set(Option,boolean): OptionMap$Builder"
        returnValueUuid: "createWorker_optionMap.Builder2"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E045FB91AB12F224A234A9DC91E70490"
      index: 6
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "createWorker_optionMap.Builder2"
      methodExercised:
        target: "org.xnio.OptionMap$Builder"
        name: "getMap"
        parameters: []
        signature: "getMap(): OptionMap"
        returnValueUuid: "createWorker_optionMap1"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "xnio"
      modelFingerprint: "11636744D16D8C53486F0ADFD30582FE"
      index: 7
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "createWorker_xnio1"
      methodExercised:
        target: "xnio"
        name: "createWorker"
        parameters:
        - name: "optionMap"
          valueUuid: "createWorker_optionMap1"
        throwsExceptions:
        - "java.io.IOException"
        - "java.lang.IllegalArgumentException"
        signature: "createWorker(OptionMap): XnioWorker throws java.io.IOException,java.lang.IllegalArgumentException"
        returnValueUuid: "createWorker_xnioWorker1"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7CC3F5CD8852B59A760B750ED14C572C"
      index: 8
      ignored: false
      valueUuid: "getHandler_illegalStateException1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "bd67e6a6-d7e7-3ab0-a534-a8fbb6f3dcb3"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.io.File.isDirectory() : boolean"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.AccessLogHttpHandlerFactory"
        parameters:
        - name: "directory"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.File"
              parameters:
              - name: "pathname"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pathname1"
                  valueType: "java.lang.String"
                  uuid: "<init>_file1-pathname"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.io.File"
              parameters:
              - name: "pathname"
                value:
                  sapientType: "BASIC"
                  valueType: "java.lang.String"
                  uuid: "<init>_file1-pathname"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.io.File"
            uuid: "<init>_file1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "pattern"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pattern1"
            valueType: "java.lang.String"
            uuid: "<init>_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "prefix"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "prefix1"
            valueType: "java.lang.String"
            uuid: "<init>_string2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "suffix"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "suffix1"
            valueType: "java.lang.String"
            uuid: "<init>_string3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "rotate"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.springframework.boot.web.embedded.undertow.AccessLogHttpHandlerFactory"
        parameters:
        - name: "directory"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<new>
              target: "java.io.File"
              parameters:
              - name: "pathname"
                value:
                  sapientType: "BASIC"
                  valueType: "java.lang.String"
                  uuid: "<init>_file1-pathname"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.io.File"
            uuid: "<init>_file1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "pattern"
          value:
            sapientType: "BASIC"
            valueType: "java.lang.String"
            uuid: "<init>_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "prefix"
          value:
            sapientType: "BASIC"
            valueType: "java.lang.String"
            uuid: "<init>_string2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "suffix"
          value:
            sapientType: "BASIC"
            valueType: "java.lang.String"
            uuid: "<init>_string3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "rotate"
          value:
            sapientType: "BASIC"
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.web.embedded.undertow.AccessLogHttpHandlerFactory"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "io.undertow.server.HttpHandler"
      uuid: "getHandler_httpHandler1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid34"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "createAccessLogDirectoryIfNecessary_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid32"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Access log directory is not set"
      valueType: "java.lang.String"
      uuid: "uuid33"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.xnio.Xnio"
      uuid: "uuid35"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.xnio.Xnio"
      uuid: "createWorker_xnio1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.ClassLoader"
        localVariableValue:
          sapientType: "CLASS"
          content: !<regular>
            value: "io.undertow.Undertow"
          valueType: "java.lang.Class"
          genericValueType: "io.undertow.Undertow"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "getClassLoader"
      suggestedContent: !<method_return_from_value>
        target: "java.lang.ClassLoader"
        localVariableValue:
          sapientType: "CLASS"
          content: !<regular>
            value: "io.undertow.Undertow"
          valueType: "java.lang.Class"
          genericValueType: "io.undertow.Undertow"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "getClassLoader"
      valueType: "java.lang.ClassLoader"
      uuid: "createWorker_classLoader1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.xnio.OptionMap$Builder"
      uuid: "createWorker_optionMap.Builder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.xnio.OptionMap$Builder"
      uuid: "createWorker_optionMap.Builder2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.xnio.Options"
        fieldName: "THREAD_DAEMON"
      suggestedContent: !<static_field_return>
        target: "org.xnio.Options"
        fieldName: "THREAD_DAEMON"
      valueType: "org.xnio.Option"
      genericValueType: "java.lang.Boolean"
      uuid: "createWorker_option1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid36"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.xnio.OptionMap$Builder"
      uuid: "createWorker_optionMap.Builder2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.xnio.OptionMap"
      uuid: "createWorker_optionMap1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.xnio.Xnio"
      uuid: "createWorker_xnio1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.xnio.XnioWorker"
      uuid: "createWorker_xnioWorker1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.xnio.OptionMap"
      uuid: "createWorker_optionMap1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Failed to create AccessLogHandler"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.IOException"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.io.IOException"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.io.IOException"
            uuid: "getHandler_iOException1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      suggestedContent: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Failed to create AccessLogHandler"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "cause"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<new>
              target: "java.io.IOException"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.io.IOException"
            uuid: "getHandler_iOException1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.lang.IllegalStateException"
      uuid: "getHandler_illegalStateException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
