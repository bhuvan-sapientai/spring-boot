---
modelFingerprint: "3C3E374124DD40F04BA50462A1E70613"
targetClass:
  fullClassName: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
methods:
- method:
    name: "setBuilderCustomizers"
    sourceCodeSignature: "void setBuilderCustomizers(Collection<? extends UndertowBuilderCustomizer>\
      \ customizers)"
    returnType: "void"
    parameters:
    - name: "customizers"
      type: "java.util.Collection"
    instructionFingerprint: "9CAF32C9D8C6A07F7D93E14928C2CC6C"
  paths:
  - pathId: "path1"
    testPathName: "setBuilderCustomizersTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "BC87C2BA41626207991A005B98648457"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D0537F57C0747EC67E4D50ABD3DCCBDC"
      valueUuid: "target"
    - type: "INPUT"
      name: "customizers"
      modelFingerprint: "D6CDE84A8422B25B88E32F02CA69A859"
      valueUuid: "customizers"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "660067569B9E81496B4AE0FD78CE5F5B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid1):void3"
        staticAccess: true
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "5F8EAD4E3D4C6FDB5F8054DFB515C1FF"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "setBuilderCustomizers(customizers:customizers):void5"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.delegate.setBuilderCustomizers(customizers);"
      lineNumber: 138
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: setBuilderCustomizers"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/A"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "? extends org.springframework.boot.web.embedded.undertow.UndertowBuilderCustomizer"
      uuid: "customizers"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "? extends org.springframework.boot.web.embedded.undertow.UndertowBuilderCustomizer"
      uuid: "customizers"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "addBuilderCustomizers"
    sourceCodeSignature: "void addBuilderCustomizers(UndertowBuilderCustomizer...\
      \ customizers)"
    returnType: "void"
    parameters:
    - name: "customizers"
      type: "org.springframework.boot.web.embedded.undertow.UndertowBuilderCustomizer[]"
    instructionFingerprint: "58E24B84D62C9CE1334244E65CB3E08B"
  paths:
  - pathId: "path1"
    testPathName: "addBuilderCustomizersTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "0EE2F7A20C4EE2A1F2C9964D661E519D"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D0537F57C0747EC67E4D50ABD3DCCBDC"
      valueUuid: "target"
    - type: "INPUT"
      name: "customizers"
      modelFingerprint: "445B448265B6941075307DDA239DDC7D"
      valueUuid: "customizers"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "660067569B9E81496B4AE0FD78CE5F5B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid2):void3"
        staticAccess: true
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "DF52889CE84D2077B464DA671D3CA2D2"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "addBuilderCustomizers(customizers:customizers):void5"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.delegate.addBuilderCustomizers(customizers);"
      lineNumber: 143
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: addBuilderCustomizers"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/A"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowBuilderCustomizer[]"
      uuid: "customizers"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowBuilderCustomizer[]"
      uuid: "customizers"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "getBuilderCustomizers"
    sourceCodeSignature: "Collection<UndertowBuilderCustomizer> getBuilderCustomizers()"
    returnType: "java.util.Collection"
    genericReturnType: "org.springframework.boot.web.embedded.undertow.UndertowBuilderCustomizer"
    instructionFingerprint: "7F7E9E7B033DCD4500D01418116898FB"
  paths:
  - pathId: "path1"
    testPathName: "getBuilderCustomizersTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "0B43A30122CFF089CB4326999D66CD3F"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D0537F57C0747EC67E4D50ABD3DCCBDC"
      valueUuid: "target"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "660067569B9E81496B4AE0FD78CE5F5B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid3):void3"
        staticAccess: true
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "4A4014C091FE71F5D4D021EAAE996154"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "getBuilderCustomizers():collection"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "1A439E434E60ADBF99900092615BE6F9"
      valueUuid: "collection"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.delegate.getBuilderCustomizers();"
      lineNumber: 152
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: getBuilderCustomizers"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/A"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "org.springframework.boot.web.embedded.undertow.UndertowBuilderCustomizer"
      uuid: "collection"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "org.springframework.boot.web.embedded.undertow.UndertowBuilderCustomizer"
      uuid: "collection"
- method:
    name: "setBufferSize"
    sourceCodeSignature: "void setBufferSize(Integer bufferSize)"
    returnType: "void"
    parameters:
    - name: "bufferSize"
      type: "java.lang.Integer"
    instructionFingerprint: "DB8D134FD21370200FD8C013F99C1A33"
  paths:
  - pathId: "path1"
    testPathName: "setBufferSizeTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "27CF71BD01738F37B82F06629DD81C1C"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7294612D6569323DF735ACC064A0795B"
      valueUuid: "target"
    - type: "INPUT"
      name: "bufferSize"
      modelFingerprint: "46515B69AFBF05E4F11BCF4FFA9C4C42"
      valueUuid: "bufferSize"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "F3F9B00A6EE9C407643D1553C0B832C7"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid1):void"
        staticAccess: true
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "DC9C7C203352921C255F62219EA2760B"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "setBufferSize(bufferSize:bufferSize):void3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.delegate.setBufferSize(bufferSize);"
      lineNumber: 157
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: setBufferSize"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/example"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 8080
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1024
      valueType: "java.lang.Integer"
      uuid: "bufferSize"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings2"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/example"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 1024
      valueType: "java.lang.Integer"
      uuid: "bufferSize"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "setIoThreads"
    sourceCodeSignature: "void setIoThreads(Integer ioThreads)"
    returnType: "void"
    parameters:
    - name: "ioThreads"
      type: "java.lang.Integer"
    instructionFingerprint: "67AC4E2D22D5366815F008B2BB3647C7"
  paths:
  - pathId: "path1"
    testPathName: "setIoThreadsTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "D162127FC5A4B805C79AEB4FC54CE517"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7294612D6569323DF735ACC064A0795B"
      valueUuid: "target"
    - type: "INPUT"
      name: "ioThreads"
      modelFingerprint: "A28D41013FFEFB6336C118367EAF9BDF"
      valueUuid: "ioThreads"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "F3F9B00A6EE9C407643D1553C0B832C7"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid1):void"
        staticAccess: true
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "87011B9E8EA6DA8ADA1F317171943C46"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "setIoThreads(ioThreads:ioThreads):void3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.delegate.setIoThreads(ioThreads);"
      lineNumber: 162
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: setIoThreads"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/example"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 8080
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 4
      valueType: "java.lang.Integer"
      uuid: "ioThreads"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings2"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/example"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 4
      valueType: "java.lang.Integer"
      uuid: "ioThreads"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "setWorkerThreads"
    sourceCodeSignature: "void setWorkerThreads(Integer workerThreads)"
    returnType: "void"
    parameters:
    - name: "workerThreads"
      type: "java.lang.Integer"
    instructionFingerprint: "65A6EDBA329DDFC15E31E68D5B65EEFD"
  paths:
  - pathId: "path1"
    testPathName: "setWorkerThreadsTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "29DC012A6E67F633CD44E67995E4DE25"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7294612D6569323DF735ACC064A0795B"
      valueUuid: "target"
    - type: "INPUT"
      name: "workerThreads"
      modelFingerprint: "D5D0ECAC16AAFDBC682E0355B34E5661"
      valueUuid: "workerThreads"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "F3F9B00A6EE9C407643D1553C0B832C7"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid1):void"
        staticAccess: true
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "F116AEEC1B7E99F5BC9F469476DEFE52"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "setWorkerThreads(workerThreads:workerThreads):void3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.delegate.setWorkerThreads(workerThreads);"
      lineNumber: 167
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: setWorkerThreads"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/example"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 8080
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 10
      valueType: "java.lang.Integer"
      uuid: "workerThreads"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings2"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/example"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 10
      valueType: "java.lang.Integer"
      uuid: "workerThreads"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "setUseDirectBuffers"
    sourceCodeSignature: "void setUseDirectBuffers(Boolean directBuffers)"
    returnType: "void"
    parameters:
    - name: "directBuffers"
      type: "java.lang.Boolean"
    instructionFingerprint: "DF6C9C75C2E5D45B7039F40663D00607"
  paths:
  - pathId: "path1"
    testPathName: "setUseDirectBuffersTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "59AB8D50FF607A909D228A963D0D1E6A"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7A7B4ED046319C3907C180A288D763B6"
      valueUuid: "target"
    - type: "INPUT"
      name: "directBuffers"
      modelFingerprint: "9D900241C5F64F24E1D95FAB68E06BF4"
      valueUuid: "directBuffers"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "4DFE3C518041EE18A445C74771EE09A4"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid1):void"
        staticAccess: true
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "7B7C39C15C8DA0AD51124C2031104B86"
      valueUuid: "fieldUndertowWebServerFactoryDelegate"
      methodExercised:
        expression: "setUseDirectBuffers(directBuffers:directBuffers):void2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "NO_CONSTRUCTOR_PATH_WITHOUT_EXCEPTION"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "example"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 8080
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "java.lang.Boolean"
      uuid: "directBuffers"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings2"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "example"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "fieldUndertowWebServerFactoryDelegate"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "java.lang.Boolean"
      uuid: "directBuffers"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "setAccessLogDirectory"
    sourceCodeSignature: "void setAccessLogDirectory(File accessLogDirectory)"
    returnType: "void"
    parameters:
    - name: "accessLogDirectory"
      type: "java.io.File"
    instructionFingerprint: "07FFED52E5D77A089C9969EF93CD08B9"
  paths:
  - pathId: "path1"
    testPathName: "setAccessLogDirectoryTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "B4822BA3DC92926F0305569DF5439033"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D0537F57C0747EC67E4D50ABD3DCCBDC"
      valueUuid: "target"
    - type: "INPUT"
      name: "accessLogDirectory"
      modelFingerprint: "A0E0951A71CBB2332B8FFA73785900C6"
      valueUuid: "accessLogDirectory"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "660067569B9E81496B4AE0FD78CE5F5B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid8):void3"
        staticAccess: true
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "4A338F8415729EAACB938D260506FD6B"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "setAccessLogDirectory(accessLogDirectory:accessLogDirectory):void5"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.delegate.setAccessLogDirectory(accessLogDirectory);"
      lineNumber: 177
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: setAccessLogDirectory"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/A"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "accessLogDirectory-pathname"
      valueType: "java.io.File"
      uuid: "accessLogDirectory"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid8"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "accessLogDirectory-pathname"
      valueType: "java.io.File"
      uuid: "accessLogDirectory"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "setAccessLogPattern"
    sourceCodeSignature: "void setAccessLogPattern(String accessLogPattern)"
    returnType: "void"
    parameters:
    - name: "accessLogPattern"
      type: "java.lang.String"
    instructionFingerprint: "A325E10AAF55C3BC515B9769EB56A3DA"
  paths:
  - pathId: "path1"
    testPathName: "setAccessLogPatternTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "2721CE80734DE9E484995B85FB6C66FF"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F491DBEC451CC9A5FF16D2CD127A2E9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "accessLogPattern"
      modelFingerprint: "268C295FBFCB8E2DFBA93B0AF9B365E6"
      valueUuid: "accessLogPattern"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "BFB7416D62C7DD5970A4A8359D34D5EC"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid1):void"
        staticAccess: true
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "3D7035596F0607266798BD08C0522F10"
      valueUuid: "fieldUndertowWebServerFactoryDelegate"
      methodExercised:
        expression: "setAccessLogPattern(accessLogPattern:accessLogPattern):void2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "NO_CONSTRUCTOR_PATH_WITHOUT_EXCEPTION"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "<value>"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "<value>"
      valueType: "java.lang.String"
      uuid: "accessLogPattern"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings2"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "<value>"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "fieldUndertowWebServerFactoryDelegate"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "<value>"
      valueType: "java.lang.String"
      uuid: "accessLogPattern"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "setAccessLogPrefix"
    sourceCodeSignature: "void setAccessLogPrefix(String accessLogPrefix)"
    returnType: "void"
    parameters:
    - name: "accessLogPrefix"
      type: "java.lang.String"
    instructionFingerprint: "F93584049AF5FCF8FE4B5882CCDC4BE7"
  paths:
  - pathId: "path1"
    testPathName: "setAccessLogPrefixTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "5FDDDB9E6ECEC700A3C5F937E38C7926"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F491DBEC451CC9A5FF16D2CD127A2E9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "accessLogPrefix"
      modelFingerprint: "A10CBBEB2D3901C3ADA5236BCF817C57"
      valueUuid: "accessLogPrefix"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "BFB7416D62C7DD5970A4A8359D34D5EC"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid1):void"
        staticAccess: true
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "858F19587C1DFB71C05E75CCE46DA7CF"
      valueUuid: "fieldUndertowWebServerFactoryDelegate"
      methodExercised:
        expression: "setAccessLogPrefix(accessLogPrefix:accessLogPrefix):void2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "NO_CONSTRUCTOR_PATH_WITHOUT_EXCEPTION"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "<value>"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "<value>"
      valueType: "java.lang.String"
      uuid: "accessLogPrefix"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings2"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "<value>"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "fieldUndertowWebServerFactoryDelegate"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "<value>"
      valueType: "java.lang.String"
      uuid: "accessLogPrefix"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "getAccessLogPrefix"
    sourceCodeSignature: "String getAccessLogPrefix()"
    returnType: "java.lang.String"
    instructionFingerprint: "B43CB96252E410A04DC3962FE58F2334"
  paths:
  - pathId: "path1"
    testPathName: "getAccessLogPrefixTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "B10A5139B9BA022FB2D53E815FE9899A"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D0537F57C0747EC67E4D50ABD3DCCBDC"
      valueUuid: "target"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "660067569B9E81496B4AE0FD78CE5F5B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid11):void3"
        staticAccess: true
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "9E1C67E3060B534DC1615C42329B31C5"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "getAccessLogPrefix():string4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D446A609419428DDEAA49A58091F3986"
      valueUuid: "string4"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.delegate.getAccessLogPrefix();"
      lineNumber: 191
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: getAccessLogPrefix"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/A"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid11"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getAccessLogPrefix1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getAccessLogPrefix1"
      valueType: "java.lang.String"
      uuid: "string4"
- method:
    name: "setAccessLogSuffix"
    sourceCodeSignature: "void setAccessLogSuffix(String accessLogSuffix)"
    returnType: "void"
    parameters:
    - name: "accessLogSuffix"
      type: "java.lang.String"
    instructionFingerprint: "82CFFEA00DEB4E6B5EC296968C765B0A"
  paths:
  - pathId: "path1"
    testPathName: "setAccessLogSuffixTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "0700C17784DFE710E5F9597CBCE5F48B"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F491DBEC451CC9A5FF16D2CD127A2E9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "accessLogSuffix"
      modelFingerprint: "58313DE5EE34B910B341F4232B3AB273"
      valueUuid: "accessLogSuffix"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "BFB7416D62C7DD5970A4A8359D34D5EC"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid1):void"
        staticAccess: true
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "2919CDDE8210B0B4B069B9B1801D26CA"
      valueUuid: "fieldUndertowWebServerFactoryDelegate"
      methodExercised:
        expression: "setAccessLogSuffix(accessLogSuffix:accessLogSuffix):void2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "NO_CONSTRUCTOR_PATH_WITHOUT_EXCEPTION"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "<value>"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "<value>"
      valueType: "java.lang.String"
      uuid: "accessLogSuffix"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings2"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "<value>"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "fieldUndertowWebServerFactoryDelegate"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "<value>"
      valueType: "java.lang.String"
      uuid: "accessLogSuffix"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "setAccessLogEnabled"
    sourceCodeSignature: "void setAccessLogEnabled(boolean accessLogEnabled)"
    returnType: "void"
    parameters:
    - name: "accessLogEnabled"
      type: "boolean"
    instructionFingerprint: "6DD68800DFBD352564FE4E7601723FB6"
  paths:
  - pathId: "path1"
    testPathName: "setAccessLogEnabledTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "E20A516330D93C953F97BC1CF0226893"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F491DBEC451CC9A5FF16D2CD127A2E9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "accessLogEnabled"
      modelFingerprint: "3C1AB351A62207ECACF922DF71C8A76D"
      valueUuid: "accessLogEnabled"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "BFB7416D62C7DD5970A4A8359D34D5EC"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid1):void"
        staticAccess: true
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "544D58CACAC7ECEAE7CEC65E5B3910FF"
      valueUuid: "fieldUndertowWebServerFactoryDelegate"
      methodExercised:
        expression: "setAccessLogEnabled(accessLogEnabled:accessLogEnabled):void2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "NO_CONSTRUCTOR_PATH_WITHOUT_EXCEPTION"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "<value>"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "accessLogEnabled"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings2"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "<value>"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "fieldUndertowWebServerFactoryDelegate"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "accessLogEnabled"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "isAccessLogEnabled"
    sourceCodeSignature: "boolean isAccessLogEnabled()"
    returnType: "boolean"
    instructionFingerprint: "9876FA16A7BDF45CB0DBE33F5644BA26"
  paths:
  - pathId: "path1"
    testPathName: "isAccessLogEnabledWhenThisDelegateIsAccessLogEnabled"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "A96C9C78F6CCCA0A63572BC1F0DBF769"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D0537F57C0747EC67E4D50ABD3DCCBDC"
      valueUuid: "target"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "660067569B9E81496B4AE0FD78CE5F5B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid14):void3"
        staticAccess: true
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "0A2EEEF20EFC89324AE56FC386633CEC"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "isAccessLogEnabled():boolean11"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8383DF6F1D02800B0E90FD4143032B37"
      valueUuid: "boolean11"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.delegate.isAccessLogEnabled();"
      lineNumber: 205
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: isAccessLogEnabled"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/A"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid14"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean11"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean11"
      fixed: true
    branches:
    - lineNumber: 205
      expression: "this.delegate.isAccessLogEnabled()"
      range: "(205,10)-(205,43)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "isAccessLogEnabledWhenThisDelegateNotIsAccessLogEnabled"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "A344D65EE59666F9403C7D938883B8B1"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D0537F57C0747EC67E4D50ABD3DCCBDC"
      valueUuid: "target"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "660067569B9E81496B4AE0FD78CE5F5B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid15):void3"
        staticAccess: true
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "578CA110A173324F7617110C5025E87D"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "isAccessLogEnabled():boolean11"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "boolean11"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.delegate.isAccessLogEnabled();"
      lineNumber: 205
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: isAccessLogEnabled"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/A"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid15"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean11"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean11"
      fixed: true
    branches:
    - lineNumber: 205
      expression: "this.delegate.isAccessLogEnabled()"
      range: "(205,10)-(205,43)"
      evaluatedAs: false
- method:
    name: "setAccessLogRotate"
    sourceCodeSignature: "void setAccessLogRotate(boolean accessLogRotate)"
    returnType: "void"
    parameters:
    - name: "accessLogRotate"
      type: "boolean"
    instructionFingerprint: "9ADC3FC359A7C559B12A47B0E307F039"
  paths:
  - pathId: "path1"
    testPathName: "setAccessLogRotateTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "8E68C90F3423B5D08550A010ACC1199A"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F491DBEC451CC9A5FF16D2CD127A2E9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "accessLogRotate"
      modelFingerprint: "0646A3D3B9CEAF0C2C98D3277A037A59"
      valueUuid: "accessLogRotate"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "BFB7416D62C7DD5970A4A8359D34D5EC"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid1):void"
        staticAccess: true
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "D4D69219ABC658CA092046805899E8DF"
      valueUuid: "fieldUndertowWebServerFactoryDelegate"
      methodExercised:
        expression: "setAccessLogRotate(accessLogRotate:accessLogRotate):void2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "NO_CONSTRUCTOR_PATH_WITHOUT_EXCEPTION"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "<value>"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "accessLogRotate"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings2"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "<value>"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "fieldUndertowWebServerFactoryDelegate"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "accessLogRotate"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "setUseForwardHeaders"
    sourceCodeSignature: "void setUseForwardHeaders(boolean useForwardHeaders)"
    returnType: "void"
    parameters:
    - name: "useForwardHeaders"
      type: "boolean"
    instructionFingerprint: "EA36D0630E2951DE168A468F919C8165"
  paths:
  - pathId: "path1"
    testPathName: "setUseForwardHeadersTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "C76D659B383C73D42D069C2D2E3F3496"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "59A72ED02EA3FB3FB836016B1E55D176"
      valueUuid: "target"
    - type: "INPUT"
      name: "useForwardHeaders"
      modelFingerprint: "AF7E4388BC840B6627C31CFBDDF4346C"
      valueUuid: "useForwardHeaders"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "03725B23E34C2E1B872B877972B7FDAA"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid1):void"
        staticAccess: true
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "53E1F34B899FC7AD6034E04683707E9C"
      valueUuid: "fieldUndertowWebServerFactoryDelegate"
      methodExercised:
        expression: "setUseForwardHeaders(useForwardHeaders:useForwardHeaders):void2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "NO_CONSTRUCTOR_PATH_WITHOUT_EXCEPTION"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "exampleContextPath"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 8080
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "useForwardHeaders"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings2"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "exampleContextPath"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "fieldUndertowWebServerFactoryDelegate"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "useForwardHeaders"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "isUseForwardHeaders"
    sourceCodeSignature: "boolean isUseForwardHeaders()"
    returnType: "boolean"
    instructionFingerprint: "9ABE91A0926D17AD18194451DFB10B7B"
  paths:
  - pathId: "path1"
    testPathName: "isUseForwardHeadersWhenThisDelegateIsUseForwardHeaders"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "4359379B5A5F10F6120EE0FB7F5096CB"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D0537F57C0747EC67E4D50ABD3DCCBDC"
      valueUuid: "target"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "660067569B9E81496B4AE0FD78CE5F5B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid18):void3"
        staticAccess: true
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "EFF697B4CEF22E4398382232F35DD22F"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "isUseForwardHeaders():boolean11"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8383DF6F1D02800B0E90FD4143032B37"
      valueUuid: "boolean11"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.delegate.isUseForwardHeaders();"
      lineNumber: 219
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: isUseForwardHeaders"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/A"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid18"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean11"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean11"
      fixed: true
    branches:
    - lineNumber: 219
      expression: "this.delegate.isUseForwardHeaders()"
      range: "(219,10)-(219,44)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "isUseForwardHeadersWhenThisDelegateNotIsUseForwardHeaders"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "233AE85EA09C9D10329B1D7FDFE56FE2"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D0537F57C0747EC67E4D50ABD3DCCBDC"
      valueUuid: "target"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "660067569B9E81496B4AE0FD78CE5F5B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid19):void3"
        staticAccess: true
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "2636D02F77AB4514650C4654D6F0A82D"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "isUseForwardHeaders():boolean11"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "boolean11"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.delegate.isUseForwardHeaders();"
      lineNumber: 219
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: isUseForwardHeaders"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/A"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid19"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean11"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean11"
      fixed: true
    branches:
    - lineNumber: 219
      expression: "this.delegate.isUseForwardHeaders()"
      range: "(219,10)-(219,44)"
      evaluatedAs: false
- method:
    name: "setDeploymentInfoCustomizers"
    sourceCodeSignature: "void setDeploymentInfoCustomizers(Collection<? extends UndertowDeploymentInfoCustomizer>\
      \ customizers)"
    returnType: "void"
    parameters:
    - name: "customizers"
      type: "java.util.Collection"
    instructionFingerprint: "B43C631D47C5513304FB39ACA2BAC01A"
  paths:
  - pathId: "path1"
    testPathName: "setDeploymentInfoCustomizersTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "049C3BE137ACAA437A7C7AFA2F55C60C"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D0537F57C0747EC67E4D50ABD3DCCBDC"
      valueUuid: "target"
    - type: "INPUT"
      name: "customizers"
      modelFingerprint: "71DE12FC2D99E4A1FD56F819D13DC2E8"
      valueUuid: "customizers"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "660067569B9E81496B4AE0FD78CE5F5B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid20):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "CE98910511BBCDDCA625B2B51E7F8893"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:customizers,message:uniqueUuid21):void5"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    - type: "STATE_VERIFICATION_FIELD"
      name: "deploymentInfoCustomizers"
      modelFingerprint: "E512A900DCAFD3D17B74A45821ED0863"
      valueUuid: "linkedHashSet5"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/A"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "? extends org.springframework.boot.web.embedded.undertow.UndertowDeploymentInfoCustomizer"
      uuid: "customizers"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid20"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "? extends org.springframework.boot.web.embedded.undertow.UndertowDeploymentInfoCustomizer"
      uuid: "customizers"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Customizers must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid21"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.LinkedHashSet"
        parameters:
        - name: "c"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Collection"
            genericValueType: "? extends org.springframework.boot.web.embedded.undertow.UndertowDeploymentInfoCustomizer"
            uuid: "customizers"
        values: []
      valueType: "java.util.Set"
      genericValueType: "org.springframework.boot.web.embedded.undertow.UndertowDeploymentInfoCustomizer"
      uuid: "linkedHashSet5"
- method:
    name: "addDeploymentInfoCustomizers"
    sourceCodeSignature: "void addDeploymentInfoCustomizers(UndertowDeploymentInfoCustomizer...\
      \ customizers)"
    returnType: "void"
    parameters:
    - name: "customizers"
      type: "org.springframework.boot.web.embedded.undertow.UndertowDeploymentInfoCustomizer[]"
    instructionFingerprint: "C88852D86A7CCFFA54A0FE399C578B86"
  paths:
  - pathId: "path1"
    testPathName: "addDeploymentInfoCustomizersTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "4F583CF479016CA8E1205A974BFACB1F"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D0537F57C0747EC67E4D50ABD3DCCBDC"
      valueUuid: "target"
    - type: "INPUT"
      name: "customizers"
      modelFingerprint: "F4B8F6BB7BC9D6411FC10BBC5C1BC857"
      valueUuid: "customizers"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "660067569B9E81496B4AE0FD78CE5F5B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid22):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D17C9BED213E4C0608EAF028359AB5B0"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:customizers,message:uniqueUuid23):void5"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/A"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowDeploymentInfoCustomizer[]"
      uuid: "customizers"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid22"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowDeploymentInfoCustomizer[]"
      uuid: "customizers"
    - sapientType: "BASIC"
      content: !<regular>
        value: "UndertowDeploymentInfoCustomizers must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid23"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "getDeploymentInfoCustomizers"
    sourceCodeSignature: "Collection<UndertowDeploymentInfoCustomizer> getDeploymentInfoCustomizers()"
    returnType: "java.util.Collection"
    genericReturnType: "org.springframework.boot.web.embedded.undertow.UndertowDeploymentInfoCustomizer"
    instructionFingerprint: "6FF212583ECA11583BC9B24AC14DE313"
  paths:
  - pathId: "path1"
    testPathName: "getDeploymentInfoCustomizersTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "5E493B2862D98B9962024AC3FEA9C702"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D0537F57C0747EC67E4D50ABD3DCCBDC"
      valueUuid: "target"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "660067569B9E81496B4AE0FD78CE5F5B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid24):void3"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E7588AC347C3A226484FF0BDA5C5348B"
      valueUuid: "linkedHashSet4"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/A"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid24"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.LinkedHashSet"
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "org.springframework.boot.web.embedded.undertow.UndertowDeploymentInfoCustomizer"
      uuid: "linkedHashSet4"
- method:
    name: "setResourceLoader"
    sourceCodeSignature: "void setResourceLoader(ResourceLoader resourceLoader)"
    returnType: "void"
    parameters:
    - name: "resourceLoader"
      type: "org.springframework.core.io.ResourceLoader"
    instructionFingerprint: "0F90C90467FB97988859369F75A05019"
  paths:
  - pathId: "path1"
    testPathName: "setResourceLoaderTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "DF200BBFFAAB1980587715BED2CF9EF5"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "isEagerFilterInit"
    sourceCodeSignature: "boolean isEagerFilterInit()"
    returnType: "boolean"
    instructionFingerprint: "E4CE3A462AB8D44639473D61F7AB5443"
  paths:
  - pathId: "path1"
    testPathName: "isEagerFilterInitTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "9A6E152A54452DC831BF632366462EF6"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setEagerFilterInit"
    sourceCodeSignature: "void setEagerFilterInit(boolean eagerFilterInit)"
    returnType: "void"
    parameters:
    - name: "eagerFilterInit"
      type: "boolean"
    instructionFingerprint: "6E9D9EB2E7F977C5EFE1088F2FF4416B"
  paths:
  - pathId: "path1"
    testPathName: "setEagerFilterInitTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "853B21629E09DE90C2FD100F0D9B3189"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "isPreservePathOnForward"
    sourceCodeSignature: "boolean isPreservePathOnForward()"
    returnType: "boolean"
    instructionFingerprint: "6AF127855A8ED1BD4336631692FF7705"
  paths:
  - pathId: "path1"
    testPathName: "isPreservePathOnForwardTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "85342A9CE954EF95E4145EB37ADB086E"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setPreservePathOnForward"
    sourceCodeSignature: "void setPreservePathOnForward(boolean preservePathOnForward)"
    returnType: "void"
    parameters:
    - name: "preservePathOnForward"
      type: "boolean"
    instructionFingerprint: "A9BFFF4034DB374C19A22A9191D8B6F1"
  paths:
  - pathId: "path1"
    testPathName: "setPreservePathOnForwardTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "35F63147434534EEA7949BD464A73516"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "getWebServer"
    sourceCodeSignature: "WebServer getWebServer(ServletContextInitializer... initializers)"
    returnType: "org.springframework.boot.web.server.WebServer"
    parameters:
    - name: "initializers"
      type: "org.springframework.boot.web.servlet.ServletContextInitializer[]"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 3
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 4
      catchExceptions:
      - "java.io.IOException"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.io.IOException"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.io.IOException"
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.ClassNotFoundException"
    instructionFingerprint: "709EDFA94AC786A93ED6FC71DBAB039F"
  paths:
  - pathId: "path36"
    testPathName: "getWebServerWhenDocBaseIsNullAndCaughtIOExceptionThrowsIllegalStateException"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "693189B27096AC400ED2F2A3DF9D2451"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "0BBB5501705191177EB5A182FEC8699F"
      valueUuid: "target"
    - type: "INPUT"
      name: "initializers"
      modelFingerprint: "6BEFA360E7AAB6F6818E0508F15D68E1"
      valueUuid: "initializers"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9212DE2B3A3A58812CCC36B248184E13"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid30):void3"
        staticAccess: true
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "8DADDE93492B3FCDB8B3288E7332DF18"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "createBuilder(factory:targetClassObject,sslBundleSupplier:uniqueUuid31):undertow.Builder"
    - type: "STATIC"
      name: "Servlets.class"
      modelFingerprint: "7BC06AC1283B8D389463CFECF6BB29A4"
      valueUuid: "Servlets.class"
      methodExercised:
        expression: "deployment():deploymentInfo"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "DFE1B5D8FA6B4EDA983290EDA606FCD8"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addServletContainerInitializer(servletContainerInitializer:servletContainerInitializerInfo):deploymentInfo2"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "FD017A9BD536F1BEB099BA0D2A9189FC"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setClassLoader(classLoader:classLoader):deploymentInfo3"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "2413A3720B277E1264AEFD5E1A7CEF69"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setContextPath(contextPath:contextPath):deploymentInfo4"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "DFD5BCD1E5F667BE7070C76D56F5F370"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setDisplayName(displayName:string4):deploymentInfo5"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "C2009D0995EC20B53F18559EF3F67DF1"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setDeploymentName(deploymentName:uniqueUuid35):deploymentInfo6"
    - type: "STATIC"
      name: "Servlets.class.real"
      modelFingerprint: "4A671F4ABDD67E58C7F506CAE2A46371"
      valueUuid: "Servlets.class.real"
      methodExercised:
        expression: "servlet(name:uniqueUuid37,servletClass:uniqueUuid38):servletInfo"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "C6B0D1553ED8C4B21220FB2DD7E78129"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addServlet(servlet:servletInfo):deploymentInfo7"
    - type: "LOCAL_VARIABLE"
      name: "errorPage"
      modelFingerprint: "8D604FE80C97354503FC9433EC730C59"
      valueUuid: "object"
      methodExercised:
        expression: "getStatus():status"
    - type: "LOCAL_VARIABLE"
      name: "errorPage"
      modelFingerprint: "7EFC966F8ED1BD1903BB5AEA30559AAE"
      valueUuid: "object"
      methodExercised:
        expression: "getException():exception"
    - type: "LOCAL_VARIABLE"
      name: "errorPage"
      modelFingerprint: "4239FB76EFF9936513A39E6A03559CE3"
      valueUuid: "object"
      methodExercised:
        expression: "getPath():path"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "2864EFCCDCFF7208E50CF7647E4B90AE"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addErrorPage(errorPage:errorPage):deploymentInfo8"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "5DA5A1EAE8BB74F85A1F10074055BB43"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setServletStackTraces(servletStackTraces:Enum-io.undertow.servlet.api.ServletStackTraces-NONE):deploymentInfo9"
    - type: "LOCAL_VARIABLE"
      name: "root"
      modelFingerprint: "B4E3C7D2D2820DD6699882C8A913DB8C"
      valueUuid: "file2"
      methodExercised:
        expression: "getCanonicalFile():file3"
        throwsExceptions:
        - "java.io.IOException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E36452C370B74D258073BDDD94FD9317"
      valueUuid: "illegalStateException"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "Builder builder = this.delegate.createBuilder(this, this::getSslBundle);"
      lineNumber: 298
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: createBuilder"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/AB"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 8
            valueType: "int"
            uuid: "port"
        propertiesMap:
          registerDefaultServlet:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "boolean15"
          displayName:
            sapientType: "BASIC"
            content: !<regular>
              value: "displayName1"
            valueType: "java.lang.String"
            uuid: "string4"
          errorPages:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashSet"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.web.server.ErrorPage"
                uuid: "object"
                collectionUuid: "set2"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.web.server.ErrorPage"
            uuid: "set2"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.servlet.ServletContextInitializer[]"
      uuid: "initializers"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/AB"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid30"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.Undertow$Builder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
            parameters: []
          valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
          uuid: "undertowWebServerFactoryDelegate"
          fixed: true
        methodParameters:
        - name: "factory"
          value:
            sapientType: "THIS"
            valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
            uuid: "targetClassObject"
            fixed: true
        - name: "sslBundleSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "uniqueUuid32"
        methodName: "createBuilder"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "uniqueUuid31"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.Servlets"
      uuid: "Servlets.class"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo2"
    - sapientType: "ANY"
      valueType: "io.undertow.servlet.api.ServletContainerInitializerInfo"
      uuid: "servletContainerInitializerInfo"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "java.lang.ClassLoader"
              localVariableValue:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
                valueType: "java.lang.Class"
                genericValueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
                fixed: true
              methodParameters: []
              methodName: "getClassLoader"
            valueType: "java.lang.ClassLoader"
            uuid: "classLoader"
        methodName: "setClassLoader"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo3"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.ClassLoader"
        localVariableValue:
          sapientType: "CLASS"
          content: !<regular>
            value: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
          valueType: "java.lang.Class"
          genericValueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
          uuid: "uniqueUuid34"
          fixed: true
        methodParameters: []
        methodName: "getClassLoader"
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/AB"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "displayName1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "spring-boot"
            valueType: "java.lang.String"
            uuid: "uniqueUuid36"
            fixed: true
        methodName: "setDeploymentName"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "spring-boot"
      valueType: "java.lang.String"
      uuid: "uniqueUuid35"
      fixed: true
    - sapientType: "REAL"
      valueType: "io.undertow.servlet.Servlets"
      uuid: "Servlets.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "io.undertow.servlet.Servlets"
        method: "servlet"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "default"
            valueType: "java.lang.String"
            uuid: "uniqueUuid41"
            fixed: true
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.servlet.handlers.DefaultServlet"
            valueType: "java.lang.Class"
            genericValueType: "? extends jakarta.servlet.Servlet"
            uuid: "uniqueUuid42"
            fixed: true
      valueType: "io.undertow.servlet.api.ServletInfo"
      uuid: "servletInfo"
    - sapientType: "BASIC"
      content: !<regular>
        value: "default"
      valueType: "java.lang.String"
      uuid: "uniqueUuid37"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "io.undertow.servlet.handlers.DefaultServlet"
      valueType: "java.lang.Class"
      genericValueType: "? extends jakarta.servlet.Servlet"
      uuid: "uniqueUuid38"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "io.undertow.servlet.Servlets"
              method: "servlet"
              methodParameters:
              - value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "default"
                  valueType: "java.lang.String"
                  fixed: true
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "io.undertow.servlet.handlers.DefaultServlet"
                  valueType: "java.lang.Class"
                  genericValueType: "? extends jakarta.servlet.Servlet"
                  fixed: true
            valueType: "io.undertow.servlet.api.ServletInfo"
            uuid: "servletInfo"
        methodName: "addServlet"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo7"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "io.undertow.servlet.Servlets"
        method: "servlet"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "default"
            valueType: "java.lang.String"
            uuid: "uniqueUuid41"
            fixed: true
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.servlet.handlers.DefaultServlet"
            valueType: "java.lang.Class"
            genericValueType: "? extends jakarta.servlet.Servlet"
            uuid: "uniqueUuid42"
            fixed: true
      valueType: "io.undertow.servlet.api.ServletInfo"
      uuid: "servletInfo"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.ErrorPage"
      uuid: "object"
      collectionUuid: "set2"
    - sapientType: "NULL"
      valueType: "org.springframework.http.HttpStatus"
      uuid: "status"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.ErrorPage"
      uuid: "object"
      collectionUuid: "set2"
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      genericValueType: "? extends java.lang.Throwable"
      uuid: "exception"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.ErrorPage"
      uuid: "object"
      collectionUuid: "set2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getPath1"
      valueType: "java.lang.String"
      uuid: "path"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo8"
    - sapientType: "ANY"
      valueType: "io.undertow.servlet.api.ErrorPage"
      uuid: "errorPage"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "io.undertow.servlet.api.ServletStackTraces"
            uuid: "Enum-io.undertow.servlet.api.ServletStackTraces-NONE"
            fixed: true
        methodName: "setServletStackTraces"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo9"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "io.undertow.servlet.api.ServletStackTraces"
      uuid: "Enum-io.undertow.servlet.api.ServletStackTraces-NONE"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file2-pathname"
      valueType: "java.io.File"
      uuid: "file2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file3-pathname"
      valueType: "java.io.File"
      uuid: "file3"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Cannot get canonical document root"
            valueType: "java.lang.String"
            uuid: "uniqueUuid43"
            fixed: true
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.IOException"
              parameters: []
            valueType: "java.io.IOException"
            uuid: "iOException"
      valueType: "java.lang.IllegalStateException"
      uuid: "illegalStateException"
      fixed: true
    branches:
    - lineNumber: 375
      expression: "this.resourceLoader != null"
      range: "(375,7)-(375,33)"
      evaluatedAs: false
      internalMethodName: "getServletClassLoader"
    - lineNumber: 310
      expression: "isRegisterDefaultServlet()"
      range: "(310,7)-(310,32)"
      evaluatedAs: true
      internalMethodName: "createManager"
    - lineNumber: 427
      expression: "for-each(getErrorPages())"
      range: "(427,30)-(427,44)"
      evaluatedAs: true
      internalMethodName: "configureErrorPages"
    - lineNumber: 433
      expression: "errorPage.getStatus() != null"
      range: "(433,7)-(433,35)"
      evaluatedAs: false
      internalMethodName: "getUndertowErrorPage"
    - lineNumber: 436
      expression: "errorPage.getException() != null"
      range: "(436,7)-(436,38)"
      evaluatedAs: false
      internalMethodName: "getUndertowErrorPage"
    - lineNumber: 418
      expression: "docBase != null"
      range: "(418,17)-(418,31)"
      evaluatedAs: false
      internalMethodName: "getCanonicalDocumentRoot"
    - lineNumber: 421
      expression: "catch-exception (IOException)"
      range: "(421,3)-(421,23)"
      evaluatedAs: true
      internalMethodName: "getCanonicalDocumentRoot"
    catchBlockExercised:
      idExternalInstruction: 9
      id: 4
      catchExceptions:
      - "java.io.IOException"
  - pathId: "path22"
    testPathName: "getWebServerWhenCaughtExceptionThrowsRuntimeException"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "567EFE02EF00D3710E4B55150666E57A"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "63D00339FC66C6D2DE7F46F5FF8F4473"
      valueUuid: "target"
    - type: "INPUT"
      name: "initializers"
      modelFingerprint: "6BEFA360E7AAB6F6818E0508F15D68E1"
      valueUuid: "initializers"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9212DE2B3A3A58812CCC36B248184E13"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid44):void3"
        staticAccess: true
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "8DADDE93492B3FCDB8B3288E7332DF18"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "createBuilder(factory:targetClassObject,sslBundleSupplier:uniqueUuid45):undertow.Builder"
    - type: "STATIC"
      name: "Servlets.class"
      modelFingerprint: "7BC06AC1283B8D389463CFECF6BB29A4"
      valueUuid: "Servlets.class"
      methodExercised:
        expression: "deployment():deploymentInfo"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "DFE1B5D8FA6B4EDA983290EDA606FCD8"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addServletContainerInitializer(servletContainerInitializer:servletContainerInitializerInfo):deploymentInfo2"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "FD017A9BD536F1BEB099BA0D2A9189FC"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setClassLoader(classLoader:classLoader):deploymentInfo3"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "2413A3720B277E1264AEFD5E1A7CEF69"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setContextPath(contextPath:contextPath):deploymentInfo4"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "DFD5BCD1E5F667BE7070C76D56F5F370"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setDisplayName(displayName:string4):deploymentInfo5"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "C2009D0995EC20B53F18559EF3F67DF1"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setDeploymentName(deploymentName:uniqueUuid49):deploymentInfo6"
    - type: "STATIC"
      name: "Servlets.class.real"
      modelFingerprint: "4A671F4ABDD67E58C7F506CAE2A46371"
      valueUuid: "Servlets.class.real"
      methodExercised:
        expression: "servlet(name:uniqueUuid51,servletClass:uniqueUuid52):servletInfo"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "C6B0D1553ED8C4B21220FB2DD7E78129"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addServlet(servlet:servletInfo):deploymentInfo7"
    - type: "LOCAL_VARIABLE"
      name: "errorPage"
      modelFingerprint: "8D604FE80C97354503FC9433EC730C59"
      valueUuid: "object"
      methodExercised:
        expression: "getStatus():status"
    - type: "LOCAL_VARIABLE"
      name: "errorPage"
      modelFingerprint: "7EFC966F8ED1BD1903BB5AEA30559AAE"
      valueUuid: "object"
      methodExercised:
        expression: "getException():exception"
    - type: "LOCAL_VARIABLE"
      name: "errorPage"
      modelFingerprint: "4239FB76EFF9936513A39E6A03559CE3"
      valueUuid: "object"
      methodExercised:
        expression: "getPath():path"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "2864EFCCDCFF7208E50CF7647E4B90AE"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addErrorPage(errorPage:errorPage):deploymentInfo8"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "5DA5A1EAE8BB74F85A1F10074055BB43"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setServletStackTraces(servletStackTraces:Enum-io.undertow.servlet.api.ServletStackTraces-NONE):deploymentInfo9"
    - type: "LOCAL_VARIABLE"
      name: "url"
      modelFingerprint: "BFA6B800AEC9FB12F3A93C77F031C64E"
      valueUuid: "object2"
      methodExercised:
        expression: "toURI():uRI"
        throwsExceptions:
        - "java.net.URISyntaxException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "748A553FB803EE97D6DCEB8C3534CFDD"
      valueUuid: "runtimeException"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "Builder builder = this.delegate.createBuilder(this, this::getSslBundle);"
      lineNumber: 298
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: createBuilder"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/AB"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
        propertiesMap:
          registerDefaultServlet:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "boolean15"
          displayName:
            sapientType: "BASIC"
            content: !<regular>
              value: "displayName1"
            valueType: "java.lang.String"
            uuid: "string4"
          errorPages:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashSet"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.web.server.ErrorPage"
                uuid: "object"
                collectionUuid: "set2"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.web.server.ErrorPage"
            uuid: "set2"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.servlet.ServletContextInitializer[]"
      uuid: "initializers"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/AB"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid44"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.Undertow$Builder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
            parameters: []
          valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
          uuid: "undertowWebServerFactoryDelegate"
          fixed: true
        methodParameters:
        - name: "factory"
          value:
            sapientType: "THIS"
            valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
            uuid: "targetClassObject"
            fixed: true
        - name: "sslBundleSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "uniqueUuid46"
        methodName: "createBuilder"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "uniqueUuid45"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.Servlets"
      uuid: "Servlets.class"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo2"
    - sapientType: "ANY"
      valueType: "io.undertow.servlet.api.ServletContainerInitializerInfo"
      uuid: "servletContainerInitializerInfo"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "java.lang.ClassLoader"
              localVariableValue:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
                valueType: "java.lang.Class"
                genericValueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
                fixed: true
              methodParameters: []
              methodName: "getClassLoader"
            valueType: "java.lang.ClassLoader"
            uuid: "classLoader"
        methodName: "setClassLoader"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo3"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.ClassLoader"
        localVariableValue:
          sapientType: "CLASS"
          content: !<regular>
            value: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
          valueType: "java.lang.Class"
          genericValueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
          uuid: "uniqueUuid48"
          fixed: true
        methodParameters: []
        methodName: "getClassLoader"
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/AB"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "displayName1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "spring-boot"
            valueType: "java.lang.String"
            uuid: "uniqueUuid50"
            fixed: true
        methodName: "setDeploymentName"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "spring-boot"
      valueType: "java.lang.String"
      uuid: "uniqueUuid49"
      fixed: true
    - sapientType: "REAL"
      valueType: "io.undertow.servlet.Servlets"
      uuid: "Servlets.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "io.undertow.servlet.Servlets"
        method: "servlet"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "default"
            valueType: "java.lang.String"
            uuid: "uniqueUuid55"
            fixed: true
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.servlet.handlers.DefaultServlet"
            valueType: "java.lang.Class"
            genericValueType: "? extends jakarta.servlet.Servlet"
            uuid: "uniqueUuid56"
            fixed: true
      valueType: "io.undertow.servlet.api.ServletInfo"
      uuid: "servletInfo"
    - sapientType: "BASIC"
      content: !<regular>
        value: "default"
      valueType: "java.lang.String"
      uuid: "uniqueUuid51"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "io.undertow.servlet.handlers.DefaultServlet"
      valueType: "java.lang.Class"
      genericValueType: "? extends jakarta.servlet.Servlet"
      uuid: "uniqueUuid52"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "io.undertow.servlet.Servlets"
              method: "servlet"
              methodParameters:
              - value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "default"
                  valueType: "java.lang.String"
                  fixed: true
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "io.undertow.servlet.handlers.DefaultServlet"
                  valueType: "java.lang.Class"
                  genericValueType: "? extends jakarta.servlet.Servlet"
                  fixed: true
            valueType: "io.undertow.servlet.api.ServletInfo"
            uuid: "servletInfo"
        methodName: "addServlet"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo7"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "io.undertow.servlet.Servlets"
        method: "servlet"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "default"
            valueType: "java.lang.String"
            uuid: "uniqueUuid55"
            fixed: true
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.servlet.handlers.DefaultServlet"
            valueType: "java.lang.Class"
            genericValueType: "? extends jakarta.servlet.Servlet"
            uuid: "uniqueUuid56"
            fixed: true
      valueType: "io.undertow.servlet.api.ServletInfo"
      uuid: "servletInfo"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.ErrorPage"
      uuid: "object"
      collectionUuid: "set2"
    - sapientType: "NULL"
      valueType: "org.springframework.http.HttpStatus"
      uuid: "status"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.ErrorPage"
      uuid: "object"
      collectionUuid: "set2"
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      genericValueType: "? extends java.lang.Throwable"
      uuid: "exception"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.ErrorPage"
      uuid: "object"
      collectionUuid: "set2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getPath1"
      valueType: "java.lang.String"
      uuid: "path"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo8"
    - sapientType: "ANY"
      valueType: "io.undertow.servlet.api.ErrorPage"
      uuid: "errorPage"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "io.undertow.servlet.api.ServletStackTraces"
            uuid: "Enum-io.undertow.servlet.api.ServletStackTraces-NONE"
            fixed: true
        methodName: "setServletStackTraces"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo9"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "io.undertow.servlet.api.ServletStackTraces"
      uuid: "Enum-io.undertow.servlet.api.ServletStackTraces-NONE"
      fixed: true
    - sapientType: "MOCK"
      valueType: "java.net.URL"
      uuid: "object2"
      collectionUuid: "list2"
      nameForMock: "object2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.net.URI"
        method: "create"
        methodParameters:
        - name: "str"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "str1"
            valueType: "java.lang.String"
            uuid: "uRI-str"
      valueType: "java.net.URI"
      uuid: "uRI"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.RuntimeException"
        parameters:
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Exception"
              parameters: []
            valueType: "java.lang.Exception"
            uuid: "exception2"
      valueType: "java.lang.RuntimeException"
      uuid: "runtimeException"
      fixed: true
    branches:
    - lineNumber: 375
      expression: "this.resourceLoader != null"
      range: "(375,7)-(375,33)"
      evaluatedAs: false
      internalMethodName: "getServletClassLoader"
    - lineNumber: 310
      expression: "isRegisterDefaultServlet()"
      range: "(310,7)-(310,32)"
      evaluatedAs: true
      internalMethodName: "createManager"
    - lineNumber: 427
      expression: "for-each(getErrorPages())"
      range: "(427,30)-(427,44)"
      evaluatedAs: true
      internalMethodName: "configureErrorPages"
    - lineNumber: 433
      expression: "errorPage.getStatus() != null"
      range: "(433,7)-(433,35)"
      evaluatedAs: false
      internalMethodName: "getUndertowErrorPage"
    - lineNumber: 436
      expression: "errorPage.getException() != null"
      range: "(436,7)-(436,38)"
      evaluatedAs: false
      internalMethodName: "getUndertowErrorPage"
    - lineNumber: 418
      expression: "docBase != null"
      range: "(418,17)-(418,31)"
      evaluatedAs: true
      internalMethodName: "getCanonicalDocumentRoot"
    - lineNumber: 387
      expression: "docBase.isDirectory()"
      range: "(387,34)-(387,54)"
      evaluatedAs: true
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 389
      expression: "root != null"
      range: "(389,7)-(389,18)"
      evaluatedAs: true
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 393
      expression: "for-each(metaInfResourceUrls)"
      range: "(393,18)-(393,36)"
      evaluatedAs: true
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 394
      expression: "\\\"file\\\".equals(url.getProtocol())"
      range: "(394,8)-(394,39)"
      evaluatedAs: true
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 397
      expression: "file.isFile()"
      range: "(397,10)-(397,22)"
      evaluatedAs: true
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 404
      expression: "catch-exception (Exception)"
      range: "(404,5)-(404,23)"
      evaluatedAs: true
      internalMethodName: "getDocumentRootResourceManager"
    catchBlockExercised:
      idExternalInstruction: 66
      id: 3
      catchExceptions:
      - "java.lang.Exception"
  - pathId: "path11"
    testPathName: "getWebServerWhenManagerGetDeploymentNotInstanceOfDeploymentImplAndTimeoutDurationIsNullAndIsZeroOrLessTimeoutDuration3"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "900C5F32FD16005AB12E4D1F5581FE55"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6A13043F3306A60CE4000F64FFF3E1E7"
      valueUuid: "target"
    - type: "INPUT"
      name: "initializers"
      modelFingerprint: "6BEFA360E7AAB6F6818E0508F15D68E1"
      valueUuid: "initializers"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9212DE2B3A3A58812CCC36B248184E13"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid57):void3"
        staticAccess: true
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "8DADDE93492B3FCDB8B3288E7332DF18"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "createBuilder(factory:targetClassObject,sslBundleSupplier:uniqueUuid58):undertow.Builder"
    - type: "STATIC"
      name: "Servlets.class"
      modelFingerprint: "7BC06AC1283B8D389463CFECF6BB29A4"
      valueUuid: "Servlets.class"
      methodExercised:
        expression: "deployment():deploymentInfo"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "DFE1B5D8FA6B4EDA983290EDA606FCD8"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addServletContainerInitializer(servletContainerInitializer:servletContainerInitializerInfo):deploymentInfo2"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "FD017A9BD536F1BEB099BA0D2A9189FC"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setClassLoader(classLoader:classLoader):deploymentInfo3"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "2413A3720B277E1264AEFD5E1A7CEF69"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setContextPath(contextPath:contextPath):deploymentInfo4"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "DFD5BCD1E5F667BE7070C76D56F5F370"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setDisplayName(displayName:string4):deploymentInfo5"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "C2009D0995EC20B53F18559EF3F67DF1"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setDeploymentName(deploymentName:uniqueUuid62):deploymentInfo6"
    - type: "STATIC"
      name: "Servlets.class.real"
      modelFingerprint: "4A671F4ABDD67E58C7F506CAE2A46371"
      valueUuid: "Servlets.class.real"
      methodExercised:
        expression: "servlet(name:uniqueUuid64,servletClass:uniqueUuid65):servletInfo"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "C6B0D1553ED8C4B21220FB2DD7E78129"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addServlet(servlet:servletInfo):deploymentInfo7"
    - type: "LOCAL_VARIABLE"
      name: "errorPage"
      modelFingerprint: "4FCFAB2DEC46250D9C061F0A8C658A54"
      valueUuid: "object"
      methodExercised:
        expression: "getStatus():status"
    - type: "LOCAL_VARIABLE"
      name: "errorPage"
      modelFingerprint: "4239FB76EFF9936513A39E6A03559CE3"
      valueUuid: "object"
      methodExercised:
        expression: "getPath():path"
    - type: "LOCAL_VARIABLE"
      name: "errorPage"
      modelFingerprint: "224B739BABD069DDF43532F203EBA48D"
      valueUuid: "object"
      methodExercised:
        expression: "getStatusCode():int9"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "6A64E225FED690CD432C9E544435C13E"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addErrorPage(errorPage:errorPage):deploymentInfo8"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "5DA5A1EAE8BB74F85A1F10074055BB43"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setServletStackTraces(servletStackTraces:Enum-io.undertow.servlet.api.ServletStackTraces-NONE):deploymentInfo9"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "C606D2A57D532BA43F7FB0A4728A7A8F"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setResourceManager(resourceManager:compositeResourceManager):deploymentInfo10"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "4557A779E7B6B5A3D19EC38B322EF96F"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setTempDir(tempDir:file3):deploymentInfo11"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "79020A62BFC4B953E7819E652D57F9DE"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setEagerFilterInit(eagerFilterInit:int7):deploymentInfo12"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "6756B4E7A2B932E9E7E7DDE61EF4A382"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setPreservePathOnForward(preservePathOnForward:int8):void6"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "AC98894B35A5EE9D3B6B31D9F2EDDF20"
      valueUuid: "mimeMappings5"
      methodExercised:
        expression: "iterator():iterator3"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F0251C635933C730807879F2F41D706B"
      valueUuid: "session4"
      methodExercised:
        expression: "isPersistent():persistent"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "DD62A5AE63E7AC9FEAFEC804F651279F"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addLocaleCharsetMapping(locale:string8,charset:string9):deploymentInfo13"
    - type: "STATIC"
      name: "Servlets.class"
      modelFingerprint: "DA4CBABA4B30C2549402D3ED0837DC38"
      valueUuid: "Servlets.class"
      methodExercised:
        expression: "newContainer():servletContainer"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "137FC84003338874E813A7241310FABB"
      valueUuid: "servletContainer"
      methodExercised:
        expression: "addDeployment(arg0:deploymentInfo):deploymentManager"
    - type: "LOCAL_VARIABLE"
      name: "manager"
      modelFingerprint: "AB17A24630E8232D42862E37F39971DC"
      valueUuid: "deploymentManager"
      methodExercised:
        expression: "deploy():void8"
    - type: "LOCAL_VARIABLE"
      name: "manager"
      modelFingerprint: "E312078B1FC097E1FAC32B6FC92FDED0"
      valueUuid: "deploymentManager"
      methodExercised:
        expression: "getDeployment():deployment"
    - type: "LOCAL_VARIABLE"
      name: "manager"
      modelFingerprint: "614F170FF0E1B9F825566FC8714C868A"
      valueUuid: "deploymentManager"
      methodExercised:
        expression: "getDeployment():deployment2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "0B0E3DA7F499072DEE603987ED55168C"
      valueUuid: "deployment2"
      methodExercised:
        expression: "getSessionManager():sessionManager"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "8D92AEF0ACF19C7A62675F7544CC5859"
      valueUuid: "session4"
      methodExercised:
        expression: "getTimeout():timeout"
    - type: "LOCAL_VARIABLE"
      name: "sessionManager"
      modelFingerprint: "6BC676AB1B8273D8CDAD56C46DA1291F"
      valueUuid: "sessionManager"
      methodExercised:
        expression: "setDefaultSessionTimeout(arg0:int10):void9"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "D03E233217C1DD5A76CCC015D45689E4"
      methodExercised:
        expression: "getUndertowWebServer(builder:undertow.Builder,manager:deploymentManager,port:port):undertowServletWebServer"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8EAADE33D91E58F2D0E069A6ED8DC321"
      valueUuid: "undertowServletWebServer"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "Builder builder = this.delegate.createBuilder(this, this::getSslBundle);"
      lineNumber: 298
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: createBuilder"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/AB"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "int"
            uuid: "port"
        propertiesMap:
          registerDefaultServlet:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "boolean15"
          localeCharsetMappings:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashMap"
              parameters: []
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.util.Locale"
                      parameters:
                      - name: "language"
                        value:
                          sapientType: "BASIC"
                          content: !<regular>
                            value: "language1"
                          valueType: "java.lang.String"
                          uuid: "locale-language"
                    valueType: "java.util.Locale"
                    uuid: "locale"
                    collectionUuid: "map4"
                    nameForMock: "locale"
                  value:
                    sapientType: "OBJECT"
                    content: !<static_method_return>
                      target: "java.nio.charset.Charset"
                      method: "defaultCharset"
                      methodParameters: []
                    valueType: "java.nio.charset.Charset"
                    uuid: "charset"
                    collectionUuid: "map4"
                    nameForMock: "charset"
                valueType: "java.util.Map$Entry"
            valueType: "java.util.Map"
            genericValueType: "java.util.Locale,java.nio.charset.Charset"
            uuid: "map4"
          displayName:
            sapientType: "BASIC"
            content: !<regular>
              value: "displayName1"
            valueType: "java.lang.String"
            uuid: "string4"
          errorPages:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashSet"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.web.server.ErrorPage"
                uuid: "object"
                collectionUuid: "set2"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.web.server.ErrorPage"
            uuid: "set2"
          session:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.servlet.server.Session"
              parameters: []
              propertiesMap:
                persistent:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: false
                  valueType: "boolean"
                  uuid: "persistent"
                timeout:
                  sapientType: "NULL"
                  valueType: "java.time.Duration"
                  uuid: "timeout"
                  fixed: true
            valueType: "org.springframework.boot.web.servlet.server.Session"
            uuid: "session4"
          mimeMappings:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings5"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.servlet.ServletContextInitializer[]"
      uuid: "initializers"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/AB"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid57"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.Undertow$Builder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
            parameters: []
          valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
          uuid: "undertowWebServerFactoryDelegate"
          fixed: true
        methodParameters:
        - name: "factory"
          value:
            sapientType: "THIS"
            valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
            uuid: "targetClassObject"
            fixed: true
        - name: "sslBundleSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "uniqueUuid70"
        methodName: "createBuilder"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "uniqueUuid58"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.Servlets"
      uuid: "Servlets.class"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo2"
    - sapientType: "ANY"
      valueType: "io.undertow.servlet.api.ServletContainerInitializerInfo"
      uuid: "servletContainerInitializerInfo"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "java.lang.ClassLoader"
              localVariableValue:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
                valueType: "java.lang.Class"
                genericValueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
                fixed: true
              methodParameters: []
              methodName: "getClassLoader"
            valueType: "java.lang.ClassLoader"
            uuid: "classLoader"
        methodName: "setClassLoader"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo3"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.ClassLoader"
        localVariableValue:
          sapientType: "CLASS"
          content: !<regular>
            value: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
          valueType: "java.lang.Class"
          genericValueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
          uuid: "uniqueUuid61"
          fixed: true
        methodParameters: []
        methodName: "getClassLoader"
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/AB"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "displayName1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "spring-boot"
            valueType: "java.lang.String"
            uuid: "uniqueUuid63"
            fixed: true
        methodName: "setDeploymentName"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "spring-boot"
      valueType: "java.lang.String"
      uuid: "uniqueUuid62"
      fixed: true
    - sapientType: "REAL"
      valueType: "io.undertow.servlet.Servlets"
      uuid: "Servlets.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "io.undertow.servlet.Servlets"
        method: "servlet"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "default"
            valueType: "java.lang.String"
            uuid: "uniqueUuid68"
            fixed: true
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.servlet.handlers.DefaultServlet"
            valueType: "java.lang.Class"
            genericValueType: "? extends jakarta.servlet.Servlet"
            uuid: "uniqueUuid69"
            fixed: true
      valueType: "io.undertow.servlet.api.ServletInfo"
      uuid: "servletInfo"
    - sapientType: "BASIC"
      content: !<regular>
        value: "default"
      valueType: "java.lang.String"
      uuid: "uniqueUuid64"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "io.undertow.servlet.handlers.DefaultServlet"
      valueType: "java.lang.Class"
      genericValueType: "? extends jakarta.servlet.Servlet"
      uuid: "uniqueUuid65"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "io.undertow.servlet.Servlets"
              method: "servlet"
              methodParameters:
              - value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "default"
                  valueType: "java.lang.String"
                  fixed: true
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "io.undertow.servlet.handlers.DefaultServlet"
                  valueType: "java.lang.Class"
                  genericValueType: "? extends jakarta.servlet.Servlet"
                  fixed: true
            valueType: "io.undertow.servlet.api.ServletInfo"
            uuid: "servletInfo"
        methodName: "addServlet"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo7"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "io.undertow.servlet.Servlets"
        method: "servlet"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "default"
            valueType: "java.lang.String"
            uuid: "uniqueUuid68"
            fixed: true
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.servlet.handlers.DefaultServlet"
            valueType: "java.lang.Class"
            genericValueType: "? extends jakarta.servlet.Servlet"
            uuid: "uniqueUuid69"
            fixed: true
      valueType: "io.undertow.servlet.api.ServletInfo"
      uuid: "servletInfo"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.ErrorPage"
      uuid: "object"
      collectionUuid: "set2"
    - sapientType: "ENUM"
      content: !<regular>
        value: "CONTINUE"
      valueType: "org.springframework.http.HttpStatus"
      uuid: "status"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.ErrorPage"
      uuid: "object"
      collectionUuid: "set2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getPath1"
      valueType: "java.lang.String"
      uuid: "path"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.ErrorPage"
      uuid: "object"
      collectionUuid: "set2"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int9"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo8"
    - sapientType: "ANY"
      valueType: "io.undertow.servlet.api.ErrorPage"
      uuid: "errorPage"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "io.undertow.servlet.api.ServletStackTraces"
            uuid: "Enum-io.undertow.servlet.api.ServletStackTraces-NONE"
            fixed: true
        methodName: "setServletStackTraces"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo9"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "io.undertow.servlet.api.ServletStackTraces"
      uuid: "Enum-io.undertow.servlet.api.ServletStackTraces-NONE"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo10"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.embedded.undertow.CompositeResourceManager"
      uuid: "compositeResourceManager"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo11"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file3-pathname"
      valueType: "java.io.File"
      uuid: "file3"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "int7"
            fixed: true
        methodName: "setEagerFilterInit"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo12"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "int7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "int8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings5"
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            parameters: []
            values: []
          valueType: "java.util.List"
          genericValueType: "org.springframework.boot.web.server.MimeMappings$Mapping"
          uuid: "iterator3-CollectionContent"
      valueType: "java.util.Iterator"
      genericValueType: "org.springframework.boot.web.server.MimeMappings$Mapping"
      uuid: "iterator3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Session"
        parameters: []
        propertiesMap:
          persistent:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "persistent"
          timeout:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "timeout"
            fixed: true
      valueType: "org.springframework.boot.web.servlet.server.Session"
      uuid: "session4"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "persistent"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo13"
    - sapientType: "BASIC"
      content: !<regular>
        value: "locale"
      valueType: "java.lang.String"
      uuid: "string8"
    - sapientType: "BASIC"
      content: !<regular>
        value: "charset"
      valueType: "java.lang.String"
      uuid: "string9"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.Servlets"
      uuid: "Servlets.class"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.ServletContainer"
      uuid: "servletContainer"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.ServletContainer"
      uuid: "servletContainer"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.Deployment"
      uuid: "deployment"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.Deployment"
      uuid: "deployment2"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.Deployment"
      uuid: "deployment2"
    - sapientType: "MOCK"
      valueType: "io.undertow.server.session.SessionManager"
      uuid: "sessionManager"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Session"
        parameters: []
        propertiesMap:
          persistent:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "persistent"
          timeout:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "timeout"
            fixed: true
      valueType: "org.springframework.boot.web.servlet.server.Session"
      uuid: "session4"
    - sapientType: "NULL"
      valueType: "java.time.Duration"
      uuid: "timeout"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.server.session.SessionManager"
      uuid: "sessionManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: -1
      valueType: "int"
      uuid: "int10"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
      uuid: "undertowServletWebServer"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.Undertow$Builder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
            parameters: []
          valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
          uuid: "undertowWebServerFactoryDelegate"
          fixed: true
        methodParameters:
        - name: "factory"
          value:
            sapientType: "THIS"
            valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
            uuid: "targetClassObject"
            fixed: true
        - name: "sslBundleSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "uniqueUuid70"
        methodName: "createBuilder"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "BASIC"
      content: !<regular>
        value: 2
      valueType: "int"
      uuid: "port"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
      uuid: "undertowServletWebServer"
    branches:
    - lineNumber: 375
      expression: "this.resourceLoader != null"
      range: "(375,7)-(375,33)"
      evaluatedAs: false
      internalMethodName: "getServletClassLoader"
    - lineNumber: 310
      expression: "isRegisterDefaultServlet()"
      range: "(310,7)-(310,32)"
      evaluatedAs: true
      internalMethodName: "createManager"
    - lineNumber: 427
      expression: "for-each(getErrorPages())"
      range: "(427,30)-(427,44)"
      evaluatedAs: true
      internalMethodName: "configureErrorPages"
    - lineNumber: 433
      expression: "errorPage.getStatus() != null"
      range: "(433,7)-(433,35)"
      evaluatedAs: true
      internalMethodName: "getUndertowErrorPage"
    - lineNumber: 418
      expression: "docBase != null"
      range: "(418,17)-(418,31)"
      evaluatedAs: true
      internalMethodName: "getCanonicalDocumentRoot"
    - lineNumber: 387
      expression: "docBase.isDirectory()"
      range: "(387,34)-(387,54)"
      evaluatedAs: true
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 389
      expression: "root != null"
      range: "(389,7)-(389,18)"
      evaluatedAs: true
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 393
      expression: "for-each(metaInfResourceUrls)"
      range: "(393,18)-(393,36)"
      evaluatedAs: true
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 394
      expression: "\\\"file\\\".equals(url.getProtocol())"
      range: "(394,8)-(394,39)"
      evaluatedAs: false
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 443
      expression: "for-each(getMimeMappings())"
      range: "(443,30)-(443,46)"
      evaluatedAs: false
      internalMethodName: "configureMimeMappings"
    - lineNumber: 342
      expression: "for-each(getWebListenerClassNames())"
      range: "(342,27)-(342,52)"
      evaluatedAs: false
      internalMethodName: "configureWebListeners"
    - lineNumber: 321
      expression: "for-each(this.deploymentInfoCustomizers)"
      range: "(321,54)-(321,83)"
      evaluatedAs: false
      internalMethodName: "createManager"
    - lineNumber: 324
      expression: "getSession().isPersistent()"
      range: "(324,7)-(324,33)"
      evaluatedAs: false
      internalMethodName: "createManager"
    - lineNumber: 331
      expression: "manager.getDeployment() instanceof DeploymentImpl managerDeployment"
      range: "(331,7)-(331,73)"
      evaluatedAs: false
      internalMethodName: "createManager"
    - lineNumber: 358
      expression: "timeoutDuration == null"
      range: "(358,10)-(358,32)"
      evaluatedAs: true
      internalMethodName: "isZeroOrLess"
    - lineNumber: 336
      expression: "isZeroOrLess(timeoutDuration)"
      range: "(336,25)-(336,53)"
      evaluatedAs: true
      internalMethodName: "createManager"
  - pathId: "path15"
    testPathName: "getWebServerWhenManagerGetDeploymentNotInstanceOfDeploymentImplAndTimeoutDurationIsNullAndIsZeroOrLessTimeoutDuration4"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "1A7D7CCE0193D341067AED0C67A9C65C"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6A13043F3306A60CE4000F64FFF3E1E7"
      valueUuid: "target"
    - type: "INPUT"
      name: "initializers"
      modelFingerprint: "6BEFA360E7AAB6F6818E0508F15D68E1"
      valueUuid: "initializers"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9212DE2B3A3A58812CCC36B248184E13"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid71):void3"
        staticAccess: true
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "8DADDE93492B3FCDB8B3288E7332DF18"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "createBuilder(factory:targetClassObject,sslBundleSupplier:uniqueUuid72):undertow.Builder"
    - type: "STATIC"
      name: "Servlets.class"
      modelFingerprint: "7BC06AC1283B8D389463CFECF6BB29A4"
      valueUuid: "Servlets.class"
      methodExercised:
        expression: "deployment():deploymentInfo"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "DFE1B5D8FA6B4EDA983290EDA606FCD8"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addServletContainerInitializer(servletContainerInitializer:servletContainerInitializerInfo):deploymentInfo2"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "FD017A9BD536F1BEB099BA0D2A9189FC"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setClassLoader(classLoader:classLoader):deploymentInfo3"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "2413A3720B277E1264AEFD5E1A7CEF69"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setContextPath(contextPath:contextPath):deploymentInfo4"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "DFD5BCD1E5F667BE7070C76D56F5F370"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setDisplayName(displayName:string4):deploymentInfo5"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "C2009D0995EC20B53F18559EF3F67DF1"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setDeploymentName(deploymentName:uniqueUuid76):deploymentInfo6"
    - type: "STATIC"
      name: "Servlets.class.real"
      modelFingerprint: "4A671F4ABDD67E58C7F506CAE2A46371"
      valueUuid: "Servlets.class.real"
      methodExercised:
        expression: "servlet(name:uniqueUuid78,servletClass:uniqueUuid79):servletInfo"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "C6B0D1553ED8C4B21220FB2DD7E78129"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addServlet(servlet:servletInfo):deploymentInfo7"
    - type: "LOCAL_VARIABLE"
      name: "errorPage"
      modelFingerprint: "8D604FE80C97354503FC9433EC730C59"
      valueUuid: "object"
      methodExercised:
        expression: "getStatus():status"
    - type: "LOCAL_VARIABLE"
      name: "errorPage"
      modelFingerprint: "33F2E1853486625C56F44B17DCB76693"
      valueUuid: "object"
      methodExercised:
        expression: "getException():exception"
    - type: "LOCAL_VARIABLE"
      name: "errorPage"
      modelFingerprint: "4239FB76EFF9936513A39E6A03559CE3"
      valueUuid: "object"
      methodExercised:
        expression: "getPath():path"
    - type: "LOCAL_VARIABLE"
      name: "errorPage"
      modelFingerprint: "33F2E1853486625C56F44B17DCB76693"
      valueUuid: "object"
      methodExercised:
        expression: "getException():exception"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "855D57E3CF3356215F39C6D3626930A5"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addErrorPage(errorPage:errorPage):deploymentInfo8"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "5DA5A1EAE8BB74F85A1F10074055BB43"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setServletStackTraces(servletStackTraces:Enum-io.undertow.servlet.api.ServletStackTraces-NONE):deploymentInfo9"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "6F593FB404DB37D620328742AADDE2CB"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setResourceManager(resourceManager:compositeResourceManager):deploymentInfo10"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "4557A779E7B6B5A3D19EC38B322EF96F"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setTempDir(tempDir:file4):deploymentInfo11"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "79020A62BFC4B953E7819E652D57F9DE"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setEagerFilterInit(eagerFilterInit:int7):deploymentInfo12"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "6756B4E7A2B932E9E7E7DDE61EF4A382"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setPreservePathOnForward(preservePathOnForward:int8):void7"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "AC98894B35A5EE9D3B6B31D9F2EDDF20"
      valueUuid: "mimeMappings5"
      methodExercised:
        expression: "iterator():iterator3"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F0251C635933C730807879F2F41D706B"
      valueUuid: "session4"
      methodExercised:
        expression: "isPersistent():persistent"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "DD62A5AE63E7AC9FEAFEC804F651279F"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addLocaleCharsetMapping(locale:string8,charset:string9):deploymentInfo13"
    - type: "STATIC"
      name: "Servlets.class"
      modelFingerprint: "DA4CBABA4B30C2549402D3ED0837DC38"
      valueUuid: "Servlets.class"
      methodExercised:
        expression: "newContainer():servletContainer"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "137FC84003338874E813A7241310FABB"
      valueUuid: "servletContainer"
      methodExercised:
        expression: "addDeployment(arg0:deploymentInfo):deploymentManager"
    - type: "LOCAL_VARIABLE"
      name: "manager"
      modelFingerprint: "AB17A24630E8232D42862E37F39971DC"
      valueUuid: "deploymentManager"
      methodExercised:
        expression: "deploy():void9"
    - type: "LOCAL_VARIABLE"
      name: "manager"
      modelFingerprint: "E312078B1FC097E1FAC32B6FC92FDED0"
      valueUuid: "deploymentManager"
      methodExercised:
        expression: "getDeployment():deployment"
    - type: "LOCAL_VARIABLE"
      name: "manager"
      modelFingerprint: "614F170FF0E1B9F825566FC8714C868A"
      valueUuid: "deploymentManager"
      methodExercised:
        expression: "getDeployment():deployment2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "0B0E3DA7F499072DEE603987ED55168C"
      valueUuid: "deployment2"
      methodExercised:
        expression: "getSessionManager():sessionManager"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "8D92AEF0ACF19C7A62675F7544CC5859"
      valueUuid: "session4"
      methodExercised:
        expression: "getTimeout():timeout"
    - type: "LOCAL_VARIABLE"
      name: "sessionManager"
      modelFingerprint: "6BC676AB1B8273D8CDAD56C46DA1291F"
      valueUuid: "sessionManager"
      methodExercised:
        expression: "setDefaultSessionTimeout(arg0:int9):void10"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "D03E233217C1DD5A76CCC015D45689E4"
      methodExercised:
        expression: "getUndertowWebServer(builder:undertow.Builder,manager:deploymentManager,port:port):undertowServletWebServer"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8EAADE33D91E58F2D0E069A6ED8DC321"
      valueUuid: "undertowServletWebServer"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "Builder builder = this.delegate.createBuilder(this, this::getSslBundle);"
      lineNumber: 298
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: createBuilder"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/AB"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "int"
            uuid: "port"
        propertiesMap:
          registerDefaultServlet:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "boolean15"
          localeCharsetMappings:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashMap"
              parameters: []
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.util.Locale"
                      parameters:
                      - name: "language"
                        value:
                          sapientType: "BASIC"
                          content: !<regular>
                            value: "language1"
                          valueType: "java.lang.String"
                          uuid: "locale-language"
                    valueType: "java.util.Locale"
                    uuid: "locale"
                    collectionUuid: "map4"
                    nameForMock: "locale"
                  value:
                    sapientType: "OBJECT"
                    content: !<static_method_return>
                      target: "java.nio.charset.Charset"
                      method: "defaultCharset"
                      methodParameters: []
                    valueType: "java.nio.charset.Charset"
                    uuid: "charset"
                    collectionUuid: "map4"
                    nameForMock: "charset"
                valueType: "java.util.Map$Entry"
            valueType: "java.util.Map"
            genericValueType: "java.util.Locale,java.nio.charset.Charset"
            uuid: "map4"
          displayName:
            sapientType: "BASIC"
            content: !<regular>
              value: "displayName1"
            valueType: "java.lang.String"
            uuid: "string4"
          errorPages:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashSet"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.web.server.ErrorPage"
                uuid: "object"
                collectionUuid: "set2"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.web.server.ErrorPage"
            uuid: "set2"
          session:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.servlet.server.Session"
              parameters: []
              propertiesMap:
                persistent:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: false
                  valueType: "boolean"
                  uuid: "persistent"
                timeout:
                  sapientType: "NULL"
                  valueType: "java.time.Duration"
                  uuid: "timeout"
                  fixed: true
            valueType: "org.springframework.boot.web.servlet.server.Session"
            uuid: "session4"
          mimeMappings:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings5"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.servlet.ServletContextInitializer[]"
      uuid: "initializers"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/AB"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid71"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.Undertow$Builder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
            parameters: []
          valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
          uuid: "undertowWebServerFactoryDelegate"
          fixed: true
        methodParameters:
        - name: "factory"
          value:
            sapientType: "THIS"
            valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
            uuid: "targetClassObject"
            fixed: true
        - name: "sslBundleSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "uniqueUuid84"
        methodName: "createBuilder"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "uniqueUuid72"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.Servlets"
      uuid: "Servlets.class"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo2"
    - sapientType: "ANY"
      valueType: "io.undertow.servlet.api.ServletContainerInitializerInfo"
      uuid: "servletContainerInitializerInfo"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "java.lang.ClassLoader"
              localVariableValue:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
                valueType: "java.lang.Class"
                genericValueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
                fixed: true
              methodParameters: []
              methodName: "getClassLoader"
            valueType: "java.lang.ClassLoader"
            uuid: "classLoader"
        methodName: "setClassLoader"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo3"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.ClassLoader"
        localVariableValue:
          sapientType: "CLASS"
          content: !<regular>
            value: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
          valueType: "java.lang.Class"
          genericValueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
          uuid: "uniqueUuid75"
          fixed: true
        methodParameters: []
        methodName: "getClassLoader"
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/AB"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "displayName1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "spring-boot"
            valueType: "java.lang.String"
            uuid: "uniqueUuid77"
            fixed: true
        methodName: "setDeploymentName"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "spring-boot"
      valueType: "java.lang.String"
      uuid: "uniqueUuid76"
      fixed: true
    - sapientType: "REAL"
      valueType: "io.undertow.servlet.Servlets"
      uuid: "Servlets.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "io.undertow.servlet.Servlets"
        method: "servlet"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "default"
            valueType: "java.lang.String"
            uuid: "uniqueUuid82"
            fixed: true
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.servlet.handlers.DefaultServlet"
            valueType: "java.lang.Class"
            genericValueType: "? extends jakarta.servlet.Servlet"
            uuid: "uniqueUuid83"
            fixed: true
      valueType: "io.undertow.servlet.api.ServletInfo"
      uuid: "servletInfo"
    - sapientType: "BASIC"
      content: !<regular>
        value: "default"
      valueType: "java.lang.String"
      uuid: "uniqueUuid78"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "io.undertow.servlet.handlers.DefaultServlet"
      valueType: "java.lang.Class"
      genericValueType: "? extends jakarta.servlet.Servlet"
      uuid: "uniqueUuid79"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "io.undertow.servlet.Servlets"
              method: "servlet"
              methodParameters:
              - value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "default"
                  valueType: "java.lang.String"
                  fixed: true
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "io.undertow.servlet.handlers.DefaultServlet"
                  valueType: "java.lang.Class"
                  genericValueType: "? extends jakarta.servlet.Servlet"
                  fixed: true
            valueType: "io.undertow.servlet.api.ServletInfo"
            uuid: "servletInfo"
        methodName: "addServlet"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo7"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "io.undertow.servlet.Servlets"
        method: "servlet"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "default"
            valueType: "java.lang.String"
            uuid: "uniqueUuid82"
            fixed: true
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.servlet.handlers.DefaultServlet"
            valueType: "java.lang.Class"
            genericValueType: "? extends jakarta.servlet.Servlet"
            uuid: "uniqueUuid83"
            fixed: true
      valueType: "io.undertow.servlet.api.ServletInfo"
      uuid: "servletInfo"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.ErrorPage"
      uuid: "object"
      collectionUuid: "set2"
    - sapientType: "NULL"
      valueType: "org.springframework.http.HttpStatus"
      uuid: "status"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.ErrorPage"
      uuid: "object"
      collectionUuid: "set2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "? extends java.lang.Throwable"
      valueType: "java.lang.Class"
      genericValueType: "? extends java.lang.Throwable"
      uuid: "exception"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.ErrorPage"
      uuid: "object"
      collectionUuid: "set2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getPath1"
      valueType: "java.lang.String"
      uuid: "path"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.ErrorPage"
      uuid: "object"
      collectionUuid: "set2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "? extends java.lang.Throwable"
      valueType: "java.lang.Class"
      genericValueType: "? extends java.lang.Throwable"
      uuid: "exception"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo8"
    - sapientType: "ANY"
      valueType: "io.undertow.servlet.api.ErrorPage"
      uuid: "errorPage"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "io.undertow.servlet.api.ServletStackTraces"
            uuid: "Enum-io.undertow.servlet.api.ServletStackTraces-NONE"
            fixed: true
        methodName: "setServletStackTraces"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo9"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "io.undertow.servlet.api.ServletStackTraces"
      uuid: "Enum-io.undertow.servlet.api.ServletStackTraces-NONE"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo10"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.embedded.undertow.CompositeResourceManager"
      uuid: "compositeResourceManager"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo11"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file4-pathname"
      valueType: "java.io.File"
      uuid: "file4"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "int7"
            fixed: true
        methodName: "setEagerFilterInit"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo12"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "int7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "int8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings5"
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            parameters: []
            values: []
          valueType: "java.util.List"
          genericValueType: "org.springframework.boot.web.server.MimeMappings$Mapping"
          uuid: "iterator3-CollectionContent"
      valueType: "java.util.Iterator"
      genericValueType: "org.springframework.boot.web.server.MimeMappings$Mapping"
      uuid: "iterator3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Session"
        parameters: []
        propertiesMap:
          persistent:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "persistent"
          timeout:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "timeout"
            fixed: true
      valueType: "org.springframework.boot.web.servlet.server.Session"
      uuid: "session4"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "persistent"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo13"
    - sapientType: "BASIC"
      content: !<regular>
        value: "locale"
      valueType: "java.lang.String"
      uuid: "string8"
    - sapientType: "BASIC"
      content: !<regular>
        value: "charset"
      valueType: "java.lang.String"
      uuid: "string9"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.Servlets"
      uuid: "Servlets.class"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.ServletContainer"
      uuid: "servletContainer"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.ServletContainer"
      uuid: "servletContainer"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.Deployment"
      uuid: "deployment"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.Deployment"
      uuid: "deployment2"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.Deployment"
      uuid: "deployment2"
    - sapientType: "MOCK"
      valueType: "io.undertow.server.session.SessionManager"
      uuid: "sessionManager"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Session"
        parameters: []
        propertiesMap:
          persistent:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "persistent"
          timeout:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "timeout"
            fixed: true
      valueType: "org.springframework.boot.web.servlet.server.Session"
      uuid: "session4"
    - sapientType: "NULL"
      valueType: "java.time.Duration"
      uuid: "timeout"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.server.session.SessionManager"
      uuid: "sessionManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: -1
      valueType: "int"
      uuid: "int9"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
      uuid: "undertowServletWebServer"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.Undertow$Builder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
            parameters: []
          valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
          uuid: "undertowWebServerFactoryDelegate"
          fixed: true
        methodParameters:
        - name: "factory"
          value:
            sapientType: "THIS"
            valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
            uuid: "targetClassObject"
            fixed: true
        - name: "sslBundleSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "uniqueUuid84"
        methodName: "createBuilder"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "BASIC"
      content: !<regular>
        value: 2
      valueType: "int"
      uuid: "port"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
      uuid: "undertowServletWebServer"
    branches:
    - lineNumber: 375
      expression: "this.resourceLoader != null"
      range: "(375,7)-(375,33)"
      evaluatedAs: false
      internalMethodName: "getServletClassLoader"
    - lineNumber: 310
      expression: "isRegisterDefaultServlet()"
      range: "(310,7)-(310,32)"
      evaluatedAs: true
      internalMethodName: "createManager"
    - lineNumber: 427
      expression: "for-each(getErrorPages())"
      range: "(427,30)-(427,44)"
      evaluatedAs: true
      internalMethodName: "configureErrorPages"
    - lineNumber: 433
      expression: "errorPage.getStatus() != null"
      range: "(433,7)-(433,35)"
      evaluatedAs: false
      internalMethodName: "getUndertowErrorPage"
    - lineNumber: 436
      expression: "errorPage.getException() != null"
      range: "(436,7)-(436,38)"
      evaluatedAs: true
      internalMethodName: "getUndertowErrorPage"
    - lineNumber: 418
      expression: "docBase != null"
      range: "(418,17)-(418,31)"
      evaluatedAs: false
      internalMethodName: "getCanonicalDocumentRoot"
    - lineNumber: 387
      expression: "docBase.isDirectory()"
      range: "(387,34)-(387,54)"
      evaluatedAs: false
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 389
      expression: "root != null"
      range: "(389,7)-(389,18)"
      evaluatedAs: false
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 393
      expression: "for-each(metaInfResourceUrls)"
      range: "(393,18)-(393,36)"
      evaluatedAs: false
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 443
      expression: "for-each(getMimeMappings())"
      range: "(443,30)-(443,46)"
      evaluatedAs: false
      internalMethodName: "configureMimeMappings"
    - lineNumber: 342
      expression: "for-each(getWebListenerClassNames())"
      range: "(342,27)-(342,52)"
      evaluatedAs: false
      internalMethodName: "configureWebListeners"
    - lineNumber: 321
      expression: "for-each(this.deploymentInfoCustomizers)"
      range: "(321,54)-(321,83)"
      evaluatedAs: false
      internalMethodName: "createManager"
    - lineNumber: 324
      expression: "getSession().isPersistent()"
      range: "(324,7)-(324,33)"
      evaluatedAs: false
      internalMethodName: "createManager"
    - lineNumber: 331
      expression: "manager.getDeployment() instanceof DeploymentImpl managerDeployment"
      range: "(331,7)-(331,73)"
      evaluatedAs: false
      internalMethodName: "createManager"
    - lineNumber: 358
      expression: "timeoutDuration == null"
      range: "(358,10)-(358,32)"
      evaluatedAs: true
      internalMethodName: "isZeroOrLess"
    - lineNumber: 336
      expression: "isZeroOrLess(timeoutDuration)"
      range: "(336,25)-(336,53)"
      evaluatedAs: true
      internalMethodName: "createManager"
  - pathId: "path16"
    testPathName: "getWebServerWhenManagerGetDeploymentNotInstanceOfDeploymentImplAndTimeoutDurationIsNullAndIsZeroOrLessTimeoutDuration5"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "6D09C237D94225A76BF65A4A57950C5D"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6A13043F3306A60CE4000F64FFF3E1E7"
      valueUuid: "target"
    - type: "INPUT"
      name: "initializers"
      modelFingerprint: "6BEFA360E7AAB6F6818E0508F15D68E1"
      valueUuid: "initializers"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9212DE2B3A3A58812CCC36B248184E13"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid85):void3"
        staticAccess: true
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "8DADDE93492B3FCDB8B3288E7332DF18"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "createBuilder(factory:targetClassObject,sslBundleSupplier:uniqueUuid86):undertow.Builder"
    - type: "STATIC"
      name: "Servlets.class"
      modelFingerprint: "7BC06AC1283B8D389463CFECF6BB29A4"
      valueUuid: "Servlets.class"
      methodExercised:
        expression: "deployment():deploymentInfo"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "DFE1B5D8FA6B4EDA983290EDA606FCD8"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addServletContainerInitializer(servletContainerInitializer:servletContainerInitializerInfo):deploymentInfo2"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "FD017A9BD536F1BEB099BA0D2A9189FC"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setClassLoader(classLoader:classLoader):deploymentInfo3"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "2413A3720B277E1264AEFD5E1A7CEF69"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setContextPath(contextPath:contextPath):deploymentInfo4"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "DFD5BCD1E5F667BE7070C76D56F5F370"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setDisplayName(displayName:string4):deploymentInfo5"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "C2009D0995EC20B53F18559EF3F67DF1"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setDeploymentName(deploymentName:uniqueUuid90):deploymentInfo6"
    - type: "STATIC"
      name: "Servlets.class.real"
      modelFingerprint: "4A671F4ABDD67E58C7F506CAE2A46371"
      valueUuid: "Servlets.class.real"
      methodExercised:
        expression: "servlet(name:uniqueUuid92,servletClass:uniqueUuid93):servletInfo"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "C6B0D1553ED8C4B21220FB2DD7E78129"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addServlet(servlet:servletInfo):deploymentInfo7"
    - type: "LOCAL_VARIABLE"
      name: "errorPage"
      modelFingerprint: "8D604FE80C97354503FC9433EC730C59"
      valueUuid: "object"
      methodExercised:
        expression: "getStatus():status"
    - type: "LOCAL_VARIABLE"
      name: "errorPage"
      modelFingerprint: "7EFC966F8ED1BD1903BB5AEA30559AAE"
      valueUuid: "object"
      methodExercised:
        expression: "getException():exception"
    - type: "LOCAL_VARIABLE"
      name: "errorPage"
      modelFingerprint: "4239FB76EFF9936513A39E6A03559CE3"
      valueUuid: "object"
      methodExercised:
        expression: "getPath():path"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "2864EFCCDCFF7208E50CF7647E4B90AE"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addErrorPage(errorPage:errorPage):deploymentInfo8"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "5DA5A1EAE8BB74F85A1F10074055BB43"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setServletStackTraces(servletStackTraces:Enum-io.undertow.servlet.api.ServletStackTraces-NONE):deploymentInfo9"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "6F593FB404DB37D620328742AADDE2CB"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setResourceManager(resourceManager:compositeResourceManager):deploymentInfo10"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "4557A779E7B6B5A3D19EC38B322EF96F"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setTempDir(tempDir:file4):deploymentInfo11"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "79020A62BFC4B953E7819E652D57F9DE"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setEagerFilterInit(eagerFilterInit:int7):deploymentInfo12"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "6756B4E7A2B932E9E7E7DDE61EF4A382"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setPreservePathOnForward(preservePathOnForward:int8):void7"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "AC98894B35A5EE9D3B6B31D9F2EDDF20"
      valueUuid: "mimeMappings5"
      methodExercised:
        expression: "iterator():iterator3"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F0251C635933C730807879F2F41D706B"
      valueUuid: "session4"
      methodExercised:
        expression: "isPersistent():persistent"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "DD62A5AE63E7AC9FEAFEC804F651279F"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addLocaleCharsetMapping(locale:string8,charset:string9):deploymentInfo13"
    - type: "STATIC"
      name: "Servlets.class"
      modelFingerprint: "DA4CBABA4B30C2549402D3ED0837DC38"
      valueUuid: "Servlets.class"
      methodExercised:
        expression: "newContainer():servletContainer"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "137FC84003338874E813A7241310FABB"
      valueUuid: "servletContainer"
      methodExercised:
        expression: "addDeployment(arg0:deploymentInfo):deploymentManager"
    - type: "LOCAL_VARIABLE"
      name: "manager"
      modelFingerprint: "AB17A24630E8232D42862E37F39971DC"
      valueUuid: "deploymentManager"
      methodExercised:
        expression: "deploy():void9"
    - type: "LOCAL_VARIABLE"
      name: "manager"
      modelFingerprint: "E312078B1FC097E1FAC32B6FC92FDED0"
      valueUuid: "deploymentManager"
      methodExercised:
        expression: "getDeployment():deployment"
    - type: "LOCAL_VARIABLE"
      name: "manager"
      modelFingerprint: "614F170FF0E1B9F825566FC8714C868A"
      valueUuid: "deploymentManager"
      methodExercised:
        expression: "getDeployment():deployment2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "0B0E3DA7F499072DEE603987ED55168C"
      valueUuid: "deployment2"
      methodExercised:
        expression: "getSessionManager():sessionManager"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "8D92AEF0ACF19C7A62675F7544CC5859"
      valueUuid: "session4"
      methodExercised:
        expression: "getTimeout():timeout"
    - type: "LOCAL_VARIABLE"
      name: "sessionManager"
      modelFingerprint: "6BC676AB1B8273D8CDAD56C46DA1291F"
      valueUuid: "sessionManager"
      methodExercised:
        expression: "setDefaultSessionTimeout(arg0:int9):void10"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "D03E233217C1DD5A76CCC015D45689E4"
      methodExercised:
        expression: "getUndertowWebServer(builder:undertow.Builder,manager:deploymentManager,port:port):undertowServletWebServer"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8EAADE33D91E58F2D0E069A6ED8DC321"
      valueUuid: "undertowServletWebServer"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "Builder builder = this.delegate.createBuilder(this, this::getSslBundle);"
      lineNumber: 298
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: createBuilder"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/AB"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "int"
            uuid: "port"
        propertiesMap:
          registerDefaultServlet:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "boolean15"
          localeCharsetMappings:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashMap"
              parameters: []
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.util.Locale"
                      parameters:
                      - name: "language"
                        value:
                          sapientType: "BASIC"
                          content: !<regular>
                            value: "language1"
                          valueType: "java.lang.String"
                          uuid: "locale-language"
                    valueType: "java.util.Locale"
                    uuid: "locale"
                    collectionUuid: "map4"
                    nameForMock: "locale"
                  value:
                    sapientType: "OBJECT"
                    content: !<static_method_return>
                      target: "java.nio.charset.Charset"
                      method: "defaultCharset"
                      methodParameters: []
                    valueType: "java.nio.charset.Charset"
                    uuid: "charset"
                    collectionUuid: "map4"
                    nameForMock: "charset"
                valueType: "java.util.Map$Entry"
            valueType: "java.util.Map"
            genericValueType: "java.util.Locale,java.nio.charset.Charset"
            uuid: "map4"
          displayName:
            sapientType: "BASIC"
            content: !<regular>
              value: "displayName1"
            valueType: "java.lang.String"
            uuid: "string4"
          errorPages:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashSet"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.web.server.ErrorPage"
                uuid: "object"
                collectionUuid: "set2"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.web.server.ErrorPage"
            uuid: "set2"
          session:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.servlet.server.Session"
              parameters: []
              propertiesMap:
                persistent:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: false
                  valueType: "boolean"
                  uuid: "persistent"
                timeout:
                  sapientType: "NULL"
                  valueType: "java.time.Duration"
                  uuid: "timeout"
                  fixed: true
            valueType: "org.springframework.boot.web.servlet.server.Session"
            uuid: "session4"
          mimeMappings:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings5"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.servlet.ServletContextInitializer[]"
      uuid: "initializers"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/AB"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid85"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.Undertow$Builder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
            parameters: []
          valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
          uuid: "undertowWebServerFactoryDelegate"
          fixed: true
        methodParameters:
        - name: "factory"
          value:
            sapientType: "THIS"
            valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
            uuid: "targetClassObject"
            fixed: true
        - name: "sslBundleSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "uniqueUuid98"
        methodName: "createBuilder"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "uniqueUuid86"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.Servlets"
      uuid: "Servlets.class"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo2"
    - sapientType: "ANY"
      valueType: "io.undertow.servlet.api.ServletContainerInitializerInfo"
      uuid: "servletContainerInitializerInfo"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "java.lang.ClassLoader"
              localVariableValue:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
                valueType: "java.lang.Class"
                genericValueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
                fixed: true
              methodParameters: []
              methodName: "getClassLoader"
            valueType: "java.lang.ClassLoader"
            uuid: "classLoader"
        methodName: "setClassLoader"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo3"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.ClassLoader"
        localVariableValue:
          sapientType: "CLASS"
          content: !<regular>
            value: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
          valueType: "java.lang.Class"
          genericValueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
          uuid: "uniqueUuid89"
          fixed: true
        methodParameters: []
        methodName: "getClassLoader"
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/AB"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "displayName1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "spring-boot"
            valueType: "java.lang.String"
            uuid: "uniqueUuid91"
            fixed: true
        methodName: "setDeploymentName"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "spring-boot"
      valueType: "java.lang.String"
      uuid: "uniqueUuid90"
      fixed: true
    - sapientType: "REAL"
      valueType: "io.undertow.servlet.Servlets"
      uuid: "Servlets.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "io.undertow.servlet.Servlets"
        method: "servlet"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "default"
            valueType: "java.lang.String"
            uuid: "uniqueUuid96"
            fixed: true
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.servlet.handlers.DefaultServlet"
            valueType: "java.lang.Class"
            genericValueType: "? extends jakarta.servlet.Servlet"
            uuid: "uniqueUuid97"
            fixed: true
      valueType: "io.undertow.servlet.api.ServletInfo"
      uuid: "servletInfo"
    - sapientType: "BASIC"
      content: !<regular>
        value: "default"
      valueType: "java.lang.String"
      uuid: "uniqueUuid92"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "io.undertow.servlet.handlers.DefaultServlet"
      valueType: "java.lang.Class"
      genericValueType: "? extends jakarta.servlet.Servlet"
      uuid: "uniqueUuid93"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "io.undertow.servlet.Servlets"
              method: "servlet"
              methodParameters:
              - value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "default"
                  valueType: "java.lang.String"
                  fixed: true
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "io.undertow.servlet.handlers.DefaultServlet"
                  valueType: "java.lang.Class"
                  genericValueType: "? extends jakarta.servlet.Servlet"
                  fixed: true
            valueType: "io.undertow.servlet.api.ServletInfo"
            uuid: "servletInfo"
        methodName: "addServlet"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo7"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "io.undertow.servlet.Servlets"
        method: "servlet"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "default"
            valueType: "java.lang.String"
            uuid: "uniqueUuid96"
            fixed: true
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.servlet.handlers.DefaultServlet"
            valueType: "java.lang.Class"
            genericValueType: "? extends jakarta.servlet.Servlet"
            uuid: "uniqueUuid97"
            fixed: true
      valueType: "io.undertow.servlet.api.ServletInfo"
      uuid: "servletInfo"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.ErrorPage"
      uuid: "object"
      collectionUuid: "set2"
    - sapientType: "NULL"
      valueType: "org.springframework.http.HttpStatus"
      uuid: "status"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.ErrorPage"
      uuid: "object"
      collectionUuid: "set2"
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      genericValueType: "? extends java.lang.Throwable"
      uuid: "exception"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.ErrorPage"
      uuid: "object"
      collectionUuid: "set2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getPath1"
      valueType: "java.lang.String"
      uuid: "path"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo8"
    - sapientType: "ANY"
      valueType: "io.undertow.servlet.api.ErrorPage"
      uuid: "errorPage"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "io.undertow.servlet.api.ServletStackTraces"
            uuid: "Enum-io.undertow.servlet.api.ServletStackTraces-NONE"
            fixed: true
        methodName: "setServletStackTraces"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo9"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "io.undertow.servlet.api.ServletStackTraces"
      uuid: "Enum-io.undertow.servlet.api.ServletStackTraces-NONE"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo10"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.embedded.undertow.CompositeResourceManager"
      uuid: "compositeResourceManager"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo11"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file4-pathname"
      valueType: "java.io.File"
      uuid: "file4"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "int7"
            fixed: true
        methodName: "setEagerFilterInit"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo12"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "int7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "int8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings5"
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            parameters: []
            values: []
          valueType: "java.util.List"
          genericValueType: "org.springframework.boot.web.server.MimeMappings$Mapping"
          uuid: "iterator3-CollectionContent"
      valueType: "java.util.Iterator"
      genericValueType: "org.springframework.boot.web.server.MimeMappings$Mapping"
      uuid: "iterator3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Session"
        parameters: []
        propertiesMap:
          persistent:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "persistent"
          timeout:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "timeout"
            fixed: true
      valueType: "org.springframework.boot.web.servlet.server.Session"
      uuid: "session4"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "persistent"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo13"
    - sapientType: "BASIC"
      content: !<regular>
        value: "locale"
      valueType: "java.lang.String"
      uuid: "string8"
    - sapientType: "BASIC"
      content: !<regular>
        value: "charset"
      valueType: "java.lang.String"
      uuid: "string9"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.Servlets"
      uuid: "Servlets.class"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.ServletContainer"
      uuid: "servletContainer"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.ServletContainer"
      uuid: "servletContainer"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.Deployment"
      uuid: "deployment"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.Deployment"
      uuid: "deployment2"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.Deployment"
      uuid: "deployment2"
    - sapientType: "MOCK"
      valueType: "io.undertow.server.session.SessionManager"
      uuid: "sessionManager"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Session"
        parameters: []
        propertiesMap:
          persistent:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "persistent"
          timeout:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "timeout"
            fixed: true
      valueType: "org.springframework.boot.web.servlet.server.Session"
      uuid: "session4"
    - sapientType: "NULL"
      valueType: "java.time.Duration"
      uuid: "timeout"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.server.session.SessionManager"
      uuid: "sessionManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: -1
      valueType: "int"
      uuid: "int9"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
      uuid: "undertowServletWebServer"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.Undertow$Builder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
            parameters: []
          valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
          uuid: "undertowWebServerFactoryDelegate"
          fixed: true
        methodParameters:
        - name: "factory"
          value:
            sapientType: "THIS"
            valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
            uuid: "targetClassObject"
            fixed: true
        - name: "sslBundleSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "uniqueUuid98"
        methodName: "createBuilder"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "BASIC"
      content: !<regular>
        value: 2
      valueType: "int"
      uuid: "port"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
      uuid: "undertowServletWebServer"
    branches:
    - lineNumber: 375
      expression: "this.resourceLoader != null"
      range: "(375,7)-(375,33)"
      evaluatedAs: false
      internalMethodName: "getServletClassLoader"
    - lineNumber: 310
      expression: "isRegisterDefaultServlet()"
      range: "(310,7)-(310,32)"
      evaluatedAs: true
      internalMethodName: "createManager"
    - lineNumber: 427
      expression: "for-each(getErrorPages())"
      range: "(427,30)-(427,44)"
      evaluatedAs: true
      internalMethodName: "configureErrorPages"
    - lineNumber: 433
      expression: "errorPage.getStatus() != null"
      range: "(433,7)-(433,35)"
      evaluatedAs: false
      internalMethodName: "getUndertowErrorPage"
    - lineNumber: 436
      expression: "errorPage.getException() != null"
      range: "(436,7)-(436,38)"
      evaluatedAs: false
      internalMethodName: "getUndertowErrorPage"
    - lineNumber: 418
      expression: "docBase != null"
      range: "(418,17)-(418,31)"
      evaluatedAs: false
      internalMethodName: "getCanonicalDocumentRoot"
    - lineNumber: 387
      expression: "docBase.isDirectory()"
      range: "(387,34)-(387,54)"
      evaluatedAs: false
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 389
      expression: "root != null"
      range: "(389,7)-(389,18)"
      evaluatedAs: false
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 393
      expression: "for-each(metaInfResourceUrls)"
      range: "(393,18)-(393,36)"
      evaluatedAs: false
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 443
      expression: "for-each(getMimeMappings())"
      range: "(443,30)-(443,46)"
      evaluatedAs: false
      internalMethodName: "configureMimeMappings"
    - lineNumber: 342
      expression: "for-each(getWebListenerClassNames())"
      range: "(342,27)-(342,52)"
      evaluatedAs: false
      internalMethodName: "configureWebListeners"
    - lineNumber: 321
      expression: "for-each(this.deploymentInfoCustomizers)"
      range: "(321,54)-(321,83)"
      evaluatedAs: false
      internalMethodName: "createManager"
    - lineNumber: 324
      expression: "getSession().isPersistent()"
      range: "(324,7)-(324,33)"
      evaluatedAs: false
      internalMethodName: "createManager"
    - lineNumber: 331
      expression: "manager.getDeployment() instanceof DeploymentImpl managerDeployment"
      range: "(331,7)-(331,73)"
      evaluatedAs: false
      internalMethodName: "createManager"
    - lineNumber: 358
      expression: "timeoutDuration == null"
      range: "(358,10)-(358,32)"
      evaluatedAs: true
      internalMethodName: "isZeroOrLess"
    - lineNumber: 336
      expression: "isZeroOrLess(timeoutDuration)"
      range: "(336,25)-(336,53)"
      evaluatedAs: true
      internalMethodName: "createManager"
  - pathId: "path10"
    testPathName: "getWebServerWhenManagerGetDeploymentNotInstanceOfDeploymentImplAndTimeoutDurationIsNullAndIsZeroOrLessTimeoutDuration8"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "50BD793BF93953D9FBB6190104622ECD"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6A13043F3306A60CE4000F64FFF3E1E7"
      valueUuid: "target"
    - type: "INPUT"
      name: "initializers"
      modelFingerprint: "6BEFA360E7AAB6F6818E0508F15D68E1"
      valueUuid: "initializers"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9212DE2B3A3A58812CCC36B248184E13"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid99):void3"
        staticAccess: true
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "8DADDE93492B3FCDB8B3288E7332DF18"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "createBuilder(factory:targetClassObject,sslBundleSupplier:uniqueUuid100):undertow.Builder"
    - type: "STATIC"
      name: "Servlets.class"
      modelFingerprint: "7BC06AC1283B8D389463CFECF6BB29A4"
      valueUuid: "Servlets.class"
      methodExercised:
        expression: "deployment():deploymentInfo"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "DFE1B5D8FA6B4EDA983290EDA606FCD8"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addServletContainerInitializer(servletContainerInitializer:servletContainerInitializerInfo):deploymentInfo2"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "FD017A9BD536F1BEB099BA0D2A9189FC"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setClassLoader(classLoader:classLoader):deploymentInfo3"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "2413A3720B277E1264AEFD5E1A7CEF69"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setContextPath(contextPath:contextPath):deploymentInfo4"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "DFD5BCD1E5F667BE7070C76D56F5F370"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setDisplayName(displayName:string4):deploymentInfo5"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "C2009D0995EC20B53F18559EF3F67DF1"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setDeploymentName(deploymentName:uniqueUuid104):deploymentInfo6"
    - type: "STATIC"
      name: "Servlets.class.real"
      modelFingerprint: "4A671F4ABDD67E58C7F506CAE2A46371"
      valueUuid: "Servlets.class.real"
      methodExercised:
        expression: "servlet(name:uniqueUuid106,servletClass:uniqueUuid107):servletInfo"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "C6B0D1553ED8C4B21220FB2DD7E78129"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addServlet(servlet:servletInfo):deploymentInfo7"
    - type: "LOCAL_VARIABLE"
      name: "errorPage"
      modelFingerprint: "4FCFAB2DEC46250D9C061F0A8C658A54"
      valueUuid: "object"
      methodExercised:
        expression: "getStatus():status"
    - type: "LOCAL_VARIABLE"
      name: "errorPage"
      modelFingerprint: "4239FB76EFF9936513A39E6A03559CE3"
      valueUuid: "object"
      methodExercised:
        expression: "getPath():path"
    - type: "LOCAL_VARIABLE"
      name: "errorPage"
      modelFingerprint: "224B739BABD069DDF43532F203EBA48D"
      valueUuid: "object"
      methodExercised:
        expression: "getStatusCode():int9"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "6A64E225FED690CD432C9E544435C13E"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addErrorPage(errorPage:errorPage):deploymentInfo8"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "5DA5A1EAE8BB74F85A1F10074055BB43"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setServletStackTraces(servletStackTraces:Enum-io.undertow.servlet.api.ServletStackTraces-NONE):deploymentInfo9"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "80ED1C8363747C1B7FBB7B70B10134ED"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setResourceManager(resourceManager:compositeResourceManager):deploymentInfo10"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "4557A779E7B6B5A3D19EC38B322EF96F"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setTempDir(tempDir:file5):deploymentInfo11"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "79020A62BFC4B953E7819E652D57F9DE"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setEagerFilterInit(eagerFilterInit:int7):deploymentInfo12"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "6756B4E7A2B932E9E7E7DDE61EF4A382"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setPreservePathOnForward(preservePathOnForward:int8):void6"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "AC98894B35A5EE9D3B6B31D9F2EDDF20"
      valueUuid: "mimeMappings5"
      methodExercised:
        expression: "iterator():iterator3"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F0251C635933C730807879F2F41D706B"
      valueUuid: "session4"
      methodExercised:
        expression: "isPersistent():persistent"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "DD62A5AE63E7AC9FEAFEC804F651279F"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addLocaleCharsetMapping(locale:string8,charset:string9):deploymentInfo13"
    - type: "STATIC"
      name: "Servlets.class"
      modelFingerprint: "DA4CBABA4B30C2549402D3ED0837DC38"
      valueUuid: "Servlets.class"
      methodExercised:
        expression: "newContainer():servletContainer"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "137FC84003338874E813A7241310FABB"
      valueUuid: "servletContainer"
      methodExercised:
        expression: "addDeployment(arg0:deploymentInfo):deploymentManager"
    - type: "LOCAL_VARIABLE"
      name: "manager"
      modelFingerprint: "AB17A24630E8232D42862E37F39971DC"
      valueUuid: "deploymentManager"
      methodExercised:
        expression: "deploy():void8"
    - type: "LOCAL_VARIABLE"
      name: "manager"
      modelFingerprint: "E312078B1FC097E1FAC32B6FC92FDED0"
      valueUuid: "deploymentManager"
      methodExercised:
        expression: "getDeployment():deployment"
    - type: "LOCAL_VARIABLE"
      name: "manager"
      modelFingerprint: "614F170FF0E1B9F825566FC8714C868A"
      valueUuid: "deploymentManager"
      methodExercised:
        expression: "getDeployment():deployment2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "0B0E3DA7F499072DEE603987ED55168C"
      valueUuid: "deployment2"
      methodExercised:
        expression: "getSessionManager():sessionManager"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "8D92AEF0ACF19C7A62675F7544CC5859"
      valueUuid: "session4"
      methodExercised:
        expression: "getTimeout():timeout"
    - type: "LOCAL_VARIABLE"
      name: "sessionManager"
      modelFingerprint: "6BC676AB1B8273D8CDAD56C46DA1291F"
      valueUuid: "sessionManager"
      methodExercised:
        expression: "setDefaultSessionTimeout(arg0:int10):void9"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "D03E233217C1DD5A76CCC015D45689E4"
      methodExercised:
        expression: "getUndertowWebServer(builder:undertow.Builder,manager:deploymentManager,port:port):undertowServletWebServer"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8EAADE33D91E58F2D0E069A6ED8DC321"
      valueUuid: "undertowServletWebServer"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "Builder builder = this.delegate.createBuilder(this, this::getSslBundle);"
      lineNumber: 298
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: createBuilder"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/AB"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "int"
            uuid: "port"
        propertiesMap:
          registerDefaultServlet:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "boolean15"
          localeCharsetMappings:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashMap"
              parameters: []
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.util.Locale"
                      parameters:
                      - name: "language"
                        value:
                          sapientType: "BASIC"
                          content: !<regular>
                            value: "language1"
                          valueType: "java.lang.String"
                          uuid: "locale-language"
                    valueType: "java.util.Locale"
                    uuid: "locale"
                    collectionUuid: "map4"
                    nameForMock: "locale"
                  value:
                    sapientType: "OBJECT"
                    content: !<static_method_return>
                      target: "java.nio.charset.Charset"
                      method: "defaultCharset"
                      methodParameters: []
                    valueType: "java.nio.charset.Charset"
                    uuid: "charset"
                    collectionUuid: "map4"
                    nameForMock: "charset"
                valueType: "java.util.Map$Entry"
            valueType: "java.util.Map"
            genericValueType: "java.util.Locale,java.nio.charset.Charset"
            uuid: "map4"
          displayName:
            sapientType: "BASIC"
            content: !<regular>
              value: "displayName1"
            valueType: "java.lang.String"
            uuid: "string4"
          errorPages:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashSet"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.web.server.ErrorPage"
                uuid: "object"
                collectionUuid: "set2"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.web.server.ErrorPage"
            uuid: "set2"
          session:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.servlet.server.Session"
              parameters: []
              propertiesMap:
                persistent:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: false
                  valueType: "boolean"
                  uuid: "persistent"
                timeout:
                  sapientType: "NULL"
                  valueType: "java.time.Duration"
                  uuid: "timeout"
                  fixed: true
            valueType: "org.springframework.boot.web.servlet.server.Session"
            uuid: "session4"
          mimeMappings:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings5"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.servlet.ServletContextInitializer[]"
      uuid: "initializers"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/AB"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid99"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.Undertow$Builder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
            parameters: []
          valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
          uuid: "undertowWebServerFactoryDelegate"
          fixed: true
        methodParameters:
        - name: "factory"
          value:
            sapientType: "THIS"
            valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
            uuid: "targetClassObject"
            fixed: true
        - name: "sslBundleSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "uniqueUuid112"
        methodName: "createBuilder"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "uniqueUuid100"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.Servlets"
      uuid: "Servlets.class"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo2"
    - sapientType: "ANY"
      valueType: "io.undertow.servlet.api.ServletContainerInitializerInfo"
      uuid: "servletContainerInitializerInfo"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "java.lang.ClassLoader"
              localVariableValue:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
                valueType: "java.lang.Class"
                genericValueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
                fixed: true
              methodParameters: []
              methodName: "getClassLoader"
            valueType: "java.lang.ClassLoader"
            uuid: "classLoader"
        methodName: "setClassLoader"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo3"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.ClassLoader"
        localVariableValue:
          sapientType: "CLASS"
          content: !<regular>
            value: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
          valueType: "java.lang.Class"
          genericValueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
          uuid: "uniqueUuid103"
          fixed: true
        methodParameters: []
        methodName: "getClassLoader"
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/AB"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "displayName1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "spring-boot"
            valueType: "java.lang.String"
            uuid: "uniqueUuid105"
            fixed: true
        methodName: "setDeploymentName"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "spring-boot"
      valueType: "java.lang.String"
      uuid: "uniqueUuid104"
      fixed: true
    - sapientType: "REAL"
      valueType: "io.undertow.servlet.Servlets"
      uuid: "Servlets.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "io.undertow.servlet.Servlets"
        method: "servlet"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "default"
            valueType: "java.lang.String"
            uuid: "uniqueUuid110"
            fixed: true
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.servlet.handlers.DefaultServlet"
            valueType: "java.lang.Class"
            genericValueType: "? extends jakarta.servlet.Servlet"
            uuid: "uniqueUuid111"
            fixed: true
      valueType: "io.undertow.servlet.api.ServletInfo"
      uuid: "servletInfo"
    - sapientType: "BASIC"
      content: !<regular>
        value: "default"
      valueType: "java.lang.String"
      uuid: "uniqueUuid106"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "io.undertow.servlet.handlers.DefaultServlet"
      valueType: "java.lang.Class"
      genericValueType: "? extends jakarta.servlet.Servlet"
      uuid: "uniqueUuid107"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "io.undertow.servlet.Servlets"
              method: "servlet"
              methodParameters:
              - value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "default"
                  valueType: "java.lang.String"
                  fixed: true
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "io.undertow.servlet.handlers.DefaultServlet"
                  valueType: "java.lang.Class"
                  genericValueType: "? extends jakarta.servlet.Servlet"
                  fixed: true
            valueType: "io.undertow.servlet.api.ServletInfo"
            uuid: "servletInfo"
        methodName: "addServlet"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo7"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "io.undertow.servlet.Servlets"
        method: "servlet"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "default"
            valueType: "java.lang.String"
            uuid: "uniqueUuid110"
            fixed: true
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.servlet.handlers.DefaultServlet"
            valueType: "java.lang.Class"
            genericValueType: "? extends jakarta.servlet.Servlet"
            uuid: "uniqueUuid111"
            fixed: true
      valueType: "io.undertow.servlet.api.ServletInfo"
      uuid: "servletInfo"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.ErrorPage"
      uuid: "object"
      collectionUuid: "set2"
    - sapientType: "ENUM"
      content: !<regular>
        value: "CONTINUE"
      valueType: "org.springframework.http.HttpStatus"
      uuid: "status"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.ErrorPage"
      uuid: "object"
      collectionUuid: "set2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getPath1"
      valueType: "java.lang.String"
      uuid: "path"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.ErrorPage"
      uuid: "object"
      collectionUuid: "set2"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int9"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo8"
    - sapientType: "ANY"
      valueType: "io.undertow.servlet.api.ErrorPage"
      uuid: "errorPage"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "io.undertow.servlet.api.ServletStackTraces"
            uuid: "Enum-io.undertow.servlet.api.ServletStackTraces-NONE"
            fixed: true
        methodName: "setServletStackTraces"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo9"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "io.undertow.servlet.api.ServletStackTraces"
      uuid: "Enum-io.undertow.servlet.api.ServletStackTraces-NONE"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo10"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.embedded.undertow.CompositeResourceManager"
      uuid: "compositeResourceManager"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo11"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file5-pathname"
      valueType: "java.io.File"
      uuid: "file5"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "int7"
            fixed: true
        methodName: "setEagerFilterInit"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo12"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "int7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "int8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings5"
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            parameters: []
            values: []
          valueType: "java.util.List"
          genericValueType: "org.springframework.boot.web.server.MimeMappings$Mapping"
          uuid: "iterator3-CollectionContent"
      valueType: "java.util.Iterator"
      genericValueType: "org.springframework.boot.web.server.MimeMappings$Mapping"
      uuid: "iterator3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Session"
        parameters: []
        propertiesMap:
          persistent:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "persistent"
          timeout:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "timeout"
            fixed: true
      valueType: "org.springframework.boot.web.servlet.server.Session"
      uuid: "session4"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "persistent"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo13"
    - sapientType: "BASIC"
      content: !<regular>
        value: "locale"
      valueType: "java.lang.String"
      uuid: "string8"
    - sapientType: "BASIC"
      content: !<regular>
        value: "charset"
      valueType: "java.lang.String"
      uuid: "string9"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.Servlets"
      uuid: "Servlets.class"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.ServletContainer"
      uuid: "servletContainer"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.ServletContainer"
      uuid: "servletContainer"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.Deployment"
      uuid: "deployment"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.Deployment"
      uuid: "deployment2"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.Deployment"
      uuid: "deployment2"
    - sapientType: "MOCK"
      valueType: "io.undertow.server.session.SessionManager"
      uuid: "sessionManager"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Session"
        parameters: []
        propertiesMap:
          persistent:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "persistent"
          timeout:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "timeout"
            fixed: true
      valueType: "org.springframework.boot.web.servlet.server.Session"
      uuid: "session4"
    - sapientType: "NULL"
      valueType: "java.time.Duration"
      uuid: "timeout"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.server.session.SessionManager"
      uuid: "sessionManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: -1
      valueType: "int"
      uuid: "int10"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
      uuid: "undertowServletWebServer"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.Undertow$Builder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
            parameters: []
          valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
          uuid: "undertowWebServerFactoryDelegate"
          fixed: true
        methodParameters:
        - name: "factory"
          value:
            sapientType: "THIS"
            valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
            uuid: "targetClassObject"
            fixed: true
        - name: "sslBundleSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "uniqueUuid112"
        methodName: "createBuilder"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "BASIC"
      content: !<regular>
        value: 2
      valueType: "int"
      uuid: "port"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
      uuid: "undertowServletWebServer"
    branches:
    - lineNumber: 375
      expression: "this.resourceLoader != null"
      range: "(375,7)-(375,33)"
      evaluatedAs: false
      internalMethodName: "getServletClassLoader"
    - lineNumber: 310
      expression: "isRegisterDefaultServlet()"
      range: "(310,7)-(310,32)"
      evaluatedAs: true
      internalMethodName: "createManager"
    - lineNumber: 427
      expression: "for-each(getErrorPages())"
      range: "(427,30)-(427,44)"
      evaluatedAs: true
      internalMethodName: "configureErrorPages"
    - lineNumber: 433
      expression: "errorPage.getStatus() != null"
      range: "(433,7)-(433,35)"
      evaluatedAs: true
      internalMethodName: "getUndertowErrorPage"
    - lineNumber: 418
      expression: "docBase != null"
      range: "(418,17)-(418,31)"
      evaluatedAs: true
      internalMethodName: "getCanonicalDocumentRoot"
    - lineNumber: 387
      expression: "docBase.isDirectory()"
      range: "(387,34)-(387,54)"
      evaluatedAs: true
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 389
      expression: "root != null"
      range: "(389,7)-(389,18)"
      evaluatedAs: true
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 393
      expression: "for-each(metaInfResourceUrls)"
      range: "(393,18)-(393,36)"
      evaluatedAs: true
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 394
      expression: "\\\"file\\\".equals(url.getProtocol())"
      range: "(394,8)-(394,39)"
      evaluatedAs: true
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 397
      expression: "file.isFile()"
      range: "(397,10)-(397,22)"
      evaluatedAs: false
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 443
      expression: "for-each(getMimeMappings())"
      range: "(443,30)-(443,46)"
      evaluatedAs: false
      internalMethodName: "configureMimeMappings"
    - lineNumber: 342
      expression: "for-each(getWebListenerClassNames())"
      range: "(342,27)-(342,52)"
      evaluatedAs: false
      internalMethodName: "configureWebListeners"
    - lineNumber: 321
      expression: "for-each(this.deploymentInfoCustomizers)"
      range: "(321,54)-(321,83)"
      evaluatedAs: false
      internalMethodName: "createManager"
    - lineNumber: 324
      expression: "getSession().isPersistent()"
      range: "(324,7)-(324,33)"
      evaluatedAs: false
      internalMethodName: "createManager"
    - lineNumber: 331
      expression: "manager.getDeployment() instanceof DeploymentImpl managerDeployment"
      range: "(331,7)-(331,73)"
      evaluatedAs: false
      internalMethodName: "createManager"
    - lineNumber: 358
      expression: "timeoutDuration == null"
      range: "(358,10)-(358,32)"
      evaluatedAs: true
      internalMethodName: "isZeroOrLess"
    - lineNumber: 336
      expression: "isZeroOrLess(timeoutDuration)"
      range: "(336,25)-(336,53)"
      evaluatedAs: true
      internalMethodName: "createManager"
  - pathId: "path33"
    testPathName: "getWebServerWhenManagerGetDeploymentNotInstanceOfDeploymentImplAndTimeoutDurationIsNullAndIsZeroOrLessTimeoutDuration15"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "787B8F853A0C4A45E0A71893DB0F7D38"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6A13043F3306A60CE4000F64FFF3E1E7"
      valueUuid: "target"
    - type: "INPUT"
      name: "initializers"
      modelFingerprint: "6BEFA360E7AAB6F6818E0508F15D68E1"
      valueUuid: "initializers"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9212DE2B3A3A58812CCC36B248184E13"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid113):void3"
        staticAccess: true
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "8DADDE93492B3FCDB8B3288E7332DF18"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "createBuilder(factory:targetClassObject,sslBundleSupplier:uniqueUuid114):undertow.Builder"
    - type: "STATIC"
      name: "Servlets.class"
      modelFingerprint: "7BC06AC1283B8D389463CFECF6BB29A4"
      valueUuid: "Servlets.class"
      methodExercised:
        expression: "deployment():deploymentInfo"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "DFE1B5D8FA6B4EDA983290EDA606FCD8"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addServletContainerInitializer(servletContainerInitializer:servletContainerInitializerInfo):deploymentInfo2"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "FD017A9BD536F1BEB099BA0D2A9189FC"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setClassLoader(classLoader:classLoader):deploymentInfo3"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "2413A3720B277E1264AEFD5E1A7CEF69"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setContextPath(contextPath:contextPath):deploymentInfo4"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "DFD5BCD1E5F667BE7070C76D56F5F370"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setDisplayName(displayName:string4):deploymentInfo5"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "C2009D0995EC20B53F18559EF3F67DF1"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setDeploymentName(deploymentName:uniqueUuid118):deploymentInfo6"
    - type: "STATIC"
      name: "Servlets.class.real"
      modelFingerprint: "4A671F4ABDD67E58C7F506CAE2A46371"
      valueUuid: "Servlets.class.real"
      methodExercised:
        expression: "servlet(name:uniqueUuid120,servletClass:uniqueUuid121):servletInfo"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "C6B0D1553ED8C4B21220FB2DD7E78129"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addServlet(servlet:servletInfo):deploymentInfo7"
    - type: "LOCAL_VARIABLE"
      name: "errorPage"
      modelFingerprint: "8D604FE80C97354503FC9433EC730C59"
      valueUuid: "object"
      methodExercised:
        expression: "getStatus():status"
    - type: "LOCAL_VARIABLE"
      name: "errorPage"
      modelFingerprint: "7EFC966F8ED1BD1903BB5AEA30559AAE"
      valueUuid: "object"
      methodExercised:
        expression: "getException():exception"
    - type: "LOCAL_VARIABLE"
      name: "errorPage"
      modelFingerprint: "4239FB76EFF9936513A39E6A03559CE3"
      valueUuid: "object"
      methodExercised:
        expression: "getPath():path"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "2864EFCCDCFF7208E50CF7647E4B90AE"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addErrorPage(errorPage:errorPage):deploymentInfo8"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "5DA5A1EAE8BB74F85A1F10074055BB43"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setServletStackTraces(servletStackTraces:Enum-io.undertow.servlet.api.ServletStackTraces-NONE):deploymentInfo9"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "C606D2A57D532BA43F7FB0A4728A7A8F"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setResourceManager(resourceManager:compositeResourceManager):deploymentInfo10"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "4557A779E7B6B5A3D19EC38B322EF96F"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setTempDir(tempDir:file3):deploymentInfo11"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "79020A62BFC4B953E7819E652D57F9DE"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setEagerFilterInit(eagerFilterInit:int7):deploymentInfo12"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "6756B4E7A2B932E9E7E7DDE61EF4A382"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setPreservePathOnForward(preservePathOnForward:int8):void6"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "AC98894B35A5EE9D3B6B31D9F2EDDF20"
      valueUuid: "mimeMappings5"
      methodExercised:
        expression: "iterator():iterator3"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F0251C635933C730807879F2F41D706B"
      valueUuid: "session4"
      methodExercised:
        expression: "isPersistent():persistent"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "DD62A5AE63E7AC9FEAFEC804F651279F"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addLocaleCharsetMapping(locale:string8,charset:string9):deploymentInfo13"
    - type: "STATIC"
      name: "Servlets.class"
      modelFingerprint: "DA4CBABA4B30C2549402D3ED0837DC38"
      valueUuid: "Servlets.class"
      methodExercised:
        expression: "newContainer():servletContainer"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "137FC84003338874E813A7241310FABB"
      valueUuid: "servletContainer"
      methodExercised:
        expression: "addDeployment(arg0:deploymentInfo):deploymentManager"
    - type: "LOCAL_VARIABLE"
      name: "manager"
      modelFingerprint: "AB17A24630E8232D42862E37F39971DC"
      valueUuid: "deploymentManager"
      methodExercised:
        expression: "deploy():void8"
    - type: "LOCAL_VARIABLE"
      name: "manager"
      modelFingerprint: "E312078B1FC097E1FAC32B6FC92FDED0"
      valueUuid: "deploymentManager"
      methodExercised:
        expression: "getDeployment():deployment"
    - type: "LOCAL_VARIABLE"
      name: "manager"
      modelFingerprint: "614F170FF0E1B9F825566FC8714C868A"
      valueUuid: "deploymentManager"
      methodExercised:
        expression: "getDeployment():deployment2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "0B0E3DA7F499072DEE603987ED55168C"
      valueUuid: "deployment2"
      methodExercised:
        expression: "getSessionManager():sessionManager"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "8D92AEF0ACF19C7A62675F7544CC5859"
      valueUuid: "session4"
      methodExercised:
        expression: "getTimeout():timeout"
    - type: "LOCAL_VARIABLE"
      name: "sessionManager"
      modelFingerprint: "6BC676AB1B8273D8CDAD56C46DA1291F"
      valueUuid: "sessionManager"
      methodExercised:
        expression: "setDefaultSessionTimeout(arg0:int9):void9"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "D03E233217C1DD5A76CCC015D45689E4"
      methodExercised:
        expression: "getUndertowWebServer(builder:undertow.Builder,manager:deploymentManager,port:port):undertowServletWebServer"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8EAADE33D91E58F2D0E069A6ED8DC321"
      valueUuid: "undertowServletWebServer"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "Builder builder = this.delegate.createBuilder(this, this::getSslBundle);"
      lineNumber: 298
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: createBuilder"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/AB"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "int"
            uuid: "port"
        propertiesMap:
          registerDefaultServlet:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "boolean15"
          localeCharsetMappings:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashMap"
              parameters: []
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.util.Locale"
                      parameters:
                      - name: "language"
                        value:
                          sapientType: "BASIC"
                          content: !<regular>
                            value: "language1"
                          valueType: "java.lang.String"
                          uuid: "locale-language"
                    valueType: "java.util.Locale"
                    uuid: "locale"
                    collectionUuid: "map4"
                    nameForMock: "locale"
                  value:
                    sapientType: "OBJECT"
                    content: !<static_method_return>
                      target: "java.nio.charset.Charset"
                      method: "defaultCharset"
                      methodParameters: []
                    valueType: "java.nio.charset.Charset"
                    uuid: "charset"
                    collectionUuid: "map4"
                    nameForMock: "charset"
                valueType: "java.util.Map$Entry"
            valueType: "java.util.Map"
            genericValueType: "java.util.Locale,java.nio.charset.Charset"
            uuid: "map4"
          displayName:
            sapientType: "BASIC"
            content: !<regular>
              value: "displayName1"
            valueType: "java.lang.String"
            uuid: "string4"
          errorPages:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashSet"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.web.server.ErrorPage"
                uuid: "object"
                collectionUuid: "set2"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.web.server.ErrorPage"
            uuid: "set2"
          session:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.servlet.server.Session"
              parameters: []
              propertiesMap:
                persistent:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: false
                  valueType: "boolean"
                  uuid: "persistent"
                timeout:
                  sapientType: "NULL"
                  valueType: "java.time.Duration"
                  uuid: "timeout"
                  fixed: true
            valueType: "org.springframework.boot.web.servlet.server.Session"
            uuid: "session4"
          mimeMappings:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings5"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.servlet.ServletContextInitializer[]"
      uuid: "initializers"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/AB"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid113"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.Undertow$Builder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
            parameters: []
          valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
          uuid: "undertowWebServerFactoryDelegate"
          fixed: true
        methodParameters:
        - name: "factory"
          value:
            sapientType: "THIS"
            valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
            uuid: "targetClassObject"
            fixed: true
        - name: "sslBundleSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "uniqueUuid126"
        methodName: "createBuilder"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "uniqueUuid114"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.Servlets"
      uuid: "Servlets.class"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo2"
    - sapientType: "ANY"
      valueType: "io.undertow.servlet.api.ServletContainerInitializerInfo"
      uuid: "servletContainerInitializerInfo"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "java.lang.ClassLoader"
              localVariableValue:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
                valueType: "java.lang.Class"
                genericValueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
                fixed: true
              methodParameters: []
              methodName: "getClassLoader"
            valueType: "java.lang.ClassLoader"
            uuid: "classLoader"
        methodName: "setClassLoader"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo3"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.ClassLoader"
        localVariableValue:
          sapientType: "CLASS"
          content: !<regular>
            value: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
          valueType: "java.lang.Class"
          genericValueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
          uuid: "uniqueUuid117"
          fixed: true
        methodParameters: []
        methodName: "getClassLoader"
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/AB"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "displayName1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "spring-boot"
            valueType: "java.lang.String"
            uuid: "uniqueUuid119"
            fixed: true
        methodName: "setDeploymentName"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "spring-boot"
      valueType: "java.lang.String"
      uuid: "uniqueUuid118"
      fixed: true
    - sapientType: "REAL"
      valueType: "io.undertow.servlet.Servlets"
      uuid: "Servlets.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "io.undertow.servlet.Servlets"
        method: "servlet"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "default"
            valueType: "java.lang.String"
            uuid: "uniqueUuid124"
            fixed: true
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.servlet.handlers.DefaultServlet"
            valueType: "java.lang.Class"
            genericValueType: "? extends jakarta.servlet.Servlet"
            uuid: "uniqueUuid125"
            fixed: true
      valueType: "io.undertow.servlet.api.ServletInfo"
      uuid: "servletInfo"
    - sapientType: "BASIC"
      content: !<regular>
        value: "default"
      valueType: "java.lang.String"
      uuid: "uniqueUuid120"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "io.undertow.servlet.handlers.DefaultServlet"
      valueType: "java.lang.Class"
      genericValueType: "? extends jakarta.servlet.Servlet"
      uuid: "uniqueUuid121"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "io.undertow.servlet.Servlets"
              method: "servlet"
              methodParameters:
              - value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "default"
                  valueType: "java.lang.String"
                  fixed: true
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "io.undertow.servlet.handlers.DefaultServlet"
                  valueType: "java.lang.Class"
                  genericValueType: "? extends jakarta.servlet.Servlet"
                  fixed: true
            valueType: "io.undertow.servlet.api.ServletInfo"
            uuid: "servletInfo"
        methodName: "addServlet"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo7"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "io.undertow.servlet.Servlets"
        method: "servlet"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "default"
            valueType: "java.lang.String"
            uuid: "uniqueUuid124"
            fixed: true
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.servlet.handlers.DefaultServlet"
            valueType: "java.lang.Class"
            genericValueType: "? extends jakarta.servlet.Servlet"
            uuid: "uniqueUuid125"
            fixed: true
      valueType: "io.undertow.servlet.api.ServletInfo"
      uuid: "servletInfo"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.ErrorPage"
      uuid: "object"
      collectionUuid: "set2"
    - sapientType: "NULL"
      valueType: "org.springframework.http.HttpStatus"
      uuid: "status"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.ErrorPage"
      uuid: "object"
      collectionUuid: "set2"
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      genericValueType: "? extends java.lang.Throwable"
      uuid: "exception"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.ErrorPage"
      uuid: "object"
      collectionUuid: "set2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getPath1"
      valueType: "java.lang.String"
      uuid: "path"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo8"
    - sapientType: "ANY"
      valueType: "io.undertow.servlet.api.ErrorPage"
      uuid: "errorPage"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "io.undertow.servlet.api.ServletStackTraces"
            uuid: "Enum-io.undertow.servlet.api.ServletStackTraces-NONE"
            fixed: true
        methodName: "setServletStackTraces"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo9"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "io.undertow.servlet.api.ServletStackTraces"
      uuid: "Enum-io.undertow.servlet.api.ServletStackTraces-NONE"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo10"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.embedded.undertow.CompositeResourceManager"
      uuid: "compositeResourceManager"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo11"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file3-pathname"
      valueType: "java.io.File"
      uuid: "file3"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "int7"
            fixed: true
        methodName: "setEagerFilterInit"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo12"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "int7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "int8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings5"
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            parameters: []
            values: []
          valueType: "java.util.List"
          genericValueType: "org.springframework.boot.web.server.MimeMappings$Mapping"
          uuid: "iterator3-CollectionContent"
      valueType: "java.util.Iterator"
      genericValueType: "org.springframework.boot.web.server.MimeMappings$Mapping"
      uuid: "iterator3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Session"
        parameters: []
        propertiesMap:
          persistent:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "persistent"
          timeout:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "timeout"
            fixed: true
      valueType: "org.springframework.boot.web.servlet.server.Session"
      uuid: "session4"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "persistent"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo13"
    - sapientType: "BASIC"
      content: !<regular>
        value: "locale"
      valueType: "java.lang.String"
      uuid: "string8"
    - sapientType: "BASIC"
      content: !<regular>
        value: "charset"
      valueType: "java.lang.String"
      uuid: "string9"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.Servlets"
      uuid: "Servlets.class"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.ServletContainer"
      uuid: "servletContainer"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.ServletContainer"
      uuid: "servletContainer"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.Deployment"
      uuid: "deployment"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.Deployment"
      uuid: "deployment2"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.Deployment"
      uuid: "deployment2"
    - sapientType: "MOCK"
      valueType: "io.undertow.server.session.SessionManager"
      uuid: "sessionManager"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Session"
        parameters: []
        propertiesMap:
          persistent:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "persistent"
          timeout:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "timeout"
            fixed: true
      valueType: "org.springframework.boot.web.servlet.server.Session"
      uuid: "session4"
    - sapientType: "NULL"
      valueType: "java.time.Duration"
      uuid: "timeout"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.server.session.SessionManager"
      uuid: "sessionManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: -1
      valueType: "int"
      uuid: "int9"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
      uuid: "undertowServletWebServer"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.Undertow$Builder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
            parameters: []
          valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
          uuid: "undertowWebServerFactoryDelegate"
          fixed: true
        methodParameters:
        - name: "factory"
          value:
            sapientType: "THIS"
            valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
            uuid: "targetClassObject"
            fixed: true
        - name: "sslBundleSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "uniqueUuid126"
        methodName: "createBuilder"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "BASIC"
      content: !<regular>
        value: 2
      valueType: "int"
      uuid: "port"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
      uuid: "undertowServletWebServer"
    branches:
    - lineNumber: 375
      expression: "this.resourceLoader != null"
      range: "(375,7)-(375,33)"
      evaluatedAs: false
      internalMethodName: "getServletClassLoader"
    - lineNumber: 310
      expression: "isRegisterDefaultServlet()"
      range: "(310,7)-(310,32)"
      evaluatedAs: true
      internalMethodName: "createManager"
    - lineNumber: 427
      expression: "for-each(getErrorPages())"
      range: "(427,30)-(427,44)"
      evaluatedAs: true
      internalMethodName: "configureErrorPages"
    - lineNumber: 433
      expression: "errorPage.getStatus() != null"
      range: "(433,7)-(433,35)"
      evaluatedAs: false
      internalMethodName: "getUndertowErrorPage"
    - lineNumber: 436
      expression: "errorPage.getException() != null"
      range: "(436,7)-(436,38)"
      evaluatedAs: false
      internalMethodName: "getUndertowErrorPage"
    - lineNumber: 418
      expression: "docBase != null"
      range: "(418,17)-(418,31)"
      evaluatedAs: true
      internalMethodName: "getCanonicalDocumentRoot"
    - lineNumber: 387
      expression: "docBase.isDirectory()"
      range: "(387,34)-(387,54)"
      evaluatedAs: false
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 389
      expression: "root != null"
      range: "(389,7)-(389,18)"
      evaluatedAs: true
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 393
      expression: "for-each(metaInfResourceUrls)"
      range: "(393,18)-(393,36)"
      evaluatedAs: true
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 394
      expression: "\\\"file\\\".equals(url.getProtocol())"
      range: "(394,8)-(394,39)"
      evaluatedAs: false
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 404
      expression: "catch-exception (Exception)"
      range: "(404,5)-(404,23)"
      evaluatedAs: true
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 443
      expression: "for-each(getMimeMappings())"
      range: "(443,30)-(443,46)"
      evaluatedAs: false
      internalMethodName: "configureMimeMappings"
    - lineNumber: 342
      expression: "for-each(getWebListenerClassNames())"
      range: "(342,27)-(342,52)"
      evaluatedAs: false
      internalMethodName: "configureWebListeners"
    - lineNumber: 321
      expression: "for-each(this.deploymentInfoCustomizers)"
      range: "(321,54)-(321,83)"
      evaluatedAs: false
      internalMethodName: "createManager"
    - lineNumber: 324
      expression: "getSession().isPersistent()"
      range: "(324,7)-(324,33)"
      evaluatedAs: false
      internalMethodName: "createManager"
    - lineNumber: 331
      expression: "manager.getDeployment() instanceof DeploymentImpl managerDeployment"
      range: "(331,7)-(331,73)"
      evaluatedAs: false
      internalMethodName: "createManager"
    - lineNumber: 358
      expression: "timeoutDuration == null"
      range: "(358,10)-(358,32)"
      evaluatedAs: true
      internalMethodName: "isZeroOrLess"
    - lineNumber: 336
      expression: "isZeroOrLess(timeoutDuration)"
      range: "(336,25)-(336,53)"
      evaluatedAs: true
      internalMethodName: "createManager"
    catchBlockExercised:
      idExternalInstruction: 66
      id: 3
      catchExceptions:
      - "java.lang.Exception"
  - pathId: "path1"
    testPathName: "getWebServerWhenTimeoutDurationIsNegativeAndIsZeroOrLessTimeoutDuration"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "DA9B0173389A1BD635D0AC6386114CAB"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6A13043F3306A60CE4000F64FFF3E1E7"
      valueUuid: "target"
    - type: "INPUT"
      name: "initializers"
      modelFingerprint: "6BEFA360E7AAB6F6818E0508F15D68E1"
      valueUuid: "initializers"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9212DE2B3A3A58812CCC36B248184E13"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid127):void3"
        staticAccess: true
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "8DADDE93492B3FCDB8B3288E7332DF18"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "createBuilder(factory:targetClassObject,sslBundleSupplier:uniqueUuid128):undertow.Builder"
    - type: "STATIC"
      name: "Servlets.class"
      modelFingerprint: "7BC06AC1283B8D389463CFECF6BB29A4"
      valueUuid: "Servlets.class"
      methodExercised:
        expression: "deployment():deploymentInfo"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "DFE1B5D8FA6B4EDA983290EDA606FCD8"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addServletContainerInitializer(servletContainerInitializer:servletContainerInitializerInfo):deploymentInfo2"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "FD017A9BD536F1BEB099BA0D2A9189FC"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setClassLoader(classLoader:classLoader):deploymentInfo3"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "2413A3720B277E1264AEFD5E1A7CEF69"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setContextPath(contextPath:contextPath):deploymentInfo4"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "DFD5BCD1E5F667BE7070C76D56F5F370"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setDisplayName(displayName:string4):deploymentInfo5"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "C2009D0995EC20B53F18559EF3F67DF1"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setDeploymentName(deploymentName:uniqueUuid132):deploymentInfo6"
    - type: "STATIC"
      name: "Servlets.class.real"
      modelFingerprint: "4A671F4ABDD67E58C7F506CAE2A46371"
      valueUuid: "Servlets.class.real"
      methodExercised:
        expression: "servlet(name:uniqueUuid134,servletClass:uniqueUuid135):servletInfo"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "C6B0D1553ED8C4B21220FB2DD7E78129"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addServlet(servlet:servletInfo):deploymentInfo7"
    - type: "LOCAL_VARIABLE"
      name: "errorPage"
      modelFingerprint: "4FCFAB2DEC46250D9C061F0A8C658A54"
      valueUuid: "object2"
      methodExercised:
        expression: "getStatus():status"
    - type: "LOCAL_VARIABLE"
      name: "errorPage"
      modelFingerprint: "4239FB76EFF9936513A39E6A03559CE3"
      valueUuid: "object2"
      methodExercised:
        expression: "getPath():path"
    - type: "LOCAL_VARIABLE"
      name: "errorPage"
      modelFingerprint: "224B739BABD069DDF43532F203EBA48D"
      valueUuid: "object2"
      methodExercised:
        expression: "getStatusCode():int9"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "6A64E225FED690CD432C9E544435C13E"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addErrorPage(errorPage:errorPage):deploymentInfo8"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "5DA5A1EAE8BB74F85A1F10074055BB43"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setServletStackTraces(servletStackTraces:Enum-io.undertow.servlet.api.ServletStackTraces-NONE):deploymentInfo9"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "C606D2A57D532BA43F7FB0A4728A7A8F"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setResourceManager(resourceManager:compositeResourceManager):deploymentInfo10"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "4557A779E7B6B5A3D19EC38B322EF96F"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setTempDir(tempDir:file4):deploymentInfo11"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "79020A62BFC4B953E7819E652D57F9DE"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setEagerFilterInit(eagerFilterInit:int7):deploymentInfo12"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "6756B4E7A2B932E9E7E7DDE61EF4A382"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setPreservePathOnForward(preservePathOnForward:int8):void6"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "167BAFA0CD87F4349A3B655AA711A46B"
      valueUuid: "mimeMappings5"
      methodExercised:
        expression: "iterator():iterator3"
    - type: "LOCAL_VARIABLE"
      name: "mimeMapping"
      modelFingerprint: "49BAA4A13DE025153682CB0C7645EF91"
      valueUuid: "object5"
      methodExercised:
        expression: "getExtension():extension"
    - type: "LOCAL_VARIABLE"
      name: "mimeMapping"
      modelFingerprint: "5C9E518892E2C13DB98DD88B38096B01"
      valueUuid: "object5"
      methodExercised:
        expression: "getMimeType():mimeType"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "216E55800FB16BA88859A27FBAFB2F30"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addMimeMapping(mimeMappings:mimeMapping):deploymentInfo13"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "464886F0AA81F595F3AF412C2CAD2F53"
      valueUuid: "session4"
      methodExercised:
        expression: "isPersistent():persistent"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "348AD456535F41404CD8B17ADA171E25"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setSessionPersistenceManager(sessionPersistenceManager:fileSessionPersistence):deploymentInfo14"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "DD62A5AE63E7AC9FEAFEC804F651279F"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addLocaleCharsetMapping(locale:string11,charset:string12):deploymentInfo15"
    - type: "STATIC"
      name: "Servlets.class"
      modelFingerprint: "DA4CBABA4B30C2549402D3ED0837DC38"
      valueUuid: "Servlets.class"
      methodExercised:
        expression: "newContainer():servletContainer"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "137FC84003338874E813A7241310FABB"
      valueUuid: "servletContainer"
      methodExercised:
        expression: "addDeployment(arg0:deploymentInfo):deploymentManager"
    - type: "LOCAL_VARIABLE"
      name: "manager"
      modelFingerprint: "AB17A24630E8232D42862E37F39971DC"
      valueUuid: "deploymentManager"
      methodExercised:
        expression: "deploy():void8"
    - type: "LOCAL_VARIABLE"
      name: "manager"
      modelFingerprint: "F11C9DEBC4D5AD535D36C5034BBC796C"
      valueUuid: "deploymentManager"
      methodExercised:
        expression: "getDeployment():deployment"
    - type: "LOCAL_VARIABLE"
      name: "deploymentInfo"
      modelFingerprint: "A86D14D765E41B512727FCE81D462B15"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "getMimeMappings():list3"
    - type: "LOCAL_VARIABLE"
      name: "mapping"
      modelFingerprint: "95D7AEDDE4CB6064ECDA5D6259CA8E6A"
      valueUuid: "object6"
      methodExercised:
        expression: "getExtension():extension2"
    - type: "LOCAL_VARIABLE"
      name: "mapping"
      modelFingerprint: "B3DE923639DBDF81D4446F8D97548673"
      valueUuid: "object6"
      methodExercised:
        expression: "getMimeType():mimeType2"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "2931D36BF0FA0FC3226C73F98C9CC26F"
      valueUuid: "deployment"
      methodExercised:
        expression: "setMimeExtensionMappings(mimeExtensionMappings:hashMap4):void9"
    - type: "LOCAL_VARIABLE"
      name: "manager"
      modelFingerprint: "614F170FF0E1B9F825566FC8714C868A"
      valueUuid: "deploymentManager"
      methodExercised:
        expression: "getDeployment():deployment2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "0B0E3DA7F499072DEE603987ED55168C"
      valueUuid: "deployment2"
      methodExercised:
        expression: "getSessionManager():sessionManager"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "60FABDCAE4ABC1137947853796EF9754"
      valueUuid: "session4"
      methodExercised:
        expression: "getTimeout():timeout"
    - type: "LOCAL_VARIABLE"
      name: "sessionManager"
      modelFingerprint: "6BC676AB1B8273D8CDAD56C46DA1291F"
      valueUuid: "sessionManager"
      methodExercised:
        expression: "setDefaultSessionTimeout(arg0:int10):void10"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "D03E233217C1DD5A76CCC015D45689E4"
      methodExercised:
        expression: "getUndertowWebServer(builder:undertow.Builder,manager:deploymentManager,port:port):undertowServletWebServer"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8EAADE33D91E58F2D0E069A6ED8DC321"
      valueUuid: "undertowServletWebServer"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "Builder builder = this.delegate.createBuilder(this, this::getSslBundle);"
      lineNumber: 298
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: createBuilder"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/AB"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "int"
            uuid: "port"
        propertiesMap:
          registerDefaultServlet:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "boolean15"
          localeCharsetMappings:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashMap"
              parameters: []
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.util.Locale"
                      parameters:
                      - name: "language"
                        value:
                          sapientType: "BASIC"
                          content: !<regular>
                            value: "language1"
                          valueType: "java.lang.String"
                          uuid: "locale-language"
                    valueType: "java.util.Locale"
                    uuid: "locale"
                    collectionUuid: "map4"
                    nameForMock: "locale"
                  value:
                    sapientType: "OBJECT"
                    content: !<static_method_return>
                      target: "java.nio.charset.Charset"
                      method: "defaultCharset"
                      methodParameters: []
                    valueType: "java.nio.charset.Charset"
                    uuid: "charset"
                    collectionUuid: "map4"
                    nameForMock: "charset"
                valueType: "java.util.Map$Entry"
            valueType: "java.util.Map"
            genericValueType: "java.util.Locale,java.nio.charset.Charset"
            uuid: "map4"
          displayName:
            sapientType: "BASIC"
            content: !<regular>
              value: "displayName1"
            valueType: "java.lang.String"
            uuid: "string4"
          errorPages:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashSet"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.web.server.ErrorPage"
                uuid: "object2"
                collectionUuid: "set2"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.web.server.ErrorPage"
            uuid: "set2"
          session:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.servlet.server.Session"
              parameters: []
              propertiesMap:
                persistent:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: true
                  valueType: "boolean"
                  uuid: "persistent"
                timeout:
                  sapientType: "OBJECT"
                  content: !<static_method_return>
                    target: "java.time.Duration"
                    method: "ofDays"
                    methodParameters:
                    - name: "days"
                      value:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 0
                        valueType: "long"
                        uuid: "timeout-days"
                  valueType: "java.time.Duration"
                  uuid: "timeout"
            valueType: "org.springframework.boot.web.servlet.server.Session"
            uuid: "session4"
          mimeMappings:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings5"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.servlet.ServletContextInitializer[]"
      uuid: "initializers"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/AB"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid127"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.Undertow$Builder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
            parameters: []
          valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
          uuid: "undertowWebServerFactoryDelegate"
          fixed: true
        methodParameters:
        - name: "factory"
          value:
            sapientType: "THIS"
            valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
            uuid: "targetClassObject"
            fixed: true
        - name: "sslBundleSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "uniqueUuid141"
        methodName: "createBuilder"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "uniqueUuid128"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.Servlets"
      uuid: "Servlets.class"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo2"
    - sapientType: "ANY"
      valueType: "io.undertow.servlet.api.ServletContainerInitializerInfo"
      uuid: "servletContainerInitializerInfo"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "java.lang.ClassLoader"
              localVariableValue:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
                valueType: "java.lang.Class"
                genericValueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
                fixed: true
              methodParameters: []
              methodName: "getClassLoader"
            valueType: "java.lang.ClassLoader"
            uuid: "classLoader"
        methodName: "setClassLoader"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo3"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.ClassLoader"
        localVariableValue:
          sapientType: "CLASS"
          content: !<regular>
            value: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
          valueType: "java.lang.Class"
          genericValueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
          uuid: "uniqueUuid131"
          fixed: true
        methodParameters: []
        methodName: "getClassLoader"
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/AB"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "displayName1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "spring-boot"
            valueType: "java.lang.String"
            uuid: "uniqueUuid133"
            fixed: true
        methodName: "setDeploymentName"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "spring-boot"
      valueType: "java.lang.String"
      uuid: "uniqueUuid132"
      fixed: true
    - sapientType: "REAL"
      valueType: "io.undertow.servlet.Servlets"
      uuid: "Servlets.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "io.undertow.servlet.Servlets"
        method: "servlet"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "default"
            valueType: "java.lang.String"
            uuid: "uniqueUuid138"
            fixed: true
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.servlet.handlers.DefaultServlet"
            valueType: "java.lang.Class"
            genericValueType: "? extends jakarta.servlet.Servlet"
            uuid: "uniqueUuid139"
            fixed: true
      valueType: "io.undertow.servlet.api.ServletInfo"
      uuid: "servletInfo"
    - sapientType: "BASIC"
      content: !<regular>
        value: "default"
      valueType: "java.lang.String"
      uuid: "uniqueUuid134"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "io.undertow.servlet.handlers.DefaultServlet"
      valueType: "java.lang.Class"
      genericValueType: "? extends jakarta.servlet.Servlet"
      uuid: "uniqueUuid135"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "io.undertow.servlet.Servlets"
              method: "servlet"
              methodParameters:
              - value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "default"
                  valueType: "java.lang.String"
                  fixed: true
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "io.undertow.servlet.handlers.DefaultServlet"
                  valueType: "java.lang.Class"
                  genericValueType: "? extends jakarta.servlet.Servlet"
                  fixed: true
            valueType: "io.undertow.servlet.api.ServletInfo"
            uuid: "servletInfo"
        methodName: "addServlet"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo7"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "io.undertow.servlet.Servlets"
        method: "servlet"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "default"
            valueType: "java.lang.String"
            uuid: "uniqueUuid138"
            fixed: true
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.servlet.handlers.DefaultServlet"
            valueType: "java.lang.Class"
            genericValueType: "? extends jakarta.servlet.Servlet"
            uuid: "uniqueUuid139"
            fixed: true
      valueType: "io.undertow.servlet.api.ServletInfo"
      uuid: "servletInfo"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.ErrorPage"
      uuid: "object2"
      collectionUuid: "set2"
    - sapientType: "ENUM"
      content: !<regular>
        value: "CONTINUE"
      valueType: "org.springframework.http.HttpStatus"
      uuid: "status"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.ErrorPage"
      uuid: "object2"
      collectionUuid: "set2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getPath1"
      valueType: "java.lang.String"
      uuid: "path"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.ErrorPage"
      uuid: "object2"
      collectionUuid: "set2"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int9"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo8"
    - sapientType: "ANY"
      valueType: "io.undertow.servlet.api.ErrorPage"
      uuid: "errorPage"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "io.undertow.servlet.api.ServletStackTraces"
            uuid: "Enum-io.undertow.servlet.api.ServletStackTraces-NONE"
            fixed: true
        methodName: "setServletStackTraces"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo9"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "io.undertow.servlet.api.ServletStackTraces"
      uuid: "Enum-io.undertow.servlet.api.ServletStackTraces-NONE"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo10"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.embedded.undertow.CompositeResourceManager"
      uuid: "compositeResourceManager"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo11"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file4-pathname"
      valueType: "java.io.File"
      uuid: "file4"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "int7"
            fixed: true
        methodName: "setEagerFilterInit"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo12"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "int7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "int8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings5"
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.boot.web.server.MimeMappings$Mapping"
                parameters:
                - name: "extension"
                  value:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "extension1"
                    valueType: "java.lang.String"
                    uuid: "extension"
                - name: "mimeType"
                  value:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "mimeType1"
                    valueType: "java.lang.String"
                    uuid: "mimeType"
              valueType: "org.springframework.boot.web.server.MimeMappings$Mapping"
              uuid: "object5"
              collectionUuid: "iterator3-CollectionContent"
          valueType: "java.util.List"
          genericValueType: "org.springframework.boot.web.server.MimeMappings$Mapping"
          uuid: "iterator3-CollectionContent"
      valueType: "java.util.Iterator"
      genericValueType: "org.springframework.boot.web.server.MimeMappings$Mapping"
      uuid: "iterator3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.MimeMappings$Mapping"
        parameters:
        - name: "extension"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "extension1"
            valueType: "java.lang.String"
            uuid: "extension"
        - name: "mimeType"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "mimeType1"
            valueType: "java.lang.String"
            uuid: "mimeType"
      valueType: "org.springframework.boot.web.server.MimeMappings$Mapping"
      uuid: "object5"
      collectionUuid: "iterator3-CollectionContent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "extension1"
      valueType: "java.lang.String"
      uuid: "extension"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.MimeMappings$Mapping"
        parameters:
        - name: "extension"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "extension1"
            valueType: "java.lang.String"
            uuid: "extension"
        - name: "mimeType"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "mimeType1"
            valueType: "java.lang.String"
            uuid: "mimeType"
      valueType: "org.springframework.boot.web.server.MimeMappings$Mapping"
      uuid: "object5"
      collectionUuid: "iterator3-CollectionContent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "mimeType1"
      valueType: "java.lang.String"
      uuid: "mimeType"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo13"
    - sapientType: "ANY"
      valueType: "io.undertow.servlet.api.MimeMapping"
      uuid: "mimeMapping"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Session"
        parameters: []
        propertiesMap:
          persistent:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "persistent"
          timeout:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "timeout-days"
            valueType: "java.time.Duration"
            uuid: "timeout"
      valueType: "org.springframework.boot.web.servlet.server.Session"
      uuid: "session4"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "persistent"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo14"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.embedded.undertow.FileSessionPersistence"
      uuid: "fileSessionPersistence"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo15"
    - sapientType: "BASIC"
      content: !<regular>
        value: "locale"
      valueType: "java.lang.String"
      uuid: "string11"
    - sapientType: "BASIC"
      content: !<regular>
        value: "charset"
      valueType: "java.lang.String"
      uuid: "string12"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.Servlets"
      uuid: "Servlets.class"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.ServletContainer"
      uuid: "servletContainer"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.ServletContainer"
      uuid: "servletContainer"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.core.DeploymentImpl"
      uuid: "deployment"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "OBJECT"
          content: !<new>
            target: "io.undertow.servlet.api.MimeMapping"
            parameters:
            - name: "extension"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: ""
                valueType: "java.lang.String"
                uuid: "extension2"
            - name: "mimeType"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "mimeType1"
                valueType: "java.lang.String"
                uuid: "mimeType2"
          valueType: "io.undertow.servlet.api.MimeMapping"
          uuid: "object6"
          collectionUuid: "list3"
      valueType: "java.util.List"
      genericValueType: "io.undertow.servlet.api.MimeMapping"
      uuid: "list3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "io.undertow.servlet.api.MimeMapping"
        parameters:
        - name: "extension"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "extension2"
        - name: "mimeType"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "mimeType1"
            valueType: "java.lang.String"
            uuid: "mimeType2"
      valueType: "io.undertow.servlet.api.MimeMapping"
      uuid: "object6"
      collectionUuid: "list3"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "extension2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "io.undertow.servlet.api.MimeMapping"
        parameters:
        - name: "extension"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "extension2"
        - name: "mimeType"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "mimeType1"
            valueType: "java.lang.String"
            uuid: "mimeType2"
      valueType: "io.undertow.servlet.api.MimeMapping"
      uuid: "object6"
      collectionUuid: "list3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "mimeType1"
      valueType: "java.lang.String"
      uuid: "mimeType2"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.core.DeploymentImpl"
      uuid: "deployment"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: ""
              valueType: "java.lang.String"
              uuid: "string14"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "mimeType1"
              valueType: "java.lang.String"
              uuid: "mimeType2"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid140"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "hashMap4"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.Deployment"
      uuid: "deployment2"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.Deployment"
      uuid: "deployment2"
    - sapientType: "MOCK"
      valueType: "io.undertow.server.session.SessionManager"
      uuid: "sessionManager"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Session"
        parameters: []
        propertiesMap:
          persistent:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "persistent"
          timeout:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "timeout-days"
            valueType: "java.time.Duration"
            uuid: "timeout"
      valueType: "org.springframework.boot.web.servlet.server.Session"
      uuid: "session4"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "timeout-days"
      valueType: "java.time.Duration"
      uuid: "timeout"
    - sapientType: "MOCK"
      valueType: "io.undertow.server.session.SessionManager"
      uuid: "sessionManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: -1
      valueType: "int"
      uuid: "int10"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
      uuid: "undertowServletWebServer"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.Undertow$Builder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
            parameters: []
          valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
          uuid: "undertowWebServerFactoryDelegate"
          fixed: true
        methodParameters:
        - name: "factory"
          value:
            sapientType: "THIS"
            valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
            uuid: "targetClassObject"
            fixed: true
        - name: "sslBundleSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "uniqueUuid141"
        methodName: "createBuilder"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "BASIC"
      content: !<regular>
        value: 2
      valueType: "int"
      uuid: "port"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
      uuid: "undertowServletWebServer"
    branches:
    - lineNumber: 375
      expression: "this.resourceLoader != null"
      range: "(375,7)-(375,33)"
      evaluatedAs: false
      internalMethodName: "getServletClassLoader"
    - lineNumber: 310
      expression: "isRegisterDefaultServlet()"
      range: "(310,7)-(310,32)"
      evaluatedAs: true
      internalMethodName: "createManager"
    - lineNumber: 427
      expression: "for-each(getErrorPages())"
      range: "(427,30)-(427,44)"
      evaluatedAs: true
      internalMethodName: "configureErrorPages"
    - lineNumber: 433
      expression: "errorPage.getStatus() != null"
      range: "(433,7)-(433,35)"
      evaluatedAs: true
      internalMethodName: "getUndertowErrorPage"
    - lineNumber: 418
      expression: "docBase != null"
      range: "(418,17)-(418,31)"
      evaluatedAs: true
      internalMethodName: "getCanonicalDocumentRoot"
    - lineNumber: 387
      expression: "docBase.isDirectory()"
      range: "(387,34)-(387,54)"
      evaluatedAs: true
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 389
      expression: "root != null"
      range: "(389,7)-(389,18)"
      evaluatedAs: true
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 393
      expression: "for-each(metaInfResourceUrls)"
      range: "(393,18)-(393,36)"
      evaluatedAs: true
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 394
      expression: "\\\"file\\\".equals(url.getProtocol())"
      range: "(394,8)-(394,39)"
      evaluatedAs: true
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 397
      expression: "file.isFile()"
      range: "(397,10)-(397,22)"
      evaluatedAs: true
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 443
      expression: "for-each(getMimeMappings())"
      range: "(443,30)-(443,46)"
      evaluatedAs: true
      internalMethodName: "configureMimeMappings"
    - lineNumber: 342
      expression: "for-each(getWebListenerClassNames())"
      range: "(342,27)-(342,52)"
      evaluatedAs: false
      internalMethodName: "configureWebListeners"
    - lineNumber: 321
      expression: "for-each(this.deploymentInfoCustomizers)"
      range: "(321,54)-(321,83)"
      evaluatedAs: false
      internalMethodName: "createManager"
    - lineNumber: 324
      expression: "getSession().isPersistent()"
      range: "(324,7)-(324,33)"
      evaluatedAs: true
      internalMethodName: "createManager"
    - lineNumber: 331
      expression: "manager.getDeployment() instanceof DeploymentImpl managerDeployment"
      range: "(331,7)-(331,73)"
      evaluatedAs: true
      internalMethodName: "createManager"
    - lineNumber: 452
      expression: "for-each(deploymentInfo.getMimeMappings())"
      range: "(452,30)-(452,61)"
      evaluatedAs: true
      internalMethodName: "removeSuperfluousMimeMappings"
    - lineNumber: 358
      expression: "timeoutDuration == null"
      range: "(358,10)-(358,32)"
      evaluatedAs: false
      internalMethodName: "isZeroOrLess"
    - lineNumber: 358
      expression: "timeoutDuration.isZero()"
      range: "(358,37)-(358,60)"
      evaluatedAs: false
      internalMethodName: "isZeroOrLess"
    - lineNumber: 358
      expression: "timeoutDuration.isNegative()"
      range: "(358,65)-(358,92)"
      evaluatedAs: true
      internalMethodName: "isZeroOrLess"
    - lineNumber: 336
      expression: "isZeroOrLess(timeoutDuration)"
      range: "(336,25)-(336,53)"
      evaluatedAs: true
      internalMethodName: "createManager"
  - pathId: "path2"
    testPathName: "getWebServerWhenIsZeroOrLessNotTimeoutDuration"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "77A20D196701F7DA74C7F90BA179498B"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6A13043F3306A60CE4000F64FFF3E1E7"
      valueUuid: "target"
    - type: "INPUT"
      name: "initializers"
      modelFingerprint: "6BEFA360E7AAB6F6818E0508F15D68E1"
      valueUuid: "initializers"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9212DE2B3A3A58812CCC36B248184E13"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid142):void3"
        staticAccess: true
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "8DADDE93492B3FCDB8B3288E7332DF18"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "createBuilder(factory:targetClassObject,sslBundleSupplier:uniqueUuid143):undertow.Builder"
    - type: "STATIC"
      name: "Servlets.class"
      modelFingerprint: "7BC06AC1283B8D389463CFECF6BB29A4"
      valueUuid: "Servlets.class"
      methodExercised:
        expression: "deployment():deploymentInfo"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "DFE1B5D8FA6B4EDA983290EDA606FCD8"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addServletContainerInitializer(servletContainerInitializer:servletContainerInitializerInfo):deploymentInfo2"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "FD017A9BD536F1BEB099BA0D2A9189FC"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setClassLoader(classLoader:classLoader):deploymentInfo3"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "2413A3720B277E1264AEFD5E1A7CEF69"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setContextPath(contextPath:contextPath):deploymentInfo4"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "DFD5BCD1E5F667BE7070C76D56F5F370"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setDisplayName(displayName:string4):deploymentInfo5"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "C2009D0995EC20B53F18559EF3F67DF1"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setDeploymentName(deploymentName:uniqueUuid147):deploymentInfo6"
    - type: "STATIC"
      name: "Servlets.class.real"
      modelFingerprint: "4A671F4ABDD67E58C7F506CAE2A46371"
      valueUuid: "Servlets.class.real"
      methodExercised:
        expression: "servlet(name:uniqueUuid149,servletClass:uniqueUuid150):servletInfo"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "C6B0D1553ED8C4B21220FB2DD7E78129"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addServlet(servlet:servletInfo):deploymentInfo7"
    - type: "LOCAL_VARIABLE"
      name: "errorPage"
      modelFingerprint: "4FCFAB2DEC46250D9C061F0A8C658A54"
      valueUuid: "object"
      methodExercised:
        expression: "getStatus():status"
    - type: "LOCAL_VARIABLE"
      name: "errorPage"
      modelFingerprint: "4239FB76EFF9936513A39E6A03559CE3"
      valueUuid: "object"
      methodExercised:
        expression: "getPath():path"
    - type: "LOCAL_VARIABLE"
      name: "errorPage"
      modelFingerprint: "224B739BABD069DDF43532F203EBA48D"
      valueUuid: "object"
      methodExercised:
        expression: "getStatusCode():int9"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "6A64E225FED690CD432C9E544435C13E"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addErrorPage(errorPage:errorPage):deploymentInfo8"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "5DA5A1EAE8BB74F85A1F10074055BB43"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setServletStackTraces(servletStackTraces:Enum-io.undertow.servlet.api.ServletStackTraces-NONE):deploymentInfo9"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "C606D2A57D532BA43F7FB0A4728A7A8F"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setResourceManager(resourceManager:compositeResourceManager):deploymentInfo10"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "4557A779E7B6B5A3D19EC38B322EF96F"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setTempDir(tempDir:file4):deploymentInfo11"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "79020A62BFC4B953E7819E652D57F9DE"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setEagerFilterInit(eagerFilterInit:int7):deploymentInfo12"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "6756B4E7A2B932E9E7E7DDE61EF4A382"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setPreservePathOnForward(preservePathOnForward:int8):void6"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "167BAFA0CD87F4349A3B655AA711A46B"
      valueUuid: "mimeMappings5"
      methodExercised:
        expression: "iterator():iterator3"
    - type: "LOCAL_VARIABLE"
      name: "mimeMapping"
      modelFingerprint: "49BAA4A13DE025153682CB0C7645EF91"
      valueUuid: "object3"
      methodExercised:
        expression: "getExtension():extension"
    - type: "LOCAL_VARIABLE"
      name: "mimeMapping"
      modelFingerprint: "5C9E518892E2C13DB98DD88B38096B01"
      valueUuid: "object3"
      methodExercised:
        expression: "getMimeType():mimeType"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "216E55800FB16BA88859A27FBAFB2F30"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addMimeMapping(mimeMappings:mimeMapping):deploymentInfo13"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "464886F0AA81F595F3AF412C2CAD2F53"
      valueUuid: "session4"
      methodExercised:
        expression: "isPersistent():persistent"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "348AD456535F41404CD8B17ADA171E25"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setSessionPersistenceManager(sessionPersistenceManager:fileSessionPersistence):deploymentInfo14"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "DD62A5AE63E7AC9FEAFEC804F651279F"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addLocaleCharsetMapping(locale:string11,charset:string12):deploymentInfo15"
    - type: "STATIC"
      name: "Servlets.class"
      modelFingerprint: "DA4CBABA4B30C2549402D3ED0837DC38"
      valueUuid: "Servlets.class"
      methodExercised:
        expression: "newContainer():servletContainer"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "137FC84003338874E813A7241310FABB"
      valueUuid: "servletContainer"
      methodExercised:
        expression: "addDeployment(arg0:deploymentInfo):deploymentManager"
    - type: "LOCAL_VARIABLE"
      name: "manager"
      modelFingerprint: "AB17A24630E8232D42862E37F39971DC"
      valueUuid: "deploymentManager"
      methodExercised:
        expression: "deploy():void8"
    - type: "LOCAL_VARIABLE"
      name: "manager"
      modelFingerprint: "F11C9DEBC4D5AD535D36C5034BBC796C"
      valueUuid: "deploymentManager"
      methodExercised:
        expression: "getDeployment():deployment"
    - type: "LOCAL_VARIABLE"
      name: "deploymentInfo"
      modelFingerprint: "A86D14D765E41B512727FCE81D462B15"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "getMimeMappings():list3"
    - type: "LOCAL_VARIABLE"
      name: "mapping"
      modelFingerprint: "95D7AEDDE4CB6064ECDA5D6259CA8E6A"
      valueUuid: "object4"
      methodExercised:
        expression: "getExtension():extension2"
    - type: "LOCAL_VARIABLE"
      name: "mapping"
      modelFingerprint: "B3DE923639DBDF81D4446F8D97548673"
      valueUuid: "object4"
      methodExercised:
        expression: "getMimeType():mimeType2"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "2931D36BF0FA0FC3226C73F98C9CC26F"
      valueUuid: "deployment"
      methodExercised:
        expression: "setMimeExtensionMappings(mimeExtensionMappings:hashMap4):void9"
    - type: "LOCAL_VARIABLE"
      name: "manager"
      modelFingerprint: "614F170FF0E1B9F825566FC8714C868A"
      valueUuid: "deploymentManager"
      methodExercised:
        expression: "getDeployment():deployment2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "0B0E3DA7F499072DEE603987ED55168C"
      valueUuid: "deployment2"
      methodExercised:
        expression: "getSessionManager():sessionManager"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "60FABDCAE4ABC1137947853796EF9754"
      valueUuid: "session4"
      methodExercised:
        expression: "getTimeout():timeout"
    - type: "LOCAL_VARIABLE"
      name: "sessionManager"
      modelFingerprint: "BC3CD865BE97F9DD59EC6621078AB798"
      valueUuid: "sessionManager"
      methodExercised:
        expression: "setDefaultSessionTimeout(arg0:int10):void10"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "D03E233217C1DD5A76CCC015D45689E4"
      methodExercised:
        expression: "getUndertowWebServer(builder:undertow.Builder,manager:deploymentManager,port:port):undertowServletWebServer"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8EAADE33D91E58F2D0E069A6ED8DC321"
      valueUuid: "undertowServletWebServer"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "Builder builder = this.delegate.createBuilder(this, this::getSslBundle);"
      lineNumber: 298
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: createBuilder"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/AB"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "int"
            uuid: "port"
        propertiesMap:
          registerDefaultServlet:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "boolean15"
          localeCharsetMappings:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashMap"
              parameters: []
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.util.Locale"
                      parameters:
                      - name: "language"
                        value:
                          sapientType: "BASIC"
                          content: !<regular>
                            value: "language1"
                          valueType: "java.lang.String"
                          uuid: "locale-language"
                    valueType: "java.util.Locale"
                    uuid: "locale"
                    collectionUuid: "map4"
                    nameForMock: "locale"
                  value:
                    sapientType: "OBJECT"
                    content: !<static_method_return>
                      target: "java.nio.charset.Charset"
                      method: "defaultCharset"
                      methodParameters: []
                    valueType: "java.nio.charset.Charset"
                    uuid: "charset"
                    collectionUuid: "map4"
                    nameForMock: "charset"
                valueType: "java.util.Map$Entry"
            valueType: "java.util.Map"
            genericValueType: "java.util.Locale,java.nio.charset.Charset"
            uuid: "map4"
          displayName:
            sapientType: "BASIC"
            content: !<regular>
              value: "displayName1"
            valueType: "java.lang.String"
            uuid: "string4"
          errorPages:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashSet"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.web.server.ErrorPage"
                uuid: "object"
                collectionUuid: "set2"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.web.server.ErrorPage"
            uuid: "set2"
          session:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.servlet.server.Session"
              parameters: []
              propertiesMap:
                persistent:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: true
                  valueType: "boolean"
                  uuid: "persistent"
                timeout:
                  sapientType: "OBJECT"
                  content: !<static_method_return>
                    target: "java.time.Duration"
                    method: "ofDays"
                    methodParameters:
                    - name: "days"
                      value:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 0
                        valueType: "long"
                        uuid: "timeout-days"
                  valueType: "java.time.Duration"
                  uuid: "timeout"
            valueType: "org.springframework.boot.web.servlet.server.Session"
            uuid: "session4"
          mimeMappings:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings5"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.servlet.ServletContextInitializer[]"
      uuid: "initializers"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/AB"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid142"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.Undertow$Builder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
            parameters: []
          valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
          uuid: "undertowWebServerFactoryDelegate"
          fixed: true
        methodParameters:
        - name: "factory"
          value:
            sapientType: "THIS"
            valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
            uuid: "targetClassObject"
            fixed: true
        - name: "sslBundleSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "uniqueUuid156"
        methodName: "createBuilder"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "uniqueUuid143"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.Servlets"
      uuid: "Servlets.class"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo2"
    - sapientType: "ANY"
      valueType: "io.undertow.servlet.api.ServletContainerInitializerInfo"
      uuid: "servletContainerInitializerInfo"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "java.lang.ClassLoader"
              localVariableValue:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
                valueType: "java.lang.Class"
                genericValueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
                fixed: true
              methodParameters: []
              methodName: "getClassLoader"
            valueType: "java.lang.ClassLoader"
            uuid: "classLoader"
        methodName: "setClassLoader"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo3"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.ClassLoader"
        localVariableValue:
          sapientType: "CLASS"
          content: !<regular>
            value: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
          valueType: "java.lang.Class"
          genericValueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
          uuid: "uniqueUuid146"
          fixed: true
        methodParameters: []
        methodName: "getClassLoader"
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/AB"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "displayName1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "spring-boot"
            valueType: "java.lang.String"
            uuid: "uniqueUuid148"
            fixed: true
        methodName: "setDeploymentName"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "spring-boot"
      valueType: "java.lang.String"
      uuid: "uniqueUuid147"
      fixed: true
    - sapientType: "REAL"
      valueType: "io.undertow.servlet.Servlets"
      uuid: "Servlets.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "io.undertow.servlet.Servlets"
        method: "servlet"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "default"
            valueType: "java.lang.String"
            uuid: "uniqueUuid153"
            fixed: true
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.servlet.handlers.DefaultServlet"
            valueType: "java.lang.Class"
            genericValueType: "? extends jakarta.servlet.Servlet"
            uuid: "uniqueUuid154"
            fixed: true
      valueType: "io.undertow.servlet.api.ServletInfo"
      uuid: "servletInfo"
    - sapientType: "BASIC"
      content: !<regular>
        value: "default"
      valueType: "java.lang.String"
      uuid: "uniqueUuid149"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "io.undertow.servlet.handlers.DefaultServlet"
      valueType: "java.lang.Class"
      genericValueType: "? extends jakarta.servlet.Servlet"
      uuid: "uniqueUuid150"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "io.undertow.servlet.Servlets"
              method: "servlet"
              methodParameters:
              - value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "default"
                  valueType: "java.lang.String"
                  fixed: true
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "io.undertow.servlet.handlers.DefaultServlet"
                  valueType: "java.lang.Class"
                  genericValueType: "? extends jakarta.servlet.Servlet"
                  fixed: true
            valueType: "io.undertow.servlet.api.ServletInfo"
            uuid: "servletInfo"
        methodName: "addServlet"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo7"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "io.undertow.servlet.Servlets"
        method: "servlet"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "default"
            valueType: "java.lang.String"
            uuid: "uniqueUuid153"
            fixed: true
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.servlet.handlers.DefaultServlet"
            valueType: "java.lang.Class"
            genericValueType: "? extends jakarta.servlet.Servlet"
            uuid: "uniqueUuid154"
            fixed: true
      valueType: "io.undertow.servlet.api.ServletInfo"
      uuid: "servletInfo"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.ErrorPage"
      uuid: "object"
      collectionUuid: "set2"
    - sapientType: "ENUM"
      content: !<regular>
        value: "CONTINUE"
      valueType: "org.springframework.http.HttpStatus"
      uuid: "status"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.ErrorPage"
      uuid: "object"
      collectionUuid: "set2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getPath1"
      valueType: "java.lang.String"
      uuid: "path"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.ErrorPage"
      uuid: "object"
      collectionUuid: "set2"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int9"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo8"
    - sapientType: "ANY"
      valueType: "io.undertow.servlet.api.ErrorPage"
      uuid: "errorPage"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "io.undertow.servlet.api.ServletStackTraces"
            uuid: "Enum-io.undertow.servlet.api.ServletStackTraces-NONE"
            fixed: true
        methodName: "setServletStackTraces"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo9"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "io.undertow.servlet.api.ServletStackTraces"
      uuid: "Enum-io.undertow.servlet.api.ServletStackTraces-NONE"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo10"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.embedded.undertow.CompositeResourceManager"
      uuid: "compositeResourceManager"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo11"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file4-pathname"
      valueType: "java.io.File"
      uuid: "file4"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "int7"
            fixed: true
        methodName: "setEagerFilterInit"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo12"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "int7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "int8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings5"
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.boot.web.server.MimeMappings$Mapping"
                parameters:
                - name: "extension"
                  value:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "extension1"
                    valueType: "java.lang.String"
                    uuid: "extension"
                - name: "mimeType"
                  value:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "mimeType1"
                    valueType: "java.lang.String"
                    uuid: "mimeType"
              valueType: "org.springframework.boot.web.server.MimeMappings$Mapping"
              uuid: "object3"
              collectionUuid: "iterator3-CollectionContent"
          valueType: "java.util.List"
          genericValueType: "org.springframework.boot.web.server.MimeMappings$Mapping"
          uuid: "iterator3-CollectionContent"
      valueType: "java.util.Iterator"
      genericValueType: "org.springframework.boot.web.server.MimeMappings$Mapping"
      uuid: "iterator3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.MimeMappings$Mapping"
        parameters:
        - name: "extension"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "extension1"
            valueType: "java.lang.String"
            uuid: "extension"
        - name: "mimeType"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "mimeType1"
            valueType: "java.lang.String"
            uuid: "mimeType"
      valueType: "org.springframework.boot.web.server.MimeMappings$Mapping"
      uuid: "object3"
      collectionUuid: "iterator3-CollectionContent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "extension1"
      valueType: "java.lang.String"
      uuid: "extension"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.MimeMappings$Mapping"
        parameters:
        - name: "extension"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "extension1"
            valueType: "java.lang.String"
            uuid: "extension"
        - name: "mimeType"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "mimeType1"
            valueType: "java.lang.String"
            uuid: "mimeType"
      valueType: "org.springframework.boot.web.server.MimeMappings$Mapping"
      uuid: "object3"
      collectionUuid: "iterator3-CollectionContent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "mimeType1"
      valueType: "java.lang.String"
      uuid: "mimeType"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo13"
    - sapientType: "ANY"
      valueType: "io.undertow.servlet.api.MimeMapping"
      uuid: "mimeMapping"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Session"
        parameters: []
        propertiesMap:
          persistent:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "persistent"
          timeout:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "timeout-days"
            valueType: "java.time.Duration"
            uuid: "timeout"
      valueType: "org.springframework.boot.web.servlet.server.Session"
      uuid: "session4"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "persistent"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo14"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.embedded.undertow.FileSessionPersistence"
      uuid: "fileSessionPersistence"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo15"
    - sapientType: "BASIC"
      content: !<regular>
        value: "locale"
      valueType: "java.lang.String"
      uuid: "string11"
    - sapientType: "BASIC"
      content: !<regular>
        value: "charset"
      valueType: "java.lang.String"
      uuid: "string12"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.Servlets"
      uuid: "Servlets.class"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.ServletContainer"
      uuid: "servletContainer"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.ServletContainer"
      uuid: "servletContainer"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.core.DeploymentImpl"
      uuid: "deployment"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "OBJECT"
          content: !<new>
            target: "io.undertow.servlet.api.MimeMapping"
            parameters:
            - name: "extension"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: ""
                valueType: "java.lang.String"
                uuid: "extension2"
            - name: "mimeType"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "mimeType1"
                valueType: "java.lang.String"
                uuid: "mimeType2"
          valueType: "io.undertow.servlet.api.MimeMapping"
          uuid: "object4"
          collectionUuid: "list3"
      valueType: "java.util.List"
      genericValueType: "io.undertow.servlet.api.MimeMapping"
      uuid: "list3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "io.undertow.servlet.api.MimeMapping"
        parameters:
        - name: "extension"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "extension2"
        - name: "mimeType"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "mimeType1"
            valueType: "java.lang.String"
            uuid: "mimeType2"
      valueType: "io.undertow.servlet.api.MimeMapping"
      uuid: "object4"
      collectionUuid: "list3"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "extension2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "io.undertow.servlet.api.MimeMapping"
        parameters:
        - name: "extension"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "extension2"
        - name: "mimeType"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "mimeType1"
            valueType: "java.lang.String"
            uuid: "mimeType2"
      valueType: "io.undertow.servlet.api.MimeMapping"
      uuid: "object4"
      collectionUuid: "list3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "mimeType1"
      valueType: "java.lang.String"
      uuid: "mimeType2"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.core.DeploymentImpl"
      uuid: "deployment"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: ""
              valueType: "java.lang.String"
              uuid: "string14"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "mimeType1"
              valueType: "java.lang.String"
              uuid: "mimeType2"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid155"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "hashMap4"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.Deployment"
      uuid: "deployment2"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.Deployment"
      uuid: "deployment2"
    - sapientType: "MOCK"
      valueType: "io.undertow.server.session.SessionManager"
      uuid: "sessionManager"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Session"
        parameters: []
        propertiesMap:
          persistent:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "persistent"
          timeout:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "timeout-days"
            valueType: "java.time.Duration"
            uuid: "timeout"
      valueType: "org.springframework.boot.web.servlet.server.Session"
      uuid: "session4"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "timeout-days"
      valueType: "java.time.Duration"
      uuid: "timeout"
    - sapientType: "MOCK"
      valueType: "io.undertow.server.session.SessionManager"
      uuid: "sessionManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      originalValueType: "long"
      uuid: "int10"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
      uuid: "undertowServletWebServer"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.Undertow$Builder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
            parameters: []
          valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
          uuid: "undertowWebServerFactoryDelegate"
          fixed: true
        methodParameters:
        - name: "factory"
          value:
            sapientType: "THIS"
            valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
            uuid: "targetClassObject"
            fixed: true
        - name: "sslBundleSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "uniqueUuid156"
        methodName: "createBuilder"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "BASIC"
      content: !<regular>
        value: 2
      valueType: "int"
      uuid: "port"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
      uuid: "undertowServletWebServer"
    branches:
    - lineNumber: 375
      expression: "this.resourceLoader != null"
      range: "(375,7)-(375,33)"
      evaluatedAs: false
      internalMethodName: "getServletClassLoader"
    - lineNumber: 310
      expression: "isRegisterDefaultServlet()"
      range: "(310,7)-(310,32)"
      evaluatedAs: true
      internalMethodName: "createManager"
    - lineNumber: 427
      expression: "for-each(getErrorPages())"
      range: "(427,30)-(427,44)"
      evaluatedAs: true
      internalMethodName: "configureErrorPages"
    - lineNumber: 433
      expression: "errorPage.getStatus() != null"
      range: "(433,7)-(433,35)"
      evaluatedAs: true
      internalMethodName: "getUndertowErrorPage"
    - lineNumber: 418
      expression: "docBase != null"
      range: "(418,17)-(418,31)"
      evaluatedAs: true
      internalMethodName: "getCanonicalDocumentRoot"
    - lineNumber: 387
      expression: "docBase.isDirectory()"
      range: "(387,34)-(387,54)"
      evaluatedAs: true
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 389
      expression: "root != null"
      range: "(389,7)-(389,18)"
      evaluatedAs: true
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 393
      expression: "for-each(metaInfResourceUrls)"
      range: "(393,18)-(393,36)"
      evaluatedAs: true
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 394
      expression: "\\\"file\\\".equals(url.getProtocol())"
      range: "(394,8)-(394,39)"
      evaluatedAs: true
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 397
      expression: "file.isFile()"
      range: "(397,10)-(397,22)"
      evaluatedAs: true
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 443
      expression: "for-each(getMimeMappings())"
      range: "(443,30)-(443,46)"
      evaluatedAs: true
      internalMethodName: "configureMimeMappings"
    - lineNumber: 342
      expression: "for-each(getWebListenerClassNames())"
      range: "(342,27)-(342,52)"
      evaluatedAs: false
      internalMethodName: "configureWebListeners"
    - lineNumber: 321
      expression: "for-each(this.deploymentInfoCustomizers)"
      range: "(321,54)-(321,83)"
      evaluatedAs: false
      internalMethodName: "createManager"
    - lineNumber: 324
      expression: "getSession().isPersistent()"
      range: "(324,7)-(324,33)"
      evaluatedAs: true
      internalMethodName: "createManager"
    - lineNumber: 331
      expression: "manager.getDeployment() instanceof DeploymentImpl managerDeployment"
      range: "(331,7)-(331,73)"
      evaluatedAs: true
      internalMethodName: "createManager"
    - lineNumber: 452
      expression: "for-each(deploymentInfo.getMimeMappings())"
      range: "(452,30)-(452,61)"
      evaluatedAs: true
      internalMethodName: "removeSuperfluousMimeMappings"
    - lineNumber: 358
      expression: "timeoutDuration == null"
      range: "(358,10)-(358,32)"
      evaluatedAs: false
      internalMethodName: "isZeroOrLess"
    - lineNumber: 358
      expression: "timeoutDuration.isZero()"
      range: "(358,37)-(358,60)"
      evaluatedAs: false
      internalMethodName: "isZeroOrLess"
    - lineNumber: 358
      expression: "timeoutDuration.isNegative()"
      range: "(358,65)-(358,92)"
      evaluatedAs: false
      internalMethodName: "isZeroOrLess"
    - lineNumber: 336
      expression: "isZeroOrLess(timeoutDuration)"
      range: "(336,25)-(336,53)"
      evaluatedAs: false
      internalMethodName: "createManager"
  - pathId: "path23"
    testPathName: "getWebServerWhenTimeoutDurationNotIsZeroAndTimeoutDurationIsNegativeAndIsZeroOrLessTimeoutDuration"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "D6D0A956C0F37A411501867B50CBB155"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "0BBB5501705191177EB5A182FEC8699F"
      valueUuid: "target"
    - type: "INPUT"
      name: "initializers"
      modelFingerprint: "6BEFA360E7AAB6F6818E0508F15D68E1"
      valueUuid: "initializers"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9212DE2B3A3A58812CCC36B248184E13"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid157):void3"
        staticAccess: true
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "8DADDE93492B3FCDB8B3288E7332DF18"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "createBuilder(factory:targetClassObject,sslBundleSupplier:uniqueUuid158):undertow.Builder"
    - type: "STATIC"
      name: "Servlets.class"
      modelFingerprint: "7BC06AC1283B8D389463CFECF6BB29A4"
      valueUuid: "Servlets.class"
      methodExercised:
        expression: "deployment():deploymentInfo"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "DFE1B5D8FA6B4EDA983290EDA606FCD8"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addServletContainerInitializer(servletContainerInitializer:servletContainerInitializerInfo):deploymentInfo2"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "FD017A9BD536F1BEB099BA0D2A9189FC"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setClassLoader(classLoader:classLoader):deploymentInfo3"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "2413A3720B277E1264AEFD5E1A7CEF69"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setContextPath(contextPath:contextPath):deploymentInfo4"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "DFD5BCD1E5F667BE7070C76D56F5F370"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setDisplayName(displayName:string4):deploymentInfo5"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "C2009D0995EC20B53F18559EF3F67DF1"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setDeploymentName(deploymentName:uniqueUuid162):deploymentInfo6"
    - type: "STATIC"
      name: "Servlets.class.real"
      modelFingerprint: "4A671F4ABDD67E58C7F506CAE2A46371"
      valueUuid: "Servlets.class.real"
      methodExercised:
        expression: "servlet(name:uniqueUuid164,servletClass:uniqueUuid165):servletInfo"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "C6B0D1553ED8C4B21220FB2DD7E78129"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addServlet(servlet:servletInfo):deploymentInfo7"
    - type: "LOCAL_VARIABLE"
      name: "errorPage"
      modelFingerprint: "8D604FE80C97354503FC9433EC730C59"
      valueUuid: "object"
      methodExercised:
        expression: "getStatus():status"
    - type: "LOCAL_VARIABLE"
      name: "errorPage"
      modelFingerprint: "7EFC966F8ED1BD1903BB5AEA30559AAE"
      valueUuid: "object"
      methodExercised:
        expression: "getException():exception"
    - type: "LOCAL_VARIABLE"
      name: "errorPage"
      modelFingerprint: "4239FB76EFF9936513A39E6A03559CE3"
      valueUuid: "object"
      methodExercised:
        expression: "getPath():path"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "2864EFCCDCFF7208E50CF7647E4B90AE"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addErrorPage(errorPage:errorPage):deploymentInfo8"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "5DA5A1EAE8BB74F85A1F10074055BB43"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setServletStackTraces(servletStackTraces:Enum-io.undertow.servlet.api.ServletStackTraces-NONE):deploymentInfo9"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "C606D2A57D532BA43F7FB0A4728A7A8F"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setResourceManager(resourceManager:compositeResourceManager):deploymentInfo10"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "4557A779E7B6B5A3D19EC38B322EF96F"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setTempDir(tempDir:file3):deploymentInfo11"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "79020A62BFC4B953E7819E652D57F9DE"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setEagerFilterInit(eagerFilterInit:int7):deploymentInfo12"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "6756B4E7A2B932E9E7E7DDE61EF4A382"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setPreservePathOnForward(preservePathOnForward:int8):void6"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "167BAFA0CD87F4349A3B655AA711A46B"
      valueUuid: "mimeMappings5"
      methodExercised:
        expression: "iterator():iterator3"
    - type: "LOCAL_VARIABLE"
      name: "mimeMapping"
      modelFingerprint: "49BAA4A13DE025153682CB0C7645EF91"
      valueUuid: "object3"
      methodExercised:
        expression: "getExtension():extension"
    - type: "LOCAL_VARIABLE"
      name: "mimeMapping"
      modelFingerprint: "5C9E518892E2C13DB98DD88B38096B01"
      valueUuid: "object3"
      methodExercised:
        expression: "getMimeType():mimeType"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "216E55800FB16BA88859A27FBAFB2F30"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addMimeMapping(mimeMappings:mimeMapping):deploymentInfo13"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "464886F0AA81F595F3AF412C2CAD2F53"
      valueUuid: "session4"
      methodExercised:
        expression: "isPersistent():persistent"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "348AD456535F41404CD8B17ADA171E25"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setSessionPersistenceManager(sessionPersistenceManager:fileSessionPersistence):deploymentInfo14"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "DD62A5AE63E7AC9FEAFEC804F651279F"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addLocaleCharsetMapping(locale:string10,charset:string11):deploymentInfo15"
    - type: "STATIC"
      name: "Servlets.class"
      modelFingerprint: "DA4CBABA4B30C2549402D3ED0837DC38"
      valueUuid: "Servlets.class"
      methodExercised:
        expression: "newContainer():servletContainer"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "137FC84003338874E813A7241310FABB"
      valueUuid: "servletContainer"
      methodExercised:
        expression: "addDeployment(arg0:deploymentInfo):deploymentManager"
    - type: "LOCAL_VARIABLE"
      name: "manager"
      modelFingerprint: "AB17A24630E8232D42862E37F39971DC"
      valueUuid: "deploymentManager"
      methodExercised:
        expression: "deploy():void8"
    - type: "LOCAL_VARIABLE"
      name: "manager"
      modelFingerprint: "F11C9DEBC4D5AD535D36C5034BBC796C"
      valueUuid: "deploymentManager"
      methodExercised:
        expression: "getDeployment():deployment"
    - type: "LOCAL_VARIABLE"
      name: "deploymentInfo"
      modelFingerprint: "A86D14D765E41B512727FCE81D462B15"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "getMimeMappings():list3"
    - type: "LOCAL_VARIABLE"
      name: "mapping"
      modelFingerprint: "95D7AEDDE4CB6064ECDA5D6259CA8E6A"
      valueUuid: "object4"
      methodExercised:
        expression: "getExtension():extension2"
    - type: "LOCAL_VARIABLE"
      name: "mapping"
      modelFingerprint: "B3DE923639DBDF81D4446F8D97548673"
      valueUuid: "object4"
      methodExercised:
        expression: "getMimeType():mimeType2"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "2931D36BF0FA0FC3226C73F98C9CC26F"
      valueUuid: "deployment"
      methodExercised:
        expression: "setMimeExtensionMappings(mimeExtensionMappings:hashMap4):void9"
    - type: "LOCAL_VARIABLE"
      name: "manager"
      modelFingerprint: "614F170FF0E1B9F825566FC8714C868A"
      valueUuid: "deploymentManager"
      methodExercised:
        expression: "getDeployment():deployment2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "0B0E3DA7F499072DEE603987ED55168C"
      valueUuid: "deployment2"
      methodExercised:
        expression: "getSessionManager():sessionManager"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "60FABDCAE4ABC1137947853796EF9754"
      valueUuid: "session4"
      methodExercised:
        expression: "getTimeout():timeout"
    - type: "LOCAL_VARIABLE"
      name: "sessionManager"
      modelFingerprint: "6BC676AB1B8273D8CDAD56C46DA1291F"
      valueUuid: "sessionManager"
      methodExercised:
        expression: "setDefaultSessionTimeout(arg0:int9):void10"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "2633F33FF3AFC6124DBB505C3CC0E555"
      methodExercised:
        expression: "getUndertowWebServer(builder:undertow.Builder,manager:deploymentManager,port:port):undertowServletWebServer"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8EAADE33D91E58F2D0E069A6ED8DC321"
      valueUuid: "undertowServletWebServer"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "Builder builder = this.delegate.createBuilder(this, this::getSslBundle);"
      lineNumber: 298
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: createBuilder"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/AB"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 8
            valueType: "int"
            uuid: "port"
        propertiesMap:
          registerDefaultServlet:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "boolean15"
          localeCharsetMappings:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashMap"
              parameters: []
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.util.Locale"
                      parameters:
                      - name: "language"
                        value:
                          sapientType: "BASIC"
                          content: !<regular>
                            value: "language1"
                          valueType: "java.lang.String"
                          uuid: "locale-language"
                    valueType: "java.util.Locale"
                    uuid: "locale"
                    collectionUuid: "map4"
                    nameForMock: "locale"
                  value:
                    sapientType: "OBJECT"
                    content: !<static_method_return>
                      target: "java.nio.charset.Charset"
                      method: "defaultCharset"
                      methodParameters: []
                    valueType: "java.nio.charset.Charset"
                    uuid: "charset"
                    collectionUuid: "map4"
                    nameForMock: "charset"
                valueType: "java.util.Map$Entry"
            valueType: "java.util.Map"
            genericValueType: "java.util.Locale,java.nio.charset.Charset"
            uuid: "map4"
          displayName:
            sapientType: "BASIC"
            content: !<regular>
              value: "displayName1"
            valueType: "java.lang.String"
            uuid: "string4"
          errorPages:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashSet"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.web.server.ErrorPage"
                uuid: "object"
                collectionUuid: "set2"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.web.server.ErrorPage"
            uuid: "set2"
          session:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.servlet.server.Session"
              parameters: []
              propertiesMap:
                persistent:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: true
                  valueType: "boolean"
                  uuid: "persistent"
                timeout:
                  sapientType: "OBJECT"
                  content: !<static_method_return>
                    target: "java.time.Duration"
                    method: "ofDays"
                    methodParameters:
                    - name: "days"
                      value:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 0
                        valueType: "long"
                        uuid: "timeout-days"
                  valueType: "java.time.Duration"
                  uuid: "timeout"
            valueType: "org.springframework.boot.web.servlet.server.Session"
            uuid: "session4"
          mimeMappings:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings5"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.servlet.ServletContextInitializer[]"
      uuid: "initializers"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/AB"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid157"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.Undertow$Builder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
            parameters: []
          valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
          uuid: "undertowWebServerFactoryDelegate"
          fixed: true
        methodParameters:
        - name: "factory"
          value:
            sapientType: "THIS"
            valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
            uuid: "targetClassObject"
            fixed: true
        - name: "sslBundleSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "uniqueUuid171"
        methodName: "createBuilder"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "uniqueUuid158"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.Servlets"
      uuid: "Servlets.class"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo2"
    - sapientType: "ANY"
      valueType: "io.undertow.servlet.api.ServletContainerInitializerInfo"
      uuid: "servletContainerInitializerInfo"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "java.lang.ClassLoader"
              localVariableValue:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
                valueType: "java.lang.Class"
                genericValueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
                fixed: true
              methodParameters: []
              methodName: "getClassLoader"
            valueType: "java.lang.ClassLoader"
            uuid: "classLoader"
        methodName: "setClassLoader"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo3"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.ClassLoader"
        localVariableValue:
          sapientType: "CLASS"
          content: !<regular>
            value: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
          valueType: "java.lang.Class"
          genericValueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
          uuid: "uniqueUuid161"
          fixed: true
        methodParameters: []
        methodName: "getClassLoader"
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/AB"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "displayName1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "spring-boot"
            valueType: "java.lang.String"
            uuid: "uniqueUuid163"
            fixed: true
        methodName: "setDeploymentName"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "spring-boot"
      valueType: "java.lang.String"
      uuid: "uniqueUuid162"
      fixed: true
    - sapientType: "REAL"
      valueType: "io.undertow.servlet.Servlets"
      uuid: "Servlets.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "io.undertow.servlet.Servlets"
        method: "servlet"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "default"
            valueType: "java.lang.String"
            uuid: "uniqueUuid168"
            fixed: true
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.servlet.handlers.DefaultServlet"
            valueType: "java.lang.Class"
            genericValueType: "? extends jakarta.servlet.Servlet"
            uuid: "uniqueUuid169"
            fixed: true
      valueType: "io.undertow.servlet.api.ServletInfo"
      uuid: "servletInfo"
    - sapientType: "BASIC"
      content: !<regular>
        value: "default"
      valueType: "java.lang.String"
      uuid: "uniqueUuid164"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "io.undertow.servlet.handlers.DefaultServlet"
      valueType: "java.lang.Class"
      genericValueType: "? extends jakarta.servlet.Servlet"
      uuid: "uniqueUuid165"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "io.undertow.servlet.Servlets"
              method: "servlet"
              methodParameters:
              - value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "default"
                  valueType: "java.lang.String"
                  fixed: true
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "io.undertow.servlet.handlers.DefaultServlet"
                  valueType: "java.lang.Class"
                  genericValueType: "? extends jakarta.servlet.Servlet"
                  fixed: true
            valueType: "io.undertow.servlet.api.ServletInfo"
            uuid: "servletInfo"
        methodName: "addServlet"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo7"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "io.undertow.servlet.Servlets"
        method: "servlet"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "default"
            valueType: "java.lang.String"
            uuid: "uniqueUuid168"
            fixed: true
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.servlet.handlers.DefaultServlet"
            valueType: "java.lang.Class"
            genericValueType: "? extends jakarta.servlet.Servlet"
            uuid: "uniqueUuid169"
            fixed: true
      valueType: "io.undertow.servlet.api.ServletInfo"
      uuid: "servletInfo"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.ErrorPage"
      uuid: "object"
      collectionUuid: "set2"
    - sapientType: "NULL"
      valueType: "org.springframework.http.HttpStatus"
      uuid: "status"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.ErrorPage"
      uuid: "object"
      collectionUuid: "set2"
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      genericValueType: "? extends java.lang.Throwable"
      uuid: "exception"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.ErrorPage"
      uuid: "object"
      collectionUuid: "set2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getPath1"
      valueType: "java.lang.String"
      uuid: "path"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo8"
    - sapientType: "ANY"
      valueType: "io.undertow.servlet.api.ErrorPage"
      uuid: "errorPage"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "io.undertow.servlet.api.ServletStackTraces"
            uuid: "Enum-io.undertow.servlet.api.ServletStackTraces-NONE"
            fixed: true
        methodName: "setServletStackTraces"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo9"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "io.undertow.servlet.api.ServletStackTraces"
      uuid: "Enum-io.undertow.servlet.api.ServletStackTraces-NONE"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo10"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.embedded.undertow.CompositeResourceManager"
      uuid: "compositeResourceManager"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo11"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file3-pathname"
      valueType: "java.io.File"
      uuid: "file3"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "int7"
            fixed: true
        methodName: "setEagerFilterInit"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo12"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "int7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "int8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings5"
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.boot.web.server.MimeMappings$Mapping"
                parameters:
                - name: "extension"
                  value:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "extension1"
                    valueType: "java.lang.String"
                    uuid: "extension"
                - name: "mimeType"
                  value:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "mimeType1"
                    valueType: "java.lang.String"
                    uuid: "mimeType"
              valueType: "org.springframework.boot.web.server.MimeMappings$Mapping"
              uuid: "object3"
              collectionUuid: "iterator3-CollectionContent"
          valueType: "java.util.List"
          genericValueType: "org.springframework.boot.web.server.MimeMappings$Mapping"
          uuid: "iterator3-CollectionContent"
      valueType: "java.util.Iterator"
      genericValueType: "org.springframework.boot.web.server.MimeMappings$Mapping"
      uuid: "iterator3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.MimeMappings$Mapping"
        parameters:
        - name: "extension"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "extension1"
            valueType: "java.lang.String"
            uuid: "extension"
        - name: "mimeType"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "mimeType1"
            valueType: "java.lang.String"
            uuid: "mimeType"
      valueType: "org.springframework.boot.web.server.MimeMappings$Mapping"
      uuid: "object3"
      collectionUuid: "iterator3-CollectionContent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "extension1"
      valueType: "java.lang.String"
      uuid: "extension"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.MimeMappings$Mapping"
        parameters:
        - name: "extension"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "extension1"
            valueType: "java.lang.String"
            uuid: "extension"
        - name: "mimeType"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "mimeType1"
            valueType: "java.lang.String"
            uuid: "mimeType"
      valueType: "org.springframework.boot.web.server.MimeMappings$Mapping"
      uuid: "object3"
      collectionUuid: "iterator3-CollectionContent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "mimeType1"
      valueType: "java.lang.String"
      uuid: "mimeType"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo13"
    - sapientType: "ANY"
      valueType: "io.undertow.servlet.api.MimeMapping"
      uuid: "mimeMapping"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Session"
        parameters: []
        propertiesMap:
          persistent:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "persistent"
          timeout:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "timeout-days"
            valueType: "java.time.Duration"
            uuid: "timeout"
      valueType: "org.springframework.boot.web.servlet.server.Session"
      uuid: "session4"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "persistent"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo14"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.embedded.undertow.FileSessionPersistence"
      uuid: "fileSessionPersistence"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo15"
    - sapientType: "BASIC"
      content: !<regular>
        value: "locale"
      valueType: "java.lang.String"
      uuid: "string10"
    - sapientType: "BASIC"
      content: !<regular>
        value: "charset"
      valueType: "java.lang.String"
      uuid: "string11"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.Servlets"
      uuid: "Servlets.class"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.ServletContainer"
      uuid: "servletContainer"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.ServletContainer"
      uuid: "servletContainer"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.core.DeploymentImpl"
      uuid: "deployment"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "OBJECT"
          content: !<new>
            target: "io.undertow.servlet.api.MimeMapping"
            parameters:
            - name: "extension"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: ""
                valueType: "java.lang.String"
                uuid: "extension2"
            - name: "mimeType"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "mimeType1"
                valueType: "java.lang.String"
                uuid: "mimeType2"
          valueType: "io.undertow.servlet.api.MimeMapping"
          uuid: "object4"
          collectionUuid: "list3"
      valueType: "java.util.List"
      genericValueType: "io.undertow.servlet.api.MimeMapping"
      uuid: "list3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "io.undertow.servlet.api.MimeMapping"
        parameters:
        - name: "extension"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "extension2"
        - name: "mimeType"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "mimeType1"
            valueType: "java.lang.String"
            uuid: "mimeType2"
      valueType: "io.undertow.servlet.api.MimeMapping"
      uuid: "object4"
      collectionUuid: "list3"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "extension2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "io.undertow.servlet.api.MimeMapping"
        parameters:
        - name: "extension"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "extension2"
        - name: "mimeType"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "mimeType1"
            valueType: "java.lang.String"
            uuid: "mimeType2"
      valueType: "io.undertow.servlet.api.MimeMapping"
      uuid: "object4"
      collectionUuid: "list3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "mimeType1"
      valueType: "java.lang.String"
      uuid: "mimeType2"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.core.DeploymentImpl"
      uuid: "deployment"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: ""
              valueType: "java.lang.String"
              uuid: "string13"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "mimeType1"
              valueType: "java.lang.String"
              uuid: "mimeType2"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid170"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "hashMap4"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.Deployment"
      uuid: "deployment2"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.Deployment"
      uuid: "deployment2"
    - sapientType: "MOCK"
      valueType: "io.undertow.server.session.SessionManager"
      uuid: "sessionManager"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Session"
        parameters: []
        propertiesMap:
          persistent:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "persistent"
          timeout:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "timeout-days"
            valueType: "java.time.Duration"
            uuid: "timeout"
      valueType: "org.springframework.boot.web.servlet.server.Session"
      uuid: "session4"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "timeout-days"
      valueType: "java.time.Duration"
      uuid: "timeout"
    - sapientType: "MOCK"
      valueType: "io.undertow.server.session.SessionManager"
      uuid: "sessionManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: -1
      valueType: "int"
      uuid: "int9"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
      uuid: "undertowServletWebServer"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.Undertow$Builder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
            parameters: []
          valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
          uuid: "undertowWebServerFactoryDelegate"
          fixed: true
        methodParameters:
        - name: "factory"
          value:
            sapientType: "THIS"
            valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
            uuid: "targetClassObject"
            fixed: true
        - name: "sslBundleSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "uniqueUuid171"
        methodName: "createBuilder"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "BASIC"
      content: !<regular>
        value: 8
      valueType: "int"
      uuid: "port"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
      uuid: "undertowServletWebServer"
    branches:
    - lineNumber: 375
      expression: "this.resourceLoader != null"
      range: "(375,7)-(375,33)"
      evaluatedAs: false
      internalMethodName: "getServletClassLoader"
    - lineNumber: 310
      expression: "isRegisterDefaultServlet()"
      range: "(310,7)-(310,32)"
      evaluatedAs: true
      internalMethodName: "createManager"
    - lineNumber: 427
      expression: "for-each(getErrorPages())"
      range: "(427,30)-(427,44)"
      evaluatedAs: true
      internalMethodName: "configureErrorPages"
    - lineNumber: 433
      expression: "errorPage.getStatus() != null"
      range: "(433,7)-(433,35)"
      evaluatedAs: false
      internalMethodName: "getUndertowErrorPage"
    - lineNumber: 436
      expression: "errorPage.getException() != null"
      range: "(436,7)-(436,38)"
      evaluatedAs: false
      internalMethodName: "getUndertowErrorPage"
    - lineNumber: 418
      expression: "docBase != null"
      range: "(418,17)-(418,31)"
      evaluatedAs: true
      internalMethodName: "getCanonicalDocumentRoot"
    - lineNumber: 387
      expression: "docBase.isDirectory()"
      range: "(387,34)-(387,54)"
      evaluatedAs: true
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 389
      expression: "root != null"
      range: "(389,7)-(389,18)"
      evaluatedAs: true
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 393
      expression: "for-each(metaInfResourceUrls)"
      range: "(393,18)-(393,36)"
      evaluatedAs: true
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 394
      expression: "\\\"file\\\".equals(url.getProtocol())"
      range: "(394,8)-(394,39)"
      evaluatedAs: false
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 404
      expression: "catch-exception (Exception)"
      range: "(404,5)-(404,23)"
      evaluatedAs: true
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 443
      expression: "for-each(getMimeMappings())"
      range: "(443,30)-(443,46)"
      evaluatedAs: true
      internalMethodName: "configureMimeMappings"
    - lineNumber: 342
      expression: "for-each(getWebListenerClassNames())"
      range: "(342,27)-(342,52)"
      evaluatedAs: false
      internalMethodName: "configureWebListeners"
    - lineNumber: 321
      expression: "for-each(this.deploymentInfoCustomizers)"
      range: "(321,54)-(321,83)"
      evaluatedAs: false
      internalMethodName: "createManager"
    - lineNumber: 324
      expression: "getSession().isPersistent()"
      range: "(324,7)-(324,33)"
      evaluatedAs: true
      internalMethodName: "createManager"
    - lineNumber: 331
      expression: "manager.getDeployment() instanceof DeploymentImpl managerDeployment"
      range: "(331,7)-(331,73)"
      evaluatedAs: true
      internalMethodName: "createManager"
    - lineNumber: 452
      expression: "for-each(deploymentInfo.getMimeMappings())"
      range: "(452,30)-(452,61)"
      evaluatedAs: true
      internalMethodName: "removeSuperfluousMimeMappings"
    - lineNumber: 358
      expression: "timeoutDuration == null"
      range: "(358,10)-(358,32)"
      evaluatedAs: false
      internalMethodName: "isZeroOrLess"
    - lineNumber: 358
      expression: "timeoutDuration.isZero()"
      range: "(358,37)-(358,60)"
      evaluatedAs: false
      internalMethodName: "isZeroOrLess"
    - lineNumber: 358
      expression: "timeoutDuration.isNegative()"
      range: "(358,65)-(358,92)"
      evaluatedAs: true
      internalMethodName: "isZeroOrLess"
    - lineNumber: 336
      expression: "isZeroOrLess(timeoutDuration)"
      range: "(336,25)-(336,53)"
      evaluatedAs: true
      internalMethodName: "createManager"
    catchBlockExercised:
      idExternalInstruction: 66
      id: 3
      catchExceptions:
      - "java.lang.Exception"
  - pathId: "path24"
    testPathName: "getWebServerWhenTimeoutDurationNotIsNegativeAndIsZeroOrLessNotTimeoutDuration"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "49A7FC64E43FD6AE8C56A9990580D2DA"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "0BBB5501705191177EB5A182FEC8699F"
      valueUuid: "target"
    - type: "INPUT"
      name: "initializers"
      modelFingerprint: "6BEFA360E7AAB6F6818E0508F15D68E1"
      valueUuid: "initializers"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9212DE2B3A3A58812CCC36B248184E13"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid172):void3"
        staticAccess: true
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "8DADDE93492B3FCDB8B3288E7332DF18"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "createBuilder(factory:targetClassObject,sslBundleSupplier:uniqueUuid173):undertow.Builder"
    - type: "STATIC"
      name: "Servlets.class"
      modelFingerprint: "7BC06AC1283B8D389463CFECF6BB29A4"
      valueUuid: "Servlets.class"
      methodExercised:
        expression: "deployment():deploymentInfo"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "DFE1B5D8FA6B4EDA983290EDA606FCD8"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addServletContainerInitializer(servletContainerInitializer:servletContainerInitializerInfo):deploymentInfo2"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "FD017A9BD536F1BEB099BA0D2A9189FC"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setClassLoader(classLoader:classLoader):deploymentInfo3"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "2413A3720B277E1264AEFD5E1A7CEF69"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setContextPath(contextPath:contextPath):deploymentInfo4"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "DFD5BCD1E5F667BE7070C76D56F5F370"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setDisplayName(displayName:string4):deploymentInfo5"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "C2009D0995EC20B53F18559EF3F67DF1"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setDeploymentName(deploymentName:uniqueUuid177):deploymentInfo6"
    - type: "STATIC"
      name: "Servlets.class.real"
      modelFingerprint: "4A671F4ABDD67E58C7F506CAE2A46371"
      valueUuid: "Servlets.class.real"
      methodExercised:
        expression: "servlet(name:uniqueUuid179,servletClass:uniqueUuid180):servletInfo"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "C6B0D1553ED8C4B21220FB2DD7E78129"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addServlet(servlet:servletInfo):deploymentInfo7"
    - type: "LOCAL_VARIABLE"
      name: "errorPage"
      modelFingerprint: "8D604FE80C97354503FC9433EC730C59"
      valueUuid: "object"
      methodExercised:
        expression: "getStatus():status"
    - type: "LOCAL_VARIABLE"
      name: "errorPage"
      modelFingerprint: "7EFC966F8ED1BD1903BB5AEA30559AAE"
      valueUuid: "object"
      methodExercised:
        expression: "getException():exception"
    - type: "LOCAL_VARIABLE"
      name: "errorPage"
      modelFingerprint: "4239FB76EFF9936513A39E6A03559CE3"
      valueUuid: "object"
      methodExercised:
        expression: "getPath():path"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "2864EFCCDCFF7208E50CF7647E4B90AE"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addErrorPage(errorPage:errorPage):deploymentInfo8"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "5DA5A1EAE8BB74F85A1F10074055BB43"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setServletStackTraces(servletStackTraces:Enum-io.undertow.servlet.api.ServletStackTraces-NONE):deploymentInfo9"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "C606D2A57D532BA43F7FB0A4728A7A8F"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setResourceManager(resourceManager:compositeResourceManager):deploymentInfo10"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "4557A779E7B6B5A3D19EC38B322EF96F"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setTempDir(tempDir:file3):deploymentInfo11"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "79020A62BFC4B953E7819E652D57F9DE"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setEagerFilterInit(eagerFilterInit:int7):deploymentInfo12"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "6756B4E7A2B932E9E7E7DDE61EF4A382"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setPreservePathOnForward(preservePathOnForward:int8):void6"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "167BAFA0CD87F4349A3B655AA711A46B"
      valueUuid: "mimeMappings5"
      methodExercised:
        expression: "iterator():iterator3"
    - type: "LOCAL_VARIABLE"
      name: "mimeMapping"
      modelFingerprint: "49BAA4A13DE025153682CB0C7645EF91"
      valueUuid: "object3"
      methodExercised:
        expression: "getExtension():extension"
    - type: "LOCAL_VARIABLE"
      name: "mimeMapping"
      modelFingerprint: "5C9E518892E2C13DB98DD88B38096B01"
      valueUuid: "object3"
      methodExercised:
        expression: "getMimeType():mimeType"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "216E55800FB16BA88859A27FBAFB2F30"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addMimeMapping(mimeMappings:mimeMapping):deploymentInfo13"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "464886F0AA81F595F3AF412C2CAD2F53"
      valueUuid: "session4"
      methodExercised:
        expression: "isPersistent():persistent"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "348AD456535F41404CD8B17ADA171E25"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "setSessionPersistenceManager(sessionPersistenceManager:fileSessionPersistence):deploymentInfo14"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "DD62A5AE63E7AC9FEAFEC804F651279F"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "addLocaleCharsetMapping(locale:string10,charset:string11):deploymentInfo15"
    - type: "STATIC"
      name: "Servlets.class"
      modelFingerprint: "DA4CBABA4B30C2549402D3ED0837DC38"
      valueUuid: "Servlets.class"
      methodExercised:
        expression: "newContainer():servletContainer"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "137FC84003338874E813A7241310FABB"
      valueUuid: "servletContainer"
      methodExercised:
        expression: "addDeployment(arg0:deploymentInfo):deploymentManager"
    - type: "LOCAL_VARIABLE"
      name: "manager"
      modelFingerprint: "AB17A24630E8232D42862E37F39971DC"
      valueUuid: "deploymentManager"
      methodExercised:
        expression: "deploy():void8"
    - type: "LOCAL_VARIABLE"
      name: "manager"
      modelFingerprint: "F11C9DEBC4D5AD535D36C5034BBC796C"
      valueUuid: "deploymentManager"
      methodExercised:
        expression: "getDeployment():deployment"
    - type: "LOCAL_VARIABLE"
      name: "deploymentInfo"
      modelFingerprint: "A86D14D765E41B512727FCE81D462B15"
      valueUuid: "deploymentInfo"
      methodExercised:
        expression: "getMimeMappings():list3"
    - type: "LOCAL_VARIABLE"
      name: "mapping"
      modelFingerprint: "95D7AEDDE4CB6064ECDA5D6259CA8E6A"
      valueUuid: "object4"
      methodExercised:
        expression: "getExtension():extension2"
    - type: "LOCAL_VARIABLE"
      name: "mapping"
      modelFingerprint: "B3DE923639DBDF81D4446F8D97548673"
      valueUuid: "object4"
      methodExercised:
        expression: "getMimeType():mimeType2"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "2931D36BF0FA0FC3226C73F98C9CC26F"
      valueUuid: "deployment"
      methodExercised:
        expression: "setMimeExtensionMappings(mimeExtensionMappings:hashMap4):void9"
    - type: "LOCAL_VARIABLE"
      name: "manager"
      modelFingerprint: "614F170FF0E1B9F825566FC8714C868A"
      valueUuid: "deploymentManager"
      methodExercised:
        expression: "getDeployment():deployment2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "0B0E3DA7F499072DEE603987ED55168C"
      valueUuid: "deployment2"
      methodExercised:
        expression: "getSessionManager():sessionManager"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "60FABDCAE4ABC1137947853796EF9754"
      valueUuid: "session4"
      methodExercised:
        expression: "getTimeout():timeout"
    - type: "LOCAL_VARIABLE"
      name: "sessionManager"
      modelFingerprint: "BC3CD865BE97F9DD59EC6621078AB798"
      valueUuid: "sessionManager"
      methodExercised:
        expression: "setDefaultSessionTimeout(arg0:int9):void10"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "2633F33FF3AFC6124DBB505C3CC0E555"
      methodExercised:
        expression: "getUndertowWebServer(builder:undertow.Builder,manager:deploymentManager,port:port):undertowServletWebServer"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8EAADE33D91E58F2D0E069A6ED8DC321"
      valueUuid: "undertowServletWebServer"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "Builder builder = this.delegate.createBuilder(this, this::getSslBundle);"
      lineNumber: 298
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: createBuilder"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/AB"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 8
            valueType: "int"
            uuid: "port"
        propertiesMap:
          registerDefaultServlet:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "boolean15"
          localeCharsetMappings:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashMap"
              parameters: []
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.util.Locale"
                      parameters:
                      - name: "language"
                        value:
                          sapientType: "BASIC"
                          content: !<regular>
                            value: "language1"
                          valueType: "java.lang.String"
                          uuid: "locale-language"
                    valueType: "java.util.Locale"
                    uuid: "locale"
                    collectionUuid: "map4"
                    nameForMock: "locale"
                  value:
                    sapientType: "OBJECT"
                    content: !<static_method_return>
                      target: "java.nio.charset.Charset"
                      method: "defaultCharset"
                      methodParameters: []
                    valueType: "java.nio.charset.Charset"
                    uuid: "charset"
                    collectionUuid: "map4"
                    nameForMock: "charset"
                valueType: "java.util.Map$Entry"
            valueType: "java.util.Map"
            genericValueType: "java.util.Locale,java.nio.charset.Charset"
            uuid: "map4"
          displayName:
            sapientType: "BASIC"
            content: !<regular>
              value: "displayName1"
            valueType: "java.lang.String"
            uuid: "string4"
          errorPages:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashSet"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.web.server.ErrorPage"
                uuid: "object"
                collectionUuid: "set2"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.web.server.ErrorPage"
            uuid: "set2"
          session:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.servlet.server.Session"
              parameters: []
              propertiesMap:
                persistent:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: true
                  valueType: "boolean"
                  uuid: "persistent"
                timeout:
                  sapientType: "OBJECT"
                  content: !<static_method_return>
                    target: "java.time.Duration"
                    method: "ofDays"
                    methodParameters:
                    - name: "days"
                      value:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 0
                        valueType: "long"
                        uuid: "timeout-days"
                  valueType: "java.time.Duration"
                  uuid: "timeout"
            valueType: "org.springframework.boot.web.servlet.server.Session"
            uuid: "session4"
          mimeMappings:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings5"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.servlet.ServletContextInitializer[]"
      uuid: "initializers"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/AB"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid172"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.Undertow$Builder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
            parameters: []
          valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
          uuid: "undertowWebServerFactoryDelegate"
          fixed: true
        methodParameters:
        - name: "factory"
          value:
            sapientType: "THIS"
            valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
            uuid: "targetClassObject"
            fixed: true
        - name: "sslBundleSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "uniqueUuid186"
        methodName: "createBuilder"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "uniqueUuid173"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.Servlets"
      uuid: "Servlets.class"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo2"
    - sapientType: "ANY"
      valueType: "io.undertow.servlet.api.ServletContainerInitializerInfo"
      uuid: "servletContainerInitializerInfo"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "java.lang.ClassLoader"
              localVariableValue:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
                valueType: "java.lang.Class"
                genericValueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
                fixed: true
              methodParameters: []
              methodName: "getClassLoader"
            valueType: "java.lang.ClassLoader"
            uuid: "classLoader"
        methodName: "setClassLoader"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo3"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.ClassLoader"
        localVariableValue:
          sapientType: "CLASS"
          content: !<regular>
            value: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
          valueType: "java.lang.Class"
          genericValueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
          uuid: "uniqueUuid176"
          fixed: true
        methodParameters: []
        methodName: "getClassLoader"
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/AB"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "displayName1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "spring-boot"
            valueType: "java.lang.String"
            uuid: "uniqueUuid178"
            fixed: true
        methodName: "setDeploymentName"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "spring-boot"
      valueType: "java.lang.String"
      uuid: "uniqueUuid177"
      fixed: true
    - sapientType: "REAL"
      valueType: "io.undertow.servlet.Servlets"
      uuid: "Servlets.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "io.undertow.servlet.Servlets"
        method: "servlet"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "default"
            valueType: "java.lang.String"
            uuid: "uniqueUuid183"
            fixed: true
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.servlet.handlers.DefaultServlet"
            valueType: "java.lang.Class"
            genericValueType: "? extends jakarta.servlet.Servlet"
            uuid: "uniqueUuid184"
            fixed: true
      valueType: "io.undertow.servlet.api.ServletInfo"
      uuid: "servletInfo"
    - sapientType: "BASIC"
      content: !<regular>
        value: "default"
      valueType: "java.lang.String"
      uuid: "uniqueUuid179"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "io.undertow.servlet.handlers.DefaultServlet"
      valueType: "java.lang.Class"
      genericValueType: "? extends jakarta.servlet.Servlet"
      uuid: "uniqueUuid180"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "io.undertow.servlet.Servlets"
              method: "servlet"
              methodParameters:
              - value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "default"
                  valueType: "java.lang.String"
                  fixed: true
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "io.undertow.servlet.handlers.DefaultServlet"
                  valueType: "java.lang.Class"
                  genericValueType: "? extends jakarta.servlet.Servlet"
                  fixed: true
            valueType: "io.undertow.servlet.api.ServletInfo"
            uuid: "servletInfo"
        methodName: "addServlet"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo7"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "io.undertow.servlet.Servlets"
        method: "servlet"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "default"
            valueType: "java.lang.String"
            uuid: "uniqueUuid183"
            fixed: true
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.servlet.handlers.DefaultServlet"
            valueType: "java.lang.Class"
            genericValueType: "? extends jakarta.servlet.Servlet"
            uuid: "uniqueUuid184"
            fixed: true
      valueType: "io.undertow.servlet.api.ServletInfo"
      uuid: "servletInfo"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.ErrorPage"
      uuid: "object"
      collectionUuid: "set2"
    - sapientType: "NULL"
      valueType: "org.springframework.http.HttpStatus"
      uuid: "status"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.ErrorPage"
      uuid: "object"
      collectionUuid: "set2"
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      genericValueType: "? extends java.lang.Throwable"
      uuid: "exception"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.ErrorPage"
      uuid: "object"
      collectionUuid: "set2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getPath1"
      valueType: "java.lang.String"
      uuid: "path"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo8"
    - sapientType: "ANY"
      valueType: "io.undertow.servlet.api.ErrorPage"
      uuid: "errorPage"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "io.undertow.servlet.api.ServletStackTraces"
            uuid: "Enum-io.undertow.servlet.api.ServletStackTraces-NONE"
            fixed: true
        methodName: "setServletStackTraces"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo9"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "io.undertow.servlet.api.ServletStackTraces"
      uuid: "Enum-io.undertow.servlet.api.ServletStackTraces-NONE"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo10"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.embedded.undertow.CompositeResourceManager"
      uuid: "compositeResourceManager"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo11"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file3-pathname"
      valueType: "java.io.File"
      uuid: "file3"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.servlet.api.DeploymentInfo"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "io.undertow.servlet.api.DeploymentInfo"
          uuid: "deploymentInfo"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "int7"
            fixed: true
        methodName: "setEagerFilterInit"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo12"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "int7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "int8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings5"
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.boot.web.server.MimeMappings$Mapping"
                parameters:
                - name: "extension"
                  value:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "extension1"
                    valueType: "java.lang.String"
                    uuid: "extension"
                - name: "mimeType"
                  value:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "mimeType1"
                    valueType: "java.lang.String"
                    uuid: "mimeType"
              valueType: "org.springframework.boot.web.server.MimeMappings$Mapping"
              uuid: "object3"
              collectionUuid: "iterator3-CollectionContent"
          valueType: "java.util.List"
          genericValueType: "org.springframework.boot.web.server.MimeMappings$Mapping"
          uuid: "iterator3-CollectionContent"
      valueType: "java.util.Iterator"
      genericValueType: "org.springframework.boot.web.server.MimeMappings$Mapping"
      uuid: "iterator3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.MimeMappings$Mapping"
        parameters:
        - name: "extension"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "extension1"
            valueType: "java.lang.String"
            uuid: "extension"
        - name: "mimeType"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "mimeType1"
            valueType: "java.lang.String"
            uuid: "mimeType"
      valueType: "org.springframework.boot.web.server.MimeMappings$Mapping"
      uuid: "object3"
      collectionUuid: "iterator3-CollectionContent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "extension1"
      valueType: "java.lang.String"
      uuid: "extension"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.MimeMappings$Mapping"
        parameters:
        - name: "extension"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "extension1"
            valueType: "java.lang.String"
            uuid: "extension"
        - name: "mimeType"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "mimeType1"
            valueType: "java.lang.String"
            uuid: "mimeType"
      valueType: "org.springframework.boot.web.server.MimeMappings$Mapping"
      uuid: "object3"
      collectionUuid: "iterator3-CollectionContent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "mimeType1"
      valueType: "java.lang.String"
      uuid: "mimeType"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo13"
    - sapientType: "ANY"
      valueType: "io.undertow.servlet.api.MimeMapping"
      uuid: "mimeMapping"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Session"
        parameters: []
        propertiesMap:
          persistent:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "persistent"
          timeout:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "timeout-days"
            valueType: "java.time.Duration"
            uuid: "timeout"
      valueType: "org.springframework.boot.web.servlet.server.Session"
      uuid: "session4"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "persistent"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo14"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.embedded.undertow.FileSessionPersistence"
      uuid: "fileSessionPersistence"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo15"
    - sapientType: "BASIC"
      content: !<regular>
        value: "locale"
      valueType: "java.lang.String"
      uuid: "string10"
    - sapientType: "BASIC"
      content: !<regular>
        value: "charset"
      valueType: "java.lang.String"
      uuid: "string11"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.Servlets"
      uuid: "Servlets.class"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.ServletContainer"
      uuid: "servletContainer"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.ServletContainer"
      uuid: "servletContainer"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.core.DeploymentImpl"
      uuid: "deployment"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentInfo"
      uuid: "deploymentInfo"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "OBJECT"
          content: !<new>
            target: "io.undertow.servlet.api.MimeMapping"
            parameters:
            - name: "extension"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: ""
                valueType: "java.lang.String"
                uuid: "extension2"
            - name: "mimeType"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "mimeType1"
                valueType: "java.lang.String"
                uuid: "mimeType2"
          valueType: "io.undertow.servlet.api.MimeMapping"
          uuid: "object4"
          collectionUuid: "list3"
      valueType: "java.util.List"
      genericValueType: "io.undertow.servlet.api.MimeMapping"
      uuid: "list3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "io.undertow.servlet.api.MimeMapping"
        parameters:
        - name: "extension"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "extension2"
        - name: "mimeType"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "mimeType1"
            valueType: "java.lang.String"
            uuid: "mimeType2"
      valueType: "io.undertow.servlet.api.MimeMapping"
      uuid: "object4"
      collectionUuid: "list3"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "extension2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "io.undertow.servlet.api.MimeMapping"
        parameters:
        - name: "extension"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "extension2"
        - name: "mimeType"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "mimeType1"
            valueType: "java.lang.String"
            uuid: "mimeType2"
      valueType: "io.undertow.servlet.api.MimeMapping"
      uuid: "object4"
      collectionUuid: "list3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "mimeType1"
      valueType: "java.lang.String"
      uuid: "mimeType2"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.core.DeploymentImpl"
      uuid: "deployment"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: ""
              valueType: "java.lang.String"
              uuid: "string13"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "mimeType1"
              valueType: "java.lang.String"
              uuid: "mimeType2"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid185"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "hashMap4"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.Deployment"
      uuid: "deployment2"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.Deployment"
      uuid: "deployment2"
    - sapientType: "MOCK"
      valueType: "io.undertow.server.session.SessionManager"
      uuid: "sessionManager"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Session"
        parameters: []
        propertiesMap:
          persistent:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "persistent"
          timeout:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "timeout-days"
            valueType: "java.time.Duration"
            uuid: "timeout"
      valueType: "org.springframework.boot.web.servlet.server.Session"
      uuid: "session4"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "timeout-days"
      valueType: "java.time.Duration"
      uuid: "timeout"
    - sapientType: "MOCK"
      valueType: "io.undertow.server.session.SessionManager"
      uuid: "sessionManager"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      originalValueType: "long"
      uuid: "int9"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
      uuid: "undertowServletWebServer"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.undertow.Undertow$Builder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
            parameters: []
          valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
          uuid: "undertowWebServerFactoryDelegate"
          fixed: true
        methodParameters:
        - name: "factory"
          value:
            sapientType: "THIS"
            valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
            uuid: "targetClassObject"
            fixed: true
        - name: "sslBundleSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "uniqueUuid186"
        methodName: "createBuilder"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "BASIC"
      content: !<regular>
        value: 8
      valueType: "int"
      uuid: "port"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
      uuid: "undertowServletWebServer"
    branches:
    - lineNumber: 375
      expression: "this.resourceLoader != null"
      range: "(375,7)-(375,33)"
      evaluatedAs: false
      internalMethodName: "getServletClassLoader"
    - lineNumber: 310
      expression: "isRegisterDefaultServlet()"
      range: "(310,7)-(310,32)"
      evaluatedAs: true
      internalMethodName: "createManager"
    - lineNumber: 427
      expression: "for-each(getErrorPages())"
      range: "(427,30)-(427,44)"
      evaluatedAs: true
      internalMethodName: "configureErrorPages"
    - lineNumber: 433
      expression: "errorPage.getStatus() != null"
      range: "(433,7)-(433,35)"
      evaluatedAs: false
      internalMethodName: "getUndertowErrorPage"
    - lineNumber: 436
      expression: "errorPage.getException() != null"
      range: "(436,7)-(436,38)"
      evaluatedAs: false
      internalMethodName: "getUndertowErrorPage"
    - lineNumber: 418
      expression: "docBase != null"
      range: "(418,17)-(418,31)"
      evaluatedAs: true
      internalMethodName: "getCanonicalDocumentRoot"
    - lineNumber: 387
      expression: "docBase.isDirectory()"
      range: "(387,34)-(387,54)"
      evaluatedAs: true
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 389
      expression: "root != null"
      range: "(389,7)-(389,18)"
      evaluatedAs: true
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 393
      expression: "for-each(metaInfResourceUrls)"
      range: "(393,18)-(393,36)"
      evaluatedAs: true
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 394
      expression: "\\\"file\\\".equals(url.getProtocol())"
      range: "(394,8)-(394,39)"
      evaluatedAs: false
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 404
      expression: "catch-exception (Exception)"
      range: "(404,5)-(404,23)"
      evaluatedAs: true
      internalMethodName: "getDocumentRootResourceManager"
    - lineNumber: 443
      expression: "for-each(getMimeMappings())"
      range: "(443,30)-(443,46)"
      evaluatedAs: true
      internalMethodName: "configureMimeMappings"
    - lineNumber: 342
      expression: "for-each(getWebListenerClassNames())"
      range: "(342,27)-(342,52)"
      evaluatedAs: false
      internalMethodName: "configureWebListeners"
    - lineNumber: 321
      expression: "for-each(this.deploymentInfoCustomizers)"
      range: "(321,54)-(321,83)"
      evaluatedAs: false
      internalMethodName: "createManager"
    - lineNumber: 324
      expression: "getSession().isPersistent()"
      range: "(324,7)-(324,33)"
      evaluatedAs: true
      internalMethodName: "createManager"
    - lineNumber: 331
      expression: "manager.getDeployment() instanceof DeploymentImpl managerDeployment"
      range: "(331,7)-(331,73)"
      evaluatedAs: true
      internalMethodName: "createManager"
    - lineNumber: 452
      expression: "for-each(deploymentInfo.getMimeMappings())"
      range: "(452,30)-(452,61)"
      evaluatedAs: true
      internalMethodName: "removeSuperfluousMimeMappings"
    - lineNumber: 358
      expression: "timeoutDuration == null"
      range: "(358,10)-(358,32)"
      evaluatedAs: false
      internalMethodName: "isZeroOrLess"
    - lineNumber: 358
      expression: "timeoutDuration.isZero()"
      range: "(358,37)-(358,60)"
      evaluatedAs: false
      internalMethodName: "isZeroOrLess"
    - lineNumber: 358
      expression: "timeoutDuration.isNegative()"
      range: "(358,65)-(358,92)"
      evaluatedAs: false
      internalMethodName: "isZeroOrLess"
    - lineNumber: 336
      expression: "isZeroOrLess(timeoutDuration)"
      range: "(336,25)-(336,53)"
      evaluatedAs: false
      internalMethodName: "createManager"
    catchBlockExercised:
      idExternalInstruction: 66
      id: 3
      catchExceptions:
      - "java.lang.Exception"
- method:
    name: "getUndertowWebServer"
    sourceCodeSignature: "UndertowServletWebServer getUndertowWebServer(Builder builder,\
      \ DeploymentManager manager, int port)"
    returnType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
    parameters:
    - name: "builder"
      type: "io.undertow.Undertow$Builder"
    - name: "manager"
      type: "io.undertow.servlet.api.DeploymentManager"
    - name: "port"
      type: "int"
    instructionFingerprint: "4A071DB9019648C3D63F48E92CEF9BA8"
  paths:
  - pathId: "path1"
    testPathName: "getUndertowWebServerWhenPortGreaterThanOrEqualsTo0"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "19D75407500F4F377AEC957CFB0864AC"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D0537F57C0747EC67E4D50ABD3DCCBDC"
      valueUuid: "target"
    - type: "INPUT"
      name: "builder"
      modelFingerprint: "946384A8F5C9C2EF5D412B8D9BDB93EC"
      valueUuid: "builder"
    - type: "INPUT"
      name: "manager"
      modelFingerprint: "D7B22871340C7B8CBF948EB954165D11"
      valueUuid: "manager"
    - type: "INPUT"
      name: "port"
      modelFingerprint: "0685342629335B3CBE539719ED7B1045"
      valueUuid: "port"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "660067569B9E81496B4AE0FD78CE5F5B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid187):void3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "manager"
      modelFingerprint: "F8B9C6EF16A669BAC8E475A535BCFD3E"
      valueUuid: "manager"
      methodExercised:
        expression: "getDeployment():deployment"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "8506E3E03C20F8FA206EAA3CD5541E3D"
      valueUuid: "session4"
      methodExercised:
        expression: "getCookie():cookie"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "9DFB7A451B901A9F4535B7EEF5F955B6"
      valueUuid: "cookie"
      methodExercised:
        expression: "getSameSite():sameSite"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "33222C4F45182BB67D4AA3EF045A40E0"
      valueUuid: "deployment"
      methodExercised:
        expression: "getServletContext():servletContextImpl"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EA3DA39B4953DD8FF57C0DB51A22BC3A"
      valueUuid: "servletContextImpl"
      methodExercised:
        expression: "getSessionCookieConfig():sessionCookieConfigImpl"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "04FFF192D6362A318D5EB546C1D6F0A2"
      valueUuid: "sessionCookieConfigImpl"
      methodExercised:
        expression: "getName():string4"
    - type: "STATIC"
      name: "CookieSameSiteSupplier.class"
      modelFingerprint: "5D06D3C15B3D8DD60A9654EAE0A888C3"
      valueUuid: "CookieSameSiteSupplier.class"
      methodExercised:
        expression: "of(sameSite:sameSite):cookieSameSiteSupplier"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "9578774F5E02E8B3E0ECF36668646A94"
      valueUuid: "cookieSameSiteSupplier"
      methodExercised:
        expression: "whenHasName(name:string4):cookieSameSiteSupplier2"
    - type: "STATIC"
      name: "CollectionUtils.class"
      modelFingerprint: "083C34792F5F7F5A3A02953C00FB8A7F"
      valueUuid: "CollectionUtils.class"
      methodExercised:
        expression: "isEmpty(collection:list):boolean13"
        staticAccess: true
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "6EA6FF479D4C739F4D2A3C8522383620"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "createHttpHandlerFactories(webServerFactory:targetClassObject,initialHttpHandlerFactories:objectArray):list2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "CD5E60C76E4645281A27A4B742F87B0C"
      valueUuid: "undertowServletWebServer"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "List<HttpHandlerFactory> httpHandlerFactories = this.delegate.createHttpHandlerFactories(this,"
      lineNumber: 475
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: createHttpHandlerFactories"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/A"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port2"
        propertiesMap:
          session:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.web.servlet.server.Session"
            uuid: "session4"
          cookieSameSiteSuppliers:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.web.servlet.server.CookieSameSiteSupplier"
            uuid: "list"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "builder"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "manager"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "port"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid187"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "manager"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.Deployment"
      uuid: "deployment"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.server.Session"
      uuid: "session4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Session$Cookie"
        parameters: []
        propertiesMap:
          sameSite:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.web.server.Cookie$SameSite"
            uuid: "sameSite"
      valueType: "org.springframework.boot.web.servlet.server.Session$Cookie"
      uuid: "cookie"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Session$Cookie"
        parameters: []
        propertiesMap:
          sameSite:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.web.server.Cookie$SameSite"
            uuid: "sameSite"
      valueType: "org.springframework.boot.web.servlet.server.Session$Cookie"
      uuid: "cookie"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.web.server.Cookie$SameSite"
      uuid: "sameSite"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.Deployment"
      uuid: "deployment"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.spec.ServletContextImpl"
      uuid: "servletContextImpl"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.spec.ServletContextImpl"
      uuid: "servletContextImpl"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.spec.SessionCookieConfigImpl"
      uuid: "sessionCookieConfigImpl"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.spec.SessionCookieConfigImpl"
      uuid: "sessionCookieConfigImpl"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getName1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.server.CookieSameSiteSupplier"
      uuid: "CookieSameSiteSupplier.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.server.CookieSameSiteSupplier"
      uuid: "cookieSameSiteSupplier"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.web.server.Cookie$SameSite"
      uuid: "sameSite"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.server.CookieSameSiteSupplier"
      uuid: "cookieSameSiteSupplier"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.server.CookieSameSiteSupplier"
      uuid: "cookieSameSiteSupplier2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getName1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.CollectionUtils"
      uuid: "CollectionUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean13"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.web.servlet.server.CookieSameSiteSupplier"
      uuid: "list"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.web.embedded.undertow.HttpHandlerFactory"
      uuid: "list2"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.embedded.undertow.DeploymentManagerHttpHandlerFactory"
              parameters:
              - name: "deploymentManager"
                value:
                  sapientType: "MOCK"
                  valueType: "io.undertow.servlet.api.DeploymentManager"
                  uuid: "manager"
            valueType: "org.springframework.boot.web.embedded.undertow.DeploymentManagerHttpHandlerFactory"
            uuid: "deploymentManagerHttpHandlerFactory"
            fixed: true
      valueType: "org.springframework.boot.web.embedded.undertow.HttpHandlerFactory[]"
      uuid: "objectArray"
      collectionUuid: "arrayList7"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
        parameters:
        - name: "builder"
          value:
            sapientType: "MOCK"
            valueType: "io.undertow.Undertow$Builder"
            uuid: "builder"
        - name: "httpHandlerFactories"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.web.embedded.undertow.HttpHandlerFactory"
            uuid: "list2"
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/A"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "autoStart"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "uniqueUuid188"
            fixed: true
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
      uuid: "undertowServletWebServer"
      fixed: true
    branches:
    - lineNumber: 483
      expression: "sessionSameSite != null"
      range: "(483,7)-(483,29)"
      evaluatedAs: true
      internalMethodName: "getCookieHandlerFactory"
    - lineNumber: 487
      expression: "!CollectionUtils.isEmpty(getCookieSameSiteSuppliers())"
      range: "(487,7)-(487,60)"
      evaluatedAs: true
      internalMethodName: "getCookieHandlerFactory"
    - lineNumber: 490
      expression: "!suppliers.isEmpty()"
      range: "(490,11)-(490,30)"
      evaluatedAs: true
      internalMethodName: "getCookieHandlerFactory"
    - lineNumber: 472
      expression: "cooHandlerFactory != null"
      range: "(472,7)-(472,31)"
      evaluatedAs: false
    - lineNumber: 477
      expression: "port >= 0"
      range: "(477,88)-(477,96)"
      evaluatedAs: true
  - pathId: "path3"
    testPathName: "getUndertowWebServerWhenCooHandlerFactoryIsNullAndPortLessThan0"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "F7CD29F1D6BE8CE6137887E260DFE901"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F25FEA29088702C4192EA261CD3D432F"
      valueUuid: "target"
    - type: "INPUT"
      name: "builder"
      modelFingerprint: "946384A8F5C9C2EF5D412B8D9BDB93EC"
      valueUuid: "builder"
    - type: "INPUT"
      name: "manager"
      modelFingerprint: "D7B22871340C7B8CBF948EB954165D11"
      valueUuid: "manager"
    - type: "INPUT"
      name: "port"
      modelFingerprint: "9CD470C15764C246C0D37998D1290354"
      valueUuid: "port"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "320F780D3DC984AC263704A4E0A42077"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid189):void3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "manager"
      modelFingerprint: "F8B9C6EF16A669BAC8E475A535BCFD3E"
      valueUuid: "manager"
      methodExercised:
        expression: "getDeployment():deployment"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "8506E3E03C20F8FA206EAA3CD5541E3D"
      valueUuid: "session4"
      methodExercised:
        expression: "getCookie():cookie"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "9DFB7A451B901A9F4535B7EEF5F955B6"
      valueUuid: "cookie"
      methodExercised:
        expression: "getSameSite():sameSite"
    - type: "LOCAL_VARIABLE"
      name: "deployment"
      modelFingerprint: "33222C4F45182BB67D4AA3EF045A40E0"
      valueUuid: "deployment"
      methodExercised:
        expression: "getServletContext():servletContextImpl"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EA3DA39B4953DD8FF57C0DB51A22BC3A"
      valueUuid: "servletContextImpl"
      methodExercised:
        expression: "getSessionCookieConfig():sessionCookieConfigImpl"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "04FFF192D6362A318D5EB546C1D6F0A2"
      valueUuid: "sessionCookieConfigImpl"
      methodExercised:
        expression: "getName():string4"
    - type: "STATIC"
      name: "CookieSameSiteSupplier.class"
      modelFingerprint: "5D06D3C15B3D8DD60A9654EAE0A888C3"
      valueUuid: "CookieSameSiteSupplier.class"
      methodExercised:
        expression: "of(sameSite:sameSite):cookieSameSiteSupplier"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "9578774F5E02E8B3E0ECF36668646A94"
      valueUuid: "cookieSameSiteSupplier"
      methodExercised:
        expression: "whenHasName(name:string4):cookieSameSiteSupplier2"
    - type: "STATIC"
      name: "CollectionUtils.class"
      modelFingerprint: "313C33DE8B5599981885EDFDA5ADC3DB"
      valueUuid: "CollectionUtils.class"
      methodExercised:
        expression: "isEmpty(collection:list):boolean13"
        staticAccess: true
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "6EA6FF479D4C739F4D2A3C8522383620"
      valueUuid: "undertowWebServerFactoryDelegate"
      methodExercised:
        expression: "createHttpHandlerFactories(webServerFactory:targetClassObject,initialHttpHandlerFactories:objectArray):list2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5D6651CA7092AE95FF436D218C730C1B"
      valueUuid: "undertowServletWebServer"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "List<HttpHandlerFactory> httpHandlerFactories = this.delegate.createHttpHandlerFactories(this,"
      lineNumber: 475
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: createHttpHandlerFactories"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "contextPath1"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port2"
        propertiesMap:
          session:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.web.servlet.server.Session"
            uuid: "session4"
          cookieSameSiteSuppliers:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.web.servlet.server.CookieSameSiteSupplier"
            uuid: "list"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "builder"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "manager"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "port"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "contextPath1"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid189"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "manager"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.Deployment"
      uuid: "deployment"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.server.Session"
      uuid: "session4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Session$Cookie"
        parameters: []
        propertiesMap:
          sameSite:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.web.server.Cookie$SameSite"
            uuid: "sameSite"
      valueType: "org.springframework.boot.web.servlet.server.Session$Cookie"
      uuid: "cookie"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Session$Cookie"
        parameters: []
        propertiesMap:
          sameSite:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.web.server.Cookie$SameSite"
            uuid: "sameSite"
      valueType: "org.springframework.boot.web.servlet.server.Session$Cookie"
      uuid: "cookie"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.web.server.Cookie$SameSite"
      uuid: "sameSite"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.Deployment"
      uuid: "deployment"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.spec.ServletContextImpl"
      uuid: "servletContextImpl"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.spec.ServletContextImpl"
      uuid: "servletContextImpl"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.spec.SessionCookieConfigImpl"
      uuid: "sessionCookieConfigImpl"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.spec.SessionCookieConfigImpl"
      uuid: "sessionCookieConfigImpl"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getName1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.server.CookieSameSiteSupplier"
      uuid: "CookieSameSiteSupplier.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.server.CookieSameSiteSupplier"
      uuid: "cookieSameSiteSupplier"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.web.server.Cookie$SameSite"
      uuid: "sameSite"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.server.CookieSameSiteSupplier"
      uuid: "cookieSameSiteSupplier"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.server.CookieSameSiteSupplier"
      uuid: "cookieSameSiteSupplier2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getName1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.CollectionUtils"
      uuid: "CollectionUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean13"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.web.servlet.server.CookieSameSiteSupplier"
      uuid: "list"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "undertowWebServerFactoryDelegate"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.web.embedded.undertow.HttpHandlerFactory"
      uuid: "list2"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.embedded.undertow.DeploymentManagerHttpHandlerFactory"
              parameters:
              - name: "deploymentManager"
                value:
                  sapientType: "MOCK"
                  valueType: "io.undertow.servlet.api.DeploymentManager"
                  uuid: "manager"
            valueType: "org.springframework.boot.web.embedded.undertow.DeploymentManagerHttpHandlerFactory"
            uuid: "deploymentManagerHttpHandlerFactory"
            fixed: true
      valueType: "org.springframework.boot.web.embedded.undertow.HttpHandlerFactory[]"
      uuid: "objectArray"
      collectionUuid: "arrayList7"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
        parameters:
        - name: "builder"
          value:
            sapientType: "MOCK"
            valueType: "io.undertow.Undertow$Builder"
            uuid: "builder"
        - name: "httpHandlerFactories"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.web.embedded.undertow.HttpHandlerFactory"
            uuid: "list2"
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "contextPath1"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "autoStart"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "uniqueUuid190"
            fixed: true
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
      uuid: "undertowServletWebServer"
      fixed: true
    branches:
    - lineNumber: 483
      expression: "sessionSameSite != null"
      range: "(483,7)-(483,29)"
      evaluatedAs: true
      internalMethodName: "getCookieHandlerFactory"
    - lineNumber: 487
      expression: "!CollectionUtils.isEmpty(getCookieSameSiteSuppliers())"
      range: "(487,7)-(487,60)"
      evaluatedAs: true
      internalMethodName: "getCookieHandlerFactory"
    - lineNumber: 490
      expression: "!suppliers.isEmpty()"
      range: "(490,11)-(490,30)"
      evaluatedAs: false
      internalMethodName: "getCookieHandlerFactory"
    - lineNumber: 472
      expression: "cooHandlerFactory != null"
      range: "(472,7)-(472,31)"
      evaluatedAs: false
    - lineNumber: 477
      expression: "port >= 0"
      range: "(477,88)-(477,96)"
      evaluatedAs: false
