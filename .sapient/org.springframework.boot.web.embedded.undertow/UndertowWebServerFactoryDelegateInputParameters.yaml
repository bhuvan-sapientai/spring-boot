---
modelFingerprint: "77E669CBA5154EF9EB5E424FB4072C7E"
targetClass:
  fullClassName: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
methods:
- method:
    name: "setBuilderCustomizers"
    sourceCodeSignature: "void setBuilderCustomizers(Collection<? extends UndertowBuilderCustomizer>\
      \ customizers)"
    returnType: "void"
    parameters:
    - name: "customizers"
      type: "java.util.Collection"
    instructionFingerprint: "FAA41E1B74BFB0078F5212F31E98EC7F"
  paths:
  - pathId: "path1"
    testPathName: "setBuilderCustomizersTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "87BF1D2B7FAB153703B0E7E3F6D824C2"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "customizers"
      modelFingerprint: "D6CDE84A8422B25B88E32F02CA69A859"
      valueUuid: "customizers"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "064C066E2C829DF065F1A6F6AA0063D9"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:customizers,message:uniqueUuid1):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    - type: "STATE_VERIFICATION_FIELD"
      name: "builderCustomizers"
      modelFingerprint: "8C1249EFC911E8D02D6893EEF74AF55A"
      valueUuid: "linkedHashSet2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "? extends org.springframework.boot.web.embedded.undertow.UndertowBuilderCustomizer"
      uuid: "customizers"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "? extends org.springframework.boot.web.embedded.undertow.UndertowBuilderCustomizer"
      uuid: "customizers"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Customizers must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.LinkedHashSet"
        parameters:
        - name: "c"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Collection"
            genericValueType: "? extends org.springframework.boot.web.embedded.undertow.UndertowBuilderCustomizer"
            uuid: "customizers"
        values: []
      valueType: "java.util.Set"
      genericValueType: "org.springframework.boot.web.embedded.undertow.UndertowBuilderCustomizer"
      uuid: "linkedHashSet2"
- method:
    name: "addBuilderCustomizers"
    sourceCodeSignature: "void addBuilderCustomizers(UndertowBuilderCustomizer...\
      \ customizers)"
    returnType: "void"
    parameters:
    - name: "customizers"
      type: "org.springframework.boot.web.embedded.undertow.UndertowBuilderCustomizer[]"
    instructionFingerprint: "8FC2FF30DC274E6D52CDAD5A0DA051FD"
  paths:
  - pathId: "path1"
    testPathName: "addBuilderCustomizersTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "0AEE99A322858039FAF0212EF5FFFCC4"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "customizers"
      modelFingerprint: "77FFD18DF8764DB6F839025D3EF4A4F1"
      valueUuid: "customizers"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9FB71D1ECF7D8878D80157A79B9B0F17"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:customizers,message:uniqueUuid2):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowBuilderCustomizer[]"
      uuid: "customizers"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowBuilderCustomizer[]"
      uuid: "customizers"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Customizers must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "getBuilderCustomizers"
    sourceCodeSignature: "Collection<UndertowBuilderCustomizer> getBuilderCustomizers()"
    returnType: "java.util.Collection"
    genericReturnType: "org.springframework.boot.web.embedded.undertow.UndertowBuilderCustomizer"
    instructionFingerprint: "269EC7DAF8E2B1CA114DB40CFC0D83D5"
  paths:
  - pathId: "path1"
    testPathName: "getBuilderCustomizersTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "8F9ACEC9A7CF0F2AC61A4A21E03E6E57"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "55596085352EB4D467B373A6EBB7EF46"
      valueUuid: "linkedHashSet"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.LinkedHashSet"
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "org.springframework.boot.web.embedded.undertow.UndertowBuilderCustomizer"
      uuid: "linkedHashSet"
- method:
    name: "setBufferSize"
    sourceCodeSignature: "void setBufferSize(Integer bufferSize)"
    returnType: "void"
    parameters:
    - name: "bufferSize"
      type: "java.lang.Integer"
    instructionFingerprint: "4AC2E0F928C89094D793480AEA959B7C"
  paths:
  - pathId: "path1"
    testPathName: "setBufferSizeTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "0260DE4ADF075FADDD2DB15FD556E302"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setIoThreads"
    sourceCodeSignature: "void setIoThreads(Integer ioThreads)"
    returnType: "void"
    parameters:
    - name: "ioThreads"
      type: "java.lang.Integer"
    instructionFingerprint: "B6F4284483D7C9A40F06F2F745DD91C1"
  paths:
  - pathId: "path1"
    testPathName: "setIoThreadsTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "6EEAC0FD232B6E7BCF33E4116DB54F1A"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setWorkerThreads"
    sourceCodeSignature: "void setWorkerThreads(Integer workerThreads)"
    returnType: "void"
    parameters:
    - name: "workerThreads"
      type: "java.lang.Integer"
    instructionFingerprint: "C9B01817EF0E3DCA64B377BC3A655E1D"
  paths:
  - pathId: "path1"
    testPathName: "setWorkerThreadsTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "819F0095B7109BE7F24D50073099C6F1"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setUseDirectBuffers"
    sourceCodeSignature: "void setUseDirectBuffers(Boolean directBuffers)"
    returnType: "void"
    parameters:
    - name: "directBuffers"
      type: "java.lang.Boolean"
    instructionFingerprint: "8BCB1747F3F20E758F1AEC2B7C7F3F25"
  paths:
  - pathId: "path1"
    testPathName: "setUseDirectBuffersTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "F20C5C25864EE89F57DC6EE90CACA8B2"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setAccessLogDirectory"
    sourceCodeSignature: "void setAccessLogDirectory(File accessLogDirectory)"
    returnType: "void"
    parameters:
    - name: "accessLogDirectory"
      type: "java.io.File"
    instructionFingerprint: "405EF628B0D71AA5780BC78322194414"
  paths:
  - pathId: "path1"
    testPathName: "setAccessLogDirectoryTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "88EF08137DFE79A4A83C535C22572254"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setAccessLogPattern"
    sourceCodeSignature: "void setAccessLogPattern(String accessLogPattern)"
    returnType: "void"
    parameters:
    - name: "accessLogPattern"
      type: "java.lang.String"
    instructionFingerprint: "8ED67DE211155064F8CB6CEFACDDD3DD"
  paths:
  - pathId: "path1"
    testPathName: "setAccessLogPatternTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "41FDDB5E66E75AEE39E35C796D803E83"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setAccessLogPrefix"
    sourceCodeSignature: "void setAccessLogPrefix(String accessLogPrefix)"
    returnType: "void"
    parameters:
    - name: "accessLogPrefix"
      type: "java.lang.String"
    instructionFingerprint: "08FDAB8D0B65552C9A2D5ECD2E63A345"
  paths:
  - pathId: "path1"
    testPathName: "setAccessLogPrefixTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "B9D0642AA827EB28D6F0A6582ED10307"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "getAccessLogPrefix"
    sourceCodeSignature: "String getAccessLogPrefix()"
    returnType: "java.lang.String"
    instructionFingerprint: "C0429AED1913B44CF551AFB006BCF59F"
  paths:
  - pathId: "path1"
    testPathName: "getAccessLogPrefixTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "24E7A183853EBFDEC7C15F68DE4CB551"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setAccessLogSuffix"
    sourceCodeSignature: "void setAccessLogSuffix(String accessLogSuffix)"
    returnType: "void"
    parameters:
    - name: "accessLogSuffix"
      type: "java.lang.String"
    instructionFingerprint: "20B08596AA8DB47A6B02A089A4C5D33F"
  paths:
  - pathId: "path1"
    testPathName: "setAccessLogSuffixTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "0E4F9DAF77DB51A796C9B9F6D854F255"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setAccessLogEnabled"
    sourceCodeSignature: "void setAccessLogEnabled(boolean accessLogEnabled)"
    returnType: "void"
    parameters:
    - name: "accessLogEnabled"
      type: "boolean"
    instructionFingerprint: "E871B53828A4DF1F0CD5EBB30DAE817A"
  paths:
  - pathId: "path1"
    testPathName: "setAccessLogEnabledTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "1C9B781382427CC2B64EC0208698E600"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "isAccessLogEnabled"
    sourceCodeSignature: "boolean isAccessLogEnabled()"
    returnType: "boolean"
    instructionFingerprint: "B4F3F21F3E3F51833A888C4AB23380B6"
  paths:
  - pathId: "path1"
    testPathName: "isAccessLogEnabledTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "46D84FD4A882BBA2F1C2D2CE2C4A974D"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setAccessLogRotate"
    sourceCodeSignature: "void setAccessLogRotate(boolean accessLogRotate)"
    returnType: "void"
    parameters:
    - name: "accessLogRotate"
      type: "boolean"
    instructionFingerprint: "5691097070DFA7DE8DF06948ED868608"
  paths:
  - pathId: "path1"
    testPathName: "setAccessLogRotateTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "236E1D30360D0A8FBD923CE3FA62F724"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setUseForwardHeaders"
    sourceCodeSignature: "void setUseForwardHeaders(boolean useForwardHeaders)"
    returnType: "void"
    parameters:
    - name: "useForwardHeaders"
      type: "boolean"
    instructionFingerprint: "F73A56C7419C7966712F0ADD8F9504F9"
  paths:
  - pathId: "path1"
    testPathName: "setUseForwardHeadersTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "82992C71651FB440292BEDE090836272"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "isUseForwardHeaders"
    sourceCodeSignature: "boolean isUseForwardHeaders()"
    returnType: "boolean"
    instructionFingerprint: "31B85B1A7FAE0224DF66F35F24C46218"
  paths:
  - pathId: "path1"
    testPathName: "isUseForwardHeadersTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "1CBC648F9008DA9A9CCD74602D21A224"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "createBuilder"
    sourceCodeSignature: "Builder createBuilder(AbstractConfigurableWebServerFactory\
      \ factory, Supplier<SslBundle> sslBundleSupplier)"
    returnType: "io.undertow.Undertow$Builder"
    parameters:
    - name: "factory"
      type: "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory"
    - name: "sslBundleSupplier"
      type: "java.util.function.Supplier"
    instructionFingerprint: "EADACDD7D97ADCBDA2A4299C03836DC3"
  paths:
  - pathId: "path1"
    testPathName: "createBuilderWhenThisBuilderCustomizersIsEmpty"
    constructorSignature: "<init>() : void"
    modelFingerprint: "21C7127D75C013588CA1666835FC2A14"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "factory"
      modelFingerprint: "CD5E9BD224B498A79C839EB7EC67DC74"
      valueUuid: "factory"
    - type: "INPUT"
      name: "sslBundleSupplier"
      modelFingerprint: "4823F2A43F744A23334A64C6F1133EA2"
      valueUuid: "sslBundleSupplier"
    - type: "LOCAL_VARIABLE"
      name: "factory"
      modelFingerprint: "63408BBE2C10264E4BCE6E675CB9AABE"
      valueUuid: "factory"
      methodExercised:
        expression: "getAddress():address"
    - type: "LOCAL_VARIABLE"
      name: "factory"
      modelFingerprint: "68DF571999EC9AEAD7A80CAB8609D6B6"
      valueUuid: "factory"
      methodExercised:
        expression: "getPort():port"
    - type: "LOCAL_VARIABLE"
      name: "factory"
      modelFingerprint: "0B2000B486825A0B3C1BC1E8357F30FC"
      valueUuid: "factory"
      methodExercised:
        expression: "getHttp2():http2"
    - type: "LOCAL_VARIABLE"
      name: "http2"
      modelFingerprint: "771E6D0B9F3B22E38E5EF73708CC94B5"
      valueUuid: "http2"
      methodExercised:
        expression: "isEnabled():enabled"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "634A5CC53EBDCAC2EBE847D7C2A9F3C8"
      valueUuid: "undertow.Builder"
      methodExercised:
        expression: "setServerOption(option:option,value:boolean2):undertow.Builder2"
    - type: "LOCAL_VARIABLE"
      name: "factory"
      modelFingerprint: "EF274ECCDEA7007B8BF5DCD8EA7D92EE"
      valueUuid: "factory"
      methodExercised:
        expression: "getSsl():ssl"
    - type: "STATIC"
      name: "Ssl.class"
      modelFingerprint: "BB955C7AD5A7C21C536977E57745A4D0"
      valueUuid: "Ssl.class"
      methodExercised:
        expression: "isEnabled(ssl:ssl):boolean3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "factory"
      modelFingerprint: "68DF571999EC9AEAD7A80CAB8609D6B6"
      valueUuid: "factory"
      methodExercised:
        expression: "getPort():port"
    - type: "LOCAL_VARIABLE"
      name: "ssl"
      modelFingerprint: "3709689234DD9DFE8A794E13877C6889"
      valueUuid: "ssl"
      methodExercised:
        expression: "getClientAuth():clientAuth"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E27F6219E0FCF96FF4B742B9A841D6E8"
      valueUuid: "sslBuilderCustomizer"
      methodExercised:
        expression: "customize(builder:undertow.Builder):void"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "9AB117C5773F5CE6B952F76E2137B8FC"
      valueUuid: "undertow.Builder"
      methodExercised:
        expression: "setServerOption(option:option2,value:integer):undertow.Builder3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "29AC42CFA059BB720F86B601E2A75DC0"
      valueUuid: "undertow.Builder"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_BUILDER_FUNCTION_NOT_ATTRIBUTE"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory"
      uuid: "factory"
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "sslBundleSupplier"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory"
      uuid: "factory"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.net.InetAddress"
        method: "getLoopbackAddress"
        methodParameters: []
      valueType: "java.net.InetAddress"
      uuid: "address"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory"
      uuid: "factory"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "port"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory"
      uuid: "factory"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Http2"
        parameters: []
        propertiesMap:
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "enabled"
      valueType: "org.springframework.boot.web.server.Http2"
      uuid: "http2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Http2"
        parameters: []
        propertiesMap:
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "enabled"
      valueType: "org.springframework.boot.web.server.Http2"
      uuid: "http2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "enabled"
    - sapientType: "MOCK"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder"
    - sapientType: "MOCK"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder2"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "io.undertow.UndertowOptions"
        fieldName: "ENABLE_HTTP2"
      valueType: "org.xnio.Option"
      uuid: "option"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "java.lang.Boolean"
      uuid: "boolean2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory"
      uuid: "factory"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Ssl"
        parameters: []
        propertiesMap:
          clientAuth:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
            uuid: "clientAuth"
      valueType: "org.springframework.boot.web.server.Ssl"
      uuid: "ssl"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.Ssl"
      uuid: "Ssl.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Ssl"
        parameters: []
        propertiesMap:
          clientAuth:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
            uuid: "clientAuth"
      valueType: "org.springframework.boot.web.server.Ssl"
      uuid: "ssl"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory"
      uuid: "factory"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "port"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Ssl"
        parameters: []
        propertiesMap:
          clientAuth:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
            uuid: "clientAuth"
      valueType: "org.springframework.boot.web.server.Ssl"
      uuid: "ssl"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
      uuid: "clientAuth"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.SslBuilderCustomizer"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
        - name: "address"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.net.InetAddress"
              method: "getLoopbackAddress"
              methodParameters: []
            valueType: "java.net.InetAddress"
            uuid: "address"
        - name: "clientAuth"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
            uuid: "clientAuth"
        - name: "sslBundle"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "object"
            explicitCastNeeded: true
      valueType: "org.springframework.boot.web.embedded.undertow.SslBuilderCustomizer"
      uuid: "sslBuilderCustomizer"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder"
    - sapientType: "MOCK"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder"
    - sapientType: "MOCK"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder3"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "io.undertow.UndertowOptions"
        fieldName: "SHUTDOWN_TIMEOUT"
      valueType: "org.xnio.Option"
      uuid: "option2"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "java.lang.Integer"
      uuid: "integer"
    - sapientType: "MOCK"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder"
    branches:
    - lineNumber: 150
      expression: "this.bufferSize != null"
      range: "(150,7)-(150,29)"
      evaluatedAs: false
    - lineNumber: 153
      expression: "this.ioThreads != null"
      range: "(153,7)-(153,28)"
      evaluatedAs: false
    - lineNumber: 156
      expression: "this.workerThreads != null"
      range: "(156,7)-(156,32)"
      evaluatedAs: false
    - lineNumber: 159
      expression: "this.directBuffers != null"
      range: "(159,7)-(159,32)"
      evaluatedAs: false
    - lineNumber: 163
      expression: "http2 != null"
      range: "(163,7)-(163,19)"
      evaluatedAs: true
    - lineNumber: 167
      expression: "Ssl.isEnabled(ssl)"
      range: "(167,7)-(167,24)"
      evaluatedAs: true
    - lineNumber: 175
      expression: "for-each(this.builderCustomizers)"
      range: "(175,47)-(175,69)"
      evaluatedAs: false
  - pathId: "path2"
    testPathName: "createBuilderWhenAddressIsNotNullAndThisBuilderCustomizersIsEmpty"
    constructorSignature: "<init>() : void"
    modelFingerprint: "D86DE3B7F5943FA3D42AECDCA6EEFC92"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "factory"
      modelFingerprint: "CD5E9BD224B498A79C839EB7EC67DC74"
      valueUuid: "factory"
    - type: "INPUT"
      name: "sslBundleSupplier"
      modelFingerprint: "4823F2A43F744A23334A64C6F1133EA2"
      valueUuid: "sslBundleSupplier"
    - type: "LOCAL_VARIABLE"
      name: "factory"
      modelFingerprint: "63408BBE2C10264E4BCE6E675CB9AABE"
      valueUuid: "factory"
      methodExercised:
        expression: "getAddress():address"
    - type: "LOCAL_VARIABLE"
      name: "factory"
      modelFingerprint: "68DF571999EC9AEAD7A80CAB8609D6B6"
      valueUuid: "factory"
      methodExercised:
        expression: "getPort():port"
    - type: "LOCAL_VARIABLE"
      name: "factory"
      modelFingerprint: "0B2000B486825A0B3C1BC1E8357F30FC"
      valueUuid: "factory"
      methodExercised:
        expression: "getHttp2():http2"
    - type: "LOCAL_VARIABLE"
      name: "http2"
      modelFingerprint: "771E6D0B9F3B22E38E5EF73708CC94B5"
      valueUuid: "http2"
      methodExercised:
        expression: "isEnabled():enabled"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "634A5CC53EBDCAC2EBE847D7C2A9F3C8"
      valueUuid: "undertow.Builder"
      methodExercised:
        expression: "setServerOption(option:option,value:boolean2):undertow.Builder2"
    - type: "LOCAL_VARIABLE"
      name: "factory"
      modelFingerprint: "9722789C577C9295DB0CC3A0D3543880"
      valueUuid: "factory"
      methodExercised:
        expression: "getSsl():ssl"
    - type: "STATIC"
      name: "Ssl.class"
      modelFingerprint: "1D528807E7A91C9758A05DEB360A0D80"
      valueUuid: "Ssl.class"
      methodExercised:
        expression: "isEnabled(ssl:ssl):boolean3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "B1EC63C0E8DB8CFF4037ECC24235D4EA"
      valueUuid: "undertow.Builder"
      methodExercised:
        expression: "addHttpListener(port:port,host:string):undertow.Builder3"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "9AB117C5773F5CE6B952F76E2137B8FC"
      valueUuid: "undertow.Builder"
      methodExercised:
        expression: "setServerOption(option:option2,value:integer):undertow.Builder4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "29AC42CFA059BB720F86B601E2A75DC0"
      valueUuid: "undertow.Builder"
    disabled: false
    failureReason:
      reason: "METHOD_CALL_BUILDER_FUNCTION_NOT_ATTRIBUTE"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory"
      uuid: "factory"
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "sslBundleSupplier"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory"
      uuid: "factory"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.net.InetAddress"
        method: "getLoopbackAddress"
        methodParameters: []
      valueType: "java.net.InetAddress"
      uuid: "address"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory"
      uuid: "factory"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "port"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory"
      uuid: "factory"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Http2"
        parameters: []
        propertiesMap:
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "enabled"
      valueType: "org.springframework.boot.web.server.Http2"
      uuid: "http2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Http2"
        parameters: []
        propertiesMap:
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "enabled"
      valueType: "org.springframework.boot.web.server.Http2"
      uuid: "http2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "enabled"
    - sapientType: "MOCK"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder"
    - sapientType: "MOCK"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder2"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "io.undertow.UndertowOptions"
        fieldName: "ENABLE_HTTP2"
      valueType: "org.xnio.Option"
      uuid: "option"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "java.lang.Boolean"
      uuid: "boolean2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory"
      uuid: "factory"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.Ssl"
      uuid: "ssl"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.Ssl"
      uuid: "Ssl.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.Ssl"
      uuid: "ssl"
    - sapientType: "MOCK"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder"
    - sapientType: "MOCK"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder3"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "port"
    - sapientType: "BASIC"
      content: !<regular>
        value: "host1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder"
    - sapientType: "MOCK"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "io.undertow.UndertowOptions"
        fieldName: "SHUTDOWN_TIMEOUT"
      valueType: "org.xnio.Option"
      uuid: "option2"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "java.lang.Integer"
      uuid: "integer"
    - sapientType: "MOCK"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder"
    branches:
    - lineNumber: 150
      expression: "this.bufferSize != null"
      range: "(150,7)-(150,29)"
      evaluatedAs: false
    - lineNumber: 153
      expression: "this.ioThreads != null"
      range: "(153,7)-(153,28)"
      evaluatedAs: false
    - lineNumber: 156
      expression: "this.workerThreads != null"
      range: "(156,7)-(156,32)"
      evaluatedAs: false
    - lineNumber: 159
      expression: "this.directBuffers != null"
      range: "(159,7)-(159,32)"
      evaluatedAs: false
    - lineNumber: 163
      expression: "http2 != null"
      range: "(163,7)-(163,19)"
      evaluatedAs: true
    - lineNumber: 167
      expression: "Ssl.isEnabled(ssl)"
      range: "(167,7)-(167,24)"
      evaluatedAs: false
    - lineNumber: 172
      expression: "address != null"
      range: "(172,35)-(172,49)"
      evaluatedAs: true
    - lineNumber: 175
      expression: "for-each(this.builderCustomizers)"
      range: "(175,47)-(175,69)"
      evaluatedAs: false
  - pathId: "path3"
    testPathName: "createBuilderWhenAddressIsNullAndThisBuilderCustomizersIsEmpty"
    constructorSignature: "<init>() : void"
    modelFingerprint: "D549F5650548BF0A0DEB280EE1B3EAAB"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "factory"
      modelFingerprint: "CD5E9BD224B498A79C839EB7EC67DC74"
      valueUuid: "factory"
    - type: "INPUT"
      name: "sslBundleSupplier"
      modelFingerprint: "4823F2A43F744A23334A64C6F1133EA2"
      valueUuid: "sslBundleSupplier"
    - type: "LOCAL_VARIABLE"
      name: "factory"
      modelFingerprint: "00739BE4C06F6F2E3A2D791331EBD992"
      valueUuid: "factory"
      methodExercised:
        expression: "getAddress():address"
    - type: "LOCAL_VARIABLE"
      name: "factory"
      modelFingerprint: "68DF571999EC9AEAD7A80CAB8609D6B6"
      valueUuid: "factory"
      methodExercised:
        expression: "getPort():port"
    - type: "LOCAL_VARIABLE"
      name: "factory"
      modelFingerprint: "0B2000B486825A0B3C1BC1E8357F30FC"
      valueUuid: "factory"
      methodExercised:
        expression: "getHttp2():http2"
    - type: "LOCAL_VARIABLE"
      name: "http2"
      modelFingerprint: "771E6D0B9F3B22E38E5EF73708CC94B5"
      valueUuid: "http2"
      methodExercised:
        expression: "isEnabled():enabled"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "634A5CC53EBDCAC2EBE847D7C2A9F3C8"
      valueUuid: "undertow.Builder"
      methodExercised:
        expression: "setServerOption(option:option,value:boolean2):undertow.Builder2"
    - type: "LOCAL_VARIABLE"
      name: "factory"
      modelFingerprint: "9722789C577C9295DB0CC3A0D3543880"
      valueUuid: "factory"
      methodExercised:
        expression: "getSsl():ssl"
    - type: "STATIC"
      name: "Ssl.class"
      modelFingerprint: "1D528807E7A91C9758A05DEB360A0D80"
      valueUuid: "Ssl.class"
      methodExercised:
        expression: "isEnabled(ssl:ssl):boolean3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "B57CBBCE33C5D6E453AFDF41D7A39096"
      valueUuid: "undertow.Builder"
      methodExercised:
        expression: "addHttpListener(port:port,host:uniqueUuid3):undertow.Builder3"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "9AB117C5773F5CE6B952F76E2137B8FC"
      valueUuid: "undertow.Builder"
      methodExercised:
        expression: "setServerOption(option:option2,value:integer):undertow.Builder4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "29AC42CFA059BB720F86B601E2A75DC0"
      valueUuid: "undertow.Builder"
    disabled: false
    failureReason:
      reason: "METHOD_CALL_BUILDER_FUNCTION_NOT_ATTRIBUTE"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory"
      uuid: "factory"
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "sslBundleSupplier"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory"
      uuid: "factory"
    - sapientType: "NULL"
      valueType: "java.net.InetAddress"
      uuid: "address"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory"
      uuid: "factory"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "port"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory"
      uuid: "factory"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Http2"
        parameters: []
        propertiesMap:
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "enabled"
      valueType: "org.springframework.boot.web.server.Http2"
      uuid: "http2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Http2"
        parameters: []
        propertiesMap:
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "enabled"
      valueType: "org.springframework.boot.web.server.Http2"
      uuid: "http2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "enabled"
    - sapientType: "MOCK"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder"
    - sapientType: "MOCK"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder2"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "io.undertow.UndertowOptions"
        fieldName: "ENABLE_HTTP2"
      valueType: "org.xnio.Option"
      uuid: "option"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "java.lang.Boolean"
      uuid: "boolean2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory"
      uuid: "factory"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.Ssl"
      uuid: "ssl"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.Ssl"
      uuid: "Ssl.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.Ssl"
      uuid: "ssl"
    - sapientType: "MOCK"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder"
    - sapientType: "MOCK"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder3"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "port"
    - sapientType: "BASIC"
      content: !<regular>
        value: "0.0.0.0"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder"
    - sapientType: "MOCK"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "io.undertow.UndertowOptions"
        fieldName: "SHUTDOWN_TIMEOUT"
      valueType: "org.xnio.Option"
      uuid: "option2"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "java.lang.Integer"
      uuid: "integer"
    - sapientType: "MOCK"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder"
    branches:
    - lineNumber: 150
      expression: "this.bufferSize != null"
      range: "(150,7)-(150,29)"
      evaluatedAs: false
    - lineNumber: 153
      expression: "this.ioThreads != null"
      range: "(153,7)-(153,28)"
      evaluatedAs: false
    - lineNumber: 156
      expression: "this.workerThreads != null"
      range: "(156,7)-(156,32)"
      evaluatedAs: false
    - lineNumber: 159
      expression: "this.directBuffers != null"
      range: "(159,7)-(159,32)"
      evaluatedAs: false
    - lineNumber: 163
      expression: "http2 != null"
      range: "(163,7)-(163,19)"
      evaluatedAs: true
    - lineNumber: 167
      expression: "Ssl.isEnabled(ssl)"
      range: "(167,7)-(167,24)"
      evaluatedAs: false
    - lineNumber: 172
      expression: "address != null"
      range: "(172,35)-(172,49)"
      evaluatedAs: false
    - lineNumber: 175
      expression: "for-each(this.builderCustomizers)"
      range: "(175,47)-(175,69)"
      evaluatedAs: false
- method:
    name: "createHttpHandlerFactories"
    sourceCodeSignature: "List<HttpHandlerFactory> createHttpHandlerFactories(AbstractConfigurableWebServerFactory\
      \ webServerFactory, HttpHandlerFactory... initialHttpHandlerFactories)"
    returnType: "java.util.List"
    genericReturnType: "org.springframework.boot.web.embedded.undertow.HttpHandlerFactory"
    parameters:
    - name: "webServerFactory"
      type: "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory"
    - name: "initialHttpHandlerFactories"
      type: "org.springframework.boot.web.embedded.undertow.HttpHandlerFactory[]"
    instructionFingerprint: "BE0CB679FCFB91245B3EDEFDA0592B4B"
  paths:
  - pathId: "path1"
    testPathName: "createHttpHandlerFactoriesWhenIsAccessLogEnabled"
    constructorSignature: "<init>() : void"
    modelFingerprint: "B9E58F313E4877E62F93901715449576"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "webServerFactory"
      modelFingerprint: "F272F25C662EA1F6AC045B09AC6EC84B"
      valueUuid: "webServerFactory"
    - type: "INPUT"
      name: "initialHttpHandlerFactories"
      modelFingerprint: "D095A605FF6DAA237510BB591664A5E0"
      valueUuid: "initialHttpHandlerFactories"
    - type: "LOCAL_VARIABLE"
      name: "webServerFactory"
      modelFingerprint: "0570A44934679BCF1710F9B2E8254B2B"
      valueUuid: "webServerFactory"
      methodExercised:
        expression: "getCompression():compression"
    - type: "LOCAL_VARIABLE"
      name: "webServerFactory"
      modelFingerprint: "9C400B1D348737AB7806E1155E45A2A3"
      valueUuid: "webServerFactory"
      methodExercised:
        expression: "getServerHeader():serverHeader"
    - type: "LOCAL_VARIABLE"
      name: "webServerFactory"
      modelFingerprint: "14B88448AA577206D93F9E8F46762167"
      valueUuid: "webServerFactory"
      methodExercised:
        expression: "getShutdown():shutdown"
    - type: "STATIC"
      name: "UndertowWebServerFactoryDelegate.class"
      modelFingerprint: "D009579A33677F1C43F2DD59BB847874"
      valueUuid: "UndertowWebServerFactoryDelegate.class"
      methodExercised:
        expression: "createHttpHandlerFactories(compression:compression,useForwardHeaders:fieldboolean3,serverHeader:serverHeader,shutdown:shutdown,initialHttpHandlerFactories:initialHttpHandlerFactories):list"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "4EAAD36F079DEE8AE3A46D6D4EE11026"
      methodExercised:
        expression: "isAccessLogEnabled():boolean1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5B785D6C43B011DE55C242F7E1679A2B"
      valueUuid: "list"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory"
      uuid: "webServerFactory"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.embedded.undertow.HttpHandlerFactory[]"
      uuid: "initialHttpHandlerFactories"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory"
      uuid: "webServerFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "compression"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory"
      uuid: "webServerFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getServerHeader1"
      valueType: "java.lang.String"
      uuid: "serverHeader"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory"
      uuid: "webServerFactory"
    - sapientType: "ENUM"
      content: !<regular>
        value: "GRACEFUL"
      valueType: "org.springframework.boot.web.server.Shutdown"
      uuid: "shutdown"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate"
      uuid: "UndertowWebServerFactoryDelegate.class"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.web.embedded.undertow.AccessLogHttpHandlerFactory"
            parameters:
            - name: "directory"
              value:
                sapientType: "NULL"
                valueType: "java.io.File"
                uuid: "fieldFile"
            - name: "pattern"
              value:
                sapientType: "NULL"
                valueType: "java.lang.String"
                uuid: "fieldString"
            - name: "prefix"
              value:
                sapientType: "NULL"
                valueType: "java.lang.String"
                uuid: "fieldString2"
            - name: "suffix"
              value:
                sapientType: "NULL"
                valueType: "java.lang.String"
                uuid: "fieldString3"
            - name: "rotate"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: true
                valueType: "boolean"
                uuid: "int2"
                fixed: true
          valueType: "org.springframework.boot.web.embedded.undertow.AccessLogHttpHandlerFactory"
          uuid: "accessLogHttpHandlerFactory"
          fixed: true
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.web.embedded.undertow.HttpHandlerFactory"
      uuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "compression"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "fieldboolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getServerHeader1"
      valueType: "java.lang.String"
      uuid: "serverHeader"
    - sapientType: "ENUM"
      content: !<regular>
        value: "GRACEFUL"
      valueType: "org.springframework.boot.web.server.Shutdown"
      uuid: "shutdown"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.embedded.undertow.HttpHandlerFactory[]"
      uuid: "initialHttpHandlerFactories"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.web.embedded.undertow.AccessLogHttpHandlerFactory"
            parameters:
            - name: "directory"
              value:
                sapientType: "NULL"
                valueType: "java.io.File"
                uuid: "fieldFile"
            - name: "pattern"
              value:
                sapientType: "NULL"
                valueType: "java.lang.String"
                uuid: "fieldString"
            - name: "prefix"
              value:
                sapientType: "NULL"
                valueType: "java.lang.String"
                uuid: "fieldString2"
            - name: "suffix"
              value:
                sapientType: "NULL"
                valueType: "java.lang.String"
                uuid: "fieldString3"
            - name: "rotate"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: true
                valueType: "boolean"
                uuid: "int2"
                fixed: true
          valueType: "org.springframework.boot.web.embedded.undertow.AccessLogHttpHandlerFactory"
          uuid: "accessLogHttpHandlerFactory"
          fixed: true
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.web.embedded.undertow.HttpHandlerFactory"
      uuid: "list"
    branches:
    - lineNumber: 186
      expression: "isAccessLogEnabled()"
      range: "(186,7)-(186,26)"
      evaluatedAs: true
- method:
    name: "createHttpHandlerFactories"
    sourceCodeSignature: "List<HttpHandlerFactory> createHttpHandlerFactories(Compression\
      \ compression, boolean useForwardHeaders, String serverHeader, Shutdown shutdown,\
      \ HttpHandlerFactory... initialHttpHandlerFactories)"
    returnType: "java.util.List"
    genericReturnType: "org.springframework.boot.web.embedded.undertow.HttpHandlerFactory"
    parameters:
    - name: "compression"
      type: "org.springframework.boot.web.server.Compression"
    - name: "useForwardHeaders"
      type: "boolean"
    - name: "serverHeader"
      type: "java.lang.String"
    - name: "shutdown"
      type: "org.springframework.boot.web.server.Shutdown"
    - name: "initialHttpHandlerFactories"
      type: "org.springframework.boot.web.embedded.undertow.HttpHandlerFactory[]"
    instructionFingerprint: "F56C16442624D47ACF431DB0CC660987"
  paths:
  - pathId: "path1"
    testPathName: "createHttpHandlerFactories1WhenUseForwardHeadersAndStringUtilsHasTextServerHeaderAndShutdownEqualsShutdownGRACEFUL"
    modelFingerprint: "13BDF83DCDAECB17792505308D8402C4"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "compression"
      modelFingerprint: "4967DA4EF27564A7EAE43CBFF60779D4"
      valueUuid: "compression"
    - type: "INPUT"
      name: "useForwardHeaders"
      modelFingerprint: "009EAF56FBE3B9469D3E72573D4619A1"
      valueUuid: "useForwardHeaders"
    - type: "INPUT"
      name: "serverHeader"
      modelFingerprint: "951F3C9B470622E3C97C9676D7C2174D"
      valueUuid: "serverHeader"
    - type: "INPUT"
      name: "shutdown"
      modelFingerprint: "C5F74AB16603CA2CB65CB8A4E63B3360"
      valueUuid: "shutdown"
    - type: "INPUT"
      name: "initialHttpHandlerFactories"
      modelFingerprint: "795BEBE23FFDA28D913C0AB00056DDAE"
      valueUuid: "initialHttpHandlerFactories"
    - type: "LOCAL_VARIABLE"
      name: "compression"
      modelFingerprint: "F4711FA4210B188121AC31A43816D7B7"
      valueUuid: "compression"
      methodExercised:
        expression: "getEnabled():enabled"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "4CA1D7F670E7003ED488EFC0E8F41583"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:serverHeader):boolean4"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7EF18F9D30180B27CD4F056A4B87A530"
      valueUuid: "arrayListNotNull"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Compression"
        parameters: []
        propertiesMap:
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "enabled"
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "compression"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "useForwardHeaders"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "serverHeader"
    - sapientType: "ENUM"
      content: !<regular>
        value: "GRACEFUL"
      valueType: "org.springframework.boot.web.server.Shutdown"
      uuid: "shutdown"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.embedded.undertow.HttpHandlerFactory[]"
      uuid: "initialHttpHandlerFactories"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Compression"
        parameters: []
        propertiesMap:
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "enabled"
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "compression"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "enabled"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "serverHeader"
    - sapientType: "NOT_NULL"
      valueType: "java.util.ArrayList"
      genericValueType: "org.springframework.boot.web.embedded.undertow.HttpHandlerFactory"
      uuid: "arrayListNotNull"
      fixed: true
    branches:
    - lineNumber: 196
      expression: "compression != null"
      range: "(196,7)-(196,25)"
      evaluatedAs: true
    - lineNumber: 196
      expression: "compression.getEnabled()"
      range: "(196,30)-(196,53)"
      evaluatedAs: true
    - lineNumber: 199
      expression: "useForwardHeaders"
      range: "(199,7)-(199,23)"
      evaluatedAs: true
    - lineNumber: 202
      expression: "StringUtils.hasText(serverHeader)"
      range: "(202,7)-(202,39)"
      evaluatedAs: true
    - lineNumber: 205
      expression: "shutdown == Shutdown.GRACEFUL"
      range: "(205,7)-(205,35)"
      evaluatedAs: true
