---
modelFingerprint: "01FBA9A34654355C984ABFF8D0C1BEAE"
targetClass:
  fullClassName: "org.springframework.boot.web.embedded.undertow.FileSessionPersistence"
methods:
- method:
    name: "persistSessions"
    sourceCodeSignature: "void persistSessions(String deploymentName, Map<String,\
      \ PersistentSession> sessionData)"
    returnType: "void"
    parameters:
    - name: "deploymentName"
      type: "java.lang.String"
    - name: "sessionData"
      type: "java.util.Map"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Throwable"
    - idExternalInstruction: 0
      id: 3
      catchExceptions:
      - "java.lang.Throwable"
    instructionFingerprint: "A2F6189DC320343060F3596F662F516B"
  paths:
  - pathId: "path1"
    testPathName: "persistSessionsWhenThisDirNotExists"
    constructorSignature: "<init>(java.io.File) : void"
    modelFingerprint: "CD4F24693BAA493CB772F1592FEB2701"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "0DE31E80CEBE6C83802944C83F4B89A3"
      valueUuid: "target"
    - type: "INPUT"
      name: "deploymentName"
      modelFingerprint: "3359C3ED6E73AF711E4A79679123C143"
      valueUuid: "deploymentName"
    - type: "INPUT"
      name: "sessionData"
      modelFingerprint: "AD0D1BE30A5A8F10ED101F7D35C2A363"
      valueUuid: "sessionData"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.io.File.exists() : boolean"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.FileSessionPersistence"
        parameters:
        - name: "dir"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.File"
              parameters:
              - name: "pathname"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pathname1"
                  valueType: "java.lang.String"
                  uuid: "dir-pathname"
            valueType: "java.io.File"
            uuid: "dir"
      valueType: "org.springframework.boot.web.embedded.undertow.FileSessionPersistence"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "deploymentName"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "sessionDataItem1Key1"
              valueType: "java.lang.String"
              uuid: "string2"
              collectionUuid: "sessionData"
            value:
              sapientType: "MOCK"
              valueType: "io.undertow.servlet.api.SessionPersistenceManager$PersistentSession"
              uuid: "sessionPersistenceManager.PersistentSession"
              collectionUuid: "sessionData"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid1"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,io.undertow.servlet.api.SessionPersistenceManager$PersistentSession"
      uuid: "sessionData"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 113
      expression: "!this.dir.exists()"
      range: "(113,7)-(113,24)"
      evaluatedAs: true
      internalMethodName: "getSessionFile"
  - pathId: "path2"
    testPathName: "persistSessionsWhenCaughtException"
    constructorSignature: "<init>(java.io.File) : void"
    modelFingerprint: "78E11B01BA796B0FC99717F9E9BBE603"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "0DE31E80CEBE6C83802944C83F4B89A3"
      valueUuid: "target"
    - type: "INPUT"
      name: "deploymentName"
      modelFingerprint: "3359C3ED6E73AF711E4A79679123C143"
      valueUuid: "deploymentName"
    - type: "INPUT"
      name: "sessionData"
      modelFingerprint: "AD0D1BE30A5A8F10ED101F7D35C2A363"
      valueUuid: "sessionData"
    - type: "LOCAL_VARIABLE"
      name: "ROOT_LOGGER"
      modelFingerprint: "637AD644C02D1A0817576D0576A4F74E"
      valueUuid: "undertowServletLogger"
      methodExercised:
        expression: "failedToPersistSessions(arg0:exception):void4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.io.File.exists() : boolean"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.FileSessionPersistence"
        parameters:
        - name: "dir"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.File"
              parameters:
              - name: "pathname"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pathname1"
                  valueType: "java.lang.String"
                  uuid: "dir-pathname"
            valueType: "java.io.File"
            uuid: "dir"
      valueType: "org.springframework.boot.web.embedded.undertow.FileSessionPersistence"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "deploymentName"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "sessionDataItem1Key1"
              valueType: "java.lang.String"
              uuid: "string2"
              collectionUuid: "sessionData"
            value:
              sapientType: "MOCK"
              valueType: "io.undertow.servlet.api.SessionPersistenceManager$PersistentSession"
              uuid: "sessionPersistenceManager.PersistentSession"
              collectionUuid: "sessionData"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid2"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,io.undertow.servlet.api.SessionPersistenceManager$PersistentSession"
      uuid: "sessionData"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "io.undertow.servlet.UndertowServletLogger"
        fieldName: "ROOT_LOGGER"
      valueType: "io.undertow.servlet.UndertowServletLogger"
      uuid: "undertowServletLogger"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Exception"
        parameters: []
      valueType: "java.lang.Exception"
      uuid: "exception"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 113
      expression: "!this.dir.exists()"
      range: "(113,7)-(113,24)"
      evaluatedAs: true
      internalMethodName: "getSessionFile"
    - lineNumber: 55
      expression: "catch-exception (Exception)"
      range: "(55,3)-(55,21)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
  - pathId: "path3"
    testPathName: "persistSessionsWhenDefaultBranchThrowsThrowable"
    constructorSignature: "<init>(java.io.File) : void"
    modelFingerprint: "5CB4EF30C44A3D0CC2EB15DA737003C0"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "0DE31E80CEBE6C83802944C83F4B89A3"
      valueUuid: "target"
    - type: "INPUT"
      name: "deploymentName"
      modelFingerprint: "3359C3ED6E73AF711E4A79679123C143"
      valueUuid: "deploymentName"
    - type: "INPUT"
      name: "sessionData"
      modelFingerprint: "AD0D1BE30A5A8F10ED101F7D35C2A363"
      valueUuid: "sessionData"
    - type: "LOCAL_VARIABLE"
      name: "stream"
      modelFingerprint: "C87303CBB9B191F18D197C3B77383D08"
      valueUuid: "objectOutputStream"
      methodExercised:
        expression: "close():void3"
        throwsExceptions:
        - "java.io.IOException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "49E493EB56B47EDEB5C173968793BABC"
      valueUuid: "throwable"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.io.File.exists() : boolean"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.FileSessionPersistence"
        parameters:
        - name: "dir"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.File"
              parameters:
              - name: "pathname"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pathname1"
                  valueType: "java.lang.String"
                  uuid: "dir-pathname"
            valueType: "java.io.File"
            uuid: "dir"
      valueType: "org.springframework.boot.web.embedded.undertow.FileSessionPersistence"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "deploymentName"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "sessionDataItem1Key1"
              valueType: "java.lang.String"
              uuid: "string2"
              collectionUuid: "sessionData"
            value:
              sapientType: "MOCK"
              valueType: "io.undertow.servlet.api.SessionPersistenceManager$PersistentSession"
              uuid: "sessionPersistenceManager.PersistentSession"
              collectionUuid: "sessionData"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid3"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,io.undertow.servlet.api.SessionPersistenceManager$PersistentSession"
      uuid: "sessionData"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.ObjectOutputStream"
        parameters:
        - name: "out"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.FileOutputStream"
              parameters:
              - name: "file"
                value:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "java.io.File"
                    parameters:
                    - name: "parent"
                      value:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "java.io.File"
                          parameters:
                          - name: "pathname"
                            value:
                              sapientType: "BASIC"
                              content: !<regular>
                                value: "pathname1"
                              valueType: "java.lang.String"
                              uuid: "dir-pathname"
                        valueType: "java.io.File"
                        uuid: "dir"
                    - name: "child"
                      value:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: "A.session"
                        valueType: "java.lang.String"
                        uuid: "string"
                  valueType: "java.io.File"
                  uuid: "file"
                  fixed: true
            valueType: "java.io.FileOutputStream"
            uuid: "fileOutputStream"
            fixed: true
      valueType: "java.io.ObjectOutputStream"
      uuid: "objectOutputStream"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "throwable"
    branches:
    - lineNumber: 113
      expression: "!this.dir.exists()"
      range: "(113,7)-(113,24)"
      evaluatedAs: true
      internalMethodName: "getSessionFile"
    - lineNumber: 61
      expression: "branch expression (line 61)"
      range: "(61,1)-(61,200)"
      evaluatedAs: true
      internalMethodName: "save"
    catchBlockExercised:
      idExternalInstruction: 7
      id: 2
      catchExceptions:
      - "java.lang.Throwable"
- method:
    name: "loadSessionAttributes"
    sourceCodeSignature: "Map<String, PersistentSession> loadSessionAttributes(String\
      \ deploymentName, final ClassLoader classLoader)"
    returnType: "java.util.Map"
    genericReturnType: "java.lang.String,io.undertow.servlet.api.SessionPersistenceManager$PersistentSession"
    parameters:
    - name: "deploymentName"
      type: "java.lang.String"
    - name: "classLoader"
      type: "java.lang.ClassLoader"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 4
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 5
      catchExceptions:
      - "java.lang.Throwable"
    - idExternalInstruction: 0
      id: 6
      catchExceptions:
      - "java.lang.Throwable"
    instructionFingerprint: "6660DA96973BB3F64A4C0A7169855F76"
  paths:
  - pathId: "path3"
    testPathName: "loadSessionAttributesWhenFileNotExists"
    constructorSignature: "<init>(java.io.File) : void"
    modelFingerprint: "0C410BBF9515D99040327F464EB3977D"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6C485601CB37F591F29EFBC6A6BF6C5A"
      valueUuid: "target"
    - type: "INPUT"
      name: "deploymentName"
      modelFingerprint: "C0E971264E205CB5B7BA4637B8BAA6FC"
      valueUuid: "deploymentName"
    - type: "INPUT"
      name: "classLoader"
      modelFingerprint: "41DDD19A6E082313172F3B4D673E6C9B"
      valueUuid: "classLoader"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A2E19CA07761A6E36ABB5B783053EEF6"
      valueUuid: "map"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.FileSessionPersistence"
        parameters:
        - name: "dir"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.File"
              parameters:
              - name: "pathname"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pathname1"
                  valueType: "java.lang.String"
                  uuid: "dir-pathname"
            valueType: "java.io.File"
            uuid: "dir"
      valueType: "org.springframework.boot.web.embedded.undertow.FileSessionPersistence"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "deploymentName"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "NULL"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,io.undertow.servlet.api.SessionPersistenceManager$PersistentSession"
      uuid: "map"
      fixed: true
    branches:
    - lineNumber: 113
      expression: "!this.dir.exists()"
      range: "(113,7)-(113,24)"
      evaluatedAs: true
      internalMethodName: "getSessionFile"
    - lineNumber: 76
      expression: "file.exists()"
      range: "(76,8)-(76,20)"
      evaluatedAs: false
  - pathId: "path1"
    testPathName: "loadSessionAttributesWhenEntrySessionGetExpirationGetTimeGreaterThanTime"
    constructorSignature: "<init>(java.io.File) : void"
    modelFingerprint: "B303D2E3F20B7EA3808A6AA09D431EA6"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "0DE31E80CEBE6C83802944C83F4B89A3"
      valueUuid: "target"
    - type: "INPUT"
      name: "deploymentName"
      modelFingerprint: "3359C3ED6E73AF711E4A79679123C143"
      valueUuid: "deploymentName"
    - type: "INPUT"
      name: "classLoader"
      modelFingerprint: "C286DE215DE7563ED1CD0033A63BD833"
      valueUuid: "classLoader"
    - type: "LOCAL_VARIABLE"
      name: "value"
      modelFingerprint: "F034A4BCCA13BE1842F67EAD76A9EE07"
      valueUuid: "fileSessionPersistence.SerializablePersistentSession"
      methodExercised:
        expression: "getPersistentSession():sessionPersistenceManager.PersistentSession"
    - type: "LOCAL_VARIABLE"
      name: "entrySession"
      modelFingerprint: "201C9DB03240B2E916E7CE7D4369AC39"
      valueUuid: "sessionPersistenceManager.PersistentSession"
      methodExercised:
        expression: "getExpiration():expiration"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "03D1361F71B90C969D00E5980BD36D38"
      valueUuid: "linkedHashMap"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.io.File.exists() : boolean"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.FileSessionPersistence"
        parameters:
        - name: "dir"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.File"
              parameters:
              - name: "pathname"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pathname1"
                  valueType: "java.lang.String"
                  uuid: "dir-pathname"
            valueType: "java.io.File"
            uuid: "dir"
      valueType: "org.springframework.boot.web.embedded.undertow.FileSessionPersistence"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "deploymentName"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.undertow.FileSessionPersistence$SerializablePersistentSession"
      uuid: "fileSessionPersistence.SerializablePersistentSession"
    - sapientType: "OBJECT"
      content: !<new>
        target: "io.undertow.servlet.api.SessionPersistenceManager$PersistentSession"
        parameters:
        - name: "expiration"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.util.Date"
              parameters: []
            valueType: "java.util.Date"
            uuid: "expiration"
        - name: "sessionData"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Map"
            uuid: "sessionPersistenceManager.PersistentSession-sessionData"
      valueType: "io.undertow.servlet.api.SessionPersistenceManager$PersistentSession"
      uuid: "sessionPersistenceManager.PersistentSession"
    - sapientType: "OBJECT"
      content: !<new>
        target: "io.undertow.servlet.api.SessionPersistenceManager$PersistentSession"
        parameters:
        - name: "expiration"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.util.Date"
              parameters: []
            valueType: "java.util.Date"
            uuid: "expiration"
        - name: "sessionData"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Map"
            uuid: "sessionPersistenceManager.PersistentSession-sessionData"
      valueType: "io.undertow.servlet.api.SessionPersistenceManager$PersistentSession"
      uuid: "sessionPersistenceManager.PersistentSession"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.util.Date"
        parameters: []
      valueType: "java.util.Date"
      uuid: "expiration"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.LinkedHashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "resultItem1Key1"
              valueType: "java.lang.String"
              uuid: "string2"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "io.undertow.servlet.api.SessionPersistenceManager$PersistentSession"
                parameters:
                - name: "expiration"
                  value:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.util.Date"
                      parameters: []
                    valueType: "java.util.Date"
                    uuid: "expiration"
                - name: "sessionData"
                  value:
                    sapientType: "COLLECTION"
                    content: !<collection>
                      parameters: []
                      values: []
                    valueType: "java.util.Map"
                    uuid: "sessionPersistenceManager.PersistentSession-sessionData"
              valueType: "io.undertow.servlet.api.SessionPersistenceManager$PersistentSession"
              uuid: "sessionPersistenceManager.PersistentSession"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,io.undertow.servlet.api.SessionPersistenceManager$PersistentSession"
          uuid: "uniqueUuid4"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,io.undertow.servlet.api.SessionPersistenceManager$PersistentSession"
      uuid: "linkedHashMap"
    branches:
    - lineNumber: 113
      expression: "!this.dir.exists()"
      range: "(113,7)-(113,24)"
      evaluatedAs: true
      internalMethodName: "getSessionFile"
    - lineNumber: 76
      expression: "file.exists()"
      range: "(76,8)-(76,20)"
      evaluatedAs: true
    - lineNumber: 99
      expression: "entrySession.getExpiration().getTime() > time"
      range: "(99,8)-(99,52)"
      evaluatedAs: true
      internalMethodName: "lambda$load$1"
  - pathId: "path4"
    testPathName: "loadSessionAttributesWhenEntrySessionGetExpirationGetTimeNotGreaterThanTimeAndCaughtException"
    constructorSignature: "<init>(java.io.File) : void"
    modelFingerprint: "244B82434CA9BFED451DFAD1F85B0C47"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "0DE31E80CEBE6C83802944C83F4B89A3"
      valueUuid: "target"
    - type: "INPUT"
      name: "deploymentName"
      modelFingerprint: "3359C3ED6E73AF711E4A79679123C143"
      valueUuid: "deploymentName"
    - type: "INPUT"
      name: "classLoader"
      modelFingerprint: "C286DE215DE7563ED1CD0033A63BD833"
      valueUuid: "classLoader"
    - type: "LOCAL_VARIABLE"
      name: "value"
      modelFingerprint: "F034A4BCCA13BE1842F67EAD76A9EE07"
      valueUuid: "fileSessionPersistence.SerializablePersistentSession"
      methodExercised:
        expression: "getPersistentSession():sessionPersistenceManager.PersistentSession"
    - type: "LOCAL_VARIABLE"
      name: "entrySession"
      modelFingerprint: "201C9DB03240B2E916E7CE7D4369AC39"
      valueUuid: "sessionPersistenceManager.PersistentSession"
      methodExercised:
        expression: "getExpiration():expiration"
    - type: "LOCAL_VARIABLE"
      name: "ROOT_LOGGER"
      modelFingerprint: "F15D3C9EB827C80815EEA2CD2A47CF9C"
      valueUuid: "undertowServletLogger"
      methodExercised:
        expression: "failedtoLoadPersistentSessions(arg0:exception):void3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A2E19CA07761A6E36ABB5B783053EEF6"
      valueUuid: "map"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.io.File.exists() : boolean"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.FileSessionPersistence"
        parameters:
        - name: "dir"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.File"
              parameters:
              - name: "pathname"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pathname1"
                  valueType: "java.lang.String"
                  uuid: "dir-pathname"
            valueType: "java.io.File"
            uuid: "dir"
      valueType: "org.springframework.boot.web.embedded.undertow.FileSessionPersistence"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "deploymentName"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.undertow.FileSessionPersistence$SerializablePersistentSession"
      uuid: "fileSessionPersistence.SerializablePersistentSession"
    - sapientType: "OBJECT"
      content: !<new>
        target: "io.undertow.servlet.api.SessionPersistenceManager$PersistentSession"
        parameters:
        - name: "expiration"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.util.Date"
              parameters: []
            valueType: "java.util.Date"
            uuid: "expiration"
        - name: "sessionData"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Map"
            uuid: "sessionPersistenceManager.PersistentSession-sessionData"
      valueType: "io.undertow.servlet.api.SessionPersistenceManager$PersistentSession"
      uuid: "sessionPersistenceManager.PersistentSession"
    - sapientType: "OBJECT"
      content: !<new>
        target: "io.undertow.servlet.api.SessionPersistenceManager$PersistentSession"
        parameters:
        - name: "expiration"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.util.Date"
              parameters: []
            valueType: "java.util.Date"
            uuid: "expiration"
        - name: "sessionData"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Map"
            uuid: "sessionPersistenceManager.PersistentSession-sessionData"
      valueType: "io.undertow.servlet.api.SessionPersistenceManager$PersistentSession"
      uuid: "sessionPersistenceManager.PersistentSession"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.util.Date"
        parameters: []
      valueType: "java.util.Date"
      uuid: "expiration"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "io.undertow.servlet.UndertowServletLogger"
        fieldName: "ROOT_LOGGER"
      valueType: "io.undertow.servlet.UndertowServletLogger"
      uuid: "undertowServletLogger"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Exception"
        parameters: []
      valueType: "java.lang.Exception"
      uuid: "exception"
    - sapientType: "NULL"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,io.undertow.servlet.api.SessionPersistenceManager$PersistentSession"
      uuid: "map"
      fixed: true
    branches:
    - lineNumber: 113
      expression: "!this.dir.exists()"
      range: "(113,7)-(113,24)"
      evaluatedAs: true
      internalMethodName: "getSessionFile"
    - lineNumber: 76
      expression: "file.exists()"
      range: "(76,8)-(76,20)"
      evaluatedAs: true
    - lineNumber: 99
      expression: "entrySession.getExpiration().getTime() > time"
      range: "(99,8)-(99,52)"
      evaluatedAs: false
      internalMethodName: "lambda$load$1"
    - lineNumber: 80
      expression: "catch-exception (Exception)"
      range: "(80,3)-(80,21)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 4
      catchExceptions:
      - "java.lang.Exception"
  - pathId: "path6"
    testPathName: "loadSessionAttributesWhenDefaultBranchThrowsThrowable"
    constructorSignature: "<init>(java.io.File) : void"
    modelFingerprint: "7039B3046468794C140A770C7763B7C1"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "0DE31E80CEBE6C83802944C83F4B89A3"
      valueUuid: "target"
    - type: "INPUT"
      name: "deploymentName"
      modelFingerprint: "3359C3ED6E73AF711E4A79679123C143"
      valueUuid: "deploymentName"
    - type: "INPUT"
      name: "classLoader"
      modelFingerprint: "C286DE215DE7563ED1CD0033A63BD833"
      valueUuid: "classLoader"
    - type: "LOCAL_VARIABLE"
      name: "value"
      modelFingerprint: "F034A4BCCA13BE1842F67EAD76A9EE07"
      valueUuid: "fileSessionPersistence.SerializablePersistentSession"
      methodExercised:
        expression: "getPersistentSession():sessionPersistenceManager.PersistentSession"
    - type: "LOCAL_VARIABLE"
      name: "entrySession"
      modelFingerprint: "201C9DB03240B2E916E7CE7D4369AC39"
      valueUuid: "sessionPersistenceManager.PersistentSession"
      methodExercised:
        expression: "getExpiration():expiration"
    - type: "LOCAL_VARIABLE"
      name: "stream"
      modelFingerprint: "D5AE2D5D971CA6AAE3FEC9FBE18DA229"
      valueUuid: "configurableObjectInputStream"
      methodExercised:
        expression: "close():void2"
        throwsExceptions:
        - "java.io.IOException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "49E493EB56B47EDEB5C173968793BABC"
      valueUuid: "throwable"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.io.File.exists() : boolean"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.FileSessionPersistence"
        parameters:
        - name: "dir"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.File"
              parameters:
              - name: "pathname"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pathname1"
                  valueType: "java.lang.String"
                  uuid: "dir-pathname"
            valueType: "java.io.File"
            uuid: "dir"
      valueType: "org.springframework.boot.web.embedded.undertow.FileSessionPersistence"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "deploymentName"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.undertow.FileSessionPersistence$SerializablePersistentSession"
      uuid: "fileSessionPersistence.SerializablePersistentSession"
    - sapientType: "OBJECT"
      content: !<new>
        target: "io.undertow.servlet.api.SessionPersistenceManager$PersistentSession"
        parameters:
        - name: "expiration"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.util.Date"
              parameters: []
            valueType: "java.util.Date"
            uuid: "expiration"
        - name: "sessionData"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Map"
            uuid: "sessionPersistenceManager.PersistentSession-sessionData"
      valueType: "io.undertow.servlet.api.SessionPersistenceManager$PersistentSession"
      uuid: "sessionPersistenceManager.PersistentSession"
    - sapientType: "OBJECT"
      content: !<new>
        target: "io.undertow.servlet.api.SessionPersistenceManager$PersistentSession"
        parameters:
        - name: "expiration"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.util.Date"
              parameters: []
            valueType: "java.util.Date"
            uuid: "expiration"
        - name: "sessionData"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Map"
            uuid: "sessionPersistenceManager.PersistentSession-sessionData"
      valueType: "io.undertow.servlet.api.SessionPersistenceManager$PersistentSession"
      uuid: "sessionPersistenceManager.PersistentSession"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.util.Date"
        parameters: []
      valueType: "java.util.Date"
      uuid: "expiration"
    - sapientType: "INPUT_STREAM"
      content: !<inputStream>
        inputStreamClass: "org.springframework.core.ConfigurableObjectInputStream"
        values: []
        parameters:
        - name: "in"
          value:
            sapientType: "INPUT_STREAM"
            valueType: "java.io.FileInputStream"
            uuid: "fileInputStream"
            fixed: true
        - name: "classLoader"
          value:
            sapientType: "UNKNOWN"
            valueType: "java.lang.ClassLoader"
            uuid: "classLoader"
      valueType: "org.springframework.core.ConfigurableObjectInputStream"
      uuid: "configurableObjectInputStream"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "throwable"
    branches:
    - lineNumber: 113
      expression: "!this.dir.exists()"
      range: "(113,7)-(113,24)"
      evaluatedAs: true
      internalMethodName: "getSessionFile"
    - lineNumber: 76
      expression: "file.exists()"
      range: "(76,8)-(76,20)"
      evaluatedAs: true
    - lineNumber: 99
      expression: "entrySession.getExpiration().getTime() > time"
      range: "(99,8)-(99,52)"
      evaluatedAs: false
      internalMethodName: "lambda$load$1"
    - lineNumber: 88
      expression: "branch expression (line 88)"
      range: "(88,1)-(88,200)"
      evaluatedAs: true
      internalMethodName: "load"
    catchBlockExercised:
      idExternalInstruction: 16
      id: 5
      catchExceptions:
      - "java.lang.Throwable"
- method:
    name: "clear"
    sourceCodeSignature: "void clear(String deploymentName)"
    returnType: "void"
    parameters:
    - name: "deploymentName"
      type: "java.lang.String"
    instructionFingerprint: "0DBF5802D6307F11E0BB3417F63ABA40"
  paths:
  - pathId: "path1"
    testPathName: "clearWhenThisDirNotExists"
    constructorSignature: "<init>(java.io.File) : void"
    modelFingerprint: "8612E7517B15FBF5082FDF39AB3DA972"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6C485601CB37F591F29EFBC6A6BF6C5A"
      valueUuid: "target"
    - type: "INPUT"
      name: "deploymentName"
      modelFingerprint: "C0E971264E205CB5B7BA4637B8BAA6FC"
      valueUuid: "deploymentName"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.FileSessionPersistence"
        parameters:
        - name: "dir"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.File"
              parameters:
              - name: "pathname"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pathname1"
                  valueType: "java.lang.String"
                  uuid: "dir-pathname"
            valueType: "java.io.File"
            uuid: "dir"
      valueType: "org.springframework.boot.web.embedded.undertow.FileSessionPersistence"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "deploymentName"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 113
      expression: "!this.dir.exists()"
      range: "(113,7)-(113,24)"
      evaluatedAs: true
      internalMethodName: "getSessionFile"
