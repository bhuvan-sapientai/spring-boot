---
modelFingerprint: "3979299CC3C94FD066472DD694C094E2"
targetClass:
  fullClassName: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
methods:
- method:
    name: "createHttpHandler"
    sourceCodeSignature: "HttpHandler createHttpHandler()"
    returnType: "io.undertow.server.HttpHandler"
    instructionFingerprint: "06265EE2452379F4EEDEED157D751A7F"
  paths:
  - pathId: "path1"
    testPathName: "createHttpHandlerWhenStringUtilsHasLengthThisContextPath"
    constructorSignature: "<init>(io.undertow.Undertow$Builder,java.lang.Iterable<org.springframework.boot.web.embedded.undertow.HttpHandlerFactory>,java.lang.String,boolean)\
      \ : void"
    modelFingerprint: "17F962A1B8D6CA545568E5F9CB819583"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "448F6E0368DFBAD6DECDB816E22694DA"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      name: "deploymentManagerFactory"
      modelFingerprint: "995B00CBBEEB017577366B74339B0D5C"
      valueUuid: "object2"
      methodExercised:
        expression: "getDeploymentManager():deploymentManager"
    - type: "LOCAL_VARIABLE"
      name: "factory"
      modelFingerprint: "4AB8E149E4EF612207F70AAF5C4F6D19"
      valueUuid: "object3"
      methodExercised:
        expression: "getHandler(next:uniqueUuid1):httpHandler"
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "9B5E0C0A1D2666EA25F1F393C59C6EF6"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "isNull(object:fieldGracefulShutdownHandler,message:uniqueUuid2):void"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "B32E90F565EE11AE5F1E61E16EDDF970"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasLength(str:contextPath):boolean7"
        staticAccess: true
    - type: "STATIC"
      name: "Handlers.class"
      modelFingerprint: "406B05DE672AF64F281E7D6A2F248152"
      valueUuid: "Handlers.class"
      methodExercised:
        expression: "path():pathHandler"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "8B6087C0C0E174CD8C9805C80578AFBC"
      valueUuid: "pathHandler"
      methodExercised:
        expression: "addPrefixPath(path:contextPath,handler:httpHandler):pathHandler2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "FAAFBA2324EF53CBF2A246943ACE7E5E"
      valueUuid: "pathHandler2"
    disabled: true
    failureReason:
      reason: "PROVER_COULD_NOT_SOLVE_THE_PROBLEM"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
        parameters:
        - name: "builder"
          value:
            sapientType: "MOCK"
            valueType: "io.undertow.Undertow$Builder"
            uuid: "builder"
        - name: "httpHandlerFactories"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.web.embedded.undertow.HttpHandlerFactory"
            uuid: "httpHandlerFactories"
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "contextPath1"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "autoStart"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "autoStart"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.undertow.DeploymentManagerHttpHandlerFactory"
      uuid: "object2"
      collectionUuid: "httpHandlerFactories"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.undertow.HttpHandlerFactory"
      uuid: "object3"
      collectionUuid: "httpHandlerFactories"
    - sapientType: "MOCK"
      valueType: "io.undertow.server.handlers.GracefulShutdownHandler"
      uuid: "httpHandler"
    - sapientType: "NULL"
      valueType: "io.undertow.server.HttpHandler"
      uuid: "uniqueUuid1"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "NULL"
      valueType: "io.undertow.server.handlers.GracefulShutdownHandler"
      uuid: "fieldGracefulShutdownHandler"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Only a single GracefulShutdownHandler can be defined"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean7"
    - sapientType: "BASIC"
      content: !<regular>
        value: "contextPath1"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "MOCK"
      valueType: "io.undertow.Handlers"
      uuid: "Handlers.class"
    - sapientType: "MOCK"
      valueType: "io.undertow.server.handlers.PathHandler"
      uuid: "pathHandler"
    - sapientType: "MOCK"
      valueType: "io.undertow.server.handlers.PathHandler"
      uuid: "pathHandler"
    - sapientType: "MOCK"
      valueType: "io.undertow.server.handlers.PathHandler"
      uuid: "pathHandler2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "contextPath1"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "MOCK"
      valueType: "io.undertow.server.handlers.GracefulShutdownHandler"
      uuid: "httpHandler"
    - sapientType: "MOCK"
      valueType: "io.undertow.server.handlers.PathHandler"
      uuid: "pathHandler2"
    branches:
    - lineNumber: 171
      expression: "for-each(this.httpHandlerFactories)"
      range: "(171,37)-(171,61)"
      evaluatedAs: true
      internalMethodName: "createHttpHandler"
    - lineNumber: 173
      expression: "handler instanceof Closeable closeable"
      range: "(173,8)-(173,45)"
      evaluatedAs: false
      internalMethodName: "createHttpHandler"
    - lineNumber: 176
      expression: "handler instanceof GracefulShutdownHandler shutdownHandler"
      range: "(176,8)-(176,65)"
      evaluatedAs: true
      internalMethodName: "createHttpHandler"
    - lineNumber: 73
      expression: "StringUtils.hasLength(this.contextPath)"
      range: "(73,7)-(73,45)"
      evaluatedAs: true
- method:
    name: "getStartLogMessage"
    sourceCodeSignature: "String getStartLogMessage()"
    returnType: "java.lang.String"
    instructionFingerprint: "6FE6CB8947C49C59ECBE9252F202A0A5"
  paths:
  - pathId: "path1"
    testPathName: "getStartLogMessageWhenPortsNotIsEmpty"
    constructorSignature: "<init>(io.undertow.Undertow$Builder,java.lang.Iterable<org.springframework.boot.web.embedded.undertow.HttpHandlerFactory>,java.lang.String,boolean)\
      \ : void"
    modelFingerprint: "DC7F95C24746623803C8A8FC4D36E2CC"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "A24B22956BF8677740B67B3CABAF5F37"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      name: "deploymentManagerFactory"
      modelFingerprint: "995B00CBBEEB017577366B74339B0D5C"
      valueUuid: "object2"
      methodExercised:
        expression: "getDeploymentManager():deploymentManager"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "C7ACBCFE5616F1184610C59DE2BE7F5B"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:contextPath):boolean3"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "014136492887FCB31FF43B4FEAF12F25"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "collectionToDelimitedString(coll:arrayList,delim:uniqueUuid3):string"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "32DA5FFEBFCA7D527F870F53F40A0BFD"
      valueUuid: "string4"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
        parameters:
        - name: "builder"
          value:
            sapientType: "MOCK"
            valueType: "io.undertow.Undertow$Builder"
            uuid: "builder"
        - name: "httpHandlerFactories"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.web.embedded.undertow.DeploymentManagerHttpHandlerFactory"
                uuid: "object2"
                collectionUuid: "httpHandlerFactories"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.web.embedded.undertow.HttpHandlerFactory"
            uuid: "httpHandlerFactories"
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "autoStart"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "autoStart"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.undertow.DeploymentManagerHttpHandlerFactory"
      uuid: "object2"
      collectionUuid: "httpHandlerFactories"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: "null"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
          valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServer$Port"
          uuid: "object3"
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServer$Port"
      uuid: "arrayList"
    - sapientType: "BASIC"
      content: !<regular>
        value: ", "
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Undertow started on port null with context path 'A'"
      valueType: "java.lang.String"
      uuid: "string4"
    branches:
    - lineNumber: 81
      expression: "StringUtils.hasText(this.contextPath)"
      range: "(81,24)-(81,60)"
      evaluatedAs: true
    - lineNumber: 204
      expression: "!this.autoStart"
      range: "(204,8)-(204,22)"
      evaluatedAs: true
      internalMethodName: "getActualPorts"
    - lineNumber: 188
      expression: "ports.size() != 1"
      range: "(188,7)-(188,23)"
      evaluatedAs: false
      internalMethodName: "getPortsDescription"
    - lineNumber: 192
      expression: "!ports.isEmpty()"
      range: "(192,7)-(192,22)"
      evaluatedAs: true
      internalMethodName: "getPortsDescription"
  - pathId: "path6"
    testPathName: "getStartLogMessageWhenPortsSizeNotEquals1AndPortsIsEmpty"
    constructorSignature: "<init>(io.undertow.Undertow$Builder,java.lang.Iterable<org.springframework.boot.web.embedded.undertow.HttpHandlerFactory>,java.lang.String,boolean)\
      \ : void"
    modelFingerprint: "7537CC2EF8E713B547A9881A3F080DB5"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "3FB4A24E3F21F7F671C6EC8DCEF2FE95"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      name: "deploymentManagerFactory"
      modelFingerprint: "995B00CBBEEB017577366B74339B0D5C"
      valueUuid: "object2"
      methodExercised:
        expression: "getDeploymentManager():deploymentManager"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "830B0058D8B9C71622EF27C0B647344B"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasText(str:contextPath):boolean3"
        staticAccess: true
    - type: "STATIC"
      name: "ReflectionUtils.class.real"
      modelFingerprint: "7E78E558E921797B233EB0656218E3E4"
      valueUuid: "ReflectionUtils.class.real"
      methodExercised:
        expression: "findField(clazz:uniqueUuid4,name:uniqueUuid5):field"
        staticAccess: true
    - type: "STATIC"
      name: "ReflectionUtils.class.real"
      modelFingerprint: "B4394E886934FF175523896008CB1C09"
      valueUuid: "ReflectionUtils.class.real"
      methodExercised:
        expression: "makeAccessible(field:field):void"
        staticAccess: true
    - type: "STATIC"
      name: "ReflectionUtils.class"
      modelFingerprint: "425F7DB1E6657282F3A354CC620956DC"
      valueUuid: "ReflectionUtils.class"
      methodExercised:
        expression: "getField(field:field,target:fieldUndertow):object3"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7CD0727DEFAE1A852AD392C169539060"
      valueUuid: "string4"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
        parameters:
        - name: "builder"
          value:
            sapientType: "MOCK"
            valueType: "io.undertow.Undertow$Builder"
            uuid: "builder"
        - name: "httpHandlerFactories"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.web.embedded.undertow.DeploymentManagerHttpHandlerFactory"
                uuid: "object2"
                collectionUuid: "httpHandlerFactories"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.web.embedded.undertow.HttpHandlerFactory"
            uuid: "httpHandlerFactories"
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "autoStart"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "autoStart"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.undertow.DeploymentManagerHttpHandlerFactory"
      uuid: "object2"
      collectionUuid: "httpHandlerFactories"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ReflectionUtils"
      uuid: "ReflectionUtils.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ReflectionUtils"
        method: "findField"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.Undertow"
            valueType: "java.lang.Class"
            genericValueType: "io.undertow.Undertow"
            uuid: "uniqueUuid10"
            fixed: true
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "channels"
            valueType: "java.lang.String"
            uuid: "uniqueUuid11"
            fixed: true
      valueType: "java.lang.reflect.Field"
      uuid: "field"
    - sapientType: "CLASS"
      content: !<regular>
        value: "io.undertow.Undertow"
      valueType: "java.lang.Class"
      genericValueType: "io.undertow.Undertow"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "channels"
      valueType: "java.lang.String"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ReflectionUtils"
      uuid: "ReflectionUtils.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ReflectionUtils"
        method: "findField"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.Undertow"
            valueType: "java.lang.Class"
            genericValueType: "io.undertow.Undertow"
            uuid: "uniqueUuid10"
            fixed: true
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "channels"
            valueType: "java.lang.String"
            uuid: "uniqueUuid11"
            fixed: true
      valueType: "java.lang.reflect.Field"
      uuid: "field"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ReflectionUtils"
      uuid: "ReflectionUtils.class"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      uuid: "object3"
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ReflectionUtils"
        method: "findField"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.Undertow"
            valueType: "java.lang.Class"
            genericValueType: "io.undertow.Undertow"
            uuid: "uniqueUuid10"
            fixed: true
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "channels"
            valueType: "java.lang.String"
            uuid: "uniqueUuid11"
            fixed: true
      valueType: "java.lang.reflect.Field"
      uuid: "field"
    - sapientType: "NULL"
      valueType: "io.undertow.Undertow"
      uuid: "fieldUndertow"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Undertow started on ports unknown with context path '/'"
      valueType: "java.lang.String"
      uuid: "string4"
    branches:
    - lineNumber: 81
      expression: "StringUtils.hasText(this.contextPath)"
      range: "(81,24)-(81,60)"
      evaluatedAs: false
    - lineNumber: 204
      expression: "!this.autoStart"
      range: "(204,8)-(204,22)"
      evaluatedAs: false
      internalMethodName: "getActualPorts"
    - lineNumber: 208
      expression: "for-each(extractChannels())"
      range: "(208,33)-(208,49)"
      evaluatedAs: false
      internalMethodName: "getActualPorts"
    - lineNumber: 188
      expression: "ports.size() != 1"
      range: "(188,7)-(188,23)"
      evaluatedAs: true
      internalMethodName: "getPortsDescription"
    - lineNumber: 192
      expression: "!ports.isEmpty()"
      range: "(192,7)-(192,22)"
      evaluatedAs: false
      internalMethodName: "getPortsDescription"
  - pathId: "path4"
    testPathName: "getStartLogMessageWhenPortsSizeEquals1AndPortsNotIsEmpty"
    constructorSignature: "<init>(io.undertow.Undertow$Builder,java.lang.Iterable<org.springframework.boot.web.embedded.undertow.HttpHandlerFactory>,java.lang.String,boolean)\
      \ : void"
    modelFingerprint: "02A375EADAF4677A6F365D42DC457447"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BFD00F5D57EA14052367FA4E962D4C4A"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      name: "deploymentManagerFactory"
      modelFingerprint: "995B00CBBEEB017577366B74339B0D5C"
      valueUuid: "object2"
      methodExercised:
        expression: "getDeploymentManager():deploymentManager"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "7331D2D60882FB1B627B49E6A6631AB0"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:contextPath):boolean3"
        staticAccess: true
    - type: "STATIC"
      name: "ReflectionUtils.class.real"
      modelFingerprint: "7E78E558E921797B233EB0656218E3E4"
      valueUuid: "ReflectionUtils.class.real"
      methodExercised:
        expression: "findField(clazz:uniqueUuid1,name:uniqueUuid2):field"
        staticAccess: true
    - type: "STATIC"
      name: "ReflectionUtils.class.real"
      modelFingerprint: "B4394E886934FF175523896008CB1C09"
      valueUuid: "ReflectionUtils.class.real"
      methodExercised:
        expression: "makeAccessible(field:field):void"
        staticAccess: true
    - type: "STATIC"
      name: "ReflectionUtils.class"
      modelFingerprint: "8EDF12BD8768BFDE1B926F9D133F6E4B"
      valueUuid: "ReflectionUtils.class"
      methodExercised:
        expression: "getField(field:field,target:fieldUndertow):object4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "channel"
      modelFingerprint: "2971F779A48B5AE7E14B68408087E1CE"
      valueUuid: "object5"
      methodExercised:
        expression: "getLocalAddress():socketAddress"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "8C888319AEC3FD60180518A829F29FEF"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "collectionToDelimitedString(coll:arrayList,delim:uniqueUuid9):string"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "CFBCC8A5D9BA7FC56C4A27D0E1C5BACF"
      valueUuid: "string4"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
        parameters:
        - name: "builder"
          value:
            sapientType: "MOCK"
            valueType: "io.undertow.Undertow$Builder"
            uuid: "builder"
        - name: "httpHandlerFactories"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.web.embedded.undertow.DeploymentManagerHttpHandlerFactory"
                uuid: "object2"
                collectionUuid: "httpHandlerFactories"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.web.embedded.undertow.HttpHandlerFactory"
            uuid: "httpHandlerFactories"
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "autoStart"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "autoStart"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.undertow.DeploymentManagerHttpHandlerFactory"
      uuid: "object2"
      collectionUuid: "httpHandlerFactories"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ReflectionUtils"
      uuid: "ReflectionUtils.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ReflectionUtils"
        method: "findField"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.Undertow"
            valueType: "java.lang.Class"
            genericValueType: "io.undertow.Undertow"
            uuid: "uniqueUuid7"
            fixed: true
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "channels"
            valueType: "java.lang.String"
            uuid: "uniqueUuid8"
            fixed: true
      valueType: "java.lang.reflect.Field"
      uuid: "field"
    - sapientType: "CLASS"
      content: !<regular>
        value: "io.undertow.Undertow"
      valueType: "java.lang.Class"
      genericValueType: "io.undertow.Undertow"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "channels"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ReflectionUtils"
      uuid: "ReflectionUtils.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ReflectionUtils"
        method: "findField"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.Undertow"
            valueType: "java.lang.Class"
            genericValueType: "io.undertow.Undertow"
            uuid: "uniqueUuid7"
            fixed: true
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "channels"
            valueType: "java.lang.String"
            uuid: "uniqueUuid8"
            fixed: true
      valueType: "java.lang.reflect.Field"
      uuid: "field"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ReflectionUtils"
      uuid: "ReflectionUtils.class"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.xnio.channels.BoundChannel"
          uuid: "object5"
          collectionUuid: "object4"
          explicitCastNeeded: true
      valueType: "java.util.List"
      uuid: "object4"
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ReflectionUtils"
        method: "findField"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.Undertow"
            valueType: "java.lang.Class"
            genericValueType: "io.undertow.Undertow"
            uuid: "uniqueUuid7"
            fixed: true
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "channels"
            valueType: "java.lang.String"
            uuid: "uniqueUuid8"
            fixed: true
      valueType: "java.lang.reflect.Field"
      uuid: "field"
    - sapientType: "NULL"
      valueType: "io.undertow.Undertow"
      uuid: "fieldUndertow"
    - sapientType: "MOCK"
      valueType: "org.xnio.channels.BoundChannel"
      uuid: "object5"
      collectionUuid: "object4"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "java.net.SocketAddress"
      uuid: "socketAddress"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "NULL"
          valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServer$Port"
          uuid: "undertowWebServer.Port"
          fixed: true
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServer$Port"
      uuid: "arrayList"
    - sapientType: "BASIC"
      content: !<regular>
        value: ", "
      valueType: "java.lang.String"
      uuid: "uniqueUuid9"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Undertow started on port  with context path 'A'"
      valueType: "java.lang.String"
      uuid: "string4"
    branches:
    - lineNumber: 81
      expression: "StringUtils.hasText(this.contextPath)"
      range: "(81,24)-(81,60)"
      evaluatedAs: true
    - lineNumber: 204
      expression: "!this.autoStart"
      range: "(204,8)-(204,22)"
      evaluatedAs: false
      internalMethodName: "getActualPorts"
    - lineNumber: 208
      expression: "for-each(extractChannels())"
      range: "(208,33)-(208,49)"
      evaluatedAs: true
      internalMethodName: "getActualPorts"
    - lineNumber: 228
      expression: "socketAddress instanceof InetSocketAddress inetSocketAddress"
      range: "(228,7)-(228,66)"
      evaluatedAs: false
      internalMethodName: "getPortFromChannel"
    - lineNumber: 188
      expression: "ports.size() != 1"
      range: "(188,7)-(188,23)"
      evaluatedAs: false
      internalMethodName: "getPortsDescription"
    - lineNumber: 192
      expression: "!ports.isEmpty()"
      range: "(192,7)-(192,22)"
      evaluatedAs: true
      internalMethodName: "getPortsDescription"
  - pathId: "path9"
    testPathName: "getStartLogMessageWhenDefaultBranchAndPortsSizeNotEquals1AndPortsIsEmpty"
    constructorSignature: "<init>(io.undertow.Undertow$Builder,java.lang.Iterable<org.springframework.boot.web.embedded.undertow.HttpHandlerFactory>,java.lang.String,boolean)\
      \ : void"
    modelFingerprint: "B00C518849B222A8269B748F6048BDC4"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "3FB4A24E3F21F7F671C6EC8DCEF2FE95"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      name: "deploymentManagerFactory"
      modelFingerprint: "995B00CBBEEB017577366B74339B0D5C"
      valueUuid: "object2"
      methodExercised:
        expression: "getDeploymentManager():deploymentManager"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "C7ACBCFE5616F1184610C59DE2BE7F5B"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:contextPath):boolean3"
        staticAccess: true
    - type: "STATIC"
      name: "ReflectionUtils.class.real"
      modelFingerprint: "7E78E558E921797B233EB0656218E3E4"
      valueUuid: "ReflectionUtils.class.real"
      methodExercised:
        expression: "findField(clazz:uniqueUuid1,name:uniqueUuid2):field"
        staticAccess: true
    - type: "STATIC"
      name: "ReflectionUtils.class.real"
      modelFingerprint: "B4394E886934FF175523896008CB1C09"
      valueUuid: "ReflectionUtils.class.real"
      methodExercised:
        expression: "makeAccessible(field:field):void"
        staticAccess: true
    - type: "STATIC"
      name: "ReflectionUtils.class"
      modelFingerprint: "2B4EE28D1D7C9BC8BE08EF9CB7726F4F"
      valueUuid: "ReflectionUtils.class"
      methodExercised:
        expression: "getField(field:field,target:fieldUndertow):object3"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "6EF429E797222055AF23B0D770C8002F"
      valueUuid: "string3"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
        parameters:
        - name: "builder"
          value:
            sapientType: "MOCK"
            valueType: "io.undertow.Undertow$Builder"
            uuid: "builder"
        - name: "httpHandlerFactories"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.web.embedded.undertow.DeploymentManagerHttpHandlerFactory"
                uuid: "object2"
                collectionUuid: "httpHandlerFactories"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.web.embedded.undertow.HttpHandlerFactory"
            uuid: "httpHandlerFactories"
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "autoStart"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "autoStart"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.undertow.DeploymentManagerHttpHandlerFactory"
      uuid: "object2"
      collectionUuid: "httpHandlerFactories"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ReflectionUtils"
      uuid: "ReflectionUtils.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ReflectionUtils"
        method: "findField"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.Undertow"
            valueType: "java.lang.Class"
            genericValueType: "io.undertow.Undertow"
            uuid: "uniqueUuid7"
            fixed: true
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "channels"
            valueType: "java.lang.String"
            uuid: "uniqueUuid8"
            fixed: true
      valueType: "java.lang.reflect.Field"
      uuid: "field"
    - sapientType: "CLASS"
      content: !<regular>
        value: "io.undertow.Undertow"
      valueType: "java.lang.Class"
      genericValueType: "io.undertow.Undertow"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "channels"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ReflectionUtils"
      uuid: "ReflectionUtils.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ReflectionUtils"
        method: "findField"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.Undertow"
            valueType: "java.lang.Class"
            genericValueType: "io.undertow.Undertow"
            uuid: "uniqueUuid7"
            fixed: true
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "channels"
            valueType: "java.lang.String"
            uuid: "uniqueUuid8"
            fixed: true
      valueType: "java.lang.reflect.Field"
      uuid: "field"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ReflectionUtils"
      uuid: "ReflectionUtils.class"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.RuntimeException"
        parameters: []
      valueType: "java.lang.RuntimeException"
      uuid: "object3"
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ReflectionUtils"
        method: "findField"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.Undertow"
            valueType: "java.lang.Class"
            genericValueType: "io.undertow.Undertow"
            uuid: "uniqueUuid7"
            fixed: true
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "channels"
            valueType: "java.lang.String"
            uuid: "uniqueUuid8"
            fixed: true
      valueType: "java.lang.reflect.Field"
      uuid: "field"
    - sapientType: "NULL"
      valueType: "io.undertow.Undertow"
      uuid: "fieldUndertow"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Undertow started on ports unknown with context path 'A'"
      valueType: "java.lang.String"
      uuid: "string3"
    branches:
    - lineNumber: 81
      expression: "StringUtils.hasText(this.contextPath)"
      range: "(81,24)-(81,60)"
      evaluatedAs: true
    - lineNumber: 204
      expression: "!this.autoStart"
      range: "(204,8)-(204,22)"
      evaluatedAs: false
      internalMethodName: "getActualPorts"
    - lineNumber: 213
      expression: "branch expression (line 213)"
      range: "(213,1)-(213,200)"
      evaluatedAs: true
      internalMethodName: "getActualPorts"
    - lineNumber: 188
      expression: "ports.size() != 1"
      range: "(188,7)-(188,23)"
      evaluatedAs: true
      internalMethodName: "getPortsDescription"
    - lineNumber: 192
      expression: "!ports.isEmpty()"
      range: "(192,7)-(192,22)"
      evaluatedAs: false
      internalMethodName: "getPortsDescription"
    catchBlockExercised:
      idExternalInstruction: 9
      id: 5
      catchExceptions:
      - "java.lang.Exception"
  - pathId: "path2"
    testPathName: "getStartLogMessageWhenSslFieldIsNotNullAndPortsSizeEquals1AndPortsNotIsEmpty"
    constructorSignature: "<init>(io.undertow.Undertow$Builder,java.lang.Iterable<org.springframework.boot.web.embedded.undertow.HttpHandlerFactory>,java.lang.String,boolean)\
      \ : void"
    modelFingerprint: "A92FEB7180C9925D9A57C84E9BDAEEA2"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "3FB4A24E3F21F7F671C6EC8DCEF2FE95"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      name: "deploymentManagerFactory"
      modelFingerprint: "995B00CBBEEB017577366B74339B0D5C"
      valueUuid: "object2"
      methodExercised:
        expression: "getDeploymentManager():deploymentManager"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "C7ACBCFE5616F1184610C59DE2BE7F5B"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:contextPath):boolean3"
        staticAccess: true
    - type: "STATIC"
      name: "ReflectionUtils.class.real"
      modelFingerprint: "7E78E558E921797B233EB0656218E3E4"
      valueUuid: "ReflectionUtils.class.real"
      methodExercised:
        expression: "findField(clazz:uniqueUuid29,name:uniqueUuid30):field"
        staticAccess: true
    - type: "STATIC"
      name: "ReflectionUtils.class.real"
      modelFingerprint: "B4394E886934FF175523896008CB1C09"
      valueUuid: "ReflectionUtils.class.real"
      methodExercised:
        expression: "makeAccessible(field:field):void"
        staticAccess: true
    - type: "STATIC"
      name: "ReflectionUtils.class"
      modelFingerprint: "8EDF12BD8768BFDE1B926F9D133F6E4B"
      valueUuid: "ReflectionUtils.class"
      methodExercised:
        expression: "getField(field:field,target:fieldUndertow):object3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "channel"
      modelFingerprint: "8E1231DAA6B0410BF1EAE3B68D7C9EF1"
      valueUuid: "object4"
      methodExercised:
        expression: "getLocalAddress():socketAddress"
    - type: "STATIC"
      name: "ReflectionUtils.class"
      modelFingerprint: "0DA648D3E65A60D8727130A74962991E"
      valueUuid: "ReflectionUtils.class"
      methodExercised:
        expression: "findField(clazz:class,name:uniqueUuid37):field2"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "014136492887FCB31FF43B4FEAF12F25"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "collectionToDelimitedString(coll:arrayList,delim:uniqueUuid38):string2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "32DA5FFEBFCA7D527F870F53F40A0BFD"
      valueUuid: "string5"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.net.InetSocketAddress.getPort() : int"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
        parameters:
        - name: "builder"
          value:
            sapientType: "MOCK"
            valueType: "io.undertow.Undertow$Builder"
            uuid: "builder"
        - name: "httpHandlerFactories"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.web.embedded.undertow.DeploymentManagerHttpHandlerFactory"
                uuid: "object2"
                collectionUuid: "httpHandlerFactories"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.web.embedded.undertow.HttpHandlerFactory"
            uuid: "httpHandlerFactories"
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "autoStart"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "autoStart"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.undertow.DeploymentManagerHttpHandlerFactory"
      uuid: "object2"
      collectionUuid: "httpHandlerFactories"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ReflectionUtils"
      uuid: "ReflectionUtils.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ReflectionUtils"
        method: "findField"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.Undertow"
            valueType: "java.lang.Class"
            genericValueType: "io.undertow.Undertow"
            uuid: "uniqueUuid35"
            fixed: true
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "channels"
            valueType: "java.lang.String"
            uuid: "uniqueUuid36"
            fixed: true
      valueType: "java.lang.reflect.Field"
      uuid: "field"
    - sapientType: "CLASS"
      content: !<regular>
        value: "io.undertow.Undertow"
      valueType: "java.lang.Class"
      genericValueType: "io.undertow.Undertow"
      uuid: "uniqueUuid29"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "channels"
      valueType: "java.lang.String"
      uuid: "uniqueUuid30"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ReflectionUtils"
      uuid: "ReflectionUtils.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ReflectionUtils"
        method: "findField"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.Undertow"
            valueType: "java.lang.Class"
            genericValueType: "io.undertow.Undertow"
            uuid: "uniqueUuid35"
            fixed: true
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "channels"
            valueType: "java.lang.String"
            uuid: "uniqueUuid36"
            fixed: true
      valueType: "java.lang.reflect.Field"
      uuid: "field"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ReflectionUtils"
      uuid: "ReflectionUtils.class"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.xnio.channels.BoundChannel"
          uuid: "object4"
          collectionUuid: "object3"
          explicitCastNeeded: true
      valueType: "java.util.List"
      uuid: "object3"
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ReflectionUtils"
        method: "findField"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.Undertow"
            valueType: "java.lang.Class"
            genericValueType: "io.undertow.Undertow"
            uuid: "uniqueUuid35"
            fixed: true
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "channels"
            valueType: "java.lang.String"
            uuid: "uniqueUuid36"
            fixed: true
      valueType: "java.lang.reflect.Field"
      uuid: "field"
    - sapientType: "NULL"
      valueType: "io.undertow.Undertow"
      uuid: "fieldUndertow"
    - sapientType: "MOCK"
      valueType: "org.xnio.channels.BoundChannel"
      uuid: "object4"
      collectionUuid: "object3"
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.net.InetSocketAddress"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "socketAddress-port"
      valueType: "java.net.InetSocketAddress"
      uuid: "socketAddress"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ReflectionUtils"
      uuid: "ReflectionUtils.class"
    - sapientType: "MOCK"
      valueType: "java.lang.reflect.Field"
      uuid: "field2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.xnio.channels.BoundChannel"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ssl"
      valueType: "java.lang.String"
      uuid: "uniqueUuid37"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: "null"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
          valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServer$Port"
          uuid: "undertowWebServer.Port"
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServer$Port"
      uuid: "arrayList"
    - sapientType: "BASIC"
      content: !<regular>
        value: ", "
      valueType: "java.lang.String"
      uuid: "uniqueUuid38"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Undertow started on port null with context path 'A'"
      valueType: "java.lang.String"
      uuid: "string5"
    branches:
    - lineNumber: 81
      expression: "StringUtils.hasText(this.contextPath)"
      range: "(81,24)-(81,60)"
      evaluatedAs: true
    - lineNumber: 204
      expression: "!this.autoStart"
      range: "(204,8)-(204,22)"
      evaluatedAs: false
      internalMethodName: "getActualPorts"
    - lineNumber: 208
      expression: "for-each(extractChannels())"
      range: "(208,33)-(208,49)"
      evaluatedAs: true
      internalMethodName: "getActualPorts"
    - lineNumber: 228
      expression: "socketAddress instanceof InetSocketAddress inetSocketAddress"
      range: "(228,7)-(228,66)"
      evaluatedAs: true
      internalMethodName: "getPortFromChannel"
    - lineNumber: 230
      expression: "sslField != null"
      range: "(230,23)-(230,38)"
      evaluatedAs: true
      internalMethodName: "getPortFromChannel"
    - lineNumber: 188
      expression: "ports.size() != 1"
      range: "(188,7)-(188,23)"
      evaluatedAs: false
      internalMethodName: "getPortsDescription"
    - lineNumber: 192
      expression: "!ports.isEmpty()"
      range: "(192,7)-(192,22)"
      evaluatedAs: true
      internalMethodName: "getPortsDescription"
  - pathId: "path3"
    testPathName: "getStartLogMessageWhenSslFieldIsNullAndPortsSizeEquals1AndPortsNotIsEmpty"
    constructorSignature: "<init>(io.undertow.Undertow$Builder,java.lang.Iterable<org.springframework.boot.web.embedded.undertow.HttpHandlerFactory>,java.lang.String,boolean)\
      \ : void"
    modelFingerprint: "9C8115CC848E14F0979C9549A21ABACF"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "3FB4A24E3F21F7F671C6EC8DCEF2FE95"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      name: "deploymentManagerFactory"
      modelFingerprint: "995B00CBBEEB017577366B74339B0D5C"
      valueUuid: "object2"
      methodExercised:
        expression: "getDeploymentManager():deploymentManager"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "C7ACBCFE5616F1184610C59DE2BE7F5B"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:contextPath):boolean3"
        staticAccess: true
    - type: "STATIC"
      name: "ReflectionUtils.class.real"
      modelFingerprint: "7E78E558E921797B233EB0656218E3E4"
      valueUuid: "ReflectionUtils.class.real"
      methodExercised:
        expression: "findField(clazz:uniqueUuid39,name:uniqueUuid40):field"
        staticAccess: true
    - type: "STATIC"
      name: "ReflectionUtils.class.real"
      modelFingerprint: "B4394E886934FF175523896008CB1C09"
      valueUuid: "ReflectionUtils.class.real"
      methodExercised:
        expression: "makeAccessible(field:field):void"
        staticAccess: true
    - type: "STATIC"
      name: "ReflectionUtils.class"
      modelFingerprint: "8EDF12BD8768BFDE1B926F9D133F6E4B"
      valueUuid: "ReflectionUtils.class"
      methodExercised:
        expression: "getField(field:field,target:fieldUndertow):object3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "channel"
      modelFingerprint: "8E1231DAA6B0410BF1EAE3B68D7C9EF1"
      valueUuid: "object4"
      methodExercised:
        expression: "getLocalAddress():socketAddress"
    - type: "STATIC"
      name: "ReflectionUtils.class"
      modelFingerprint: "48E9D928337D8AF91B79F9CBDB419D42"
      valueUuid: "ReflectionUtils.class"
      methodExercised:
        expression: "findField(clazz:class,name:uniqueUuid47):field2"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "014136492887FCB31FF43B4FEAF12F25"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "collectionToDelimitedString(coll:arrayList,delim:uniqueUuid48):string2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "32DA5FFEBFCA7D527F870F53F40A0BFD"
      valueUuid: "string5"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.net.InetSocketAddress.getPort() : int"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
        parameters:
        - name: "builder"
          value:
            sapientType: "MOCK"
            valueType: "io.undertow.Undertow$Builder"
            uuid: "builder"
        - name: "httpHandlerFactories"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.web.embedded.undertow.DeploymentManagerHttpHandlerFactory"
                uuid: "object2"
                collectionUuid: "httpHandlerFactories"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.web.embedded.undertow.HttpHandlerFactory"
            uuid: "httpHandlerFactories"
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "autoStart"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "autoStart"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.undertow.DeploymentManagerHttpHandlerFactory"
      uuid: "object2"
      collectionUuid: "httpHandlerFactories"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ReflectionUtils"
      uuid: "ReflectionUtils.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ReflectionUtils"
        method: "findField"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.Undertow"
            valueType: "java.lang.Class"
            genericValueType: "io.undertow.Undertow"
            uuid: "uniqueUuid45"
            fixed: true
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "channels"
            valueType: "java.lang.String"
            uuid: "uniqueUuid46"
            fixed: true
      valueType: "java.lang.reflect.Field"
      uuid: "field"
    - sapientType: "CLASS"
      content: !<regular>
        value: "io.undertow.Undertow"
      valueType: "java.lang.Class"
      genericValueType: "io.undertow.Undertow"
      uuid: "uniqueUuid39"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "channels"
      valueType: "java.lang.String"
      uuid: "uniqueUuid40"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ReflectionUtils"
      uuid: "ReflectionUtils.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ReflectionUtils"
        method: "findField"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.Undertow"
            valueType: "java.lang.Class"
            genericValueType: "io.undertow.Undertow"
            uuid: "uniqueUuid45"
            fixed: true
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "channels"
            valueType: "java.lang.String"
            uuid: "uniqueUuid46"
            fixed: true
      valueType: "java.lang.reflect.Field"
      uuid: "field"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ReflectionUtils"
      uuid: "ReflectionUtils.class"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.xnio.channels.BoundChannel"
          uuid: "object4"
          collectionUuid: "object3"
          explicitCastNeeded: true
      valueType: "java.util.List"
      uuid: "object3"
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ReflectionUtils"
        method: "findField"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.Undertow"
            valueType: "java.lang.Class"
            genericValueType: "io.undertow.Undertow"
            uuid: "uniqueUuid45"
            fixed: true
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "channels"
            valueType: "java.lang.String"
            uuid: "uniqueUuid46"
            fixed: true
      valueType: "java.lang.reflect.Field"
      uuid: "field"
    - sapientType: "NULL"
      valueType: "io.undertow.Undertow"
      uuid: "fieldUndertow"
    - sapientType: "MOCK"
      valueType: "org.xnio.channels.BoundChannel"
      uuid: "object4"
      collectionUuid: "object3"
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.net.InetSocketAddress"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "socketAddress-port"
      valueType: "java.net.InetSocketAddress"
      uuid: "socketAddress"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ReflectionUtils"
      uuid: "ReflectionUtils.class"
    - sapientType: "NULL"
      valueType: "java.lang.reflect.Field"
      uuid: "field2"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.xnio.channels.BoundChannel"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ssl"
      valueType: "java.lang.String"
      uuid: "uniqueUuid47"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: "null"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
          valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServer$Port"
          uuid: "undertowWebServer.Port"
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServer$Port"
      uuid: "arrayList"
    - sapientType: "BASIC"
      content: !<regular>
        value: ", "
      valueType: "java.lang.String"
      uuid: "uniqueUuid48"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Undertow started on port null with context path 'A'"
      valueType: "java.lang.String"
      uuid: "string5"
    branches:
    - lineNumber: 81
      expression: "StringUtils.hasText(this.contextPath)"
      range: "(81,24)-(81,60)"
      evaluatedAs: true
    - lineNumber: 204
      expression: "!this.autoStart"
      range: "(204,8)-(204,22)"
      evaluatedAs: false
      internalMethodName: "getActualPorts"
    - lineNumber: 208
      expression: "for-each(extractChannels())"
      range: "(208,33)-(208,49)"
      evaluatedAs: true
      internalMethodName: "getActualPorts"
    - lineNumber: 228
      expression: "socketAddress instanceof InetSocketAddress inetSocketAddress"
      range: "(228,7)-(228,66)"
      evaluatedAs: true
      internalMethodName: "getPortFromChannel"
    - lineNumber: 230
      expression: "sslField != null"
      range: "(230,23)-(230,38)"
      evaluatedAs: false
      internalMethodName: "getPortFromChannel"
    - lineNumber: 188
      expression: "ports.size() != 1"
      range: "(188,7)-(188,23)"
      evaluatedAs: false
      internalMethodName: "getPortsDescription"
    - lineNumber: 192
      expression: "!ports.isEmpty()"
      range: "(192,7)-(192,22)"
      evaluatedAs: true
      internalMethodName: "getPortsDescription"
  - pathId: "path8"
    testPathName: "getStartLogMessageWhenDefaultBranchAndPortsSizeEquals1AndPortsNotIsEmpty"
    constructorSignature: "<init>(io.undertow.Undertow$Builder,java.lang.Iterable<org.springframework.boot.web.embedded.undertow.HttpHandlerFactory>,java.lang.String,boolean)\
      \ : void"
    modelFingerprint: "AD496154617697142CB6065BA3E8887C"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BFD00F5D57EA14052367FA4E962D4C4A"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      name: "deploymentManagerFactory"
      modelFingerprint: "995B00CBBEEB017577366B74339B0D5C"
      valueUuid: "object2"
      methodExercised:
        expression: "getDeploymentManager():deploymentManager"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "7331D2D60882FB1B627B49E6A6631AB0"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:contextPath):boolean3"
        staticAccess: true
    - type: "STATIC"
      name: "ReflectionUtils.class.real"
      modelFingerprint: "7E78E558E921797B233EB0656218E3E4"
      valueUuid: "ReflectionUtils.class.real"
      methodExercised:
        expression: "findField(clazz:uniqueUuid1,name:uniqueUuid2):field"
        staticAccess: true
    - type: "STATIC"
      name: "ReflectionUtils.class.real"
      modelFingerprint: "B4394E886934FF175523896008CB1C09"
      valueUuid: "ReflectionUtils.class.real"
      methodExercised:
        expression: "makeAccessible(field:field):void"
        staticAccess: true
    - type: "STATIC"
      name: "ReflectionUtils.class"
      modelFingerprint: "8EDF12BD8768BFDE1B926F9D133F6E4B"
      valueUuid: "ReflectionUtils.class"
      methodExercised:
        expression: "getField(field:field,target:fieldUndertow):object4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "channel"
      modelFingerprint: "229C40427C3B4923A4CAD5827AE1B9DA"
      valueUuid: "object5"
      methodExercised:
        expression: "getLocalAddress():socketAddress"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D2B03A9174D59080C0E60A00B52C02FE"
      valueUuid: "string3"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
        parameters:
        - name: "builder"
          value:
            sapientType: "MOCK"
            valueType: "io.undertow.Undertow$Builder"
            uuid: "builder"
        - name: "httpHandlerFactories"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.web.embedded.undertow.DeploymentManagerHttpHandlerFactory"
                uuid: "object2"
                collectionUuid: "httpHandlerFactories"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.web.embedded.undertow.HttpHandlerFactory"
            uuid: "httpHandlerFactories"
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "autoStart"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "autoStart"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.undertow.DeploymentManagerHttpHandlerFactory"
      uuid: "object2"
      collectionUuid: "httpHandlerFactories"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ReflectionUtils"
      uuid: "ReflectionUtils.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ReflectionUtils"
        method: "findField"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.Undertow"
            valueType: "java.lang.Class"
            genericValueType: "io.undertow.Undertow"
            uuid: "uniqueUuid7"
            fixed: true
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "channels"
            valueType: "java.lang.String"
            uuid: "uniqueUuid8"
            fixed: true
      valueType: "java.lang.reflect.Field"
      uuid: "field"
    - sapientType: "CLASS"
      content: !<regular>
        value: "io.undertow.Undertow"
      valueType: "java.lang.Class"
      genericValueType: "io.undertow.Undertow"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "channels"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ReflectionUtils"
      uuid: "ReflectionUtils.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ReflectionUtils"
        method: "findField"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.Undertow"
            valueType: "java.lang.Class"
            genericValueType: "io.undertow.Undertow"
            uuid: "uniqueUuid7"
            fixed: true
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "channels"
            valueType: "java.lang.String"
            uuid: "uniqueUuid8"
            fixed: true
      valueType: "java.lang.reflect.Field"
      uuid: "field"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ReflectionUtils"
      uuid: "ReflectionUtils.class"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.xnio.channels.BoundChannel"
          uuid: "object5"
          collectionUuid: "object4"
          explicitCastNeeded: true
      valueType: "java.util.List"
      uuid: "object4"
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ReflectionUtils"
        method: "findField"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.Undertow"
            valueType: "java.lang.Class"
            genericValueType: "io.undertow.Undertow"
            uuid: "uniqueUuid7"
            fixed: true
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "channels"
            valueType: "java.lang.String"
            uuid: "uniqueUuid8"
            fixed: true
      valueType: "java.lang.reflect.Field"
      uuid: "field"
    - sapientType: "NULL"
      valueType: "io.undertow.Undertow"
      uuid: "fieldUndertow"
    - sapientType: "MOCK"
      valueType: "org.xnio.channels.BoundChannel"
      uuid: "object5"
      collectionUuid: "object4"
      explicitCastNeeded: true
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.RuntimeException"
        parameters: []
      valueType: "java.lang.RuntimeException"
      uuid: "socketAddress"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Undertow started on ports unknown with context path 'A'"
      valueType: "java.lang.String"
      uuid: "string3"
    branches:
    - lineNumber: 81
      expression: "StringUtils.hasText(this.contextPath)"
      range: "(81,24)-(81,60)"
      evaluatedAs: true
    - lineNumber: 204
      expression: "!this.autoStart"
      range: "(204,8)-(204,22)"
      evaluatedAs: false
      internalMethodName: "getActualPorts"
    - lineNumber: 208
      expression: "for-each(extractChannels())"
      range: "(208,33)-(208,49)"
      evaluatedAs: true
      internalMethodName: "getActualPorts"
    - lineNumber: 213
      expression: "branch expression (line 213)"
      range: "(213,1)-(213,200)"
      evaluatedAs: true
      internalMethodName: "getActualPorts"
    - lineNumber: 188
      expression: "ports.size() != 1"
      range: "(188,7)-(188,23)"
      evaluatedAs: true
      internalMethodName: "getPortsDescription"
    - lineNumber: 192
      expression: "!ports.isEmpty()"
      range: "(192,7)-(192,22)"
      evaluatedAs: false
      internalMethodName: "getPortsDescription"
    catchBlockExercised:
      idExternalInstruction: 9
      id: 5
      catchExceptions:
      - "java.lang.Exception"
  - pathId: "path7"
    testPathName: "getStartLogMessageWhenSslFieldIsNotNullAndDefaultBranchAndPortsSizeEquals1AndPortsNotIsEmpty"
    constructorSignature: "<init>(io.undertow.Undertow$Builder,java.lang.Iterable<org.springframework.boot.web.embedded.undertow.HttpHandlerFactory>,java.lang.String,boolean)\
      \ : void"
    modelFingerprint: "B4F308DD687E404133A507C896354AFF"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "3FB4A24E3F21F7F671C6EC8DCEF2FE95"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      name: "deploymentManagerFactory"
      modelFingerprint: "995B00CBBEEB017577366B74339B0D5C"
      valueUuid: "object2"
      methodExercised:
        expression: "getDeploymentManager():deploymentManager"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "C7ACBCFE5616F1184610C59DE2BE7F5B"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:contextPath):boolean3"
        staticAccess: true
    - type: "STATIC"
      name: "ReflectionUtils.class.real"
      modelFingerprint: "7E78E558E921797B233EB0656218E3E4"
      valueUuid: "ReflectionUtils.class.real"
      methodExercised:
        expression: "findField(clazz:uniqueUuid58,name:uniqueUuid59):field"
        staticAccess: true
    - type: "STATIC"
      name: "ReflectionUtils.class.real"
      modelFingerprint: "B4394E886934FF175523896008CB1C09"
      valueUuid: "ReflectionUtils.class.real"
      methodExercised:
        expression: "makeAccessible(field:field):void"
        staticAccess: true
    - type: "STATIC"
      name: "ReflectionUtils.class"
      modelFingerprint: "8EDF12BD8768BFDE1B926F9D133F6E4B"
      valueUuid: "ReflectionUtils.class"
      methodExercised:
        expression: "getField(field:field,target:fieldUndertow):object3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "channel"
      modelFingerprint: "8E1231DAA6B0410BF1EAE3B68D7C9EF1"
      valueUuid: "object4"
      methodExercised:
        expression: "getLocalAddress():socketAddress"
    - type: "STATIC"
      name: "ReflectionUtils.class"
      modelFingerprint: "0DA648D3E65A60D8727130A74962991E"
      valueUuid: "ReflectionUtils.class"
      methodExercised:
        expression: "findField(clazz:class,name:uniqueUuid66):field2"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "014136492887FCB31FF43B4FEAF12F25"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "collectionToDelimitedString(coll:arrayList,delim:uniqueUuid67):string2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "32DA5FFEBFCA7D527F870F53F40A0BFD"
      valueUuid: "string5"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.net.InetSocketAddress.getPort() : int"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
        parameters:
        - name: "builder"
          value:
            sapientType: "MOCK"
            valueType: "io.undertow.Undertow$Builder"
            uuid: "builder"
        - name: "httpHandlerFactories"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.web.embedded.undertow.DeploymentManagerHttpHandlerFactory"
                uuid: "object2"
                collectionUuid: "httpHandlerFactories"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.web.embedded.undertow.HttpHandlerFactory"
            uuid: "httpHandlerFactories"
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "autoStart"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "autoStart"
      valueType: "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.undertow.DeploymentManagerHttpHandlerFactory"
      uuid: "object2"
      collectionUuid: "httpHandlerFactories"
    - sapientType: "MOCK"
      valueType: "io.undertow.servlet.api.DeploymentManager"
      uuid: "deploymentManager"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ReflectionUtils"
      uuid: "ReflectionUtils.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ReflectionUtils"
        method: "findField"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.Undertow"
            valueType: "java.lang.Class"
            genericValueType: "io.undertow.Undertow"
            uuid: "uniqueUuid64"
            fixed: true
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "channels"
            valueType: "java.lang.String"
            uuid: "uniqueUuid65"
            fixed: true
      valueType: "java.lang.reflect.Field"
      uuid: "field"
    - sapientType: "CLASS"
      content: !<regular>
        value: "io.undertow.Undertow"
      valueType: "java.lang.Class"
      genericValueType: "io.undertow.Undertow"
      uuid: "uniqueUuid58"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "channels"
      valueType: "java.lang.String"
      uuid: "uniqueUuid59"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ReflectionUtils"
      uuid: "ReflectionUtils.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ReflectionUtils"
        method: "findField"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.Undertow"
            valueType: "java.lang.Class"
            genericValueType: "io.undertow.Undertow"
            uuid: "uniqueUuid64"
            fixed: true
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "channels"
            valueType: "java.lang.String"
            uuid: "uniqueUuid65"
            fixed: true
      valueType: "java.lang.reflect.Field"
      uuid: "field"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ReflectionUtils"
      uuid: "ReflectionUtils.class"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.xnio.channels.BoundChannel"
          uuid: "object4"
          collectionUuid: "object3"
          explicitCastNeeded: true
      valueType: "java.util.List"
      uuid: "object3"
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ReflectionUtils"
        method: "findField"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "io.undertow.Undertow"
            valueType: "java.lang.Class"
            genericValueType: "io.undertow.Undertow"
            uuid: "uniqueUuid64"
            fixed: true
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "channels"
            valueType: "java.lang.String"
            uuid: "uniqueUuid65"
            fixed: true
      valueType: "java.lang.reflect.Field"
      uuid: "field"
    - sapientType: "NULL"
      valueType: "io.undertow.Undertow"
      uuid: "fieldUndertow"
    - sapientType: "MOCK"
      valueType: "org.xnio.channels.BoundChannel"
      uuid: "object4"
      collectionUuid: "object3"
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.net.InetSocketAddress"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "socketAddress-port"
      valueType: "java.net.InetSocketAddress"
      uuid: "socketAddress"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ReflectionUtils"
      uuid: "ReflectionUtils.class"
    - sapientType: "MOCK"
      valueType: "java.lang.reflect.Field"
      uuid: "field2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.xnio.channels.BoundChannel"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ssl"
      valueType: "java.lang.String"
      uuid: "uniqueUuid66"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: "null"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
          valueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServer$Port"
          uuid: "undertowWebServer.Port"
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.web.embedded.undertow.UndertowWebServer$Port"
      uuid: "arrayList"
    - sapientType: "BASIC"
      content: !<regular>
        value: ", "
      valueType: "java.lang.String"
      uuid: "uniqueUuid67"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Undertow started on port null with context path 'A'"
      valueType: "java.lang.String"
      uuid: "string5"
    branches:
    - lineNumber: 81
      expression: "StringUtils.hasText(this.contextPath)"
      range: "(81,24)-(81,60)"
      evaluatedAs: true
    - lineNumber: 204
      expression: "!this.autoStart"
      range: "(204,8)-(204,22)"
      evaluatedAs: false
      internalMethodName: "getActualPorts"
    - lineNumber: 208
      expression: "for-each(extractChannels())"
      range: "(208,33)-(208,49)"
      evaluatedAs: true
      internalMethodName: "getActualPorts"
    - lineNumber: 228
      expression: "socketAddress instanceof InetSocketAddress inetSocketAddress"
      range: "(228,7)-(228,66)"
      evaluatedAs: true
      internalMethodName: "getPortFromChannel"
    - lineNumber: 230
      expression: "sslField != null"
      range: "(230,23)-(230,38)"
      evaluatedAs: true
      internalMethodName: "getPortFromChannel"
    - lineNumber: 213
      expression: "branch expression (line 213)"
      range: "(213,1)-(213,200)"
      evaluatedAs: true
      internalMethodName: "getActualPorts"
    - lineNumber: 188
      expression: "ports.size() != 1"
      range: "(188,7)-(188,23)"
      evaluatedAs: false
      internalMethodName: "getPortsDescription"
    - lineNumber: 192
      expression: "!ports.isEmpty()"
      range: "(192,7)-(192,22)"
      evaluatedAs: true
      internalMethodName: "getPortsDescription"
    catchBlockExercised:
      idExternalInstruction: 9
      id: 5
      catchExceptions:
      - "java.lang.Exception"
- method:
    name: "getDeploymentManager"
    sourceCodeSignature: "DeploymentManager getDeploymentManager()"
    returnType: "io.undertow.servlet.api.DeploymentManager"
    instructionFingerprint: "08FC104041EC6099905BA0D964007183"
  paths:
  - pathId: "path1"
    testPathName: "getDeploymentManagerTest"
    constructorSignature: "<init>(io.undertow.Undertow$Builder,java.lang.Iterable<org.springframework.boot.web.embedded.undertow.HttpHandlerFactory>,java.lang.String,boolean)\
      \ : void"
    modelFingerprint: "BF3C552233336C0F3BB4F936A9A4704A"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
