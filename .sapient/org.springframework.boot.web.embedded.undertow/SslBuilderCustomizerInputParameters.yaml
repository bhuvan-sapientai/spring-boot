---
modelFingerprint: "5EEC58177A43BB29C8CD8E3E17231279"
targetClass:
  fullClassName: "org.springframework.boot.web.embedded.undertow.SslBuilderCustomizer"
methods:
- method:
    name: "customize"
    sourceCodeSignature: "void customize(Undertow.Builder builder)"
    returnType: "void"
    parameters:
    - name: "builder"
      type: "io.undertow.Undertow$Builder"
    instructionFingerprint: "36E2E60F2BD2E014E180C34BFCFF40AB"
  paths:
  - pathId: "path1"
    testPathName: "customizeWhenOptionsGetCiphersIsNotNull"
    constructorSignature: "<init>(int,java.net.InetAddress,org.springframework.boot.web.server.Ssl$ClientAuth,org.springframework.boot.ssl.SslBundle)\
      \ : void"
    modelFingerprint: "FC0222CA0F5C1F90C817A5E5AAEB30B9"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "30956B3A27C049148CA6965A67C46952"
      valueUuid: "target"
    - type: "INPUT"
      name: "builder"
      modelFingerprint: "09E409DEE9F8F7D58853C56AB3348663"
      valueUuid: "builder"
    - type: "FIELD"
      name: "sslBundle"
      modelFingerprint: "D30BBA7AB4B917F39097A2A65AF0C706"
      valueUuid: "sslBundle"
      methodExercised:
        expression: "getOptions():sslOptions"
    - type: "FIELD"
      name: "sslBundle"
      modelFingerprint: "97FC50FE5E43AFA28E8F666314D02DA5"
      valueUuid: "sslBundle"
      methodExercised:
        expression: "createSslContext():sSLContext"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "32F6F5E17EA58EFA5A4A0BCB69ED57DB"
      valueUuid: "builder"
      methodExercised:
        expression: "addHttpsListener(port:port,host:uniqueUuid1,sslContext:sSLContext):undertow.Builder"
    - type: "STATIC"
      name: "Ssl.ClientAuth.class.real"
      modelFingerprint: "07664B203D399A5DD9AFE1ACC47AB1F9"
      valueUuid: "Ssl.ClientAuth.class.real"
      methodExercised:
        expression: "map(clientAuth:clientAuth,none:Enum-org.xnio.SslClientAuthMode-NOT_REQUESTED,want:Enum-org.xnio.SslClientAuthMode-REQUESTED,need:Enum-org.xnio.SslClientAuthMode-REQUIRED):sslClientAuthMode"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "70A79DA38AC633ADC004EC5B888164C0"
      valueUuid: "builder"
      methodExercised:
        expression: "setSocketOption(option:option,value:sslClientAuthMode):undertow.Builder2"
    - type: "LOCAL_VARIABLE"
      name: "options"
      modelFingerprint: "64C9161995BBED0B41AB11A83AA25EDC"
      valueUuid: "sslOptions"
      methodExercised:
        expression: "getEnabledProtocols():stringArray"
    - type: "LOCAL_VARIABLE"
      name: "options"
      modelFingerprint: "64C9161995BBED0B41AB11A83AA25EDC"
      valueUuid: "sslOptions"
      methodExercised:
        expression: "getEnabledProtocols():stringArray2"
    - type: "STATIC"
      name: "Sequence.class.real"
      modelFingerprint: "EF25A93E19A44115D41B0E1DE7ADDC86"
      valueUuid: "Sequence.class.real"
      methodExercised:
        expression: "of(members:stringArray2):sequence"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "58A4AF9BA8901856584DAA066C15E2C4"
      valueUuid: "builder"
      methodExercised:
        expression: "setSocketOption(option:option2,value:sequence):undertow.Builder3"
    - type: "LOCAL_VARIABLE"
      name: "options"
      modelFingerprint: "0E66F9C360EB6426AC057606DD1A218B"
      valueUuid: "sslOptions"
      methodExercised:
        expression: "getCiphers():stringArray3"
    - type: "LOCAL_VARIABLE"
      name: "options"
      modelFingerprint: "0E66F9C360EB6426AC057606DD1A218B"
      valueUuid: "sslOptions"
      methodExercised:
        expression: "getCiphers():stringArray4"
    - type: "STATIC"
      name: "Sequence.class.real"
      modelFingerprint: "EF25A93E19A44115D41B0E1DE7ADDC86"
      valueUuid: "Sequence.class.real"
      methodExercised:
        expression: "of(members:stringArray4):sequence2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "58A4AF9BA8901856584DAA066C15E2C4"
      valueUuid: "builder"
      methodExercised:
        expression: "setSocketOption(option:option3,value:sequence2):undertow.Builder4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.SslBuilderCustomizer"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
        - name: "address"
          value:
            sapientType: "NULL"
            valueType: "java.net.InetAddress"
            uuid: "address"
            fixed: true
        - name: "clientAuth"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NEED"
            valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
            uuid: "clientAuth"
        - name: "sslBundle"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "sslBundle"
      valueType: "org.springframework.boot.web.embedded.undertow.SslBuilderCustomizer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "builder"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "sslOptions"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle"
    - sapientType: "MOCK"
      valueType: "javax.net.ssl.SSLContext"
      uuid: "sSLContext"
    - sapientType: "MOCK"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "builder"
    - sapientType: "MOCK"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "port"
    - sapientType: "BASIC"
      content: !<regular>
        value: "0.0.0.0"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "javax.net.ssl.SSLContext"
      uuid: "sSLContext"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
      uuid: "Ssl.ClientAuth.class.real"
    - sapientType: "ENUM"
      content: !<regular>
        value: "REQUIRED"
      valueType: "org.xnio.SslClientAuthMode"
      uuid: "sslClientAuthMode"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NEED"
      valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
      uuid: "clientAuth"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NOT_REQUESTED"
      valueType: "org.xnio.SslClientAuthMode"
      uuid: "Enum-org.xnio.SslClientAuthMode-NOT_REQUESTED"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "REQUESTED"
      valueType: "org.xnio.SslClientAuthMode"
      uuid: "Enum-org.xnio.SslClientAuthMode-REQUESTED"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "REQUIRED"
      valueType: "org.xnio.SslClientAuthMode"
      uuid: "Enum-org.xnio.SslClientAuthMode-REQUIRED"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "builder"
    - sapientType: "MOCK"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder2"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.xnio.Options"
        fieldName: "SSL_CLIENT_AUTH_MODE"
      valueType: "org.xnio.Option"
      uuid: "option"
    - sapientType: "ENUM"
      content: !<regular>
        value: "REQUIRED"
      valueType: "org.xnio.SslClientAuthMode"
      uuid: "sslClientAuthMode"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "sslOptions"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "sslOptions"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray2"
    - sapientType: "REAL"
      valueType: "org.xnio.Sequence"
      uuid: "Sequence.class.real"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters:
        - name: "members"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Object[]"
            uuid: "sequence-members"
        values:
        - sapientType: "ARRAY"
          content: !<array>
            values: {}
          valueType: "java.lang.String[]"
          uuid: "stringArray2"
        factoryMethod: "of"
      valueType: "org.xnio.Sequence"
      uuid: "sequence"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray2"
    - sapientType: "MOCK"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "builder"
    - sapientType: "MOCK"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder3"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.xnio.Options"
        fieldName: "SSL_ENABLED_PROTOCOLS"
      valueType: "org.xnio.Option"
      uuid: "option2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters:
        - name: "members"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Object[]"
            uuid: "sequence-members"
        values:
        - sapientType: "ARRAY"
          content: !<array>
            values: {}
          valueType: "java.lang.String[]"
          uuid: "stringArray2"
        factoryMethod: "of"
      valueType: "org.xnio.Sequence"
      uuid: "sequence"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "sslOptions"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "sslOptions"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray4"
    - sapientType: "REAL"
      valueType: "org.xnio.Sequence"
      uuid: "Sequence.class.real"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters:
        - name: "members"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Object[]"
            uuid: "sequence2-members"
        values:
        - sapientType: "ARRAY"
          content: !<array>
            values: {}
          valueType: "java.lang.String[]"
          uuid: "stringArray4"
        factoryMethod: "of"
      valueType: "org.xnio.Sequence"
      uuid: "sequence2"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray4"
    - sapientType: "MOCK"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "builder"
    - sapientType: "MOCK"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.xnio.Options"
        fieldName: "SSL_ENABLED_CIPHER_SUITES"
      valueType: "org.xnio.Option"
      uuid: "option3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters:
        - name: "members"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Object[]"
            uuid: "sequence2-members"
        values:
        - sapientType: "ARRAY"
          content: !<array>
            values: {}
          valueType: "java.lang.String[]"
          uuid: "stringArray4"
        factoryMethod: "of"
      valueType: "org.xnio.Sequence"
      uuid: "sequence2"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 73
      expression: "this.address == null"
      range: "(73,7)-(73,26)"
      evaluatedAs: true
      internalMethodName: "getListenAddress"
    - lineNumber: 64
      expression: "options.getEnabledProtocols() != null"
      range: "(64,7)-(64,43)"
      evaluatedAs: true
    - lineNumber: 67
      expression: "options.getCiphers() != null"
      range: "(67,7)-(67,34)"
      evaluatedAs: true
  - pathId: "path5"
    testPathName: "customizeWhenThisAddressIsNotNullAndOptionsGetEnabledProtocolsIsNullAndOptionsGetCiphersIsNull"
    constructorSignature: "<init>(int,java.net.InetAddress,org.springframework.boot.web.server.Ssl$ClientAuth,org.springframework.boot.ssl.SslBundle)\
      \ : void"
    modelFingerprint: "2910ADD5E37F9597379C8AA8E59DD8E3"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "74A0DC3564AE05459FD87DC365D5EAE4"
      valueUuid: "target"
    - type: "INPUT"
      name: "builder"
      modelFingerprint: "09E409DEE9F8F7D58853C56AB3348663"
      valueUuid: "builder"
    - type: "FIELD"
      name: "sslBundle"
      modelFingerprint: "8DE5D1C99ED124C264ACB42F3EC750A8"
      valueUuid: "sslBundle"
      methodExercised:
        expression: "getOptions():sslOptions"
    - type: "FIELD"
      name: "sslBundle"
      modelFingerprint: "C12EE997935983C7C4187D35A4925968"
      valueUuid: "sslBundle"
      methodExercised:
        expression: "createSslContext():sSLContext"
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "1CB3D699107FD8850AF4F82B769A78ED"
      valueUuid: "builder"
      methodExercised:
        expression: "addHttpsListener(port:port,host:string,sslContext:sSLContext):undertow.Builder"
    - type: "STATIC"
      name: "Ssl.ClientAuth.class.real"
      modelFingerprint: "06D307D20E6DF3EE44F9B4BFDF049DE4"
      valueUuid: "Ssl.ClientAuth.class.real"
      methodExercised:
        expression: "map(clientAuth:clientAuth,none:Enum-org.xnio.SslClientAuthMode-NOT_REQUESTED,want:Enum-org.xnio.SslClientAuthMode-REQUESTED,need:Enum-org.xnio.SslClientAuthMode-REQUIRED):sslClientAuthMode"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "C06EF1B6FC823821DB0300ACC87D34BB"
      valueUuid: "builder"
      methodExercised:
        expression: "setSocketOption(option:option,value:sslClientAuthMode):undertow.Builder2"
    - type: "LOCAL_VARIABLE"
      name: "options"
      modelFingerprint: "39EDBCFE2AF7D00DF69B1162A38956FB"
      valueUuid: "sslOptions"
      methodExercised:
        expression: "getEnabledProtocols():stringArray"
    - type: "LOCAL_VARIABLE"
      name: "options"
      modelFingerprint: "8FFC4A4F6085AF5EDAA18650876181F9"
      valueUuid: "sslOptions"
      methodExercised:
        expression: "getCiphers():stringArray2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.undertow.SslBuilderCustomizer"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
        - name: "address"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.net.InetAddress"
              method: "getLoopbackAddress"
              methodParameters: []
            valueType: "java.net.InetAddress"
            uuid: "address"
        - name: "clientAuth"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NEED"
            valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
            uuid: "clientAuth"
        - name: "sslBundle"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "sslBundle"
      valueType: "org.springframework.boot.web.embedded.undertow.SslBuilderCustomizer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "builder"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "sslOptions"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle"
    - sapientType: "MOCK"
      valueType: "javax.net.ssl.SSLContext"
      uuid: "sSLContext"
    - sapientType: "MOCK"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "builder"
    - sapientType: "MOCK"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "port"
    - sapientType: "BASIC"
      content: !<regular>
        value: "127.0.0.1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "javax.net.ssl.SSLContext"
      uuid: "sSLContext"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
      uuid: "Ssl.ClientAuth.class.real"
    - sapientType: "ENUM"
      content: !<regular>
        value: "REQUIRED"
      valueType: "org.xnio.SslClientAuthMode"
      uuid: "sslClientAuthMode"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NEED"
      valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
      uuid: "clientAuth"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NOT_REQUESTED"
      valueType: "org.xnio.SslClientAuthMode"
      uuid: "Enum-org.xnio.SslClientAuthMode-NOT_REQUESTED"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "REQUESTED"
      valueType: "org.xnio.SslClientAuthMode"
      uuid: "Enum-org.xnio.SslClientAuthMode-REQUESTED"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "REQUIRED"
      valueType: "org.xnio.SslClientAuthMode"
      uuid: "Enum-org.xnio.SslClientAuthMode-REQUIRED"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "builder"
    - sapientType: "MOCK"
      valueType: "io.undertow.Undertow$Builder"
      uuid: "undertow.Builder2"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.xnio.Options"
        fieldName: "SSL_CLIENT_AUTH_MODE"
      valueType: "org.xnio.Option"
      uuid: "option"
    - sapientType: "ENUM"
      content: !<regular>
        value: "REQUIRED"
      valueType: "org.xnio.SslClientAuthMode"
      uuid: "sslClientAuthMode"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "sslOptions"
    - sapientType: "NULL"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "sslOptions"
    - sapientType: "NULL"
      valueType: "java.lang.String[]"
      uuid: "stringArray2"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 73
      expression: "this.address == null"
      range: "(73,7)-(73,26)"
      evaluatedAs: false
      internalMethodName: "getListenAddress"
    - lineNumber: 64
      expression: "options.getEnabledProtocols() != null"
      range: "(64,7)-(64,43)"
      evaluatedAs: false
    - lineNumber: 67
      expression: "options.getCiphers() != null"
      range: "(67,7)-(67,34)"
      evaluatedAs: false
