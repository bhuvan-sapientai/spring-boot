---
modelFingerprint: "EE209D737A2295FC0B5B138CFFC4B8E9"
targetClass:
  fullClassName: "org.springframework.boot.jdbc.metadata.OracleUcpDataSourcePoolMetadata"
methods:
- method:
    name: "getActive"
    sourceCodeSignature: "Integer getActive()"
    returnType: "java.lang.Integer"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.sql.SQLException"
    instructionFingerprint: "7C1E5AC381ADA6E3B4C698C89F8A97E4"
  paths:
  - pathId: "path1"
    testPathName: "getActiveTest"
    constructorSignature: "<init>(oracle.ucp.jdbc.PoolDataSource) : void"
    modelFingerprint: "5B8877FF7D8F50957B60E8BBEB9BF547"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4530BDD08081F87B3F04608A116C100D"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "33450F051322948D19297512BA990AC7"
      valueUuid: "dataSource"
      methodExercised:
        expression: "getBorrowedConnectionsCount():int1"
        throwsExceptions:
        - "java.sql.SQLException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "CDFDC1FA7268393739BDAB9A38825FFB"
      valueUuid: "integer"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.jdbc.metadata.OracleUcpDataSourcePoolMetadata"
        parameters:
        - name: "dataSource"
          value:
            sapientType: "MOCK"
            valueType: "oracle.ucp.jdbc.PoolDataSource"
            uuid: "dataSource"
      valueType: "org.springframework.boot.jdbc.metadata.OracleUcpDataSourcePoolMetadata"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "oracle.ucp.jdbc.PoolDataSource"
      uuid: "dataSource"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int1"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "java.lang.Integer"
      uuid: "integer"
  - pathId: "path2"
    testPathName: "getActiveWhenCaughtSQLException"
    constructorSignature: "<init>(oracle.ucp.jdbc.PoolDataSource) : void"
    modelFingerprint: "F9EC4B9B645B65B014501A587B1BD415"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4530BDD08081F87B3F04608A116C100D"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "D9782A382D7535226986DA0A603F3B01"
      valueUuid: "dataSource"
      methodExercised:
        expression: "getBorrowedConnectionsCount():int1"
        throwsExceptions:
        - "java.sql.SQLException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5A70FB44CB0FE852D4EB094C65863EF4"
      valueUuid: "integer"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.jdbc.metadata.OracleUcpDataSourcePoolMetadata"
        parameters:
        - name: "dataSource"
          value:
            sapientType: "MOCK"
            valueType: "oracle.ucp.jdbc.PoolDataSource"
            uuid: "dataSource"
      valueType: "org.springframework.boot.jdbc.metadata.OracleUcpDataSourcePoolMetadata"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "oracle.ucp.jdbc.PoolDataSource"
      uuid: "dataSource"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.sql.SQLException"
        parameters: []
      valueType: "java.sql.SQLException"
      uuid: "int1"
    - sapientType: "NULL"
      valueType: "java.lang.Integer"
      uuid: "integer"
      fixed: true
    branches:
    - lineNumber: 44
      expression: "catch-exception (SQLException)"
      range: "(44,3)-(44,24)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.sql.SQLException"
- method:
    name: "getIdle"
    sourceCodeSignature: "Integer getIdle()"
    returnType: "java.lang.Integer"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.sql.SQLException"
    instructionFingerprint: "8AD1A245A60EF65C54BC9E51BD4683B3"
  paths:
  - pathId: "path1"
    testPathName: "getIdleTest"
    constructorSignature: "<init>(oracle.ucp.jdbc.PoolDataSource) : void"
    modelFingerprint: "29352BA7AC0A74E59FA6B26F37EBD7BE"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4530BDD08081F87B3F04608A116C100D"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "966E2240890E266DCD41D664486E081A"
      valueUuid: "dataSource"
      methodExercised:
        expression: "getAvailableConnectionsCount():int1"
        throwsExceptions:
        - "java.sql.SQLException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "CDFDC1FA7268393739BDAB9A38825FFB"
      valueUuid: "integer"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.jdbc.metadata.OracleUcpDataSourcePoolMetadata"
        parameters:
        - name: "dataSource"
          value:
            sapientType: "MOCK"
            valueType: "oracle.ucp.jdbc.PoolDataSource"
            uuid: "dataSource"
      valueType: "org.springframework.boot.jdbc.metadata.OracleUcpDataSourcePoolMetadata"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "oracle.ucp.jdbc.PoolDataSource"
      uuid: "dataSource"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int1"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "java.lang.Integer"
      uuid: "integer"
  - pathId: "path2"
    testPathName: "getIdleWhenCaughtSQLException"
    constructorSignature: "<init>(oracle.ucp.jdbc.PoolDataSource) : void"
    modelFingerprint: "81DE50FA8E7FE4139F92DC1D39192DC6"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4530BDD08081F87B3F04608A116C100D"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "37D718851310E75E9E689CDAB9B61CAE"
      valueUuid: "dataSource"
      methodExercised:
        expression: "getAvailableConnectionsCount():int1"
        throwsExceptions:
        - "java.sql.SQLException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5A70FB44CB0FE852D4EB094C65863EF4"
      valueUuid: "integer"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.jdbc.metadata.OracleUcpDataSourcePoolMetadata"
        parameters:
        - name: "dataSource"
          value:
            sapientType: "MOCK"
            valueType: "oracle.ucp.jdbc.PoolDataSource"
            uuid: "dataSource"
      valueType: "org.springframework.boot.jdbc.metadata.OracleUcpDataSourcePoolMetadata"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "oracle.ucp.jdbc.PoolDataSource"
      uuid: "dataSource"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.sql.SQLException"
        parameters: []
      valueType: "java.sql.SQLException"
      uuid: "int1"
    - sapientType: "NULL"
      valueType: "java.lang.Integer"
      uuid: "integer"
      fixed: true
    branches:
    - lineNumber: 54
      expression: "catch-exception (SQLException)"
      range: "(54,3)-(54,24)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.sql.SQLException"
- method:
    name: "getMax"
    sourceCodeSignature: "Integer getMax()"
    returnType: "java.lang.Integer"
    instructionFingerprint: "CCAAD40CB095582C42583527A6629702"
  paths:
  - pathId: "path1"
    testPathName: "getMaxTest"
    constructorSignature: "<init>(oracle.ucp.jdbc.PoolDataSource) : void"
    modelFingerprint: "B6AA00EAA80144CCCB789A1634527ADB"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4530BDD08081F87B3F04608A116C100D"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "FC89E94C6460BA465A8160A905E1D8BA"
      valueUuid: "dataSource"
      methodExercised:
        expression: "getMaxPoolSize():int1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "CDFDC1FA7268393739BDAB9A38825FFB"
      valueUuid: "integer"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.jdbc.metadata.OracleUcpDataSourcePoolMetadata"
        parameters:
        - name: "dataSource"
          value:
            sapientType: "MOCK"
            valueType: "oracle.ucp.jdbc.PoolDataSource"
            uuid: "dataSource"
      valueType: "org.springframework.boot.jdbc.metadata.OracleUcpDataSourcePoolMetadata"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "oracle.ucp.jdbc.PoolDataSource"
      uuid: "dataSource"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int1"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "java.lang.Integer"
      uuid: "integer"
- method:
    name: "getMin"
    sourceCodeSignature: "Integer getMin()"
    returnType: "java.lang.Integer"
    instructionFingerprint: "1F379BA7CD311EA04CB4ED000AC05810"
  paths:
  - pathId: "path1"
    testPathName: "getMinTest"
    constructorSignature: "<init>(oracle.ucp.jdbc.PoolDataSource) : void"
    modelFingerprint: "8140A820A045905E8F5DE59FC8EB9DBE"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4530BDD08081F87B3F04608A116C100D"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "07047555EC9B5658B3447A2BDD311FDC"
      valueUuid: "dataSource"
      methodExercised:
        expression: "getMinPoolSize():int1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "CDFDC1FA7268393739BDAB9A38825FFB"
      valueUuid: "integer"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.jdbc.metadata.OracleUcpDataSourcePoolMetadata"
        parameters:
        - name: "dataSource"
          value:
            sapientType: "MOCK"
            valueType: "oracle.ucp.jdbc.PoolDataSource"
            uuid: "dataSource"
      valueType: "org.springframework.boot.jdbc.metadata.OracleUcpDataSourcePoolMetadata"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "oracle.ucp.jdbc.PoolDataSource"
      uuid: "dataSource"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int1"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "java.lang.Integer"
      uuid: "integer"
- method:
    name: "getValidationQuery"
    sourceCodeSignature: "String getValidationQuery()"
    returnType: "java.lang.String"
    instructionFingerprint: "B7567CAE5C1DF0D860AACA402F44FED5"
  paths:
  - pathId: "path1"
    testPathName: "getValidationQueryTest"
    constructorSignature: "<init>(oracle.ucp.jdbc.PoolDataSource) : void"
    modelFingerprint: "B91C36B63DE5ABB89ECBB31868985CB7"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4530BDD08081F87B3F04608A116C100D"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "4E543B3C589B2907F873B67E423AF200"
      valueUuid: "dataSource"
      methodExercised:
        expression: "getSQLForValidateConnection():string"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D446A609419428DDEAA49A58091F3986"
      valueUuid: "string"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.jdbc.metadata.OracleUcpDataSourcePoolMetadata"
        parameters:
        - name: "dataSource"
          value:
            sapientType: "MOCK"
            valueType: "oracle.ucp.jdbc.PoolDataSource"
            uuid: "dataSource"
      valueType: "org.springframework.boot.jdbc.metadata.OracleUcpDataSourcePoolMetadata"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "oracle.ucp.jdbc.PoolDataSource"
      uuid: "dataSource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getSQLForValidateConnection1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getSQLForValidateConnection1"
      valueType: "java.lang.String"
      uuid: "string"
- method:
    name: "getDefaultAutoCommit"
    sourceCodeSignature: "Boolean getDefaultAutoCommit()"
    returnType: "java.lang.Boolean"
    instructionFingerprint: "DA18574AC57A0C368785E46A1AC95AE7"
  paths:
  - pathId: "path1"
    testPathName: "getDefaultAutoCommitWhenStringUtilsHasTextAutoCommit"
    constructorSignature: "<init>(oracle.ucp.jdbc.PoolDataSource) : void"
    modelFingerprint: "03F68B8911D31D505E8532C20CF5C40D"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4530BDD08081F87B3F04608A116C100D"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "9F044AE1843CFDADBB2EEC7FE6F0F9D7"
      valueUuid: "dataSource"
      methodExercised:
        expression: "getConnectionProperty(arg0:uniqueUuid1):string"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "A91647CB447119BB97CB86EA51675C61"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:string):boolean1"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C13505FC3204854504911CE43A2B6FCB"
      valueUuid: "boolean2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.jdbc.metadata.OracleUcpDataSourcePoolMetadata"
        parameters:
        - name: "dataSource"
          value:
            sapientType: "MOCK"
            valueType: "oracle.ucp.jdbc.PoolDataSource"
            uuid: "dataSource"
      valueType: "org.springframework.boot.jdbc.metadata.OracleUcpDataSourcePoolMetadata"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "oracle.ucp.jdbc.PoolDataSource"
      uuid: "dataSource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "autoCommit"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "java.lang.Boolean"
      uuid: "boolean2"
    branches:
    - lineNumber: 77
      expression: "StringUtils.hasText(autoCommit)"
      range: "(77,10)-(77,40)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "getDefaultAutoCommitWhenStringUtilsNotHasTextAutoCommit"
    constructorSignature: "<init>(oracle.ucp.jdbc.PoolDataSource) : void"
    modelFingerprint: "C714432039483115A7A1B7202A220264"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4530BDD08081F87B3F04608A116C100D"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "9F044AE1843CFDADBB2EEC7FE6F0F9D7"
      valueUuid: "dataSource"
      methodExercised:
        expression: "getConnectionProperty(arg0:uniqueUuid2):string"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "54487C1342835B70D21156D482BFAC73"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasText(str:string):boolean1"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "22CAA21532BE1F7B8A04B416D8746CBE"
      valueUuid: "boolean2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.jdbc.metadata.OracleUcpDataSourcePoolMetadata"
        parameters:
        - name: "dataSource"
          value:
            sapientType: "MOCK"
            valueType: "oracle.ucp.jdbc.PoolDataSource"
            uuid: "dataSource"
      valueType: "org.springframework.boot.jdbc.metadata.OracleUcpDataSourcePoolMetadata"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "oracle.ucp.jdbc.PoolDataSource"
      uuid: "dataSource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "autoCommit"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "NULL"
      valueType: "java.lang.Boolean"
      uuid: "boolean2"
      fixed: true
    branches:
    - lineNumber: 77
      expression: "StringUtils.hasText(autoCommit)"
      range: "(77,10)-(77,40)"
      evaluatedAs: false
