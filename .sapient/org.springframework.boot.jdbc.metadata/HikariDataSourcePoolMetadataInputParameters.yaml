---
modelFingerprint: "7F01243124F07C8B7AD27DCEAD364399"
targetClass:
  fullClassName: "org.springframework.boot.jdbc.metadata.HikariDataSourcePoolMetadata"
methods:
- method:
    name: "getActive"
    sourceCodeSignature: "Integer getActive()"
    returnType: "java.lang.Integer"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "0EFAE251F3D030E1BE978A3214246067"
  paths:
  - pathId: "path1"
    testPathName: "getActiveTest"
    constructorSignature: "<init>(com.zaxxer.hikari.HikariDataSource) : void"
    modelFingerprint: "F3EB1FACBCFDBE7DFDAF293AA169F58B"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "9E17E800421BB512FE444EDDC5971021"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A0796540E6FBA923C5E25C7CF9A4822A"
      valueUuid: "directFieldAccessor"
      methodExercised:
        expression: "getPropertyValue(propertyName:uniqueUuid1):object"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "845FD19476360720FF29A85CFF9DF4D4"
      valueUuid: "object"
      methodExercised:
        expression: "getActiveConnections():int1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "CDFDC1FA7268393739BDAB9A38825FFB"
      valueUuid: "integer"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return (HikariPool) new DirectFieldAccessor(getDataSource()).getPropertyValue(\\\
        \"pool\\\");"
      lineNumber: 59
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type DirectFieldAccessor - Method: getPropertyValue"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.jdbc.metadata.HikariDataSourcePoolMetadata"
        parameters:
        - name: "dataSource"
          value:
            sapientType: "MOCK"
            valueType: "com.zaxxer.hikari.HikariDataSource"
            uuid: "dataSource"
      valueType: "org.springframework.boot.jdbc.metadata.HikariDataSourcePoolMetadata"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.beans.DirectFieldAccessor"
        parameters:
        - name: "object"
          value:
            sapientType: "MOCK"
            valueType: "com.zaxxer.hikari.HikariDataSource"
            uuid: "dataSource"
      valueType: "org.springframework.beans.DirectFieldAccessor"
      uuid: "directFieldAccessor"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.beans.DirectFieldAccessor"
            parameters:
            - name: "object"
              value:
                sapientType: "MOCK"
                valueType: "com.zaxxer.hikari.HikariDataSource"
                uuid: "dataSource"
          valueType: "org.springframework.beans.DirectFieldAccessor"
          uuid: "directFieldAccessor"
          fixed: true
        methodParameters:
        - name: "propertyName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pool"
            valueType: "java.lang.String"
            uuid: "uniqueUuid3"
            fixed: true
        methodName: "getPropertyValue"
      valueType: "com.zaxxer.hikari.pool.HikariPool"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "pool"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.beans.DirectFieldAccessor"
            parameters:
            - name: "object"
              value:
                sapientType: "MOCK"
                valueType: "com.zaxxer.hikari.HikariDataSource"
                uuid: "dataSource"
          valueType: "org.springframework.beans.DirectFieldAccessor"
          uuid: "directFieldAccessor"
          fixed: true
        methodParameters:
        - name: "propertyName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pool"
            valueType: "java.lang.String"
            uuid: "uniqueUuid3"
            fixed: true
        methodName: "getPropertyValue"
      valueType: "com.zaxxer.hikari.pool.HikariPool"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int1"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "java.lang.Integer"
      uuid: "integer"
  - pathId: "path2"
    testPathName: "getActiveWhenCaughtException"
    constructorSignature: "<init>(com.zaxxer.hikari.HikariDataSource) : void"
    modelFingerprint: "57F750D1110D12AF475FC3937CB5902F"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "9E17E800421BB512FE444EDDC5971021"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A0796540E6FBA923C5E25C7CF9A4822A"
      valueUuid: "directFieldAccessor"
      methodExercised:
        expression: "getPropertyValue(propertyName:uniqueUuid4):object"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "845FD19476360720FF29A85CFF9DF4D4"
      valueUuid: "object"
      methodExercised:
        expression: "getActiveConnections():int1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5A70FB44CB0FE852D4EB094C65863EF4"
      valueUuid: "integer2"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return (HikariPool) new DirectFieldAccessor(getDataSource()).getPropertyValue(\\\
        \"pool\\\");"
      lineNumber: 59
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type DirectFieldAccessor - Method: getPropertyValue"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.jdbc.metadata.HikariDataSourcePoolMetadata"
        parameters:
        - name: "dataSource"
          value:
            sapientType: "MOCK"
            valueType: "com.zaxxer.hikari.HikariDataSource"
            uuid: "dataSource"
      valueType: "org.springframework.boot.jdbc.metadata.HikariDataSourcePoolMetadata"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.beans.DirectFieldAccessor"
        parameters:
        - name: "object"
          value:
            sapientType: "MOCK"
            valueType: "com.zaxxer.hikari.HikariDataSource"
            uuid: "dataSource"
      valueType: "org.springframework.beans.DirectFieldAccessor"
      uuid: "directFieldAccessor"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.beans.DirectFieldAccessor"
            parameters:
            - name: "object"
              value:
                sapientType: "MOCK"
                valueType: "com.zaxxer.hikari.HikariDataSource"
                uuid: "dataSource"
          valueType: "org.springframework.beans.DirectFieldAccessor"
          uuid: "directFieldAccessor"
          fixed: true
        methodParameters:
        - name: "propertyName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pool"
            valueType: "java.lang.String"
            uuid: "uniqueUuid6"
            fixed: true
        methodName: "getPropertyValue"
      valueType: "com.zaxxer.hikari.pool.HikariPool"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "pool"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.beans.DirectFieldAccessor"
            parameters:
            - name: "object"
              value:
                sapientType: "MOCK"
                valueType: "com.zaxxer.hikari.HikariDataSource"
                uuid: "dataSource"
          valueType: "org.springframework.beans.DirectFieldAccessor"
          uuid: "directFieldAccessor"
          fixed: true
        methodParameters:
        - name: "propertyName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pool"
            valueType: "java.lang.String"
            uuid: "uniqueUuid6"
            fixed: true
        methodName: "getPropertyValue"
      valueType: "com.zaxxer.hikari.pool.HikariPool"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int1"
    - sapientType: "NULL"
      valueType: "java.lang.Integer"
      uuid: "integer2"
      fixed: true
    branches:
    - lineNumber: 43
      expression: "catch-exception (Exception)"
      range: "(43,3)-(43,21)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
- method:
    name: "getIdle"
    sourceCodeSignature: "Integer getIdle()"
    returnType: "java.lang.Integer"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "07F23EA13F686948B9C0590D1DD67D6D"
  paths:
  - pathId: "path1"
    testPathName: "getIdleTest"
    constructorSignature: "<init>(com.zaxxer.hikari.HikariDataSource) : void"
    modelFingerprint: "534F1DC74E582CED4CEC61E232698FDB"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "9E17E800421BB512FE444EDDC5971021"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A0796540E6FBA923C5E25C7CF9A4822A"
      valueUuid: "directFieldAccessor"
      methodExercised:
        expression: "getPropertyValue(propertyName:uniqueUuid7):object"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "3A8D2C9A8C3A0BD55C3BBEEACA12F259"
      valueUuid: "object"
      methodExercised:
        expression: "getIdleConnections():int1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "CDFDC1FA7268393739BDAB9A38825FFB"
      valueUuid: "integer"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return (HikariPool) new DirectFieldAccessor(getDataSource()).getPropertyValue(\\\
        \"pool\\\");"
      lineNumber: 59
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type DirectFieldAccessor - Method: getPropertyValue"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.jdbc.metadata.HikariDataSourcePoolMetadata"
        parameters:
        - name: "dataSource"
          value:
            sapientType: "MOCK"
            valueType: "com.zaxxer.hikari.HikariDataSource"
            uuid: "dataSource"
      valueType: "org.springframework.boot.jdbc.metadata.HikariDataSourcePoolMetadata"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.beans.DirectFieldAccessor"
        parameters:
        - name: "object"
          value:
            sapientType: "MOCK"
            valueType: "com.zaxxer.hikari.HikariDataSource"
            uuid: "dataSource"
      valueType: "org.springframework.beans.DirectFieldAccessor"
      uuid: "directFieldAccessor"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.beans.DirectFieldAccessor"
            parameters:
            - name: "object"
              value:
                sapientType: "MOCK"
                valueType: "com.zaxxer.hikari.HikariDataSource"
                uuid: "dataSource"
          valueType: "org.springframework.beans.DirectFieldAccessor"
          uuid: "directFieldAccessor"
          fixed: true
        methodParameters:
        - name: "propertyName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pool"
            valueType: "java.lang.String"
            uuid: "uniqueUuid9"
            fixed: true
        methodName: "getPropertyValue"
      valueType: "com.zaxxer.hikari.pool.HikariPool"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "pool"
      valueType: "java.lang.String"
      uuid: "uniqueUuid7"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.beans.DirectFieldAccessor"
            parameters:
            - name: "object"
              value:
                sapientType: "MOCK"
                valueType: "com.zaxxer.hikari.HikariDataSource"
                uuid: "dataSource"
          valueType: "org.springframework.beans.DirectFieldAccessor"
          uuid: "directFieldAccessor"
          fixed: true
        methodParameters:
        - name: "propertyName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pool"
            valueType: "java.lang.String"
            uuid: "uniqueUuid9"
            fixed: true
        methodName: "getPropertyValue"
      valueType: "com.zaxxer.hikari.pool.HikariPool"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int1"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "java.lang.Integer"
      uuid: "integer"
  - pathId: "path2"
    testPathName: "getIdleWhenCaughtException"
    constructorSignature: "<init>(com.zaxxer.hikari.HikariDataSource) : void"
    modelFingerprint: "933EE0D64B99C468AB8450BCB5F7A9F9"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "9E17E800421BB512FE444EDDC5971021"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A0796540E6FBA923C5E25C7CF9A4822A"
      valueUuid: "directFieldAccessor"
      methodExercised:
        expression: "getPropertyValue(propertyName:uniqueUuid10):object"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "3A8D2C9A8C3A0BD55C3BBEEACA12F259"
      valueUuid: "object"
      methodExercised:
        expression: "getIdleConnections():int1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5A70FB44CB0FE852D4EB094C65863EF4"
      valueUuid: "integer2"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return (HikariPool) new DirectFieldAccessor(getDataSource()).getPropertyValue(\\\
        \"pool\\\");"
      lineNumber: 59
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type DirectFieldAccessor - Method: getPropertyValue"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.jdbc.metadata.HikariDataSourcePoolMetadata"
        parameters:
        - name: "dataSource"
          value:
            sapientType: "MOCK"
            valueType: "com.zaxxer.hikari.HikariDataSource"
            uuid: "dataSource"
      valueType: "org.springframework.boot.jdbc.metadata.HikariDataSourcePoolMetadata"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.beans.DirectFieldAccessor"
        parameters:
        - name: "object"
          value:
            sapientType: "MOCK"
            valueType: "com.zaxxer.hikari.HikariDataSource"
            uuid: "dataSource"
      valueType: "org.springframework.beans.DirectFieldAccessor"
      uuid: "directFieldAccessor"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.beans.DirectFieldAccessor"
            parameters:
            - name: "object"
              value:
                sapientType: "MOCK"
                valueType: "com.zaxxer.hikari.HikariDataSource"
                uuid: "dataSource"
          valueType: "org.springframework.beans.DirectFieldAccessor"
          uuid: "directFieldAccessor"
          fixed: true
        methodParameters:
        - name: "propertyName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pool"
            valueType: "java.lang.String"
            uuid: "uniqueUuid12"
            fixed: true
        methodName: "getPropertyValue"
      valueType: "com.zaxxer.hikari.pool.HikariPool"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "pool"
      valueType: "java.lang.String"
      uuid: "uniqueUuid10"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.beans.DirectFieldAccessor"
            parameters:
            - name: "object"
              value:
                sapientType: "MOCK"
                valueType: "com.zaxxer.hikari.HikariDataSource"
                uuid: "dataSource"
          valueType: "org.springframework.beans.DirectFieldAccessor"
          uuid: "directFieldAccessor"
          fixed: true
        methodParameters:
        - name: "propertyName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pool"
            valueType: "java.lang.String"
            uuid: "uniqueUuid12"
            fixed: true
        methodName: "getPropertyValue"
      valueType: "com.zaxxer.hikari.pool.HikariPool"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int1"
    - sapientType: "NULL"
      valueType: "java.lang.Integer"
      uuid: "integer2"
      fixed: true
    branches:
    - lineNumber: 53
      expression: "catch-exception (Exception)"
      range: "(53,3)-(53,21)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
- method:
    name: "getMax"
    sourceCodeSignature: "Integer getMax()"
    returnType: "java.lang.Integer"
    instructionFingerprint: "58E8F65EFB359A5DA710D9B6D499F984"
  paths:
  - pathId: "path1"
    testPathName: "getMaxTest"
    constructorSignature: "<init>(com.zaxxer.hikari.HikariDataSource) : void"
    modelFingerprint: "553B11B978A1E467D18317601B469598"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B2698B885E5233F623107500D8936F50"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A52A23EF3259B37BE783811DFF1EE57C"
      valueUuid: "dataSource"
      methodExercised:
        expression: "getMaximumPoolSize():int1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "CDFDC1FA7268393739BDAB9A38825FFB"
      valueUuid: "integer"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.jdbc.metadata.HikariDataSourcePoolMetadata"
        parameters:
        - name: "dataSource"
          value:
            sapientType: "MOCK"
            valueType: "com.zaxxer.hikari.HikariDataSource"
            uuid: "dataSource"
      valueType: "org.springframework.boot.jdbc.metadata.HikariDataSourcePoolMetadata"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "dataSource"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int1"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "java.lang.Integer"
      uuid: "integer"
- method:
    name: "getMin"
    sourceCodeSignature: "Integer getMin()"
    returnType: "java.lang.Integer"
    instructionFingerprint: "BF91EE88F1860D761C632E22600F7998"
  paths:
  - pathId: "path1"
    testPathName: "getMinTest"
    constructorSignature: "<init>(com.zaxxer.hikari.HikariDataSource) : void"
    modelFingerprint: "268355C50F2936792B82FE92CA827988"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B2698B885E5233F623107500D8936F50"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "9654C1C233A2050599E5495BDDF45251"
      valueUuid: "dataSource"
      methodExercised:
        expression: "getMinimumIdle():int1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "CDFDC1FA7268393739BDAB9A38825FFB"
      valueUuid: "integer"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.jdbc.metadata.HikariDataSourcePoolMetadata"
        parameters:
        - name: "dataSource"
          value:
            sapientType: "MOCK"
            valueType: "com.zaxxer.hikari.HikariDataSource"
            uuid: "dataSource"
      valueType: "org.springframework.boot.jdbc.metadata.HikariDataSourcePoolMetadata"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "dataSource"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int1"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "java.lang.Integer"
      uuid: "integer"
- method:
    name: "getValidationQuery"
    sourceCodeSignature: "String getValidationQuery()"
    returnType: "java.lang.String"
    instructionFingerprint: "E315A6252205A8884E4894F34013DF6F"
  paths:
  - pathId: "path1"
    testPathName: "getValidationQueryTest"
    constructorSignature: "<init>(com.zaxxer.hikari.HikariDataSource) : void"
    modelFingerprint: "13F20862E99719C631CF9413753DB2A1"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "C59EB4DEA8589AB4569395D66FFF5DF8"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "CB1976A3CE3478C9C6702DE5399FE75B"
      valueUuid: "dataSource"
      methodExercised:
        expression: "getConnectionTestQuery():connectionTestQuery"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D446A609419428DDEAA49A58091F3986"
      valueUuid: "connectionTestQuery"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.jdbc.metadata.HikariDataSourcePoolMetadata"
        parameters:
        - name: "dataSource"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "com.zaxxer.hikari.HikariDataSource"
              parameters: []
              propertiesMap:
                connectionTestQuery:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "connectionTestQuery1"
                  valueType: "java.lang.String"
                  uuid: "connectionTestQuery"
            valueType: "com.zaxxer.hikari.HikariDataSource"
            uuid: "dataSource"
      valueType: "org.springframework.boot.jdbc.metadata.HikariDataSourcePoolMetadata"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "com.zaxxer.hikari.HikariDataSource"
        parameters: []
        propertiesMap:
          connectionTestQuery:
            sapientType: "BASIC"
            content: !<regular>
              value: "connectionTestQuery1"
            valueType: "java.lang.String"
            uuid: "connectionTestQuery"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "dataSource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "connectionTestQuery1"
      valueType: "java.lang.String"
      uuid: "connectionTestQuery"
    - sapientType: "BASIC"
      content: !<regular>
        value: "connectionTestQuery1"
      valueType: "java.lang.String"
      uuid: "connectionTestQuery"
- method:
    name: "getDefaultAutoCommit"
    sourceCodeSignature: "Boolean getDefaultAutoCommit()"
    returnType: "java.lang.Boolean"
    instructionFingerprint: "AFFDA33DA1C763C49328CC69399002E8"
  paths:
  - pathId: "path1"
    testPathName: "getDefaultAutoCommitTest"
    constructorSignature: "<init>(com.zaxxer.hikari.HikariDataSource) : void"
    modelFingerprint: "00D59C180A9DB6A5F350920569F13EC6"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B2698B885E5233F623107500D8936F50"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "326D588D1FE539153793414AB7AB7208"
      valueUuid: "dataSource"
      methodExercised:
        expression: "isAutoCommit():boolean1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C13505FC3204854504911CE43A2B6FCB"
      valueUuid: "boolean2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.jdbc.metadata.HikariDataSourcePoolMetadata"
        parameters:
        - name: "dataSource"
          value:
            sapientType: "MOCK"
            valueType: "com.zaxxer.hikari.HikariDataSource"
            uuid: "dataSource"
      valueType: "org.springframework.boot.jdbc.metadata.HikariDataSourcePoolMetadata"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "dataSource"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "java.lang.Boolean"
      uuid: "boolean2"
