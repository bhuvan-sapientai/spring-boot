---
modelFingerprint: "649709023396775261AD2D6C18E5A8EC"
targetClass:
  fullClassName: "org.springframework.boot.rsocket.netty.NettyRSocketServerFactory"
methods:
- method:
    name: "setPort"
    sourceCodeSignature: "void setPort(int port)"
    returnType: "void"
    parameters:
    - name: "port"
      type: "int"
    instructionFingerprint: "1EB2655ED88B050401A416A94D0BB6B3"
  paths:
  - pathId: "path1"
    testPathName: "setPortTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "3CA84C7468E0E778B9174370FF4135C0"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setFragmentSize"
    sourceCodeSignature: "void setFragmentSize(DataSize fragmentSize)"
    returnType: "void"
    parameters:
    - name: "fragmentSize"
      type: "org.springframework.util.unit.DataSize"
    instructionFingerprint: "1A7936754876F8D4EE32CC4A75D9598E"
  paths:
  - pathId: "path1"
    testPathName: "setFragmentSizeTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "F7EFD4A499BA93F4D252330D5B775ACF"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setAddress"
    sourceCodeSignature: "void setAddress(InetAddress address)"
    returnType: "void"
    parameters:
    - name: "address"
      type: "java.net.InetAddress"
    instructionFingerprint: "731D4717B306C3C13A0824E6EFCD3206"
  paths:
  - pathId: "path1"
    testPathName: "setAddressTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "8179ACB607EDA346A7F0E6E7A341093E"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setTransport"
    sourceCodeSignature: "void setTransport(RSocketServer.Transport transport)"
    returnType: "void"
    parameters:
    - name: "transport"
      type: "org.springframework.boot.rsocket.server.RSocketServer$Transport"
    instructionFingerprint: "17CFCA1B58380E95A96663CB3C01D8AD"
  paths:
  - pathId: "path1"
    testPathName: "setTransportTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "B11305F1ECCAAFD24EDE25E2EB0074F6"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setSsl"
    sourceCodeSignature: "void setSsl(Ssl ssl)"
    returnType: "void"
    parameters:
    - name: "ssl"
      type: "org.springframework.boot.web.server.Ssl"
    instructionFingerprint: "1A714D13A32D9A7901F0754384ED4700"
  paths:
  - pathId: "path1"
    testPathName: "setSslTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "850854AE439505D0250461835BDFEBDA"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setSslBundles"
    sourceCodeSignature: "void setSslBundles(SslBundles sslBundles)"
    returnType: "void"
    parameters:
    - name: "sslBundles"
      type: "org.springframework.boot.ssl.SslBundles"
    instructionFingerprint: "7CAE6FE5E900368D1D51A60087FD5FD2"
  paths:
  - pathId: "path1"
    testPathName: "setSslBundlesTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "451D43570F78BF53A0543E1A16736E21"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setResourceFactory"
    sourceCodeSignature: "void setResourceFactory(ReactorResourceFactory resourceFactory)"
    returnType: "void"
    parameters:
    - name: "resourceFactory"
      type: "org.springframework.http.client.ReactorResourceFactory"
    instructionFingerprint: "1E2B3A0308B6A049885F8436C156BBFD"
  paths:
  - pathId: "path1"
    testPathName: "setResourceFactoryTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "816BF709362AD047432AB67A18172D15"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setRSocketServerCustomizers"
    sourceCodeSignature: "void setRSocketServerCustomizers(Collection<? extends RSocketServerCustomizer>\
      \ rSocketServerCustomizers)"
    returnType: "void"
    parameters:
    - name: "rSocketServerCustomizers"
      type: "java.util.Collection"
    instructionFingerprint: "02B8945EAC8D704073ABC456C9F71187"
  paths:
  - pathId: "path1"
    testPathName: "setRSocketServerCustomizersTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "B7F611A27EBC0199DBCFDC3582FB5C31"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "rSocketServerCustomizers"
      modelFingerprint: "204E994AD48066A518FD5E85875748D3"
      valueUuid: "rSocketServerCustomizers"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "BABF9A691C7A29C3F2A98C02E249DAF7"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:rSocketServerCustomizers,message:uniqueUuid1):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.rsocket.netty.NettyRSocketServerFactory"
        parameters: []
      valueType: "org.springframework.boot.rsocket.netty.NettyRSocketServerFactory"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "? extends org.springframework.boot.rsocket.server.RSocketServerCustomizer"
      uuid: "rSocketServerCustomizers"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "? extends org.springframework.boot.rsocket.server.RSocketServerCustomizer"
      uuid: "rSocketServerCustomizers"
    - sapientType: "BASIC"
      content: !<regular>
        value: "RSocketServerCustomizers must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "addRSocketServerCustomizers"
    sourceCodeSignature: "void addRSocketServerCustomizers(RSocketServerCustomizer...\
      \ rSocketServerCustomizers)"
    returnType: "void"
    parameters:
    - name: "rSocketServerCustomizers"
      type: "org.springframework.boot.rsocket.server.RSocketServerCustomizer[]"
    instructionFingerprint: "1BD13E3EF8185734403CB858C1AB1321"
  paths:
  - pathId: "path1"
    testPathName: "addRSocketServerCustomizersTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "24AB9A8738495701135FA08886513C3F"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "rSocketServerCustomizers"
      modelFingerprint: "5A0D35DCB5E93E634A3B2069DE2C3E95"
      valueUuid: "rSocketServerCustomizers"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "8E0E4E4A0FE99082CC5DFF0435B2EA7F"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:rSocketServerCustomizers,message:uniqueUuid2):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.rsocket.netty.NettyRSocketServerFactory"
        parameters: []
      valueType: "org.springframework.boot.rsocket.netty.NettyRSocketServerFactory"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.rsocket.server.RSocketServerCustomizer[]"
      uuid: "rSocketServerCustomizers"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.rsocket.server.RSocketServerCustomizer[]"
      uuid: "rSocketServerCustomizers"
    - sapientType: "BASIC"
      content: !<regular>
        value: "RSocketServerCustomizers must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "setLifecycleTimeout"
    sourceCodeSignature: "void setLifecycleTimeout(Duration lifecycleTimeout)"
    returnType: "void"
    parameters:
    - name: "lifecycleTimeout"
      type: "java.time.Duration"
    instructionFingerprint: "AA9D769FAE7542B7754AB4B43E13E107"
  paths:
  - pathId: "path1"
    testPathName: "setLifecycleTimeoutTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "C98772A06AA227EEDA3BB78E93314635"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "create"
    sourceCodeSignature: "NettyRSocketServer create(SocketAcceptor socketAcceptor)"
    returnType: "org.springframework.boot.rsocket.netty.NettyRSocketServer"
    parameters:
    - name: "socketAcceptor"
      type: "io.rsocket.SocketAcceptor"
    instructionFingerprint: "056CFC60CFEDAD5379B4568BC94A5798"
  paths:
  - pathId: "path1"
    testPathName: "createWhenSslNotIsEnabledThisSsl"
    constructorSignature: "<init>() : void"
    modelFingerprint: "863679B0758FE307D7AAD36C91B844F7"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "socketAcceptor"
      modelFingerprint: "7DE6D582F82AE852ED0A33C323AFA0BD"
      valueUuid: "socketAcceptor"
    - type: "STATIC"
      name: "TcpServer.class"
      modelFingerprint: "D5F5DC08EFD26BA7E550DDF8FF74FAE5"
      valueUuid: "TcpServer.class"
      methodExercised:
        expression: "create():tcpServer"
        staticAccess: true
    - type: "STATIC"
      name: "Ssl.class.real"
      modelFingerprint: "48DB38C87F3B223D83B401B5F7F191CB"
      valueUuid: "Ssl.class.real"
      methodExercised:
        expression: "isEnabled(ssl:fieldSsl):boolean1"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "tcpServer"
      modelFingerprint: "8E5F7F65357BBB4E0F1480FC27739DE6"
      valueUuid: "tcpServer"
      methodExercised:
        expression: "bindAddress(bindAddressSupplier:uniqueUuid3):tcpServer2"
    - type: "STATIC"
      name: "TcpServerTransport.class"
      modelFingerprint: "96F9142678A1E89421C97968654C6964"
      valueUuid: "TcpServerTransport.class"
      methodExercised:
        expression: "create(server:tcpServer2):tcpServerTransport"
        staticAccess: true
    - type: "STATIC"
      name: "RSocketServer.class"
      modelFingerprint: "ECB90030F946313378E0F115D2C03402"
      valueUuid: "RSocketServer.class"
      methodExercised:
        expression: "create(acceptor:socketAcceptor):rSocketServer"
        staticAccess: true
    - type: "STATIC"
      name: "PropertyMapper.class"
      modelFingerprint: "B1B41702847FC8B31AB887927AD81CC1"
      valueUuid: "PropertyMapper.class"
      methodExercised:
        expression: "get():propertyMapper"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "9D88D3105C9BFBFEAEBC1E32D510C38F"
      valueUuid: "propertyMapper"
      methodExercised:
        expression: "alwaysApplyingWhenNonNull():propertyMapper2"
    - type: "LOCAL_VARIABLE"
      name: "map"
      modelFingerprint: "35A8ADC2434798ADED88FF2A0ACAEE9E"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "from(value:fieldDataSize):propertyMapper.Source"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "012CBB236DAED22C2E4646C3AC10F8B0"
      valueUuid: "propertyMapper.Source"
      methodExercised:
        expression: "asInt(adapter:uniqueUuid4):propertyMapper.Source2"
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "8DD3369266DF2C92FEB5D12427028E5D"
      valueUuid: "rSocketServer"
      methodExercised:
        expression: "fragment(null:int2):rSocketServer3"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "1C70671DED94FE9B3B2CB70446852026"
      valueUuid: "propertyMapper.Source2"
      methodExercised:
        expression: "to(consumer:uniqueUuid5):void"
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "65987E854333765BBE9270C6913C671E"
      valueUuid: "rSocketServer"
      methodExercised:
        expression: "bind(transport:tcpServerTransport):mono"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "73E2CCDFBE17E4318819FA74A7242693"
      valueUuid: "nettyRSocketServer"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.rsocket.netty.NettyRSocketServerFactory"
        parameters: []
      valueType: "org.springframework.boot.rsocket.netty.NettyRSocketServerFactory"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "io.rsocket.SocketAcceptor"
      uuid: "socketAcceptor"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.TcpServer"
      uuid: "TcpServer.class"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.TcpServer"
      uuid: "tcpServer"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.Ssl"
      uuid: "Ssl.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.web.server.Ssl"
      uuid: "fieldSsl"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.TcpServer"
      uuid: "tcpServer"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.TcpServer"
      uuid: "tcpServer2"
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "? extends java.net.SocketAddress"
      uuid: "uniqueUuid3"
    - sapientType: "MOCK"
      valueType: "io.rsocket.transport.netty.server.TcpServerTransport"
      uuid: "TcpServerTransport.class"
    - sapientType: "MOCK"
      valueType: "io.rsocket.transport.netty.server.TcpServerTransport"
      uuid: "tcpServerTransport"
    - sapientType: "MOCK"
      valueType: "reactor.netty.tcp.TcpServer"
      uuid: "tcpServer2"
    - sapientType: "MOCK"
      valueType: "io.rsocket.core.RSocketServer"
      uuid: "RSocketServer.class"
    - sapientType: "MOCK"
      valueType: "io.rsocket.core.RSocketServer"
      uuid: "rSocketServer"
    - sapientType: "MOCK"
      valueType: "io.rsocket.SocketAcceptor"
      uuid: "socketAcceptor"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "PropertyMapper.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source"
    - sapientType: "NULL"
      valueType: "org.springframework.util.unit.DataSize"
      uuid: "fieldDataSize"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      genericValueType: "java.lang.Integer"
      uuid: "propertyMapper.Source2"
    - sapientType: "ANY"
      valueType: "java.util.function.Function"
      uuid: "uniqueUuid4"
    - sapientType: "MOCK"
      valueType: "io.rsocket.core.RSocketServer"
      uuid: "rSocketServer"
    - sapientType: "MOCK"
      valueType: "io.rsocket.core.RSocketServer"
      uuid: "rSocketServer3"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      genericValueType: "java.lang.Integer"
      uuid: "propertyMapper.Source2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid5"
    - sapientType: "MOCK"
      valueType: "io.rsocket.core.RSocketServer"
      uuid: "rSocketServer"
    - sapientType: "MOCK"
      valueType: "reactor.core.publisher.Mono"
      genericValueType: "io.rsocket.transport.netty.server.CloseableChannel"
      uuid: "mono"
    - sapientType: "MOCK"
      valueType: "io.rsocket.transport.netty.server.TcpServerTransport"
      uuid: "tcpServerTransport"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.rsocket.netty.NettyRSocketServer"
        parameters:
        - name: "starter"
          value:
            sapientType: "MOCK"
            valueType: "reactor.core.publisher.Mono"
            genericValueType: "io.rsocket.transport.netty.server.CloseableChannel"
            uuid: "mono"
        - name: "lifecycleTimeout"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "fieldDuration"
      valueType: "org.springframework.boot.rsocket.netty.NettyRSocketServer"
      uuid: "nettyRSocketServer"
      fixed: true
    branches:
    - lineNumber: 166
      expression: "this.transport == RSocketServer.Transport.WEBSOCKET"
      range: "(166,7)-(166,57)"
      evaluatedAs: false
      internalMethodName: "createTransport"
    - lineNumber: 189
      expression: "this.resourceFactory != null"
      range: "(189,7)-(189,34)"
      evaluatedAs: false
      internalMethodName: "createTcpTransport"
    - lineNumber: 192
      expression: "Ssl.isEnabled(this.ssl)"
      range: "(192,7)-(192,29)"
      evaluatedAs: false
      internalMethodName: "createTcpTransport"
