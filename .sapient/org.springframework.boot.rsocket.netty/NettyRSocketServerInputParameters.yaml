---
modelFingerprint: "6C2133E43374146B96D5BAAF257CBD24"
targetClass:
  fullClassName: "org.springframework.boot.rsocket.netty.NettyRSocketServer"
methods:
- method:
    name: "address"
    sourceCodeSignature: "InetSocketAddress address()"
    returnType: "java.net.InetSocketAddress"
    instructionFingerprint: "37295DCFE3BB651A751DED9B1C99A3AB"
  paths:
  - pathId: "path1"
    testPathName: "addressWhenThisChannelIsNull"
    constructorSignature: "<init>(reactor.core.publisher.Mono<io.rsocket.transport.netty.server.CloseableChannel>,java.time.Duration)\
      \ : void"
    modelFingerprint: "21C2D1265CF4C103575ACD8D20DCB2AC"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2C187FDD9B9DE0A85D1C6E098CE35E1D"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D416FB90C1E52B49084113B5DF7673D1"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:starter,message:uniqueUuid1):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E4A9ADA94195C759C9FB858C0D5C1382"
      valueUuid: "inetSocketAddress"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.rsocket.netty.NettyRSocketServer"
        parameters:
        - name: "starter"
          value:
            sapientType: "MOCK"
            valueType: "reactor.core.publisher.Mono"
            genericValueType: "io.rsocket.transport.netty.server.CloseableChannel"
            uuid: "starter"
        - name: "lifecycleTimeout"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "lifecycleTimeout-days"
            valueType: "java.time.Duration"
            uuid: "lifecycleTimeout"
      valueType: "org.springframework.boot.rsocket.netty.NettyRSocketServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "reactor.core.publisher.Mono"
      genericValueType: "io.rsocket.transport.netty.server.CloseableChannel"
      uuid: "starter"
    - sapientType: "BASIC"
      content: !<regular>
        value: "starter must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.net.InetSocketAddress"
      uuid: "inetSocketAddress"
      fixed: true
    branches:
    - lineNumber: 56
      expression: "this.channel != null"
      range: "(56,7)-(56,26)"
      evaluatedAs: false
- method:
    name: "start"
    sourceCodeSignature: "void start()"
    returnType: "void"
    throwsExceptions:
    - "org.springframework.boot.rsocket.server.RSocketServerException"
    instructionFingerprint: "FBEF3720DB921AEA17037DFB74CD90CC"
  paths:
  - pathId: "path1"
    testPathName: "startWhenTimeoutIsNotNull"
    constructorSignature: "<init>(reactor.core.publisher.Mono<io.rsocket.transport.netty.server.CloseableChannel>,java.time.Duration)\
      \ : void"
    modelFingerprint: "5BD491EE168D2B6EA7DACCD8203058AF"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4AFA34D0F50A617FED886DC07F54DA3A"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "16911F6886C940A851E29E60A3315CE2"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:starter,message:uniqueUuid2):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "mono"
      modelFingerprint: "34403E06A8352A16C91DB9E1B1959F46"
      valueUuid: "starter"
      methodExercised:
        expression: "block(timeout:lifecycleTimeout):object"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "F92B430DFBC8B923906D24C666018290"
      methodExercised:
        expression: "address():inetSocketAddress"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_POTENTIAL_HARM_FULL_SYSTEM_CALL"
      source: "awaitThread.start();"
      lineNumber: 73
      details: "Potential harmful system call (Thread.start) detected; Learn more:\
        \ https://github.com/Sapient-AI/docs#disabled-generated-tests"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.rsocket.netty.NettyRSocketServer"
        parameters:
        - name: "starter"
          value:
            sapientType: "MOCK"
            valueType: "reactor.core.publisher.Mono"
            genericValueType: "io.rsocket.transport.netty.server.CloseableChannel"
            uuid: "starter"
        - name: "lifecycleTimeout"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "lifecycleTimeout-days"
            valueType: "java.time.Duration"
            uuid: "lifecycleTimeout"
      valueType: "org.springframework.boot.rsocket.netty.NettyRSocketServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "reactor.core.publisher.Mono"
      genericValueType: "io.rsocket.transport.netty.server.CloseableChannel"
      uuid: "starter"
    - sapientType: "BASIC"
      content: !<regular>
        value: "starter must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "reactor.core.publisher.Mono"
      genericValueType: "io.rsocket.transport.netty.server.CloseableChannel"
      uuid: "starter"
    - sapientType: "MOCK"
      valueType: "io.rsocket.transport.netty.server.CloseableChannel"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "lifecycleTimeout-days"
      valueType: "java.time.Duration"
      uuid: "lifecycleTimeout"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.net.InetSocketAddress"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "inetSocketAddress-port"
      valueType: "java.net.InetSocketAddress"
      uuid: "inetSocketAddress"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 85
      expression: "timeout != null"
      range: "(85,11)-(85,25)"
      evaluatedAs: true
      internalMethodName: "block"
  - pathId: "path2"
    testPathName: "startWhenTimeoutIsNull"
    constructorSignature: "<init>(reactor.core.publisher.Mono<io.rsocket.transport.netty.server.CloseableChannel>,java.time.Duration)\
      \ : void"
    modelFingerprint: "E9161855D80EFFDB3C5E37DA1CA366AE"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "30904807336B5B4B597DF66568F8401E"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "16911F6886C940A851E29E60A3315CE2"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:starter,message:uniqueUuid3):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "mono"
      modelFingerprint: "B3CEE8BA98EE252883EC6D1ECB160904"
      valueUuid: "starter"
      methodExercised:
        expression: "block():object"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "F92B430DFBC8B923906D24C666018290"
      methodExercised:
        expression: "address():inetSocketAddress"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_POTENTIAL_HARM_FULL_SYSTEM_CALL"
      source: "awaitThread.start();"
      lineNumber: 73
      details: "Potential harmful system call (Thread.start) detected; Learn more:\
        \ https://github.com/Sapient-AI/docs#disabled-generated-tests"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.rsocket.netty.NettyRSocketServer"
        parameters:
        - name: "starter"
          value:
            sapientType: "MOCK"
            valueType: "reactor.core.publisher.Mono"
            genericValueType: "io.rsocket.transport.netty.server.CloseableChannel"
            uuid: "starter"
        - name: "lifecycleTimeout"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "lifecycleTimeout"
            fixed: true
      valueType: "org.springframework.boot.rsocket.netty.NettyRSocketServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "reactor.core.publisher.Mono"
      genericValueType: "io.rsocket.transport.netty.server.CloseableChannel"
      uuid: "starter"
    - sapientType: "BASIC"
      content: !<regular>
        value: "starter must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "reactor.core.publisher.Mono"
      genericValueType: "io.rsocket.transport.netty.server.CloseableChannel"
      uuid: "starter"
    - sapientType: "MOCK"
      valueType: "io.rsocket.transport.netty.server.CloseableChannel"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.net.InetSocketAddress"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "inetSocketAddress-port"
      valueType: "java.net.InetSocketAddress"
      uuid: "inetSocketAddress"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 85
      expression: "timeout != null"
      range: "(85,11)-(85,25)"
      evaluatedAs: false
      internalMethodName: "block"
- method:
    name: "stop"
    sourceCodeSignature: "void stop()"
    returnType: "void"
    throwsExceptions:
    - "org.springframework.boot.rsocket.server.RSocketServerException"
    instructionFingerprint: "2FDF906E1D93D972387F523FCDE7D450"
  paths:
  - pathId: "path1"
    testPathName: "stopWhenThisChannelIsNull"
    constructorSignature: "<init>(reactor.core.publisher.Mono<io.rsocket.transport.netty.server.CloseableChannel>,java.time.Duration)\
      \ : void"
    modelFingerprint: "E4714D2AAC65682F9DA357C158781692"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2C187FDD9B9DE0A85D1C6E098CE35E1D"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D416FB90C1E52B49084113B5DF7673D1"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:starter,message:uniqueUuid4):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.rsocket.netty.NettyRSocketServer"
        parameters:
        - name: "starter"
          value:
            sapientType: "MOCK"
            valueType: "reactor.core.publisher.Mono"
            genericValueType: "io.rsocket.transport.netty.server.CloseableChannel"
            uuid: "starter"
        - name: "lifecycleTimeout"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "lifecycleTimeout-days"
            valueType: "java.time.Duration"
            uuid: "lifecycleTimeout"
      valueType: "org.springframework.boot.rsocket.netty.NettyRSocketServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "reactor.core.publisher.Mono"
      genericValueType: "io.rsocket.transport.netty.server.CloseableChannel"
      uuid: "starter"
    - sapientType: "BASIC"
      content: !<regular>
        value: "starter must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 78
      expression: "this.channel != null"
      range: "(78,7)-(78,26)"
      evaluatedAs: false
