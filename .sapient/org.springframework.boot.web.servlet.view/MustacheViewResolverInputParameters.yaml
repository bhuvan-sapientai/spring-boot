---
modelFingerprint: "357E3AE4F14EF75714C0CBB44F702E16"
targetClass:
  fullClassName: "org.springframework.boot.web.servlet.view.MustacheViewResolver"
methods:
- method:
    name: "requiredViewClass"
    sourceCodeSignature: "Class<?> requiredViewClass()"
    returnType: "java.lang.Class"
    genericReturnType: "?"
    instructionFingerprint: "650B54B8DB26EEC9B578E8E3B01F15DE"
  paths:
  - pathId: "path1"
    testPathName: "requiredViewClassTest"
    constructorSignature: "<init>(com.samskivert.mustache.Mustache$Compiler) : void"
    modelFingerprint: "847F20EAF13AB7E686FD2B5FE84C88D9"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "0BB5B4B4E2DA1D83216A01A0B29C8897"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "08F494A0DC7E135080FB6564A5C301BB"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.view.MustacheViewResolver"
        parameters:
        - name: "compiler"
          value:
            sapientType: "MOCK"
            valueType: "com.samskivert.mustache.Mustache$Compiler"
            uuid: "compiler"
      valueType: "org.springframework.boot.web.servlet.view.MustacheViewResolver"
      uuid: "target"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.web.servlet.view.MustacheView"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.web.servlet.view.MustacheView"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "setCharset"
    sourceCodeSignature: "void setCharset(String charset)"
    returnType: "void"
    parameters:
    - name: "charset"
      type: "java.lang.String"
    instructionFingerprint: "7CE64AE350F1AB4E4BF9343F967573FA"
  paths:
  - pathId: "path1"
    testPathName: "setCharsetTest"
    constructorSignature: "<init>(com.samskivert.mustache.Mustache$Compiler) : void"
    modelFingerprint: "0A2766D9974544B72F4269E281D10104"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "buildView"
    sourceCodeSignature: "AbstractUrlBasedView buildView(String viewName)"
    returnType: "org.springframework.web.servlet.view.AbstractUrlBasedView"
    throwsExceptions:
    - "java.lang.Exception"
    parameters:
    - name: "viewName"
      type: "java.lang.String"
    instructionFingerprint: "33D7F5235C0E3C3F8BFF8C1EF71850AC"
  paths:
  - pathId: "path1"
    testPathName: "buildViewTest"
    constructorSignature: "<init>(com.samskivert.mustache.Mustache$Compiler) : void"
    modelFingerprint: "47E8D1DF5B49763108511BECE329CC6C"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "0BB5B4B4E2DA1D83216A01A0B29C8897"
      valueUuid: "target"
    - type: "INPUT"
      name: "viewName"
      modelFingerprint: "68953B1086ED0113D2364AE1B5EB8851"
      valueUuid: "viewName"
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "477DF30C74753FE4871E99F7A0A82921"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "state(expression:uniqueUuid1,message:uniqueUuid2):void"
        staticAccess: true
    - type: "STATIC"
      name: "BeanUtils.class"
      modelFingerprint: "04C8398BCB2BDF2AF24746A293B813FE"
      valueUuid: "BeanUtils.class"
      methodExercised:
        expression: "instantiateClass(clazz:uniqueUuid3):object"
        throwsExceptions:
        - "org.springframework.beans.BeanInstantiationException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "view"
      modelFingerprint: "D5D528BC15A2686364500DDBFDC03E98"
      valueUuid: "object"
      methodExercised:
        expression: "setUrl(url:string3):void2"
    - type: "LOCAL_VARIABLE"
      name: "view"
      modelFingerprint: "7E8750B46285D7162D8F084A2228607F"
      valueUuid: "object"
      methodExercised:
        expression: "setAttributesMap(attributes:hashMap):void3"
    - type: "LOCAL_VARIABLE"
      name: "view"
      modelFingerprint: "2F70D3F00F976E1AF7CF7B34598CCCD4"
      valueUuid: "object"
      methodExercised:
        expression: "setContentType(contentType:fieldString6):void4"
    - type: "LOCAL_VARIABLE"
      name: "view"
      modelFingerprint: "5DC36F46CDD74ADA5C9A0E2C26A43083"
      valueUuid: "object"
      methodExercised:
        expression: "setRequestContextAttribute(requestContextAttribute:fieldString7):void5"
    - type: "LOCAL_VARIABLE"
      name: "view"
      modelFingerprint: "B0FED9C45D06211C7C6BF11970D8BDF6"
      valueUuid: "object"
      methodExercised:
        expression: "setExposePathVariables(exposePathVariables:boolean2):void6"
    - type: "LOCAL_VARIABLE"
      name: "view"
      modelFingerprint: "7CFFC9A3285B273DE94FDD84688AF40E"
      valueUuid: "object"
      methodExercised:
        expression: "setExposedContextBeanNames(exposedContextBeanNames:fieldStringArray2):void7"
    - type: "LOCAL_VARIABLE"
      name: "view"
      modelFingerprint: "96ED7D4861318886D53E36BA46F82456"
      valueUuid: "object"
      methodExercised:
        expression: "setExposeRequestAttributes(exposeRequestAttributes:int6):void8"
    - type: "LOCAL_VARIABLE"
      name: "view"
      modelFingerprint: "C710E9C825D528A51593C8EC4008C433"
      valueUuid: "object"
      methodExercised:
        expression: "setAllowRequestOverride(allowRequestOverride:int7):void9"
    - type: "LOCAL_VARIABLE"
      name: "view"
      modelFingerprint: "04601FE0DE3CA88744D368F1A862E427"
      valueUuid: "object"
      methodExercised:
        expression: "setExposeSessionAttributes(exposeSessionAttributes:int8):void10"
    - type: "LOCAL_VARIABLE"
      name: "view"
      modelFingerprint: "84B5E114BC8EA12A8DBF204632DD01B5"
      valueUuid: "object"
      methodExercised:
        expression: "setAllowSessionOverride(allowSessionOverride:int9):void11"
    - type: "LOCAL_VARIABLE"
      name: "view"
      modelFingerprint: "A87CA43698E8FDDD09A0B507E7587196"
      valueUuid: "object"
      methodExercised:
        expression: "setExposeSpringMacroHelpers(exposeSpringMacroHelpers:int10):void12"
    - type: "LOCAL_VARIABLE"
      name: "view"
      modelFingerprint: "B028B8A65C49D8180A39A911CED7DA31"
      valueUuid: "object"
      methodExercised:
        expression: "setCompiler(compiler:compiler):void13"
    - type: "LOCAL_VARIABLE"
      name: "view"
      modelFingerprint: "68DDFBB5CAE8400E093B221D3ECB5DDC"
      valueUuid: "object"
      methodExercised:
        expression: "setCharset(charset:fieldString):void14"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B9F20B4C77421B85E6A4867F3D238479"
      valueUuid: "object"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.view.MustacheViewResolver"
        parameters:
        - name: "compiler"
          value:
            sapientType: "MOCK"
            valueType: "com.samskivert.mustache.Mustache$Compiler"
            uuid: "compiler"
        propertiesMap:
          charset:
            sapientType: "BASIC"
            content: !<regular>
              value: "D"
            valueType: "java.lang.String"
            uuid: "fieldString"
          exposePathVariables:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "java.lang.Boolean"
            uuid: "fieldBoolean"
          exposedContextBeanNames:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "fieldStringArray2"
          requestContextAttribute:
            sapientType: "BASIC"
            content: !<regular>
              value: "C"
            valueType: "java.lang.String"
            uuid: "fieldString7"
          contentType:
            sapientType: "BASIC"
            content: !<regular>
              value: "B"
            valueType: "java.lang.String"
            uuid: "fieldString6"
      valueType: "org.springframework.boot.web.servlet.view.MustacheViewResolver"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "viewName"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "No view class"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.BeanUtils"
      uuid: "BeanUtils.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.view.MustacheView"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.web.servlet.view.MustacheView"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.web.servlet.view.MustacheView"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.view.MustacheView"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.view.MustacheView"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "hashMap"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.view.MustacheView"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "fieldString6"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.view.MustacheView"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "C"
      valueType: "java.lang.String"
      uuid: "fieldString7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.view.MustacheView"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.view.MustacheView"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "fieldStringArray2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.view.MustacheView"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "int6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.view.MustacheView"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "int7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.view.MustacheView"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "int8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.view.MustacheView"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void11"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "int9"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.view.MustacheView"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void12"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "int10"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.view.MustacheView"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void13"
      fixed: true
    - sapientType: "MOCK"
      valueType: "com.samskivert.mustache.Mustache$Compiler"
      uuid: "compiler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.view.MustacheView"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void14"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "D"
      valueType: "java.lang.String"
      uuid: "fieldString"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.view.MustacheView"
      uuid: "object"
      explicitCastNeeded: true
- method:
    name: "instantiateView"
    sourceCodeSignature: "AbstractUrlBasedView instantiateView()"
    returnType: "org.springframework.web.servlet.view.AbstractUrlBasedView"
    instructionFingerprint: "B141E7C089136A3840B0FCE968AF645E"
  paths:
  - pathId: "path1"
    testPathName: "instantiateViewWhenGetViewClassEqualsMustacheView"
    constructorSignature: "<init>(com.samskivert.mustache.Mustache$Compiler) : void"
    modelFingerprint: "41E052A5022B528C0340613EFB942062"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "0BB5B4B4E2DA1D83216A01A0B29C8897"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "0F4E87D37853BE819F03726F23D38069"
      valueUuid: "mustacheView"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.view.MustacheViewResolver"
        parameters:
        - name: "compiler"
          value:
            sapientType: "MOCK"
            valueType: "com.samskivert.mustache.Mustache$Compiler"
            uuid: "compiler"
      valueType: "org.springframework.boot.web.servlet.view.MustacheViewResolver"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.view.MustacheView"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.view.MustacheView"
      uuid: "mustacheView"
      fixed: true
    branches:
    - lineNumber: 80
      expression: "getViewClass() == MustacheView.class"
      range: "(80,11)-(80,46)"
      evaluatedAs: true
