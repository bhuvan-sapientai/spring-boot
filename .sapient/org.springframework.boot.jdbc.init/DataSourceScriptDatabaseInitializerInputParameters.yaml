---
modelFingerprint: "937AE541DB5CD434D66036596CCD06E2"
methods:
- method:
    name: "getDataSource"
    signature: "getDataSource() : javax.sql.DataSource"
    sourceCodeSignature: "DataSource getDataSource()"
    instructionFingerprint: "B972E9B02F56BB9651574580E74B419C"
  paths:
  - pathId: "path1"
    testPathName: "getDataSourceTest"
    constructorSignature: "<init>(javax.sql.DataSource,org.springframework.boot.sql.init.DatabaseInitializationSettings)\
      \ : void"
    modelFingerprint: "094C8B2AFFD9D3BA27D4EA6A097CA2E9"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "6a01f4c8-821c-3764-af21-e91cc4f01cf5"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
- method:
    name: "isEmbeddedDatabase"
    signature: "isEmbeddedDatabase() : boolean"
    sourceCodeSignature: "boolean isEmbeddedDatabase()"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "F61C371C919CF950E6B4BC13BDBCA370"
  paths:
  - pathId: "path1"
    testPathName: "isEmbeddedDatabaseWhenEmbeddedDatabaseConnectionIsEmbeddedThisDataSource"
    constructorSignature: "<init>(javax.sql.DataSource,org.springframework.boot.sql.init.DatabaseInitializationSettings)\
      \ : void"
    modelFingerprint: "B890D77420CAC81DCC8ECEFFB0D48481"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "14B62E340D808B32DCBB71C53AFEFBF6"
      index: 1
      valueUuid: "target"
    - type: "STATIC"
      name: "EmbeddedDatabaseConnection"
      modelFingerprint: "EF99C66759797BF8388AE4E5ADE76733"
      index: 2
      idsTryCatchBlockSurrounding:
      - 2
      valueUuid: "uuid1"
      methodExercised:
        target: "org.springframework.boot.jdbc.EmbeddedDatabaseConnection"
        name: "isEmbedded"
        parameters:
        - name: "dataSource"
          valueUuid: "<init>_dataSource1"
        signature: "isEmbedded(DataSource): boolean"
        returnValueUuid: "isEmbeddedDatabase_boolean1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "753659628F1B3F179A2EF0629F555437"
      index: 3
      valueUuid: "isEmbeddedDatabase_boolean1"
    uuid: "3c027848-d9cd-32ab-9abb-d88ea3b8a591"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.jdbc.EmbeddedDatabaseConnection.isEmbedded(javax.sql.DataSource)\
        \ : boolean"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer"
        parameters:
        - name: "dataSource"
          value:
            sapientType: "MOCK"
            valueType: "javax.sql.DataSource"
            uuid: "<init>_dataSource1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "settings"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.sql.init.DatabaseInitializationSettings"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.springframework.boot.sql.init.DatabaseInitializationSettings"
            uuid: "<init>_databaseInitializationSettings1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.jdbc.EmbeddedDatabaseConnection"
      uuid: "uuid1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "isEmbeddedDatabase_boolean1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "javax.sql.DataSource"
      uuid: "<init>_dataSource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "isEmbeddedDatabase_boolean1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "isEmbeddedDatabaseWhenEmbeddedDatabaseConnectionNotIsEmbeddedThisDataSource"
    constructorSignature: "<init>(javax.sql.DataSource,org.springframework.boot.sql.init.DatabaseInitializationSettings)\
      \ : void"
    modelFingerprint: "4915D88A5548A2D9E5A35AD40BBE1054"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "14B62E340D808B32DCBB71C53AFEFBF6"
      index: 1
      valueUuid: "target"
    - type: "STATIC"
      name: "EmbeddedDatabaseConnection"
      modelFingerprint: "85AA3F89B0AB50639CD3B6CA0DB5E73D"
      index: 2
      idsTryCatchBlockSurrounding:
      - 2
      valueUuid: "uuid1"
      methodExercised:
        target: "org.springframework.boot.jdbc.EmbeddedDatabaseConnection"
        name: "isEmbedded"
        parameters:
        - name: "dataSource"
          valueUuid: "<init>_dataSource1"
        signature: "isEmbedded(DataSource): boolean"
        returnValueUuid: "isEmbeddedDatabase_boolean1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3A21543F56248AC92654D6E439128AED"
      index: 3
      valueUuid: "isEmbeddedDatabase_boolean1"
    uuid: "0e43b33e-73b1-3e65-846a-c81f4667ec60"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.jdbc.EmbeddedDatabaseConnection.isEmbedded(javax.sql.DataSource)\
        \ : boolean"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer"
        parameters:
        - name: "dataSource"
          value:
            sapientType: "MOCK"
            valueType: "javax.sql.DataSource"
            uuid: "<init>_dataSource1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "settings"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.sql.init.DatabaseInitializationSettings"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.springframework.boot.sql.init.DatabaseInitializationSettings"
            uuid: "<init>_databaseInitializationSettings1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.jdbc.EmbeddedDatabaseConnection"
      uuid: "uuid1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "isEmbeddedDatabase_boolean1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "javax.sql.DataSource"
      uuid: "<init>_dataSource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "isEmbeddedDatabase_boolean1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path3"
    testPathName: "isEmbeddedDatabaseWhenCaughtException"
    constructorSignature: "<init>(javax.sql.DataSource,org.springframework.boot.sql.init.DatabaseInitializationSettings)\
      \ : void"
    modelFingerprint: "CBF97F5859FD136E31AB98EF1B6F1551"
    problemWasSolvedByProver: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "14B62E340D808B32DCBB71C53AFEFBF6"
      index: 1
      valueUuid: "target"
    - type: "STATIC"
      name: "EmbeddedDatabaseConnection"
      modelFingerprint: "05693F67C28E89DCA9C976587F43BD3B"
      index: 2
      idsTryCatchBlockSurrounding:
      - 2
      valueUuid: "uuid1"
      methodExercised:
        target: "org.springframework.boot.jdbc.EmbeddedDatabaseConnection"
        name: "isEmbedded"
        parameters:
        - name: "dataSource"
          valueUuid: "<init>_dataSource1"
        signature: "isEmbedded(DataSource): boolean"
        returnValueUuid: "isEmbeddedDatabase_boolean1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3A21543F56248AC92654D6E439128AED"
      index: 3
      valueUuid: "uuid2"
    uuid: "4ef35836-54b6-3d97-83a2-ba35c268f128"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer"
        parameters:
        - name: "dataSource"
          value:
            sapientType: "MOCK"
            valueType: "javax.sql.DataSource"
            uuid: "<init>_dataSource1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "settings"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.sql.init.DatabaseInitializationSettings"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.springframework.boot.sql.init.DatabaseInitializationSettings"
            uuid: "<init>_databaseInitializationSettings1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.jdbc.EmbeddedDatabaseConnection"
      uuid: "uuid1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      valueType: "java.lang.RuntimeException"
      uuid: "isEmbeddedDatabase_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "javax.sql.DataSource"
      uuid: "<init>_dataSource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid2"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "runScripts"
    signature: "runScripts(org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer$Scripts)\
      \ : void"
    sourceCodeSignature: "void runScripts(Scripts scripts)"
    instructionFingerprint: "56F92021C52E7E957BECFB20C49835F1"
  paths:
  - pathId: "path1"
    testPathName: "runScripts1WhenScriptsIsNotEmpty"
    constructorSignature: "<init>(javax.sql.DataSource,org.springframework.boot.sql.init.DatabaseInitializationSettings)\
      \ : void"
    modelFingerprint: "D37F35CF3606DDBF4DCA5978AC8826D0"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2605AE4313D1C88872A02B644845B4AD"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "scripts"
      modelFingerprint: "54C9C6194E3D3B5FA34720CD635175B4"
      index: 2
      valueUuid: "runScripts_abstractScriptDatabaseInitializer.Scripts1"
    - type: "LOCAL_VARIABLE"
      name: "scripts"
      modelFingerprint: "5286DEF5C696DB661A0FBDD7FAA33BAF"
      index: 3
      valueUuid: "runScripts_abstractScriptDatabaseInitializer.Scripts1"
      methodExercised:
        target: "scripts"
        name: "isContinueOnError"
        parameters: []
        signature: "isContinueOnError(): boolean"
        returnValueUuid: "runScripts_boolean1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "scripts"
      modelFingerprint: "C07274381E244E9FD955AA79BCB72124"
      index: 4
      valueUuid: "runScripts_abstractScriptDatabaseInitializer.Scripts1"
      methodExercised:
        target: "scripts"
        name: "getSeparator"
        parameters: []
        signature: "getSeparator(): String"
        returnValueUuid: "runScripts_string1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "scripts"
      modelFingerprint: "27F63108F9B22FF3A6B1F697046B03D3"
      index: 5
      valueUuid: "runScripts_abstractScriptDatabaseInitializer.Scripts1"
      methodExercised:
        target: "scripts"
        name: "getEncoding"
        parameters: []
        signature: "getEncoding(): Charset"
        returnValueUuid: "runScripts_charset1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "scripts"
      modelFingerprint: "27F63108F9B22FF3A6B1F697046B03D3"
      index: 6
      valueUuid: "runScripts_abstractScriptDatabaseInitializer.Scripts1"
      methodExercised:
        target: "scripts"
        name: "getEncoding"
        parameters: []
        signature: "getEncoding(): Charset"
        returnValueUuid: "runScripts_charset1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "scripts"
      modelFingerprint: "9D30D6C14F0AE2B0286B7FFCFDE5831A"
      index: 7
      valueUuid: "runScripts_abstractScriptDatabaseInitializer.Scripts1"
      methodExercised:
        target: "scripts"
        name: "iterator"
        parameters: []
        signature: "iterator(): Iterator"
        returnValueUuid: "runScripts_iterator1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "populator"
      modelFingerprint: "DDA4A13D1DA37510B6F71BC403BB1E11"
      index: 8
      valueUuid: "runScripts_resourceDatabasePopulator1"
      methodExercised:
        target: "populator"
        name: "addScript"
        parameters:
        - name: "script"
          valueUuid: "runScripts_object1"
        signature: "addScript(Resource): void"
        returnValueUuid: "runScripts_void4"
        access: 1
    - type: "STATIC"
      name: "DatabasePopulatorUtils"
      modelFingerprint: "97C41DA99A47955ECE67404C01359798"
      index: 9
      valueUuid: "uuid5"
      methodExercised:
        target: "org.springframework.jdbc.datasource.init.DatabasePopulatorUtils"
        name: "execute"
        parameters:
        - name: "populator"
          valueUuid: "runScripts_resourceDatabasePopulator1"
        - name: "dataSource"
          valueUuid: "<init>_dataSource1"
        throwsExceptions:
        - "org.springframework.dao.DataAccessException"
        signature: "execute(ResourceDatabasePopulator,DataSource): void throws org.springframework.dao.DataAccessException"
        returnValueUuid: "runScripts_void5"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 10
      valueUuid: "uuid6"
    uuid: "e671421d-552d-3332-a502-0d59d8dd0620"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "populator"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.nio.charset.Charset.name() : java.lang.String"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer"
        parameters:
        - name: "dataSource"
          value:
            sapientType: "MOCK"
            valueType: "javax.sql.DataSource"
            uuid: "<init>_dataSource1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "settings"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.sql.init.DatabaseInitializationSettings"
            uuid: "<init>_databaseInitializationSettings1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer$Scripts"
      uuid: "runScripts_abstractScriptDatabaseInitializer.Scripts1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer$Scripts"
      uuid: "runScripts_abstractScriptDatabaseInitializer.Scripts1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "runScripts_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer$Scripts"
      uuid: "runScripts_abstractScriptDatabaseInitializer.Scripts1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getSeparator1"
      valueType: "java.lang.String"
      uuid: "runScripts_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer$Scripts"
      uuid: "runScripts_abstractScriptDatabaseInitializer.Scripts1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.nio.charset.Charset"
        method: "defaultCharset"
        methodParameters: []
      valueType: "java.nio.charset.Charset"
      uuid: "runScripts_charset1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer$Scripts"
      uuid: "runScripts_abstractScriptDatabaseInitializer.Scripts1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.nio.charset.Charset"
        method: "defaultCharset"
        methodParameters: []
      valueType: "java.nio.charset.Charset"
      uuid: "runScripts_charset1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer$Scripts"
      uuid: "runScripts_abstractScriptDatabaseInitializer.Scripts1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "MOCK"
              valueType: "org.springframework.core.io.Resource"
              uuid: "runScripts_object1"
              fixed: false
              collectionUuid: "runScripts_iterator1-CollectionContent"
              equalsMethodPresent: false
              explicitCastNeeded: false
          valueType: "java.util.List"
          genericValueType: "org.springframework.core.io.Resource"
          uuid: "runScripts_iterator1-CollectionContent"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Iterator"
      genericValueType: "org.springframework.core.io.Resource"
      uuid: "runScripts_iterator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.jdbc.datasource.init.ResourceDatabasePopulator"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          sqlScriptEncoding:
            sapientType: "BASIC"
            content: !<regular>
              value: "sqlScriptEncoding1"
            valueType: "java.lang.String"
            uuid: "runScripts_string2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          separator:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getSeparator1"
            valueType: "java.lang.String"
            uuid: "runScripts_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          continueOnError:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "runScripts_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.jdbc.datasource.init.ResourceDatabasePopulator"
      uuid: "runScripts_resourceDatabasePopulator1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "runScripts_void4"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.Resource"
      uuid: "runScripts_object1"
      fixed: false
      collectionUuid: "runScripts_iterator1-CollectionContent"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.jdbc.datasource.init.DatabasePopulatorUtils"
      uuid: "uuid5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "runScripts_void5"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.jdbc.datasource.init.ResourceDatabasePopulator"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          sqlScriptEncoding:
            sapientType: "BASIC"
            content: !<regular>
              value: "sqlScriptEncoding1"
            valueType: "java.lang.String"
            uuid: "runScripts_string2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          separator:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getSeparator1"
            valueType: "java.lang.String"
            uuid: "runScripts_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          continueOnError:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "runScripts_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.jdbc.datasource.init.ResourceDatabasePopulator"
      uuid: "runScripts_resourceDatabasePopulator1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "javax.sql.DataSource"
      uuid: "<init>_dataSource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid6"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "runScripts1WhenScriptsIsEmpty"
    constructorSignature: "<init>(javax.sql.DataSource,org.springframework.boot.sql.init.DatabaseInitializationSettings)\
      \ : void"
    modelFingerprint: "2E214761D560CA73296915EFC15B63A4"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "32dd1ed5-3ef3-3679-b5fb-5a510434be0b"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.nio.charset.Charset.name() : java.lang.String"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path3"
    testPathName: "runScripts1WhenScriptsGetEncodingIsNullAndScriptsIsNotEmpty"
    constructorSignature: "<init>(javax.sql.DataSource,org.springframework.boot.sql.init.DatabaseInitializationSettings)\
      \ : void"
    modelFingerprint: "59EFC850C528A0A61A14E133D6E42A51"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "71530929-fd95-36d0-a10a-0d7751da6056"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "populator"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "populator.addScript(resource);"
      lineNumber: 84
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: populator - Method: addScript"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path4"
    testPathName: "runScripts1WhenScriptsGetEncodingIsNullAndScriptsIsEmpty"
    constructorSignature: "<init>(javax.sql.DataSource,org.springframework.boot.sql.init.DatabaseInitializationSettings)\
      \ : void"
    modelFingerprint: "E15A033E7591668ACE438D69C6FB33ED"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "710e13f6-4781-3d9c-af2c-84a5a1eed64c"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
- method:
    name: "customize"
    signature: "customize(org.springframework.jdbc.datasource.init.ResourceDatabasePopulator)\
      \ : void"
    sourceCodeSignature: "void customize(ResourceDatabasePopulator populator)"
    instructionFingerprint: "C79D30ACC88C182FB7FDA25BAD7CDCAB"
  paths:
  - pathId: "path1"
    testPathName: "customizeTest"
    constructorSignature: "<init>(javax.sql.DataSource,org.springframework.boot.sql.init.DatabaseInitializationSettings)\
      \ : void"
    modelFingerprint: "733D7A21D9964E3E02FF82021B399DBB"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "6ec590c7-ab5d-3746-8651-da58e1055d68"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
