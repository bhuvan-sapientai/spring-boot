---
modelFingerprint: "96F5562A39E8C5E3652AE24CDD13BA4F"
targetClass:
  fullClassName: "org.springframework.boot.web.reactive.result.view.MustacheViewResolver"
methods:
- method:
    name: "setCharset"
    sourceCodeSignature: "void setCharset(String charset)"
    returnType: "void"
    parameters:
    - name: "charset"
      type: "java.lang.String"
    instructionFingerprint: "7CE64AE350F1AB4E4BF9343F967573FA"
  paths:
  - pathId: "path1"
    testPathName: "setCharsetTest"
    constructorSignature: "<init>(com.samskivert.mustache.Mustache$Compiler) : void"
    modelFingerprint: "CE4334FD84D7B235744550CE924EC549"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "requiredViewClass"
    sourceCodeSignature: "Class<?> requiredViewClass()"
    returnType: "java.lang.Class"
    genericReturnType: "?"
    instructionFingerprint: "3EB00E4C7B4C5704287057B692ACB357"
  paths:
  - pathId: "path1"
    testPathName: "requiredViewClassTest"
    constructorSignature: "<init>(com.samskivert.mustache.Mustache$Compiler) : void"
    modelFingerprint: "F3FB0E8734B28107DF06E4D5EEAE6324"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "0BB5B4B4E2DA1D83216A01A0B29C8897"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "58D18700D5F127D93D79916B4AFE6DEC"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.reactive.result.view.MustacheViewResolver"
        parameters:
        - name: "compiler"
          value:
            sapientType: "MOCK"
            valueType: "com.samskivert.mustache.Mustache$Compiler"
            uuid: "compiler"
      valueType: "org.springframework.boot.web.reactive.result.view.MustacheViewResolver"
      uuid: "target"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.web.reactive.result.view.MustacheView"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.web.reactive.result.view.MustacheView"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "createView"
    sourceCodeSignature: "AbstractUrlBasedView createView(String viewName)"
    returnType: "org.springframework.web.reactive.result.view.AbstractUrlBasedView"
    parameters:
    - name: "viewName"
      type: "java.lang.String"
    instructionFingerprint: "7128285C8C162D442B4A64DE40A89A66"
  paths:
  - pathId: "path1"
    testPathName: "createViewTest"
    constructorSignature: "<init>(com.samskivert.mustache.Mustache$Compiler) : void"
    modelFingerprint: "51942074AA0E7D8946F90FD2AF0D496C"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "0BB5B4B4E2DA1D83216A01A0B29C8897"
      valueUuid: "target"
    - type: "INPUT"
      name: "viewName"
      modelFingerprint: "68953B1086ED0113D2364AE1B5EB8851"
      valueUuid: "viewName"
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "477DF30C74753FE4871E99F7A0A82921"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "state(expression:uniqueUuid1,message:uniqueUuid2):void"
        staticAccess: true
    - type: "STATIC"
      name: "BeanUtils.class"
      modelFingerprint: "233CBD0E5A8DD375385FFD92BF049903"
      valueUuid: "BeanUtils.class"
      methodExercised:
        expression: "instantiateClass(clazz:uniqueUuid3):object"
        throwsExceptions:
        - "org.springframework.beans.BeanInstantiationException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "view"
      modelFingerprint: "903A4B4C096AF13922672B00021EE463"
      valueUuid: "object"
      methodExercised:
        expression: "setSupportedMediaTypes(supportedMediaTypes:arrayList):void2"
    - type: "LOCAL_VARIABLE"
      name: "view"
      modelFingerprint: "68F3B300F9BBBC78E5F43DE607F4E5AD"
      valueUuid: "object"
      methodExercised:
        expression: "setDefaultCharset(defaultCharset:charset2):void3"
    - type: "LOCAL_VARIABLE"
      name: "view"
      modelFingerprint: "13138E7485FA51D96B1D44C7DC3EE77E"
      valueUuid: "object"
      methodExercised:
        expression: "setUrl(url:string3):void4"
    - type: "LOCAL_VARIABLE"
      name: "view"
      modelFingerprint: "8E24183FA2F8D46B838E384B2C75595C"
      valueUuid: "object"
      methodExercised:
        expression: "setRequestContextAttribute(requestContextAttribute:fieldString5):void5"
    - type: "LOCAL_VARIABLE"
      name: "view"
      modelFingerprint: "76CD1DEF089416267C7221C032F757D4"
      valueUuid: "object"
      methodExercised:
        expression: "setCompiler(compiler:compiler):void6"
    - type: "LOCAL_VARIABLE"
      name: "view"
      modelFingerprint: "8A72262ED42475B47DC4D56B4ECDF508"
      valueUuid: "object"
      methodExercised:
        expression: "setCharset(charset:fieldString):void7"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "6AAA8BB3CCFA07C70FB61B7840F10119"
      valueUuid: "object"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.reactive.result.view.MustacheViewResolver"
        parameters:
        - name: "compiler"
          value:
            sapientType: "MOCK"
            valueType: "com.samskivert.mustache.Mustache$Compiler"
            uuid: "compiler"
        propertiesMap:
          charset:
            sapientType: "BASIC"
            content: !<regular>
              value: "C"
            valueType: "java.lang.String"
            uuid: "fieldString"
          requestContextAttribute:
            sapientType: "BASIC"
            content: !<regular>
              value: "B"
            valueType: "java.lang.String"
            uuid: "fieldString5"
          defaultCharset:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.nio.charset.Charset"
              method: "defaultCharset"
              methodParameters: []
            valueType: "java.nio.charset.Charset"
            uuid: "charset2"
      valueType: "org.springframework.boot.web.reactive.result.view.MustacheViewResolver"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "viewName"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "No view class"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.BeanUtils"
      uuid: "BeanUtils.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.reactive.result.view.MustacheView"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.web.reactive.result.view.MustacheView"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.web.reactive.result.view.MustacheView"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.reactive.result.view.MustacheView"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters:
        - name: "initialCapacity"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 4
            valueType: "int"
            uuid: "uniqueUuid4"
            fixed: true
        values:
        - sapientType: "OBJECT"
          content: !<static_field_return>
            target: "org.springframework.web.reactive.result.view.ViewResolverSupport"
            fieldName: "DEFAULT_CONTENT_TYPE"
          valueType: "org.springframework.http.MediaType"
          uuid: "fieldMediaType"
      valueType: "java.util.List"
      genericValueType: "org.springframework.http.MediaType"
      uuid: "arrayList"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.reactive.result.view.MustacheView"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.nio.charset.Charset"
        method: "defaultCharset"
        methodParameters: []
      valueType: "java.nio.charset.Charset"
      uuid: "charset2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.reactive.result.view.MustacheView"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.reactive.result.view.MustacheView"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "fieldString5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.reactive.result.view.MustacheView"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "com.samskivert.mustache.Mustache$Compiler"
      uuid: "compiler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.reactive.result.view.MustacheView"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "C"
      valueType: "java.lang.String"
      uuid: "fieldString"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.reactive.result.view.MustacheView"
      uuid: "object"
      explicitCastNeeded: true
- method:
    name: "instantiateView"
    sourceCodeSignature: "AbstractUrlBasedView instantiateView()"
    returnType: "org.springframework.web.reactive.result.view.AbstractUrlBasedView"
    instructionFingerprint: "5053A7E50635F9069442E7079C6C7CAC"
  paths:
  - pathId: "path1"
    testPathName: "instantiateViewWhenGetViewClassEqualsMustacheView"
    constructorSignature: "<init>(com.samskivert.mustache.Mustache$Compiler) : void"
    modelFingerprint: "8F48C1316A1563A93AC5309BAC83DDA0"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "0BB5B4B4E2DA1D83216A01A0B29C8897"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "906DC4654562D2E7F36207B6CB282544"
      valueUuid: "mustacheView"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.reactive.result.view.MustacheViewResolver"
        parameters:
        - name: "compiler"
          value:
            sapientType: "MOCK"
            valueType: "com.samskivert.mustache.Mustache$Compiler"
            uuid: "compiler"
      valueType: "org.springframework.boot.web.reactive.result.view.MustacheViewResolver"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.reactive.result.view.MustacheView"
        parameters: []
      valueType: "org.springframework.boot.web.reactive.result.view.MustacheView"
      uuid: "mustacheView"
      fixed: true
    branches:
    - lineNumber: 81
      expression: "getViewClass() == MustacheView.class"
      range: "(81,11)-(81,46)"
      evaluatedAs: true
