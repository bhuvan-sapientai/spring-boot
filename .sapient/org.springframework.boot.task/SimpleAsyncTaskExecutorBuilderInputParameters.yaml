---
modelFingerprint: "EC3DD2EBB0997674D2E72FC9D0F8955C"
targetClass:
  fullClassName: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
methods:
- method:
    name: "threadNamePrefix"
    sourceCodeSignature: "SimpleAsyncTaskExecutorBuilder threadNamePrefix(String threadNamePrefix)"
    returnType: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
    parameters:
    - name: "threadNamePrefix"
      type: "java.lang.String"
    instructionFingerprint: "49A13F160D8C0C0290ED6D3E45250BC1"
  paths:
  - pathId: "path1"
    testPathName: "threadNamePrefixTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "7C8610BC978ADDAADB90C65BFD7642B7"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "threadNamePrefix"
      modelFingerprint: "9F9EA50672AC88DCFFD3FE5EA043CC4A"
      valueUuid: "threadNamePrefix"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "949EA381D8EDCE693310875AED39D43A"
      valueUuid: "simpleAsyncTaskExecutorBuilder3"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "threadNamePrefix1"
      valueType: "java.lang.String"
      uuid: "threadNamePrefix"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
        parameters:
        - name: "virtualThreads"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid1"
        - name: "threadNamePrefix"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "threadNamePrefix1"
            valueType: "java.lang.String"
            uuid: "threadNamePrefix"
        - name: "concurrencyLimit"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid2"
        - name: "taskDecorator"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.task.TaskDecorator"
            uuid: "uniqueUuid3"
        - name: "customizers"
          value:
            sapientType: "NULL"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorCustomizer"
            uuid: "uniqueUuid4"
        - name: "taskTerminationTimeout"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid5"
      valueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
      uuid: "simpleAsyncTaskExecutorBuilder3"
      fixed: true
- method:
    name: "virtualThreads"
    sourceCodeSignature: "SimpleAsyncTaskExecutorBuilder virtualThreads(Boolean virtualThreads)"
    returnType: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
    parameters:
    - name: "virtualThreads"
      type: "java.lang.Boolean"
    instructionFingerprint: "B2465E04C10C87F73C1666B85EAD43D0"
  paths:
  - pathId: "path1"
    testPathName: "virtualThreadsTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "9EEBEFD02C39D8AF9D08448E5EC90B55"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "virtualThreads"
      modelFingerprint: "D3DE30A3C9568DD581224DB91FE70777"
      valueUuid: "virtualThreads"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "60ACADCBA01F22ED570DA90D872B9844"
      valueUuid: "simpleAsyncTaskExecutorBuilder3"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "java.lang.Boolean"
      uuid: "virtualThreads"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
        parameters:
        - name: "virtualThreads"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "java.lang.Boolean"
            uuid: "virtualThreads"
        - name: "threadNamePrefix"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "uniqueUuid6"
        - name: "concurrencyLimit"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid7"
        - name: "taskDecorator"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.task.TaskDecorator"
            uuid: "uniqueUuid8"
        - name: "customizers"
          value:
            sapientType: "NULL"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorCustomizer"
            uuid: "uniqueUuid9"
        - name: "taskTerminationTimeout"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid10"
      valueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
      uuid: "simpleAsyncTaskExecutorBuilder3"
      fixed: true
- method:
    name: "concurrencyLimit"
    sourceCodeSignature: "SimpleAsyncTaskExecutorBuilder concurrencyLimit(Integer\
      \ concurrencyLimit)"
    returnType: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
    parameters:
    - name: "concurrencyLimit"
      type: "java.lang.Integer"
    instructionFingerprint: "088EF6E1D3E1DEEF6CA82B6D4829A852"
  paths:
  - pathId: "path1"
    testPathName: "concurrencyLimitTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "21F40CDF2B7B11884493A296356F1BAE"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "concurrencyLimit"
      modelFingerprint: "01307B5194DB6C9A5300FB7B8989FC35"
      valueUuid: "concurrencyLimit"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B422BC67A5707746A5933E84D2514A3F"
      valueUuid: "simpleAsyncTaskExecutorBuilder3"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "java.lang.Integer"
      uuid: "concurrencyLimit"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
        parameters:
        - name: "virtualThreads"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid11"
        - name: "threadNamePrefix"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "uniqueUuid12"
        - name: "concurrencyLimit"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "java.lang.Integer"
            uuid: "concurrencyLimit"
        - name: "taskDecorator"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.task.TaskDecorator"
            uuid: "uniqueUuid13"
        - name: "customizers"
          value:
            sapientType: "NULL"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorCustomizer"
            uuid: "uniqueUuid14"
        - name: "taskTerminationTimeout"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid15"
      valueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
      uuid: "simpleAsyncTaskExecutorBuilder3"
      fixed: true
- method:
    name: "taskDecorator"
    sourceCodeSignature: "SimpleAsyncTaskExecutorBuilder taskDecorator(TaskDecorator\
      \ taskDecorator)"
    returnType: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
    parameters:
    - name: "taskDecorator"
      type: "org.springframework.core.task.TaskDecorator"
    instructionFingerprint: "01D44442721F59899C9AEA8688E55343"
  paths:
  - pathId: "path1"
    testPathName: "taskDecoratorTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "0F3C7048B6784666A46479A2A3560983"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "taskDecorator"
      modelFingerprint: "ADD4A762759BCA0286B1FB7B90ECAA19"
      valueUuid: "taskDecorator"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "0030DD9D4BB44ECD9F66CA9EE147E595"
      valueUuid: "simpleAsyncTaskExecutorBuilder3"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.task.TaskDecorator"
      uuid: "taskDecorator"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
        parameters:
        - name: "virtualThreads"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid16"
        - name: "threadNamePrefix"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "uniqueUuid17"
        - name: "concurrencyLimit"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid18"
        - name: "taskDecorator"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.task.TaskDecorator"
            uuid: "taskDecorator"
        - name: "customizers"
          value:
            sapientType: "NULL"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorCustomizer"
            uuid: "uniqueUuid19"
        - name: "taskTerminationTimeout"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid20"
      valueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
      uuid: "simpleAsyncTaskExecutorBuilder3"
      fixed: true
- method:
    name: "taskTerminationTimeout"
    sourceCodeSignature: "SimpleAsyncTaskExecutorBuilder taskTerminationTimeout(Duration\
      \ taskTerminationTimeout)"
    returnType: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
    parameters:
    - name: "taskTerminationTimeout"
      type: "java.time.Duration"
    instructionFingerprint: "9FC1918AFE12C766DEFD761138E91FCD"
  paths:
  - pathId: "path1"
    testPathName: "taskTerminationTimeoutTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "36B352D9469803BB296F5BC51AB5EB7A"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "taskTerminationTimeout"
      modelFingerprint: "0CF258327AFB88AD6839766E67F5F74D"
      valueUuid: "taskTerminationTimeout"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "6BE63CBD6E40EB495102E90036A71435"
      valueUuid: "simpleAsyncTaskExecutorBuilder3"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "taskTerminationTimeout-days"
      valueType: "java.time.Duration"
      uuid: "taskTerminationTimeout"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
        parameters:
        - name: "virtualThreads"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid21"
        - name: "threadNamePrefix"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "uniqueUuid22"
        - name: "concurrencyLimit"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid23"
        - name: "taskDecorator"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.task.TaskDecorator"
            uuid: "uniqueUuid24"
        - name: "customizers"
          value:
            sapientType: "NULL"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorCustomizer"
            uuid: "uniqueUuid25"
        - name: "taskTerminationTimeout"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "taskTerminationTimeout-days"
            valueType: "java.time.Duration"
            uuid: "taskTerminationTimeout"
      valueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
      uuid: "simpleAsyncTaskExecutorBuilder3"
      fixed: true
- method:
    name: "customizers"
    sourceCodeSignature: "SimpleAsyncTaskExecutorBuilder customizers(SimpleAsyncTaskExecutorCustomizer...\
      \ customizers)"
    returnType: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
    parameters:
    - name: "customizers"
      type: "org.springframework.boot.task.SimpleAsyncTaskExecutorCustomizer[]"
    instructionFingerprint: "0A1533DBE5F1FB888187F508AC966D47"
  paths:
  - pathId: "path1"
    testPathName: "customizersTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "1A24CB76F460669EEDA83FE68B5D323F"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "customizers"
      modelFingerprint: "C3F9F434107EE3461C7A7EC18ACAD083"
      valueUuid: "customizers"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5EBA8045BA7D716DCB5E0369EFD543F6"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:customizers,message:uniqueUuid26):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "A8872D64758E8B210DC40A2C641EF51B"
      methodExercised:
        expression: "customizers(customizers:list):simpleAsyncTaskExecutorBuilder3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8B0A576BF2E65C410E66DD374EEB7AB5"
      valueUuid: "simpleAsyncTaskExecutorBuilder3"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorCustomizer[]"
      uuid: "customizers"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorCustomizer[]"
      uuid: "customizers"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Customizers must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid26"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
      uuid: "simpleAsyncTaskExecutorBuilder3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorCustomizer"
      uuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
      uuid: "simpleAsyncTaskExecutorBuilder3"
- method:
    name: "customizers"
    sourceCodeSignature: "SimpleAsyncTaskExecutorBuilder customizers(Iterable<? extends\
      \ SimpleAsyncTaskExecutorCustomizer> customizers)"
    returnType: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
    parameters:
    - name: "customizers"
      type: "java.lang.Iterable"
    instructionFingerprint: "5D8B4D95715FE1AFE65734CC2B3D1965"
  paths:
  - pathId: "path1"
    testPathName: "customizers1WhenSetIsNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "2D960D33C839BD32F83DA6CEA7F3E5D2"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "customizers"
      modelFingerprint: "61530FD42634DFEB97B41B20340B08C1"
      valueUuid: "customizers"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1C9F91E3AA1D0325D29110E43E8BED95"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:customizers,message:uniqueUuid27):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "237464919A03E9B08FF706E6B8F51C4B"
      valueUuid: "simpleAsyncTaskExecutorBuilder3"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorCustomizer"
          uuid: "simpleAsyncTaskExecutorCustomizer"
          collectionUuid: "customizers"
      valueType: "java.lang.Iterable"
      genericValueType: "? extends org.springframework.boot.task.SimpleAsyncTaskExecutorCustomizer"
      uuid: "customizers"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorCustomizer"
          uuid: "simpleAsyncTaskExecutorCustomizer"
          collectionUuid: "customizers"
      valueType: "java.lang.Iterable"
      genericValueType: "? extends org.springframework.boot.task.SimpleAsyncTaskExecutorCustomizer"
      uuid: "customizers"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Customizers must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid27"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
        parameters:
        - name: "virtualThreads"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid28"
        - name: "threadNamePrefix"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "uniqueUuid29"
        - name: "concurrencyLimit"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid30"
        - name: "taskDecorator"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.task.TaskDecorator"
            uuid: "uniqueUuid31"
        - name: "customizers"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.LinkedHashSet"
              parameters:
              - name: "c"
                value:
                  sapientType: "COLLECTION"
                  content: !<collection>
                    parameters: []
                    values: []
                  valueType: "java.util.Set"
                  uuid: "set"
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorCustomizer"
                uuid: "simpleAsyncTaskExecutorCustomizer"
                collectionUuid: "customizers"
            valueType: "java.util.Set"
            uuid: "set3"
        - name: "taskTerminationTimeout"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid32"
      valueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
      uuid: "simpleAsyncTaskExecutorBuilder3"
      fixed: true
    branches:
    - lineNumber: 230
      expression: "set != null"
      range: "(230,40)-(230,50)"
      evaluatedAs: false
      internalMethodName: "append"
- method:
    name: "additionalCustomizers"
    sourceCodeSignature: "SimpleAsyncTaskExecutorBuilder additionalCustomizers(SimpleAsyncTaskExecutorCustomizer...\
      \ customizers)"
    returnType: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
    parameters:
    - name: "customizers"
      type: "org.springframework.boot.task.SimpleAsyncTaskExecutorCustomizer[]"
    instructionFingerprint: "B38E26607D7DF18FDFA42B7B81DE6EE1"
  paths:
  - pathId: "path1"
    testPathName: "additionalCustomizersTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "397B03D7F4315044E9C93D2EB936EF7B"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "customizers"
      modelFingerprint: "C3F9F434107EE3461C7A7EC18ACAD083"
      valueUuid: "customizers"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5EBA8045BA7D716DCB5E0369EFD543F6"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:customizers,message:uniqueUuid33):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "6BAA30CB696A86E0BE51BB3CFC0C3569"
      methodExercised:
        expression: "additionalCustomizers(customizers:list):simpleAsyncTaskExecutorBuilder3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8B0A576BF2E65C410E66DD374EEB7AB5"
      valueUuid: "simpleAsyncTaskExecutorBuilder3"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorCustomizer[]"
      uuid: "customizers"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorCustomizer[]"
      uuid: "customizers"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Customizers must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid33"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
      uuid: "simpleAsyncTaskExecutorBuilder3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorCustomizer"
      uuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
      uuid: "simpleAsyncTaskExecutorBuilder3"
- method:
    name: "additionalCustomizers"
    sourceCodeSignature: "SimpleAsyncTaskExecutorBuilder additionalCustomizers(Iterable<?\
      \ extends SimpleAsyncTaskExecutorCustomizer> customizers)"
    returnType: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
    parameters:
    - name: "customizers"
      type: "java.lang.Iterable"
    instructionFingerprint: "7BA095647872193392EA2492047B8219"
  paths:
  - pathId: "path1"
    testPathName: "additionalCustomizers1WhenSetIsNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "05136AB422F40F44830A94472DE27308"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "customizers"
      modelFingerprint: "61530FD42634DFEB97B41B20340B08C1"
      valueUuid: "customizers"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1C9F91E3AA1D0325D29110E43E8BED95"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:customizers,message:uniqueUuid34):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "237464919A03E9B08FF706E6B8F51C4B"
      valueUuid: "simpleAsyncTaskExecutorBuilder3"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorCustomizer"
          uuid: "simpleAsyncTaskExecutorCustomizer"
          collectionUuid: "customizers"
      valueType: "java.lang.Iterable"
      genericValueType: "? extends org.springframework.boot.task.SimpleAsyncTaskExecutorCustomizer"
      uuid: "customizers"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorCustomizer"
          uuid: "simpleAsyncTaskExecutorCustomizer"
          collectionUuid: "customizers"
      valueType: "java.lang.Iterable"
      genericValueType: "? extends org.springframework.boot.task.SimpleAsyncTaskExecutorCustomizer"
      uuid: "customizers"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Customizers must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid34"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
        parameters:
        - name: "virtualThreads"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid35"
        - name: "threadNamePrefix"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "uniqueUuid36"
        - name: "concurrencyLimit"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid37"
        - name: "taskDecorator"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.task.TaskDecorator"
            uuid: "uniqueUuid38"
        - name: "customizers"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.LinkedHashSet"
              parameters:
              - name: "c"
                value:
                  sapientType: "COLLECTION"
                  content: !<collection>
                    parameters: []
                    values: []
                  valueType: "java.util.Set"
                  uuid: "set"
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorCustomizer"
                uuid: "simpleAsyncTaskExecutorCustomizer"
                collectionUuid: "customizers"
            valueType: "java.util.Set"
            uuid: "set3"
        - name: "taskTerminationTimeout"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid39"
      valueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
      uuid: "simpleAsyncTaskExecutorBuilder3"
      fixed: true
    branches:
    - lineNumber: 230
      expression: "set != null"
      range: "(230,40)-(230,50)"
      evaluatedAs: false
      internalMethodName: "append"
- method:
    name: "build"
    sourceCodeSignature: "SimpleAsyncTaskExecutor build()"
    returnType: "org.springframework.core.task.SimpleAsyncTaskExecutor"
    instructionFingerprint: "BC70A9E4CD3279EB319AF2CF266AECFB"
  paths:
  - pathId: "path1"
    testPathName: "buildTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "B1974AF42A9D740C0B6E87DED1F9CB25"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "7E4416520303329FAC47EBD88C994B81"
      methodExercised:
        expression: "configure(taskExecutor:simpleAsyncTaskExecutor):simpleAsyncTaskExecutor2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "88704D025EE835EBE85B9260C2736BC5"
      valueUuid: "simpleAsyncTaskExecutor2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.task.SimpleAsyncTaskExecutor"
      uuid: "simpleAsyncTaskExecutor2"
    - sapientType: "ANY"
      valueType: "org.springframework.core.task.SimpleAsyncTaskExecutor"
      uuid: "simpleAsyncTaskExecutor"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.task.SimpleAsyncTaskExecutor"
      uuid: "simpleAsyncTaskExecutor2"
- method:
    name: "build"
    sourceCodeSignature: "<T extends SimpleAsyncTaskExecutor> T build(Class<T> taskExecutorClass)"
    returnType: "org.springframework.core.task.SimpleAsyncTaskExecutor"
    parameters:
    - name: "taskExecutorClass"
      type: "java.lang.Class"
    instructionFingerprint: "68AFD4F81B31FA15FA20D454A129F1EF"
  paths:
  - pathId: "path1"
    testPathName: "build1Test"
    constructorSignature: "<init>() : void"
    modelFingerprint: "92C1BF964A0DBE1E68F6B574F32201A1"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "taskExecutorClass"
      modelFingerprint: "A4C37F3D9ECF2B556F471777B119009A"
      valueUuid: "taskExecutorClass"
    - type: "STATIC"
      name: "BeanUtils.class"
      modelFingerprint: "C4DA3DC4D328CCDB23D825CB080F4A0B"
      valueUuid: "BeanUtils.class"
      methodExercised:
        expression: "instantiateClass(clazz:taskExecutorClass):simpleAsyncTaskExecutor"
        throwsExceptions:
        - "org.springframework.beans.BeanInstantiationException"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "6CD70F0872474D7B5ACF9067E7E11A90"
      methodExercised:
        expression: "configure(taskExecutor:simpleAsyncTaskExecutor):simpleAsyncTaskExecutor2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "88704D025EE835EBE85B9260C2736BC5"
      valueUuid: "simpleAsyncTaskExecutor2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
      uuid: "target"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.core.task.SimpleAsyncTaskExecutor"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.core.task.SimpleAsyncTaskExecutor"
      uuid: "taskExecutorClass"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.BeanUtils"
      uuid: "BeanUtils.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.task.SimpleAsyncTaskExecutor"
      uuid: "simpleAsyncTaskExecutor"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.core.task.SimpleAsyncTaskExecutor"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.core.task.SimpleAsyncTaskExecutor"
      uuid: "taskExecutorClass"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.task.SimpleAsyncTaskExecutor"
      uuid: "simpleAsyncTaskExecutor2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.task.SimpleAsyncTaskExecutor"
      uuid: "simpleAsyncTaskExecutor"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.task.SimpleAsyncTaskExecutor"
      uuid: "simpleAsyncTaskExecutor2"
- method:
    name: "configure"
    sourceCodeSignature: "<T extends SimpleAsyncTaskExecutor> T configure(T taskExecutor)"
    returnType: "org.springframework.core.task.SimpleAsyncTaskExecutor"
    parameters:
    - name: "taskExecutor"
      type: "org.springframework.core.task.SimpleAsyncTaskExecutor"
    instructionFingerprint: "AC377DF570724F5F5C48E83E626FEFC5"
  paths:
  - pathId: "path1"
    testPathName: "configureWhenCollectionUtilsIsEmptyThisCustomizers"
    constructorSignature: "<init>() : void"
    modelFingerprint: "D11F1174BF4F7769DADA05F03DBC9A5E"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "taskExecutor"
      modelFingerprint: "3C31FC2B9715995478B6317721CB49AB"
      valueUuid: "taskExecutor"
    - type: "STATIC"
      name: "PropertyMapper.class"
      modelFingerprint: "B1B41702847FC8B31AB887927AD81CC1"
      valueUuid: "PropertyMapper.class"
      methodExercised:
        expression: "get():propertyMapper"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "44331629620EEBF77844433E7BB802E9"
      valueUuid: "propertyMapper"
      methodExercised:
        expression: "alwaysApplyingWhenNonNull():propertyMapper2"
    - type: "LOCAL_VARIABLE"
      name: "map"
      modelFingerprint: "8AADCA87F43E3B21BD55B463405C4AFC"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "from(value:uniqueUuid40):propertyMapper.Source"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "7F471C9EE842352039FDFCB21D31C037"
      valueUuid: "propertyMapper.Source"
      methodExercised:
        expression: "to(consumer:uniqueUuid41):void"
    - type: "LOCAL_VARIABLE"
      name: "map"
      modelFingerprint: "288EB52B25A2DEEDC88F5A15891C773A"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "from(value:uniqueUuid42):propertyMapper.Source2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F3123572AA5A8E049D734158F3888C8E"
      valueUuid: "propertyMapper.Source2"
      methodExercised:
        expression: "whenHasText():propertyMapper.Source3"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "39D91A7F236B48B074E9731F169596E8"
      valueUuid: "propertyMapper.Source3"
      methodExercised:
        expression: "to(consumer:uniqueUuid45):void2"
    - type: "LOCAL_VARIABLE"
      name: "map"
      modelFingerprint: "3C3F8CF40A2E825C718F81DC4B862CC2"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "from(value:uniqueUuid46):propertyMapper.Source4"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "863EE5ED5B493523F7672AB59CD67B8A"
      valueUuid: "propertyMapper.Source4"
      methodExercised:
        expression: "to(consumer:uniqueUuid48):void3"
    - type: "LOCAL_VARIABLE"
      name: "map"
      modelFingerprint: "6CF102F1E08D7894B336BAA018C0A55C"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "from(value:uniqueUuid50):propertyMapper.Source5"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "4409969EE876BF4B53DE805CA2BC2A39"
      valueUuid: "propertyMapper.Source5"
      methodExercised:
        expression: "to(consumer:uniqueUuid52):void4"
    - type: "LOCAL_VARIABLE"
      name: "map"
      modelFingerprint: "CDD7560945182734D68D51D6C8859915"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "from(value:uniqueUuid54):propertyMapper.Source6"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E6A6984D952D3B0FCD40908F1733F39A"
      valueUuid: "propertyMapper.Source6"
      methodExercised:
        expression: "as(adapter:uniqueUuid56):propertyMapper.Source7"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "5191C5A67CD6D9016AE3D798D5E9CC67"
      valueUuid: "propertyMapper.Source7"
      methodExercised:
        expression: "to(consumer:uniqueUuid59):void5"
    - type: "STATIC"
      name: "CollectionUtils.class.real"
      modelFingerprint: "FD5673FA3081EEAF414C1FFB061617B8"
      valueUuid: "CollectionUtils.class.real"
      methodExercised:
        expression: "isEmpty(collection:uniqueUuid61):boolean1"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "EDFA21C3E6E986E4D3DABC515377B19B"
      valueUuid: "taskExecutor"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "map.from(this.threadNamePrefix).whenHasText().to(taskExecutor::setThreadNamePrefix);"
      lineNumber: 219
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type PropertyMapper.Source - Method: to"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.task.SimpleAsyncTaskExecutor"
      uuid: "taskExecutor"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "PropertyMapper.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source"
    - sapientType: "NULL"
      valueType: "java.lang.Boolean"
      uuid: "uniqueUuid40"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid41"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "uniqueUuid44"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source2"
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "uniqueUuid42"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "uniqueUuid44"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.springframework.boot.context.properties.PropertyMapper$Source"
            localVariableValue:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.PropertyMapper"
              uuid: "propertyMapper2"
            methodParameters:
            - value:
                sapientType: "NULL"
                valueType: "java.lang.String"
            methodName: "from"
          valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
          uuid: "propertyMapper.Source2"
        methodParameters: []
        methodName: "whenHasText"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source3"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.springframework.boot.context.properties.PropertyMapper$Source"
            localVariableValue:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.PropertyMapper"
              uuid: "propertyMapper2"
            methodParameters:
            - value:
                sapientType: "NULL"
                valueType: "java.lang.String"
            methodName: "from"
          valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
          uuid: "propertyMapper.Source2"
        methodParameters: []
        methodName: "whenHasText"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid45"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid49"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source4"
    - sapientType: "NULL"
      valueType: "java.lang.Integer"
      uuid: "uniqueUuid46"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid49"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source4"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid48"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "org.springframework.core.task.TaskDecorator"
            uuid: "uniqueUuid53"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source5"
    - sapientType: "NULL"
      valueType: "org.springframework.core.task.TaskDecorator"
      uuid: "uniqueUuid50"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "org.springframework.core.task.TaskDecorator"
            uuid: "uniqueUuid53"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source5"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid52"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid58"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source6"
    - sapientType: "NULL"
      valueType: "java.time.Duration"
      uuid: "uniqueUuid54"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid58"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source6"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.springframework.boot.context.properties.PropertyMapper$Source"
            localVariableValue:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.PropertyMapper"
              uuid: "propertyMapper2"
            methodParameters:
            - value:
                sapientType: "NULL"
                valueType: "java.time.Duration"
            methodName: "from"
          valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
          uuid: "propertyMapper.Source6"
        methodParameters:
        - name: "adapter"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Function"
            uuid: "uniqueUuid60"
        methodName: "as"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source7"
    - sapientType: "ANY"
      valueType: "java.util.function.Function"
      uuid: "uniqueUuid56"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.springframework.boot.context.properties.PropertyMapper$Source"
            localVariableValue:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.PropertyMapper"
              uuid: "propertyMapper2"
            methodParameters:
            - value:
                sapientType: "NULL"
                valueType: "java.time.Duration"
            methodName: "from"
          valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
          uuid: "propertyMapper.Source6"
        methodParameters:
        - name: "adapter"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Function"
            uuid: "uniqueUuid60"
        methodName: "as"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source7"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid59"
    - sapientType: "REAL"
      valueType: "org.springframework.util.CollectionUtils"
      uuid: "CollectionUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "NULL"
      valueType: "java.util.Set"
      genericValueType: "org.springframework.boot.task.SimpleAsyncTaskExecutorCustomizer"
      uuid: "uniqueUuid61"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.task.SimpleAsyncTaskExecutor"
      uuid: "taskExecutor"
    branches:
    - lineNumber: 223
      expression: "!CollectionUtils.isEmpty(this.customizers)"
      range: "(223,7)-(223,48)"
      evaluatedAs: false
