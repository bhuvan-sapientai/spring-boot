---
modelFingerprint: "574AA6D42CEE297486EC1476E3098A91"
targetClass:
  fullClassName: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
methods:
- method:
    name: "queueCapacity"
    sourceCodeSignature: "ThreadPoolTaskExecutorBuilder queueCapacity(int queueCapacity)"
    returnType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
    parameters:
    - name: "queueCapacity"
      type: "int"
    instructionFingerprint: "1CF4CB6B8151C1050A0A694EE3005033"
  paths:
  - pathId: "path1"
    testPathName: "queueCapacityTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "D4B08722685A94E0F2EA5224289AFF2A"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "queueCapacity"
      modelFingerprint: "6A423AC6F6AC1E6FF85C0CCB8D2F86DF"
      valueUuid: "queueCapacity"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "356022FD23DE1539D13ACCED6116B6B5"
      valueUuid: "threadPoolTaskExecutorBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "queueCapacity"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
        parameters:
        - name: "queueCapacity"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "java.lang.Integer"
            uuid: "integer"
        - name: "corePoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid1"
        - name: "maxPoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid2"
        - name: "allowCoreThreadTimeOut"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid3"
        - name: "keepAlive"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid4"
        - name: "acceptTasksAfterContextClose"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid5"
        - name: "awaitTermination"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid6"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid7"
        - name: "threadNamePrefix"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "uniqueUuid8"
        - name: "taskDecorator"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.task.TaskDecorator"
            uuid: "uniqueUuid9"
        - name: "customizers"
          value:
            sapientType: "NULL"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.task.ThreadPoolTaskExecutorCustomizer"
            uuid: "uniqueUuid10"
      valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
      uuid: "threadPoolTaskExecutorBuilder2"
      fixed: true
- method:
    name: "corePoolSize"
    sourceCodeSignature: "ThreadPoolTaskExecutorBuilder corePoolSize(int corePoolSize)"
    returnType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
    parameters:
    - name: "corePoolSize"
      type: "int"
    instructionFingerprint: "D6EB6F2BFB55BC61930A0B47CDE69036"
  paths:
  - pathId: "path1"
    testPathName: "corePoolSizeTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "2729FB7FA4CE8A580A2680C2E2945F57"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "corePoolSize"
      modelFingerprint: "344F42E7AA8A416B28F30F0FD9C08AE5"
      valueUuid: "corePoolSize"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "1A5BD8ACE8F7FE0BD81A799AF666BA95"
      valueUuid: "threadPoolTaskExecutorBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "corePoolSize"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
        parameters:
        - name: "queueCapacity"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid11"
        - name: "corePoolSize"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "java.lang.Integer"
            uuid: "integer"
        - name: "maxPoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid12"
        - name: "allowCoreThreadTimeOut"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid13"
        - name: "keepAlive"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid14"
        - name: "acceptTasksAfterContextClose"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid15"
        - name: "awaitTermination"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid16"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid17"
        - name: "threadNamePrefix"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "uniqueUuid18"
        - name: "taskDecorator"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.task.TaskDecorator"
            uuid: "uniqueUuid19"
        - name: "customizers"
          value:
            sapientType: "NULL"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.task.ThreadPoolTaskExecutorCustomizer"
            uuid: "uniqueUuid20"
      valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
      uuid: "threadPoolTaskExecutorBuilder2"
      fixed: true
- method:
    name: "maxPoolSize"
    sourceCodeSignature: "ThreadPoolTaskExecutorBuilder maxPoolSize(int maxPoolSize)"
    returnType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
    parameters:
    - name: "maxPoolSize"
      type: "int"
    instructionFingerprint: "6DB3BDD80D87488558C407F2A2E93C88"
  paths:
  - pathId: "path1"
    testPathName: "maxPoolSizeTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "8F5BAE3EFA680678465EB3B00C2C0984"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "maxPoolSize"
      modelFingerprint: "7C2A0D5923BF4DFB6097EDF96B421B05"
      valueUuid: "maxPoolSize"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "9EAC5D0BB22BD5AC313EE0528700A830"
      valueUuid: "threadPoolTaskExecutorBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "maxPoolSize"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
        parameters:
        - name: "queueCapacity"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid21"
        - name: "corePoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid22"
        - name: "maxPoolSize"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "java.lang.Integer"
            uuid: "integer"
        - name: "allowCoreThreadTimeOut"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid23"
        - name: "keepAlive"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid24"
        - name: "acceptTasksAfterContextClose"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid25"
        - name: "awaitTermination"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid26"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid27"
        - name: "threadNamePrefix"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "uniqueUuid28"
        - name: "taskDecorator"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.task.TaskDecorator"
            uuid: "uniqueUuid29"
        - name: "customizers"
          value:
            sapientType: "NULL"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.task.ThreadPoolTaskExecutorCustomizer"
            uuid: "uniqueUuid30"
      valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
      uuid: "threadPoolTaskExecutorBuilder2"
      fixed: true
- method:
    name: "allowCoreThreadTimeOut"
    sourceCodeSignature: "ThreadPoolTaskExecutorBuilder allowCoreThreadTimeOut(boolean\
      \ allowCoreThreadTimeOut)"
    returnType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
    parameters:
    - name: "allowCoreThreadTimeOut"
      type: "boolean"
    instructionFingerprint: "1E7CB429FF9AB03CF08AB8E9BA22C83E"
  paths:
  - pathId: "path1"
    testPathName: "allowCoreThreadTimeOutTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "ED6DCCC0C03822A52B9E960B4C072303"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "allowCoreThreadTimeOut"
      modelFingerprint: "C150883D835433CF0242E635F17C0A9F"
      valueUuid: "allowCoreThreadTimeOut"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "931109A5591CEE47B52742C4F4D9929D"
      valueUuid: "threadPoolTaskExecutorBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "allowCoreThreadTimeOut"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
        parameters:
        - name: "queueCapacity"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid31"
        - name: "corePoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid32"
        - name: "maxPoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid33"
        - name: "allowCoreThreadTimeOut"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "java.lang.Boolean"
            uuid: "boolean"
        - name: "keepAlive"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid34"
        - name: "acceptTasksAfterContextClose"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid35"
        - name: "awaitTermination"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid36"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid37"
        - name: "threadNamePrefix"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "uniqueUuid38"
        - name: "taskDecorator"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.task.TaskDecorator"
            uuid: "uniqueUuid39"
        - name: "customizers"
          value:
            sapientType: "NULL"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.task.ThreadPoolTaskExecutorCustomizer"
            uuid: "uniqueUuid40"
      valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
      uuid: "threadPoolTaskExecutorBuilder2"
      fixed: true
- method:
    name: "keepAlive"
    sourceCodeSignature: "ThreadPoolTaskExecutorBuilder keepAlive(Duration keepAlive)"
    returnType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
    parameters:
    - name: "keepAlive"
      type: "java.time.Duration"
    instructionFingerprint: "A4C015F212C403D71F7C5CBDB661A7F3"
  paths:
  - pathId: "path1"
    testPathName: "keepAliveTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "80699529DAB24DD0CAD5665B872D6A7C"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "keepAlive"
      modelFingerprint: "B48436654E1E361C069DEE350C49FDF0"
      valueUuid: "keepAlive"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2D467ED9A14B085CC0A7E380F9413628"
      valueUuid: "threadPoolTaskExecutorBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "keepAlive-days"
      valueType: "java.time.Duration"
      uuid: "keepAlive"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
        parameters:
        - name: "queueCapacity"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid41"
        - name: "corePoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid42"
        - name: "maxPoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid43"
        - name: "allowCoreThreadTimeOut"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid44"
        - name: "keepAlive"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "keepAlive-days"
            valueType: "java.time.Duration"
            uuid: "keepAlive"
        - name: "acceptTasksAfterContextClose"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid45"
        - name: "awaitTermination"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid46"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid47"
        - name: "threadNamePrefix"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "uniqueUuid48"
        - name: "taskDecorator"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.task.TaskDecorator"
            uuid: "uniqueUuid49"
        - name: "customizers"
          value:
            sapientType: "NULL"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.task.ThreadPoolTaskExecutorCustomizer"
            uuid: "uniqueUuid50"
      valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
      uuid: "threadPoolTaskExecutorBuilder2"
      fixed: true
- method:
    name: "acceptTasksAfterContextClose"
    sourceCodeSignature: "ThreadPoolTaskExecutorBuilder acceptTasksAfterContextClose(boolean\
      \ acceptTasksAfterContextClose)"
    returnType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
    parameters:
    - name: "acceptTasksAfterContextClose"
      type: "boolean"
    instructionFingerprint: "CED0F8A2A742A81F6F2004D9CAB0DAD3"
  paths:
  - pathId: "path1"
    testPathName: "acceptTasksAfterContextCloseTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "015D01F72D63AC4BE09103156F7B180B"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "acceptTasksAfterContextClose"
      modelFingerprint: "754C22CFD41BAE7797710AD9B6C83624"
      valueUuid: "acceptTasksAfterContextClose"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D2C2C9BB72BE4B70604DF934845412F1"
      valueUuid: "threadPoolTaskExecutorBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "acceptTasksAfterContextClose"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
        parameters:
        - name: "queueCapacity"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid51"
        - name: "corePoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid52"
        - name: "maxPoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid53"
        - name: "allowCoreThreadTimeOut"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid54"
        - name: "keepAlive"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid55"
        - name: "acceptTasksAfterContextClose"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "java.lang.Boolean"
            uuid: "boolean"
        - name: "awaitTermination"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid56"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid57"
        - name: "threadNamePrefix"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "uniqueUuid58"
        - name: "taskDecorator"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.task.TaskDecorator"
            uuid: "uniqueUuid59"
        - name: "customizers"
          value:
            sapientType: "NULL"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.task.ThreadPoolTaskExecutorCustomizer"
            uuid: "uniqueUuid60"
      valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
      uuid: "threadPoolTaskExecutorBuilder2"
      fixed: true
- method:
    name: "awaitTermination"
    sourceCodeSignature: "ThreadPoolTaskExecutorBuilder awaitTermination(boolean awaitTermination)"
    returnType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
    parameters:
    - name: "awaitTermination"
      type: "boolean"
    instructionFingerprint: "C818DE3341C1EE460ACFD79EC9025F67"
  paths:
  - pathId: "path1"
    testPathName: "awaitTerminationTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "1DCE59C0D255828BEA8F78BB889D4DAE"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "awaitTermination"
      modelFingerprint: "878840374B629F8B297791E902FD3538"
      valueUuid: "awaitTermination"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "DFAB49B46377D11F8FAF6D443144ECF5"
      valueUuid: "threadPoolTaskExecutorBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "awaitTermination"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
        parameters:
        - name: "queueCapacity"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid61"
        - name: "corePoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid62"
        - name: "maxPoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid63"
        - name: "allowCoreThreadTimeOut"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid64"
        - name: "keepAlive"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid65"
        - name: "acceptTasksAfterContextClose"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid66"
        - name: "awaitTermination"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "java.lang.Boolean"
            uuid: "boolean"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid67"
        - name: "threadNamePrefix"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "uniqueUuid68"
        - name: "taskDecorator"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.task.TaskDecorator"
            uuid: "uniqueUuid69"
        - name: "customizers"
          value:
            sapientType: "NULL"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.task.ThreadPoolTaskExecutorCustomizer"
            uuid: "uniqueUuid70"
      valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
      uuid: "threadPoolTaskExecutorBuilder2"
      fixed: true
- method:
    name: "awaitTerminationPeriod"
    sourceCodeSignature: "ThreadPoolTaskExecutorBuilder awaitTerminationPeriod(Duration\
      \ awaitTerminationPeriod)"
    returnType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
    parameters:
    - name: "awaitTerminationPeriod"
      type: "java.time.Duration"
    instructionFingerprint: "2308BDD09874BDD87DF750AAEBAF1B87"
  paths:
  - pathId: "path1"
    testPathName: "awaitTerminationPeriodTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "F55C72CC7E399FFDC5570CEBE5CD61EE"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "awaitTerminationPeriod"
      modelFingerprint: "077ED12ABF779965BAF921B6DAB31F6B"
      valueUuid: "awaitTerminationPeriod"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "95436F1EA3CCBDF70C32565A9F710C1C"
      valueUuid: "threadPoolTaskExecutorBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "awaitTerminationPeriod-days"
      valueType: "java.time.Duration"
      uuid: "awaitTerminationPeriod"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
        parameters:
        - name: "queueCapacity"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid71"
        - name: "corePoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid72"
        - name: "maxPoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid73"
        - name: "allowCoreThreadTimeOut"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid74"
        - name: "keepAlive"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid75"
        - name: "acceptTasksAfterContextClose"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid76"
        - name: "awaitTermination"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid77"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "awaitTerminationPeriod-days"
            valueType: "java.time.Duration"
            uuid: "awaitTerminationPeriod"
        - name: "threadNamePrefix"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "uniqueUuid78"
        - name: "taskDecorator"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.task.TaskDecorator"
            uuid: "uniqueUuid79"
        - name: "customizers"
          value:
            sapientType: "NULL"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.task.ThreadPoolTaskExecutorCustomizer"
            uuid: "uniqueUuid80"
      valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
      uuid: "threadPoolTaskExecutorBuilder2"
      fixed: true
- method:
    name: "threadNamePrefix"
    sourceCodeSignature: "ThreadPoolTaskExecutorBuilder threadNamePrefix(String threadNamePrefix)"
    returnType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
    parameters:
    - name: "threadNamePrefix"
      type: "java.lang.String"
    instructionFingerprint: "A76CEAE5F2000991A6B06EA7569A8171"
  paths:
  - pathId: "path1"
    testPathName: "threadNamePrefixTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "888D6638AD4099AB378F1CC4C8D1568B"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "threadNamePrefix"
      modelFingerprint: "9F9EA50672AC88DCFFD3FE5EA043CC4A"
      valueUuid: "threadNamePrefix"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2E6D5A4D1ED6FD65343D4F6EE425B8D8"
      valueUuid: "threadPoolTaskExecutorBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "threadNamePrefix1"
      valueType: "java.lang.String"
      uuid: "threadNamePrefix"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
        parameters:
        - name: "queueCapacity"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid81"
        - name: "corePoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid82"
        - name: "maxPoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid83"
        - name: "allowCoreThreadTimeOut"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid84"
        - name: "keepAlive"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid85"
        - name: "acceptTasksAfterContextClose"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid86"
        - name: "awaitTermination"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid87"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid88"
        - name: "threadNamePrefix"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "threadNamePrefix1"
            valueType: "java.lang.String"
            uuid: "threadNamePrefix"
        - name: "taskDecorator"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.task.TaskDecorator"
            uuid: "uniqueUuid89"
        - name: "customizers"
          value:
            sapientType: "NULL"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.task.ThreadPoolTaskExecutorCustomizer"
            uuid: "uniqueUuid90"
      valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
      uuid: "threadPoolTaskExecutorBuilder2"
      fixed: true
- method:
    name: "taskDecorator"
    sourceCodeSignature: "ThreadPoolTaskExecutorBuilder taskDecorator(TaskDecorator\
      \ taskDecorator)"
    returnType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
    parameters:
    - name: "taskDecorator"
      type: "org.springframework.core.task.TaskDecorator"
    instructionFingerprint: "FF0408185982F7D44EA244437D437752"
  paths:
  - pathId: "path1"
    testPathName: "taskDecoratorTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "2A62BEDDB65696D4B9DAC99129A9AD81"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "taskDecorator"
      modelFingerprint: "ADD4A762759BCA0286B1FB7B90ECAA19"
      valueUuid: "taskDecorator"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "BFA616881EB8A808AD0033760E608083"
      valueUuid: "threadPoolTaskExecutorBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.task.TaskDecorator"
      uuid: "taskDecorator"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
        parameters:
        - name: "queueCapacity"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid91"
        - name: "corePoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid92"
        - name: "maxPoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid93"
        - name: "allowCoreThreadTimeOut"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid94"
        - name: "keepAlive"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid95"
        - name: "acceptTasksAfterContextClose"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid96"
        - name: "awaitTermination"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid97"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid98"
        - name: "threadNamePrefix"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "uniqueUuid99"
        - name: "taskDecorator"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.task.TaskDecorator"
            uuid: "taskDecorator"
        - name: "customizers"
          value:
            sapientType: "NULL"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.task.ThreadPoolTaskExecutorCustomizer"
            uuid: "uniqueUuid100"
      valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
      uuid: "threadPoolTaskExecutorBuilder2"
      fixed: true
- method:
    name: "customizers"
    sourceCodeSignature: "ThreadPoolTaskExecutorBuilder customizers(ThreadPoolTaskExecutorCustomizer...\
      \ customizers)"
    returnType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
    parameters:
    - name: "customizers"
      type: "org.springframework.boot.task.ThreadPoolTaskExecutorCustomizer[]"
    instructionFingerprint: "23B5B9E7A510DD45201BC14B77991EE4"
  paths:
  - pathId: "path1"
    testPathName: "customizersTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "85A19E5A516EB0CF92CBD0287DA29578"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "customizers"
      modelFingerprint: "767F5AB47C5C9EF307595FB84B6D2266"
      valueUuid: "customizers"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "DB2E19D55E21C740F0EFF92AB11795A2"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:customizers,message:uniqueUuid101):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "68E7D47F05AA64D465BCCBE82BC55502"
      methodExercised:
        expression: "customizers(customizers:list):threadPoolTaskExecutorBuilder2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "222DDE94454F278C21302B43A41D9EA3"
      valueUuid: "threadPoolTaskExecutorBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorCustomizer[]"
      uuid: "customizers"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorCustomizer[]"
      uuid: "customizers"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Customizers must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid101"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
      uuid: "threadPoolTaskExecutorBuilder2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.task.ThreadPoolTaskExecutorCustomizer"
      uuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
      uuid: "threadPoolTaskExecutorBuilder2"
- method:
    name: "customizers"
    sourceCodeSignature: "ThreadPoolTaskExecutorBuilder customizers(Iterable<? extends\
      \ ThreadPoolTaskExecutorCustomizer> customizers)"
    returnType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
    parameters:
    - name: "customizers"
      type: "java.lang.Iterable"
    instructionFingerprint: "D7930359C91638055FC6F4036C1DE3F8"
  paths:
  - pathId: "path1"
    testPathName: "customizers1WhenSetIsNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "F5B46A8492EB1EE8FB358C499C3047BB"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "customizers"
      modelFingerprint: "EE81D0FE5561C395BCF90B8C1EF6D6F0"
      valueUuid: "customizers"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A42DE6493DD9CA0E12AA157BBA2233E9"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:customizers,message:uniqueUuid102):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A74954027FA7DA5BE9780442D82524E8"
      valueUuid: "threadPoolTaskExecutorBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorCustomizer"
          uuid: "threadPoolTaskExecutorCustomizer"
          collectionUuid: "customizers"
      valueType: "java.lang.Iterable"
      genericValueType: "? extends org.springframework.boot.task.ThreadPoolTaskExecutorCustomizer"
      uuid: "customizers"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorCustomizer"
          uuid: "threadPoolTaskExecutorCustomizer"
          collectionUuid: "customizers"
      valueType: "java.lang.Iterable"
      genericValueType: "? extends org.springframework.boot.task.ThreadPoolTaskExecutorCustomizer"
      uuid: "customizers"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Customizers must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid102"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
        parameters:
        - name: "queueCapacity"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid103"
        - name: "corePoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid104"
        - name: "maxPoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid105"
        - name: "allowCoreThreadTimeOut"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid106"
        - name: "keepAlive"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid107"
        - name: "acceptTasksAfterContextClose"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid108"
        - name: "awaitTermination"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid109"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid110"
        - name: "threadNamePrefix"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "uniqueUuid111"
        - name: "taskDecorator"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.task.TaskDecorator"
            uuid: "uniqueUuid112"
        - name: "customizers"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.LinkedHashSet"
              parameters:
              - name: "c"
                value:
                  sapientType: "COLLECTION"
                  content: !<collection>
                    parameters: []
                    values: []
                  valueType: "java.util.Set"
                  uuid: "set"
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorCustomizer"
                uuid: "threadPoolTaskExecutorCustomizer"
                collectionUuid: "customizers"
            valueType: "java.util.Set"
            uuid: "set3"
      valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
      uuid: "threadPoolTaskExecutorBuilder2"
      fixed: true
    branches:
    - lineNumber: 342
      expression: "set != null"
      range: "(342,40)-(342,50)"
      evaluatedAs: false
      internalMethodName: "append"
- method:
    name: "additionalCustomizers"
    sourceCodeSignature: "ThreadPoolTaskExecutorBuilder additionalCustomizers(ThreadPoolTaskExecutorCustomizer...\
      \ customizers)"
    returnType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
    parameters:
    - name: "customizers"
      type: "org.springframework.boot.task.ThreadPoolTaskExecutorCustomizer[]"
    instructionFingerprint: "9294BA52E96969275276DF69002C89FC"
  paths:
  - pathId: "path1"
    testPathName: "additionalCustomizersTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "3236420A37015F727CAE66C1116C8D39"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "customizers"
      modelFingerprint: "767F5AB47C5C9EF307595FB84B6D2266"
      valueUuid: "customizers"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "DB2E19D55E21C740F0EFF92AB11795A2"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:customizers,message:uniqueUuid113):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "6061A5BE716BA82121D5306D7F527B64"
      methodExercised:
        expression: "additionalCustomizers(customizers:list):threadPoolTaskExecutorBuilder2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "222DDE94454F278C21302B43A41D9EA3"
      valueUuid: "threadPoolTaskExecutorBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorCustomizer[]"
      uuid: "customizers"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorCustomizer[]"
      uuid: "customizers"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Customizers must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid113"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
      uuid: "threadPoolTaskExecutorBuilder2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.task.ThreadPoolTaskExecutorCustomizer"
      uuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
      uuid: "threadPoolTaskExecutorBuilder2"
- method:
    name: "additionalCustomizers"
    sourceCodeSignature: "ThreadPoolTaskExecutorBuilder additionalCustomizers(Iterable<?\
      \ extends ThreadPoolTaskExecutorCustomizer> customizers)"
    returnType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
    parameters:
    - name: "customizers"
      type: "java.lang.Iterable"
    instructionFingerprint: "7F2B84C3F2FDAFE91A8922D449803C5C"
  paths:
  - pathId: "path1"
    testPathName: "additionalCustomizers1WhenSetIsNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "7F5D1437F2BD1A26C510B30DBA30A458"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "customizers"
      modelFingerprint: "EE81D0FE5561C395BCF90B8C1EF6D6F0"
      valueUuid: "customizers"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A42DE6493DD9CA0E12AA157BBA2233E9"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:customizers,message:uniqueUuid114):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A74954027FA7DA5BE9780442D82524E8"
      valueUuid: "threadPoolTaskExecutorBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorCustomizer"
          uuid: "threadPoolTaskExecutorCustomizer"
          collectionUuid: "customizers"
      valueType: "java.lang.Iterable"
      genericValueType: "? extends org.springframework.boot.task.ThreadPoolTaskExecutorCustomizer"
      uuid: "customizers"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorCustomizer"
          uuid: "threadPoolTaskExecutorCustomizer"
          collectionUuid: "customizers"
      valueType: "java.lang.Iterable"
      genericValueType: "? extends org.springframework.boot.task.ThreadPoolTaskExecutorCustomizer"
      uuid: "customizers"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Customizers must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid114"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
        parameters:
        - name: "queueCapacity"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid115"
        - name: "corePoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid116"
        - name: "maxPoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid117"
        - name: "allowCoreThreadTimeOut"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid118"
        - name: "keepAlive"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid119"
        - name: "acceptTasksAfterContextClose"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid120"
        - name: "awaitTermination"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid121"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid122"
        - name: "threadNamePrefix"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "uniqueUuid123"
        - name: "taskDecorator"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.task.TaskDecorator"
            uuid: "uniqueUuid124"
        - name: "customizers"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.LinkedHashSet"
              parameters:
              - name: "c"
                value:
                  sapientType: "COLLECTION"
                  content: !<collection>
                    parameters: []
                    values: []
                  valueType: "java.util.Set"
                  uuid: "set"
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorCustomizer"
                uuid: "threadPoolTaskExecutorCustomizer"
                collectionUuid: "customizers"
            valueType: "java.util.Set"
            uuid: "set3"
      valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
      uuid: "threadPoolTaskExecutorBuilder2"
      fixed: true
    branches:
    - lineNumber: 342
      expression: "set != null"
      range: "(342,40)-(342,50)"
      evaluatedAs: false
      internalMethodName: "append"
- method:
    name: "build"
    sourceCodeSignature: "ThreadPoolTaskExecutor build()"
    returnType: "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
    instructionFingerprint: "091469A1670907F97B2DF854E23FE5C5"
  paths:
  - pathId: "path1"
    testPathName: "buildTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "9C9915996DB742B14C428C0671C04C8B"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "210952235A5E01F5A88BE2F19D020297"
      methodExercised:
        expression: "configure(taskExecutor:threadPoolTaskExecutor):threadPoolTaskExecutor2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "92D841BF3B99D4320AC51889684A0BB6"
      valueUuid: "threadPoolTaskExecutor2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
      uuid: "threadPoolTaskExecutor2"
    - sapientType: "ANY"
      valueType: "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
      uuid: "threadPoolTaskExecutor"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
      uuid: "threadPoolTaskExecutor2"
- method:
    name: "build"
    sourceCodeSignature: "<T extends ThreadPoolTaskExecutor> T build(Class<T> taskExecutorClass)"
    returnType: "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
    parameters:
    - name: "taskExecutorClass"
      type: "java.lang.Class"
    instructionFingerprint: "2BCCDEFD60027BC91E9C4E141F056CA7"
  paths:
  - pathId: "path1"
    testPathName: "build1Test"
    constructorSignature: "<init>() : void"
    modelFingerprint: "B683408C05D6ECE15C39108BA241E52D"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "taskExecutorClass"
      modelFingerprint: "744E32BB26294908DF36A918A3062722"
      valueUuid: "taskExecutorClass"
    - type: "STATIC"
      name: "BeanUtils.class"
      modelFingerprint: "953DA7B70CD6D4C811E58A1DC7B3D517"
      valueUuid: "BeanUtils.class"
      methodExercised:
        expression: "instantiateClass(clazz:taskExecutorClass):threadPoolTaskExecutor"
        throwsExceptions:
        - "org.springframework.beans.BeanInstantiationException"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "ECBD2BB62F4C372EA997F0E12E637945"
      methodExercised:
        expression: "configure(taskExecutor:threadPoolTaskExecutor):threadPoolTaskExecutor2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "92D841BF3B99D4320AC51889684A0BB6"
      valueUuid: "threadPoolTaskExecutor2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
      uuid: "target"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
      uuid: "taskExecutorClass"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.BeanUtils"
      uuid: "BeanUtils.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
      uuid: "threadPoolTaskExecutor"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
      uuid: "taskExecutorClass"
    - sapientType: "MOCK"
      valueType: "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
      uuid: "threadPoolTaskExecutor2"
    - sapientType: "MOCK"
      valueType: "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
      uuid: "threadPoolTaskExecutor"
    - sapientType: "MOCK"
      valueType: "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
      uuid: "threadPoolTaskExecutor2"
- method:
    name: "configure"
    sourceCodeSignature: "<T extends ThreadPoolTaskExecutor> T configure(T taskExecutor)"
    returnType: "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
    parameters:
    - name: "taskExecutor"
      type: "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
    instructionFingerprint: "DD674D16B1158AFEC5DECEBEB7E287E3"
  paths:
  - pathId: "path1"
    testPathName: "configureWhenCollectionUtilsIsEmptyThisCustomizers"
    constructorSignature: "<init>() : void"
    modelFingerprint: "B7724D48C45354287C0D0FCC73D75AC6"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "taskExecutor"
      modelFingerprint: "DA6C2A72EC154D32F024DEBD565A1B3E"
      valueUuid: "taskExecutor"
    - type: "STATIC"
      name: "PropertyMapper.class"
      modelFingerprint: "B1B41702847FC8B31AB887927AD81CC1"
      valueUuid: "PropertyMapper.class"
      methodExercised:
        expression: "get():propertyMapper"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "44331629620EEBF77844433E7BB802E9"
      valueUuid: "propertyMapper"
      methodExercised:
        expression: "alwaysApplyingWhenNonNull():propertyMapper2"
    - type: "LOCAL_VARIABLE"
      name: "map"
      modelFingerprint: "EF613CA45BBAB271AA16610A4C8B9856"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "from(value:uniqueUuid125):propertyMapper.Source"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "7F471C9EE842352039FDFCB21D31C037"
      valueUuid: "propertyMapper.Source"
      methodExercised:
        expression: "to(consumer:uniqueUuid126):void"
    - type: "LOCAL_VARIABLE"
      name: "map"
      modelFingerprint: "3C3F8CF40A2E825C718F81DC4B862CC2"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "from(value:uniqueUuid127):propertyMapper.Source2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "863EE5ED5B493523F7672AB59CD67B8A"
      valueUuid: "propertyMapper.Source2"
      methodExercised:
        expression: "to(consumer:uniqueUuid129):void2"
    - type: "LOCAL_VARIABLE"
      name: "map"
      modelFingerprint: "3C3F8CF40A2E825C718F81DC4B862CC2"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "from(value:uniqueUuid131):propertyMapper.Source3"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "863EE5ED5B493523F7672AB59CD67B8A"
      valueUuid: "propertyMapper.Source3"
      methodExercised:
        expression: "to(consumer:uniqueUuid133):void3"
    - type: "LOCAL_VARIABLE"
      name: "map"
      modelFingerprint: "CDD7560945182734D68D51D6C8859915"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "from(value:uniqueUuid135):propertyMapper.Source4"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "948F246E1AF71D29BC51A10CA40CD712"
      valueUuid: "propertyMapper.Source4"
      methodExercised:
        expression: "asInt(adapter:uniqueUuid137):propertyMapper.Source5"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "256F4D6A5B08F70327B46A1C9BFE1EAA"
      valueUuid: "propertyMapper.Source5"
      methodExercised:
        expression: "to(consumer:uniqueUuid140):void4"
    - type: "LOCAL_VARIABLE"
      name: "map"
      modelFingerprint: "9EB49C86D50236B4A6258070C3DD6C06"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "from(value:uniqueUuid142):propertyMapper.Source6"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "6343FA10439324183A86461BAFCD9911"
      valueUuid: "propertyMapper.Source6"
      methodExercised:
        expression: "to(consumer:uniqueUuid144):void5"
    - type: "LOCAL_VARIABLE"
      name: "map"
      modelFingerprint: "9EB49C86D50236B4A6258070C3DD6C06"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "from(value:uniqueUuid146):propertyMapper.Source7"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "6343FA10439324183A86461BAFCD9911"
      valueUuid: "propertyMapper.Source7"
      methodExercised:
        expression: "to(consumer:uniqueUuid148):void6"
    - type: "LOCAL_VARIABLE"
      name: "map"
      modelFingerprint: "9EB49C86D50236B4A6258070C3DD6C06"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "from(value:uniqueUuid150):propertyMapper.Source8"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "6343FA10439324183A86461BAFCD9911"
      valueUuid: "propertyMapper.Source8"
      methodExercised:
        expression: "to(consumer:uniqueUuid152):void7"
    - type: "LOCAL_VARIABLE"
      name: "map"
      modelFingerprint: "CDD7560945182734D68D51D6C8859915"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "from(value:uniqueUuid154):propertyMapper.Source9"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E6A6984D952D3B0FCD40908F1733F39A"
      valueUuid: "propertyMapper.Source9"
      methodExercised:
        expression: "as(adapter:uniqueUuid156):propertyMapper.Source10"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "5191C5A67CD6D9016AE3D798D5E9CC67"
      valueUuid: "propertyMapper.Source10"
      methodExercised:
        expression: "to(consumer:uniqueUuid159):void8"
    - type: "LOCAL_VARIABLE"
      name: "map"
      modelFingerprint: "288EB52B25A2DEEDC88F5A15891C773A"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "from(value:uniqueUuid161):propertyMapper.Source11"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F3123572AA5A8E049D734158F3888C8E"
      valueUuid: "propertyMapper.Source11"
      methodExercised:
        expression: "whenHasText():propertyMapper.Source12"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "39D91A7F236B48B074E9731F169596E8"
      valueUuid: "propertyMapper.Source12"
      methodExercised:
        expression: "to(consumer:uniqueUuid164):void9"
    - type: "LOCAL_VARIABLE"
      name: "map"
      modelFingerprint: "6CF102F1E08D7894B336BAA018C0A55C"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "from(value:uniqueUuid165):propertyMapper.Source13"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "4409969EE876BF4B53DE805CA2BC2A39"
      valueUuid: "propertyMapper.Source13"
      methodExercised:
        expression: "to(consumer:uniqueUuid167):void10"
    - type: "STATIC"
      name: "CollectionUtils.class.real"
      modelFingerprint: "8C17787C814415E379E43C54D36CEE84"
      valueUuid: "CollectionUtils.class.real"
      methodExercised:
        expression: "isEmpty(collection:uniqueUuid169):boolean1"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "FEBBC12A8265F290B29D1F182831D7E0"
      valueUuid: "taskExecutor"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "map.from(this.corePoolSize).to(taskExecutor::setCorePoolSize);"
      lineNumber: 326
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type PropertyMapper.Source - Method: to"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
      uuid: "taskExecutor"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "PropertyMapper.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source"
    - sapientType: "NULL"
      valueType: "java.lang.Integer"
      uuid: "uniqueUuid125"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid126"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid130"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source2"
    - sapientType: "NULL"
      valueType: "java.lang.Integer"
      uuid: "uniqueUuid127"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid130"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid129"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid134"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source3"
    - sapientType: "NULL"
      valueType: "java.lang.Integer"
      uuid: "uniqueUuid131"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid134"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid133"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid139"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source4"
    - sapientType: "NULL"
      valueType: "java.time.Duration"
      uuid: "uniqueUuid135"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid139"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source4"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.springframework.boot.context.properties.PropertyMapper$Source"
            localVariableValue:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.PropertyMapper"
              uuid: "propertyMapper2"
            methodParameters:
            - value:
                sapientType: "NULL"
                valueType: "java.time.Duration"
            methodName: "from"
          valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
          uuid: "propertyMapper.Source4"
        methodParameters:
        - name: "adapter"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Function"
            uuid: "uniqueUuid141"
        methodName: "asInt"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      genericValueType: "java.lang.Integer"
      uuid: "propertyMapper.Source5"
    - sapientType: "ANY"
      valueType: "java.util.function.Function"
      uuid: "uniqueUuid137"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.springframework.boot.context.properties.PropertyMapper$Source"
            localVariableValue:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.PropertyMapper"
              uuid: "propertyMapper2"
            methodParameters:
            - value:
                sapientType: "NULL"
                valueType: "java.time.Duration"
            methodName: "from"
          valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
          uuid: "propertyMapper.Source4"
        methodParameters:
        - name: "adapter"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Function"
            uuid: "uniqueUuid141"
        methodName: "asInt"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      genericValueType: "java.lang.Integer"
      uuid: "propertyMapper.Source5"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid140"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid145"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source6"
    - sapientType: "NULL"
      valueType: "java.lang.Boolean"
      uuid: "uniqueUuid142"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid145"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source6"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid144"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid149"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source7"
    - sapientType: "NULL"
      valueType: "java.lang.Boolean"
      uuid: "uniqueUuid146"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid149"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source7"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid148"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid153"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source8"
    - sapientType: "NULL"
      valueType: "java.lang.Boolean"
      uuid: "uniqueUuid150"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid153"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source8"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid152"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid158"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source9"
    - sapientType: "NULL"
      valueType: "java.time.Duration"
      uuid: "uniqueUuid154"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid158"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source9"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.springframework.boot.context.properties.PropertyMapper$Source"
            localVariableValue:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.PropertyMapper"
              uuid: "propertyMapper2"
            methodParameters:
            - value:
                sapientType: "NULL"
                valueType: "java.time.Duration"
            methodName: "from"
          valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
          uuid: "propertyMapper.Source9"
        methodParameters:
        - name: "adapter"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Function"
            uuid: "uniqueUuid160"
        methodName: "as"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source10"
    - sapientType: "ANY"
      valueType: "java.util.function.Function"
      uuid: "uniqueUuid156"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.springframework.boot.context.properties.PropertyMapper$Source"
            localVariableValue:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.PropertyMapper"
              uuid: "propertyMapper2"
            methodParameters:
            - value:
                sapientType: "NULL"
                valueType: "java.time.Duration"
            methodName: "from"
          valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
          uuid: "propertyMapper.Source9"
        methodParameters:
        - name: "adapter"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Function"
            uuid: "uniqueUuid160"
        methodName: "as"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source10"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid159"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "uniqueUuid163"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source11"
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "uniqueUuid161"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "uniqueUuid163"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source11"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.springframework.boot.context.properties.PropertyMapper$Source"
            localVariableValue:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.PropertyMapper"
              uuid: "propertyMapper2"
            methodParameters:
            - value:
                sapientType: "NULL"
                valueType: "java.lang.String"
            methodName: "from"
          valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
          uuid: "propertyMapper.Source11"
        methodParameters: []
        methodName: "whenHasText"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source12"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.springframework.boot.context.properties.PropertyMapper$Source"
            localVariableValue:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.PropertyMapper"
              uuid: "propertyMapper2"
            methodParameters:
            - value:
                sapientType: "NULL"
                valueType: "java.lang.String"
            methodName: "from"
          valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
          uuid: "propertyMapper.Source11"
        methodParameters: []
        methodName: "whenHasText"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source12"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid164"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "org.springframework.core.task.TaskDecorator"
            uuid: "uniqueUuid168"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source13"
    - sapientType: "NULL"
      valueType: "org.springframework.core.task.TaskDecorator"
      uuid: "uniqueUuid165"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "org.springframework.core.task.TaskDecorator"
            uuid: "uniqueUuid168"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source13"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid167"
    - sapientType: "REAL"
      valueType: "org.springframework.util.CollectionUtils"
      uuid: "CollectionUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "NULL"
      valueType: "java.util.Set"
      genericValueType: "org.springframework.boot.task.ThreadPoolTaskExecutorCustomizer"
      uuid: "uniqueUuid169"
    - sapientType: "MOCK"
      valueType: "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
      uuid: "taskExecutor"
    branches:
    - lineNumber: 335
      expression: "!CollectionUtils.isEmpty(this.customizers)"
      range: "(335,7)-(335,48)"
      evaluatedAs: false
