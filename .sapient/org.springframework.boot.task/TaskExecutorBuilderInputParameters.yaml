---
modelFingerprint: "36617E012B47A207F364F9553B6E2314"
targetClass:
  fullClassName: "org.springframework.boot.task.TaskExecutorBuilder"
methods:
- method:
    name: "queueCapacity"
    sourceCodeSignature: "TaskExecutorBuilder queueCapacity(int queueCapacity)"
    returnType: "org.springframework.boot.task.TaskExecutorBuilder"
    parameters:
    - name: "queueCapacity"
      type: "int"
    instructionFingerprint: "0BAA825174747E92D1FB8824F9510D24"
  paths:
  - pathId: "path1"
    testPathName: "queueCapacityTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "A53C1552AFB4DA860DE41BFFA6252117"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "queueCapacity"
      modelFingerprint: "6A423AC6F6AC1E6FF85C0CCB8D2F86DF"
      valueUuid: "queueCapacity"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "187FFE896E2622DDB55AC364242D8715"
      valueUuid: "taskExecutorBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.TaskExecutorBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "queueCapacity"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskExecutorBuilder"
        parameters:
        - name: "queueCapacity"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "java.lang.Integer"
            uuid: "integer"
        - name: "corePoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid1"
        - name: "maxPoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid2"
        - name: "allowCoreThreadTimeOut"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid3"
        - name: "keepAlive"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid4"
        - name: "awaitTermination"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid5"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid6"
        - name: "threadNamePrefix"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "uniqueUuid7"
        - name: "taskDecorator"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.task.TaskDecorator"
            uuid: "uniqueUuid8"
        - name: "customizers"
          value:
            sapientType: "NULL"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.task.TaskExecutorCustomizer"
            uuid: "uniqueUuid9"
      valueType: "org.springframework.boot.task.TaskExecutorBuilder"
      uuid: "taskExecutorBuilder2"
      fixed: true
- method:
    name: "corePoolSize"
    sourceCodeSignature: "TaskExecutorBuilder corePoolSize(int corePoolSize)"
    returnType: "org.springframework.boot.task.TaskExecutorBuilder"
    parameters:
    - name: "corePoolSize"
      type: "int"
    instructionFingerprint: "C2526FDBEE80826960F1545EB2E4B237"
  paths:
  - pathId: "path1"
    testPathName: "corePoolSizeTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "C8F9F5D010F7BFBDDE3E0ADC78E83654"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "corePoolSize"
      modelFingerprint: "344F42E7AA8A416B28F30F0FD9C08AE5"
      valueUuid: "corePoolSize"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "65C0F1C2E370497FEA5B0AEA4D259635"
      valueUuid: "taskExecutorBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.TaskExecutorBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "corePoolSize"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskExecutorBuilder"
        parameters:
        - name: "queueCapacity"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid10"
        - name: "corePoolSize"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "java.lang.Integer"
            uuid: "integer"
        - name: "maxPoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid11"
        - name: "allowCoreThreadTimeOut"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid12"
        - name: "keepAlive"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid13"
        - name: "awaitTermination"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid14"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid15"
        - name: "threadNamePrefix"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "uniqueUuid16"
        - name: "taskDecorator"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.task.TaskDecorator"
            uuid: "uniqueUuid17"
        - name: "customizers"
          value:
            sapientType: "NULL"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.task.TaskExecutorCustomizer"
            uuid: "uniqueUuid18"
      valueType: "org.springframework.boot.task.TaskExecutorBuilder"
      uuid: "taskExecutorBuilder2"
      fixed: true
- method:
    name: "maxPoolSize"
    sourceCodeSignature: "TaskExecutorBuilder maxPoolSize(int maxPoolSize)"
    returnType: "org.springframework.boot.task.TaskExecutorBuilder"
    parameters:
    - name: "maxPoolSize"
      type: "int"
    instructionFingerprint: "87463DB62A3976DA0B5CD7C32CB223FE"
  paths:
  - pathId: "path1"
    testPathName: "maxPoolSizeTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "DC196EC65AA6DC4EAB798B9FF5C50AE1"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "maxPoolSize"
      modelFingerprint: "7C2A0D5923BF4DFB6097EDF96B421B05"
      valueUuid: "maxPoolSize"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A3E3517719407609E72E051FB1DC47C5"
      valueUuid: "taskExecutorBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.TaskExecutorBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "maxPoolSize"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskExecutorBuilder"
        parameters:
        - name: "queueCapacity"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid19"
        - name: "corePoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid20"
        - name: "maxPoolSize"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "java.lang.Integer"
            uuid: "integer"
        - name: "allowCoreThreadTimeOut"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid21"
        - name: "keepAlive"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid22"
        - name: "awaitTermination"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid23"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid24"
        - name: "threadNamePrefix"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "uniqueUuid25"
        - name: "taskDecorator"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.task.TaskDecorator"
            uuid: "uniqueUuid26"
        - name: "customizers"
          value:
            sapientType: "NULL"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.task.TaskExecutorCustomizer"
            uuid: "uniqueUuid27"
      valueType: "org.springframework.boot.task.TaskExecutorBuilder"
      uuid: "taskExecutorBuilder2"
      fixed: true
- method:
    name: "allowCoreThreadTimeOut"
    sourceCodeSignature: "TaskExecutorBuilder allowCoreThreadTimeOut(boolean allowCoreThreadTimeOut)"
    returnType: "org.springframework.boot.task.TaskExecutorBuilder"
    parameters:
    - name: "allowCoreThreadTimeOut"
      type: "boolean"
    instructionFingerprint: "9FCFBB7157F977622784666E317895E2"
  paths:
  - pathId: "path1"
    testPathName: "allowCoreThreadTimeOutTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "4C1CA60BAAF0CAB47C5FC79D287219B8"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "allowCoreThreadTimeOut"
      modelFingerprint: "C150883D835433CF0242E635F17C0A9F"
      valueUuid: "allowCoreThreadTimeOut"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "07595D1599C7806BFA9A1A19E34E7F86"
      valueUuid: "taskExecutorBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.TaskExecutorBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "allowCoreThreadTimeOut"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskExecutorBuilder"
        parameters:
        - name: "queueCapacity"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid28"
        - name: "corePoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid29"
        - name: "maxPoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid30"
        - name: "allowCoreThreadTimeOut"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "java.lang.Boolean"
            uuid: "boolean"
        - name: "keepAlive"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid31"
        - name: "awaitTermination"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid32"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid33"
        - name: "threadNamePrefix"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "uniqueUuid34"
        - name: "taskDecorator"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.task.TaskDecorator"
            uuid: "uniqueUuid35"
        - name: "customizers"
          value:
            sapientType: "NULL"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.task.TaskExecutorCustomizer"
            uuid: "uniqueUuid36"
      valueType: "org.springframework.boot.task.TaskExecutorBuilder"
      uuid: "taskExecutorBuilder2"
      fixed: true
- method:
    name: "keepAlive"
    sourceCodeSignature: "TaskExecutorBuilder keepAlive(Duration keepAlive)"
    returnType: "org.springframework.boot.task.TaskExecutorBuilder"
    parameters:
    - name: "keepAlive"
      type: "java.time.Duration"
    instructionFingerprint: "133A1D56134C8DAABB6AD0967D95CFEB"
  paths:
  - pathId: "path1"
    testPathName: "keepAliveTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "AB74D2AC13D1AE51ED6F26B762C1F134"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "keepAlive"
      modelFingerprint: "B48436654E1E361C069DEE350C49FDF0"
      valueUuid: "keepAlive"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B9805A183B9C8B28E4EAA711F9B1FEBC"
      valueUuid: "taskExecutorBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.TaskExecutorBuilder"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "keepAlive-days"
      valueType: "java.time.Duration"
      uuid: "keepAlive"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskExecutorBuilder"
        parameters:
        - name: "queueCapacity"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid37"
        - name: "corePoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid38"
        - name: "maxPoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid39"
        - name: "allowCoreThreadTimeOut"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid40"
        - name: "keepAlive"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "keepAlive-days"
            valueType: "java.time.Duration"
            uuid: "keepAlive"
        - name: "awaitTermination"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid41"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid42"
        - name: "threadNamePrefix"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "uniqueUuid43"
        - name: "taskDecorator"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.task.TaskDecorator"
            uuid: "uniqueUuid44"
        - name: "customizers"
          value:
            sapientType: "NULL"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.task.TaskExecutorCustomizer"
            uuid: "uniqueUuid45"
      valueType: "org.springframework.boot.task.TaskExecutorBuilder"
      uuid: "taskExecutorBuilder2"
      fixed: true
- method:
    name: "awaitTermination"
    sourceCodeSignature: "TaskExecutorBuilder awaitTermination(boolean awaitTermination)"
    returnType: "org.springframework.boot.task.TaskExecutorBuilder"
    parameters:
    - name: "awaitTermination"
      type: "boolean"
    instructionFingerprint: "ECEA893B86C5383728510B6E7E73A77B"
  paths:
  - pathId: "path1"
    testPathName: "awaitTerminationTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "89FB5C5E3044556CD77A89EB89F3015C"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "awaitTermination"
      modelFingerprint: "878840374B629F8B297791E902FD3538"
      valueUuid: "awaitTermination"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "26344860E432DDA1B53EDFA3F7732C21"
      valueUuid: "taskExecutorBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.TaskExecutorBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "awaitTermination"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskExecutorBuilder"
        parameters:
        - name: "queueCapacity"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid46"
        - name: "corePoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid47"
        - name: "maxPoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid48"
        - name: "allowCoreThreadTimeOut"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid49"
        - name: "keepAlive"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid50"
        - name: "awaitTermination"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "java.lang.Boolean"
            uuid: "boolean"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid51"
        - name: "threadNamePrefix"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "uniqueUuid52"
        - name: "taskDecorator"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.task.TaskDecorator"
            uuid: "uniqueUuid53"
        - name: "customizers"
          value:
            sapientType: "NULL"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.task.TaskExecutorCustomizer"
            uuid: "uniqueUuid54"
      valueType: "org.springframework.boot.task.TaskExecutorBuilder"
      uuid: "taskExecutorBuilder2"
      fixed: true
- method:
    name: "awaitTerminationPeriod"
    sourceCodeSignature: "TaskExecutorBuilder awaitTerminationPeriod(Duration awaitTerminationPeriod)"
    returnType: "org.springframework.boot.task.TaskExecutorBuilder"
    parameters:
    - name: "awaitTerminationPeriod"
      type: "java.time.Duration"
    instructionFingerprint: "E3FF81FB2E9B33C7DE4D6FD4C93F9214"
  paths:
  - pathId: "path1"
    testPathName: "awaitTerminationPeriodTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "7FC261735E615A013F8410E3664C1754"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "awaitTerminationPeriod"
      modelFingerprint: "077ED12ABF779965BAF921B6DAB31F6B"
      valueUuid: "awaitTerminationPeriod"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "F9C22A43D4C4829AEAA4585159460D4E"
      valueUuid: "taskExecutorBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.TaskExecutorBuilder"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "awaitTerminationPeriod-days"
      valueType: "java.time.Duration"
      uuid: "awaitTerminationPeriod"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskExecutorBuilder"
        parameters:
        - name: "queueCapacity"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid55"
        - name: "corePoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid56"
        - name: "maxPoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid57"
        - name: "allowCoreThreadTimeOut"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid58"
        - name: "keepAlive"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid59"
        - name: "awaitTermination"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid60"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "awaitTerminationPeriod-days"
            valueType: "java.time.Duration"
            uuid: "awaitTerminationPeriod"
        - name: "threadNamePrefix"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "uniqueUuid61"
        - name: "taskDecorator"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.task.TaskDecorator"
            uuid: "uniqueUuid62"
        - name: "customizers"
          value:
            sapientType: "NULL"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.task.TaskExecutorCustomizer"
            uuid: "uniqueUuid63"
      valueType: "org.springframework.boot.task.TaskExecutorBuilder"
      uuid: "taskExecutorBuilder2"
      fixed: true
- method:
    name: "threadNamePrefix"
    sourceCodeSignature: "TaskExecutorBuilder threadNamePrefix(String threadNamePrefix)"
    returnType: "org.springframework.boot.task.TaskExecutorBuilder"
    parameters:
    - name: "threadNamePrefix"
      type: "java.lang.String"
    instructionFingerprint: "7378AD29B27974A68E1838F26A9566C0"
  paths:
  - pathId: "path1"
    testPathName: "threadNamePrefixTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "6480C84B25901AB0911D8994908E6C57"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "threadNamePrefix"
      modelFingerprint: "9F9EA50672AC88DCFFD3FE5EA043CC4A"
      valueUuid: "threadNamePrefix"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "6034B140CA0DEF94AC24B74B4DD9776D"
      valueUuid: "taskExecutorBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.TaskExecutorBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "threadNamePrefix1"
      valueType: "java.lang.String"
      uuid: "threadNamePrefix"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskExecutorBuilder"
        parameters:
        - name: "queueCapacity"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid64"
        - name: "corePoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid65"
        - name: "maxPoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid66"
        - name: "allowCoreThreadTimeOut"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid67"
        - name: "keepAlive"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid68"
        - name: "awaitTermination"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid69"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid70"
        - name: "threadNamePrefix"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "threadNamePrefix1"
            valueType: "java.lang.String"
            uuid: "threadNamePrefix"
        - name: "taskDecorator"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.task.TaskDecorator"
            uuid: "uniqueUuid71"
        - name: "customizers"
          value:
            sapientType: "NULL"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.task.TaskExecutorCustomizer"
            uuid: "uniqueUuid72"
      valueType: "org.springframework.boot.task.TaskExecutorBuilder"
      uuid: "taskExecutorBuilder2"
      fixed: true
- method:
    name: "taskDecorator"
    sourceCodeSignature: "TaskExecutorBuilder taskDecorator(TaskDecorator taskDecorator)"
    returnType: "org.springframework.boot.task.TaskExecutorBuilder"
    parameters:
    - name: "taskDecorator"
      type: "org.springframework.core.task.TaskDecorator"
    instructionFingerprint: "B41FD210FD92B1325A7BD427FF12D8FD"
  paths:
  - pathId: "path1"
    testPathName: "taskDecoratorTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "DA219417EE722524C1C9F1AEA8215C98"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "taskDecorator"
      modelFingerprint: "ADD4A762759BCA0286B1FB7B90ECAA19"
      valueUuid: "taskDecorator"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2E498A8399FAAF16947F50797F44AE0C"
      valueUuid: "taskExecutorBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.TaskExecutorBuilder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.task.TaskDecorator"
      uuid: "taskDecorator"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskExecutorBuilder"
        parameters:
        - name: "queueCapacity"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid73"
        - name: "corePoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid74"
        - name: "maxPoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid75"
        - name: "allowCoreThreadTimeOut"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid76"
        - name: "keepAlive"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid77"
        - name: "awaitTermination"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid78"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid79"
        - name: "threadNamePrefix"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "uniqueUuid80"
        - name: "taskDecorator"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.task.TaskDecorator"
            uuid: "taskDecorator"
        - name: "customizers"
          value:
            sapientType: "NULL"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.task.TaskExecutorCustomizer"
            uuid: "uniqueUuid81"
      valueType: "org.springframework.boot.task.TaskExecutorBuilder"
      uuid: "taskExecutorBuilder2"
      fixed: true
- method:
    name: "customizers"
    sourceCodeSignature: "TaskExecutorBuilder customizers(TaskExecutorCustomizer...\
      \ customizers)"
    returnType: "org.springframework.boot.task.TaskExecutorBuilder"
    parameters:
    - name: "customizers"
      type: "org.springframework.boot.task.TaskExecutorCustomizer[]"
    instructionFingerprint: "62F6AA6B37FA187438B3D3D39F592E2A"
  paths:
  - pathId: "path1"
    testPathName: "customizersTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "D785FFB09A306D6E77C25AB1805AAE55"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "customizers"
      modelFingerprint: "CB9F50C772E09A97824DB08A34ADC618"
      valueUuid: "customizers"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5AD4C916EE5CD84C5808200B45323069"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:customizers,message:uniqueUuid82):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "5656F019907C9B9E27A5A96E8101855A"
      methodExercised:
        expression: "customizers(customizers:list):taskExecutorBuilder2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D60908B524D1904D058AE52196732EB3"
      valueUuid: "taskExecutorBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.TaskExecutorBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.task.TaskExecutorCustomizer[]"
      uuid: "customizers"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.task.TaskExecutorCustomizer[]"
      uuid: "customizers"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Customizers must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid82"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.task.TaskExecutorBuilder"
      uuid: "taskExecutorBuilder2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.task.TaskExecutorCustomizer"
      uuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.task.TaskExecutorBuilder"
      uuid: "taskExecutorBuilder2"
- method:
    name: "customizers"
    sourceCodeSignature: "TaskExecutorBuilder customizers(Iterable<TaskExecutorCustomizer>\
      \ customizers)"
    returnType: "org.springframework.boot.task.TaskExecutorBuilder"
    parameters:
    - name: "customizers"
      type: "java.lang.Iterable"
    instructionFingerprint: "0D9362CFBCB827F58D7F8BA2D491CE61"
  paths:
  - pathId: "path1"
    testPathName: "customizers1WhenSetIsNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "BD6ACA634916DF48AC4754A70356AE00"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "customizers"
      modelFingerprint: "5F915EB42625A8A55CE7CBCB7C2A54D2"
      valueUuid: "customizers"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "C73E444A3D2502CF375FBF3322B6E14D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:customizers,message:uniqueUuid83):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3655678842ED583C8037769544C8A0A0"
      valueUuid: "taskExecutorBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.TaskExecutorBuilder"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.task.TaskExecutorCustomizer"
          uuid: "taskExecutorCustomizer"
          collectionUuid: "customizers"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.task.TaskExecutorCustomizer"
      uuid: "customizers"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.task.TaskExecutorCustomizer"
          uuid: "taskExecutorCustomizer"
          collectionUuid: "customizers"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.task.TaskExecutorCustomizer"
      uuid: "customizers"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Customizers must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid83"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskExecutorBuilder"
        parameters:
        - name: "queueCapacity"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid84"
        - name: "corePoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid85"
        - name: "maxPoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid86"
        - name: "allowCoreThreadTimeOut"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid87"
        - name: "keepAlive"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid88"
        - name: "awaitTermination"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid89"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid90"
        - name: "threadNamePrefix"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "uniqueUuid91"
        - name: "taskDecorator"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.task.TaskDecorator"
            uuid: "uniqueUuid92"
        - name: "customizers"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.LinkedHashSet"
              parameters:
              - name: "c"
                value:
                  sapientType: "COLLECTION"
                  content: !<collection>
                    parameters: []
                    values: []
                  valueType: "java.util.Set"
                  uuid: "set"
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.task.TaskExecutorCustomizer"
                uuid: "taskExecutorCustomizer"
                collectionUuid: "customizers"
            valueType: "java.util.Set"
            uuid: "set3"
      valueType: "org.springframework.boot.task.TaskExecutorBuilder"
      uuid: "taskExecutorBuilder2"
      fixed: true
    branches:
    - lineNumber: 325
      expression: "set != null"
      range: "(325,40)-(325,50)"
      evaluatedAs: false
      internalMethodName: "append"
- method:
    name: "additionalCustomizers"
    sourceCodeSignature: "TaskExecutorBuilder additionalCustomizers(TaskExecutorCustomizer...\
      \ customizers)"
    returnType: "org.springframework.boot.task.TaskExecutorBuilder"
    parameters:
    - name: "customizers"
      type: "org.springframework.boot.task.TaskExecutorCustomizer[]"
    instructionFingerprint: "61CCFC1E86B7B1067E561F8C42DFFDC8"
  paths:
  - pathId: "path1"
    testPathName: "additionalCustomizersTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "957F2D36397C14237333FFC16F755EDF"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "customizers"
      modelFingerprint: "CB9F50C772E09A97824DB08A34ADC618"
      valueUuid: "customizers"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5AD4C916EE5CD84C5808200B45323069"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:customizers,message:uniqueUuid93):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "FAD33CB0E574EF8DB049F54ACB6FE513"
      methodExercised:
        expression: "additionalCustomizers(customizers:list):taskExecutorBuilder2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D60908B524D1904D058AE52196732EB3"
      valueUuid: "taskExecutorBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.TaskExecutorBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.task.TaskExecutorCustomizer[]"
      uuid: "customizers"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.task.TaskExecutorCustomizer[]"
      uuid: "customizers"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Customizers must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid93"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.task.TaskExecutorBuilder"
      uuid: "taskExecutorBuilder2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.task.TaskExecutorCustomizer"
      uuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.task.TaskExecutorBuilder"
      uuid: "taskExecutorBuilder2"
- method:
    name: "additionalCustomizers"
    sourceCodeSignature: "TaskExecutorBuilder additionalCustomizers(Iterable<TaskExecutorCustomizer>\
      \ customizers)"
    returnType: "org.springframework.boot.task.TaskExecutorBuilder"
    parameters:
    - name: "customizers"
      type: "java.lang.Iterable"
    instructionFingerprint: "D33156FF0DB5CEFA3303CA45EB262387"
  paths:
  - pathId: "path1"
    testPathName: "additionalCustomizers1WhenSetIsNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "A57D0136799D3320DB2EC02005065A27"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "customizers"
      modelFingerprint: "5F915EB42625A8A55CE7CBCB7C2A54D2"
      valueUuid: "customizers"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "C73E444A3D2502CF375FBF3322B6E14D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:customizers,message:uniqueUuid94):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3655678842ED583C8037769544C8A0A0"
      valueUuid: "taskExecutorBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.TaskExecutorBuilder"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.task.TaskExecutorCustomizer"
          uuid: "taskExecutorCustomizer"
          collectionUuid: "customizers"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.task.TaskExecutorCustomizer"
      uuid: "customizers"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.task.TaskExecutorCustomizer"
          uuid: "taskExecutorCustomizer"
          collectionUuid: "customizers"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.task.TaskExecutorCustomizer"
      uuid: "customizers"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Customizers must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid94"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskExecutorBuilder"
        parameters:
        - name: "queueCapacity"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid95"
        - name: "corePoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid96"
        - name: "maxPoolSize"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid97"
        - name: "allowCoreThreadTimeOut"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid98"
        - name: "keepAlive"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid99"
        - name: "awaitTermination"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid100"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid101"
        - name: "threadNamePrefix"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "uniqueUuid102"
        - name: "taskDecorator"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.task.TaskDecorator"
            uuid: "uniqueUuid103"
        - name: "customizers"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.LinkedHashSet"
              parameters:
              - name: "c"
                value:
                  sapientType: "COLLECTION"
                  content: !<collection>
                    parameters: []
                    values: []
                  valueType: "java.util.Set"
                  uuid: "set"
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.task.TaskExecutorCustomizer"
                uuid: "taskExecutorCustomizer"
                collectionUuid: "customizers"
            valueType: "java.util.Set"
            uuid: "set3"
      valueType: "org.springframework.boot.task.TaskExecutorBuilder"
      uuid: "taskExecutorBuilder2"
      fixed: true
    branches:
    - lineNumber: 325
      expression: "set != null"
      range: "(325,40)-(325,50)"
      evaluatedAs: false
      internalMethodName: "append"
- method:
    name: "build"
    sourceCodeSignature: "ThreadPoolTaskExecutor build()"
    returnType: "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
    instructionFingerprint: "091469A1670907F97B2DF854E23FE5C5"
  paths:
  - pathId: "path1"
    testPathName: "buildTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "9C9915996DB742B14C428C0671C04C8B"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "210952235A5E01F5A88BE2F19D020297"
      methodExercised:
        expression: "configure(taskExecutor:threadPoolTaskExecutor):threadPoolTaskExecutor2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "92D841BF3B99D4320AC51889684A0BB6"
      valueUuid: "threadPoolTaskExecutor2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.TaskExecutorBuilder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
      uuid: "threadPoolTaskExecutor2"
    - sapientType: "ANY"
      valueType: "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
      uuid: "threadPoolTaskExecutor"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
      uuid: "threadPoolTaskExecutor2"
- method:
    name: "build"
    sourceCodeSignature: "<T extends ThreadPoolTaskExecutor> T build(Class<T> taskExecutorClass)"
    returnType: "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
    parameters:
    - name: "taskExecutorClass"
      type: "java.lang.Class"
    instructionFingerprint: "2BCCDEFD60027BC91E9C4E141F056CA7"
  paths:
  - pathId: "path1"
    testPathName: "build1Test"
    constructorSignature: "<init>() : void"
    modelFingerprint: "B683408C05D6ECE15C39108BA241E52D"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "taskExecutorClass"
      modelFingerprint: "744E32BB26294908DF36A918A3062722"
      valueUuid: "taskExecutorClass"
    - type: "STATIC"
      name: "BeanUtils.class"
      modelFingerprint: "953DA7B70CD6D4C811E58A1DC7B3D517"
      valueUuid: "BeanUtils.class"
      methodExercised:
        expression: "instantiateClass(clazz:taskExecutorClass):threadPoolTaskExecutor"
        throwsExceptions:
        - "org.springframework.beans.BeanInstantiationException"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "ECBD2BB62F4C372EA997F0E12E637945"
      methodExercised:
        expression: "configure(taskExecutor:threadPoolTaskExecutor):threadPoolTaskExecutor2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "92D841BF3B99D4320AC51889684A0BB6"
      valueUuid: "threadPoolTaskExecutor2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.TaskExecutorBuilder"
      uuid: "target"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
      uuid: "taskExecutorClass"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.BeanUtils"
      uuid: "BeanUtils.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
      uuid: "threadPoolTaskExecutor"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
      uuid: "taskExecutorClass"
    - sapientType: "MOCK"
      valueType: "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
      uuid: "threadPoolTaskExecutor2"
    - sapientType: "MOCK"
      valueType: "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
      uuid: "threadPoolTaskExecutor"
    - sapientType: "MOCK"
      valueType: "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
      uuid: "threadPoolTaskExecutor2"
- method:
    name: "configure"
    sourceCodeSignature: "<T extends ThreadPoolTaskExecutor> T configure(T taskExecutor)"
    returnType: "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
    parameters:
    - name: "taskExecutor"
      type: "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
    instructionFingerprint: "3FD3C6236D7D3992843EEBD3614F4635"
  paths:
  - pathId: "path1"
    testPathName: "configureWhenCollectionUtilsIsEmptyThisCustomizers"
    constructorSignature: "<init>() : void"
    modelFingerprint: "39E76079224A92596385C4645EA97845"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "taskExecutor"
      modelFingerprint: "DA6C2A72EC154D32F024DEBD565A1B3E"
      valueUuid: "taskExecutor"
    - type: "STATIC"
      name: "PropertyMapper.class"
      modelFingerprint: "B1B41702847FC8B31AB887927AD81CC1"
      valueUuid: "PropertyMapper.class"
      methodExercised:
        expression: "get():propertyMapper"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "44331629620EEBF77844433E7BB802E9"
      valueUuid: "propertyMapper"
      methodExercised:
        expression: "alwaysApplyingWhenNonNull():propertyMapper2"
    - type: "LOCAL_VARIABLE"
      name: "map"
      modelFingerprint: "EF613CA45BBAB271AA16610A4C8B9856"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "from(value:uniqueUuid104):propertyMapper.Source"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "7F471C9EE842352039FDFCB21D31C037"
      valueUuid: "propertyMapper.Source"
      methodExercised:
        expression: "to(consumer:uniqueUuid105):void"
    - type: "LOCAL_VARIABLE"
      name: "map"
      modelFingerprint: "3C3F8CF40A2E825C718F81DC4B862CC2"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "from(value:uniqueUuid106):propertyMapper.Source2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "863EE5ED5B493523F7672AB59CD67B8A"
      valueUuid: "propertyMapper.Source2"
      methodExercised:
        expression: "to(consumer:uniqueUuid108):void2"
    - type: "LOCAL_VARIABLE"
      name: "map"
      modelFingerprint: "3C3F8CF40A2E825C718F81DC4B862CC2"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "from(value:uniqueUuid110):propertyMapper.Source3"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "863EE5ED5B493523F7672AB59CD67B8A"
      valueUuid: "propertyMapper.Source3"
      methodExercised:
        expression: "to(consumer:uniqueUuid112):void3"
    - type: "LOCAL_VARIABLE"
      name: "map"
      modelFingerprint: "CDD7560945182734D68D51D6C8859915"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "from(value:uniqueUuid114):propertyMapper.Source4"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "948F246E1AF71D29BC51A10CA40CD712"
      valueUuid: "propertyMapper.Source4"
      methodExercised:
        expression: "asInt(adapter:uniqueUuid116):propertyMapper.Source5"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "256F4D6A5B08F70327B46A1C9BFE1EAA"
      valueUuid: "propertyMapper.Source5"
      methodExercised:
        expression: "to(consumer:uniqueUuid119):void4"
    - type: "LOCAL_VARIABLE"
      name: "map"
      modelFingerprint: "9EB49C86D50236B4A6258070C3DD6C06"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "from(value:uniqueUuid121):propertyMapper.Source6"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "6343FA10439324183A86461BAFCD9911"
      valueUuid: "propertyMapper.Source6"
      methodExercised:
        expression: "to(consumer:uniqueUuid123):void5"
    - type: "LOCAL_VARIABLE"
      name: "map"
      modelFingerprint: "9EB49C86D50236B4A6258070C3DD6C06"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "from(value:uniqueUuid125):propertyMapper.Source7"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "6343FA10439324183A86461BAFCD9911"
      valueUuid: "propertyMapper.Source7"
      methodExercised:
        expression: "to(consumer:uniqueUuid127):void6"
    - type: "LOCAL_VARIABLE"
      name: "map"
      modelFingerprint: "CDD7560945182734D68D51D6C8859915"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "from(value:uniqueUuid129):propertyMapper.Source8"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E6A6984D952D3B0FCD40908F1733F39A"
      valueUuid: "propertyMapper.Source8"
      methodExercised:
        expression: "as(adapter:uniqueUuid131):propertyMapper.Source9"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "5191C5A67CD6D9016AE3D798D5E9CC67"
      valueUuid: "propertyMapper.Source9"
      methodExercised:
        expression: "to(consumer:uniqueUuid134):void7"
    - type: "LOCAL_VARIABLE"
      name: "map"
      modelFingerprint: "288EB52B25A2DEEDC88F5A15891C773A"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "from(value:uniqueUuid136):propertyMapper.Source10"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F3123572AA5A8E049D734158F3888C8E"
      valueUuid: "propertyMapper.Source10"
      methodExercised:
        expression: "whenHasText():propertyMapper.Source11"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "39D91A7F236B48B074E9731F169596E8"
      valueUuid: "propertyMapper.Source11"
      methodExercised:
        expression: "to(consumer:uniqueUuid139):void8"
    - type: "LOCAL_VARIABLE"
      name: "map"
      modelFingerprint: "6CF102F1E08D7894B336BAA018C0A55C"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "from(value:uniqueUuid140):propertyMapper.Source12"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "4409969EE876BF4B53DE805CA2BC2A39"
      valueUuid: "propertyMapper.Source12"
      methodExercised:
        expression: "to(consumer:uniqueUuid142):void9"
    - type: "STATIC"
      name: "CollectionUtils.class.real"
      modelFingerprint: "A093564C4CD856F5A5DD413A8360A1D8"
      valueUuid: "CollectionUtils.class.real"
      methodExercised:
        expression: "isEmpty(collection:uniqueUuid144):boolean1"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "FEBBC12A8265F290B29D1F182831D7E0"
      valueUuid: "taskExecutor"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "map.from(this.corePoolSize).to(taskExecutor::setCorePoolSize);"
      lineNumber: 310
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type PropertyMapper.Source - Method: to"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskExecutorBuilder"
        parameters: []
      valueType: "org.springframework.boot.task.TaskExecutorBuilder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
      uuid: "taskExecutor"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "PropertyMapper.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source"
    - sapientType: "NULL"
      valueType: "java.lang.Integer"
      uuid: "uniqueUuid104"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid105"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid109"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source2"
    - sapientType: "NULL"
      valueType: "java.lang.Integer"
      uuid: "uniqueUuid106"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid109"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid108"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid113"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source3"
    - sapientType: "NULL"
      valueType: "java.lang.Integer"
      uuid: "uniqueUuid110"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.lang.Integer"
            uuid: "uniqueUuid113"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid112"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid118"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source4"
    - sapientType: "NULL"
      valueType: "java.time.Duration"
      uuid: "uniqueUuid114"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid118"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source4"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.springframework.boot.context.properties.PropertyMapper$Source"
            localVariableValue:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.PropertyMapper"
              uuid: "propertyMapper2"
            methodParameters:
            - value:
                sapientType: "NULL"
                valueType: "java.time.Duration"
            methodName: "from"
          valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
          uuid: "propertyMapper.Source4"
        methodParameters:
        - name: "adapter"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Function"
            uuid: "uniqueUuid120"
        methodName: "asInt"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      genericValueType: "java.lang.Integer"
      uuid: "propertyMapper.Source5"
    - sapientType: "ANY"
      valueType: "java.util.function.Function"
      uuid: "uniqueUuid116"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.springframework.boot.context.properties.PropertyMapper$Source"
            localVariableValue:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.PropertyMapper"
              uuid: "propertyMapper2"
            methodParameters:
            - value:
                sapientType: "NULL"
                valueType: "java.time.Duration"
            methodName: "from"
          valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
          uuid: "propertyMapper.Source4"
        methodParameters:
        - name: "adapter"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Function"
            uuid: "uniqueUuid120"
        methodName: "asInt"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      genericValueType: "java.lang.Integer"
      uuid: "propertyMapper.Source5"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid119"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid124"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source6"
    - sapientType: "NULL"
      valueType: "java.lang.Boolean"
      uuid: "uniqueUuid121"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid124"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source6"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid123"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid128"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source7"
    - sapientType: "NULL"
      valueType: "java.lang.Boolean"
      uuid: "uniqueUuid125"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.lang.Boolean"
            uuid: "uniqueUuid128"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source7"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid127"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid133"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source8"
    - sapientType: "NULL"
      valueType: "java.time.Duration"
      uuid: "uniqueUuid129"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.time.Duration"
            uuid: "uniqueUuid133"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source8"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.springframework.boot.context.properties.PropertyMapper$Source"
            localVariableValue:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.PropertyMapper"
              uuid: "propertyMapper2"
            methodParameters:
            - value:
                sapientType: "NULL"
                valueType: "java.time.Duration"
            methodName: "from"
          valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
          uuid: "propertyMapper.Source8"
        methodParameters:
        - name: "adapter"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Function"
            uuid: "uniqueUuid135"
        methodName: "as"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source9"
    - sapientType: "ANY"
      valueType: "java.util.function.Function"
      uuid: "uniqueUuid131"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.springframework.boot.context.properties.PropertyMapper$Source"
            localVariableValue:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.PropertyMapper"
              uuid: "propertyMapper2"
            methodParameters:
            - value:
                sapientType: "NULL"
                valueType: "java.time.Duration"
            methodName: "from"
          valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
          uuid: "propertyMapper.Source8"
        methodParameters:
        - name: "adapter"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Function"
            uuid: "uniqueUuid135"
        methodName: "as"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source9"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid134"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "uniqueUuid138"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source10"
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "uniqueUuid136"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "uniqueUuid138"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source10"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.springframework.boot.context.properties.PropertyMapper$Source"
            localVariableValue:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.PropertyMapper"
              uuid: "propertyMapper2"
            methodParameters:
            - value:
                sapientType: "NULL"
                valueType: "java.lang.String"
            methodName: "from"
          valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
          uuid: "propertyMapper.Source10"
        methodParameters: []
        methodName: "whenHasText"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source11"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.springframework.boot.context.properties.PropertyMapper$Source"
            localVariableValue:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.PropertyMapper"
              uuid: "propertyMapper2"
            methodParameters:
            - value:
                sapientType: "NULL"
                valueType: "java.lang.String"
            methodName: "from"
          valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
          uuid: "propertyMapper.Source10"
        methodParameters: []
        methodName: "whenHasText"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source11"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid139"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "org.springframework.core.task.TaskDecorator"
            uuid: "uniqueUuid143"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source12"
    - sapientType: "NULL"
      valueType: "org.springframework.core.task.TaskDecorator"
      uuid: "uniqueUuid140"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "org.springframework.core.task.TaskDecorator"
            uuid: "uniqueUuid143"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source12"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid142"
    - sapientType: "REAL"
      valueType: "org.springframework.util.CollectionUtils"
      uuid: "CollectionUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "NULL"
      valueType: "java.util.Set"
      genericValueType: "org.springframework.boot.task.TaskExecutorCustomizer"
      uuid: "uniqueUuid144"
    - sapientType: "MOCK"
      valueType: "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
      uuid: "taskExecutor"
    branches:
    - lineNumber: 318
      expression: "!CollectionUtils.isEmpty(this.customizers)"
      range: "(318,7)-(318,48)"
      evaluatedAs: false
