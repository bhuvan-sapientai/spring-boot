---
modelFingerprint: "ED9E16D17B9F9114DF97889B3FBD8700"
targetClass:
  fullClassName: "org.springframework.boot.task.TaskSchedulerBuilder"
methods:
- method:
    name: "poolSize"
    sourceCodeSignature: "TaskSchedulerBuilder poolSize(int poolSize)"
    returnType: "org.springframework.boot.task.TaskSchedulerBuilder"
    parameters:
    - name: "poolSize"
      type: "int"
    instructionFingerprint: "A3796FC30850DB341D660AF678F3B00D"
  paths:
  - pathId: "path1"
    testPathName: "poolSizeTest"
    constructorSignature: "<init>(java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.String,java.util.Set<org.springframework.boot.task.TaskSchedulerCustomizer>)\
      \ : void"
    modelFingerprint: "743842244F6E42B2DA9C0CEA812EBA1C"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "1EAE5CF7E1416602166ABC69EA9E4289"
      valueUuid: "target"
    - type: "INPUT"
      name: "poolSize"
      modelFingerprint: "13D247BA1F504D8ACB1009278F5E9969"
      valueUuid: "poolSize"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "0AF151030990D7086818C2EE2851780D"
      valueUuid: "taskSchedulerBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskSchedulerBuilder"
        parameters:
        - name: "poolSize"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "java.lang.Integer"
            uuid: "poolSize2"
        - name: "awaitTermination"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "java.lang.Boolean"
            uuid: "awaitTermination"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "awaitTerminationPeriod-days"
            valueType: "java.time.Duration"
            uuid: "awaitTerminationPeriod"
        - name: "threadNamePrefix"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "threadNamePrefix1"
            valueType: "java.lang.String"
            uuid: "threadNamePrefix"
        - name: "taskSchedulerCustomizers"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.task.TaskSchedulerCustomizer"
            uuid: "taskSchedulerCustomizers"
      valueType: "org.springframework.boot.task.TaskSchedulerBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "poolSize"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskSchedulerBuilder"
        parameters:
        - name: "poolSize"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "java.lang.Integer"
            uuid: "integer"
        - name: "awaitTermination"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "java.lang.Boolean"
            uuid: "awaitTermination"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "awaitTerminationPeriod-days"
            valueType: "java.time.Duration"
            uuid: "awaitTerminationPeriod"
        - name: "threadNamePrefix"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "threadNamePrefix1"
            valueType: "java.lang.String"
            uuid: "threadNamePrefix"
        - name: "taskSchedulerCustomizers"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.task.TaskSchedulerCustomizer"
            uuid: "taskSchedulerCustomizers"
      valueType: "org.springframework.boot.task.TaskSchedulerBuilder"
      uuid: "taskSchedulerBuilder2"
      fixed: true
- method:
    name: "awaitTermination"
    sourceCodeSignature: "TaskSchedulerBuilder awaitTermination(boolean awaitTermination)"
    returnType: "org.springframework.boot.task.TaskSchedulerBuilder"
    parameters:
    - name: "awaitTermination"
      type: "boolean"
    instructionFingerprint: "D8799C6453924EE6062DA2B0F17CC331"
  paths:
  - pathId: "path1"
    testPathName: "awaitTerminationTest"
    constructorSignature: "<init>(java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.String,java.util.Set<org.springframework.boot.task.TaskSchedulerCustomizer>)\
      \ : void"
    modelFingerprint: "83C1B34D750E60C8F46F53AB9664F33C"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "1EAE5CF7E1416602166ABC69EA9E4289"
      valueUuid: "target"
    - type: "INPUT"
      name: "awaitTermination"
      modelFingerprint: "878840374B629F8B297791E902FD3538"
      valueUuid: "awaitTermination"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D7E3719EB85FD0E94D669B0AF5E99687"
      valueUuid: "taskSchedulerBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskSchedulerBuilder"
        parameters:
        - name: "poolSize"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "java.lang.Integer"
            uuid: "poolSize"
        - name: "awaitTermination"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "java.lang.Boolean"
            uuid: "awaitTermination2"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "awaitTerminationPeriod-days"
            valueType: "java.time.Duration"
            uuid: "awaitTerminationPeriod"
        - name: "threadNamePrefix"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "threadNamePrefix1"
            valueType: "java.lang.String"
            uuid: "threadNamePrefix"
        - name: "taskSchedulerCustomizers"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.task.TaskSchedulerCustomizer"
            uuid: "taskSchedulerCustomizers"
      valueType: "org.springframework.boot.task.TaskSchedulerBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "awaitTermination"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskSchedulerBuilder"
        parameters:
        - name: "poolSize"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "java.lang.Integer"
            uuid: "poolSize"
        - name: "awaitTermination"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "java.lang.Boolean"
            uuid: "boolean"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "awaitTerminationPeriod-days"
            valueType: "java.time.Duration"
            uuid: "awaitTerminationPeriod"
        - name: "threadNamePrefix"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "threadNamePrefix1"
            valueType: "java.lang.String"
            uuid: "threadNamePrefix"
        - name: "taskSchedulerCustomizers"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.task.TaskSchedulerCustomizer"
            uuid: "taskSchedulerCustomizers"
      valueType: "org.springframework.boot.task.TaskSchedulerBuilder"
      uuid: "taskSchedulerBuilder2"
      fixed: true
- method:
    name: "awaitTerminationPeriod"
    sourceCodeSignature: "TaskSchedulerBuilder awaitTerminationPeriod(Duration awaitTerminationPeriod)"
    returnType: "org.springframework.boot.task.TaskSchedulerBuilder"
    parameters:
    - name: "awaitTerminationPeriod"
      type: "java.time.Duration"
    instructionFingerprint: "454C10076DCCF18CB6E7E211CA5858E9"
  paths:
  - pathId: "path1"
    testPathName: "awaitTerminationPeriodTest"
    constructorSignature: "<init>(java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.String,java.util.Set<org.springframework.boot.task.TaskSchedulerCustomizer>)\
      \ : void"
    modelFingerprint: "753C488CBC05C51109FCCC83CB73A908"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "1EAE5CF7E1416602166ABC69EA9E4289"
      valueUuid: "target"
    - type: "INPUT"
      name: "awaitTerminationPeriod"
      modelFingerprint: "077ED12ABF779965BAF921B6DAB31F6B"
      valueUuid: "awaitTerminationPeriod"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "167FC2A463CC3A87EC1B7EEE7CC9C214"
      valueUuid: "taskSchedulerBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskSchedulerBuilder"
        parameters:
        - name: "poolSize"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "java.lang.Integer"
            uuid: "poolSize"
        - name: "awaitTermination"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "java.lang.Boolean"
            uuid: "awaitTermination"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "awaitTerminationPeriod2-days"
            valueType: "java.time.Duration"
            uuid: "awaitTerminationPeriod2"
        - name: "threadNamePrefix"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "threadNamePrefix1"
            valueType: "java.lang.String"
            uuid: "threadNamePrefix"
        - name: "taskSchedulerCustomizers"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.task.TaskSchedulerCustomizer"
            uuid: "taskSchedulerCustomizers"
      valueType: "org.springframework.boot.task.TaskSchedulerBuilder"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "awaitTerminationPeriod-days"
      valueType: "java.time.Duration"
      uuid: "awaitTerminationPeriod"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskSchedulerBuilder"
        parameters:
        - name: "poolSize"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "java.lang.Integer"
            uuid: "poolSize"
        - name: "awaitTermination"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "java.lang.Boolean"
            uuid: "awaitTermination"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "awaitTerminationPeriod-days"
            valueType: "java.time.Duration"
            uuid: "awaitTerminationPeriod"
        - name: "threadNamePrefix"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "threadNamePrefix1"
            valueType: "java.lang.String"
            uuid: "threadNamePrefix"
        - name: "taskSchedulerCustomizers"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.task.TaskSchedulerCustomizer"
            uuid: "taskSchedulerCustomizers"
      valueType: "org.springframework.boot.task.TaskSchedulerBuilder"
      uuid: "taskSchedulerBuilder2"
      fixed: true
- method:
    name: "threadNamePrefix"
    sourceCodeSignature: "TaskSchedulerBuilder threadNamePrefix(String threadNamePrefix)"
    returnType: "org.springframework.boot.task.TaskSchedulerBuilder"
    parameters:
    - name: "threadNamePrefix"
      type: "java.lang.String"
    instructionFingerprint: "91C5E5095E761766FB220936AA8FDBE1"
  paths:
  - pathId: "path1"
    testPathName: "threadNamePrefixTest"
    constructorSignature: "<init>(java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.String,java.util.Set<org.springframework.boot.task.TaskSchedulerCustomizer>)\
      \ : void"
    modelFingerprint: "2B9B3B957EF315958E3716254E3F5AEC"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "1EAE5CF7E1416602166ABC69EA9E4289"
      valueUuid: "target"
    - type: "INPUT"
      name: "threadNamePrefix"
      modelFingerprint: "9F9EA50672AC88DCFFD3FE5EA043CC4A"
      valueUuid: "threadNamePrefix"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "167FC2A463CC3A87EC1B7EEE7CC9C214"
      valueUuid: "taskSchedulerBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskSchedulerBuilder"
        parameters:
        - name: "poolSize"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "java.lang.Integer"
            uuid: "poolSize"
        - name: "awaitTermination"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "java.lang.Boolean"
            uuid: "awaitTermination"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "awaitTerminationPeriod-days"
            valueType: "java.time.Duration"
            uuid: "awaitTerminationPeriod"
        - name: "threadNamePrefix"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "threadNamePrefix1"
            valueType: "java.lang.String"
            uuid: "threadNamePrefix2"
        - name: "taskSchedulerCustomizers"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.task.TaskSchedulerCustomizer"
            uuid: "taskSchedulerCustomizers"
      valueType: "org.springframework.boot.task.TaskSchedulerBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "threadNamePrefix1"
      valueType: "java.lang.String"
      uuid: "threadNamePrefix"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskSchedulerBuilder"
        parameters:
        - name: "poolSize"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "java.lang.Integer"
            uuid: "poolSize"
        - name: "awaitTermination"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "java.lang.Boolean"
            uuid: "awaitTermination"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "awaitTerminationPeriod-days"
            valueType: "java.time.Duration"
            uuid: "awaitTerminationPeriod"
        - name: "threadNamePrefix"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "threadNamePrefix1"
            valueType: "java.lang.String"
            uuid: "threadNamePrefix"
        - name: "taskSchedulerCustomizers"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.task.TaskSchedulerCustomizer"
            uuid: "taskSchedulerCustomizers"
      valueType: "org.springframework.boot.task.TaskSchedulerBuilder"
      uuid: "taskSchedulerBuilder2"
      fixed: true
- method:
    name: "customizers"
    sourceCodeSignature: "TaskSchedulerBuilder customizers(TaskSchedulerCustomizer...\
      \ customizers)"
    returnType: "org.springframework.boot.task.TaskSchedulerBuilder"
    parameters:
    - name: "customizers"
      type: "org.springframework.boot.task.TaskSchedulerCustomizer[]"
    instructionFingerprint: "6F874E31B2A974D2D7FE19B7DE6F7CF3"
  paths:
  - pathId: "path1"
    testPathName: "customizersTest"
    constructorSignature: "<init>(java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.String,java.util.Set<org.springframework.boot.task.TaskSchedulerCustomizer>)\
      \ : void"
    modelFingerprint: "450BC36B68A4A5D4DDB6820D88013394"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "1EAE5CF7E1416602166ABC69EA9E4289"
      valueUuid: "target"
    - type: "INPUT"
      name: "customizers"
      modelFingerprint: "BC1AEAB2D8297B95437659706810243A"
      valueUuid: "customizers"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "C714A60A22C81A1D50B4BF20703536F4"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:customizers,message:uniqueUuid1):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "C2A6AF0FF6EC1DA968629495327F079F"
      methodExercised:
        expression: "customizers(customizers:list):taskSchedulerBuilder2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B4FDB1CC3DC7B9E9E25D4D1B5A7634BD"
      valueUuid: "taskSchedulerBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskSchedulerBuilder"
        parameters:
        - name: "poolSize"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "java.lang.Integer"
            uuid: "poolSize"
        - name: "awaitTermination"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "java.lang.Boolean"
            uuid: "awaitTermination"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "awaitTerminationPeriod-days"
            valueType: "java.time.Duration"
            uuid: "awaitTerminationPeriod"
        - name: "threadNamePrefix"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "threadNamePrefix1"
            valueType: "java.lang.String"
            uuid: "threadNamePrefix"
        - name: "taskSchedulerCustomizers"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.task.TaskSchedulerCustomizer"
            uuid: "taskSchedulerCustomizers"
      valueType: "org.springframework.boot.task.TaskSchedulerBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.task.TaskSchedulerCustomizer[]"
      uuid: "customizers"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.task.TaskSchedulerCustomizer[]"
      uuid: "customizers"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Customizers must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.task.TaskSchedulerBuilder"
      uuid: "taskSchedulerBuilder2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.task.TaskSchedulerCustomizer"
      uuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.task.TaskSchedulerBuilder"
      uuid: "taskSchedulerBuilder2"
- method:
    name: "customizers"
    sourceCodeSignature: "TaskSchedulerBuilder customizers(Iterable<TaskSchedulerCustomizer>\
      \ customizers)"
    returnType: "org.springframework.boot.task.TaskSchedulerBuilder"
    parameters:
    - name: "customizers"
      type: "java.lang.Iterable"
    instructionFingerprint: "A5AA1E0B5763DCAE05D3397AD66BD9C7"
  paths:
  - pathId: "path1"
    testPathName: "customizers1WhenSetIsNull"
    constructorSignature: "<init>(java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.String,java.util.Set<org.springframework.boot.task.TaskSchedulerCustomizer>)\
      \ : void"
    modelFingerprint: "B8A9F9A0031758589CDCE5F0D683E63F"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "1EAE5CF7E1416602166ABC69EA9E4289"
      valueUuid: "target"
    - type: "INPUT"
      name: "customizers"
      modelFingerprint: "804E026A40B653428A50A76B6E72A4FF"
      valueUuid: "customizers"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "4E3176AB68089BA38E86BF7FB99C6474"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:customizers,message:uniqueUuid2):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "055072D6D0A321A4513CDC184EDF53A7"
      valueUuid: "taskSchedulerBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskSchedulerBuilder"
        parameters:
        - name: "poolSize"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "java.lang.Integer"
            uuid: "poolSize"
        - name: "awaitTermination"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "java.lang.Boolean"
            uuid: "awaitTermination"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "awaitTerminationPeriod-days"
            valueType: "java.time.Duration"
            uuid: "awaitTerminationPeriod"
        - name: "threadNamePrefix"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "threadNamePrefix1"
            valueType: "java.lang.String"
            uuid: "threadNamePrefix"
        - name: "taskSchedulerCustomizers"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.task.TaskSchedulerCustomizer"
            uuid: "taskSchedulerCustomizers"
      valueType: "org.springframework.boot.task.TaskSchedulerBuilder"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.task.TaskSchedulerCustomizer"
          uuid: "taskSchedulerCustomizer"
          collectionUuid: "customizers"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.task.TaskSchedulerCustomizer"
      uuid: "customizers"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.task.TaskSchedulerCustomizer"
          uuid: "taskSchedulerCustomizer"
          collectionUuid: "customizers"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.task.TaskSchedulerCustomizer"
      uuid: "customizers"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Customizers must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskSchedulerBuilder"
        parameters:
        - name: "poolSize"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "java.lang.Integer"
            uuid: "poolSize"
        - name: "awaitTermination"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "java.lang.Boolean"
            uuid: "awaitTermination"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "awaitTerminationPeriod-days"
            valueType: "java.time.Duration"
            uuid: "awaitTerminationPeriod"
        - name: "threadNamePrefix"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "threadNamePrefix1"
            valueType: "java.lang.String"
            uuid: "threadNamePrefix"
        - name: "taskSchedulerCustomizers"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.LinkedHashSet"
              parameters:
              - name: "c"
                value:
                  sapientType: "COLLECTION"
                  content: !<collection>
                    parameters: []
                    values: []
                  valueType: "java.util.Set"
                  uuid: "set"
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.task.TaskSchedulerCustomizer"
                uuid: "taskSchedulerCustomizer"
                collectionUuid: "customizers"
            valueType: "java.util.Set"
            uuid: "set3"
      valueType: "org.springframework.boot.task.TaskSchedulerBuilder"
      uuid: "taskSchedulerBuilder2"
      fixed: true
    branches:
    - lineNumber: 208
      expression: "set != null"
      range: "(208,40)-(208,50)"
      evaluatedAs: false
      internalMethodName: "append"
- method:
    name: "additionalCustomizers"
    sourceCodeSignature: "TaskSchedulerBuilder additionalCustomizers(TaskSchedulerCustomizer...\
      \ customizers)"
    returnType: "org.springframework.boot.task.TaskSchedulerBuilder"
    parameters:
    - name: "customizers"
      type: "org.springframework.boot.task.TaskSchedulerCustomizer[]"
    instructionFingerprint: "760BCEA2BFFE3F1F455DB8C0A5E4398A"
  paths:
  - pathId: "path1"
    testPathName: "additionalCustomizersTest"
    constructorSignature: "<init>(java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.String,java.util.Set<org.springframework.boot.task.TaskSchedulerCustomizer>)\
      \ : void"
    modelFingerprint: "6CD9EDAF69ED7E7E241A47F78EA7C2B3"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "1EAE5CF7E1416602166ABC69EA9E4289"
      valueUuid: "target"
    - type: "INPUT"
      name: "customizers"
      modelFingerprint: "BC1AEAB2D8297B95437659706810243A"
      valueUuid: "customizers"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "C714A60A22C81A1D50B4BF20703536F4"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:customizers,message:uniqueUuid3):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "7603B467F2909114B5B4F35E2569A38E"
      methodExercised:
        expression: "additionalCustomizers(customizers:list):taskSchedulerBuilder2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B4FDB1CC3DC7B9E9E25D4D1B5A7634BD"
      valueUuid: "taskSchedulerBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskSchedulerBuilder"
        parameters:
        - name: "poolSize"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "java.lang.Integer"
            uuid: "poolSize"
        - name: "awaitTermination"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "java.lang.Boolean"
            uuid: "awaitTermination"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "awaitTerminationPeriod-days"
            valueType: "java.time.Duration"
            uuid: "awaitTerminationPeriod"
        - name: "threadNamePrefix"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "threadNamePrefix1"
            valueType: "java.lang.String"
            uuid: "threadNamePrefix"
        - name: "taskSchedulerCustomizers"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.task.TaskSchedulerCustomizer"
            uuid: "taskSchedulerCustomizers"
      valueType: "org.springframework.boot.task.TaskSchedulerBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.task.TaskSchedulerCustomizer[]"
      uuid: "customizers"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.task.TaskSchedulerCustomizer[]"
      uuid: "customizers"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Customizers must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.task.TaskSchedulerBuilder"
      uuid: "taskSchedulerBuilder2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.task.TaskSchedulerCustomizer"
      uuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.task.TaskSchedulerBuilder"
      uuid: "taskSchedulerBuilder2"
- method:
    name: "additionalCustomizers"
    sourceCodeSignature: "TaskSchedulerBuilder additionalCustomizers(Iterable<TaskSchedulerCustomizer>\
      \ customizers)"
    returnType: "org.springframework.boot.task.TaskSchedulerBuilder"
    parameters:
    - name: "customizers"
      type: "java.lang.Iterable"
    instructionFingerprint: "C8F0A7B9605F08F144E4A9F5FD5750C5"
  paths:
  - pathId: "path1"
    testPathName: "additionalCustomizers1WhenSetIsNotNull"
    constructorSignature: "<init>(java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.String,java.util.Set<org.springframework.boot.task.TaskSchedulerCustomizer>)\
      \ : void"
    modelFingerprint: "FDCBD777C9023709848D667293ACCB7B"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "1EAE5CF7E1416602166ABC69EA9E4289"
      valueUuid: "target"
    - type: "INPUT"
      name: "customizers"
      modelFingerprint: "804E026A40B653428A50A76B6E72A4FF"
      valueUuid: "customizers"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "4E3176AB68089BA38E86BF7FB99C6474"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:customizers,message:uniqueUuid4):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "055072D6D0A321A4513CDC184EDF53A7"
      valueUuid: "taskSchedulerBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskSchedulerBuilder"
        parameters:
        - name: "poolSize"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "java.lang.Integer"
            uuid: "poolSize"
        - name: "awaitTermination"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "java.lang.Boolean"
            uuid: "awaitTermination"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "awaitTerminationPeriod-days"
            valueType: "java.time.Duration"
            uuid: "awaitTerminationPeriod"
        - name: "threadNamePrefix"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "threadNamePrefix1"
            valueType: "java.lang.String"
            uuid: "threadNamePrefix"
        - name: "taskSchedulerCustomizers"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.task.TaskSchedulerCustomizer"
            uuid: "taskSchedulerCustomizers"
      valueType: "org.springframework.boot.task.TaskSchedulerBuilder"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.task.TaskSchedulerCustomizer"
          uuid: "taskSchedulerCustomizer"
          collectionUuid: "customizers"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.task.TaskSchedulerCustomizer"
      uuid: "customizers"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.task.TaskSchedulerCustomizer"
          uuid: "taskSchedulerCustomizer"
          collectionUuid: "customizers"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.task.TaskSchedulerCustomizer"
      uuid: "customizers"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Customizers must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskSchedulerBuilder"
        parameters:
        - name: "poolSize"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "java.lang.Integer"
            uuid: "poolSize"
        - name: "awaitTermination"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "java.lang.Boolean"
            uuid: "awaitTermination"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "awaitTerminationPeriod-days"
            valueType: "java.time.Duration"
            uuid: "awaitTerminationPeriod"
        - name: "threadNamePrefix"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "threadNamePrefix1"
            valueType: "java.lang.String"
            uuid: "threadNamePrefix"
        - name: "taskSchedulerCustomizers"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.LinkedHashSet"
              parameters:
              - name: "c"
                value:
                  sapientType: "COLLECTION"
                  content: !<collection>
                    parameters: []
                    values: []
                  valueType: "java.util.Set"
                  uuid: "set"
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.task.TaskSchedulerCustomizer"
                uuid: "taskSchedulerCustomizer"
                collectionUuid: "customizers"
            valueType: "java.util.Set"
            uuid: "set3"
      valueType: "org.springframework.boot.task.TaskSchedulerBuilder"
      uuid: "taskSchedulerBuilder2"
      fixed: true
    branches:
    - lineNumber: 208
      expression: "set != null"
      range: "(208,40)-(208,50)"
      evaluatedAs: true
      internalMethodName: "append"
  - pathId: "path2"
    testPathName: "additionalCustomizers1WhenSetIsNull"
    constructorSignature: "<init>(java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.String,java.util.Set<org.springframework.boot.task.TaskSchedulerCustomizer>)\
      \ : void"
    modelFingerprint: "D8644F7AD262BCF40705DCA19C369957"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "583B4EFF4C9020BB900D3B29536D8C9E"
      valueUuid: "target"
    - type: "INPUT"
      name: "customizers"
      modelFingerprint: "804E026A40B653428A50A76B6E72A4FF"
      valueUuid: "customizers"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "4E3176AB68089BA38E86BF7FB99C6474"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:customizers,message:uniqueUuid5):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "055072D6D0A321A4513CDC184EDF53A7"
      valueUuid: "taskSchedulerBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskSchedulerBuilder"
        parameters:
        - name: "poolSize"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "java.lang.Integer"
            uuid: "poolSize"
        - name: "awaitTermination"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "java.lang.Boolean"
            uuid: "awaitTermination"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "awaitTerminationPeriod-days"
            valueType: "java.time.Duration"
            uuid: "awaitTerminationPeriod"
        - name: "threadNamePrefix"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "threadNamePrefix1"
            valueType: "java.lang.String"
            uuid: "threadNamePrefix"
        - name: "taskSchedulerCustomizers"
          value:
            sapientType: "NULL"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.task.TaskSchedulerCustomizer"
            uuid: "taskSchedulerCustomizers"
            fixed: true
      valueType: "org.springframework.boot.task.TaskSchedulerBuilder"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.task.TaskSchedulerCustomizer"
          uuid: "taskSchedulerCustomizer"
          collectionUuid: "customizers"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.task.TaskSchedulerCustomizer"
      uuid: "customizers"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.task.TaskSchedulerCustomizer"
          uuid: "taskSchedulerCustomizer"
          collectionUuid: "customizers"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.task.TaskSchedulerCustomizer"
      uuid: "customizers"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Customizers must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskSchedulerBuilder"
        parameters:
        - name: "poolSize"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "java.lang.Integer"
            uuid: "poolSize"
        - name: "awaitTermination"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "java.lang.Boolean"
            uuid: "awaitTermination"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "awaitTerminationPeriod-days"
            valueType: "java.time.Duration"
            uuid: "awaitTerminationPeriod"
        - name: "threadNamePrefix"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "threadNamePrefix1"
            valueType: "java.lang.String"
            uuid: "threadNamePrefix"
        - name: "taskSchedulerCustomizers"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.LinkedHashSet"
              parameters:
              - name: "c"
                value:
                  sapientType: "COLLECTION"
                  content: !<collection>
                    parameters: []
                    values: []
                  valueType: "java.util.Set"
                  uuid: "set"
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.task.TaskSchedulerCustomizer"
                uuid: "taskSchedulerCustomizer"
                collectionUuid: "customizers"
            valueType: "java.util.Set"
            uuid: "set3"
      valueType: "org.springframework.boot.task.TaskSchedulerBuilder"
      uuid: "taskSchedulerBuilder2"
      fixed: true
    branches:
    - lineNumber: 208
      expression: "set != null"
      range: "(208,40)-(208,50)"
      evaluatedAs: false
      internalMethodName: "append"
- method:
    name: "build"
    sourceCodeSignature: "ThreadPoolTaskScheduler build()"
    returnType: "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"
    instructionFingerprint: "DD363B5F3B917D157B0A9DAE49186D60"
  paths:
  - pathId: "path1"
    testPathName: "buildTest"
    constructorSignature: "<init>(java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.String,java.util.Set<org.springframework.boot.task.TaskSchedulerCustomizer>)\
      \ : void"
    modelFingerprint: "E2E4E58637A74E43427344566FFD35BF"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "1EAE5CF7E1416602166ABC69EA9E4289"
      valueUuid: "target"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "22A8BBD3275A497E521DAF7282009B7D"
      methodExercised:
        expression: "configure(taskScheduler:threadPoolTaskScheduler):threadPoolTaskScheduler2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "FB1F0613A2C6F43E5463C8DB899DF44C"
      valueUuid: "threadPoolTaskScheduler2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskSchedulerBuilder"
        parameters:
        - name: "poolSize"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "java.lang.Integer"
            uuid: "poolSize"
        - name: "awaitTermination"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "java.lang.Boolean"
            uuid: "awaitTermination"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "awaitTerminationPeriod-days"
            valueType: "java.time.Duration"
            uuid: "awaitTerminationPeriod"
        - name: "threadNamePrefix"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "threadNamePrefix1"
            valueType: "java.lang.String"
            uuid: "threadNamePrefix"
        - name: "taskSchedulerCustomizers"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.task.TaskSchedulerCustomizer"
            uuid: "taskSchedulerCustomizers"
      valueType: "org.springframework.boot.task.TaskSchedulerBuilder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"
      uuid: "threadPoolTaskScheduler2"
    - sapientType: "ANY"
      valueType: "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"
      uuid: "threadPoolTaskScheduler"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"
      uuid: "threadPoolTaskScheduler2"
- method:
    name: "configure"
    sourceCodeSignature: "<T extends ThreadPoolTaskScheduler> T configure(T taskScheduler)"
    returnType: "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"
    parameters:
    - name: "taskScheduler"
      type: "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"
    instructionFingerprint: "107EC4666387E7FEC24CD96571FF119B"
  paths:
  - pathId: "path1"
    testPathName: "configureWhenCollectionUtilsNotIsEmptyThisCustomizers"
    constructorSignature: "<init>(java.lang.Integer,java.lang.Boolean,java.time.Duration,java.lang.String,java.util.Set<org.springframework.boot.task.TaskSchedulerCustomizer>)\
      \ : void"
    modelFingerprint: "6E7D2E8E475A3CCD3F38C7EEC46BCE07"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "CC7A7BD718534112AB0FA868C47B481D"
      valueUuid: "target"
    - type: "INPUT"
      name: "taskScheduler"
      modelFingerprint: "3620DFEC9A70CFAEB228DF0DB095283A"
      valueUuid: "taskScheduler"
    - type: "STATIC"
      name: "PropertyMapper.class"
      modelFingerprint: "B1B41702847FC8B31AB887927AD81CC1"
      valueUuid: "PropertyMapper.class"
      methodExercised:
        expression: "get():propertyMapper"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "44331629620EEBF77844433E7BB802E9"
      valueUuid: "propertyMapper"
      methodExercised:
        expression: "alwaysApplyingWhenNonNull():propertyMapper2"
    - type: "LOCAL_VARIABLE"
      name: "map"
      modelFingerprint: "456D00E3848BC16E285A20AE7B234AE8"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "from(value:poolSize):propertyMapper.Source"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E6F6B166BA00D588E75D7CA8D900D9A0"
      valueUuid: "propertyMapper.Source"
      methodExercised:
        expression: "to(consumer:uniqueUuid6):void"
    - type: "LOCAL_VARIABLE"
      name: "map"
      modelFingerprint: "0817BE87A38DC6F352325B647843F01B"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "from(value:awaitTermination):propertyMapper.Source2"
    - type: "LOCAL_VARIABLE"
      name: "taskScheduler"
      modelFingerprint: "878CEB2E326B292ABFD8979958AF0054"
      valueUuid: "taskScheduler"
      methodExercised:
        expression: "setWaitForTasksToCompleteOnShutdown(null:boolean1):void3"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "144C0336C7E8CEE502907C720D36DDE4"
      valueUuid: "propertyMapper.Source2"
      methodExercised:
        expression: "to(consumer:uniqueUuid7):void2"
    - type: "LOCAL_VARIABLE"
      name: "map"
      modelFingerprint: "438898081601F9D5C354405B9E69BD74"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "from(value:awaitTerminationPeriod):propertyMapper.Source3"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "8853E130A80DC32066FE004B493EA68E"
      valueUuid: "propertyMapper.Source3"
      methodExercised:
        expression: "asInt(adapter:uniqueUuid8):propertyMapper.Source4"
    - type: "LOCAL_VARIABLE"
      name: "taskScheduler"
      modelFingerprint: "231F4B49913B5F34C51EDE372A257913"
      valueUuid: "taskScheduler"
      methodExercised:
        expression: "setAwaitTerminationSeconds(null:int1):void5"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "1347FD407D26949FB3530B2F335178A7"
      valueUuid: "propertyMapper.Source4"
      methodExercised:
        expression: "to(consumer:uniqueUuid9):void4"
    - type: "LOCAL_VARIABLE"
      name: "map"
      modelFingerprint: "5E070C171026E8FF2F4494F7EA208A86"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "from(value:threadNamePrefix):propertyMapper.Source5"
    - type: "LOCAL_VARIABLE"
      name: "taskScheduler"
      modelFingerprint: "74C9ED31F6958B454037209B17F9DA2F"
      valueUuid: "taskScheduler"
      methodExercised:
        expression: "setThreadNamePrefix(null:string):void7"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "144C0336C7E8CEE502907C720D36DDE4"
      valueUuid: "propertyMapper.Source5"
      methodExercised:
        expression: "to(consumer:uniqueUuid10):void6"
    - type: "STATIC"
      name: "CollectionUtils.class"
      modelFingerprint: "D2A195C46FAB9D5B1BC0B535D11E18E1"
      valueUuid: "CollectionUtils.class"
      methodExercised:
        expression: "isEmpty(collection:taskSchedulerCustomizers):boolean2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "customizer"
      modelFingerprint: "2DF4FE3AD4197DBF00A953D080CF9C58"
      valueUuid: "taskSchedulerCustomizer"
      methodExercised:
        expression: "customize(taskScheduler:taskScheduler):void9"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E0AB84CE85D053731077516360DF1D0E"
      valueUuid: "taskScheduler"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.time.Duration.getSeconds() : long"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.task.TaskSchedulerBuilder"
        parameters:
        - name: "poolSize"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "java.lang.Integer"
            uuid: "poolSize"
        - name: "awaitTermination"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "java.lang.Boolean"
            uuid: "awaitTermination"
        - name: "awaitTerminationPeriod"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "awaitTerminationPeriod-days"
            valueType: "java.time.Duration"
            uuid: "awaitTerminationPeriod"
        - name: "threadNamePrefix"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "threadNamePrefix1"
            valueType: "java.lang.String"
            uuid: "threadNamePrefix"
        - name: "taskSchedulerCustomizers"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashSet"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.task.TaskSchedulerCustomizer"
                uuid: "taskSchedulerCustomizer"
                collectionUuid: "taskSchedulerCustomizers"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.task.TaskSchedulerCustomizer"
            uuid: "taskSchedulerCustomizers"
      valueType: "org.springframework.boot.task.TaskSchedulerBuilder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"
      uuid: "taskScheduler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "PropertyMapper.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "java.lang.Integer"
            uuid: "poolSize"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "java.lang.Integer"
      uuid: "poolSize"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "java.lang.Integer"
            uuid: "poolSize"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid6"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "java.lang.Boolean"
      uuid: "awaitTermination"
    - sapientType: "MOCK"
      valueType: "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"
      uuid: "taskScheduler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "awaitTerminationPeriod-days"
      valueType: "java.time.Duration"
      uuid: "awaitTerminationPeriod"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      genericValueType: "java.lang.Integer"
      uuid: "propertyMapper.Source4"
    - sapientType: "ANY"
      valueType: "java.util.function.Function"
      uuid: "uniqueUuid8"
    - sapientType: "MOCK"
      valueType: "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"
      uuid: "taskScheduler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      genericValueType: "java.lang.Integer"
      uuid: "propertyMapper.Source4"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid9"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "threadNamePrefix1"
      valueType: "java.lang.String"
      uuid: "threadNamePrefix"
    - sapientType: "MOCK"
      valueType: "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"
      uuid: "taskScheduler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "string1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source5"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid10"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.CollectionUtils"
      uuid: "CollectionUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashSet"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.task.TaskSchedulerCustomizer"
          uuid: "taskSchedulerCustomizer"
          collectionUuid: "taskSchedulerCustomizers"
      valueType: "java.util.Set"
      genericValueType: "org.springframework.boot.task.TaskSchedulerCustomizer"
      uuid: "taskSchedulerCustomizers"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.task.TaskSchedulerCustomizer"
      uuid: "taskSchedulerCustomizer"
      collectionUuid: "taskSchedulerCustomizers"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"
      uuid: "taskScheduler"
    - sapientType: "MOCK"
      valueType: "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"
      uuid: "taskScheduler"
    branches:
    - lineNumber: 201
      expression: "!CollectionUtils.isEmpty(this.customizers)"
      range: "(201,7)-(201,48)"
      evaluatedAs: true
