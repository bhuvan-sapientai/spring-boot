---
modelFingerprint: "6A3501934FED8A817870F1AEA9B43257"
targetClass:
  fullClassName: "org.springframework.boot.ssl.pem.PemContent"
methods:
- method:
    name: "getCertificates"
    sourceCodeSignature: "List<X509Certificate> getCertificates()"
    returnType: "java.util.List"
    genericReturnType: "java.security.cert.X509Certificate"
    instructionFingerprint: "A187C5BBF8E7FC4F92CA1C4719E15E10"
  paths:
  - pathId: "path1"
    testPathName: "getCertificatesTest"
    constructorSignature: "of(java.lang.String) : org.springframework.boot.ssl.pem.PemContent"
    modelFingerprint: "EE0CBBADCB3CED38DB95A68FA6242410"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "099598928D2A436A033F486F7EA9F7EB"
      valueUuid: "target"
    - type: "STATIC"
      name: "PemCertificateParser.class"
      modelFingerprint: "BF40AE17FC9A5B75C85A62E3F0256B0E"
      valueUuid: "PemCertificateParser.class"
      methodExercised:
        expression: "parse(text:text):list"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5E862CD71BA870A1F07368B451D5CE6A"
      valueUuid: "list"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.ssl.pem.PemContent"
        method: "of"
        methodParameters:
        - name: "text"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "text1"
            valueType: "java.lang.String"
            uuid: "text"
      valueType: "org.springframework.boot.ssl.pem.PemContent"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.pem.PemCertificateParser"
      uuid: "PemCertificateParser.class"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.security.cert.X509Certificate"
      uuid: "list"
    - sapientType: "BASIC"
      content: !<regular>
        value: "text1"
      valueType: "java.lang.String"
      uuid: "text"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.security.cert.X509Certificate"
      uuid: "list"
- method:
    name: "getPrivateKey"
    sourceCodeSignature: "PrivateKey getPrivateKey()"
    returnType: "java.security.PrivateKey"
    instructionFingerprint: "EFC936F142150114F386B3C854A79364"
  paths:
  - pathId: "path1"
    testPathName: "getPrivateKeyTest"
    constructorSignature: "of(java.lang.String) : org.springframework.boot.ssl.pem.PemContent"
    modelFingerprint: "703B686602C771807DB57649126BF9A3"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "1973B87C0AB746982EACC9DA6205D541"
      valueUuid: "target"
    - type: "STATIC"
      name: "PemPrivateKeyParser.class"
      modelFingerprint: "CE9D6606AACEB0C6A94F0F4D20B9D4B2"
      valueUuid: "PemPrivateKeyParser.class"
      methodExercised:
        expression: "parse(text:text,password:uniqueUuid1):privateKey"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "94D8732E0693A782429EF28E2744BF57"
      valueUuid: "privateKey"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.ssl.pem.PemContent"
        method: "of"
        methodParameters:
        - name: "text"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "text"
      valueType: "org.springframework.boot.ssl.pem.PemContent"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.pem.PemPrivateKeyParser"
      uuid: "PemPrivateKeyParser.class"
    - sapientType: "MOCK"
      valueType: "java.security.PrivateKey"
      uuid: "privateKey"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "text"
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
    - sapientType: "MOCK"
      valueType: "java.security.PrivateKey"
      uuid: "privateKey"
- method:
    name: "getPrivateKey"
    sourceCodeSignature: "PrivateKey getPrivateKey(String password)"
    returnType: "java.security.PrivateKey"
    parameters:
    - name: "password"
      type: "java.lang.String"
    instructionFingerprint: "C2466570EFB3FD6439C215E5C07EC79B"
  paths:
  - pathId: "path1"
    testPathName: "getPrivateKey1Test"
    constructorSignature: "of(java.lang.String) : org.springframework.boot.ssl.pem.PemContent"
    modelFingerprint: "4775A414C2606CB5CBD5C0120FB250AD"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "1973B87C0AB746982EACC9DA6205D541"
      valueUuid: "target"
    - type: "INPUT"
      name: "password"
      modelFingerprint: "E0977E33AD7388F7E4C3DD81C1C8D30E"
      valueUuid: "password"
    - type: "STATIC"
      name: "PemPrivateKeyParser.class"
      modelFingerprint: "F1EF5276043BFDDCB6C8E0C3E9B50CBC"
      valueUuid: "PemPrivateKeyParser.class"
      methodExercised:
        expression: "parse(text:text,password:password):privateKey"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "94D8732E0693A782429EF28E2744BF57"
      valueUuid: "privateKey"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.ssl.pem.PemContent"
        method: "of"
        methodParameters:
        - name: "text"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "text"
      valueType: "org.springframework.boot.ssl.pem.PemContent"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "password"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.pem.PemPrivateKeyParser"
      uuid: "PemPrivateKeyParser.class"
    - sapientType: "MOCK"
      valueType: "java.security.PrivateKey"
      uuid: "privateKey"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "text"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "password"
    - sapientType: "MOCK"
      valueType: "java.security.PrivateKey"
      uuid: "privateKey"
- method:
    name: "equals"
    sourceCodeSignature: "boolean equals(Object obj)"
    returnType: "boolean"
    parameters:
    - name: "obj"
      type: "java.lang.Object"
    instructionFingerprint: "5828ED10A5DA462A3D0E7626E76E9F03"
  paths:
  - pathId: "path1"
    testPathName: "equalsWhenThisEqualsObj"
    constructorSignature: "of(java.lang.String) : org.springframework.boot.ssl.pem.PemContent"
    modelFingerprint: "D556B9E75F22F8127E20476BFAEF7FB8"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    branches:
    - lineNumber: 88
      expression: "this == obj"
      range: "(88,7)-(88,17)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "equalsWhenGetClassNotEqualsObjGetClass"
    constructorSignature: "of(java.lang.String) : org.springframework.boot.ssl.pem.PemContent"
    modelFingerprint: "2FF34931E991A16710B68A9E8FC17E99"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    branches:
    - lineNumber: 88
      expression: "this == obj"
      range: "(88,7)-(88,17)"
      evaluatedAs: false
    - lineNumber: 91
      expression: "obj == null"
      range: "(91,7)-(91,17)"
      evaluatedAs: false
    - lineNumber: 91
      expression: "getClass() != obj.getClass()"
      range: "(91,22)-(91,49)"
      evaluatedAs: true
  - pathId: "path3"
    testPathName: "equalsWhenObjectsEqualsThisTextObjText"
    constructorSignature: "of(java.lang.String) : org.springframework.boot.ssl.pem.PemContent"
    modelFingerprint: "CCB8DB29F96AAB6F7F4424A2A3778ACD"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    branches:
    - lineNumber: 88
      expression: "this == obj"
      range: "(88,7)-(88,17)"
      evaluatedAs: false
    - lineNumber: 91
      expression: "obj == null"
      range: "(91,7)-(91,17)"
      evaluatedAs: false
    - lineNumber: 91
      expression: "getClass() != obj.getClass()"
      range: "(91,22)-(91,49)"
      evaluatedAs: false
    - lineNumber: 94
      expression: "Objects.equals(this.text, ((PemContent) obj).text)"
      range: "(94,10)-(94,59)"
      evaluatedAs: true
  - pathId: "path4"
    testPathName: "equalsWhenObjectsNotEqualsThisTextObjText"
    constructorSignature: "of(java.lang.String) : org.springframework.boot.ssl.pem.PemContent"
    modelFingerprint: "BD22032EAB5A55E9E66034C5AE9C5CC3"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    branches:
    - lineNumber: 88
      expression: "this == obj"
      range: "(88,7)-(88,17)"
      evaluatedAs: false
    - lineNumber: 91
      expression: "obj == null"
      range: "(91,7)-(91,17)"
      evaluatedAs: false
    - lineNumber: 91
      expression: "getClass() != obj.getClass()"
      range: "(91,22)-(91,49)"
      evaluatedAs: false
    - lineNumber: 94
      expression: "Objects.equals(this.text, ((PemContent) obj).text)"
      range: "(94,10)-(94,59)"
      evaluatedAs: false
- method:
    name: "toString"
    sourceCodeSignature: "String toString()"
    returnType: "java.lang.String"
    instructionFingerprint: "4A0E10C6D00A29C1D9942FFC1432208F"
  paths:
  - pathId: "path1"
    testPathName: "toStringTest"
    constructorSignature: "of(java.lang.String) : org.springframework.boot.ssl.pem.PemContent"
    modelFingerprint: "0BD7CF97AC0A36D80CD7876610535373"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "099598928D2A436A033F486F7EA9F7EB"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "0DEED040A2DD1DEBA16D9E6A6D46CFAD"
      valueUuid: "text"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.ssl.pem.PemContent"
        method: "of"
        methodParameters:
        - name: "text"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "text1"
            valueType: "java.lang.String"
            uuid: "text"
      valueType: "org.springframework.boot.ssl.pem.PemContent"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "text1"
      valueType: "java.lang.String"
      uuid: "text"
- method:
    name: "load"
    sourceCodeSignature: "PemContent load(String content)"
    returnType: "org.springframework.boot.ssl.pem.PemContent"
    throwsExceptions:
    - "java.io.IOException"
    parameters:
    - name: "content"
      type: "java.lang.String"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.io.IOException"
      - "java.io.UncheckedIOException"
    - idExternalInstruction: 0
      id: 4
      catchExceptions:
      - "java.lang.Throwable"
    - idExternalInstruction: 0
      id: 5
      catchExceptions:
      - "java.lang.Throwable"
    instructionFingerprint: "CEC685DF72506C9606CCF80EF6A0EE4C"
  paths:
  - pathId: "path1"
    testPathName: "loadWhenContentIsNull"
    modelFingerprint: "730B807493B28769F1D7BBF25B5D39EC"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "content"
      modelFingerprint: "D4638AFF7FCF8D3C0A1F1575AED7B95A"
      valueUuid: "content"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "DDE919AF21A2D8CDDD05CA0815320A09"
      valueUuid: "pemContent"
    disabled: false
    allValues:
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "content"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.boot.ssl.pem.PemContent"
      uuid: "pemContent"
      fixed: true
    branches:
    - lineNumber: 115
      expression: "content == null"
      range: "(115,7)-(115,21)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "loadWhenIsPresentInTextContent"
    modelFingerprint: "914C628A655A8356A36B08FB7DC95C03"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "content"
      modelFingerprint: "F66ECE2AF0CEC53A96D45A15662CD4EB"
      valueUuid: "content"
    - type: "STATIC"
      name: "PemContent.class"
      modelFingerprint: "A7EBDA3C728AA4F89D8E9686987AC260"
      valueUuid: "PemContent.class"
      methodExercised:
        expression: "isPresentInText(text:content):boolean1"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2F76B8A7310688365A16FE6C3A3E7F64"
      valueUuid: "pemContent"
    disabled: false
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "content1"
      valueType: "java.lang.String"
      uuid: "content"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.pem.PemContent"
      uuid: "PemContent.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "content1"
      valueType: "java.lang.String"
      uuid: "content"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ssl.pem.PemContent"
        parameters:
        - name: "text"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "content1"
            valueType: "java.lang.String"
            uuid: "content"
      valueType: "org.springframework.boot.ssl.pem.PemContent"
      uuid: "pemContent"
      fixed: true
    branches:
    - lineNumber: 115
      expression: "content == null"
      range: "(115,7)-(115,21)"
      evaluatedAs: false
    - lineNumber: 118
      expression: "isPresentInText(content)"
      range: "(118,7)-(118,30)"
      evaluatedAs: true
  - pathId: "path6"
    testPathName: "loadWhenDefaultBranchThrowsThrowable"
    modelFingerprint: "E5B418F4C224DB0FC609E6C9F2B07954"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "content"
      modelFingerprint: "790CFD788F1FA7EDF4EE0CCB0CEC561A"
      valueUuid: "content"
    - type: "STATIC"
      name: "PemContent.class"
      modelFingerprint: "1E83F4FB28AA8147CECD592AD1DF607F"
      valueUuid: "PemContent.class"
      methodExercised:
        expression: "isPresentInText(text:content):boolean1"
        staticAccess: true
    - type: "STATIC"
      name: "ResourceUtils.class"
      modelFingerprint: "2E22CB00F0736C0F3E7E12080CE42108"
      valueUuid: "ResourceUtils.class"
      methodExercised:
        expression: "getURL(resourceLocation:content):uRL"
        throwsExceptions:
        - "java.io.FileNotFoundException"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F1D6B01A75BCDDD6BFF7A09536F7679D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:uRL,message:uniqueUuid1):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "url"
      modelFingerprint: "EC0A53888DB7A3150E5F64661CBCAA78"
      valueUuid: "uRL"
      methodExercised:
        expression: "openStream():inputStream"
        throwsExceptions:
        - "java.io.IOException"
    - type: "STATIC"
      name: "StreamUtils.class"
      modelFingerprint: "40DE4B6C120195EF25AEBC358543871B"
      valueUuid: "StreamUtils.class"
      methodExercised:
        expression: "copyToString(in:inputStream,charset:charset):string"
        throwsExceptions:
        - "java.io.IOException"
        staticAccess: true
    - type: "STATIC"
      name: "PemContent.class"
      modelFingerprint: "0615E2A30FC155FD694588D3202CDFBA"
      valueUuid: "PemContent.class"
      methodExercised:
        expression: "of(text:string):pemContent"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "in"
      modelFingerprint: "467385981CD2239E1EBE1D9D5C653D41"
      valueUuid: "inputStream"
      methodExercised:
        expression: "close():void2"
        throwsExceptions:
        - "java.io.IOException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "49E493EB56B47EDEB5C173968793BABC"
      valueUuid: "throwable"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.io.InputStream.close() : void"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "some_content"
      valueType: "java.lang.String"
      uuid: "content"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.pem.PemContent"
      uuid: "PemContent.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "some_content"
      valueType: "java.lang.String"
      uuid: "content"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ResourceUtils"
      uuid: "ResourceUtils.class"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ResourceUtils"
        method: "getURL"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "content"
      valueType: "java.net.URL"
      uuid: "uRL"
    - sapientType: "BASIC"
      content: !<regular>
        value: "some_content"
      valueType: "java.lang.String"
      uuid: "content"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ResourceUtils"
        method: "getURL"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "content"
      valueType: "java.net.URL"
      uuid: "uRL"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Url must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ResourceUtils"
        method: "getURL"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "content"
      valueType: "java.net.URL"
      uuid: "uRL"
    - sapientType: "INPUT_STREAM"
      content: !<inputStream>
        values: []
      valueType: "java.io.InputStream"
      uuid: "inputStream"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StreamUtils"
      uuid: "StreamUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_copyToString1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "INPUT_STREAM"
      content: !<inputStream>
        values: []
      valueType: "java.io.InputStream"
      uuid: "inputStream"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "java.nio.charset.StandardCharsets"
        fieldName: "UTF_8"
      valueType: "java.nio.charset.Charset"
      uuid: "charset"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.pem.PemContent"
      uuid: "PemContent.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.pem.PemContent"
      uuid: "pemContent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_copyToString1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "INPUT_STREAM"
      content: !<inputStream>
        values: []
      valueType: "java.io.InputStream"
      uuid: "inputStream"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "throwable"
    branches:
    - lineNumber: 115
      expression: "content == null"
      range: "(115,7)-(115,21)"
      evaluatedAs: false
    - lineNumber: 118
      expression: "isPresentInText(content)"
      range: "(118,7)-(118,30)"
      evaluatedAs: false
    - lineNumber: 144
      expression: "branch expression (line 144)"
      range: "(144,1)-(144,200)"
      evaluatedAs: true
      internalMethodName: "load"
    calledSomeStaticInternalMethod: true
    catchBlockExercised:
      idExternalInstruction: 26
      id: 4
      catchExceptions:
      - "java.lang.Throwable"
  - pathId: "path3"
    testPathName: "loadWhenDefaultBranch"
    modelFingerprint: "805AF03E8B9497636C7EBF99F005829F"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "content"
      modelFingerprint: "226E689F507BD4F2734CF62E92A4CB0D"
      valueUuid: "content"
    - type: "STATIC"
      name: "PemContent.class"
      modelFingerprint: "69620E17F114CF3017B4D08C177B5F32"
      valueUuid: "PemContent.class"
      methodExercised:
        expression: "isPresentInText(text:content):boolean1"
        staticAccess: true
    - type: "STATIC"
      name: "ResourceUtils.class"
      modelFingerprint: "FF902F89B33722E1FD0EE939D235594D"
      valueUuid: "ResourceUtils.class"
      methodExercised:
        expression: "getURL(resourceLocation:content):uRL"
        throwsExceptions:
        - "java.io.FileNotFoundException"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F1D6B01A75BCDDD6BFF7A09536F7679D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:uRL,message:uniqueUuid1):void"
        staticAccess: true
    - type: "STATIC"
      name: "StreamUtils.class"
      modelFingerprint: "40DE4B6C120195EF25AEBC358543871B"
      valueUuid: "StreamUtils.class"
      methodExercised:
        expression: "copyToString(in:inputStream,charset:charset):string"
        throwsExceptions:
        - "java.io.IOException"
        staticAccess: true
    - type: "STATIC"
      name: "PemContent.class"
      modelFingerprint: "0615E2A30FC155FD694588D3202CDFBA"
      valueUuid: "PemContent.class"
      methodExercised:
        expression: "of(text:string):pemContent"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "64418A0C32649CA88D7FD4ADEB1482E1"
      valueUuid: "pemContent"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.io.InputStream.close() : void"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "{value=URL}"
      valueType: "java.lang.String"
      uuid: "content"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.pem.PemContent"
      uuid: "PemContent.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "{value=URL}"
      valueType: "java.lang.String"
      uuid: "content"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ResourceUtils"
      uuid: "ResourceUtils.class"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ResourceUtils"
        method: "getURL"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "content"
      valueType: "java.net.URL"
      uuid: "uRL"
    - sapientType: "BASIC"
      content: !<regular>
        value: "{value=URL}"
      valueType: "java.lang.String"
      uuid: "content"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ResourceUtils"
        method: "getURL"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "content"
      valueType: "java.net.URL"
      uuid: "uRL"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Url must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StreamUtils"
      uuid: "StreamUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_copyToString1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "INPUT_STREAM"
      content: !<inputStream>
        values: []
      valueType: "java.io.InputStream"
      uuid: "inputStream"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "java.nio.charset.StandardCharsets"
        fieldName: "UTF_8"
      valueType: "java.nio.charset.Charset"
      uuid: "charset"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.pem.PemContent"
      uuid: "PemContent.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.pem.PemContent"
      uuid: "pemContent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_copyToString1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.pem.PemContent"
      uuid: "pemContent"
    branches:
    - lineNumber: 115
      expression: "content == null"
      range: "(115,7)-(115,21)"
      evaluatedAs: false
    - lineNumber: 118
      expression: "isPresentInText(content)"
      range: "(118,7)-(118,30)"
      evaluatedAs: false
    - lineNumber: 146
      expression: "branch expression (line 146)"
      range: "(146,1)-(146,200)"
      evaluatedAs: false
      internalMethodName: "load"
    calledSomeStaticInternalMethod: true
  - pathId: "path5"
    testPathName: "loadWhenCaughtIOExceptionOrUncheckedIOExceptionThrowsIOException"
    modelFingerprint: "0562F6C678174FFB64BD0508916F207E"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "content"
      modelFingerprint: "226E689F507BD4F2734CF62E92A4CB0D"
      valueUuid: "content"
    - type: "STATIC"
      name: "PemContent.class"
      modelFingerprint: "69620E17F114CF3017B4D08C177B5F32"
      valueUuid: "PemContent.class"
      methodExercised:
        expression: "isPresentInText(text:content):boolean1"
        staticAccess: true
    - type: "STATIC"
      name: "ResourceUtils.class"
      modelFingerprint: "FF902F89B33722E1FD0EE939D235594D"
      valueUuid: "ResourceUtils.class"
      methodExercised:
        expression: "getURL(resourceLocation:content):uRL"
        throwsExceptions:
        - "java.io.FileNotFoundException"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F1D6B01A75BCDDD6BFF7A09536F7679D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:uRL,message:uniqueUuid1):void"
        staticAccess: true
    - type: "STATIC"
      name: "StreamUtils.class"
      modelFingerprint: "40DE4B6C120195EF25AEBC358543871B"
      valueUuid: "StreamUtils.class"
      methodExercised:
        expression: "copyToString(in:inputStream,charset:charset):string"
        throwsExceptions:
        - "java.io.IOException"
        staticAccess: true
    - type: "STATIC"
      name: "PemContent.class"
      modelFingerprint: "0615E2A30FC155FD694588D3202CDFBA"
      valueUuid: "PemContent.class"
      methodExercised:
        expression: "of(text:string):pemContent"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "F298AC82C653B9FBAEDB476F3B91B30C"
      valueUuid: "iOException"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.io.InputStream.close() : void"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "{value=URL}"
      valueType: "java.lang.String"
      uuid: "content"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.pem.PemContent"
      uuid: "PemContent.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "{value=URL}"
      valueType: "java.lang.String"
      uuid: "content"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ResourceUtils"
      uuid: "ResourceUtils.class"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ResourceUtils"
        method: "getURL"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "content"
      valueType: "java.net.URL"
      uuid: "uRL"
    - sapientType: "BASIC"
      content: !<regular>
        value: "{value=URL}"
      valueType: "java.lang.String"
      uuid: "content"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ResourceUtils"
        method: "getURL"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "content"
      valueType: "java.net.URL"
      uuid: "uRL"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Url must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StreamUtils"
      uuid: "StreamUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_copyToString1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "INPUT_STREAM"
      content: !<inputStream>
        values: []
      valueType: "java.io.InputStream"
      uuid: "inputStream"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "java.nio.charset.StandardCharsets"
        fieldName: "UTF_8"
      valueType: "java.nio.charset.Charset"
      uuid: "charset"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.pem.PemContent"
      uuid: "PemContent.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.pem.PemContent"
      uuid: "pemContent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_copyToString1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.io.IOException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Error reading certificate or key from file '{value=URL}'"
            valueType: "java.lang.String"
            uuid: "string2"
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Exception"
              parameters: []
            valueType: "java.lang.Exception"
            uuid: "exception"
      valueType: "java.io.IOException"
      uuid: "iOException"
      fixed: true
    branches:
    - lineNumber: 115
      expression: "content == null"
      range: "(115,7)-(115,21)"
      evaluatedAs: false
    - lineNumber: 118
      expression: "isPresentInText(content)"
      range: "(118,7)-(118,30)"
      evaluatedAs: false
    - lineNumber: 146
      expression: "branch expression (line 146)"
      range: "(146,1)-(146,200)"
      evaluatedAs: false
      internalMethodName: "load"
    - lineNumber: 124
      expression: "catch-exception (IOException | UncheckedIOException)"
      range: "(124,3)-(124,46)"
      evaluatedAs: true
    calledSomeStaticInternalMethod: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.io.IOException"
      - "java.io.UncheckedIOException"
- method:
    name: "load"
    sourceCodeSignature: "PemContent load(Path path)"
    returnType: "org.springframework.boot.ssl.pem.PemContent"
    throwsExceptions:
    - "java.io.IOException"
    parameters:
    - name: "path"
      type: "java.nio.file.Path"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Throwable"
    - idExternalInstruction: 0
      id: 3
      catchExceptions:
      - "java.lang.Throwable"
    instructionFingerprint: "BA7CFF342E57D48F0797CF318CA18CA6"
  paths:
  - pathId: "path3"
    testPathName: "load1WhenDefaultBranchThrowsThrowable"
    modelFingerprint: "71D9630354F4FAE19F3F05D4E849F1A5"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "path"
      modelFingerprint: "D95C6A1987351D425F81AC8B466915E3"
      valueUuid: "path"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "37A051344331086BE896ADA6296B4B6F"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:path,message:uniqueUuid5):void"
        staticAccess: true
    - type: "STATIC"
      name: "Files.class"
      modelFingerprint: "992D80C881E05E927FF3801BC55C4690"
      valueUuid: "Files.class"
      methodExercised:
        expression: "newInputStream(path:path,options:openOptionArray):inputStream"
        throwsExceptions:
        - "java.io.IOException"
        staticAccess: true
    - type: "STATIC"
      name: "StreamUtils.class"
      modelFingerprint: "553BD085052B29F5CD44DB22B47F8EE6"
      valueUuid: "StreamUtils.class"
      methodExercised:
        expression: "copyToString(in:inputStream,charset:charset):string"
        throwsExceptions:
        - "java.io.IOException"
        staticAccess: true
    - type: "STATIC"
      name: "PemContent.class"
      modelFingerprint: "E8E2A5BC857F3EAF2FDFF8CE7675799C"
      valueUuid: "PemContent.class"
      methodExercised:
        expression: "of(text:string):pemContent"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "in"
      modelFingerprint: "467385981CD2239E1EBE1D9D5C653D41"
      valueUuid: "inputStream"
      methodExercised:
        expression: "close():void2"
        throwsExceptions:
        - "java.io.IOException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "49E493EB56B47EDEB5C173968793BABC"
      valueUuid: "throwable"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.nio.file.Files.newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])\
        \ : java.io.InputStream"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "MOCK"
      valueType: "java.nio.file.Path"
      uuid: "path"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "java.nio.file.Path"
      uuid: "path"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Path must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "java.nio.file.Files"
      uuid: "Files.class"
    - sapientType: "INPUT_STREAM"
      content: !<inputStream>
        values: []
      valueType: "java.io.InputStream"
      uuid: "inputStream"
    - sapientType: "MOCK"
      valueType: "java.nio.file.Path"
      uuid: "path"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "ENUM"
            content: !<regular>
              value: "READ"
            valueType: "java.nio.file.StandardOpenOption"
            uuid: "Enum-java.nio.file.StandardOpenOption-READ"
            fixed: true
      valueType: "java.nio.file.OpenOption[]"
      uuid: "openOptionArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StreamUtils"
      uuid: "StreamUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_copyToString1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "INPUT_STREAM"
      content: !<inputStream>
        values: []
      valueType: "java.io.InputStream"
      uuid: "inputStream"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "java.nio.charset.StandardCharsets"
        fieldName: "UTF_8"
      valueType: "java.nio.charset.Charset"
      uuid: "charset"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.pem.PemContent"
      uuid: "PemContent.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.pem.PemContent"
      uuid: "pemContent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_copyToString1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "INPUT_STREAM"
      content: !<inputStream>
        values: []
      valueType: "java.io.InputStream"
      uuid: "inputStream"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "throwable"
    branches:
    - lineNumber: 137
      expression: "branch expression (line 137)"
      range: "(137,1)-(137,200)"
      evaluatedAs: true
    calledSomeStaticInternalMethod: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Throwable"
  - pathId: "path1"
    testPathName: "load1WhenDefaultBranch"
    modelFingerprint: "27CBC244820B6F6917D15A10A41AD30C"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "path"
      modelFingerprint: "D95C6A1987351D425F81AC8B466915E3"
      valueUuid: "path"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "37A051344331086BE896ADA6296B4B6F"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:path,message:uniqueUuid6):void"
        staticAccess: true
    - type: "STATIC"
      name: "StreamUtils.class"
      modelFingerprint: "553BD085052B29F5CD44DB22B47F8EE6"
      valueUuid: "StreamUtils.class"
      methodExercised:
        expression: "copyToString(in:inputStream,charset:charset):string"
        throwsExceptions:
        - "java.io.IOException"
        staticAccess: true
    - type: "STATIC"
      name: "PemContent.class"
      modelFingerprint: "E8E2A5BC857F3EAF2FDFF8CE7675799C"
      valueUuid: "PemContent.class"
      methodExercised:
        expression: "of(text:string):pemContent"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "64418A0C32649CA88D7FD4ADEB1482E1"
      valueUuid: "pemContent"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.nio.file.Files.newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])\
        \ : java.io.InputStream"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "MOCK"
      valueType: "java.nio.file.Path"
      uuid: "path"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "java.nio.file.Path"
      uuid: "path"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Path must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StreamUtils"
      uuid: "StreamUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_copyToString1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "INPUT_STREAM"
      content: !<inputStream>
        values: []
      valueType: "java.io.InputStream"
      uuid: "inputStream"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "java.nio.charset.StandardCharsets"
        fieldName: "UTF_8"
      valueType: "java.nio.charset.Charset"
      uuid: "charset"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.pem.PemContent"
      uuid: "PemContent.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.pem.PemContent"
      uuid: "pemContent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_copyToString1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.pem.PemContent"
      uuid: "pemContent"
    branches:
    - lineNumber: 139
      expression: "branch expression (line 139)"
      range: "(139,1)-(139,200)"
      evaluatedAs: false
    calledSomeStaticInternalMethod: true
- method:
    name: "of"
    sourceCodeSignature: "PemContent of(String text)"
    returnType: "org.springframework.boot.ssl.pem.PemContent"
    parameters:
    - name: "text"
      type: "java.lang.String"
    instructionFingerprint: "6DCB46E31F55B0F0436B264C4DCB1563"
  paths:
  - pathId: "path1"
    testPathName: "ofWhenTextIsNotNull"
    modelFingerprint: "251817A2E0B5E6268689A1BB2ADB87F2"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "text"
      modelFingerprint: "75F4C56DBEDD094E5417ACFA558A423E"
      valueUuid: "text"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2F76B8A7310688365A16FE6C3A3E7F64"
      valueUuid: "pemContent"
    disabled: false
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "text1"
      valueType: "java.lang.String"
      uuid: "text"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ssl.pem.PemContent"
        parameters:
        - name: "text"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "text1"
            valueType: "java.lang.String"
            uuid: "text"
      valueType: "org.springframework.boot.ssl.pem.PemContent"
      uuid: "pemContent"
      fixed: true
    branches:
    - lineNumber: 159
      expression: "text != null"
      range: "(159,11)-(159,22)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "ofWhenTextIsNull"
    modelFingerprint: "8E93B1723E582CFB35D2144A2EF5209C"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "text"
      modelFingerprint: "07E7BB736C8D59AE4628F9EF20819A1B"
      valueUuid: "text"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "DDE919AF21A2D8CDDD05CA0815320A09"
      valueUuid: "pemContent"
    disabled: false
    allValues:
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "text"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.boot.ssl.pem.PemContent"
      uuid: "pemContent"
      fixed: true
    branches:
    - lineNumber: 159
      expression: "text != null"
      range: "(159,11)-(159,22)"
      evaluatedAs: false
- method:
    name: "isPresentInText"
    sourceCodeSignature: "boolean isPresentInText(String text)"
    returnType: "boolean"
    parameters:
    - name: "text"
      type: "java.lang.String"
    instructionFingerprint: "54B38F24E701838F1ED97CEF480E185C"
  paths:
  - pathId: "path1"
    testPathName: "isPresentInTextWhenPEM_FOOTERMatcherTextFind"
    modelFingerprint: "AF47B7F0223D6D97510C0014EB2DEC73"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "text"
      modelFingerprint: "75F4C56DBEDD094E5417ACFA558A423E"
      valueUuid: "text"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8383DF6F1D02800B0E90FD4143032B37"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "PROVER_COULD_NOT_SOLVE_THE_PROBLEM"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "text1"
      valueType: "java.lang.String"
      uuid: "text"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 168
      expression: "text != null"
      range: "(168,10)-(168,21)"
      evaluatedAs: true
    - lineNumber: 168
      expression: "PEM_HEADER.matcher(text).find()"
      range: "(168,26)-(168,56)"
      evaluatedAs: true
    - lineNumber: 168
      expression: "PEM_FOOTER.matcher(text).find()"
      range: "(168,61)-(168,91)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "isPresentInTextWhenPEM_FOOTERMatcherTextNotFind"
    modelFingerprint: "C4F82F43BC4D68018B8D0A10DEE2A60D"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "text"
      modelFingerprint: "75F4C56DBEDD094E5417ACFA558A423E"
      valueUuid: "text"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "PROVER_COULD_NOT_SOLVE_THE_PROBLEM"
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "text1"
      valueType: "java.lang.String"
      uuid: "text"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 168
      expression: "text != null"
      range: "(168,10)-(168,21)"
      evaluatedAs: true
    - lineNumber: 168
      expression: "PEM_HEADER.matcher(text).find()"
      range: "(168,26)-(168,56)"
      evaluatedAs: true
    - lineNumber: 168
      expression: "PEM_FOOTER.matcher(text).find()"
      range: "(168,61)-(168,91)"
      evaluatedAs: false
