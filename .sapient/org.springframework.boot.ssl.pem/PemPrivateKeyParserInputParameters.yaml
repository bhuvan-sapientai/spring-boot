---
modelFingerprint: "46D1A8F1D20C0AF047916304DEB7106A"
methods:
- method:
    name: "parse"
    signature: "parse(java.lang.String) : java.security.PrivateKey"
    sourceCodeSignature: "PrivateKey parse(String text)"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 3
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "D6BC0EADB776E6569F85E057608C684F"
  paths:
  - pathId: "path1"
    testPathName: "parseTest"
    modelFingerprint: "7AAE4DA3B7BB83E86134F1C9FB2720D6"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "text"
      modelFingerprint: "788B1B6D16024D16D347A7FC6AA46DB4"
      index: 1
      valueUuid: "parse_string1"
    - type: "STATIC"
      name: "PemPrivateKeyParser"
      modelFingerprint: "9062992858FC2F13841BEF7F9545E143"
      index: 2
      valueUuid: "uuid2"
      methodExercised:
        target: "org.springframework.boot.ssl.pem.PemPrivateKeyParser"
        name: "parse"
        parameters:
        - name: "text"
          valueUuid: "parse_string1"
        - name: "password"
          valueUuid: "uuid1"
        signature: "parse(String,String): PrivateKey"
        returnValueUuid: "parse_privateKey1"
        access: 8
    - type: "RESULT"
      name: "result"
      modelFingerprint: "F94357396A9BEA5BC8E787D9933ED828"
      index: 3
      valueUuid: "parse_privateKey1"
    uuid: "3a1fa216-77d7-3552-a886-5cb34f671ab0"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "text1"
      valueType: "java.lang.String"
      uuid: "parse_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.pem.PemPrivateKeyParser"
      uuid: "uuid2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.PrivateKey"
      uuid: "parse_privateKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "text1"
      valueType: "java.lang.String"
      uuid: "parse_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "uuid1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.PrivateKey"
      uuid: "parse_privateKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "parse"
    signature: "parse(java.lang.String,java.lang.String) : java.security.PrivateKey"
    sourceCodeSignature: "PrivateKey parse(String text, String password)"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 3
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "036B2F015970068FF10EA3DB707CA193"
  paths:
  - pathId: "path1"
    testPathName: "parse1WhenTextIsNull"
    modelFingerprint: "972879CDD0D1EB3FD4400465098A429D"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "text"
      modelFingerprint: "017145E7AE87CC2BA436C412639F6CCF"
      index: 1
      valueUuid: "parse_string1"
    - type: "INPUT"
      name: "password"
      modelFingerprint: "21FA1C67FB883A5AD84E7CEC88BA70A3"
      index: 2
      valueUuid: "parse_string2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2E57C66E848442DEE45EEE8F3F76E9D6"
      index: 3
      valueUuid: "parse_privateKey1"
    uuid: "a49d431e-c201-3dbb-8fb6-b601fa7b3e67"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "parse_string1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "password1"
      valueType: "java.lang.String"
      uuid: "parse_string2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.security.PrivateKey"
      uuid: "parse_privateKey1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "parse1WhenPrivateKeyIsNotNull"
    modelFingerprint: "D4D10BBFF7C5DBBDAA9A52BB50A3ECB8"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "text"
      modelFingerprint: "788B1B6D16024D16D347A7FC6AA46DB4"
      index: 1
      valueUuid: "parse_string1"
    - type: "INPUT"
      name: "password"
      modelFingerprint: "21FA1C67FB883A5AD84E7CEC88BA70A3"
      index: 2
      valueUuid: "parse_string2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "F94357396A9BEA5BC8E787D9933ED828"
      index: 3
      valueUuid: "parse_privateKey1"
    uuid: "4a6b3772-32d1-36bb-aab7-2dac278a3789"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "pemParser"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "PrivateKey privateKey = pemParser.parse(text, password);"
      lineNumber: 207
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: pemParser - Method: parse"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "text1"
      valueType: "java.lang.String"
      uuid: "parse_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "password1"
      valueType: "java.lang.String"
      uuid: "parse_string2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.PrivateKey"
      uuid: "parse_privateKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path3"
    testPathName: "parse1WhenPrivateKeyIsNullThrowsIllegalStateException"
    modelFingerprint: "51B9C0D4CA6F19E5DD54553F7F2AE688"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "text"
      modelFingerprint: "788B1B6D16024D16D347A7FC6AA46DB4"
      index: 1
      valueUuid: "parse_string1"
    - type: "INPUT"
      name: "password"
      modelFingerprint: "21FA1C67FB883A5AD84E7CEC88BA70A3"
      index: 2
      valueUuid: "parse_string2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "42858A25A1421D9F4C8DE521137D2619"
      index: 3
      valueUuid: "parse_illegalStateException1"
    uuid: "71a0da21-8bba-3e46-bda6-254edc812031"
    deleted: false
    disabled: false
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "pemParser"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "PrivateKey privateKey = pemParser.parse(text, password);"
      lineNumber: 207
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: pemParser - Method: parse"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "text1"
      valueType: "java.lang.String"
      uuid: "parse_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "password1"
      valueType: "java.lang.String"
      uuid: "parse_string2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "s"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Missing private key or unrecognized format"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.lang.IllegalStateException"
      uuid: "parse_illegalStateException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path4"
    testPathName: "parse1WhenCaughtExceptionThrowsIllegalStateException"
    modelFingerprint: "436185BE50E0752D4881C97BE1CE9BEE"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "text"
      modelFingerprint: "788B1B6D16024D16D347A7FC6AA46DB4"
      index: 1
      valueUuid: "parse_string1"
    - type: "INPUT"
      name: "password"
      modelFingerprint: "21FA1C67FB883A5AD84E7CEC88BA70A3"
      index: 2
      valueUuid: "parse_string2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "77362B514BA095F768DFEE22087B35C5"
      index: 3
      valueUuid: "parse_illegalStateException1"
    uuid: "fbb07d47-f496-3e1d-9fa5-8f93eae2714a"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "pemParser"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "PrivateKey privateKey = pemParser.parse(text, password);"
      lineNumber: 207
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: pemParser - Method: parse"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "text1"
      valueType: "java.lang.String"
      uuid: "parse_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "password1"
      valueType: "java.lang.String"
      uuid: "parse_string2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Error loading private key file: A"
            valueType: "java.lang.String"
            uuid: "parse_string4"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Exception"
              parameters:
              - name: "message"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "A"
                  valueType: "java.lang.String"
                  uuid: "parse_string3"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Exception"
            uuid: "parse_exception1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.lang.IllegalStateException"
      uuid: "parse_illegalStateException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path5"
    testPathName: "parse1WhenPrivateKeyIsNullAndCaughtExceptionThrowsIllegalStateException"
    modelFingerprint: "2575492EDA8EA6D0F3883DA914185723"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: true
    inputParameters: []
    uuid: "675e8730-dac6-3cfa-be24-e679aa2c94ea"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "pemParser"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "PrivateKey privateKey = pemParser.parse(text, password);"
      lineNumber: 207
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: pemParser - Method: parse"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path6"
    testPathName: "parse1WhenPEM_PARSERSIsNotEmptyAndPrivateKeyIsNullAndCaughtExceptionThrowsIllegalStateException"
    modelFingerprint: "2575492EDA8EA6D0F3883DA914185723"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 3
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "text"
      modelFingerprint: "788B1B6D16024D16D347A7FC6AA46DB4"
      index: 1
      valueUuid: "parse_string1"
    - type: "INPUT"
      name: "password"
      modelFingerprint: "21FA1C67FB883A5AD84E7CEC88BA70A3"
      index: 2
      valueUuid: "parse_string2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "77362B514BA095F768DFEE22087B35C5"
      index: 3
      valueUuid: "parse_illegalStateException1"
    uuid: "5267e6f4-9987-354f-a396-e4a2c65b1ebc"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "pemParser"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "PrivateKey privateKey = pemParser.parse(text, password);"
      lineNumber: 207
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: pemParser - Method: parse"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "text1"
      valueType: "java.lang.String"
      uuid: "parse_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "password1"
      valueType: "java.lang.String"
      uuid: "parse_string2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Error loading private key file: A"
            valueType: "java.lang.String"
            uuid: "parse_string4"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Exception"
              parameters:
              - name: "message"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "A"
                  valueType: "java.lang.String"
                  uuid: "parse_string3"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Exception"
            uuid: "parse_exception1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.lang.IllegalStateException"
      uuid: "parse_illegalStateException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
