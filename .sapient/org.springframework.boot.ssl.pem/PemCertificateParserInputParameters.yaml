---
modelFingerprint: "994761D57237FE30BD05326E71A4A816"
methods:
- method:
    name: "parse"
    returnType: "java.util.List"
    signature: "parse(java.lang.String) : java.util.List<java.security.cert.X509Certificate>"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.security.cert.CertificateException"
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.security.cert.CertificateException"
    instructionFingerprint: "871D99E365B1DA9465D693C0FE12B6D2"
    parametersTypes:
    - "java.lang.String"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "parseWhenTextIsNull"
    nameDefinedByUser: false
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "827E435539FB73C80A405E4210C17D54"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "text"
      modelFingerprint: "017145E7AE87CC2BA436C412639F6CCF"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "NULL"
        valueType: "java.lang.String"
        uuid: "parse_string1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7D713A8BEEBB757BFBF8D3B40219C3A5"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "NULL"
        valueType: "java.util.List"
        genericValueType: "java.security.cert.X509Certificate"
        uuid: "parse_list1"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "338a9b6c-713e-3004-8310-8ed2c59d6a79"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path6"
    pathIdForUser: "path2"
    testPathName: "parseWhenCaughtCertificateExceptionThrowsIllegalStateException"
    nameDefinedByUser: false
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "EBB53A5043B568ED77D0162FDC644B81"
    problemWasSolvedByProver: true
    catchBlockExercised:
      idExternalInstruction: 11
      id: 1
      catchExceptions:
      - "java.security.cert.CertificateException"
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "text"
      modelFingerprint: "6E37F18D7B060A2259FD8DF6EE4155A5"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "text1"
        suggestedContent: !<regular>
          value: "text1"
        valueType: "java.lang.String"
        uuid: "parse_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "CertificateFactory"
      modelFingerprint: "54031899E6369A83B4297D878E5F15B3"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 110001
      value:
        sapientType: "MOCK"
        valueType: "java.security.cert.CertificateFactory"
        uuid: "java.security.cert.CertificateFactory"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "java.security.cert.CertificateFactory"
        name: "getInstance"
        parameters:
        - name: "type"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "X.509"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        throwsExceptions:
        - "java.security.cert.CertificateException"
        signature: "getInstance(String): CertificateFactory throws java.security.cert.CertificateException"
        returnValue:
          sapientType: "EXCEPTION"
          content: !<new>
            target: "java.security.cert.CertificateException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.security.cert.CertificateException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.security.cert.CertificateException"
          uuid: "getCertificateFactory_certificateFactory1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 25
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2CF76C3877A793C920E5E3FFBAABDC07"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "EXCEPTION"
        content: !<new>
          target: "java.lang.IllegalStateException"
          parameters:
          - name: "message"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "Unable to get X.509 certificate factory"
              valueType: "java.lang.String"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "cause"
            value:
              sapientType: "EXCEPTION"
              content: !<new>
                target: "java.security.cert.CertificateException"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "java.security.cert.CertificateException"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.security.cert.CertificateException"
              uuid: "getCertificateFactory_certificateFactory1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "java.lang.IllegalStateException"
          parameters:
          - name: "message"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "Unable to get X.509 certificate factory"
              valueType: "java.lang.String"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "cause"
            value:
              sapientType: "EXCEPTION"
              suggestedContent: !<new>
                target: "java.security.cert.CertificateException"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.security.cert.CertificateException"
              uuid: "getCertificateFactory_certificateFactory1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "java.lang.IllegalStateException"
        uuid: "getCertificateFactory_illegalStateException1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "dda8f05a-7c6e-385d-a7df-65b719c84f92"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path3"
    pathIdForUser: "path3"
    testPathName: "parseWhenCollectionUtilsIsEmptyCerts"
    nameDefinedByUser: false
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "F66E3BC9B043951C98232EF69C34FD53"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "0ecf8f60-265c-3e09-b5b9-c2fcef25e075"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path5"
    pathIdForUser: "path4"
    testPathName: "parseWhenMatcherNotFindAndCaughtCertificateExceptionThrowsIllegalStateException"
    nameDefinedByUser: false
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "4340804655CAEA1883FEE670E56D301B"
    problemWasSolvedByProver: true
    catchBlockExercised:
      idExternalInstruction: 28
      id: 2
      catchExceptions:
      - "java.security.cert.CertificateException"
    truncated: true
    inputParameters: []
    uuid: "1df735aa-ae89-3348-9dd6-423e7444f313"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path2"
    pathIdForUser: "path5"
    testPathName: "parseWhenInputStreamAvailableGreaterThan0AndCollectionUtilsIsEmptyCerts"
    nameDefinedByUser: false
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "484D04E5F7B4331E35F3EBED8D1EB7C3"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "text"
      modelFingerprint: "788B1B6D16024D16D347A7FC6AA46DB4"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "text1"
        valueType: "java.lang.String"
        uuid: "parse_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "CollectionUtils"
      modelFingerprint: "44BF872EFE5C1B81A2400F5F246C6262"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.springframework.util.CollectionUtils"
        uuid: "org.springframework.util.CollectionUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.CollectionUtils"
        name: "isEmpty"
        parameters:
        - name: "collection"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values: []
            suggestedContent: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "java.security.cert.X509Certificate"
            uuid: "parse_arrayList1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isEmpty(List): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          valueType: "boolean"
          uuid: "parse_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "FD101691B5B3E9D5167F69A405EF35F5"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.Assert"
        uuid: "org.springframework.util.Assert"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "state"
        parameters:
        - name: "expression"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Missing certificates or unrecognized format"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "state(boolean,String): void"
        returnValue:
          sapientType: "VOID"
          valueType: "void"
          uuid: "parse_void1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D09DA0A2F2A5A198916ADF51501CAAF9"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "COLLECTION"
        content: !<collection>
          parameters: []
          values: []
        suggestedContent: !<collection>
          parameters: []
          values: []
        valueType: "java.util.List"
        genericValueType: "java.security.cert.X509Certificate"
        uuid: "parse_list2"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "7dbfec7e-54da-3601-866e-eee4a83b8a65"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path4"
    pathIdForUser: "path6"
    testPathName: "parseWhenInputStreamAvailableGreaterThan0AndCaughtCertificateExceptionThrowsIllegalStateException"
    nameDefinedByUser: false
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "A0F21BE2E1A460FF53F7C07E1F4EA00E"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 28
      id: 2
      catchExceptions:
      - "java.security.cert.CertificateException"
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "text"
      modelFingerprint: "334CB87745CC461378C0E432DD44017E"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "<value>"
        suggestedContent: !<regular>
          value: "<value>"
        valueType: "java.lang.String"
        uuid: "parse_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "EFA37E14BDFDAC3CFF5EB5ABFA447AFC"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "EXCEPTION"
        content: !<new>
          target: "java.lang.IllegalStateException"
          parameters:
          - name: "message"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "Error reading certificate: A"
              suggestedContent: !<regular>
                value: "Error reading certificate: A"
              valueType: "java.lang.String"
              uuid: "readCertificates_string2"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "cause"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.security.cert.CertificateException"
                parameters:
                - name: "msg"
                  value:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "A"
                    suggestedContent: !<regular>
                      value: "A"
                    valueType: "java.lang.String"
                    uuid: "readCertificates_string1"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "java.security.cert.CertificateException"
                parameters:
                - name: "msg"
                  value:
                    sapientType: "BASIC"
                    suggestedContent: !<regular>
                      value: "A"
                    valueType: "java.lang.String"
                    uuid: "readCertificates_string1"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.security.cert.CertificateException"
              uuid: "readCertificates_certificateException1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "java.lang.IllegalStateException"
          parameters:
          - name: "message"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: "Error reading certificate: A"
              valueType: "java.lang.String"
              uuid: "readCertificates_string2"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "cause"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<new>
                target: "java.security.cert.CertificateException"
                parameters:
                - name: "msg"
                  value:
                    sapientType: "BASIC"
                    suggestedContent: !<regular>
                      value: "A"
                    valueType: "java.lang.String"
                    uuid: "readCertificates_string1"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.security.cert.CertificateException"
              uuid: "readCertificates_certificateException1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "java.lang.IllegalStateException"
        uuid: "readCertificates_illegalStateException1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "d0daca89-7f9e-3849-b113-3952438a9b4e"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "DEPENDENCY_TO_THROW_EXCEPTION_NOT_FOUND"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
