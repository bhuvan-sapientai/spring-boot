---
modelFingerprint: "8A6C86952596CF47AEE1F924AB3AD597"
targetClass:
  fullClassName: "org.springframework.boot.ssl.pem.PemSslStoreDetails"
methods:
- method:
    name: "certificate"
    sourceCodeSignature: "String certificate()"
    returnType: "java.lang.String"
    instructionFingerprint: "AA065E82C30243000398AEC2F43A60CA"
  paths:
  - pathId: "path1"
    testPathName: "certificateTest"
    constructorSignature: "<init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)\
      \ : void"
    modelFingerprint: "A2941F957070A053D6869832B15AFB65"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6DA96461BA73AFF38F7B25DF90CCA0D8"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "0DEED040A2DD1DEBA16D9E6A6D46CFAD"
      valueUuid: "certificates"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ssl.pem.PemSslStoreDetails"
        parameters:
        - name: "type"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "type1"
            valueType: "java.lang.String"
            uuid: "type"
        - name: "alias"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "alias1"
            valueType: "java.lang.String"
            uuid: "alias"
        - name: "password"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "password1"
            valueType: "java.lang.String"
            uuid: "password"
        - name: "certificates"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "certificates1"
            valueType: "java.lang.String"
            uuid: "certificates"
        - name: "privateKey"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "privateKey1"
            valueType: "java.lang.String"
            uuid: "privateKey"
        - name: "privateKeyPassword"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "privateKeyPassword1"
            valueType: "java.lang.String"
            uuid: "privateKeyPassword"
      valueType: "org.springframework.boot.ssl.pem.PemSslStoreDetails"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "certificates1"
      valueType: "java.lang.String"
      uuid: "certificates"
- method:
    name: "withAlias"
    sourceCodeSignature: "PemSslStoreDetails withAlias(String alias)"
    returnType: "org.springframework.boot.ssl.pem.PemSslStoreDetails"
    parameters:
    - name: "alias"
      type: "java.lang.String"
    instructionFingerprint: "97949C766CCE9EA8EB6D551E439E10C1"
  paths:
  - pathId: "path1"
    testPathName: "withAliasTest"
    constructorSignature: "<init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)\
      \ : void"
    modelFingerprint: "96DE8E4C03C3CC4ADD5E61671FC3451B"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6DA96461BA73AFF38F7B25DF90CCA0D8"
      valueUuid: "target"
    - type: "INPUT"
      name: "alias"
      modelFingerprint: "2D6D66C9631385BA8BFF7AD9D64ADD03"
      valueUuid: "alias"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "6A7DAE5007FAB89D65600896E5E741D6"
      valueUuid: "pemSslStoreDetails2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ssl.pem.PemSslStoreDetails"
        parameters:
        - name: "type"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "type1"
            valueType: "java.lang.String"
            uuid: "type"
        - name: "alias"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "alias1"
            valueType: "java.lang.String"
            uuid: "alias2"
        - name: "password"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "password1"
            valueType: "java.lang.String"
            uuid: "password"
        - name: "certificates"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "certificates1"
            valueType: "java.lang.String"
            uuid: "certificates"
        - name: "privateKey"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "privateKey1"
            valueType: "java.lang.String"
            uuid: "privateKey"
        - name: "privateKeyPassword"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "privateKeyPassword1"
            valueType: "java.lang.String"
            uuid: "privateKeyPassword"
      valueType: "org.springframework.boot.ssl.pem.PemSslStoreDetails"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "alias1"
      valueType: "java.lang.String"
      uuid: "alias"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ssl.pem.PemSslStoreDetails"
        parameters:
        - name: "type"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "type1"
            valueType: "java.lang.String"
            uuid: "type"
        - name: "alias"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "alias1"
            valueType: "java.lang.String"
            uuid: "alias"
        - name: "password"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "password1"
            valueType: "java.lang.String"
            uuid: "password"
        - name: "certificates"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "certificates1"
            valueType: "java.lang.String"
            uuid: "certificates"
        - name: "privateKey"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "privateKey1"
            valueType: "java.lang.String"
            uuid: "privateKey"
        - name: "privateKeyPassword"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "privateKeyPassword1"
            valueType: "java.lang.String"
            uuid: "privateKeyPassword"
      valueType: "org.springframework.boot.ssl.pem.PemSslStoreDetails"
      uuid: "pemSslStoreDetails2"
      fixed: true
- method:
    name: "withPassword"
    sourceCodeSignature: "PemSslStoreDetails withPassword(String password)"
    returnType: "org.springframework.boot.ssl.pem.PemSslStoreDetails"
    parameters:
    - name: "password"
      type: "java.lang.String"
    instructionFingerprint: "6586DC3052ADCA9A91064B79C13B8CA3"
  paths:
  - pathId: "path1"
    testPathName: "withPasswordTest"
    constructorSignature: "<init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)\
      \ : void"
    modelFingerprint: "4636C9C515D7993F57E965DC8623B7EB"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6DA96461BA73AFF38F7B25DF90CCA0D8"
      valueUuid: "target"
    - type: "INPUT"
      name: "password"
      modelFingerprint: "57FABA1F4A3BB2CB7AD0DE4379566EA8"
      valueUuid: "password"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "6A7DAE5007FAB89D65600896E5E741D6"
      valueUuid: "pemSslStoreDetails2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ssl.pem.PemSslStoreDetails"
        parameters:
        - name: "type"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "type1"
            valueType: "java.lang.String"
            uuid: "type"
        - name: "alias"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "alias1"
            valueType: "java.lang.String"
            uuid: "alias"
        - name: "password"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "password1"
            valueType: "java.lang.String"
            uuid: "password2"
        - name: "certificates"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "certificates1"
            valueType: "java.lang.String"
            uuid: "certificates"
        - name: "privateKey"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "privateKey1"
            valueType: "java.lang.String"
            uuid: "privateKey"
        - name: "privateKeyPassword"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "privateKeyPassword1"
            valueType: "java.lang.String"
            uuid: "privateKeyPassword"
      valueType: "org.springframework.boot.ssl.pem.PemSslStoreDetails"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "password1"
      valueType: "java.lang.String"
      uuid: "password"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ssl.pem.PemSslStoreDetails"
        parameters:
        - name: "type"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "type1"
            valueType: "java.lang.String"
            uuid: "type"
        - name: "alias"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "alias1"
            valueType: "java.lang.String"
            uuid: "alias"
        - name: "password"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "password1"
            valueType: "java.lang.String"
            uuid: "password"
        - name: "certificates"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "certificates1"
            valueType: "java.lang.String"
            uuid: "certificates"
        - name: "privateKey"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "privateKey1"
            valueType: "java.lang.String"
            uuid: "privateKey"
        - name: "privateKeyPassword"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "privateKeyPassword1"
            valueType: "java.lang.String"
            uuid: "privateKeyPassword"
      valueType: "org.springframework.boot.ssl.pem.PemSslStoreDetails"
      uuid: "pemSslStoreDetails2"
      fixed: true
- method:
    name: "withPrivateKey"
    sourceCodeSignature: "PemSslStoreDetails withPrivateKey(String privateKey)"
    returnType: "org.springframework.boot.ssl.pem.PemSslStoreDetails"
    parameters:
    - name: "privateKey"
      type: "java.lang.String"
    instructionFingerprint: "F7E76F2EDEE922B92B3EB327D4DC7A58"
  paths:
  - pathId: "path1"
    testPathName: "withPrivateKeyTest"
    constructorSignature: "<init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)\
      \ : void"
    modelFingerprint: "F08CA60C235D48B2AD41E64816797D34"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6DA96461BA73AFF38F7B25DF90CCA0D8"
      valueUuid: "target"
    - type: "INPUT"
      name: "privateKey"
      modelFingerprint: "6E5AD4D2D2B28D8464EC8AEF654973F2"
      valueUuid: "privateKey"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "6A7DAE5007FAB89D65600896E5E741D6"
      valueUuid: "pemSslStoreDetails2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ssl.pem.PemSslStoreDetails"
        parameters:
        - name: "type"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "type1"
            valueType: "java.lang.String"
            uuid: "type"
        - name: "alias"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "alias1"
            valueType: "java.lang.String"
            uuid: "alias"
        - name: "password"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "password1"
            valueType: "java.lang.String"
            uuid: "password"
        - name: "certificates"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "certificates1"
            valueType: "java.lang.String"
            uuid: "certificates"
        - name: "privateKey"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "privateKey1"
            valueType: "java.lang.String"
            uuid: "privateKey2"
        - name: "privateKeyPassword"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "privateKeyPassword1"
            valueType: "java.lang.String"
            uuid: "privateKeyPassword"
      valueType: "org.springframework.boot.ssl.pem.PemSslStoreDetails"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "privateKey1"
      valueType: "java.lang.String"
      uuid: "privateKey"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ssl.pem.PemSslStoreDetails"
        parameters:
        - name: "type"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "type1"
            valueType: "java.lang.String"
            uuid: "type"
        - name: "alias"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "alias1"
            valueType: "java.lang.String"
            uuid: "alias"
        - name: "password"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "password1"
            valueType: "java.lang.String"
            uuid: "password"
        - name: "certificates"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "certificates1"
            valueType: "java.lang.String"
            uuid: "certificates"
        - name: "privateKey"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "privateKey1"
            valueType: "java.lang.String"
            uuid: "privateKey"
        - name: "privateKeyPassword"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "privateKeyPassword1"
            valueType: "java.lang.String"
            uuid: "privateKeyPassword"
      valueType: "org.springframework.boot.ssl.pem.PemSslStoreDetails"
      uuid: "pemSslStoreDetails2"
      fixed: true
- method:
    name: "withPrivateKeyPassword"
    sourceCodeSignature: "PemSslStoreDetails withPrivateKeyPassword(String privateKeyPassword)"
    returnType: "org.springframework.boot.ssl.pem.PemSslStoreDetails"
    parameters:
    - name: "privateKeyPassword"
      type: "java.lang.String"
    instructionFingerprint: "B4402E37761FD9EDCF1E4D4FB77F8122"
  paths:
  - pathId: "path1"
    testPathName: "withPrivateKeyPasswordTest"
    constructorSignature: "<init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)\
      \ : void"
    modelFingerprint: "DEF45C9003EF58A3163B83CAB7E1BE69"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6DA96461BA73AFF38F7B25DF90CCA0D8"
      valueUuid: "target"
    - type: "INPUT"
      name: "privateKeyPassword"
      modelFingerprint: "064EC0D9197ABF41B03384ED39A16C75"
      valueUuid: "privateKeyPassword"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "6A7DAE5007FAB89D65600896E5E741D6"
      valueUuid: "pemSslStoreDetails2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ssl.pem.PemSslStoreDetails"
        parameters:
        - name: "type"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "type1"
            valueType: "java.lang.String"
            uuid: "type"
        - name: "alias"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "alias1"
            valueType: "java.lang.String"
            uuid: "alias"
        - name: "password"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "password1"
            valueType: "java.lang.String"
            uuid: "password"
        - name: "certificates"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "certificates1"
            valueType: "java.lang.String"
            uuid: "certificates"
        - name: "privateKey"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "privateKey1"
            valueType: "java.lang.String"
            uuid: "privateKey"
        - name: "privateKeyPassword"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "privateKeyPassword1"
            valueType: "java.lang.String"
            uuid: "privateKeyPassword2"
      valueType: "org.springframework.boot.ssl.pem.PemSslStoreDetails"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "privateKeyPassword1"
      valueType: "java.lang.String"
      uuid: "privateKeyPassword"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ssl.pem.PemSslStoreDetails"
        parameters:
        - name: "type"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "type1"
            valueType: "java.lang.String"
            uuid: "type"
        - name: "alias"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "alias1"
            valueType: "java.lang.String"
            uuid: "alias"
        - name: "password"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "password1"
            valueType: "java.lang.String"
            uuid: "password"
        - name: "certificates"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "certificates1"
            valueType: "java.lang.String"
            uuid: "certificates"
        - name: "privateKey"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "privateKey1"
            valueType: "java.lang.String"
            uuid: "privateKey"
        - name: "privateKeyPassword"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "privateKeyPassword1"
            valueType: "java.lang.String"
            uuid: "privateKeyPassword"
      valueType: "org.springframework.boot.ssl.pem.PemSslStoreDetails"
      uuid: "pemSslStoreDetails2"
      fixed: true
- method:
    name: "isEmpty"
    sourceCodeSignature: "boolean isEmpty()"
    returnType: "boolean"
    instructionFingerprint: "E187C12421C1C03BA7A588B5C99206CE"
  paths:
  - pathId: "path4"
    testPathName: "isEmptyWhenIsEmptyNotThisType"
    constructorSignature: "<init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)\
      \ : void"
    modelFingerprint: "7B0E4A6FEEFB6099BA88EA23AA2AAE12"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "433E90D3C1252FE07EB4589E393F02CA"
      valueUuid: "target"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "C7ACBCFE5616F1184610C59DE2BE7F5B"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:type):boolean1"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ssl.pem.PemSslStoreDetails"
        parameters:
        - name: "type"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "type"
        - name: "alias"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "alias1"
            valueType: "java.lang.String"
            uuid: "alias"
        - name: "password"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "password1"
            valueType: "java.lang.String"
            uuid: "password"
        - name: "certificates"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "certificates1"
            valueType: "java.lang.String"
            uuid: "certificates"
        - name: "privateKey"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "privateKey1"
            valueType: "java.lang.String"
            uuid: "privateKey"
        - name: "privateKeyPassword"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "privateKeyPassword1"
            valueType: "java.lang.String"
            uuid: "privateKeyPassword"
      valueType: "org.springframework.boot.ssl.pem.PemSslStoreDetails"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "type"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 149
      expression: "!StringUtils.hasText(value)"
      range: "(149,10)-(149,36)"
      evaluatedAs: false
      internalMethodName: "isEmpty"
    - lineNumber: 145
      expression: "isEmpty(this.type)"
      range: "(145,10)-(145,27)"
      evaluatedAs: false
  - pathId: "path3"
    testPathName: "isEmptyWhenIsEmptyNotThisCertificates"
    constructorSignature: "<init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)\
      \ : void"
    modelFingerprint: "10982817191D71DCE4C8E6DEF28F9BDD"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "8FF7527952A08655D3757B851A6FC5D8"
      valueUuid: "target"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "830B0058D8B9C71622EF27C0B647344B"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasText(str:type):boolean1"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "4CA1D7F670E7003ED488EFC0E8F41583"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasText(str:certificates):boolean2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ssl.pem.PemSslStoreDetails"
        parameters:
        - name: "type"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "type"
        - name: "alias"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "alias1"
            valueType: "java.lang.String"
            uuid: "alias"
        - name: "password"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "password1"
            valueType: "java.lang.String"
            uuid: "password"
        - name: "certificates"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "B"
            valueType: "java.lang.String"
            uuid: "certificates"
        - name: "privateKey"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "privateKey1"
            valueType: "java.lang.String"
            uuid: "privateKey"
        - name: "privateKeyPassword"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "privateKeyPassword1"
            valueType: "java.lang.String"
            uuid: "privateKeyPassword"
      valueType: "org.springframework.boot.ssl.pem.PemSslStoreDetails"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "certificates"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 149
      expression: "!StringUtils.hasText(value)"
      range: "(149,10)-(149,36)"
      evaluatedAs: true
      internalMethodName: "isEmpty"
    - lineNumber: 145
      expression: "isEmpty(this.type)"
      range: "(145,10)-(145,27)"
      evaluatedAs: true
    - lineNumber: 145
      expression: "isEmpty(this.certificates)"
      range: "(145,32)-(145,57)"
      evaluatedAs: false
  - pathId: "path1"
    testPathName: "isEmptyWhenIsEmptyThisPrivateKey"
    constructorSignature: "<init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)\
      \ : void"
    modelFingerprint: "856ABD860E36B0CAB8C3080CBDA5386A"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "9C5AAFB8C0F4D3E6A78691105D2424A2"
      valueUuid: "target"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "830B0058D8B9C71622EF27C0B647344B"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasText(str:type):boolean1"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "BB175D11E2F89EAE365CEBDD101BB771"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasText(str:certificates):boolean2"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "3F44E5544DC0E28888E2760F19E802DC"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasText(str:privateKey):boolean3"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8383DF6F1D02800B0E90FD4143032B37"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ssl.pem.PemSslStoreDetails"
        parameters:
        - name: "type"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "type"
        - name: "alias"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "alias1"
            valueType: "java.lang.String"
            uuid: "alias"
        - name: "password"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "password1"
            valueType: "java.lang.String"
            uuid: "password"
        - name: "certificates"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "B"
            valueType: "java.lang.String"
            uuid: "certificates"
        - name: "privateKey"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "C"
            valueType: "java.lang.String"
            uuid: "privateKey"
        - name: "privateKeyPassword"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "privateKeyPassword1"
            valueType: "java.lang.String"
            uuid: "privateKeyPassword"
      valueType: "org.springframework.boot.ssl.pem.PemSslStoreDetails"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "certificates"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "C"
      valueType: "java.lang.String"
      uuid: "privateKey"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 149
      expression: "!StringUtils.hasText(value)"
      range: "(149,10)-(149,36)"
      evaluatedAs: true
      internalMethodName: "isEmpty"
    - lineNumber: 145
      expression: "isEmpty(this.type)"
      range: "(145,10)-(145,27)"
      evaluatedAs: true
    - lineNumber: 145
      expression: "isEmpty(this.certificates)"
      range: "(145,32)-(145,57)"
      evaluatedAs: true
    - lineNumber: 145
      expression: "isEmpty(this.privateKey)"
      range: "(145,62)-(145,85)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "isEmptyWhenIsEmptyNotThisPrivateKey"
    constructorSignature: "<init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)\
      \ : void"
    modelFingerprint: "AF24D2523A02BEB12BDD119300BA325C"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "9C5AAFB8C0F4D3E6A78691105D2424A2"
      valueUuid: "target"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "830B0058D8B9C71622EF27C0B647344B"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasText(str:type):boolean1"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "BB175D11E2F89EAE365CEBDD101BB771"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasText(str:certificates):boolean2"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "C9506369CC516B7CC4955DEDE0F3E0AF"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasText(str:privateKey):boolean3"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ssl.pem.PemSslStoreDetails"
        parameters:
        - name: "type"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "type"
        - name: "alias"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "alias1"
            valueType: "java.lang.String"
            uuid: "alias"
        - name: "password"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "password1"
            valueType: "java.lang.String"
            uuid: "password"
        - name: "certificates"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "B"
            valueType: "java.lang.String"
            uuid: "certificates"
        - name: "privateKey"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "C"
            valueType: "java.lang.String"
            uuid: "privateKey"
        - name: "privateKeyPassword"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "privateKeyPassword1"
            valueType: "java.lang.String"
            uuid: "privateKeyPassword"
      valueType: "org.springframework.boot.ssl.pem.PemSslStoreDetails"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "certificates"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "C"
      valueType: "java.lang.String"
      uuid: "privateKey"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 149
      expression: "!StringUtils.hasText(value)"
      range: "(149,10)-(149,36)"
      evaluatedAs: true
      internalMethodName: "isEmpty"
    - lineNumber: 145
      expression: "isEmpty(this.type)"
      range: "(145,10)-(145,27)"
      evaluatedAs: true
    - lineNumber: 145
      expression: "isEmpty(this.certificates)"
      range: "(145,32)-(145,57)"
      evaluatedAs: true
    - lineNumber: 145
      expression: "isEmpty(this.privateKey)"
      range: "(145,62)-(145,85)"
      evaluatedAs: false
- method:
    name: "forCertificate"
    sourceCodeSignature: "PemSslStoreDetails forCertificate(String certificate)"
    returnType: "org.springframework.boot.ssl.pem.PemSslStoreDetails"
    parameters:
    - name: "certificate"
      type: "java.lang.String"
    instructionFingerprint: "33BEF20A57AD19C17838853423DFBC00"
  paths:
  - pathId: "path1"
    testPathName: "forCertificateTest"
    modelFingerprint: "B4FD856B18F41D6211E23AC05CD05B2A"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "certificate"
      modelFingerprint: "E1BF7D9E54B9CC3713EF3C4849621FEC"
      valueUuid: "certificate"
    - type: "STATIC"
      name: "PemSslStoreDetails.class"
      modelFingerprint: "AE271C326123039DFBF382B375269609"
      valueUuid: "PemSslStoreDetails.class"
      methodExercised:
        expression: "forCertificates(certificates:certificate):pemSslStoreDetails"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "056A5C6003ACD5AF4B8838A442AAED1F"
      valueUuid: "pemSslStoreDetails"
    disabled: false
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "certificate1"
      valueType: "java.lang.String"
      uuid: "certificate"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.pem.PemSslStoreDetails"
      uuid: "PemSslStoreDetails.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.pem.PemSslStoreDetails"
      uuid: "pemSslStoreDetails"
    - sapientType: "BASIC"
      content: !<regular>
        value: "certificate1"
      valueType: "java.lang.String"
      uuid: "certificate"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.pem.PemSslStoreDetails"
      uuid: "pemSslStoreDetails"
- method:
    name: "forCertificates"
    sourceCodeSignature: "PemSslStoreDetails forCertificates(String certificates)"
    returnType: "org.springframework.boot.ssl.pem.PemSslStoreDetails"
    parameters:
    - name: "certificates"
      type: "java.lang.String"
    instructionFingerprint: "59F1DCDC0853123EB4E240E77B7B6A8F"
  paths:
  - pathId: "path1"
    testPathName: "forCertificatesTest"
    modelFingerprint: "215658A6542EBB060075A2BEE8B7C3F7"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "certificates"
      modelFingerprint: "A847D0FFBAF26FDD739AFFA9E92BC070"
      valueUuid: "certificates"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B9F7DC48C82CEA0866A05282DEB8430A"
      valueUuid: "pemSslStoreDetails"
    disabled: false
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "certificates1"
      valueType: "java.lang.String"
      uuid: "certificates"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ssl.pem.PemSslStoreDetails"
        parameters:
        - name: "type"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "uniqueUuid1"
        - name: "certificate"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "certificates1"
            valueType: "java.lang.String"
            uuid: "certificates"
        - name: "privateKey"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "uniqueUuid2"
      valueType: "org.springframework.boot.ssl.pem.PemSslStoreDetails"
      uuid: "pemSslStoreDetails"
      fixed: true
