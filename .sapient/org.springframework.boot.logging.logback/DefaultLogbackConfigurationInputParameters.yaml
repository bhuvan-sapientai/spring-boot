---
modelFingerprint: "EDD0097B42F54D03E408645BC64DCB44"
methods:
- method:
    name: "apply"
    signature: "apply(org.springframework.boot.logging.logback.LogbackConfigurator)\
      \ : void"
    sourceCodeSignature: "void apply(LogbackConfigurator config)"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
    instructionFingerprint: "5FB2538428646539B2FFA23D7232886C"
  paths:
  - pathId: "path3"
    testPathName: "applyWhenThisLogFileIsNull"
    constructorSignature: "<init>(org.springframework.boot.logging.LogFile) : void"
    modelFingerprint: "A4EC0930F192A4BB97191F1E86166ECF"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "9BE0B11B44F85031EE98E97F3AE6B651"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "config"
      modelFingerprint: "C158457FD7DAB1DF8CB8FDB98EF98AD0"
      index: 2
      valueUuid: "apply_logbackConfigurator1"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "45E3B091082DF33B36D252D5C9F309F7"
      index: 3
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getConfigurationLock"
        parameters: []
        signature: "getConfigurationLock(): Object"
        returnValueUuid: "apply_object1"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "0D4F0FC1CDD381416EF565C7A48C62E4"
      index: 4
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "conversionRule"
        parameters:
        - name: "conversionWord"
          valueUuid: "uuid1"
        - name: "converterClass"
          valueUuid: "uuid2"
        signature: "conversionRule(String,Class): void"
        returnValueUuid: "defaults_void1"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "F427B77A47EDD4D5C40172432EB97D6B"
      index: 5
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "conversionRule"
        parameters:
        - name: "conversionWord"
          valueUuid: "uuid3"
        - name: "converterClass"
          valueUuid: "uuid4"
        signature: "conversionRule(String,Class): void"
        returnValueUuid: "defaults_void2"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "9950900ACFA2BE4A3325A49D8B07D341"
      index: 6
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "conversionRule"
        parameters:
        - name: "conversionWord"
          valueUuid: "uuid5"
        - name: "converterClass"
          valueUuid: "uuid6"
        signature: "conversionRule(String,Class): void"
        returnValueUuid: "defaults_void3"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "E51659B7A2FE1A6E5768D1CF5FFAF09D"
      index: 7
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "conversionRule"
        parameters:
        - name: "conversionWord"
          valueUuid: "uuid7"
        - name: "converterClass"
          valueUuid: "uuid8"
        signature: "conversionRule(String,Class): void"
        returnValueUuid: "defaults_void4"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4A35616081AB7F80AF462FC3B112459A"
      index: 8
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "defaults_loggerContext1"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 9
      idsTryCatchBlockSurrounding:
      - 340001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext1"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "FF22DAC545E66C307A5BC68C82779D87"
      index: 10
      idsTryCatchBlockSurrounding:
      - 340001
      valueUuid: "uuid10"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid9"
        - name: "pc1"
          valueUuid: "resolve_loggerContext1"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string1"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "084244F29A6C3EEE124EB2CE76CCA1D5"
      index: 11
      valueUuid: "defaults_loggerContext1"
      methodExercised:
        target: "ch.qos.logback.classic.LoggerContext"
        name: "putProperty"
        parameters:
        - name: "key"
          valueUuid: "uuid11"
        - name: "val"
          valueUuid: "resolve_string1"
        signature: "putProperty(String,String): void"
        returnValueUuid: "defaults_void5"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4A35616081AB7F80AF462FC3B112459A"
      index: 12
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "defaults_loggerContext2"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 13
      idsTryCatchBlockSurrounding:
      - 520001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext2"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "4938E11269384D6FAB0E399C59EED3AE"
      index: 14
      idsTryCatchBlockSurrounding:
      - 520001
      valueUuid: "uuid13"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid12"
        - name: "pc1"
          valueUuid: "resolve_loggerContext2"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string2"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "2D5C7DC02794FFE46C396DBCB9B28DD2"
      index: 15
      valueUuid: "defaults_loggerContext2"
      methodExercised:
        target: "ch.qos.logback.classic.LoggerContext"
        name: "putProperty"
        parameters:
        - name: "key"
          valueUuid: "uuid14"
        - name: "val"
          valueUuid: "resolve_string2"
        signature: "putProperty(String,String): void"
        returnValueUuid: "defaults_void6"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4A35616081AB7F80AF462FC3B112459A"
      index: 16
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "defaults_loggerContext3"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 17
      idsTryCatchBlockSurrounding:
      - 620001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext3"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "A5BEC749C014E2305E2F8205A11158E8"
      index: 18
      idsTryCatchBlockSurrounding:
      - 620001
      valueUuid: "uuid16"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid15"
        - name: "pc1"
          valueUuid: "resolve_loggerContext3"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string3"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "25EF47B5E525B6B89E30D7D01071B910"
      index: 19
      valueUuid: "defaults_loggerContext3"
      methodExercised:
        target: "ch.qos.logback.classic.LoggerContext"
        name: "putProperty"
        parameters:
        - name: "key"
          valueUuid: "uuid17"
        - name: "val"
          valueUuid: "resolve_string3"
        signature: "putProperty(String,String): void"
        returnValueUuid: "defaults_void7"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4A35616081AB7F80AF462FC3B112459A"
      index: 20
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "defaults_loggerContext4"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 21
      idsTryCatchBlockSurrounding:
      - 740001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext4"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "D4E059A59A9CC5FCB02BFBFAD818774C"
      index: 22
      idsTryCatchBlockSurrounding:
      - 740001
      valueUuid: "uuid19"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid18"
        - name: "pc1"
          valueUuid: "resolve_loggerContext4"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string4"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E29F485322B06502FF4F0E757AF34782"
      index: 23
      valueUuid: "defaults_loggerContext4"
      methodExercised:
        target: "ch.qos.logback.classic.LoggerContext"
        name: "putProperty"
        parameters:
        - name: "key"
          valueUuid: "uuid20"
        - name: "val"
          valueUuid: "resolve_string4"
        signature: "putProperty(String,String): void"
        returnValueUuid: "defaults_void8"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4A35616081AB7F80AF462FC3B112459A"
      index: 24
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "defaults_loggerContext5"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 25
      idsTryCatchBlockSurrounding:
      - 870001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext5"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "CF498DF647BB28EFEB220F217BE2A3A8"
      index: 26
      idsTryCatchBlockSurrounding:
      - 870001
      valueUuid: "uuid22"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid21"
        - name: "pc1"
          valueUuid: "resolve_loggerContext5"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string5"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A9EAB56CF3E6314D42C6AA0118323105"
      index: 27
      valueUuid: "defaults_loggerContext5"
      methodExercised:
        target: "ch.qos.logback.classic.LoggerContext"
        name: "putProperty"
        parameters:
        - name: "key"
          valueUuid: "uuid23"
        - name: "val"
          valueUuid: "resolve_string5"
        signature: "putProperty(String,String): void"
        returnValueUuid: "defaults_void9"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4A35616081AB7F80AF462FC3B112459A"
      index: 28
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "defaults_loggerContext6"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 29
      idsTryCatchBlockSurrounding:
      - 970001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext6"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "A23F01A3B1A7A87999C46667337C28E4"
      index: 30
      idsTryCatchBlockSurrounding:
      - 970001
      valueUuid: "uuid25"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid24"
        - name: "pc1"
          valueUuid: "resolve_loggerContext6"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string6"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "BA6062C918FD82EABD0F4C26D74288F0"
      index: 31
      valueUuid: "defaults_loggerContext6"
      methodExercised:
        target: "ch.qos.logback.classic.LoggerContext"
        name: "putProperty"
        parameters:
        - name: "key"
          valueUuid: "uuid26"
        - name: "val"
          valueUuid: "resolve_string6"
        signature: "putProperty(String,String): void"
        returnValueUuid: "defaults_void10"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "D2BC1C55758DD71AD08579EAD8FD083A"
      index: 32
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid27"
        - name: "level"
          valueUuid: "defaults_level1"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void11"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2AF34D185CFA4F1056ED0964F0720DF5"
      index: 33
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid28"
        - name: "level"
          valueUuid: "defaults_level1"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void12"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "D2BCECF630BE06922B3869FC5C4EB0C5"
      index: 34
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid29"
        - name: "level"
          valueUuid: "defaults_level2"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void13"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2225B7711737C9D2BE640C6763575B17"
      index: 35
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid30"
        - name: "level"
          valueUuid: "defaults_level2"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void14"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "054406675D6DD77CC515CC72CD0956CE"
      index: 36
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid31"
        - name: "level"
          valueUuid: "defaults_level2"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void15"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "F42D14F86FBC8AEAC8A25D2E9B709A08"
      index: 37
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid32"
        - name: "level"
          valueUuid: "defaults_level1"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void16"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "F18FE8F64D61A2F870D5DB75217F23AF"
      index: 38
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid33"
        - name: "level"
          valueUuid: "defaults_level2"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void17"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "06A6C87D8418936218F06494D3C9F1D6"
      index: 39
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid34"
        - name: "level"
          valueUuid: "defaults_level2"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void18"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 40
      idsTryCatchBlockSurrounding:
      - 180001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext7"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "C9EA97FCC614B1341A34730A439B2FCB"
      index: 41
      idsTryCatchBlockSurrounding:
      - 180001
      valueUuid: "uuid36"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid35"
        - name: "pc1"
          valueUuid: "resolve_loggerContext7"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string7"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "filter"
      modelFingerprint: "BA14BF6DB1A15DD5D96598EAA24DF66D"
      index: 42
      valueUuid: "consoleAppender_thresholdFilter1"
      methodExercised:
        target: "filter"
        name: "setLevel"
        parameters:
        - name: "level"
          valueUuid: "resolve_string7"
        signature: "setLevel(String): void"
        returnValueUuid: "consoleAppender_void1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "filter"
      modelFingerprint: "129423D5E0EE8B1D914E3AB0AA3541DA"
      index: 43
      valueUuid: "consoleAppender_thresholdFilter1"
      methodExercised:
        target: "filter"
        name: "start"
        parameters: []
        signature: "start(): void"
        returnValueUuid: "consoleAppender_void2"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "appender"
      modelFingerprint: "909A8FDE1008BEB38862B62D77D95A49"
      index: 44
      valueUuid: "consoleAppender_consoleAppender1"
      methodExercised:
        target: "appender"
        name: "addFilter"
        parameters:
        - name: "newFilter"
          valueUuid: "consoleAppender_thresholdFilter1"
        signature: "addFilter(ThresholdFilter): void"
        returnValueUuid: "consoleAppender_void3"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 45
      idsTryCatchBlockSurrounding:
      - 410001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext8"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "4ED2DEBDCF100D6DB4BD3D0F7DE79CCA"
      index: 46
      idsTryCatchBlockSurrounding:
      - 410001
      valueUuid: "uuid38"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid37"
        - name: "pc1"
          valueUuid: "resolve_loggerContext8"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string8"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 47
      idsTryCatchBlockSurrounding:
      - 50001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext9"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "A5FF45C5B28DA25E245292B0EB329081"
      index: 48
      idsTryCatchBlockSurrounding:
      - 50001
      valueUuid: "uuid40"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid39"
        - name: "pc1"
          valueUuid: "resolve_loggerContext9"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string9"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "D736DBD86C3C3158665CFD7D4D103A15"
      index: 49
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "start"
        parameters:
        - name: "lifeCycle"
          valueUuid: "consoleAppender_patternLayoutEncoder1"
        signature: "start(PatternLayoutEncoder): void"
        returnValueUuid: "consoleAppender_void6"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2F4E75BFF8E2F2A00C1657D872BD5477"
      index: 50
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "appender"
        parameters:
        - name: "name"
          valueUuid: "uuid41"
        - name: "appender"
          valueUuid: "consoleAppender_consoleAppender1"
        signature: "appender(String,ConsoleAppender): void"
        returnValueUuid: "consoleAppender_void8"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4919FBBC491D957A319B2B9BC6F779A1"
      index: 51
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "root"
        parameters:
        - name: "level"
          valueUuid: "apply_level1"
        - name: "appenders"
          valueUuid: "apply_appender[]1"
        signature: "root(Level,Appender[]): void"
        returnValueUuid: "apply_void1"
        access: 144
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 52
      valueUuid: "uuid42"
    uuid: "73bf880d-b16e-3b10-8f00-50934d137d81"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "appender.addFilter(filter);"
      lineNumber: 108
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: appender - Method: addFilter"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.logback.DefaultLogbackConfiguration"
        parameters:
        - name: "logFile"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.logging.LogFile"
            uuid: "<init>_logFile1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.logback.DefaultLogbackConfiguration"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "apply_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "clr"
      valueType: "java.lang.String"
      uuid: "uuid1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.ColorConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uuid2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "correlationId"
      valueType: "java.lang.String"
      uuid: "uuid3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.CorrelationIdConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uuid4"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "wex"
      valueType: "java.lang.String"
      uuid: "uuid5"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uuid6"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void4"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "wEx"
      valueType: "java.lang.String"
      uuid: "uuid7"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uuid8"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid10"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd'T'HH:mm:ss.SSSXXX}}){faint}\
          \ %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint}\
          \ %clr(${LOGGED_APPLICATION_NAME:-}[%15.15t]){faint} %clr(${LOG_CORRELATION_PATTERN:-}){faint}%clr(%-40.40logger{39}){cyan}\
          \ %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"
      valueType: "java.lang.String"
      uuid: "uuid9"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void5"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "CONSOLE_LOG_PATTERN"
      valueType: "java.lang.String"
      uuid: "uuid11"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid13"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_CHARSET:-UTF-8}"
      valueType: "java.lang.String"
      uuid: "uuid12"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void6"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "CONSOLE_LOG_CHARSET"
      valueType: "java.lang.String"
      uuid: "uuid14"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid16"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_THRESHOLD:-TRACE}"
      valueType: "java.lang.String"
      uuid: "uuid15"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void7"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "CONSOLE_LOG_THRESHOLD"
      valueType: "java.lang.String"
      uuid: "uuid17"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid19"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_PATTERN:-%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd'T'HH:mm:ss.SSSXXX}}\
          \ ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- ${LOGGED_APPLICATION_NAME:-}[%t]\
          \ ${LOG_CORRELATION_PATTERN:-}%-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"
      valueType: "java.lang.String"
      uuid: "uuid18"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void8"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "FILE_LOG_PATTERN"
      valueType: "java.lang.String"
      uuid: "uuid20"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid22"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_CHARSET:-UTF-8}"
      valueType: "java.lang.String"
      uuid: "uuid21"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void9"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "FILE_LOG_CHARSET"
      valueType: "java.lang.String"
      uuid: "uuid23"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid25"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_THRESHOLD:-TRACE}"
      valueType: "java.lang.String"
      uuid: "uuid24"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void10"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "FILE_LOG_THRESHOLD"
      valueType: "java.lang.String"
      uuid: "uuid26"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void11"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.catalina.startup.DigesterFactory"
      valueType: "java.lang.String"
      uuid: "uuid27"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "ERROR"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void12"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.catalina.util.LifecycleBase"
      valueType: "java.lang.String"
      uuid: "uuid28"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "ERROR"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void13"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.coyote.http11.Http11NioProtocol"
      valueType: "java.lang.String"
      uuid: "uuid29"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void14"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.sshd.common.util.SecurityUtils"
      valueType: "java.lang.String"
      uuid: "uuid30"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void15"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.tomcat.util.net.NioSelectorPool"
      valueType: "java.lang.String"
      uuid: "uuid31"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void16"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.eclipse.jetty.util.component.AbstractLifeCycle"
      valueType: "java.lang.String"
      uuid: "uuid32"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "ERROR"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void17"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.hibernate.validator.internal.util.Version"
      valueType: "java.lang.String"
      uuid: "uuid33"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void18"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.actuate.endpoint.jmx"
      valueType: "java.lang.String"
      uuid: "uuid34"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext7"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid36"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "resolve_string7"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_THRESHOLD}"
      valueType: "java.lang.String"
      uuid: "uuid35"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext7"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.classic.filter.ThresholdFilter"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "consoleAppender_thresholdFilter1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "consoleAppender_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "resolve_string7"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.classic.filter.ThresholdFilter"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "consoleAppender_thresholdFilter1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "consoleAppender_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.core.ConsoleAppender"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          encoder:
            sapientType: "OBJECT"
            content: !<new>
              target: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
              parameters: []
              privateConstructor: false
              createdByTargetCode: true
              propertiesMap:
                charset:
                  sapientType: "OBJECT"
                  content: !<static_method_return>
                    target: "java.nio.charset.Charset"
                    method: "defaultCharset"
                    methodParameters: []
                  valueType: "java.nio.charset.Charset"
                  uuid: "resolveCharset_charset1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                pattern:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pattern1"
                  valueType: "java.lang.String"
                  uuid: "resolve_string8"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
            uuid: "consoleAppender_patternLayoutEncoder1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "ch.qos.logback.core.ConsoleAppender"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "consoleAppender_consoleAppender1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "consoleAppender_void3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.classic.filter.ThresholdFilter"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "consoleAppender_thresholdFilter1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext8"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid38"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "pattern1"
      valueType: "java.lang.String"
      uuid: "resolve_string8"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_PATTERN}"
      valueType: "java.lang.String"
      uuid: "uuid37"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext8"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext9"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid40"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "resolve_string9"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_CHARSET}"
      valueType: "java.lang.String"
      uuid: "uuid39"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext9"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "consoleAppender_void6"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          charset:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.nio.charset.Charset"
              method: "defaultCharset"
              methodParameters: []
            valueType: "java.nio.charset.Charset"
            uuid: "resolveCharset_charset1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          pattern:
            sapientType: "BASIC"
            content: !<regular>
              value: "pattern1"
            valueType: "java.lang.String"
            uuid: "resolve_string8"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
      uuid: "consoleAppender_patternLayoutEncoder1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "consoleAppender_void8"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "CONSOLE"
      valueType: "java.lang.String"
      uuid: "uuid41"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.core.ConsoleAppender"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          encoder:
            sapientType: "OBJECT"
            content: !<new>
              target: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
              parameters: []
              privateConstructor: false
              createdByTargetCode: true
              propertiesMap:
                charset:
                  sapientType: "OBJECT"
                  content: !<static_method_return>
                    target: "java.nio.charset.Charset"
                    method: "defaultCharset"
                    methodParameters: []
                  valueType: "java.nio.charset.Charset"
                  uuid: "resolveCharset_charset1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                pattern:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pattern1"
                  valueType: "java.lang.String"
                  uuid: "resolve_string8"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
            uuid: "consoleAppender_patternLayoutEncoder1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "ch.qos.logback.core.ConsoleAppender"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "consoleAppender_consoleAppender1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "apply_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "INFO"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "apply_level1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "OBJECT"
            content: !<new>
              target: "ch.qos.logback.core.ConsoleAppender"
              parameters: []
              privateConstructor: false
              createdByTargetCode: true
              propertiesMap:
                encoder:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
                    parameters: []
                    privateConstructor: false
                    createdByTargetCode: true
                    propertiesMap:
                      charset:
                        sapientType: "OBJECT"
                        content: !<static_method_return>
                          target: "java.nio.charset.Charset"
                          method: "defaultCharset"
                          methodParameters: []
                        valueType: "java.nio.charset.Charset"
                        uuid: "resolveCharset_charset1"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      pattern:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: "pattern1"
                        valueType: "java.lang.String"
                        uuid: "resolve_string8"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                  valueType: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
                  uuid: "consoleAppender_patternLayoutEncoder1"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "ch.qos.logback.core.ConsoleAppender"
            genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
            uuid: "consoleAppender_consoleAppender1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "ch.qos.logback.core.Appender[]"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "apply_appender[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid42"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path4"
    testPathName: "applyWhenCaughtScanExceptionThrowsRuntimeException"
    constructorSignature: "<init>(org.springframework.boot.logging.LogFile) : void"
    modelFingerprint: "2DEA8604E856AB4ECD505C16FC24DED2"
    problemWasSolvedByProver: true
    catchBlockExercised:
      idExternalInstruction: 34
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F8C357C1CF81931F1031C40656D5672A"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "config"
      modelFingerprint: "C158457FD7DAB1DF8CB8FDB98EF98AD0"
      index: 2
      valueUuid: "apply_logbackConfigurator1"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "45E3B091082DF33B36D252D5C9F309F7"
      index: 3
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getConfigurationLock"
        parameters: []
        signature: "getConfigurationLock(): Object"
        returnValueUuid: "apply_object1"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "0D4F0FC1CDD381416EF565C7A48C62E4"
      index: 4
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "conversionRule"
        parameters:
        - name: "conversionWord"
          valueUuid: "uuid1"
        - name: "converterClass"
          valueUuid: "uuid2"
        signature: "conversionRule(String,Class): void"
        returnValueUuid: "defaults_void1"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "F427B77A47EDD4D5C40172432EB97D6B"
      index: 5
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "conversionRule"
        parameters:
        - name: "conversionWord"
          valueUuid: "uuid3"
        - name: "converterClass"
          valueUuid: "uuid4"
        signature: "conversionRule(String,Class): void"
        returnValueUuid: "defaults_void2"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "9950900ACFA2BE4A3325A49D8B07D341"
      index: 6
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "conversionRule"
        parameters:
        - name: "conversionWord"
          valueUuid: "uuid5"
        - name: "converterClass"
          valueUuid: "uuid6"
        signature: "conversionRule(String,Class): void"
        returnValueUuid: "defaults_void3"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "E51659B7A2FE1A6E5768D1CF5FFAF09D"
      index: 7
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "conversionRule"
        parameters:
        - name: "conversionWord"
          valueUuid: "uuid7"
        - name: "converterClass"
          valueUuid: "uuid8"
        signature: "conversionRule(String,Class): void"
        returnValueUuid: "defaults_void4"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 8
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "defaults_loggerContext1"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 9
      idsTryCatchBlockSurrounding:
      - 340001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext1"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "3558484683CDD0A12EBAFE128BD039DF"
      index: 10
      idsTryCatchBlockSurrounding:
      - 340001
      valueUuid: "uuid10"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid9"
        - name: "pc1"
          valueUuid: "resolve_loggerContext1"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B808406D3739B70FD31F9FC995511619"
      index: 11
      valueUuid: "resolve_runtimeException1"
    uuid: "f14fc3e4-6ad1-3e38-a03c-6da1885c4205"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.logback.DefaultLogbackConfiguration"
        parameters:
        - name: "logFile"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LogFile"
            uuid: "<init>_logFile1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.logback.DefaultLogbackConfiguration"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "apply_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "clr"
      valueType: "java.lang.String"
      uuid: "uuid1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.ColorConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uuid2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "correlationId"
      valueType: "java.lang.String"
      uuid: "uuid3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.CorrelationIdConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uuid4"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "wex"
      valueType: "java.lang.String"
      uuid: "uuid5"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uuid6"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void4"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "wEx"
      valueType: "java.lang.String"
      uuid: "uuid7"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uuid8"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid10"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      valueType: "ch.qos.logback.core.spi.ScanException"
      uuid: "resolve_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd'T'HH:mm:ss.SSSXXX}}){faint}\
          \ %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint}\
          \ %clr(${LOGGED_APPLICATION_NAME:-}[%15.15t]){faint} %clr(${LOG_CORRELATION_PATTERN:-}){faint}%clr(%-40.40logger{39}){cyan}\
          \ %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"
      valueType: "java.lang.String"
      uuid: "uuid9"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.RuntimeException"
        parameters:
        - name: "cause"
          value:
            sapientType: "EXCEPTION"
            valueType: "ch.qos.logback.core.spi.ScanException"
            uuid: "resolve_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.lang.RuntimeException"
      uuid: "resolve_runtimeException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path6"
    testPathName: "applyWhenCaughtScanException2ThrowsRuntimeException"
    constructorSignature: "<init>(org.springframework.boot.logging.LogFile) : void"
    modelFingerprint: "795CF8B8DE60BCD20A16DE23F63AA764"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 5
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F8C357C1CF81931F1031C40656D5672A"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "config"
      modelFingerprint: "C158457FD7DAB1DF8CB8FDB98EF98AD0"
      index: 2
      valueUuid: "apply_logbackConfigurator1"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "45E3B091082DF33B36D252D5C9F309F7"
      index: 3
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getConfigurationLock"
        parameters: []
        signature: "getConfigurationLock(): Object"
        returnValueUuid: "apply_object1"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "0D4F0FC1CDD381416EF565C7A48C62E4"
      index: 4
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "conversionRule"
        parameters:
        - name: "conversionWord"
          valueUuid: "uuid53"
        - name: "converterClass"
          valueUuid: "uuid54"
        signature: "conversionRule(String,Class): void"
        returnValueUuid: "defaults_void1"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "F427B77A47EDD4D5C40172432EB97D6B"
      index: 5
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "conversionRule"
        parameters:
        - name: "conversionWord"
          valueUuid: "uuid55"
        - name: "converterClass"
          valueUuid: "uuid56"
        signature: "conversionRule(String,Class): void"
        returnValueUuid: "defaults_void2"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "9950900ACFA2BE4A3325A49D8B07D341"
      index: 6
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "conversionRule"
        parameters:
        - name: "conversionWord"
          valueUuid: "uuid57"
        - name: "converterClass"
          valueUuid: "uuid58"
        signature: "conversionRule(String,Class): void"
        returnValueUuid: "defaults_void3"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "E51659B7A2FE1A6E5768D1CF5FFAF09D"
      index: 7
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "conversionRule"
        parameters:
        - name: "conversionWord"
          valueUuid: "uuid59"
        - name: "converterClass"
          valueUuid: "uuid60"
        signature: "conversionRule(String,Class): void"
        returnValueUuid: "defaults_void4"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4A35616081AB7F80AF462FC3B112459A"
      index: 8
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "defaults_loggerContext1"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 9
      idsTryCatchBlockSurrounding:
      - 340001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext1"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "FF22DAC545E66C307A5BC68C82779D87"
      index: 10
      idsTryCatchBlockSurrounding:
      - 340001
      valueUuid: "uuid62"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid61"
        - name: "pc1"
          valueUuid: "resolve_loggerContext1"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string1"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "084244F29A6C3EEE124EB2CE76CCA1D5"
      index: 11
      valueUuid: "defaults_loggerContext1"
      methodExercised:
        target: "ch.qos.logback.classic.LoggerContext"
        name: "putProperty"
        parameters:
        - name: "key"
          valueUuid: "uuid63"
        - name: "val"
          valueUuid: "resolve_string1"
        signature: "putProperty(String,String): void"
        returnValueUuid: "defaults_void5"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4A35616081AB7F80AF462FC3B112459A"
      index: 12
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "defaults_loggerContext2"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 13
      idsTryCatchBlockSurrounding:
      - 520001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext2"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "4938E11269384D6FAB0E399C59EED3AE"
      index: 14
      idsTryCatchBlockSurrounding:
      - 520001
      valueUuid: "uuid65"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid64"
        - name: "pc1"
          valueUuid: "resolve_loggerContext2"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string2"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "2D5C7DC02794FFE46C396DBCB9B28DD2"
      index: 15
      valueUuid: "defaults_loggerContext2"
      methodExercised:
        target: "ch.qos.logback.classic.LoggerContext"
        name: "putProperty"
        parameters:
        - name: "key"
          valueUuid: "uuid66"
        - name: "val"
          valueUuid: "resolve_string2"
        signature: "putProperty(String,String): void"
        returnValueUuid: "defaults_void6"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4A35616081AB7F80AF462FC3B112459A"
      index: 16
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "defaults_loggerContext3"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 17
      idsTryCatchBlockSurrounding:
      - 620001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext3"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "A5BEC749C014E2305E2F8205A11158E8"
      index: 18
      idsTryCatchBlockSurrounding:
      - 620001
      valueUuid: "uuid68"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid67"
        - name: "pc1"
          valueUuid: "resolve_loggerContext3"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string3"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "25EF47B5E525B6B89E30D7D01071B910"
      index: 19
      valueUuid: "defaults_loggerContext3"
      methodExercised:
        target: "ch.qos.logback.classic.LoggerContext"
        name: "putProperty"
        parameters:
        - name: "key"
          valueUuid: "uuid69"
        - name: "val"
          valueUuid: "resolve_string3"
        signature: "putProperty(String,String): void"
        returnValueUuid: "defaults_void7"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4A35616081AB7F80AF462FC3B112459A"
      index: 20
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "defaults_loggerContext4"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 21
      idsTryCatchBlockSurrounding:
      - 740001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext4"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "D4E059A59A9CC5FCB02BFBFAD818774C"
      index: 22
      idsTryCatchBlockSurrounding:
      - 740001
      valueUuid: "uuid71"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid70"
        - name: "pc1"
          valueUuid: "resolve_loggerContext4"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string4"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E29F485322B06502FF4F0E757AF34782"
      index: 23
      valueUuid: "defaults_loggerContext4"
      methodExercised:
        target: "ch.qos.logback.classic.LoggerContext"
        name: "putProperty"
        parameters:
        - name: "key"
          valueUuid: "uuid72"
        - name: "val"
          valueUuid: "resolve_string4"
        signature: "putProperty(String,String): void"
        returnValueUuid: "defaults_void8"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4A35616081AB7F80AF462FC3B112459A"
      index: 24
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "defaults_loggerContext5"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 25
      idsTryCatchBlockSurrounding:
      - 870001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext5"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "CF498DF647BB28EFEB220F217BE2A3A8"
      index: 26
      idsTryCatchBlockSurrounding:
      - 870001
      valueUuid: "uuid74"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid73"
        - name: "pc1"
          valueUuid: "resolve_loggerContext5"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string5"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A9EAB56CF3E6314D42C6AA0118323105"
      index: 27
      valueUuid: "defaults_loggerContext5"
      methodExercised:
        target: "ch.qos.logback.classic.LoggerContext"
        name: "putProperty"
        parameters:
        - name: "key"
          valueUuid: "uuid75"
        - name: "val"
          valueUuid: "resolve_string5"
        signature: "putProperty(String,String): void"
        returnValueUuid: "defaults_void9"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4A35616081AB7F80AF462FC3B112459A"
      index: 28
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "defaults_loggerContext6"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 29
      idsTryCatchBlockSurrounding:
      - 970001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext6"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "A23F01A3B1A7A87999C46667337C28E4"
      index: 30
      idsTryCatchBlockSurrounding:
      - 970001
      valueUuid: "uuid77"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid76"
        - name: "pc1"
          valueUuid: "resolve_loggerContext6"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string6"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "BA6062C918FD82EABD0F4C26D74288F0"
      index: 31
      valueUuid: "defaults_loggerContext6"
      methodExercised:
        target: "ch.qos.logback.classic.LoggerContext"
        name: "putProperty"
        parameters:
        - name: "key"
          valueUuid: "uuid78"
        - name: "val"
          valueUuid: "resolve_string6"
        signature: "putProperty(String,String): void"
        returnValueUuid: "defaults_void10"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "D2BC1C55758DD71AD08579EAD8FD083A"
      index: 32
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid79"
        - name: "level"
          valueUuid: "defaults_level1"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void11"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2AF34D185CFA4F1056ED0964F0720DF5"
      index: 33
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid80"
        - name: "level"
          valueUuid: "defaults_level1"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void12"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "D2BCECF630BE06922B3869FC5C4EB0C5"
      index: 34
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid81"
        - name: "level"
          valueUuid: "defaults_level2"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void13"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2225B7711737C9D2BE640C6763575B17"
      index: 35
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid82"
        - name: "level"
          valueUuid: "defaults_level2"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void14"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "054406675D6DD77CC515CC72CD0956CE"
      index: 36
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid83"
        - name: "level"
          valueUuid: "defaults_level2"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void15"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "F42D14F86FBC8AEAC8A25D2E9B709A08"
      index: 37
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid84"
        - name: "level"
          valueUuid: "defaults_level1"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void16"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "F18FE8F64D61A2F870D5DB75217F23AF"
      index: 38
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid85"
        - name: "level"
          valueUuid: "defaults_level2"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void17"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "06A6C87D8418936218F06494D3C9F1D6"
      index: 39
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid86"
        - name: "level"
          valueUuid: "defaults_level2"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void18"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 40
      idsTryCatchBlockSurrounding:
      - 180001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext7"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "C9EA97FCC614B1341A34730A439B2FCB"
      index: 41
      idsTryCatchBlockSurrounding:
      - 180001
      valueUuid: "uuid88"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid87"
        - name: "pc1"
          valueUuid: "resolve_loggerContext7"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string7"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "filter"
      modelFingerprint: "BA14BF6DB1A15DD5D96598EAA24DF66D"
      index: 42
      valueUuid: "consoleAppender_thresholdFilter1"
      methodExercised:
        target: "filter"
        name: "setLevel"
        parameters:
        - name: "level"
          valueUuid: "resolve_string7"
        signature: "setLevel(String): void"
        returnValueUuid: "consoleAppender_void1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "filter"
      modelFingerprint: "129423D5E0EE8B1D914E3AB0AA3541DA"
      index: 43
      valueUuid: "consoleAppender_thresholdFilter1"
      methodExercised:
        target: "filter"
        name: "start"
        parameters: []
        signature: "start(): void"
        returnValueUuid: "consoleAppender_void2"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "appender"
      modelFingerprint: "909A8FDE1008BEB38862B62D77D95A49"
      index: 44
      valueUuid: "consoleAppender_consoleAppender1"
      methodExercised:
        target: "appender"
        name: "addFilter"
        parameters:
        - name: "newFilter"
          valueUuid: "consoleAppender_thresholdFilter1"
        signature: "addFilter(ThresholdFilter): void"
        returnValueUuid: "consoleAppender_void3"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 45
      idsTryCatchBlockSurrounding:
      - 410001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext8"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "4ED2DEBDCF100D6DB4BD3D0F7DE79CCA"
      index: 46
      idsTryCatchBlockSurrounding:
      - 410001
      valueUuid: "uuid90"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid89"
        - name: "pc1"
          valueUuid: "resolve_loggerContext8"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string8"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 47
      idsTryCatchBlockSurrounding:
      - 50001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext9"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "ABBAFC739C22E6C0891CB3F87053C82B"
      index: 48
      idsTryCatchBlockSurrounding:
      - 50001
      valueUuid: "uuid92"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid91"
        - name: "pc1"
          valueUuid: "resolve_loggerContext9"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string9"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2B29AA80E79EED6D25879306FFC6D12D"
      index: 49
      valueUuid: "resolve_runtimeException1"
    uuid: "10f024c7-1fcd-39e1-a198-fce3220f4171"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "appender.addFilter(filter);"
      lineNumber: 108
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: appender - Method: addFilter"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.logback.DefaultLogbackConfiguration"
        parameters:
        - name: "logFile"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LogFile"
            uuid: "<init>_logFile1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.logback.DefaultLogbackConfiguration"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "apply_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "clr"
      valueType: "java.lang.String"
      uuid: "uuid53"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.ColorConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uuid54"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "correlationId"
      valueType: "java.lang.String"
      uuid: "uuid55"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.CorrelationIdConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uuid56"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "wex"
      valueType: "java.lang.String"
      uuid: "uuid57"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uuid58"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void4"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "wEx"
      valueType: "java.lang.String"
      uuid: "uuid59"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uuid60"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid62"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd'T'HH:mm:ss.SSSXXX}}){faint}\
          \ %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint}\
          \ %clr(${LOGGED_APPLICATION_NAME:-}[%15.15t]){faint} %clr(${LOG_CORRELATION_PATTERN:-}){faint}%clr(%-40.40logger{39}){cyan}\
          \ %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"
      valueType: "java.lang.String"
      uuid: "uuid61"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void5"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "CONSOLE_LOG_PATTERN"
      valueType: "java.lang.String"
      uuid: "uuid63"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid65"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_CHARSET:-UTF-8}"
      valueType: "java.lang.String"
      uuid: "uuid64"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void6"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "CONSOLE_LOG_CHARSET"
      valueType: "java.lang.String"
      uuid: "uuid66"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid68"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_THRESHOLD:-TRACE}"
      valueType: "java.lang.String"
      uuid: "uuid67"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void7"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "CONSOLE_LOG_THRESHOLD"
      valueType: "java.lang.String"
      uuid: "uuid69"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid71"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_PATTERN:-%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd'T'HH:mm:ss.SSSXXX}}\
          \ ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- ${LOGGED_APPLICATION_NAME:-}[%t]\
          \ ${LOG_CORRELATION_PATTERN:-}%-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"
      valueType: "java.lang.String"
      uuid: "uuid70"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void8"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "FILE_LOG_PATTERN"
      valueType: "java.lang.String"
      uuid: "uuid72"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid74"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_CHARSET:-UTF-8}"
      valueType: "java.lang.String"
      uuid: "uuid73"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void9"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "FILE_LOG_CHARSET"
      valueType: "java.lang.String"
      uuid: "uuid75"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid77"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_THRESHOLD:-TRACE}"
      valueType: "java.lang.String"
      uuid: "uuid76"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void10"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "FILE_LOG_THRESHOLD"
      valueType: "java.lang.String"
      uuid: "uuid78"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void11"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.catalina.startup.DigesterFactory"
      valueType: "java.lang.String"
      uuid: "uuid79"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "ERROR"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void12"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.catalina.util.LifecycleBase"
      valueType: "java.lang.String"
      uuid: "uuid80"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "ERROR"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void13"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.coyote.http11.Http11NioProtocol"
      valueType: "java.lang.String"
      uuid: "uuid81"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void14"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.sshd.common.util.SecurityUtils"
      valueType: "java.lang.String"
      uuid: "uuid82"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void15"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.tomcat.util.net.NioSelectorPool"
      valueType: "java.lang.String"
      uuid: "uuid83"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void16"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.eclipse.jetty.util.component.AbstractLifeCycle"
      valueType: "java.lang.String"
      uuid: "uuid84"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "ERROR"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void17"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.hibernate.validator.internal.util.Version"
      valueType: "java.lang.String"
      uuid: "uuid85"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void18"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.actuate.endpoint.jmx"
      valueType: "java.lang.String"
      uuid: "uuid86"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext7"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid88"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "resolve_string7"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_THRESHOLD}"
      valueType: "java.lang.String"
      uuid: "uuid87"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext7"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.classic.filter.ThresholdFilter"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "consoleAppender_thresholdFilter1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "consoleAppender_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "resolve_string7"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.classic.filter.ThresholdFilter"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "consoleAppender_thresholdFilter1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "consoleAppender_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.core.ConsoleAppender"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "ch.qos.logback.core.ConsoleAppender"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "consoleAppender_consoleAppender1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "consoleAppender_void3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.classic.filter.ThresholdFilter"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "consoleAppender_thresholdFilter1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext8"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid90"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string8"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_PATTERN}"
      valueType: "java.lang.String"
      uuid: "uuid89"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext8"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext9"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid92"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string9"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_CHARSET}"
      valueType: "java.lang.String"
      uuid: "uuid91"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext9"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.RuntimeException"
        parameters:
        - name: "cause"
          value:
            sapientType: "MOCK"
            valueType: "ch.qos.logback.core.spi.ScanException"
            uuid: "resolve_scanException1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.lang.RuntimeException"
      uuid: "resolve_runtimeException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path1"
    testPathName: "applyWhenBooleanParseBooleanResolveConfigVal"
    constructorSignature: "<init>(org.springframework.boot.logging.LogFile) : void"
    modelFingerprint: "1A5D1ABEF7F9E39CEDE42C734AA41B2E"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "1049010D9A0A28211CBD5C9DD1977F62"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "config"
      modelFingerprint: "C158457FD7DAB1DF8CB8FDB98EF98AD0"
      index: 2
      valueUuid: "apply_logbackConfigurator1"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "45E3B091082DF33B36D252D5C9F309F7"
      index: 3
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getConfigurationLock"
        parameters: []
        signature: "getConfigurationLock(): Object"
        returnValueUuid: "apply_object1"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "0D4F0FC1CDD381416EF565C7A48C62E4"
      index: 4
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "conversionRule"
        parameters:
        - name: "conversionWord"
          valueUuid: "uuid93"
        - name: "converterClass"
          valueUuid: "uuid94"
        signature: "conversionRule(String,Class): void"
        returnValueUuid: "defaults_void1"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "F427B77A47EDD4D5C40172432EB97D6B"
      index: 5
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "conversionRule"
        parameters:
        - name: "conversionWord"
          valueUuid: "uuid95"
        - name: "converterClass"
          valueUuid: "uuid96"
        signature: "conversionRule(String,Class): void"
        returnValueUuid: "defaults_void2"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "9950900ACFA2BE4A3325A49D8B07D341"
      index: 6
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "conversionRule"
        parameters:
        - name: "conversionWord"
          valueUuid: "uuid97"
        - name: "converterClass"
          valueUuid: "uuid98"
        signature: "conversionRule(String,Class): void"
        returnValueUuid: "defaults_void3"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "E51659B7A2FE1A6E5768D1CF5FFAF09D"
      index: 7
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "conversionRule"
        parameters:
        - name: "conversionWord"
          valueUuid: "uuid99"
        - name: "converterClass"
          valueUuid: "uuid100"
        signature: "conversionRule(String,Class): void"
        returnValueUuid: "defaults_void4"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4A35616081AB7F80AF462FC3B112459A"
      index: 8
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "defaults_loggerContext1"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 9
      idsTryCatchBlockSurrounding:
      - 340001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext1"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "FF22DAC545E66C307A5BC68C82779D87"
      index: 10
      idsTryCatchBlockSurrounding:
      - 340001
      valueUuid: "uuid102"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid101"
        - name: "pc1"
          valueUuid: "resolve_loggerContext1"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string1"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "084244F29A6C3EEE124EB2CE76CCA1D5"
      index: 11
      valueUuid: "defaults_loggerContext1"
      methodExercised:
        target: "ch.qos.logback.classic.LoggerContext"
        name: "putProperty"
        parameters:
        - name: "key"
          valueUuid: "uuid103"
        - name: "val"
          valueUuid: "resolve_string1"
        signature: "putProperty(String,String): void"
        returnValueUuid: "defaults_void5"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4A35616081AB7F80AF462FC3B112459A"
      index: 12
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "defaults_loggerContext2"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 13
      idsTryCatchBlockSurrounding:
      - 520001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext2"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "4938E11269384D6FAB0E399C59EED3AE"
      index: 14
      idsTryCatchBlockSurrounding:
      - 520001
      valueUuid: "uuid105"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid104"
        - name: "pc1"
          valueUuid: "resolve_loggerContext2"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string2"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "2D5C7DC02794FFE46C396DBCB9B28DD2"
      index: 15
      valueUuid: "defaults_loggerContext2"
      methodExercised:
        target: "ch.qos.logback.classic.LoggerContext"
        name: "putProperty"
        parameters:
        - name: "key"
          valueUuid: "uuid106"
        - name: "val"
          valueUuid: "resolve_string2"
        signature: "putProperty(String,String): void"
        returnValueUuid: "defaults_void6"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4A35616081AB7F80AF462FC3B112459A"
      index: 16
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "defaults_loggerContext3"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 17
      idsTryCatchBlockSurrounding:
      - 620001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext3"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "A5BEC749C014E2305E2F8205A11158E8"
      index: 18
      idsTryCatchBlockSurrounding:
      - 620001
      valueUuid: "uuid108"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid107"
        - name: "pc1"
          valueUuid: "resolve_loggerContext3"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string3"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "25EF47B5E525B6B89E30D7D01071B910"
      index: 19
      valueUuid: "defaults_loggerContext3"
      methodExercised:
        target: "ch.qos.logback.classic.LoggerContext"
        name: "putProperty"
        parameters:
        - name: "key"
          valueUuid: "uuid109"
        - name: "val"
          valueUuid: "resolve_string3"
        signature: "putProperty(String,String): void"
        returnValueUuid: "defaults_void7"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4A35616081AB7F80AF462FC3B112459A"
      index: 20
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "defaults_loggerContext4"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 21
      idsTryCatchBlockSurrounding:
      - 740001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext4"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "D4E059A59A9CC5FCB02BFBFAD818774C"
      index: 22
      idsTryCatchBlockSurrounding:
      - 740001
      valueUuid: "uuid111"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid110"
        - name: "pc1"
          valueUuid: "resolve_loggerContext4"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string4"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E29F485322B06502FF4F0E757AF34782"
      index: 23
      valueUuid: "defaults_loggerContext4"
      methodExercised:
        target: "ch.qos.logback.classic.LoggerContext"
        name: "putProperty"
        parameters:
        - name: "key"
          valueUuid: "uuid112"
        - name: "val"
          valueUuid: "resolve_string4"
        signature: "putProperty(String,String): void"
        returnValueUuid: "defaults_void8"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4A35616081AB7F80AF462FC3B112459A"
      index: 24
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "defaults_loggerContext5"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 25
      idsTryCatchBlockSurrounding:
      - 870001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext5"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "CF498DF647BB28EFEB220F217BE2A3A8"
      index: 26
      idsTryCatchBlockSurrounding:
      - 870001
      valueUuid: "uuid114"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid113"
        - name: "pc1"
          valueUuid: "resolve_loggerContext5"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string5"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A9EAB56CF3E6314D42C6AA0118323105"
      index: 27
      valueUuid: "defaults_loggerContext5"
      methodExercised:
        target: "ch.qos.logback.classic.LoggerContext"
        name: "putProperty"
        parameters:
        - name: "key"
          valueUuid: "uuid115"
        - name: "val"
          valueUuid: "resolve_string5"
        signature: "putProperty(String,String): void"
        returnValueUuid: "defaults_void9"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4A35616081AB7F80AF462FC3B112459A"
      index: 28
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "defaults_loggerContext6"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 29
      idsTryCatchBlockSurrounding:
      - 970001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext6"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "A23F01A3B1A7A87999C46667337C28E4"
      index: 30
      idsTryCatchBlockSurrounding:
      - 970001
      valueUuid: "uuid117"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid116"
        - name: "pc1"
          valueUuid: "resolve_loggerContext6"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string6"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "BA6062C918FD82EABD0F4C26D74288F0"
      index: 31
      valueUuid: "defaults_loggerContext6"
      methodExercised:
        target: "ch.qos.logback.classic.LoggerContext"
        name: "putProperty"
        parameters:
        - name: "key"
          valueUuid: "uuid118"
        - name: "val"
          valueUuid: "resolve_string6"
        signature: "putProperty(String,String): void"
        returnValueUuid: "defaults_void10"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "D2BC1C55758DD71AD08579EAD8FD083A"
      index: 32
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid119"
        - name: "level"
          valueUuid: "defaults_level1"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void11"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2AF34D185CFA4F1056ED0964F0720DF5"
      index: 33
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid120"
        - name: "level"
          valueUuid: "defaults_level1"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void12"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "D2BCECF630BE06922B3869FC5C4EB0C5"
      index: 34
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid121"
        - name: "level"
          valueUuid: "defaults_level2"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void13"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2225B7711737C9D2BE640C6763575B17"
      index: 35
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid122"
        - name: "level"
          valueUuid: "defaults_level2"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void14"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "054406675D6DD77CC515CC72CD0956CE"
      index: 36
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid123"
        - name: "level"
          valueUuid: "defaults_level2"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void15"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "F42D14F86FBC8AEAC8A25D2E9B709A08"
      index: 37
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid124"
        - name: "level"
          valueUuid: "defaults_level1"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void16"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "F18FE8F64D61A2F870D5DB75217F23AF"
      index: 38
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid125"
        - name: "level"
          valueUuid: "defaults_level2"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void17"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "06A6C87D8418936218F06494D3C9F1D6"
      index: 39
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid126"
        - name: "level"
          valueUuid: "defaults_level2"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void18"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 40
      idsTryCatchBlockSurrounding:
      - 180001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext7"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "96B1B53515FE50B7B919FD16351228E1"
      index: 41
      idsTryCatchBlockSurrounding:
      - 180001
      valueUuid: "uuid128"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid127"
        - name: "pc1"
          valueUuid: "resolve_loggerContext7"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string7"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "filter"
      modelFingerprint: "88CA537E4E952402012A62AA557C5570"
      index: 42
      valueUuid: "consoleAppender_thresholdFilter1"
      methodExercised:
        target: "filter"
        name: "setLevel"
        parameters:
        - name: "level"
          valueUuid: "resolve_string7"
        signature: "setLevel(String): void"
        returnValueUuid: "consoleAppender_void1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "filter"
      modelFingerprint: "129423D5E0EE8B1D914E3AB0AA3541DA"
      index: 43
      valueUuid: "consoleAppender_thresholdFilter1"
      methodExercised:
        target: "filter"
        name: "start"
        parameters: []
        signature: "start(): void"
        returnValueUuid: "consoleAppender_void2"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "appender"
      modelFingerprint: "909A8FDE1008BEB38862B62D77D95A49"
      index: 44
      valueUuid: "consoleAppender_consoleAppender1"
      methodExercised:
        target: "appender"
        name: "addFilter"
        parameters:
        - name: "newFilter"
          valueUuid: "consoleAppender_thresholdFilter1"
        signature: "addFilter(ThresholdFilter): void"
        returnValueUuid: "consoleAppender_void3"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 45
      idsTryCatchBlockSurrounding:
      - 410001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext8"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "4ED2DEBDCF100D6DB4BD3D0F7DE79CCA"
      index: 46
      idsTryCatchBlockSurrounding:
      - 410001
      valueUuid: "uuid130"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid129"
        - name: "pc1"
          valueUuid: "resolve_loggerContext8"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string8"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 47
      idsTryCatchBlockSurrounding:
      - 50001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext9"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "ABBAFC739C22E6C0891CB3F87053C82B"
      index: 48
      idsTryCatchBlockSurrounding:
      - 50001
      valueUuid: "uuid132"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid131"
        - name: "pc1"
          valueUuid: "resolve_loggerContext9"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string9"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "D736DBD86C3C3158665CFD7D4D103A15"
      index: 49
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "start"
        parameters:
        - name: "lifeCycle"
          valueUuid: "consoleAppender_patternLayoutEncoder1"
        signature: "start(PatternLayoutEncoder): void"
        returnValueUuid: "consoleAppender_void6"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2F4E75BFF8E2F2A00C1657D872BD5477"
      index: 50
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "appender"
        parameters:
        - name: "name"
          valueUuid: "uuid133"
        - name: "appender"
          valueUuid: "consoleAppender_consoleAppender1"
        signature: "appender(String,ConsoleAppender): void"
        returnValueUuid: "consoleAppender_void8"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 51
      idsTryCatchBlockSurrounding:
      - 180001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext10"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "9918242A7CEBCCF4C212FBA66B043AC5"
      index: 52
      idsTryCatchBlockSurrounding:
      - 180001
      valueUuid: "uuid135"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid134"
        - name: "pc1"
          valueUuid: "resolve_loggerContext10"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string10"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "filter"
      modelFingerprint: "88CA537E4E952402012A62AA557C5570"
      index: 53
      valueUuid: "fileAppender_thresholdFilter1"
      methodExercised:
        target: "filter"
        name: "setLevel"
        parameters:
        - name: "level"
          valueUuid: "resolve_string10"
        signature: "setLevel(String): void"
        returnValueUuid: "fileAppender_void1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "filter"
      modelFingerprint: "129423D5E0EE8B1D914E3AB0AA3541DA"
      index: 54
      valueUuid: "fileAppender_thresholdFilter1"
      methodExercised:
        target: "filter"
        name: "start"
        parameters: []
        signature: "start(): void"
        returnValueUuid: "fileAppender_void2"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "appender"
      modelFingerprint: "BD0EAD4F1B79C1D332ABFDAA8DE16012"
      index: 55
      valueUuid: "fileAppender_rollingFileAppender1"
      methodExercised:
        target: "appender"
        name: "addFilter"
        parameters:
        - name: "newFilter"
          valueUuid: "fileAppender_thresholdFilter1"
        signature: "addFilter(ThresholdFilter): void"
        returnValueUuid: "fileAppender_void3"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 56
      idsTryCatchBlockSurrounding:
      - 410001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext11"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "A12AB01EB49D89972269975EACD722D4"
      index: 57
      idsTryCatchBlockSurrounding:
      - 410001
      valueUuid: "uuid137"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid136"
        - name: "pc1"
          valueUuid: "resolve_loggerContext11"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string11"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 58
      idsTryCatchBlockSurrounding:
      - 50001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext12"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "A86E0FF70D10B095F9D620E87DA63D93"
      index: 59
      idsTryCatchBlockSurrounding:
      - 50001
      valueUuid: "uuid139"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid138"
        - name: "pc1"
          valueUuid: "resolve_loggerContext12"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string12"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "D736DBD86C3C3158665CFD7D4D103A15"
      index: 60
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "start"
        parameters:
        - name: "lifeCycle"
          valueUuid: "fileAppender_patternLayoutEncoder1"
        signature: "start(PatternLayoutEncoder): void"
        returnValueUuid: "fileAppender_void7"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "appender"
      modelFingerprint: "EECFA61B7E3F1B2850D5A70A71532FF2"
      index: 61
      valueUuid: "fileAppender_rollingFileAppender1"
      methodExercised:
        target: "appender"
        name: "setFile"
        parameters:
        - name: "file"
          valueUuid: "apply_string1"
        signature: "setFile(String): void"
        returnValueUuid: "fileAppender_void8"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 62
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "setRollingPolicy_loggerContext1"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 63
      idsTryCatchBlockSurrounding:
      - 200001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext13"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "9A8C8F1E90AC575E70FBF6B13898D5B9"
      index: 64
      idsTryCatchBlockSurrounding:
      - 200001
      valueUuid: "uuid141"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid140"
        - name: "pc1"
          valueUuid: "resolve_loggerContext13"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string13"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "rollingPolicy"
      modelFingerprint: "9D56A866ED70E9B1C3A68B21F535E63F"
      index: 65
      valueUuid: "setRollingPolicy_sizeAndTimeBasedRollingPolicy1"
      methodExercised:
        target: "rollingPolicy"
        name: "setFileNamePattern"
        parameters:
        - name: "fnp"
          valueUuid: "resolve_string13"
        signature: "setFileNamePattern(String): void"
        returnValueUuid: "setRollingPolicy_void2"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 66
      idsTryCatchBlockSurrounding:
      - 50001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext14"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "A79D016ABA3C06E990AE6517A067DA00"
      index: 67
      idsTryCatchBlockSurrounding:
      - 50001
      valueUuid: "uuid143"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid142"
        - name: "pc1"
          valueUuid: "resolve_loggerContext14"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string14"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 68
      idsTryCatchBlockSurrounding:
      - 50001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext15"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "F6B85F59928320BAA308EE220CA1DDEB"
      index: 69
      idsTryCatchBlockSurrounding:
      - 50001
      valueUuid: "uuid145"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid144"
        - name: "pc1"
          valueUuid: "resolve_loggerContext15"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string15"
        access: 9
    - type: "STATIC"
      name: "FileSize"
      modelFingerprint: "5B1E09F3553D36AC1A76C0A454949648"
      index: 70
      valueUuid: "uuid146"
      methodExercised:
        target: "ch.qos.logback.core.util.FileSize"
        name: "valueOf"
        parameters:
        - name: "coefficient"
          valueUuid: "resolve_string15"
        signature: "valueOf(String): FileSize"
        returnValueUuid: "resolveFileSize_fileSize1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 71
      idsTryCatchBlockSurrounding:
      - 50001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext16"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "1C8A0DFF9FC6000A939059BCBBAF4A4C"
      index: 72
      idsTryCatchBlockSurrounding:
      - 50001
      valueUuid: "uuid148"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid147"
        - name: "pc1"
          valueUuid: "resolve_loggerContext16"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string16"
        access: 9
    - type: "STATIC"
      name: "FileSize"
      modelFingerprint: "5B1E09F3553D36AC1A76C0A454949648"
      index: 73
      valueUuid: "uuid149"
      methodExercised:
        target: "ch.qos.logback.core.util.FileSize"
        name: "valueOf"
        parameters:
        - name: "coefficient"
          valueUuid: "resolve_string16"
        signature: "valueOf(String): FileSize"
        returnValueUuid: "resolveFileSize_fileSize2"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 74
      idsTryCatchBlockSurrounding:
      - 50001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext17"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "5CC141037BFD38A4B0DEEF9C8C9499E5"
      index: 75
      idsTryCatchBlockSurrounding:
      - 50001
      valueUuid: "uuid151"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid150"
        - name: "pc1"
          valueUuid: "resolve_loggerContext17"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string17"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "rollingPolicy"
      modelFingerprint: "7F0BE3B30FA2E5B1210740E4EB50E392"
      index: 76
      valueUuid: "setRollingPolicy_sizeAndTimeBasedRollingPolicy1"
      methodExercised:
        target: "rollingPolicy"
        name: "setParent"
        parameters:
        - name: "appender"
          valueUuid: "fileAppender_rollingFileAppender1"
        signature: "setParent(RollingFileAppender): void"
        returnValueUuid: "setRollingPolicy_void8"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "FA0581E9F0250C3F3B60F7628CADB8E9"
      index: 77
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "start"
        parameters:
        - name: "lifeCycle"
          valueUuid: "setRollingPolicy_sizeAndTimeBasedRollingPolicy1"
        signature: "start(SizeAndTimeBasedRollingPolicy): void"
        returnValueUuid: "setRollingPolicy_void9"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "EAF8349736C42ACA787CB461E3FB793C"
      index: 78
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "appender"
        parameters:
        - name: "name"
          valueUuid: "uuid152"
        - name: "appender"
          valueUuid: "fileAppender_rollingFileAppender1"
        signature: "appender(String,RollingFileAppender): void"
        returnValueUuid: "fileAppender_void9"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2C3F0E8EEFCD5E9CA05493A8D5B1444E"
      index: 79
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "root"
        parameters:
        - name: "level"
          valueUuid: "apply_level1"
        - name: "appenders"
          valueUuid: "apply_appender[]1"
        signature: "root(Level,Appender[]): void"
        returnValueUuid: "apply_void1"
        access: 144
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 80
      valueUuid: "uuid153"
    uuid: "83171729-b395-34f2-83d0-db6dda33a03d"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "appender.addFilter(filter);"
      lineNumber: 108
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: appender - Method: addFilter"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.logback.DefaultLogbackConfiguration"
        parameters:
        - name: "logFile"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LogFile"
            uuid: "<init>_logFile1"
            fixed: false
            nameForMock: "<init>_logFile1"
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.logback.DefaultLogbackConfiguration"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "apply_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "clr"
      valueType: "java.lang.String"
      uuid: "uuid93"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.ColorConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uuid94"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "correlationId"
      valueType: "java.lang.String"
      uuid: "uuid95"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.CorrelationIdConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uuid96"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "wex"
      valueType: "java.lang.String"
      uuid: "uuid97"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uuid98"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void4"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "wEx"
      valueType: "java.lang.String"
      uuid: "uuid99"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uuid100"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid102"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd'T'HH:mm:ss.SSSXXX}}){faint}\
          \ %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint}\
          \ %clr(${LOGGED_APPLICATION_NAME:-}[%15.15t]){faint} %clr(${LOG_CORRELATION_PATTERN:-}){faint}%clr(%-40.40logger{39}){cyan}\
          \ %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"
      valueType: "java.lang.String"
      uuid: "uuid101"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void5"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "CONSOLE_LOG_PATTERN"
      valueType: "java.lang.String"
      uuid: "uuid103"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid105"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_CHARSET:-UTF-8}"
      valueType: "java.lang.String"
      uuid: "uuid104"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void6"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "CONSOLE_LOG_CHARSET"
      valueType: "java.lang.String"
      uuid: "uuid106"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid108"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_THRESHOLD:-TRACE}"
      valueType: "java.lang.String"
      uuid: "uuid107"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void7"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "CONSOLE_LOG_THRESHOLD"
      valueType: "java.lang.String"
      uuid: "uuid109"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid111"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_PATTERN:-%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd'T'HH:mm:ss.SSSXXX}}\
          \ ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- ${LOGGED_APPLICATION_NAME:-}[%t]\
          \ ${LOG_CORRELATION_PATTERN:-}%-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"
      valueType: "java.lang.String"
      uuid: "uuid110"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void8"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "FILE_LOG_PATTERN"
      valueType: "java.lang.String"
      uuid: "uuid112"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid114"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_CHARSET:-UTF-8}"
      valueType: "java.lang.String"
      uuid: "uuid113"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void9"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "FILE_LOG_CHARSET"
      valueType: "java.lang.String"
      uuid: "uuid115"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid117"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_THRESHOLD:-TRACE}"
      valueType: "java.lang.String"
      uuid: "uuid116"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void10"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "FILE_LOG_THRESHOLD"
      valueType: "java.lang.String"
      uuid: "uuid118"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void11"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.catalina.startup.DigesterFactory"
      valueType: "java.lang.String"
      uuid: "uuid119"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "ERROR"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void12"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.catalina.util.LifecycleBase"
      valueType: "java.lang.String"
      uuid: "uuid120"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "ERROR"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void13"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.coyote.http11.Http11NioProtocol"
      valueType: "java.lang.String"
      uuid: "uuid121"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void14"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.sshd.common.util.SecurityUtils"
      valueType: "java.lang.String"
      uuid: "uuid122"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void15"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.tomcat.util.net.NioSelectorPool"
      valueType: "java.lang.String"
      uuid: "uuid123"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void16"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.eclipse.jetty.util.component.AbstractLifeCycle"
      valueType: "java.lang.String"
      uuid: "uuid124"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "ERROR"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void17"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.hibernate.validator.internal.util.Version"
      valueType: "java.lang.String"
      uuid: "uuid125"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void18"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.actuate.endpoint.jmx"
      valueType: "java.lang.String"
      uuid: "uuid126"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext7"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid128"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string7"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_THRESHOLD}"
      valueType: "java.lang.String"
      uuid: "uuid127"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext7"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.classic.filter.ThresholdFilter"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "consoleAppender_thresholdFilter1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "consoleAppender_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string7"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.classic.filter.ThresholdFilter"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "consoleAppender_thresholdFilter1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "consoleAppender_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.core.ConsoleAppender"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          encoder:
            sapientType: "OBJECT"
            content: !<new>
              target: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
              parameters: []
              privateConstructor: false
              createdByTargetCode: true
              propertiesMap:
                charset:
                  sapientType: "OBJECT"
                  content: !<static_method_return>
                    target: "java.nio.charset.Charset"
                    method: "defaultCharset"
                    methodParameters: []
                  valueType: "java.nio.charset.Charset"
                  uuid: "resolveCharset_charset1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                pattern:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pattern1"
                  valueType: "java.lang.String"
                  uuid: "resolve_string8"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
            uuid: "consoleAppender_patternLayoutEncoder1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "ch.qos.logback.core.ConsoleAppender"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "consoleAppender_consoleAppender1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "consoleAppender_void3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.classic.filter.ThresholdFilter"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "consoleAppender_thresholdFilter1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext8"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid130"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "pattern1"
      valueType: "java.lang.String"
      uuid: "resolve_string8"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_PATTERN}"
      valueType: "java.lang.String"
      uuid: "uuid129"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext8"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext9"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid132"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string9"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_CHARSET}"
      valueType: "java.lang.String"
      uuid: "uuid131"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext9"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "consoleAppender_void6"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          charset:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.nio.charset.Charset"
              method: "defaultCharset"
              methodParameters: []
            valueType: "java.nio.charset.Charset"
            uuid: "resolveCharset_charset1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          pattern:
            sapientType: "BASIC"
            content: !<regular>
              value: "pattern1"
            valueType: "java.lang.String"
            uuid: "resolve_string8"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
      uuid: "consoleAppender_patternLayoutEncoder1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "consoleAppender_void8"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "CONSOLE"
      valueType: "java.lang.String"
      uuid: "uuid133"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.core.ConsoleAppender"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          encoder:
            sapientType: "OBJECT"
            content: !<new>
              target: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
              parameters: []
              privateConstructor: false
              createdByTargetCode: true
              propertiesMap:
                charset:
                  sapientType: "OBJECT"
                  content: !<static_method_return>
                    target: "java.nio.charset.Charset"
                    method: "defaultCharset"
                    methodParameters: []
                  valueType: "java.nio.charset.Charset"
                  uuid: "resolveCharset_charset1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                pattern:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pattern1"
                  valueType: "java.lang.String"
                  uuid: "resolve_string8"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
            uuid: "consoleAppender_patternLayoutEncoder1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "ch.qos.logback.core.ConsoleAppender"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "consoleAppender_consoleAppender1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext10"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid135"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string10"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_THRESHOLD}"
      valueType: "java.lang.String"
      uuid: "uuid134"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext10"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.classic.filter.ThresholdFilter"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "fileAppender_thresholdFilter1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "fileAppender_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string10"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.classic.filter.ThresholdFilter"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "fileAppender_thresholdFilter1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "fileAppender_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.core.rolling.RollingFileAppender"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          rollingPolicy:
            sapientType: "OBJECT"
            content: !<new>
              target: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
              parameters: []
              privateConstructor: false
              createdByTargetCode: true
              propertiesMap:
                context:
                  sapientType: "MOCK"
                  valueType: "ch.qos.logback.classic.LoggerContext"
                  uuid: "setRollingPolicy_loggerContext1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                maxHistory:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "int"
                  uuid: "resolveInt_int1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                totalSizeCap:
                  sapientType: "MOCK"
                  valueType: "ch.qos.logback.core.util.FileSize"
                  uuid: "resolveFileSize_fileSize2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                maxFileSize:
                  sapientType: "MOCK"
                  valueType: "ch.qos.logback.core.util.FileSize"
                  uuid: "resolveFileSize_fileSize1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                cleanHistoryOnStart:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: true
                  valueType: "boolean"
                  uuid: "resolveBoolean_boolean1"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
            genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
            uuid: "setRollingPolicy_sizeAndTimeBasedRollingPolicy1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
          encoder:
            sapientType: "OBJECT"
            content: !<new>
              target: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
              parameters: []
              privateConstructor: false
              createdByTargetCode: true
              propertiesMap:
                charset:
                  sapientType: "OBJECT"
                  content: !<static_method_return>
                    target: "java.nio.charset.Charset"
                    method: "defaultCharset"
                    methodParameters: []
                  valueType: "java.nio.charset.Charset"
                  uuid: "resolveCharset_charset2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                pattern:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pattern1"
                  valueType: "java.lang.String"
                  uuid: "resolve_string11"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
            uuid: "fileAppender_patternLayoutEncoder1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "ch.qos.logback.core.rolling.RollingFileAppender"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "fileAppender_rollingFileAppender1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "fileAppender_void3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.classic.filter.ThresholdFilter"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "fileAppender_thresholdFilter1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext11"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid137"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "pattern1"
      valueType: "java.lang.String"
      uuid: "resolve_string11"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_PATTERN}"
      valueType: "java.lang.String"
      uuid: "uuid136"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext11"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext12"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid139"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string12"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_CHARSET}"
      valueType: "java.lang.String"
      uuid: "uuid138"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext12"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "fileAppender_void7"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          charset:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.nio.charset.Charset"
              method: "defaultCharset"
              methodParameters: []
            valueType: "java.nio.charset.Charset"
            uuid: "resolveCharset_charset2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          pattern:
            sapientType: "BASIC"
            content: !<regular>
              value: "pattern1"
            valueType: "java.lang.String"
            uuid: "resolve_string11"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
      uuid: "fileAppender_patternLayoutEncoder1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.core.rolling.RollingFileAppender"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          rollingPolicy:
            sapientType: "OBJECT"
            content: !<new>
              target: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
              parameters: []
              privateConstructor: false
              createdByTargetCode: true
              propertiesMap:
                context:
                  sapientType: "MOCK"
                  valueType: "ch.qos.logback.classic.LoggerContext"
                  uuid: "setRollingPolicy_loggerContext1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                maxHistory:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "int"
                  uuid: "resolveInt_int1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                totalSizeCap:
                  sapientType: "MOCK"
                  valueType: "ch.qos.logback.core.util.FileSize"
                  uuid: "resolveFileSize_fileSize2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                maxFileSize:
                  sapientType: "MOCK"
                  valueType: "ch.qos.logback.core.util.FileSize"
                  uuid: "resolveFileSize_fileSize1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                cleanHistoryOnStart:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: true
                  valueType: "boolean"
                  uuid: "resolveBoolean_boolean1"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
            genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
            uuid: "setRollingPolicy_sizeAndTimeBasedRollingPolicy1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
          encoder:
            sapientType: "OBJECT"
            content: !<new>
              target: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
              parameters: []
              privateConstructor: false
              createdByTargetCode: true
              propertiesMap:
                charset:
                  sapientType: "OBJECT"
                  content: !<static_method_return>
                    target: "java.nio.charset.Charset"
                    method: "defaultCharset"
                    methodParameters: []
                  valueType: "java.nio.charset.Charset"
                  uuid: "resolveCharset_charset2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                pattern:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pattern1"
                  valueType: "java.lang.String"
                  uuid: "resolve_string11"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
            uuid: "fileAppender_patternLayoutEncoder1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "ch.qos.logback.core.rolling.RollingFileAppender"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "fileAppender_rollingFileAppender1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "fileAppender_void8"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "file1"
      valueType: "java.lang.String"
      uuid: "apply_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "setRollingPolicy_loggerContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext13"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid141"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string13"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${LOGBACK_ROLLINGPOLICY_FILE_NAME_PATTERN:-${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz}"
      valueType: "java.lang.String"
      uuid: "uuid140"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext13"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          context:
            sapientType: "MOCK"
            valueType: "ch.qos.logback.classic.LoggerContext"
            uuid: "setRollingPolicy_loggerContext1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          maxHistory:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "resolveInt_int1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          totalSizeCap:
            sapientType: "MOCK"
            valueType: "ch.qos.logback.core.util.FileSize"
            uuid: "resolveFileSize_fileSize2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          maxFileSize:
            sapientType: "MOCK"
            valueType: "ch.qos.logback.core.util.FileSize"
            uuid: "resolveFileSize_fileSize1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          cleanHistoryOnStart:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "resolveBoolean_boolean1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "setRollingPolicy_sizeAndTimeBasedRollingPolicy1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "setRollingPolicy_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string13"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext14"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid143"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string14"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${LOGBACK_ROLLINGPOLICY_CLEAN_HISTORY_ON_START:-false}"
      valueType: "java.lang.String"
      uuid: "uuid142"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext14"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext15"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid145"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string15"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${LOGBACK_ROLLINGPOLICY_MAX_FILE_SIZE:-10MB}"
      valueType: "java.lang.String"
      uuid: "uuid144"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext15"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.FileSize"
      uuid: "uuid146"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.FileSize"
      uuid: "resolveFileSize_fileSize1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string15"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext16"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid148"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string16"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${LOGBACK_ROLLINGPOLICY_TOTAL_SIZE_CAP:-0}"
      valueType: "java.lang.String"
      uuid: "uuid147"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext16"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.FileSize"
      uuid: "uuid149"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.FileSize"
      uuid: "resolveFileSize_fileSize2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string16"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext17"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid151"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string17"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${LOGBACK_ROLLINGPOLICY_MAX_HISTORY:-7}"
      valueType: "java.lang.String"
      uuid: "uuid150"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext17"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          context:
            sapientType: "MOCK"
            valueType: "ch.qos.logback.classic.LoggerContext"
            uuid: "setRollingPolicy_loggerContext1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          maxHistory:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "resolveInt_int1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          totalSizeCap:
            sapientType: "MOCK"
            valueType: "ch.qos.logback.core.util.FileSize"
            uuid: "resolveFileSize_fileSize2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          maxFileSize:
            sapientType: "MOCK"
            valueType: "ch.qos.logback.core.util.FileSize"
            uuid: "resolveFileSize_fileSize1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          cleanHistoryOnStart:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "resolveBoolean_boolean1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "setRollingPolicy_sizeAndTimeBasedRollingPolicy1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "setRollingPolicy_void8"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.core.rolling.RollingFileAppender"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          rollingPolicy:
            sapientType: "OBJECT"
            content: !<new>
              target: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
              parameters: []
              privateConstructor: false
              createdByTargetCode: true
              propertiesMap:
                context:
                  sapientType: "MOCK"
                  valueType: "ch.qos.logback.classic.LoggerContext"
                  uuid: "setRollingPolicy_loggerContext1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                maxHistory:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "int"
                  uuid: "resolveInt_int1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                totalSizeCap:
                  sapientType: "MOCK"
                  valueType: "ch.qos.logback.core.util.FileSize"
                  uuid: "resolveFileSize_fileSize2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                maxFileSize:
                  sapientType: "MOCK"
                  valueType: "ch.qos.logback.core.util.FileSize"
                  uuid: "resolveFileSize_fileSize1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                cleanHistoryOnStart:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: true
                  valueType: "boolean"
                  uuid: "resolveBoolean_boolean1"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
            genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
            uuid: "setRollingPolicy_sizeAndTimeBasedRollingPolicy1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
          encoder:
            sapientType: "OBJECT"
            content: !<new>
              target: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
              parameters: []
              privateConstructor: false
              createdByTargetCode: true
              propertiesMap:
                charset:
                  sapientType: "OBJECT"
                  content: !<static_method_return>
                    target: "java.nio.charset.Charset"
                    method: "defaultCharset"
                    methodParameters: []
                  valueType: "java.nio.charset.Charset"
                  uuid: "resolveCharset_charset2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                pattern:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pattern1"
                  valueType: "java.lang.String"
                  uuid: "resolve_string11"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
            uuid: "fileAppender_patternLayoutEncoder1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "ch.qos.logback.core.rolling.RollingFileAppender"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "fileAppender_rollingFileAppender1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "setRollingPolicy_void9"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          context:
            sapientType: "MOCK"
            valueType: "ch.qos.logback.classic.LoggerContext"
            uuid: "setRollingPolicy_loggerContext1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          maxHistory:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "resolveInt_int1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          totalSizeCap:
            sapientType: "MOCK"
            valueType: "ch.qos.logback.core.util.FileSize"
            uuid: "resolveFileSize_fileSize2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          maxFileSize:
            sapientType: "MOCK"
            valueType: "ch.qos.logback.core.util.FileSize"
            uuid: "resolveFileSize_fileSize1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          cleanHistoryOnStart:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "resolveBoolean_boolean1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "setRollingPolicy_sizeAndTimeBasedRollingPolicy1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "fileAppender_void9"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "FILE"
      valueType: "java.lang.String"
      uuid: "uuid152"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.core.rolling.RollingFileAppender"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          rollingPolicy:
            sapientType: "OBJECT"
            content: !<new>
              target: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
              parameters: []
              privateConstructor: false
              createdByTargetCode: true
              propertiesMap:
                context:
                  sapientType: "MOCK"
                  valueType: "ch.qos.logback.classic.LoggerContext"
                  uuid: "setRollingPolicy_loggerContext1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                maxHistory:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "int"
                  uuid: "resolveInt_int1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                totalSizeCap:
                  sapientType: "MOCK"
                  valueType: "ch.qos.logback.core.util.FileSize"
                  uuid: "resolveFileSize_fileSize2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                maxFileSize:
                  sapientType: "MOCK"
                  valueType: "ch.qos.logback.core.util.FileSize"
                  uuid: "resolveFileSize_fileSize1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                cleanHistoryOnStart:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: true
                  valueType: "boolean"
                  uuid: "resolveBoolean_boolean1"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
            genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
            uuid: "setRollingPolicy_sizeAndTimeBasedRollingPolicy1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
          encoder:
            sapientType: "OBJECT"
            content: !<new>
              target: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
              parameters: []
              privateConstructor: false
              createdByTargetCode: true
              propertiesMap:
                charset:
                  sapientType: "OBJECT"
                  content: !<static_method_return>
                    target: "java.nio.charset.Charset"
                    method: "defaultCharset"
                    methodParameters: []
                  valueType: "java.nio.charset.Charset"
                  uuid: "resolveCharset_charset2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                pattern:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pattern1"
                  valueType: "java.lang.String"
                  uuid: "resolve_string11"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
            uuid: "fileAppender_patternLayoutEncoder1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "ch.qos.logback.core.rolling.RollingFileAppender"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "fileAppender_rollingFileAppender1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "apply_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "INFO"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "apply_level1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "OBJECT"
            content: !<new>
              target: "ch.qos.logback.core.ConsoleAppender"
              parameters: []
              privateConstructor: false
              createdByTargetCode: true
              propertiesMap:
                encoder:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
                    parameters: []
                    privateConstructor: false
                    createdByTargetCode: true
                    propertiesMap:
                      charset:
                        sapientType: "OBJECT"
                        content: !<static_method_return>
                          target: "java.nio.charset.Charset"
                          method: "defaultCharset"
                          methodParameters: []
                        valueType: "java.nio.charset.Charset"
                        uuid: "resolveCharset_charset1"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      pattern:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: "pattern1"
                        valueType: "java.lang.String"
                        uuid: "resolve_string8"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                  valueType: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
                  uuid: "consoleAppender_patternLayoutEncoder1"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "ch.qos.logback.core.ConsoleAppender"
            genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
            uuid: "consoleAppender_consoleAppender1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
          1:
            sapientType: "OBJECT"
            content: !<new>
              target: "ch.qos.logback.core.rolling.RollingFileAppender"
              parameters: []
              privateConstructor: false
              createdByTargetCode: true
              propertiesMap:
                rollingPolicy:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
                    parameters: []
                    privateConstructor: false
                    createdByTargetCode: true
                    propertiesMap:
                      context:
                        sapientType: "MOCK"
                        valueType: "ch.qos.logback.classic.LoggerContext"
                        uuid: "setRollingPolicy_loggerContext1"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      maxHistory:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 0
                        valueType: "int"
                        uuid: "resolveInt_int1"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      totalSizeCap:
                        sapientType: "MOCK"
                        valueType: "ch.qos.logback.core.util.FileSize"
                        uuid: "resolveFileSize_fileSize2"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      maxFileSize:
                        sapientType: "MOCK"
                        valueType: "ch.qos.logback.core.util.FileSize"
                        uuid: "resolveFileSize_fileSize1"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      cleanHistoryOnStart:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: true
                        valueType: "boolean"
                        uuid: "resolveBoolean_boolean1"
                        fixed: true
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                  valueType: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
                  genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
                  uuid: "setRollingPolicy_sizeAndTimeBasedRollingPolicy1"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                encoder:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
                    parameters: []
                    privateConstructor: false
                    createdByTargetCode: true
                    propertiesMap:
                      charset:
                        sapientType: "OBJECT"
                        content: !<static_method_return>
                          target: "java.nio.charset.Charset"
                          method: "defaultCharset"
                          methodParameters: []
                        valueType: "java.nio.charset.Charset"
                        uuid: "resolveCharset_charset2"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      pattern:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: "pattern1"
                        valueType: "java.lang.String"
                        uuid: "resolve_string11"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                  valueType: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
                  uuid: "fileAppender_patternLayoutEncoder1"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "ch.qos.logback.core.rolling.RollingFileAppender"
            genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
            uuid: "fileAppender_rollingFileAppender1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "ch.qos.logback.core.Appender[]"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "apply_appender[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid153"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "applyWhenBooleanNotParseBooleanResolveConfigVal"
    constructorSignature: "<init>(org.springframework.boot.logging.LogFile) : void"
    modelFingerprint: "6338862AD069BAB467099ED2B3935000"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "1049010D9A0A28211CBD5C9DD1977F62"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "config"
      modelFingerprint: "C158457FD7DAB1DF8CB8FDB98EF98AD0"
      index: 2
      valueUuid: "apply_logbackConfigurator1"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "45E3B091082DF33B36D252D5C9F309F7"
      index: 3
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getConfigurationLock"
        parameters: []
        signature: "getConfigurationLock(): Object"
        returnValueUuid: "apply_object1"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "0D4F0FC1CDD381416EF565C7A48C62E4"
      index: 4
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "conversionRule"
        parameters:
        - name: "conversionWord"
          valueUuid: "uuid154"
        - name: "converterClass"
          valueUuid: "uuid155"
        signature: "conversionRule(String,Class): void"
        returnValueUuid: "defaults_void1"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "F427B77A47EDD4D5C40172432EB97D6B"
      index: 5
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "conversionRule"
        parameters:
        - name: "conversionWord"
          valueUuid: "uuid156"
        - name: "converterClass"
          valueUuid: "uuid157"
        signature: "conversionRule(String,Class): void"
        returnValueUuid: "defaults_void2"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "9950900ACFA2BE4A3325A49D8B07D341"
      index: 6
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "conversionRule"
        parameters:
        - name: "conversionWord"
          valueUuid: "uuid158"
        - name: "converterClass"
          valueUuid: "uuid159"
        signature: "conversionRule(String,Class): void"
        returnValueUuid: "defaults_void3"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "E51659B7A2FE1A6E5768D1CF5FFAF09D"
      index: 7
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "conversionRule"
        parameters:
        - name: "conversionWord"
          valueUuid: "uuid160"
        - name: "converterClass"
          valueUuid: "uuid161"
        signature: "conversionRule(String,Class): void"
        returnValueUuid: "defaults_void4"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4A35616081AB7F80AF462FC3B112459A"
      index: 8
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "defaults_loggerContext1"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 9
      idsTryCatchBlockSurrounding:
      - 340001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext1"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "FF22DAC545E66C307A5BC68C82779D87"
      index: 10
      idsTryCatchBlockSurrounding:
      - 340001
      valueUuid: "uuid163"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid162"
        - name: "pc1"
          valueUuid: "resolve_loggerContext1"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string1"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "084244F29A6C3EEE124EB2CE76CCA1D5"
      index: 11
      valueUuid: "defaults_loggerContext1"
      methodExercised:
        target: "ch.qos.logback.classic.LoggerContext"
        name: "putProperty"
        parameters:
        - name: "key"
          valueUuid: "uuid164"
        - name: "val"
          valueUuid: "resolve_string1"
        signature: "putProperty(String,String): void"
        returnValueUuid: "defaults_void5"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4A35616081AB7F80AF462FC3B112459A"
      index: 12
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "defaults_loggerContext2"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 13
      idsTryCatchBlockSurrounding:
      - 520001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext2"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "4938E11269384D6FAB0E399C59EED3AE"
      index: 14
      idsTryCatchBlockSurrounding:
      - 520001
      valueUuid: "uuid166"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid165"
        - name: "pc1"
          valueUuid: "resolve_loggerContext2"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string2"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "2D5C7DC02794FFE46C396DBCB9B28DD2"
      index: 15
      valueUuid: "defaults_loggerContext2"
      methodExercised:
        target: "ch.qos.logback.classic.LoggerContext"
        name: "putProperty"
        parameters:
        - name: "key"
          valueUuid: "uuid167"
        - name: "val"
          valueUuid: "resolve_string2"
        signature: "putProperty(String,String): void"
        returnValueUuid: "defaults_void6"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4A35616081AB7F80AF462FC3B112459A"
      index: 16
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "defaults_loggerContext3"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 17
      idsTryCatchBlockSurrounding:
      - 620001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext3"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "A5BEC749C014E2305E2F8205A11158E8"
      index: 18
      idsTryCatchBlockSurrounding:
      - 620001
      valueUuid: "uuid169"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid168"
        - name: "pc1"
          valueUuid: "resolve_loggerContext3"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string3"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "25EF47B5E525B6B89E30D7D01071B910"
      index: 19
      valueUuid: "defaults_loggerContext3"
      methodExercised:
        target: "ch.qos.logback.classic.LoggerContext"
        name: "putProperty"
        parameters:
        - name: "key"
          valueUuid: "uuid170"
        - name: "val"
          valueUuid: "resolve_string3"
        signature: "putProperty(String,String): void"
        returnValueUuid: "defaults_void7"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4A35616081AB7F80AF462FC3B112459A"
      index: 20
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "defaults_loggerContext4"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 21
      idsTryCatchBlockSurrounding:
      - 740001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext4"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "D4E059A59A9CC5FCB02BFBFAD818774C"
      index: 22
      idsTryCatchBlockSurrounding:
      - 740001
      valueUuid: "uuid172"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid171"
        - name: "pc1"
          valueUuid: "resolve_loggerContext4"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string4"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E29F485322B06502FF4F0E757AF34782"
      index: 23
      valueUuid: "defaults_loggerContext4"
      methodExercised:
        target: "ch.qos.logback.classic.LoggerContext"
        name: "putProperty"
        parameters:
        - name: "key"
          valueUuid: "uuid173"
        - name: "val"
          valueUuid: "resolve_string4"
        signature: "putProperty(String,String): void"
        returnValueUuid: "defaults_void8"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4A35616081AB7F80AF462FC3B112459A"
      index: 24
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "defaults_loggerContext5"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 25
      idsTryCatchBlockSurrounding:
      - 870001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext5"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "CF498DF647BB28EFEB220F217BE2A3A8"
      index: 26
      idsTryCatchBlockSurrounding:
      - 870001
      valueUuid: "uuid175"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid174"
        - name: "pc1"
          valueUuid: "resolve_loggerContext5"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string5"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A9EAB56CF3E6314D42C6AA0118323105"
      index: 27
      valueUuid: "defaults_loggerContext5"
      methodExercised:
        target: "ch.qos.logback.classic.LoggerContext"
        name: "putProperty"
        parameters:
        - name: "key"
          valueUuid: "uuid176"
        - name: "val"
          valueUuid: "resolve_string5"
        signature: "putProperty(String,String): void"
        returnValueUuid: "defaults_void9"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4A35616081AB7F80AF462FC3B112459A"
      index: 28
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "defaults_loggerContext6"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 29
      idsTryCatchBlockSurrounding:
      - 970001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext6"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "A23F01A3B1A7A87999C46667337C28E4"
      index: 30
      idsTryCatchBlockSurrounding:
      - 970001
      valueUuid: "uuid178"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid177"
        - name: "pc1"
          valueUuid: "resolve_loggerContext6"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string6"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "BA6062C918FD82EABD0F4C26D74288F0"
      index: 31
      valueUuid: "defaults_loggerContext6"
      methodExercised:
        target: "ch.qos.logback.classic.LoggerContext"
        name: "putProperty"
        parameters:
        - name: "key"
          valueUuid: "uuid179"
        - name: "val"
          valueUuid: "resolve_string6"
        signature: "putProperty(String,String): void"
        returnValueUuid: "defaults_void10"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "D2BC1C55758DD71AD08579EAD8FD083A"
      index: 32
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid180"
        - name: "level"
          valueUuid: "defaults_level1"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void11"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2AF34D185CFA4F1056ED0964F0720DF5"
      index: 33
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid181"
        - name: "level"
          valueUuid: "defaults_level1"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void12"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "D2BCECF630BE06922B3869FC5C4EB0C5"
      index: 34
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid182"
        - name: "level"
          valueUuid: "defaults_level2"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void13"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2225B7711737C9D2BE640C6763575B17"
      index: 35
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid183"
        - name: "level"
          valueUuid: "defaults_level2"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void14"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "054406675D6DD77CC515CC72CD0956CE"
      index: 36
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid184"
        - name: "level"
          valueUuid: "defaults_level2"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void15"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "F42D14F86FBC8AEAC8A25D2E9B709A08"
      index: 37
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid185"
        - name: "level"
          valueUuid: "defaults_level1"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void16"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "F18FE8F64D61A2F870D5DB75217F23AF"
      index: 38
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid186"
        - name: "level"
          valueUuid: "defaults_level2"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void17"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "06A6C87D8418936218F06494D3C9F1D6"
      index: 39
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid187"
        - name: "level"
          valueUuid: "defaults_level2"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void18"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 40
      idsTryCatchBlockSurrounding:
      - 180001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext7"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "C9EA97FCC614B1341A34730A439B2FCB"
      index: 41
      idsTryCatchBlockSurrounding:
      - 180001
      valueUuid: "uuid189"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid188"
        - name: "pc1"
          valueUuid: "resolve_loggerContext7"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string7"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "filter"
      modelFingerprint: "BA14BF6DB1A15DD5D96598EAA24DF66D"
      index: 42
      valueUuid: "consoleAppender_thresholdFilter1"
      methodExercised:
        target: "filter"
        name: "setLevel"
        parameters:
        - name: "level"
          valueUuid: "resolve_string7"
        signature: "setLevel(String): void"
        returnValueUuid: "consoleAppender_void1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "filter"
      modelFingerprint: "129423D5E0EE8B1D914E3AB0AA3541DA"
      index: 43
      valueUuid: "consoleAppender_thresholdFilter1"
      methodExercised:
        target: "filter"
        name: "start"
        parameters: []
        signature: "start(): void"
        returnValueUuid: "consoleAppender_void2"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "appender"
      modelFingerprint: "909A8FDE1008BEB38862B62D77D95A49"
      index: 44
      valueUuid: "consoleAppender_consoleAppender1"
      methodExercised:
        target: "appender"
        name: "addFilter"
        parameters:
        - name: "newFilter"
          valueUuid: "consoleAppender_thresholdFilter1"
        signature: "addFilter(ThresholdFilter): void"
        returnValueUuid: "consoleAppender_void3"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 45
      idsTryCatchBlockSurrounding:
      - 410001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext8"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "4ED2DEBDCF100D6DB4BD3D0F7DE79CCA"
      index: 46
      idsTryCatchBlockSurrounding:
      - 410001
      valueUuid: "uuid191"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid190"
        - name: "pc1"
          valueUuid: "resolve_loggerContext8"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string8"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 47
      idsTryCatchBlockSurrounding:
      - 50001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext9"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "A5FF45C5B28DA25E245292B0EB329081"
      index: 48
      idsTryCatchBlockSurrounding:
      - 50001
      valueUuid: "uuid193"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid192"
        - name: "pc1"
          valueUuid: "resolve_loggerContext9"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string9"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "D736DBD86C3C3158665CFD7D4D103A15"
      index: 49
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "start"
        parameters:
        - name: "lifeCycle"
          valueUuid: "consoleAppender_patternLayoutEncoder1"
        signature: "start(PatternLayoutEncoder): void"
        returnValueUuid: "consoleAppender_void6"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2F4E75BFF8E2F2A00C1657D872BD5477"
      index: 50
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "appender"
        parameters:
        - name: "name"
          valueUuid: "uuid194"
        - name: "appender"
          valueUuid: "consoleAppender_consoleAppender1"
        signature: "appender(String,ConsoleAppender): void"
        returnValueUuid: "consoleAppender_void8"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 51
      idsTryCatchBlockSurrounding:
      - 180001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext10"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "F0E9702EEF6BA7A0CB9B1FAAB04F7011"
      index: 52
      idsTryCatchBlockSurrounding:
      - 180001
      valueUuid: "uuid196"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid195"
        - name: "pc1"
          valueUuid: "resolve_loggerContext10"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string10"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "filter"
      modelFingerprint: "1463FB12459578F5E11D1DBC358406F8"
      index: 53
      valueUuid: "fileAppender_thresholdFilter1"
      methodExercised:
        target: "filter"
        name: "setLevel"
        parameters:
        - name: "level"
          valueUuid: "resolve_string10"
        signature: "setLevel(String): void"
        returnValueUuid: "fileAppender_void1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "filter"
      modelFingerprint: "129423D5E0EE8B1D914E3AB0AA3541DA"
      index: 54
      valueUuid: "fileAppender_thresholdFilter1"
      methodExercised:
        target: "filter"
        name: "start"
        parameters: []
        signature: "start(): void"
        returnValueUuid: "fileAppender_void2"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "appender"
      modelFingerprint: "BD0EAD4F1B79C1D332ABFDAA8DE16012"
      index: 55
      valueUuid: "fileAppender_rollingFileAppender1"
      methodExercised:
        target: "appender"
        name: "addFilter"
        parameters:
        - name: "newFilter"
          valueUuid: "fileAppender_thresholdFilter1"
        signature: "addFilter(ThresholdFilter): void"
        returnValueUuid: "fileAppender_void3"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 56
      idsTryCatchBlockSurrounding:
      - 410001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext11"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "A12AB01EB49D89972269975EACD722D4"
      index: 57
      idsTryCatchBlockSurrounding:
      - 410001
      valueUuid: "uuid198"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid197"
        - name: "pc1"
          valueUuid: "resolve_loggerContext11"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string11"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 58
      idsTryCatchBlockSurrounding:
      - 50001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext12"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "3A811286481B4EBF1AAD911D0CFAC380"
      index: 59
      idsTryCatchBlockSurrounding:
      - 50001
      valueUuid: "uuid200"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid199"
        - name: "pc1"
          valueUuid: "resolve_loggerContext12"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string12"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "D736DBD86C3C3158665CFD7D4D103A15"
      index: 60
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "start"
        parameters:
        - name: "lifeCycle"
          valueUuid: "fileAppender_patternLayoutEncoder1"
        signature: "start(PatternLayoutEncoder): void"
        returnValueUuid: "fileAppender_void7"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "appender"
      modelFingerprint: "9BBC0932954B2F6E9C81D2B02D4587A3"
      index: 61
      valueUuid: "fileAppender_rollingFileAppender1"
      methodExercised:
        target: "appender"
        name: "setFile"
        parameters:
        - name: "file"
          valueUuid: "apply_string1"
        signature: "setFile(String): void"
        returnValueUuid: "fileAppender_void8"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 62
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "setRollingPolicy_loggerContext1"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 63
      idsTryCatchBlockSurrounding:
      - 200001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext13"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "395A1B3C281A18E727F5774038B8F0D9"
      index: 64
      idsTryCatchBlockSurrounding:
      - 200001
      valueUuid: "uuid202"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid201"
        - name: "pc1"
          valueUuid: "resolve_loggerContext13"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string13"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "rollingPolicy"
      modelFingerprint: "2EA030407F16D209A3842EF9A1955155"
      index: 65
      valueUuid: "setRollingPolicy_sizeAndTimeBasedRollingPolicy1"
      methodExercised:
        target: "rollingPolicy"
        name: "setFileNamePattern"
        parameters:
        - name: "fnp"
          valueUuid: "resolve_string13"
        signature: "setFileNamePattern(String): void"
        returnValueUuid: "setRollingPolicy_void2"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 66
      idsTryCatchBlockSurrounding:
      - 50001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext14"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "06D33FF2722A58CFC72A243E3C0ADF5F"
      index: 67
      idsTryCatchBlockSurrounding:
      - 50001
      valueUuid: "uuid204"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid203"
        - name: "pc1"
          valueUuid: "resolve_loggerContext14"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string14"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 68
      idsTryCatchBlockSurrounding:
      - 50001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext15"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "F6B85F59928320BAA308EE220CA1DDEB"
      index: 69
      idsTryCatchBlockSurrounding:
      - 50001
      valueUuid: "uuid206"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid205"
        - name: "pc1"
          valueUuid: "resolve_loggerContext15"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string15"
        access: 9
    - type: "STATIC"
      name: "FileSize"
      modelFingerprint: "5B1E09F3553D36AC1A76C0A454949648"
      index: 70
      valueUuid: "uuid207"
      methodExercised:
        target: "ch.qos.logback.core.util.FileSize"
        name: "valueOf"
        parameters:
        - name: "coefficient"
          valueUuid: "resolve_string15"
        signature: "valueOf(String): FileSize"
        returnValueUuid: "resolveFileSize_fileSize1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 71
      idsTryCatchBlockSurrounding:
      - 50001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext16"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "1C8A0DFF9FC6000A939059BCBBAF4A4C"
      index: 72
      idsTryCatchBlockSurrounding:
      - 50001
      valueUuid: "uuid209"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid208"
        - name: "pc1"
          valueUuid: "resolve_loggerContext16"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string16"
        access: 9
    - type: "STATIC"
      name: "FileSize"
      modelFingerprint: "5B1E09F3553D36AC1A76C0A454949648"
      index: 73
      valueUuid: "uuid210"
      methodExercised:
        target: "ch.qos.logback.core.util.FileSize"
        name: "valueOf"
        parameters:
        - name: "coefficient"
          valueUuid: "resolve_string16"
        signature: "valueOf(String): FileSize"
        returnValueUuid: "resolveFileSize_fileSize2"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 74
      idsTryCatchBlockSurrounding:
      - 50001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext17"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "B20A4B49A60E4DF9AC8A09BA35EE887F"
      index: 75
      idsTryCatchBlockSurrounding:
      - 50001
      valueUuid: "uuid212"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid211"
        - name: "pc1"
          valueUuid: "resolve_loggerContext17"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string17"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "rollingPolicy"
      modelFingerprint: "7F0BE3B30FA2E5B1210740E4EB50E392"
      index: 76
      valueUuid: "setRollingPolicy_sizeAndTimeBasedRollingPolicy1"
      methodExercised:
        target: "rollingPolicy"
        name: "setParent"
        parameters:
        - name: "appender"
          valueUuid: "fileAppender_rollingFileAppender1"
        signature: "setParent(RollingFileAppender): void"
        returnValueUuid: "setRollingPolicy_void8"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "FA0581E9F0250C3F3B60F7628CADB8E9"
      index: 77
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "start"
        parameters:
        - name: "lifeCycle"
          valueUuid: "setRollingPolicy_sizeAndTimeBasedRollingPolicy1"
        signature: "start(SizeAndTimeBasedRollingPolicy): void"
        returnValueUuid: "setRollingPolicy_void9"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "EAF8349736C42ACA787CB461E3FB793C"
      index: 78
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "appender"
        parameters:
        - name: "name"
          valueUuid: "uuid213"
        - name: "appender"
          valueUuid: "fileAppender_rollingFileAppender1"
        signature: "appender(String,RollingFileAppender): void"
        returnValueUuid: "fileAppender_void9"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2C3F0E8EEFCD5E9CA05493A8D5B1444E"
      index: 79
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "root"
        parameters:
        - name: "level"
          valueUuid: "apply_level1"
        - name: "appenders"
          valueUuid: "apply_appender[]1"
        signature: "root(Level,Appender[]): void"
        returnValueUuid: "apply_void1"
        access: 144
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 80
      valueUuid: "uuid214"
    uuid: "e903a608-9bc6-30cd-b3d2-e44982f9917d"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "appender.addFilter(filter);"
      lineNumber: 108
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: appender - Method: addFilter"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.logback.DefaultLogbackConfiguration"
        parameters:
        - name: "logFile"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LogFile"
            uuid: "<init>_logFile1"
            fixed: false
            nameForMock: "<init>_logFile1"
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.logback.DefaultLogbackConfiguration"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "apply_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "clr"
      valueType: "java.lang.String"
      uuid: "uuid154"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.ColorConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uuid155"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "correlationId"
      valueType: "java.lang.String"
      uuid: "uuid156"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.CorrelationIdConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uuid157"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "wex"
      valueType: "java.lang.String"
      uuid: "uuid158"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uuid159"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void4"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "wEx"
      valueType: "java.lang.String"
      uuid: "uuid160"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uuid161"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid163"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd'T'HH:mm:ss.SSSXXX}}){faint}\
          \ %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint}\
          \ %clr(${LOGGED_APPLICATION_NAME:-}[%15.15t]){faint} %clr(${LOG_CORRELATION_PATTERN:-}){faint}%clr(%-40.40logger{39}){cyan}\
          \ %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"
      valueType: "java.lang.String"
      uuid: "uuid162"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void5"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "CONSOLE_LOG_PATTERN"
      valueType: "java.lang.String"
      uuid: "uuid164"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid166"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_CHARSET:-UTF-8}"
      valueType: "java.lang.String"
      uuid: "uuid165"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void6"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "CONSOLE_LOG_CHARSET"
      valueType: "java.lang.String"
      uuid: "uuid167"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid169"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_THRESHOLD:-TRACE}"
      valueType: "java.lang.String"
      uuid: "uuid168"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void7"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "CONSOLE_LOG_THRESHOLD"
      valueType: "java.lang.String"
      uuid: "uuid170"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid172"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_PATTERN:-%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd'T'HH:mm:ss.SSSXXX}}\
          \ ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- ${LOGGED_APPLICATION_NAME:-}[%t]\
          \ ${LOG_CORRELATION_PATTERN:-}%-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"
      valueType: "java.lang.String"
      uuid: "uuid171"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void8"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "FILE_LOG_PATTERN"
      valueType: "java.lang.String"
      uuid: "uuid173"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid175"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_CHARSET:-UTF-8}"
      valueType: "java.lang.String"
      uuid: "uuid174"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void9"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "FILE_LOG_CHARSET"
      valueType: "java.lang.String"
      uuid: "uuid176"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid178"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_THRESHOLD:-TRACE}"
      valueType: "java.lang.String"
      uuid: "uuid177"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void10"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "FILE_LOG_THRESHOLD"
      valueType: "java.lang.String"
      uuid: "uuid179"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void11"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.catalina.startup.DigesterFactory"
      valueType: "java.lang.String"
      uuid: "uuid180"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "ERROR"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void12"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.catalina.util.LifecycleBase"
      valueType: "java.lang.String"
      uuid: "uuid181"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "ERROR"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void13"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.coyote.http11.Http11NioProtocol"
      valueType: "java.lang.String"
      uuid: "uuid182"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void14"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.sshd.common.util.SecurityUtils"
      valueType: "java.lang.String"
      uuid: "uuid183"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void15"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.tomcat.util.net.NioSelectorPool"
      valueType: "java.lang.String"
      uuid: "uuid184"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void16"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.eclipse.jetty.util.component.AbstractLifeCycle"
      valueType: "java.lang.String"
      uuid: "uuid185"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "ERROR"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void17"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.hibernate.validator.internal.util.Version"
      valueType: "java.lang.String"
      uuid: "uuid186"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void18"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.actuate.endpoint.jmx"
      valueType: "java.lang.String"
      uuid: "uuid187"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext7"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid189"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "resolve_string7"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_THRESHOLD}"
      valueType: "java.lang.String"
      uuid: "uuid188"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext7"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.classic.filter.ThresholdFilter"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "consoleAppender_thresholdFilter1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "consoleAppender_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "resolve_string7"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.classic.filter.ThresholdFilter"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "consoleAppender_thresholdFilter1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "consoleAppender_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.core.ConsoleAppender"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          encoder:
            sapientType: "OBJECT"
            content: !<new>
              target: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
              parameters: []
              privateConstructor: false
              createdByTargetCode: true
              propertiesMap:
                charset:
                  sapientType: "OBJECT"
                  content: !<static_method_return>
                    target: "java.nio.charset.Charset"
                    method: "defaultCharset"
                    methodParameters: []
                  valueType: "java.nio.charset.Charset"
                  uuid: "resolveCharset_charset1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                pattern:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pattern1"
                  valueType: "java.lang.String"
                  uuid: "resolve_string8"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
            uuid: "consoleAppender_patternLayoutEncoder1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "ch.qos.logback.core.ConsoleAppender"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "consoleAppender_consoleAppender1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "consoleAppender_void3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.classic.filter.ThresholdFilter"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "consoleAppender_thresholdFilter1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext8"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid191"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "pattern1"
      valueType: "java.lang.String"
      uuid: "resolve_string8"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_PATTERN}"
      valueType: "java.lang.String"
      uuid: "uuid190"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext8"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext9"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid193"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "resolve_string9"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_CHARSET}"
      valueType: "java.lang.String"
      uuid: "uuid192"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext9"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "consoleAppender_void6"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          charset:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.nio.charset.Charset"
              method: "defaultCharset"
              methodParameters: []
            valueType: "java.nio.charset.Charset"
            uuid: "resolveCharset_charset1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          pattern:
            sapientType: "BASIC"
            content: !<regular>
              value: "pattern1"
            valueType: "java.lang.String"
            uuid: "resolve_string8"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
      uuid: "consoleAppender_patternLayoutEncoder1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "consoleAppender_void8"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "CONSOLE"
      valueType: "java.lang.String"
      uuid: "uuid194"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.core.ConsoleAppender"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          encoder:
            sapientType: "OBJECT"
            content: !<new>
              target: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
              parameters: []
              privateConstructor: false
              createdByTargetCode: true
              propertiesMap:
                charset:
                  sapientType: "OBJECT"
                  content: !<static_method_return>
                    target: "java.nio.charset.Charset"
                    method: "defaultCharset"
                    methodParameters: []
                  valueType: "java.nio.charset.Charset"
                  uuid: "resolveCharset_charset1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                pattern:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pattern1"
                  valueType: "java.lang.String"
                  uuid: "resolve_string8"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
            uuid: "consoleAppender_patternLayoutEncoder1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "ch.qos.logback.core.ConsoleAppender"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "consoleAppender_consoleAppender1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext10"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid196"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "C"
      valueType: "java.lang.String"
      uuid: "resolve_string10"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_THRESHOLD}"
      valueType: "java.lang.String"
      uuid: "uuid195"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext10"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.classic.filter.ThresholdFilter"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "fileAppender_thresholdFilter1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "fileAppender_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "C"
      valueType: "java.lang.String"
      uuid: "resolve_string10"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.classic.filter.ThresholdFilter"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "fileAppender_thresholdFilter1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "fileAppender_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.core.rolling.RollingFileAppender"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          rollingPolicy:
            sapientType: "OBJECT"
            content: !<new>
              target: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
              parameters: []
              privateConstructor: false
              createdByTargetCode: true
              propertiesMap:
                context:
                  sapientType: "MOCK"
                  valueType: "ch.qos.logback.classic.LoggerContext"
                  uuid: "setRollingPolicy_loggerContext1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                maxHistory:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "int"
                  uuid: "resolveInt_int1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                totalSizeCap:
                  sapientType: "MOCK"
                  valueType: "ch.qos.logback.core.util.FileSize"
                  uuid: "resolveFileSize_fileSize2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                maxFileSize:
                  sapientType: "MOCK"
                  valueType: "ch.qos.logback.core.util.FileSize"
                  uuid: "resolveFileSize_fileSize1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                cleanHistoryOnStart:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: false
                  valueType: "boolean"
                  uuid: "resolveBoolean_boolean1"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
            genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
            uuid: "setRollingPolicy_sizeAndTimeBasedRollingPolicy1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
          encoder:
            sapientType: "OBJECT"
            content: !<new>
              target: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
              parameters: []
              privateConstructor: false
              createdByTargetCode: true
              propertiesMap:
                charset:
                  sapientType: "OBJECT"
                  content: !<static_method_return>
                    target: "java.nio.charset.Charset"
                    method: "defaultCharset"
                    methodParameters: []
                  valueType: "java.nio.charset.Charset"
                  uuid: "resolveCharset_charset2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                pattern:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pattern1"
                  valueType: "java.lang.String"
                  uuid: "resolve_string11"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
            uuid: "fileAppender_patternLayoutEncoder1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "ch.qos.logback.core.rolling.RollingFileAppender"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "fileAppender_rollingFileAppender1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "fileAppender_void3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.classic.filter.ThresholdFilter"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "fileAppender_thresholdFilter1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext11"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid198"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "pattern1"
      valueType: "java.lang.String"
      uuid: "resolve_string11"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_PATTERN}"
      valueType: "java.lang.String"
      uuid: "uuid197"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext11"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext12"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid200"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "D"
      valueType: "java.lang.String"
      uuid: "resolve_string12"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_CHARSET}"
      valueType: "java.lang.String"
      uuid: "uuid199"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext12"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "fileAppender_void7"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          charset:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.nio.charset.Charset"
              method: "defaultCharset"
              methodParameters: []
            valueType: "java.nio.charset.Charset"
            uuid: "resolveCharset_charset2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          pattern:
            sapientType: "BASIC"
            content: !<regular>
              value: "pattern1"
            valueType: "java.lang.String"
            uuid: "resolve_string11"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
      uuid: "fileAppender_patternLayoutEncoder1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.core.rolling.RollingFileAppender"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          rollingPolicy:
            sapientType: "OBJECT"
            content: !<new>
              target: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
              parameters: []
              privateConstructor: false
              createdByTargetCode: true
              propertiesMap:
                context:
                  sapientType: "MOCK"
                  valueType: "ch.qos.logback.classic.LoggerContext"
                  uuid: "setRollingPolicy_loggerContext1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                maxHistory:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "int"
                  uuid: "resolveInt_int1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                totalSizeCap:
                  sapientType: "MOCK"
                  valueType: "ch.qos.logback.core.util.FileSize"
                  uuid: "resolveFileSize_fileSize2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                maxFileSize:
                  sapientType: "MOCK"
                  valueType: "ch.qos.logback.core.util.FileSize"
                  uuid: "resolveFileSize_fileSize1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                cleanHistoryOnStart:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: false
                  valueType: "boolean"
                  uuid: "resolveBoolean_boolean1"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
            genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
            uuid: "setRollingPolicy_sizeAndTimeBasedRollingPolicy1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
          encoder:
            sapientType: "OBJECT"
            content: !<new>
              target: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
              parameters: []
              privateConstructor: false
              createdByTargetCode: true
              propertiesMap:
                charset:
                  sapientType: "OBJECT"
                  content: !<static_method_return>
                    target: "java.nio.charset.Charset"
                    method: "defaultCharset"
                    methodParameters: []
                  valueType: "java.nio.charset.Charset"
                  uuid: "resolveCharset_charset2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                pattern:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pattern1"
                  valueType: "java.lang.String"
                  uuid: "resolve_string11"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
            uuid: "fileAppender_patternLayoutEncoder1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "ch.qos.logback.core.rolling.RollingFileAppender"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "fileAppender_rollingFileAppender1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "fileAppender_void8"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "<init>_logFile1"
      valueType: "java.lang.String"
      uuid: "apply_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "setRollingPolicy_loggerContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext13"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid202"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "E"
      valueType: "java.lang.String"
      uuid: "resolve_string13"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${LOGBACK_ROLLINGPOLICY_FILE_NAME_PATTERN:-${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz}"
      valueType: "java.lang.String"
      uuid: "uuid201"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext13"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          context:
            sapientType: "MOCK"
            valueType: "ch.qos.logback.classic.LoggerContext"
            uuid: "setRollingPolicy_loggerContext1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          maxHistory:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "resolveInt_int1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          totalSizeCap:
            sapientType: "MOCK"
            valueType: "ch.qos.logback.core.util.FileSize"
            uuid: "resolveFileSize_fileSize2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          maxFileSize:
            sapientType: "MOCK"
            valueType: "ch.qos.logback.core.util.FileSize"
            uuid: "resolveFileSize_fileSize1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          cleanHistoryOnStart:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "resolveBoolean_boolean1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "setRollingPolicy_sizeAndTimeBasedRollingPolicy1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "setRollingPolicy_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "E"
      valueType: "java.lang.String"
      uuid: "resolve_string13"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext14"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid204"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "G"
      valueType: "java.lang.String"
      uuid: "resolve_string14"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${LOGBACK_ROLLINGPOLICY_CLEAN_HISTORY_ON_START:-false}"
      valueType: "java.lang.String"
      uuid: "uuid203"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext14"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext15"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid206"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string15"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${LOGBACK_ROLLINGPOLICY_MAX_FILE_SIZE:-10MB}"
      valueType: "java.lang.String"
      uuid: "uuid205"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext15"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.FileSize"
      uuid: "uuid207"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.FileSize"
      uuid: "resolveFileSize_fileSize1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string15"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext16"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid209"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string16"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${LOGBACK_ROLLINGPOLICY_TOTAL_SIZE_CAP:-0}"
      valueType: "java.lang.String"
      uuid: "uuid208"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext16"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.FileSize"
      uuid: "uuid210"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.FileSize"
      uuid: "resolveFileSize_fileSize2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string16"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext17"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid212"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "0"
      valueType: "java.lang.String"
      uuid: "resolve_string17"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${LOGBACK_ROLLINGPOLICY_MAX_HISTORY:-7}"
      valueType: "java.lang.String"
      uuid: "uuid211"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext17"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          context:
            sapientType: "MOCK"
            valueType: "ch.qos.logback.classic.LoggerContext"
            uuid: "setRollingPolicy_loggerContext1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          maxHistory:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "resolveInt_int1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          totalSizeCap:
            sapientType: "MOCK"
            valueType: "ch.qos.logback.core.util.FileSize"
            uuid: "resolveFileSize_fileSize2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          maxFileSize:
            sapientType: "MOCK"
            valueType: "ch.qos.logback.core.util.FileSize"
            uuid: "resolveFileSize_fileSize1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          cleanHistoryOnStart:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "resolveBoolean_boolean1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "setRollingPolicy_sizeAndTimeBasedRollingPolicy1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "setRollingPolicy_void8"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.core.rolling.RollingFileAppender"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          rollingPolicy:
            sapientType: "OBJECT"
            content: !<new>
              target: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
              parameters: []
              privateConstructor: false
              createdByTargetCode: true
              propertiesMap:
                context:
                  sapientType: "MOCK"
                  valueType: "ch.qos.logback.classic.LoggerContext"
                  uuid: "setRollingPolicy_loggerContext1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                maxHistory:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "int"
                  uuid: "resolveInt_int1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                totalSizeCap:
                  sapientType: "MOCK"
                  valueType: "ch.qos.logback.core.util.FileSize"
                  uuid: "resolveFileSize_fileSize2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                maxFileSize:
                  sapientType: "MOCK"
                  valueType: "ch.qos.logback.core.util.FileSize"
                  uuid: "resolveFileSize_fileSize1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                cleanHistoryOnStart:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: false
                  valueType: "boolean"
                  uuid: "resolveBoolean_boolean1"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
            genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
            uuid: "setRollingPolicy_sizeAndTimeBasedRollingPolicy1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
          encoder:
            sapientType: "OBJECT"
            content: !<new>
              target: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
              parameters: []
              privateConstructor: false
              createdByTargetCode: true
              propertiesMap:
                charset:
                  sapientType: "OBJECT"
                  content: !<static_method_return>
                    target: "java.nio.charset.Charset"
                    method: "defaultCharset"
                    methodParameters: []
                  valueType: "java.nio.charset.Charset"
                  uuid: "resolveCharset_charset2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                pattern:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pattern1"
                  valueType: "java.lang.String"
                  uuid: "resolve_string11"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
            uuid: "fileAppender_patternLayoutEncoder1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "ch.qos.logback.core.rolling.RollingFileAppender"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "fileAppender_rollingFileAppender1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "setRollingPolicy_void9"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          context:
            sapientType: "MOCK"
            valueType: "ch.qos.logback.classic.LoggerContext"
            uuid: "setRollingPolicy_loggerContext1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          maxHistory:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "resolveInt_int1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          totalSizeCap:
            sapientType: "MOCK"
            valueType: "ch.qos.logback.core.util.FileSize"
            uuid: "resolveFileSize_fileSize2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          maxFileSize:
            sapientType: "MOCK"
            valueType: "ch.qos.logback.core.util.FileSize"
            uuid: "resolveFileSize_fileSize1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          cleanHistoryOnStart:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "resolveBoolean_boolean1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "setRollingPolicy_sizeAndTimeBasedRollingPolicy1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "fileAppender_void9"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "FILE"
      valueType: "java.lang.String"
      uuid: "uuid213"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.core.rolling.RollingFileAppender"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          rollingPolicy:
            sapientType: "OBJECT"
            content: !<new>
              target: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
              parameters: []
              privateConstructor: false
              createdByTargetCode: true
              propertiesMap:
                context:
                  sapientType: "MOCK"
                  valueType: "ch.qos.logback.classic.LoggerContext"
                  uuid: "setRollingPolicy_loggerContext1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                maxHistory:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "int"
                  uuid: "resolveInt_int1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                totalSizeCap:
                  sapientType: "MOCK"
                  valueType: "ch.qos.logback.core.util.FileSize"
                  uuid: "resolveFileSize_fileSize2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                maxFileSize:
                  sapientType: "MOCK"
                  valueType: "ch.qos.logback.core.util.FileSize"
                  uuid: "resolveFileSize_fileSize1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                cleanHistoryOnStart:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: false
                  valueType: "boolean"
                  uuid: "resolveBoolean_boolean1"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
            genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
            uuid: "setRollingPolicy_sizeAndTimeBasedRollingPolicy1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
          encoder:
            sapientType: "OBJECT"
            content: !<new>
              target: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
              parameters: []
              privateConstructor: false
              createdByTargetCode: true
              propertiesMap:
                charset:
                  sapientType: "OBJECT"
                  content: !<static_method_return>
                    target: "java.nio.charset.Charset"
                    method: "defaultCharset"
                    methodParameters: []
                  valueType: "java.nio.charset.Charset"
                  uuid: "resolveCharset_charset2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                pattern:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pattern1"
                  valueType: "java.lang.String"
                  uuid: "resolve_string11"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
            uuid: "fileAppender_patternLayoutEncoder1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "ch.qos.logback.core.rolling.RollingFileAppender"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "fileAppender_rollingFileAppender1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "apply_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "INFO"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "apply_level1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "OBJECT"
            content: !<new>
              target: "ch.qos.logback.core.ConsoleAppender"
              parameters: []
              privateConstructor: false
              createdByTargetCode: true
              propertiesMap:
                encoder:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
                    parameters: []
                    privateConstructor: false
                    createdByTargetCode: true
                    propertiesMap:
                      charset:
                        sapientType: "OBJECT"
                        content: !<static_method_return>
                          target: "java.nio.charset.Charset"
                          method: "defaultCharset"
                          methodParameters: []
                        valueType: "java.nio.charset.Charset"
                        uuid: "resolveCharset_charset1"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      pattern:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: "pattern1"
                        valueType: "java.lang.String"
                        uuid: "resolve_string8"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                  valueType: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
                  uuid: "consoleAppender_patternLayoutEncoder1"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "ch.qos.logback.core.ConsoleAppender"
            genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
            uuid: "consoleAppender_consoleAppender1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
          1:
            sapientType: "OBJECT"
            content: !<new>
              target: "ch.qos.logback.core.rolling.RollingFileAppender"
              parameters: []
              privateConstructor: false
              createdByTargetCode: true
              propertiesMap:
                rollingPolicy:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
                    parameters: []
                    privateConstructor: false
                    createdByTargetCode: true
                    propertiesMap:
                      context:
                        sapientType: "MOCK"
                        valueType: "ch.qos.logback.classic.LoggerContext"
                        uuid: "setRollingPolicy_loggerContext1"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      maxHistory:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 0
                        valueType: "int"
                        uuid: "resolveInt_int1"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      totalSizeCap:
                        sapientType: "MOCK"
                        valueType: "ch.qos.logback.core.util.FileSize"
                        uuid: "resolveFileSize_fileSize2"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      maxFileSize:
                        sapientType: "MOCK"
                        valueType: "ch.qos.logback.core.util.FileSize"
                        uuid: "resolveFileSize_fileSize1"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      cleanHistoryOnStart:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: false
                        valueType: "boolean"
                        uuid: "resolveBoolean_boolean1"
                        fixed: true
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                  valueType: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
                  genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
                  uuid: "setRollingPolicy_sizeAndTimeBasedRollingPolicy1"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                encoder:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
                    parameters: []
                    privateConstructor: false
                    createdByTargetCode: true
                    propertiesMap:
                      charset:
                        sapientType: "OBJECT"
                        content: !<static_method_return>
                          target: "java.nio.charset.Charset"
                          method: "defaultCharset"
                          methodParameters: []
                        valueType: "java.nio.charset.Charset"
                        uuid: "resolveCharset_charset2"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      pattern:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: "pattern1"
                        valueType: "java.lang.String"
                        uuid: "resolve_string11"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                  valueType: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
                  uuid: "fileAppender_patternLayoutEncoder1"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "ch.qos.logback.core.rolling.RollingFileAppender"
            genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
            uuid: "fileAppender_rollingFileAppender1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "ch.qos.logback.core.Appender[]"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "apply_appender[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid214"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path5"
    testPathName: "applyWhenThisLogFileIsNotNullAndCaughtScanExceptionThrowsRuntimeException"
    constructorSignature: "<init>(org.springframework.boot.logging.LogFile) : void"
    modelFingerprint: "1E7955A4CE7BABE23013BDDA1E397290"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 5
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "1049010D9A0A28211CBD5C9DD1977F62"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "config"
      modelFingerprint: "C158457FD7DAB1DF8CB8FDB98EF98AD0"
      index: 2
      valueUuid: "apply_logbackConfigurator1"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "45E3B091082DF33B36D252D5C9F309F7"
      index: 3
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getConfigurationLock"
        parameters: []
        signature: "getConfigurationLock(): Object"
        returnValueUuid: "apply_object1"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "0D4F0FC1CDD381416EF565C7A48C62E4"
      index: 4
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "conversionRule"
        parameters:
        - name: "conversionWord"
          valueUuid: "uuid215"
        - name: "converterClass"
          valueUuid: "uuid216"
        signature: "conversionRule(String,Class): void"
        returnValueUuid: "defaults_void1"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "F427B77A47EDD4D5C40172432EB97D6B"
      index: 5
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "conversionRule"
        parameters:
        - name: "conversionWord"
          valueUuid: "uuid217"
        - name: "converterClass"
          valueUuid: "uuid218"
        signature: "conversionRule(String,Class): void"
        returnValueUuid: "defaults_void2"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "9950900ACFA2BE4A3325A49D8B07D341"
      index: 6
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "conversionRule"
        parameters:
        - name: "conversionWord"
          valueUuid: "uuid219"
        - name: "converterClass"
          valueUuid: "uuid220"
        signature: "conversionRule(String,Class): void"
        returnValueUuid: "defaults_void3"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "E51659B7A2FE1A6E5768D1CF5FFAF09D"
      index: 7
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "conversionRule"
        parameters:
        - name: "conversionWord"
          valueUuid: "uuid221"
        - name: "converterClass"
          valueUuid: "uuid222"
        signature: "conversionRule(String,Class): void"
        returnValueUuid: "defaults_void4"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4A35616081AB7F80AF462FC3B112459A"
      index: 8
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "defaults_loggerContext1"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 9
      idsTryCatchBlockSurrounding:
      - 340001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext1"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "FF22DAC545E66C307A5BC68C82779D87"
      index: 10
      idsTryCatchBlockSurrounding:
      - 340001
      valueUuid: "uuid224"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid223"
        - name: "pc1"
          valueUuid: "resolve_loggerContext1"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string1"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "084244F29A6C3EEE124EB2CE76CCA1D5"
      index: 11
      valueUuid: "defaults_loggerContext1"
      methodExercised:
        target: "ch.qos.logback.classic.LoggerContext"
        name: "putProperty"
        parameters:
        - name: "key"
          valueUuid: "uuid225"
        - name: "val"
          valueUuid: "resolve_string1"
        signature: "putProperty(String,String): void"
        returnValueUuid: "defaults_void5"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4A35616081AB7F80AF462FC3B112459A"
      index: 12
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "defaults_loggerContext2"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 13
      idsTryCatchBlockSurrounding:
      - 520001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext2"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "4938E11269384D6FAB0E399C59EED3AE"
      index: 14
      idsTryCatchBlockSurrounding:
      - 520001
      valueUuid: "uuid227"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid226"
        - name: "pc1"
          valueUuid: "resolve_loggerContext2"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string2"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "2D5C7DC02794FFE46C396DBCB9B28DD2"
      index: 15
      valueUuid: "defaults_loggerContext2"
      methodExercised:
        target: "ch.qos.logback.classic.LoggerContext"
        name: "putProperty"
        parameters:
        - name: "key"
          valueUuid: "uuid228"
        - name: "val"
          valueUuid: "resolve_string2"
        signature: "putProperty(String,String): void"
        returnValueUuid: "defaults_void6"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4A35616081AB7F80AF462FC3B112459A"
      index: 16
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "defaults_loggerContext3"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 17
      idsTryCatchBlockSurrounding:
      - 620001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext3"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "A5BEC749C014E2305E2F8205A11158E8"
      index: 18
      idsTryCatchBlockSurrounding:
      - 620001
      valueUuid: "uuid230"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid229"
        - name: "pc1"
          valueUuid: "resolve_loggerContext3"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string3"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "25EF47B5E525B6B89E30D7D01071B910"
      index: 19
      valueUuid: "defaults_loggerContext3"
      methodExercised:
        target: "ch.qos.logback.classic.LoggerContext"
        name: "putProperty"
        parameters:
        - name: "key"
          valueUuid: "uuid231"
        - name: "val"
          valueUuid: "resolve_string3"
        signature: "putProperty(String,String): void"
        returnValueUuid: "defaults_void7"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4A35616081AB7F80AF462FC3B112459A"
      index: 20
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "defaults_loggerContext4"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 21
      idsTryCatchBlockSurrounding:
      - 740001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext4"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "D4E059A59A9CC5FCB02BFBFAD818774C"
      index: 22
      idsTryCatchBlockSurrounding:
      - 740001
      valueUuid: "uuid233"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid232"
        - name: "pc1"
          valueUuid: "resolve_loggerContext4"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string4"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E29F485322B06502FF4F0E757AF34782"
      index: 23
      valueUuid: "defaults_loggerContext4"
      methodExercised:
        target: "ch.qos.logback.classic.LoggerContext"
        name: "putProperty"
        parameters:
        - name: "key"
          valueUuid: "uuid234"
        - name: "val"
          valueUuid: "resolve_string4"
        signature: "putProperty(String,String): void"
        returnValueUuid: "defaults_void8"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4A35616081AB7F80AF462FC3B112459A"
      index: 24
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "defaults_loggerContext5"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 25
      idsTryCatchBlockSurrounding:
      - 870001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext5"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "CF498DF647BB28EFEB220F217BE2A3A8"
      index: 26
      idsTryCatchBlockSurrounding:
      - 870001
      valueUuid: "uuid236"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid235"
        - name: "pc1"
          valueUuid: "resolve_loggerContext5"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string5"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A9EAB56CF3E6314D42C6AA0118323105"
      index: 27
      valueUuid: "defaults_loggerContext5"
      methodExercised:
        target: "ch.qos.logback.classic.LoggerContext"
        name: "putProperty"
        parameters:
        - name: "key"
          valueUuid: "uuid237"
        - name: "val"
          valueUuid: "resolve_string5"
        signature: "putProperty(String,String): void"
        returnValueUuid: "defaults_void9"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4A35616081AB7F80AF462FC3B112459A"
      index: 28
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "defaults_loggerContext6"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 29
      idsTryCatchBlockSurrounding:
      - 970001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext6"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "A23F01A3B1A7A87999C46667337C28E4"
      index: 30
      idsTryCatchBlockSurrounding:
      - 970001
      valueUuid: "uuid239"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid238"
        - name: "pc1"
          valueUuid: "resolve_loggerContext6"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string6"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "BA6062C918FD82EABD0F4C26D74288F0"
      index: 31
      valueUuid: "defaults_loggerContext6"
      methodExercised:
        target: "ch.qos.logback.classic.LoggerContext"
        name: "putProperty"
        parameters:
        - name: "key"
          valueUuid: "uuid240"
        - name: "val"
          valueUuid: "resolve_string6"
        signature: "putProperty(String,String): void"
        returnValueUuid: "defaults_void10"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "D2BC1C55758DD71AD08579EAD8FD083A"
      index: 32
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid241"
        - name: "level"
          valueUuid: "defaults_level1"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void11"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2AF34D185CFA4F1056ED0964F0720DF5"
      index: 33
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid242"
        - name: "level"
          valueUuid: "defaults_level1"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void12"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "D2BCECF630BE06922B3869FC5C4EB0C5"
      index: 34
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid243"
        - name: "level"
          valueUuid: "defaults_level2"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void13"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2225B7711737C9D2BE640C6763575B17"
      index: 35
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid244"
        - name: "level"
          valueUuid: "defaults_level2"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void14"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "054406675D6DD77CC515CC72CD0956CE"
      index: 36
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid245"
        - name: "level"
          valueUuid: "defaults_level2"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void15"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "F42D14F86FBC8AEAC8A25D2E9B709A08"
      index: 37
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid246"
        - name: "level"
          valueUuid: "defaults_level1"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void16"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "F18FE8F64D61A2F870D5DB75217F23AF"
      index: 38
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid247"
        - name: "level"
          valueUuid: "defaults_level2"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void17"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "06A6C87D8418936218F06494D3C9F1D6"
      index: 39
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "logger"
        parameters:
        - name: "name"
          valueUuid: "uuid248"
        - name: "level"
          valueUuid: "defaults_level2"
        signature: "logger(String,Level): void"
        returnValueUuid: "defaults_void18"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 40
      idsTryCatchBlockSurrounding:
      - 180001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext7"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "C9EA97FCC614B1341A34730A439B2FCB"
      index: 41
      idsTryCatchBlockSurrounding:
      - 180001
      valueUuid: "uuid250"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid249"
        - name: "pc1"
          valueUuid: "resolve_loggerContext7"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string7"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "filter"
      modelFingerprint: "BA14BF6DB1A15DD5D96598EAA24DF66D"
      index: 42
      valueUuid: "consoleAppender_thresholdFilter1"
      methodExercised:
        target: "filter"
        name: "setLevel"
        parameters:
        - name: "level"
          valueUuid: "resolve_string7"
        signature: "setLevel(String): void"
        returnValueUuid: "consoleAppender_void1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "filter"
      modelFingerprint: "129423D5E0EE8B1D914E3AB0AA3541DA"
      index: 43
      valueUuid: "consoleAppender_thresholdFilter1"
      methodExercised:
        target: "filter"
        name: "start"
        parameters: []
        signature: "start(): void"
        returnValueUuid: "consoleAppender_void2"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "appender"
      modelFingerprint: "909A8FDE1008BEB38862B62D77D95A49"
      index: 44
      valueUuid: "consoleAppender_consoleAppender1"
      methodExercised:
        target: "appender"
        name: "addFilter"
        parameters:
        - name: "newFilter"
          valueUuid: "consoleAppender_thresholdFilter1"
        signature: "addFilter(ThresholdFilter): void"
        returnValueUuid: "consoleAppender_void3"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 45
      idsTryCatchBlockSurrounding:
      - 410001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext8"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "4ED2DEBDCF100D6DB4BD3D0F7DE79CCA"
      index: 46
      idsTryCatchBlockSurrounding:
      - 410001
      valueUuid: "uuid252"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid251"
        - name: "pc1"
          valueUuid: "resolve_loggerContext8"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string8"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 47
      idsTryCatchBlockSurrounding:
      - 50001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext9"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "3B9CF130FAC52C6006B76A4BEE2AD8AC"
      index: 48
      idsTryCatchBlockSurrounding:
      - 50001
      valueUuid: "uuid254"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid253"
        - name: "pc1"
          valueUuid: "resolve_loggerContext9"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string9"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "D736DBD86C3C3158665CFD7D4D103A15"
      index: 49
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "start"
        parameters:
        - name: "lifeCycle"
          valueUuid: "consoleAppender_patternLayoutEncoder1"
        signature: "start(PatternLayoutEncoder): void"
        returnValueUuid: "consoleAppender_void6"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2F4E75BFF8E2F2A00C1657D872BD5477"
      index: 50
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "appender"
        parameters:
        - name: "name"
          valueUuid: "uuid255"
        - name: "appender"
          valueUuid: "consoleAppender_consoleAppender1"
        signature: "appender(String,ConsoleAppender): void"
        returnValueUuid: "consoleAppender_void8"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 51
      idsTryCatchBlockSurrounding:
      - 180001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext10"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "A70C3901DBE4C6C0038A79605EC827A7"
      index: 52
      idsTryCatchBlockSurrounding:
      - 180001
      valueUuid: "uuid257"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid256"
        - name: "pc1"
          valueUuid: "resolve_loggerContext10"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string10"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "filter"
      modelFingerprint: "014B6FD72128EA833B36A7C2F3A7C71C"
      index: 53
      valueUuid: "fileAppender_thresholdFilter1"
      methodExercised:
        target: "filter"
        name: "setLevel"
        parameters:
        - name: "level"
          valueUuid: "resolve_string10"
        signature: "setLevel(String): void"
        returnValueUuid: "fileAppender_void1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "filter"
      modelFingerprint: "129423D5E0EE8B1D914E3AB0AA3541DA"
      index: 54
      valueUuid: "fileAppender_thresholdFilter1"
      methodExercised:
        target: "filter"
        name: "start"
        parameters: []
        signature: "start(): void"
        returnValueUuid: "fileAppender_void2"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "appender"
      modelFingerprint: "BD0EAD4F1B79C1D332ABFDAA8DE16012"
      index: 55
      valueUuid: "fileAppender_rollingFileAppender1"
      methodExercised:
        target: "appender"
        name: "addFilter"
        parameters:
        - name: "newFilter"
          valueUuid: "fileAppender_thresholdFilter1"
        signature: "addFilter(ThresholdFilter): void"
        returnValueUuid: "fileAppender_void3"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 56
      idsTryCatchBlockSurrounding:
      - 410001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext11"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "A12AB01EB49D89972269975EACD722D4"
      index: 57
      idsTryCatchBlockSurrounding:
      - 410001
      valueUuid: "uuid259"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid258"
        - name: "pc1"
          valueUuid: "resolve_loggerContext11"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string11"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "370F24C3CA47B44F4116BDD41335436E"
      index: 58
      idsTryCatchBlockSurrounding:
      - 50001
      valueUuid: "apply_logbackConfigurator1"
      methodExercised:
        target: "config"
        name: "getContext"
        parameters: []
        signature: "getContext(): LoggerContext"
        returnValueUuid: "resolve_loggerContext12"
        access: 0
    - type: "STATIC"
      name: "OptionHelper"
      modelFingerprint: "A86E0FF70D10B095F9D620E87DA63D93"
      index: 59
      idsTryCatchBlockSurrounding:
      - 50001
      valueUuid: "uuid261"
      methodExercised:
        target: "ch.qos.logback.core.util.OptionHelper"
        name: "substVars"
        parameters:
        - name: "val"
          valueUuid: "uuid260"
        - name: "pc1"
          valueUuid: "resolve_loggerContext12"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        signature: "substVars(String,LoggerContext): String throws ch.qos.logback.core.spi.ScanException"
        returnValueUuid: "resolve_string12"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2B29AA80E79EED6D25879306FFC6D12D"
      index: 60
      valueUuid: "resolve_runtimeException1"
    uuid: "bdb5fd0b-6ac5-396a-9a66-213f51411d82"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "appender.addFilter(filter);"
      lineNumber: 108
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: appender - Method: addFilter"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.logback.DefaultLogbackConfiguration"
        parameters:
        - name: "logFile"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LogFile"
            uuid: "<init>_logFile1"
            fixed: false
            nameForMock: "<init>_logFile1"
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.logback.DefaultLogbackConfiguration"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "apply_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "clr"
      valueType: "java.lang.String"
      uuid: "uuid215"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.ColorConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uuid216"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "correlationId"
      valueType: "java.lang.String"
      uuid: "uuid217"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.CorrelationIdConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uuid218"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "wex"
      valueType: "java.lang.String"
      uuid: "uuid219"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uuid220"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void4"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "wEx"
      valueType: "java.lang.String"
      uuid: "uuid221"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uuid222"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid224"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd'T'HH:mm:ss.SSSXXX}}){faint}\
          \ %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint}\
          \ %clr(${LOGGED_APPLICATION_NAME:-}[%15.15t]){faint} %clr(${LOG_CORRELATION_PATTERN:-}){faint}%clr(%-40.40logger{39}){cyan}\
          \ %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"
      valueType: "java.lang.String"
      uuid: "uuid223"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void5"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "CONSOLE_LOG_PATTERN"
      valueType: "java.lang.String"
      uuid: "uuid225"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid227"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_CHARSET:-UTF-8}"
      valueType: "java.lang.String"
      uuid: "uuid226"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void6"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "CONSOLE_LOG_CHARSET"
      valueType: "java.lang.String"
      uuid: "uuid228"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid230"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_THRESHOLD:-TRACE}"
      valueType: "java.lang.String"
      uuid: "uuid229"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void7"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "CONSOLE_LOG_THRESHOLD"
      valueType: "java.lang.String"
      uuid: "uuid231"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid233"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_PATTERN:-%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd'T'HH:mm:ss.SSSXXX}}\
          \ ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- ${LOGGED_APPLICATION_NAME:-}[%t]\
          \ ${LOG_CORRELATION_PATTERN:-}%-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"
      valueType: "java.lang.String"
      uuid: "uuid232"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void8"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "FILE_LOG_PATTERN"
      valueType: "java.lang.String"
      uuid: "uuid234"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid236"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_CHARSET:-UTF-8}"
      valueType: "java.lang.String"
      uuid: "uuid235"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void9"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "FILE_LOG_CHARSET"
      valueType: "java.lang.String"
      uuid: "uuid237"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid239"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_THRESHOLD:-TRACE}"
      valueType: "java.lang.String"
      uuid: "uuid238"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "defaults_loggerContext6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void10"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "FILE_LOG_THRESHOLD"
      valueType: "java.lang.String"
      uuid: "uuid240"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void11"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.catalina.startup.DigesterFactory"
      valueType: "java.lang.String"
      uuid: "uuid241"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "ERROR"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void12"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.catalina.util.LifecycleBase"
      valueType: "java.lang.String"
      uuid: "uuid242"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "ERROR"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void13"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.coyote.http11.Http11NioProtocol"
      valueType: "java.lang.String"
      uuid: "uuid243"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void14"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.sshd.common.util.SecurityUtils"
      valueType: "java.lang.String"
      uuid: "uuid244"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void15"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.tomcat.util.net.NioSelectorPool"
      valueType: "java.lang.String"
      uuid: "uuid245"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void16"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.eclipse.jetty.util.component.AbstractLifeCycle"
      valueType: "java.lang.String"
      uuid: "uuid246"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "ERROR"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void17"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.hibernate.validator.internal.util.Version"
      valueType: "java.lang.String"
      uuid: "uuid247"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "defaults_void18"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.actuate.endpoint.jmx"
      valueType: "java.lang.String"
      uuid: "uuid248"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "defaults_level2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext7"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid250"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "resolve_string7"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_THRESHOLD}"
      valueType: "java.lang.String"
      uuid: "uuid249"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext7"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.classic.filter.ThresholdFilter"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "consoleAppender_thresholdFilter1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "consoleAppender_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "resolve_string7"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.classic.filter.ThresholdFilter"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "consoleAppender_thresholdFilter1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "consoleAppender_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.core.ConsoleAppender"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          encoder:
            sapientType: "OBJECT"
            content: !<new>
              target: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
              parameters: []
              privateConstructor: false
              createdByTargetCode: true
              propertiesMap:
                charset:
                  sapientType: "OBJECT"
                  content: !<static_method_return>
                    target: "java.nio.charset.Charset"
                    method: "defaultCharset"
                    methodParameters: []
                  valueType: "java.nio.charset.Charset"
                  uuid: "resolveCharset_charset1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                pattern:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pattern1"
                  valueType: "java.lang.String"
                  uuid: "resolve_string8"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
            uuid: "consoleAppender_patternLayoutEncoder1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "ch.qos.logback.core.ConsoleAppender"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "consoleAppender_consoleAppender1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "consoleAppender_void3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.classic.filter.ThresholdFilter"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "consoleAppender_thresholdFilter1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext8"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid252"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "pattern1"
      valueType: "java.lang.String"
      uuid: "resolve_string8"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_PATTERN}"
      valueType: "java.lang.String"
      uuid: "uuid251"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext8"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext9"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid254"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "C"
      valueType: "java.lang.String"
      uuid: "resolve_string9"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_CHARSET}"
      valueType: "java.lang.String"
      uuid: "uuid253"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext9"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "consoleAppender_void6"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          charset:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.nio.charset.Charset"
              method: "defaultCharset"
              methodParameters: []
            valueType: "java.nio.charset.Charset"
            uuid: "resolveCharset_charset1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          pattern:
            sapientType: "BASIC"
            content: !<regular>
              value: "pattern1"
            valueType: "java.lang.String"
            uuid: "resolve_string8"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
      uuid: "consoleAppender_patternLayoutEncoder1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "consoleAppender_void8"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "CONSOLE"
      valueType: "java.lang.String"
      uuid: "uuid255"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.core.ConsoleAppender"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          encoder:
            sapientType: "OBJECT"
            content: !<new>
              target: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
              parameters: []
              privateConstructor: false
              createdByTargetCode: true
              propertiesMap:
                charset:
                  sapientType: "OBJECT"
                  content: !<static_method_return>
                    target: "java.nio.charset.Charset"
                    method: "defaultCharset"
                    methodParameters: []
                  valueType: "java.nio.charset.Charset"
                  uuid: "resolveCharset_charset1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                pattern:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pattern1"
                  valueType: "java.lang.String"
                  uuid: "resolve_string8"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
            uuid: "consoleAppender_patternLayoutEncoder1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "ch.qos.logback.core.ConsoleAppender"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "consoleAppender_consoleAppender1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext10"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid257"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "resolve_string10"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_THRESHOLD}"
      valueType: "java.lang.String"
      uuid: "uuid256"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext10"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.classic.filter.ThresholdFilter"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "fileAppender_thresholdFilter1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "fileAppender_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "resolve_string10"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.classic.filter.ThresholdFilter"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "fileAppender_thresholdFilter1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "fileAppender_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.core.rolling.RollingFileAppender"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "ch.qos.logback.core.rolling.RollingFileAppender"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "fileAppender_rollingFileAppender1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "fileAppender_void3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.classic.filter.ThresholdFilter"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "fileAppender_thresholdFilter1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext11"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid259"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string11"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_PATTERN}"
      valueType: "java.lang.String"
      uuid: "uuid258"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext11"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "apply_logbackConfigurator1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext12"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "uuid261"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "resolve_string12"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_CHARSET}"
      valueType: "java.lang.String"
      uuid: "uuid260"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "resolve_loggerContext12"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.RuntimeException"
        parameters:
        - name: "cause"
          value:
            sapientType: "MOCK"
            valueType: "ch.qos.logback.core.spi.ScanException"
            uuid: "resolve_scanException1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.lang.RuntimeException"
      uuid: "resolve_runtimeException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
