---
modelFingerprint: "D308ADC1DC30403123EC7BF1239590C8"
targetClass:
  fullClassName: "org.springframework.boot.logging.logback.DefaultLogbackConfiguration"
methods:
- method:
    name: "apply"
    sourceCodeSignature: "void apply(LogbackConfigurator config)"
    returnType: "void"
    parameters:
    - name: "config"
      type: "org.springframework.boot.logging.logback.LogbackConfigurator"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
    instructionFingerprint: "5FB2538428646539B2FFA23D7232886C"
  paths:
  - pathId: "path3"
    testPathName: "applyWhenThisLogFileIsNull"
    constructorSignature: "<init>(org.springframework.boot.logging.LogFile) : void"
    modelFingerprint: "60AFEE9749AE6A3936F82D3EFD4713A1"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "8636450A6C881A69E60CBA42865896A0"
      valueUuid: "target"
    - type: "INPUT"
      name: "config"
      modelFingerprint: "28F9FF50E40C53CCD26F70499FD7696C"
      valueUuid: "config"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4D8EE7616D8051F928C04E6DBFB94E98"
      valueUuid: "config"
      methodExercised:
        expression: "getConfigurationLock():object"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "DA35AB26058E62C4CE3B0FCBE4766DC0"
      valueUuid: "config"
      methodExercised:
        expression: "conversionRule(conversionWord:uniqueUuid1,converterClass:uniqueUuid2):void"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4F8051C6C13058E10B743159982A07D8"
      valueUuid: "config"
      methodExercised:
        expression: "conversionRule(conversionWord:uniqueUuid3,converterClass:uniqueUuid4):void2"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "224652537256D20999A5CACA5E8A54CD"
      valueUuid: "config"
      methodExercised:
        expression: "conversionRule(conversionWord:uniqueUuid5,converterClass:uniqueUuid6):void3"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "7E05ABB9EA0A755FD243BA33889599CB"
      valueUuid: "config"
      methodExercised:
        expression: "conversionRule(conversionWord:uniqueUuid7,converterClass:uniqueUuid8):void4"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2A3B580430BCE675EFF2BB58C622D26A"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext2"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "A46DE6DB8EE919B385DDF6B348C32280"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid9,pc1:loggerContext2):string"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "1C2F87A660F9E874F969772601683783"
      valueUuid: "loggerContext"
      methodExercised:
        expression: "putProperty(key:uniqueUuid10,val:string):void5"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2A3B580430BCE675EFF2BB58C622D26A"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext3"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext4"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "2162E89D5F08B4AEB28A89D6EF66E96C"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid11,pc1:loggerContext4):string4"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "178425FFCE04FC5DB30F83AF4389AC42"
      valueUuid: "loggerContext3"
      methodExercised:
        expression: "putProperty(key:uniqueUuid12,val:string4):void6"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2A3B580430BCE675EFF2BB58C622D26A"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext5"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext6"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "0261869ABA49A90B9CFDAD0910B68E5D"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid13,pc1:loggerContext6):string5"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "FA5EAC4AD737F43CC2A034EC5B7A6DE9"
      valueUuid: "loggerContext5"
      methodExercised:
        expression: "putProperty(key:uniqueUuid14,val:string5):void7"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2A3B580430BCE675EFF2BB58C622D26A"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext7"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext8"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "40F421C303BD2B8084AD414DD2FF7E38"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid15,pc1:loggerContext8):string6"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E7E4719DD7512C82A9DB79BFA1339172"
      valueUuid: "loggerContext7"
      methodExercised:
        expression: "putProperty(key:uniqueUuid16,val:string6):void8"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2A3B580430BCE675EFF2BB58C622D26A"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext9"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext10"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "D29529473BC89FC8D8C96F99588EC458"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid17,pc1:loggerContext10):string8"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A16F1760508BD3D3506B1EE874BBEC69"
      valueUuid: "loggerContext9"
      methodExercised:
        expression: "putProperty(key:uniqueUuid18,val:string8):void9"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2A3B580430BCE675EFF2BB58C622D26A"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext11"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext12"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "32F7CF3D567DD495A7ADF35C0AEC348D"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid19,pc1:loggerContext12):string9"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A8AC1221B87B76AAC405292972005063"
      valueUuid: "loggerContext11"
      methodExercised:
        expression: "putProperty(key:uniqueUuid20,val:string9):void10"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4024D644CC931B64463538714B673822"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid21,level:level):void11"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "6812AE3B64649E0D288573497708BC46"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid22,level:level):void12"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "250A6BDA988959B1B2E64A21D9AD9208"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid23,level:level2):void13"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "0F61E5B62454A7F9E558EFD848B3EEED"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid24,level:level2):void14"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "D5035B56DF3723F38D7D4C5A7169F92E"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid25,level:level2):void15"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "32D7FF23950E0DA9D562BE809C63E01C"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid26,level:level):void16"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "AAF29E833910E72AB7BAA1950BD4707C"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid27,level:level2):void17"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "46255692C941B6EE9C2C20A8A0915041"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid28,level:level2):void18"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext13"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "410E7CAABECFC7A00F78BD660D037D73"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid29,pc1:loggerContext13):string10"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "filter"
      modelFingerprint: "88DF0D4A5AE7276F8DD48CF369AB210E"
      valueUuid: "thresholdFilter"
      methodExercised:
        expression: "setLevel(level:string10):void19"
    - type: "LOCAL_VARIABLE"
      name: "filter"
      modelFingerprint: "F4139EAF2E262509F444A4516DCDCF63"
      valueUuid: "thresholdFilter"
      methodExercised:
        expression: "start():void20"
    - type: "LOCAL_VARIABLE"
      name: "appender"
      modelFingerprint: "8DEE60BC649C95B1569DA75A956D5851"
      valueUuid: "consoleAppender"
      methodExercised:
        expression: "addFilter(newFilter:thresholdFilter):void21"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext14"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "60CC989679D70D5BEB6BA8464DCF8A14"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid30,pc1:loggerContext14):string11"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext15"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "C51C15E016397394920188768CC67E74"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid31,pc1:loggerContext15):string12"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "D064A311F0111C50D76725EF55F08239"
      valueUuid: "config"
      methodExercised:
        expression: "start(lifeCycle:patternLayoutEncoder):void24"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "21B9DAF704D0B152648F02467C9B8FDC"
      valueUuid: "config"
      methodExercised:
        expression: "appender(name:uniqueUuid32,appender:consoleAppender):void26"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "ADA07A4B699F5E42D8BCB81A9161E927"
      valueUuid: "config"
      methodExercised:
        expression: "root(level:level3,appenders:appenderArray):void27"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "appender.addFilter(filter);"
      lineNumber: 108
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: appender - Method: addFilter"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.logback.DefaultLogbackConfiguration"
        parameters:
        - name: "logFile"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.logging.LogFile"
            uuid: "logFile"
            fixed: true
      valueType: "org.springframework.boot.logging.logback.DefaultLogbackConfiguration"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "clr"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.ColorConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "correlationId"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.CorrelationIdConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "wex"
      valueType: "java.lang.String"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uniqueUuid6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "wEx"
      valueType: "java.lang.String"
      uuid: "uniqueUuid7"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uniqueUuid8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext2"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd'T'HH:mm:ss.SSSXXX}}){faint}\
          \ %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint}\
          \ %clr(${LOGGED_APPLICATION_NAME:-}[%15.15t]){faint} %clr(${LOG_CORRELATION_PATTERN:-}){faint}%clr(%-40.40logger{39}){cyan}\
          \ %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid9"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext2"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "CONSOLE_LOG_PATTERN"
      valueType: "java.lang.String"
      uuid: "uniqueUuid10"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext4"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_CHARSET:-UTF-8}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid11"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext4"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "CONSOLE_LOG_CHARSET"
      valueType: "java.lang.String"
      uuid: "uniqueUuid12"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext6"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_THRESHOLD:-TRACE}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid13"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext6"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext5"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "CONSOLE_LOG_THRESHOLD"
      valueType: "java.lang.String"
      uuid: "uniqueUuid14"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext8"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_PATTERN:-%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd'T'HH:mm:ss.SSSXXX}}\
          \ ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- ${LOGGED_APPLICATION_NAME:-}[%t]\
          \ ${LOG_CORRELATION_PATTERN:-}%-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid15"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext8"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext7"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "FILE_LOG_PATTERN"
      valueType: "java.lang.String"
      uuid: "uniqueUuid16"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext9"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext10"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string8"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_CHARSET:-UTF-8}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid17"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext10"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext9"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "FILE_LOG_CHARSET"
      valueType: "java.lang.String"
      uuid: "uniqueUuid18"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string8"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext11"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext12"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string9"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_THRESHOLD:-TRACE}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid19"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext12"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext11"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "FILE_LOG_THRESHOLD"
      valueType: "java.lang.String"
      uuid: "uniqueUuid20"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string9"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void11"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.catalina.startup.DigesterFactory"
      valueType: "java.lang.String"
      uuid: "uniqueUuid21"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "ERROR"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void12"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.catalina.util.LifecycleBase"
      valueType: "java.lang.String"
      uuid: "uniqueUuid22"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "ERROR"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void13"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.coyote.http11.Http11NioProtocol"
      valueType: "java.lang.String"
      uuid: "uniqueUuid23"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void14"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.sshd.common.util.SecurityUtils"
      valueType: "java.lang.String"
      uuid: "uniqueUuid24"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void15"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.tomcat.util.net.NioSelectorPool"
      valueType: "java.lang.String"
      uuid: "uniqueUuid25"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void16"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.eclipse.jetty.util.component.AbstractLifeCycle"
      valueType: "java.lang.String"
      uuid: "uniqueUuid26"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "ERROR"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void17"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.hibernate.validator.internal.util.Version"
      valueType: "java.lang.String"
      uuid: "uniqueUuid27"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void18"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.actuate.endpoint.jmx"
      valueType: "java.lang.String"
      uuid: "uniqueUuid28"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext13"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string10"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_THRESHOLD}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid29"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext13"
    - sapientType: "ANY"
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "thresholdFilter"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void19"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string10"
    - sapientType: "ANY"
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "thresholdFilter"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void20"
      fixed: true
    - sapientType: "ANY"
      valueType: "ch.qos.logback.core.ConsoleAppender"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "consoleAppender"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void21"
      fixed: true
    - sapientType: "ANY"
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "thresholdFilter"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext14"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "pattern1"
      valueType: "java.lang.String"
      uuid: "string11"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_PATTERN}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid30"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext14"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext15"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string12"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_CHARSET}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid31"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext15"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void24"
      fixed: true
    - sapientType: "ANY"
      valueType: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
      uuid: "patternLayoutEncoder"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void26"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "CONSOLE"
      valueType: "java.lang.String"
      uuid: "uniqueUuid32"
      fixed: true
    - sapientType: "ANY"
      valueType: "ch.qos.logback.core.ConsoleAppender"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "consoleAppender"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void27"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "INFO"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level3"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "OBJECT"
            content: !<new>
              target: "ch.qos.logback.core.ConsoleAppender"
              parameters: []
              propertiesMap:
                encoder:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
                    parameters: []
                    propertiesMap:
                      charset:
                        sapientType: "OBJECT"
                        content: !<static_method_return>
                          target: "java.nio.charset.Charset"
                          method: "defaultCharset"
                          methodParameters: []
                        valueType: "java.nio.charset.Charset"
                        uuid: "charset2"
                      pattern:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: "pattern1"
                        valueType: "java.lang.String"
                        uuid: "string11"
                  valueType: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
                  uuid: "patternLayoutEncoder"
                  fixed: true
            valueType: "ch.qos.logback.core.ConsoleAppender"
            genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
            uuid: "consoleAppender"
            fixed: true
      valueType: "ch.qos.logback.core.Appender[]"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "appenderArray"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 60
      expression: "this.logFile != null"
      range: "(60,8)-(60,27)"
      evaluatedAs: false
  - pathId: "path4"
    testPathName: "applyWhenCaughtScanExceptionThrowsRuntimeException"
    constructorSignature: "<init>(org.springframework.boot.logging.LogFile) : void"
    modelFingerprint: "5554C6DED6CB07E52157EB80D7240779"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F6D499B6773F81C8E14C00514E3FF686"
      valueUuid: "target"
    - type: "INPUT"
      name: "config"
      modelFingerprint: "28F9FF50E40C53CCD26F70499FD7696C"
      valueUuid: "config"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4D8EE7616D8051F928C04E6DBFB94E98"
      valueUuid: "config"
      methodExercised:
        expression: "getConfigurationLock():object"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "DA35AB26058E62C4CE3B0FCBE4766DC0"
      valueUuid: "config"
      methodExercised:
        expression: "conversionRule(conversionWord:uniqueUuid1,converterClass:uniqueUuid2):void"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4F8051C6C13058E10B743159982A07D8"
      valueUuid: "config"
      methodExercised:
        expression: "conversionRule(conversionWord:uniqueUuid3,converterClass:uniqueUuid4):void2"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "224652537256D20999A5CACA5E8A54CD"
      valueUuid: "config"
      methodExercised:
        expression: "conversionRule(conversionWord:uniqueUuid5,converterClass:uniqueUuid6):void3"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "7E05ABB9EA0A755FD243BA33889599CB"
      valueUuid: "config"
      methodExercised:
        expression: "conversionRule(conversionWord:uniqueUuid7,converterClass:uniqueUuid8):void4"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext2"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "8E59F06AD11AFB8A945BF2C0EF9D005D"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid9,pc1:loggerContext2):string"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "6B9C78ECA76F4D93628B7E2A5D8DC03F"
      valueUuid: "runtimeException"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.logback.DefaultLogbackConfiguration"
        parameters:
        - name: "logFile"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LogFile"
            uuid: "logFile"
      valueType: "org.springframework.boot.logging.logback.DefaultLogbackConfiguration"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "clr"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.ColorConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "correlationId"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.CorrelationIdConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "wex"
      valueType: "java.lang.String"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uniqueUuid6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "wEx"
      valueType: "java.lang.String"
      uuid: "uniqueUuid7"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uniqueUuid8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext2"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "EXCEPTION"
      valueType: "ch.qos.logback.core.spi.ScanException"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd'T'HH:mm:ss.SSSXXX}}){faint}\
          \ %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint}\
          \ %clr(${LOGGED_APPLICATION_NAME:-}[%15.15t]){faint} %clr(${LOG_CORRELATION_PATTERN:-}){faint}%clr(%-40.40logger{39}){cyan}\
          \ %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid9"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext2"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.RuntimeException"
        parameters:
        - name: "cause"
          value:
            sapientType: "EXCEPTION"
            valueType: "ch.qos.logback.core.spi.ScanException"
            uuid: "string"
      valueType: "java.lang.RuntimeException"
      uuid: "runtimeException"
      fixed: true
    branches:
    - lineNumber: 170
      expression: "catch-exception (ScanException)"
      range: "(170,3)-(170,25)"
      evaluatedAs: true
      internalMethodName: "resolve"
    catchBlockExercised:
      idExternalInstruction: 34
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
  - pathId: "path6"
    testPathName: "applyWhenCaughtScanException2ThrowsRuntimeException"
    constructorSignature: "<init>(org.springframework.boot.logging.LogFile) : void"
    modelFingerprint: "9F9DF40F4BA2CA2C3A00463383C664C1"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F6D499B6773F81C8E14C00514E3FF686"
      valueUuid: "target"
    - type: "INPUT"
      name: "config"
      modelFingerprint: "28F9FF50E40C53CCD26F70499FD7696C"
      valueUuid: "config"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4D8EE7616D8051F928C04E6DBFB94E98"
      valueUuid: "config"
      methodExercised:
        expression: "getConfigurationLock():object"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "DA35AB26058E62C4CE3B0FCBE4766DC0"
      valueUuid: "config"
      methodExercised:
        expression: "conversionRule(conversionWord:uniqueUuid42,converterClass:uniqueUuid43):void"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4F8051C6C13058E10B743159982A07D8"
      valueUuid: "config"
      methodExercised:
        expression: "conversionRule(conversionWord:uniqueUuid44,converterClass:uniqueUuid45):void2"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "224652537256D20999A5CACA5E8A54CD"
      valueUuid: "config"
      methodExercised:
        expression: "conversionRule(conversionWord:uniqueUuid46,converterClass:uniqueUuid47):void3"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "7E05ABB9EA0A755FD243BA33889599CB"
      valueUuid: "config"
      methodExercised:
        expression: "conversionRule(conversionWord:uniqueUuid48,converterClass:uniqueUuid49):void4"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2A3B580430BCE675EFF2BB58C622D26A"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext2"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "A46DE6DB8EE919B385DDF6B348C32280"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid50,pc1:loggerContext2):string"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "1C2F87A660F9E874F969772601683783"
      valueUuid: "loggerContext"
      methodExercised:
        expression: "putProperty(key:uniqueUuid51,val:string):void5"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2A3B580430BCE675EFF2BB58C622D26A"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext3"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext4"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "2162E89D5F08B4AEB28A89D6EF66E96C"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid52,pc1:loggerContext4):string4"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "178425FFCE04FC5DB30F83AF4389AC42"
      valueUuid: "loggerContext3"
      methodExercised:
        expression: "putProperty(key:uniqueUuid53,val:string4):void6"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2A3B580430BCE675EFF2BB58C622D26A"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext5"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext6"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "0261869ABA49A90B9CFDAD0910B68E5D"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid54,pc1:loggerContext6):string5"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "FA5EAC4AD737F43CC2A034EC5B7A6DE9"
      valueUuid: "loggerContext5"
      methodExercised:
        expression: "putProperty(key:uniqueUuid55,val:string5):void7"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2A3B580430BCE675EFF2BB58C622D26A"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext7"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext8"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "40F421C303BD2B8084AD414DD2FF7E38"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid56,pc1:loggerContext8):string6"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E7E4719DD7512C82A9DB79BFA1339172"
      valueUuid: "loggerContext7"
      methodExercised:
        expression: "putProperty(key:uniqueUuid57,val:string6):void8"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2A3B580430BCE675EFF2BB58C622D26A"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext9"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext10"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "D29529473BC89FC8D8C96F99588EC458"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid58,pc1:loggerContext10):string8"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A16F1760508BD3D3506B1EE874BBEC69"
      valueUuid: "loggerContext9"
      methodExercised:
        expression: "putProperty(key:uniqueUuid59,val:string8):void9"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2A3B580430BCE675EFF2BB58C622D26A"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext11"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext12"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "32F7CF3D567DD495A7ADF35C0AEC348D"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid60,pc1:loggerContext12):string9"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A8AC1221B87B76AAC405292972005063"
      valueUuid: "loggerContext11"
      methodExercised:
        expression: "putProperty(key:uniqueUuid61,val:string9):void10"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4024D644CC931B64463538714B673822"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid62,level:level):void11"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "6812AE3B64649E0D288573497708BC46"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid63,level:level):void12"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "250A6BDA988959B1B2E64A21D9AD9208"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid64,level:level2):void13"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "0F61E5B62454A7F9E558EFD848B3EEED"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid65,level:level2):void14"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "D5035B56DF3723F38D7D4C5A7169F92E"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid66,level:level2):void15"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "32D7FF23950E0DA9D562BE809C63E01C"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid67,level:level):void16"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "AAF29E833910E72AB7BAA1950BD4707C"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid68,level:level2):void17"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "46255692C941B6EE9C2C20A8A0915041"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid69,level:level2):void18"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext13"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "410E7CAABECFC7A00F78BD660D037D73"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid70,pc1:loggerContext13):string10"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "filter"
      modelFingerprint: "88DF0D4A5AE7276F8DD48CF369AB210E"
      valueUuid: "thresholdFilter"
      methodExercised:
        expression: "setLevel(level:string10):void19"
    - type: "LOCAL_VARIABLE"
      name: "filter"
      modelFingerprint: "F4139EAF2E262509F444A4516DCDCF63"
      valueUuid: "thresholdFilter"
      methodExercised:
        expression: "start():void20"
    - type: "LOCAL_VARIABLE"
      name: "appender"
      modelFingerprint: "8DEE60BC649C95B1569DA75A956D5851"
      valueUuid: "consoleAppender"
      methodExercised:
        expression: "addFilter(newFilter:thresholdFilter):void21"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext14"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "60CC989679D70D5BEB6BA8464DCF8A14"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid71,pc1:loggerContext14):string11"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext15"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "1A0A1F5280C4908DD205E9102A25CE26"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid72,pc1:loggerContext15):string12"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "89F415D8C4A810C15CA46F84AA61D8FD"
      valueUuid: "runtimeException"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "appender.addFilter(filter);"
      lineNumber: 108
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: appender - Method: addFilter"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.logback.DefaultLogbackConfiguration"
        parameters:
        - name: "logFile"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LogFile"
            uuid: "logFile"
      valueType: "org.springframework.boot.logging.logback.DefaultLogbackConfiguration"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "clr"
      valueType: "java.lang.String"
      uuid: "uniqueUuid42"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.ColorConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uniqueUuid43"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "correlationId"
      valueType: "java.lang.String"
      uuid: "uniqueUuid44"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.CorrelationIdConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uniqueUuid45"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "wex"
      valueType: "java.lang.String"
      uuid: "uniqueUuid46"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uniqueUuid47"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "wEx"
      valueType: "java.lang.String"
      uuid: "uniqueUuid48"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uniqueUuid49"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext2"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd'T'HH:mm:ss.SSSXXX}}){faint}\
          \ %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint}\
          \ %clr(${LOGGED_APPLICATION_NAME:-}[%15.15t]){faint} %clr(${LOG_CORRELATION_PATTERN:-}){faint}%clr(%-40.40logger{39}){cyan}\
          \ %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid50"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext2"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "CONSOLE_LOG_PATTERN"
      valueType: "java.lang.String"
      uuid: "uniqueUuid51"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext4"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_CHARSET:-UTF-8}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid52"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext4"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "CONSOLE_LOG_CHARSET"
      valueType: "java.lang.String"
      uuid: "uniqueUuid53"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext6"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_THRESHOLD:-TRACE}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid54"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext6"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext5"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "CONSOLE_LOG_THRESHOLD"
      valueType: "java.lang.String"
      uuid: "uniqueUuid55"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext8"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_PATTERN:-%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd'T'HH:mm:ss.SSSXXX}}\
          \ ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- ${LOGGED_APPLICATION_NAME:-}[%t]\
          \ ${LOG_CORRELATION_PATTERN:-}%-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid56"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext8"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext7"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "FILE_LOG_PATTERN"
      valueType: "java.lang.String"
      uuid: "uniqueUuid57"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext9"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext10"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string8"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_CHARSET:-UTF-8}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid58"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext10"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext9"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "FILE_LOG_CHARSET"
      valueType: "java.lang.String"
      uuid: "uniqueUuid59"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string8"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext11"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext12"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string9"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_THRESHOLD:-TRACE}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid60"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext12"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext11"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "FILE_LOG_THRESHOLD"
      valueType: "java.lang.String"
      uuid: "uniqueUuid61"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string9"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void11"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.catalina.startup.DigesterFactory"
      valueType: "java.lang.String"
      uuid: "uniqueUuid62"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "ERROR"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void12"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.catalina.util.LifecycleBase"
      valueType: "java.lang.String"
      uuid: "uniqueUuid63"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "ERROR"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void13"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.coyote.http11.Http11NioProtocol"
      valueType: "java.lang.String"
      uuid: "uniqueUuid64"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void14"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.sshd.common.util.SecurityUtils"
      valueType: "java.lang.String"
      uuid: "uniqueUuid65"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void15"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.tomcat.util.net.NioSelectorPool"
      valueType: "java.lang.String"
      uuid: "uniqueUuid66"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void16"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.eclipse.jetty.util.component.AbstractLifeCycle"
      valueType: "java.lang.String"
      uuid: "uniqueUuid67"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "ERROR"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void17"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.hibernate.validator.internal.util.Version"
      valueType: "java.lang.String"
      uuid: "uniqueUuid68"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void18"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.actuate.endpoint.jmx"
      valueType: "java.lang.String"
      uuid: "uniqueUuid69"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext13"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string10"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_THRESHOLD}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid70"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext13"
    - sapientType: "ANY"
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "thresholdFilter"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void19"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string10"
    - sapientType: "ANY"
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "thresholdFilter"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void20"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.core.ConsoleAppender"
        parameters: []
      valueType: "ch.qos.logback.core.ConsoleAppender"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "consoleAppender"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void21"
      fixed: true
    - sapientType: "ANY"
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "thresholdFilter"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext14"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string11"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_PATTERN}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid71"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext14"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext15"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string12"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_CHARSET}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid72"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext15"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.RuntimeException"
        parameters:
        - name: "cause"
          value:
            sapientType: "MOCK"
            valueType: "ch.qos.logback.core.spi.ScanException"
            uuid: "scanException"
      valueType: "java.lang.RuntimeException"
      uuid: "runtimeException"
      fixed: true
    branches:
    - lineNumber: 170
      expression: "catch-exception (ScanException)"
      range: "(170,3)-(170,25)"
      evaluatedAs: true
      internalMethodName: "resolve"
    catchBlockExercised:
      idExternalInstruction: 5
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
  - pathId: "path1"
    testPathName: "applyWhenBooleanParseBooleanResolveConfigVal"
    constructorSignature: "<init>(org.springframework.boot.logging.LogFile) : void"
    modelFingerprint: "DADF5E53CFE3AC1B682FAB47E7C7C35B"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "552B7B4847AECAF4490F59D636FC443A"
      valueUuid: "target"
    - type: "INPUT"
      name: "config"
      modelFingerprint: "28F9FF50E40C53CCD26F70499FD7696C"
      valueUuid: "config"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4D8EE7616D8051F928C04E6DBFB94E98"
      valueUuid: "config"
      methodExercised:
        expression: "getConfigurationLock():object"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "DA35AB26058E62C4CE3B0FCBE4766DC0"
      valueUuid: "config"
      methodExercised:
        expression: "conversionRule(conversionWord:uniqueUuid73,converterClass:uniqueUuid74):void"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4F8051C6C13058E10B743159982A07D8"
      valueUuid: "config"
      methodExercised:
        expression: "conversionRule(conversionWord:uniqueUuid75,converterClass:uniqueUuid76):void2"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "224652537256D20999A5CACA5E8A54CD"
      valueUuid: "config"
      methodExercised:
        expression: "conversionRule(conversionWord:uniqueUuid77,converterClass:uniqueUuid78):void3"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "7E05ABB9EA0A755FD243BA33889599CB"
      valueUuid: "config"
      methodExercised:
        expression: "conversionRule(conversionWord:uniqueUuid79,converterClass:uniqueUuid80):void4"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2A3B580430BCE675EFF2BB58C622D26A"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext2"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "A46DE6DB8EE919B385DDF6B348C32280"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid81,pc1:loggerContext2):string"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "1C2F87A660F9E874F969772601683783"
      valueUuid: "loggerContext"
      methodExercised:
        expression: "putProperty(key:uniqueUuid82,val:string):void5"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2A3B580430BCE675EFF2BB58C622D26A"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext3"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext4"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "2162E89D5F08B4AEB28A89D6EF66E96C"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid83,pc1:loggerContext4):string4"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "178425FFCE04FC5DB30F83AF4389AC42"
      valueUuid: "loggerContext3"
      methodExercised:
        expression: "putProperty(key:uniqueUuid84,val:string4):void6"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2A3B580430BCE675EFF2BB58C622D26A"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext5"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext6"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "0261869ABA49A90B9CFDAD0910B68E5D"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid85,pc1:loggerContext6):string5"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "FA5EAC4AD737F43CC2A034EC5B7A6DE9"
      valueUuid: "loggerContext5"
      methodExercised:
        expression: "putProperty(key:uniqueUuid86,val:string5):void7"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2A3B580430BCE675EFF2BB58C622D26A"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext7"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext8"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "40F421C303BD2B8084AD414DD2FF7E38"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid87,pc1:loggerContext8):string6"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E7E4719DD7512C82A9DB79BFA1339172"
      valueUuid: "loggerContext7"
      methodExercised:
        expression: "putProperty(key:uniqueUuid88,val:string6):void8"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2A3B580430BCE675EFF2BB58C622D26A"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext9"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext10"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "D29529473BC89FC8D8C96F99588EC458"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid89,pc1:loggerContext10):string8"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A16F1760508BD3D3506B1EE874BBEC69"
      valueUuid: "loggerContext9"
      methodExercised:
        expression: "putProperty(key:uniqueUuid90,val:string8):void9"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2A3B580430BCE675EFF2BB58C622D26A"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext11"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext12"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "32F7CF3D567DD495A7ADF35C0AEC348D"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid91,pc1:loggerContext12):string9"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A8AC1221B87B76AAC405292972005063"
      valueUuid: "loggerContext11"
      methodExercised:
        expression: "putProperty(key:uniqueUuid92,val:string9):void10"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4024D644CC931B64463538714B673822"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid93,level:level):void11"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "6812AE3B64649E0D288573497708BC46"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid94,level:level):void12"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "250A6BDA988959B1B2E64A21D9AD9208"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid95,level:level2):void13"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "0F61E5B62454A7F9E558EFD848B3EEED"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid96,level:level2):void14"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "D5035B56DF3723F38D7D4C5A7169F92E"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid97,level:level2):void15"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "32D7FF23950E0DA9D562BE809C63E01C"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid98,level:level):void16"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "AAF29E833910E72AB7BAA1950BD4707C"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid99,level:level2):void17"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "46255692C941B6EE9C2C20A8A0915041"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid100,level:level2):void18"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext13"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "AC3D14EC923D750D40CDC9A1DF781B69"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid101,pc1:loggerContext13):string10"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "filter"
      modelFingerprint: "BBFED3F62D638909C2A98D6D5A7DA0DF"
      valueUuid: "thresholdFilter"
      methodExercised:
        expression: "setLevel(level:string10):void19"
    - type: "LOCAL_VARIABLE"
      name: "filter"
      modelFingerprint: "F4139EAF2E262509F444A4516DCDCF63"
      valueUuid: "thresholdFilter"
      methodExercised:
        expression: "start():void20"
    - type: "LOCAL_VARIABLE"
      name: "appender"
      modelFingerprint: "8DEE60BC649C95B1569DA75A956D5851"
      valueUuid: "consoleAppender"
      methodExercised:
        expression: "addFilter(newFilter:thresholdFilter):void21"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext14"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "60CC989679D70D5BEB6BA8464DCF8A14"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid102,pc1:loggerContext14):string11"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext15"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "1A0A1F5280C4908DD205E9102A25CE26"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid103,pc1:loggerContext15):string12"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "D064A311F0111C50D76725EF55F08239"
      valueUuid: "config"
      methodExercised:
        expression: "start(lifeCycle:patternLayoutEncoder):void24"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "21B9DAF704D0B152648F02467C9B8FDC"
      valueUuid: "config"
      methodExercised:
        expression: "appender(name:uniqueUuid104,appender:consoleAppender):void26"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext16"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "1FF860A196A6313E1D7540038F40159A"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid105,pc1:loggerContext16):string14"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "filter"
      modelFingerprint: "BBFED3F62D638909C2A98D6D5A7DA0DF"
      valueUuid: "thresholdFilter2"
      methodExercised:
        expression: "setLevel(level:string14):void27"
    - type: "LOCAL_VARIABLE"
      name: "filter"
      modelFingerprint: "F4139EAF2E262509F444A4516DCDCF63"
      valueUuid: "thresholdFilter2"
      methodExercised:
        expression: "start():void28"
    - type: "LOCAL_VARIABLE"
      name: "appender"
      modelFingerprint: "DFEBB6507E7C2277DB428C7737479D96"
      valueUuid: "rollingFileAppender"
      methodExercised:
        expression: "addFilter(newFilter:thresholdFilter2):void29"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext17"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "BFD421252D47AA0BB7D9F79F87DC371C"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid106,pc1:loggerContext17):string15"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext18"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "64953258C4F2FDB4F0407DDEC67B4C91"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid107,pc1:loggerContext18):string16"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "D064A311F0111C50D76725EF55F08239"
      valueUuid: "config"
      methodExercised:
        expression: "start(lifeCycle:patternLayoutEncoder2):void33"
    - type: "LOCAL_VARIABLE"
      name: "appender"
      modelFingerprint: "1DF3F1975286EEB7FD6DD2DC0CF6A7DF"
      valueUuid: "rollingFileAppender"
      methodExercised:
        expression: "setFile(file:string13):void34"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext19"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext20"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "15D70FAB6640F1E09E23AFA314078995"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid108,pc1:loggerContext20):string17"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "rollingPolicy"
      modelFingerprint: "D8A840FC73B26626B08FFD389D8B047F"
      valueUuid: "sizeAndTimeBasedRollingPolicy"
      methodExercised:
        expression: "setFileNamePattern(fnp:string17):void36"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext21"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "B3A5B1C54E5264F4B55D696B61774C11"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid109,pc1:loggerContext21):string18"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext22"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "C0EDA726A4410E2C9CA3656F8A500EDA"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid110,pc1:loggerContext22):string19"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "STATIC"
      name: "FileSize.class"
      modelFingerprint: "B41405E49BCE51341CF9FCC83A219390"
      valueUuid: "FileSize.class"
      methodExercised:
        expression: "valueOf(fileSizeStr:string19):fileSize"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext23"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "453C912C3755722DB802E1195CF7AB2A"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid111,pc1:loggerContext23):string20"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "STATIC"
      name: "FileSize.class"
      modelFingerprint: "B41405E49BCE51341CF9FCC83A219390"
      valueUuid: "FileSize.class"
      methodExercised:
        expression: "valueOf(fileSizeStr:string20):fileSize2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext24"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "E0DFA220D2119BB0B7CDA98CED461631"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid112,pc1:loggerContext24):string21"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "rollingPolicy"
      modelFingerprint: "B4DA0FB938DA81D66173291BD27E4287"
      valueUuid: "sizeAndTimeBasedRollingPolicy"
      methodExercised:
        expression: "setParent(appender:rollingFileAppender):void42"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "EBFD7857CB064B144DBA205C721E8310"
      valueUuid: "config"
      methodExercised:
        expression: "start(lifeCycle:sizeAndTimeBasedRollingPolicy):void43"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "19B99629D8FA6571F48AFBA9B54DA1C5"
      valueUuid: "config"
      methodExercised:
        expression: "appender(name:uniqueUuid113,appender:rollingFileAppender):void44"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "DCB9F40D26A64E1055E96352118C7D7D"
      valueUuid: "config"
      methodExercised:
        expression: "root(level:level3,appenders:appenderArray):void45"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "appender.addFilter(filter);"
      lineNumber: 108
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: appender - Method: addFilter"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.logback.DefaultLogbackConfiguration"
        parameters:
        - name: "logFile"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LogFile"
            uuid: "logFile"
            nameForMock: "logFile"
      valueType: "org.springframework.boot.logging.logback.DefaultLogbackConfiguration"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "clr"
      valueType: "java.lang.String"
      uuid: "uniqueUuid73"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.ColorConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uniqueUuid74"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "correlationId"
      valueType: "java.lang.String"
      uuid: "uniqueUuid75"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.CorrelationIdConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uniqueUuid76"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "wex"
      valueType: "java.lang.String"
      uuid: "uniqueUuid77"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uniqueUuid78"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "wEx"
      valueType: "java.lang.String"
      uuid: "uniqueUuid79"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uniqueUuid80"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext2"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd'T'HH:mm:ss.SSSXXX}}){faint}\
          \ %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint}\
          \ %clr(${LOGGED_APPLICATION_NAME:-}[%15.15t]){faint} %clr(${LOG_CORRELATION_PATTERN:-}){faint}%clr(%-40.40logger{39}){cyan}\
          \ %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid81"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext2"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "CONSOLE_LOG_PATTERN"
      valueType: "java.lang.String"
      uuid: "uniqueUuid82"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext4"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_CHARSET:-UTF-8}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid83"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext4"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "CONSOLE_LOG_CHARSET"
      valueType: "java.lang.String"
      uuid: "uniqueUuid84"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext6"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_THRESHOLD:-TRACE}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid85"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext6"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext5"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "CONSOLE_LOG_THRESHOLD"
      valueType: "java.lang.String"
      uuid: "uniqueUuid86"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext8"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_PATTERN:-%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd'T'HH:mm:ss.SSSXXX}}\
          \ ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- ${LOGGED_APPLICATION_NAME:-}[%t]\
          \ ${LOG_CORRELATION_PATTERN:-}%-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid87"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext8"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext7"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "FILE_LOG_PATTERN"
      valueType: "java.lang.String"
      uuid: "uniqueUuid88"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext9"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext10"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string8"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_CHARSET:-UTF-8}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid89"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext10"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext9"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "FILE_LOG_CHARSET"
      valueType: "java.lang.String"
      uuid: "uniqueUuid90"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string8"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext11"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext12"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string9"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_THRESHOLD:-TRACE}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid91"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext12"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext11"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "FILE_LOG_THRESHOLD"
      valueType: "java.lang.String"
      uuid: "uniqueUuid92"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string9"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void11"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.catalina.startup.DigesterFactory"
      valueType: "java.lang.String"
      uuid: "uniqueUuid93"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "ERROR"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void12"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.catalina.util.LifecycleBase"
      valueType: "java.lang.String"
      uuid: "uniqueUuid94"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "ERROR"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void13"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.coyote.http11.Http11NioProtocol"
      valueType: "java.lang.String"
      uuid: "uniqueUuid95"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void14"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.sshd.common.util.SecurityUtils"
      valueType: "java.lang.String"
      uuid: "uniqueUuid96"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void15"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.tomcat.util.net.NioSelectorPool"
      valueType: "java.lang.String"
      uuid: "uniqueUuid97"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void16"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.eclipse.jetty.util.component.AbstractLifeCycle"
      valueType: "java.lang.String"
      uuid: "uniqueUuid98"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "ERROR"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void17"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.hibernate.validator.internal.util.Version"
      valueType: "java.lang.String"
      uuid: "uniqueUuid99"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void18"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.actuate.endpoint.jmx"
      valueType: "java.lang.String"
      uuid: "uniqueUuid100"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext13"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string10"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_THRESHOLD}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid101"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext13"
    - sapientType: "ANY"
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "thresholdFilter"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void19"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string10"
    - sapientType: "ANY"
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "thresholdFilter"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void20"
      fixed: true
    - sapientType: "ANY"
      valueType: "ch.qos.logback.core.ConsoleAppender"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "consoleAppender"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void21"
      fixed: true
    - sapientType: "ANY"
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "thresholdFilter"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext14"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "pattern1"
      valueType: "java.lang.String"
      uuid: "string11"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_PATTERN}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid102"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext14"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext15"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string12"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_CHARSET}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid103"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext15"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void24"
      fixed: true
    - sapientType: "ANY"
      valueType: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
      uuid: "patternLayoutEncoder"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void26"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "CONSOLE"
      valueType: "java.lang.String"
      uuid: "uniqueUuid104"
      fixed: true
    - sapientType: "ANY"
      valueType: "ch.qos.logback.core.ConsoleAppender"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "consoleAppender"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext16"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string14"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_THRESHOLD}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid105"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext16"
    - sapientType: "ANY"
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "thresholdFilter2"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void27"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string14"
    - sapientType: "ANY"
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "thresholdFilter2"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void28"
      fixed: true
    - sapientType: "ANY"
      valueType: "ch.qos.logback.core.rolling.RollingFileAppender"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "rollingFileAppender"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void29"
      fixed: true
    - sapientType: "ANY"
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "thresholdFilter2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext17"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "pattern1"
      valueType: "java.lang.String"
      uuid: "string15"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_PATTERN}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid106"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext17"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext18"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string16"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_CHARSET}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid107"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext18"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void33"
      fixed: true
    - sapientType: "ANY"
      valueType: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
      uuid: "patternLayoutEncoder2"
      fixed: true
    - sapientType: "ANY"
      valueType: "ch.qos.logback.core.rolling.RollingFileAppender"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "rollingFileAppender"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void34"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "file1"
      valueType: "java.lang.String"
      uuid: "string13"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext19"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext20"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string17"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${LOGBACK_ROLLINGPOLICY_FILE_NAME_PATTERN:-${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid108"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext20"
    - sapientType: "ANY"
      valueType: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "sizeAndTimeBasedRollingPolicy"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void36"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string17"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext21"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string18"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${LOGBACK_ROLLINGPOLICY_CLEAN_HISTORY_ON_START:-false}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid109"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext21"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext22"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string19"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${LOGBACK_ROLLINGPOLICY_MAX_FILE_SIZE:-10MB}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid110"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext22"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.FileSize"
      uuid: "FileSize.class"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.FileSize"
      uuid: "fileSize"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string19"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext23"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string20"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${LOGBACK_ROLLINGPOLICY_TOTAL_SIZE_CAP:-0}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid111"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext23"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.FileSize"
      uuid: "FileSize.class"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.FileSize"
      uuid: "fileSize2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string20"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext24"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string21"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${LOGBACK_ROLLINGPOLICY_MAX_HISTORY:-7}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid112"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext24"
    - sapientType: "ANY"
      valueType: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "sizeAndTimeBasedRollingPolicy"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void42"
      fixed: true
    - sapientType: "ANY"
      valueType: "ch.qos.logback.core.rolling.RollingFileAppender"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "rollingFileAppender"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void43"
      fixed: true
    - sapientType: "ANY"
      valueType: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "sizeAndTimeBasedRollingPolicy"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void44"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "FILE"
      valueType: "java.lang.String"
      uuid: "uniqueUuid113"
      fixed: true
    - sapientType: "ANY"
      valueType: "ch.qos.logback.core.rolling.RollingFileAppender"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "rollingFileAppender"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void45"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "INFO"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level3"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "OBJECT"
            content: !<new>
              target: "ch.qos.logback.core.ConsoleAppender"
              parameters: []
              propertiesMap:
                encoder:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
                    parameters: []
                    propertiesMap:
                      charset:
                        sapientType: "OBJECT"
                        content: !<static_method_return>
                          target: "java.nio.charset.Charset"
                          method: "defaultCharset"
                          methodParameters: []
                        valueType: "java.nio.charset.Charset"
                        uuid: "charset2"
                      pattern:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: "pattern1"
                        valueType: "java.lang.String"
                        uuid: "string11"
                  valueType: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
                  uuid: "patternLayoutEncoder"
                  fixed: true
            valueType: "ch.qos.logback.core.ConsoleAppender"
            genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
            uuid: "consoleAppender"
            fixed: true
          1:
            sapientType: "OBJECT"
            content: !<new>
              target: "ch.qos.logback.core.rolling.RollingFileAppender"
              parameters: []
              propertiesMap:
                rollingPolicy:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
                    parameters: []
                    propertiesMap:
                      context:
                        sapientType: "MOCK"
                        valueType: "ch.qos.logback.classic.LoggerContext"
                        uuid: "loggerContext19"
                      maxHistory:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 0
                        valueType: "int"
                        uuid: "int1"
                      totalSizeCap:
                        sapientType: "MOCK"
                        valueType: "ch.qos.logback.core.util.FileSize"
                        uuid: "fileSize2"
                      maxFileSize:
                        sapientType: "MOCK"
                        valueType: "ch.qos.logback.core.util.FileSize"
                        uuid: "fileSize"
                      cleanHistoryOnStart:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: true
                        valueType: "boolean"
                        uuid: "boolean1"
                        fixed: true
                  valueType: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
                  genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
                  uuid: "sizeAndTimeBasedRollingPolicy"
                  fixed: true
                encoder:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
                    parameters: []
                    propertiesMap:
                      charset:
                        sapientType: "OBJECT"
                        content: !<static_method_return>
                          target: "java.nio.charset.Charset"
                          method: "defaultCharset"
                          methodParameters: []
                        valueType: "java.nio.charset.Charset"
                        uuid: "charset3"
                      pattern:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: "pattern1"
                        valueType: "java.lang.String"
                        uuid: "string15"
                  valueType: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
                  uuid: "patternLayoutEncoder2"
                  fixed: true
            valueType: "ch.qos.logback.core.rolling.RollingFileAppender"
            genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
            uuid: "rollingFileAppender"
            fixed: true
      valueType: "ch.qos.logback.core.Appender[]"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "appenderArray"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 60
      expression: "this.logFile != null"
      range: "(60,8)-(60,27)"
      evaluatedAs: true
    - lineNumber: 151
      expression: "Boolean.parseBoolean(resolve(config, val))"
      range: "(151,10)-(151,51)"
      evaluatedAs: true
      internalMethodName: "resolveBoolean"
  - pathId: "path2"
    testPathName: "applyWhenBooleanNotParseBooleanResolveConfigVal"
    constructorSignature: "<init>(org.springframework.boot.logging.LogFile) : void"
    modelFingerprint: "1CC625FE34FD3B0D099D15E506C6F50A"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "552B7B4847AECAF4490F59D636FC443A"
      valueUuid: "target"
    - type: "INPUT"
      name: "config"
      modelFingerprint: "28F9FF50E40C53CCD26F70499FD7696C"
      valueUuid: "config"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4D8EE7616D8051F928C04E6DBFB94E98"
      valueUuid: "config"
      methodExercised:
        expression: "getConfigurationLock():object"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "DA35AB26058E62C4CE3B0FCBE4766DC0"
      valueUuid: "config"
      methodExercised:
        expression: "conversionRule(conversionWord:uniqueUuid114,converterClass:uniqueUuid115):void"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4F8051C6C13058E10B743159982A07D8"
      valueUuid: "config"
      methodExercised:
        expression: "conversionRule(conversionWord:uniqueUuid116,converterClass:uniqueUuid117):void2"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "224652537256D20999A5CACA5E8A54CD"
      valueUuid: "config"
      methodExercised:
        expression: "conversionRule(conversionWord:uniqueUuid118,converterClass:uniqueUuid119):void3"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "7E05ABB9EA0A755FD243BA33889599CB"
      valueUuid: "config"
      methodExercised:
        expression: "conversionRule(conversionWord:uniqueUuid120,converterClass:uniqueUuid121):void4"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2A3B580430BCE675EFF2BB58C622D26A"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext2"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "A46DE6DB8EE919B385DDF6B348C32280"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid122,pc1:loggerContext2):string"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "1C2F87A660F9E874F969772601683783"
      valueUuid: "loggerContext"
      methodExercised:
        expression: "putProperty(key:uniqueUuid123,val:string):void5"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2A3B580430BCE675EFF2BB58C622D26A"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext3"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext4"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "2162E89D5F08B4AEB28A89D6EF66E96C"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid124,pc1:loggerContext4):string4"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "178425FFCE04FC5DB30F83AF4389AC42"
      valueUuid: "loggerContext3"
      methodExercised:
        expression: "putProperty(key:uniqueUuid125,val:string4):void6"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2A3B580430BCE675EFF2BB58C622D26A"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext5"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext6"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "0261869ABA49A90B9CFDAD0910B68E5D"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid126,pc1:loggerContext6):string5"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "FA5EAC4AD737F43CC2A034EC5B7A6DE9"
      valueUuid: "loggerContext5"
      methodExercised:
        expression: "putProperty(key:uniqueUuid127,val:string5):void7"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2A3B580430BCE675EFF2BB58C622D26A"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext7"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext8"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "40F421C303BD2B8084AD414DD2FF7E38"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid128,pc1:loggerContext8):string6"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E7E4719DD7512C82A9DB79BFA1339172"
      valueUuid: "loggerContext7"
      methodExercised:
        expression: "putProperty(key:uniqueUuid129,val:string6):void8"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2A3B580430BCE675EFF2BB58C622D26A"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext9"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext10"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "D29529473BC89FC8D8C96F99588EC458"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid130,pc1:loggerContext10):string8"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A16F1760508BD3D3506B1EE874BBEC69"
      valueUuid: "loggerContext9"
      methodExercised:
        expression: "putProperty(key:uniqueUuid131,val:string8):void9"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2A3B580430BCE675EFF2BB58C622D26A"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext11"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext12"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "32F7CF3D567DD495A7ADF35C0AEC348D"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid132,pc1:loggerContext12):string9"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A8AC1221B87B76AAC405292972005063"
      valueUuid: "loggerContext11"
      methodExercised:
        expression: "putProperty(key:uniqueUuid133,val:string9):void10"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4024D644CC931B64463538714B673822"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid134,level:level):void11"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "6812AE3B64649E0D288573497708BC46"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid135,level:level):void12"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "250A6BDA988959B1B2E64A21D9AD9208"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid136,level:level2):void13"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "0F61E5B62454A7F9E558EFD848B3EEED"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid137,level:level2):void14"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "D5035B56DF3723F38D7D4C5A7169F92E"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid138,level:level2):void15"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "32D7FF23950E0DA9D562BE809C63E01C"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid139,level:level):void16"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "AAF29E833910E72AB7BAA1950BD4707C"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid140,level:level2):void17"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "46255692C941B6EE9C2C20A8A0915041"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid141,level:level2):void18"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext13"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "410E7CAABECFC7A00F78BD660D037D73"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid142,pc1:loggerContext13):string10"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "filter"
      modelFingerprint: "88DF0D4A5AE7276F8DD48CF369AB210E"
      valueUuid: "thresholdFilter"
      methodExercised:
        expression: "setLevel(level:string10):void19"
    - type: "LOCAL_VARIABLE"
      name: "filter"
      modelFingerprint: "F4139EAF2E262509F444A4516DCDCF63"
      valueUuid: "thresholdFilter"
      methodExercised:
        expression: "start():void20"
    - type: "LOCAL_VARIABLE"
      name: "appender"
      modelFingerprint: "8DEE60BC649C95B1569DA75A956D5851"
      valueUuid: "consoleAppender"
      methodExercised:
        expression: "addFilter(newFilter:thresholdFilter):void21"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext14"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "60CC989679D70D5BEB6BA8464DCF8A14"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid143,pc1:loggerContext14):string11"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext15"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "C51C15E016397394920188768CC67E74"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid144,pc1:loggerContext15):string12"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "D064A311F0111C50D76725EF55F08239"
      valueUuid: "config"
      methodExercised:
        expression: "start(lifeCycle:patternLayoutEncoder):void24"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "21B9DAF704D0B152648F02467C9B8FDC"
      valueUuid: "config"
      methodExercised:
        expression: "appender(name:uniqueUuid145,appender:consoleAppender):void26"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext16"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "220220D20CE24504F53F70010DC1A086"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid146,pc1:loggerContext16):string14"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "filter"
      modelFingerprint: "9B0C01C698E2002EA9971D730498D96C"
      valueUuid: "thresholdFilter2"
      methodExercised:
        expression: "setLevel(level:string14):void27"
    - type: "LOCAL_VARIABLE"
      name: "filter"
      modelFingerprint: "F4139EAF2E262509F444A4516DCDCF63"
      valueUuid: "thresholdFilter2"
      methodExercised:
        expression: "start():void28"
    - type: "LOCAL_VARIABLE"
      name: "appender"
      modelFingerprint: "DFEBB6507E7C2277DB428C7737479D96"
      valueUuid: "rollingFileAppender"
      methodExercised:
        expression: "addFilter(newFilter:thresholdFilter2):void29"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext17"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "BFD421252D47AA0BB7D9F79F87DC371C"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid147,pc1:loggerContext17):string15"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext18"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "BA73874D545DB26E634E6DD7E0D3201F"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid148,pc1:loggerContext18):string16"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "D064A311F0111C50D76725EF55F08239"
      valueUuid: "config"
      methodExercised:
        expression: "start(lifeCycle:patternLayoutEncoder2):void33"
    - type: "LOCAL_VARIABLE"
      name: "appender"
      modelFingerprint: "8384A5DD17477568F13F5A6770B2F998"
      valueUuid: "rollingFileAppender"
      methodExercised:
        expression: "setFile(file:string13):void34"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext19"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext20"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "660D0210F19105788C94BA0E23EE4845"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid149,pc1:loggerContext20):string17"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "rollingPolicy"
      modelFingerprint: "24C85398C79F723D5E62BA52E956D72E"
      valueUuid: "sizeAndTimeBasedRollingPolicy"
      methodExercised:
        expression: "setFileNamePattern(fnp:string17):void36"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext21"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "B6369BD49514A6036BAB3D47052FE02C"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid150,pc1:loggerContext21):string18"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext22"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "C0EDA726A4410E2C9CA3656F8A500EDA"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid151,pc1:loggerContext22):string19"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "STATIC"
      name: "FileSize.class"
      modelFingerprint: "B41405E49BCE51341CF9FCC83A219390"
      valueUuid: "FileSize.class"
      methodExercised:
        expression: "valueOf(fileSizeStr:string19):fileSize"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext23"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "453C912C3755722DB802E1195CF7AB2A"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid152,pc1:loggerContext23):string20"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "STATIC"
      name: "FileSize.class"
      modelFingerprint: "B41405E49BCE51341CF9FCC83A219390"
      valueUuid: "FileSize.class"
      methodExercised:
        expression: "valueOf(fileSizeStr:string20):fileSize2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext24"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "EF071D64911BE3CC8CF004A8999C1ABF"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid153,pc1:loggerContext24):string21"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "rollingPolicy"
      modelFingerprint: "B4DA0FB938DA81D66173291BD27E4287"
      valueUuid: "sizeAndTimeBasedRollingPolicy"
      methodExercised:
        expression: "setParent(appender:rollingFileAppender):void42"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "EBFD7857CB064B144DBA205C721E8310"
      valueUuid: "config"
      methodExercised:
        expression: "start(lifeCycle:sizeAndTimeBasedRollingPolicy):void43"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "19B99629D8FA6571F48AFBA9B54DA1C5"
      valueUuid: "config"
      methodExercised:
        expression: "appender(name:uniqueUuid154,appender:rollingFileAppender):void44"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "DCB9F40D26A64E1055E96352118C7D7D"
      valueUuid: "config"
      methodExercised:
        expression: "root(level:level3,appenders:appenderArray):void45"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "appender.addFilter(filter);"
      lineNumber: 108
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: appender - Method: addFilter"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.logback.DefaultLogbackConfiguration"
        parameters:
        - name: "logFile"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LogFile"
            uuid: "logFile"
            nameForMock: "logFile"
      valueType: "org.springframework.boot.logging.logback.DefaultLogbackConfiguration"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "clr"
      valueType: "java.lang.String"
      uuid: "uniqueUuid114"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.ColorConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uniqueUuid115"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "correlationId"
      valueType: "java.lang.String"
      uuid: "uniqueUuid116"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.CorrelationIdConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uniqueUuid117"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "wex"
      valueType: "java.lang.String"
      uuid: "uniqueUuid118"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uniqueUuid119"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "wEx"
      valueType: "java.lang.String"
      uuid: "uniqueUuid120"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uniqueUuid121"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext2"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd'T'HH:mm:ss.SSSXXX}}){faint}\
          \ %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint}\
          \ %clr(${LOGGED_APPLICATION_NAME:-}[%15.15t]){faint} %clr(${LOG_CORRELATION_PATTERN:-}){faint}%clr(%-40.40logger{39}){cyan}\
          \ %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid122"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext2"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "CONSOLE_LOG_PATTERN"
      valueType: "java.lang.String"
      uuid: "uniqueUuid123"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext4"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_CHARSET:-UTF-8}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid124"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext4"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "CONSOLE_LOG_CHARSET"
      valueType: "java.lang.String"
      uuid: "uniqueUuid125"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext6"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_THRESHOLD:-TRACE}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid126"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext6"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext5"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "CONSOLE_LOG_THRESHOLD"
      valueType: "java.lang.String"
      uuid: "uniqueUuid127"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext8"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_PATTERN:-%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd'T'HH:mm:ss.SSSXXX}}\
          \ ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- ${LOGGED_APPLICATION_NAME:-}[%t]\
          \ ${LOG_CORRELATION_PATTERN:-}%-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid128"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext8"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext7"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "FILE_LOG_PATTERN"
      valueType: "java.lang.String"
      uuid: "uniqueUuid129"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext9"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext10"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string8"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_CHARSET:-UTF-8}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid130"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext10"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext9"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "FILE_LOG_CHARSET"
      valueType: "java.lang.String"
      uuid: "uniqueUuid131"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string8"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext11"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext12"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string9"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_THRESHOLD:-TRACE}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid132"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext12"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext11"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "FILE_LOG_THRESHOLD"
      valueType: "java.lang.String"
      uuid: "uniqueUuid133"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string9"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void11"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.catalina.startup.DigesterFactory"
      valueType: "java.lang.String"
      uuid: "uniqueUuid134"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "ERROR"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void12"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.catalina.util.LifecycleBase"
      valueType: "java.lang.String"
      uuid: "uniqueUuid135"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "ERROR"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void13"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.coyote.http11.Http11NioProtocol"
      valueType: "java.lang.String"
      uuid: "uniqueUuid136"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void14"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.sshd.common.util.SecurityUtils"
      valueType: "java.lang.String"
      uuid: "uniqueUuid137"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void15"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.tomcat.util.net.NioSelectorPool"
      valueType: "java.lang.String"
      uuid: "uniqueUuid138"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void16"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.eclipse.jetty.util.component.AbstractLifeCycle"
      valueType: "java.lang.String"
      uuid: "uniqueUuid139"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "ERROR"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void17"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.hibernate.validator.internal.util.Version"
      valueType: "java.lang.String"
      uuid: "uniqueUuid140"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void18"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.actuate.endpoint.jmx"
      valueType: "java.lang.String"
      uuid: "uniqueUuid141"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext13"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string10"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_THRESHOLD}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid142"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext13"
    - sapientType: "ANY"
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "thresholdFilter"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void19"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string10"
    - sapientType: "ANY"
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "thresholdFilter"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void20"
      fixed: true
    - sapientType: "ANY"
      valueType: "ch.qos.logback.core.ConsoleAppender"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "consoleAppender"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void21"
      fixed: true
    - sapientType: "ANY"
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "thresholdFilter"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext14"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "pattern1"
      valueType: "java.lang.String"
      uuid: "string11"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_PATTERN}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid143"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext14"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext15"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string12"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_CHARSET}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid144"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext15"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void24"
      fixed: true
    - sapientType: "ANY"
      valueType: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
      uuid: "patternLayoutEncoder"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void26"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "CONSOLE"
      valueType: "java.lang.String"
      uuid: "uniqueUuid145"
      fixed: true
    - sapientType: "ANY"
      valueType: "ch.qos.logback.core.ConsoleAppender"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "consoleAppender"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext16"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "C"
      valueType: "java.lang.String"
      uuid: "string14"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_THRESHOLD}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid146"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext16"
    - sapientType: "ANY"
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "thresholdFilter2"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void27"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "C"
      valueType: "java.lang.String"
      uuid: "string14"
    - sapientType: "ANY"
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "thresholdFilter2"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void28"
      fixed: true
    - sapientType: "ANY"
      valueType: "ch.qos.logback.core.rolling.RollingFileAppender"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "rollingFileAppender"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void29"
      fixed: true
    - sapientType: "ANY"
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "thresholdFilter2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext17"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "pattern1"
      valueType: "java.lang.String"
      uuid: "string15"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_PATTERN}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid147"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext17"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext18"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "D"
      valueType: "java.lang.String"
      uuid: "string16"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_CHARSET}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid148"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext18"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void33"
      fixed: true
    - sapientType: "ANY"
      valueType: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
      uuid: "patternLayoutEncoder2"
      fixed: true
    - sapientType: "ANY"
      valueType: "ch.qos.logback.core.rolling.RollingFileAppender"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "rollingFileAppender"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void34"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "logFile"
      valueType: "java.lang.String"
      uuid: "string13"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext19"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext20"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "E"
      valueType: "java.lang.String"
      uuid: "string17"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${LOGBACK_ROLLINGPOLICY_FILE_NAME_PATTERN:-${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid149"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext20"
    - sapientType: "ANY"
      valueType: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "sizeAndTimeBasedRollingPolicy"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void36"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "E"
      valueType: "java.lang.String"
      uuid: "string17"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext21"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "G"
      valueType: "java.lang.String"
      uuid: "string18"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${LOGBACK_ROLLINGPOLICY_CLEAN_HISTORY_ON_START:-false}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid150"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext21"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext22"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string19"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${LOGBACK_ROLLINGPOLICY_MAX_FILE_SIZE:-10MB}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid151"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext22"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.FileSize"
      uuid: "FileSize.class"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.FileSize"
      uuid: "fileSize"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string19"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext23"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string20"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${LOGBACK_ROLLINGPOLICY_TOTAL_SIZE_CAP:-0}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid152"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext23"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.FileSize"
      uuid: "FileSize.class"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.FileSize"
      uuid: "fileSize2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string20"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext24"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "0"
      valueType: "java.lang.String"
      uuid: "string21"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${LOGBACK_ROLLINGPOLICY_MAX_HISTORY:-7}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid153"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext24"
    - sapientType: "ANY"
      valueType: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "sizeAndTimeBasedRollingPolicy"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void42"
      fixed: true
    - sapientType: "ANY"
      valueType: "ch.qos.logback.core.rolling.RollingFileAppender"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "rollingFileAppender"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void43"
      fixed: true
    - sapientType: "ANY"
      valueType: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "sizeAndTimeBasedRollingPolicy"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void44"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "FILE"
      valueType: "java.lang.String"
      uuid: "uniqueUuid154"
      fixed: true
    - sapientType: "ANY"
      valueType: "ch.qos.logback.core.rolling.RollingFileAppender"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "rollingFileAppender"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void45"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "INFO"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level3"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "OBJECT"
            content: !<new>
              target: "ch.qos.logback.core.ConsoleAppender"
              parameters: []
              propertiesMap:
                encoder:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
                    parameters: []
                    propertiesMap:
                      charset:
                        sapientType: "OBJECT"
                        content: !<static_method_return>
                          target: "java.nio.charset.Charset"
                          method: "defaultCharset"
                          methodParameters: []
                        valueType: "java.nio.charset.Charset"
                        uuid: "charset2"
                      pattern:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: "pattern1"
                        valueType: "java.lang.String"
                        uuid: "string11"
                  valueType: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
                  uuid: "patternLayoutEncoder"
                  fixed: true
            valueType: "ch.qos.logback.core.ConsoleAppender"
            genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
            uuid: "consoleAppender"
            fixed: true
          1:
            sapientType: "OBJECT"
            content: !<new>
              target: "ch.qos.logback.core.rolling.RollingFileAppender"
              parameters: []
              propertiesMap:
                rollingPolicy:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
                    parameters: []
                    propertiesMap:
                      context:
                        sapientType: "MOCK"
                        valueType: "ch.qos.logback.classic.LoggerContext"
                        uuid: "loggerContext19"
                      maxHistory:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 0
                        valueType: "int"
                        uuid: "int1"
                      totalSizeCap:
                        sapientType: "MOCK"
                        valueType: "ch.qos.logback.core.util.FileSize"
                        uuid: "fileSize2"
                      maxFileSize:
                        sapientType: "MOCK"
                        valueType: "ch.qos.logback.core.util.FileSize"
                        uuid: "fileSize"
                      cleanHistoryOnStart:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: false
                        valueType: "boolean"
                        uuid: "boolean1"
                        fixed: true
                  valueType: "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"
                  genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
                  uuid: "sizeAndTimeBasedRollingPolicy"
                  fixed: true
                encoder:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
                    parameters: []
                    propertiesMap:
                      charset:
                        sapientType: "OBJECT"
                        content: !<static_method_return>
                          target: "java.nio.charset.Charset"
                          method: "defaultCharset"
                          methodParameters: []
                        valueType: "java.nio.charset.Charset"
                        uuid: "charset3"
                      pattern:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: "pattern1"
                        valueType: "java.lang.String"
                        uuid: "string15"
                  valueType: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
                  uuid: "patternLayoutEncoder2"
                  fixed: true
            valueType: "ch.qos.logback.core.rolling.RollingFileAppender"
            genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
            uuid: "rollingFileAppender"
            fixed: true
      valueType: "ch.qos.logback.core.Appender[]"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "appenderArray"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 60
      expression: "this.logFile != null"
      range: "(60,8)-(60,27)"
      evaluatedAs: true
    - lineNumber: 151
      expression: "Boolean.parseBoolean(resolve(config, val))"
      range: "(151,10)-(151,51)"
      evaluatedAs: false
      internalMethodName: "resolveBoolean"
  - pathId: "path5"
    testPathName: "applyWhenThisLogFileIsNotNullAndCaughtScanExceptionThrowsRuntimeException"
    constructorSignature: "<init>(org.springframework.boot.logging.LogFile) : void"
    modelFingerprint: "9733459C1C7644A29A243A23BCDD11F6"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "552B7B4847AECAF4490F59D636FC443A"
      valueUuid: "target"
    - type: "INPUT"
      name: "config"
      modelFingerprint: "28F9FF50E40C53CCD26F70499FD7696C"
      valueUuid: "config"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4D8EE7616D8051F928C04E6DBFB94E98"
      valueUuid: "config"
      methodExercised:
        expression: "getConfigurationLock():object"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "DA35AB26058E62C4CE3B0FCBE4766DC0"
      valueUuid: "config"
      methodExercised:
        expression: "conversionRule(conversionWord:uniqueUuid155,converterClass:uniqueUuid156):void"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4F8051C6C13058E10B743159982A07D8"
      valueUuid: "config"
      methodExercised:
        expression: "conversionRule(conversionWord:uniqueUuid157,converterClass:uniqueUuid158):void2"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "224652537256D20999A5CACA5E8A54CD"
      valueUuid: "config"
      methodExercised:
        expression: "conversionRule(conversionWord:uniqueUuid159,converterClass:uniqueUuid160):void3"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "7E05ABB9EA0A755FD243BA33889599CB"
      valueUuid: "config"
      methodExercised:
        expression: "conversionRule(conversionWord:uniqueUuid161,converterClass:uniqueUuid162):void4"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2A3B580430BCE675EFF2BB58C622D26A"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext2"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "A46DE6DB8EE919B385DDF6B348C32280"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid163,pc1:loggerContext2):string"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "1C2F87A660F9E874F969772601683783"
      valueUuid: "loggerContext"
      methodExercised:
        expression: "putProperty(key:uniqueUuid164,val:string):void5"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2A3B580430BCE675EFF2BB58C622D26A"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext3"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext4"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "2162E89D5F08B4AEB28A89D6EF66E96C"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid165,pc1:loggerContext4):string4"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "178425FFCE04FC5DB30F83AF4389AC42"
      valueUuid: "loggerContext3"
      methodExercised:
        expression: "putProperty(key:uniqueUuid166,val:string4):void6"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2A3B580430BCE675EFF2BB58C622D26A"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext5"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext6"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "0261869ABA49A90B9CFDAD0910B68E5D"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid167,pc1:loggerContext6):string5"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "FA5EAC4AD737F43CC2A034EC5B7A6DE9"
      valueUuid: "loggerContext5"
      methodExercised:
        expression: "putProperty(key:uniqueUuid168,val:string5):void7"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2A3B580430BCE675EFF2BB58C622D26A"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext7"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext8"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "40F421C303BD2B8084AD414DD2FF7E38"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid169,pc1:loggerContext8):string6"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E7E4719DD7512C82A9DB79BFA1339172"
      valueUuid: "loggerContext7"
      methodExercised:
        expression: "putProperty(key:uniqueUuid170,val:string6):void8"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2A3B580430BCE675EFF2BB58C622D26A"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext9"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext10"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "D29529473BC89FC8D8C96F99588EC458"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid171,pc1:loggerContext10):string8"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A16F1760508BD3D3506B1EE874BBEC69"
      valueUuid: "loggerContext9"
      methodExercised:
        expression: "putProperty(key:uniqueUuid172,val:string8):void9"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "2A3B580430BCE675EFF2BB58C622D26A"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext11"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext12"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "32F7CF3D567DD495A7ADF35C0AEC348D"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid173,pc1:loggerContext12):string9"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A8AC1221B87B76AAC405292972005063"
      valueUuid: "loggerContext11"
      methodExercised:
        expression: "putProperty(key:uniqueUuid174,val:string9):void10"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "4024D644CC931B64463538714B673822"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid175,level:level):void11"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "6812AE3B64649E0D288573497708BC46"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid176,level:level):void12"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "250A6BDA988959B1B2E64A21D9AD9208"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid177,level:level2):void13"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "0F61E5B62454A7F9E558EFD848B3EEED"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid178,level:level2):void14"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "D5035B56DF3723F38D7D4C5A7169F92E"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid179,level:level2):void15"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "32D7FF23950E0DA9D562BE809C63E01C"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid180,level:level):void16"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "AAF29E833910E72AB7BAA1950BD4707C"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid181,level:level2):void17"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "46255692C941B6EE9C2C20A8A0915041"
      valueUuid: "config"
      methodExercised:
        expression: "logger(name:uniqueUuid182,level:level2):void18"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext13"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "410E7CAABECFC7A00F78BD660D037D73"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid183,pc1:loggerContext13):string10"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "filter"
      modelFingerprint: "88DF0D4A5AE7276F8DD48CF369AB210E"
      valueUuid: "thresholdFilter"
      methodExercised:
        expression: "setLevel(level:string10):void19"
    - type: "LOCAL_VARIABLE"
      name: "filter"
      modelFingerprint: "F4139EAF2E262509F444A4516DCDCF63"
      valueUuid: "thresholdFilter"
      methodExercised:
        expression: "start():void20"
    - type: "LOCAL_VARIABLE"
      name: "appender"
      modelFingerprint: "8DEE60BC649C95B1569DA75A956D5851"
      valueUuid: "consoleAppender"
      methodExercised:
        expression: "addFilter(newFilter:thresholdFilter):void21"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext14"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "60CC989679D70D5BEB6BA8464DCF8A14"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid184,pc1:loggerContext14):string11"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext15"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "D5EFBB91602CD4FC3413EEA70D3ACA70"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid185,pc1:loggerContext15):string12"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "D064A311F0111C50D76725EF55F08239"
      valueUuid: "config"
      methodExercised:
        expression: "start(lifeCycle:patternLayoutEncoder):void24"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "21B9DAF704D0B152648F02467C9B8FDC"
      valueUuid: "config"
      methodExercised:
        expression: "appender(name:uniqueUuid186,appender:consoleAppender):void26"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext16"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "6E46912858D496B5C35297893FBCE9D0"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid187,pc1:loggerContext16):string14"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "filter"
      modelFingerprint: "49A1D3771F072305A93F8E14DF3145ED"
      valueUuid: "thresholdFilter2"
      methodExercised:
        expression: "setLevel(level:string14):void27"
    - type: "LOCAL_VARIABLE"
      name: "filter"
      modelFingerprint: "F4139EAF2E262509F444A4516DCDCF63"
      valueUuid: "thresholdFilter2"
      methodExercised:
        expression: "start():void28"
    - type: "LOCAL_VARIABLE"
      name: "appender"
      modelFingerprint: "DFEBB6507E7C2277DB428C7737479D96"
      valueUuid: "rollingFileAppender"
      methodExercised:
        expression: "addFilter(newFilter:thresholdFilter2):void29"
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext17"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "BFD421252D47AA0BB7D9F79F87DC371C"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid188,pc1:loggerContext17):string15"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "405086503CB73A7B0382F770CA13D827"
      valueUuid: "config"
      methodExercised:
        expression: "getContext():loggerContext18"
    - type: "STATIC"
      name: "OptionHelper.class"
      modelFingerprint: "64953258C4F2FDB4F0407DDEC67B4C91"
      valueUuid: "OptionHelper.class"
      methodExercised:
        expression: "substVars(val:uniqueUuid189,pc1:loggerContext18):string16"
        throwsExceptions:
        - "ch.qos.logback.core.spi.ScanException"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "89F415D8C4A810C15CA46F84AA61D8FD"
      valueUuid: "runtimeException"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "appender.addFilter(filter);"
      lineNumber: 108
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: appender - Method: addFilter"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.logback.DefaultLogbackConfiguration"
        parameters:
        - name: "logFile"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LogFile"
            uuid: "logFile"
            nameForMock: "logFile"
      valueType: "org.springframework.boot.logging.logback.DefaultLogbackConfiguration"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "clr"
      valueType: "java.lang.String"
      uuid: "uniqueUuid155"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.ColorConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uniqueUuid156"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "correlationId"
      valueType: "java.lang.String"
      uuid: "uniqueUuid157"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.CorrelationIdConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uniqueUuid158"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "wex"
      valueType: "java.lang.String"
      uuid: "uniqueUuid159"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uniqueUuid160"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "wEx"
      valueType: "java.lang.String"
      uuid: "uniqueUuid161"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.pattern.Converter"
      uuid: "uniqueUuid162"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext2"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd'T'HH:mm:ss.SSSXXX}}){faint}\
          \ %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint}\
          \ %clr(${LOGGED_APPLICATION_NAME:-}[%15.15t]){faint} %clr(${LOG_CORRELATION_PATTERN:-}){faint}%clr(%-40.40logger{39}){cyan}\
          \ %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid163"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext2"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "CONSOLE_LOG_PATTERN"
      valueType: "java.lang.String"
      uuid: "uniqueUuid164"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext4"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_CHARSET:-UTF-8}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid165"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext4"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "CONSOLE_LOG_CHARSET"
      valueType: "java.lang.String"
      uuid: "uniqueUuid166"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext6"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_THRESHOLD:-TRACE}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid167"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext6"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext5"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "CONSOLE_LOG_THRESHOLD"
      valueType: "java.lang.String"
      uuid: "uniqueUuid168"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext8"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_PATTERN:-%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd'T'HH:mm:ss.SSSXXX}}\
          \ ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- ${LOGGED_APPLICATION_NAME:-}[%t]\
          \ ${LOG_CORRELATION_PATTERN:-}%-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid169"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext8"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext7"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "FILE_LOG_PATTERN"
      valueType: "java.lang.String"
      uuid: "uniqueUuid170"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext9"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext10"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string8"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_CHARSET:-UTF-8}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid171"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext10"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext9"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "FILE_LOG_CHARSET"
      valueType: "java.lang.String"
      uuid: "uniqueUuid172"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string8"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext11"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext12"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string9"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_THRESHOLD:-TRACE}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid173"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext12"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext11"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "FILE_LOG_THRESHOLD"
      valueType: "java.lang.String"
      uuid: "uniqueUuid174"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string9"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void11"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.catalina.startup.DigesterFactory"
      valueType: "java.lang.String"
      uuid: "uniqueUuid175"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "ERROR"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void12"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.catalina.util.LifecycleBase"
      valueType: "java.lang.String"
      uuid: "uniqueUuid176"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "ERROR"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void13"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.coyote.http11.Http11NioProtocol"
      valueType: "java.lang.String"
      uuid: "uniqueUuid177"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void14"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.sshd.common.util.SecurityUtils"
      valueType: "java.lang.String"
      uuid: "uniqueUuid178"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void15"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.tomcat.util.net.NioSelectorPool"
      valueType: "java.lang.String"
      uuid: "uniqueUuid179"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void16"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.eclipse.jetty.util.component.AbstractLifeCycle"
      valueType: "java.lang.String"
      uuid: "uniqueUuid180"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "ERROR"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void17"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.hibernate.validator.internal.util.Version"
      valueType: "java.lang.String"
      uuid: "uniqueUuid181"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void18"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.actuate.endpoint.jmx"
      valueType: "java.lang.String"
      uuid: "uniqueUuid182"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "ch.qos.logback.classic.Level"
        fieldName: "WARN"
      valueType: "ch.qos.logback.classic.Level"
      uuid: "level2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext13"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string10"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_THRESHOLD}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid183"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext13"
    - sapientType: "ANY"
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "thresholdFilter"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void19"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string10"
    - sapientType: "ANY"
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "thresholdFilter"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void20"
      fixed: true
    - sapientType: "ANY"
      valueType: "ch.qos.logback.core.ConsoleAppender"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "consoleAppender"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void21"
      fixed: true
    - sapientType: "ANY"
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "thresholdFilter"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext14"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "pattern1"
      valueType: "java.lang.String"
      uuid: "string11"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_PATTERN}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid184"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext14"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext15"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "C"
      valueType: "java.lang.String"
      uuid: "string12"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${CONSOLE_LOG_CHARSET}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid185"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext15"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void24"
      fixed: true
    - sapientType: "ANY"
      valueType: "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
      uuid: "patternLayoutEncoder"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void26"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "CONSOLE"
      valueType: "java.lang.String"
      uuid: "uniqueUuid186"
      fixed: true
    - sapientType: "ANY"
      valueType: "ch.qos.logback.core.ConsoleAppender"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "consoleAppender"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext16"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string14"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_THRESHOLD}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid187"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext16"
    - sapientType: "ANY"
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "thresholdFilter2"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void27"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string14"
    - sapientType: "ANY"
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "thresholdFilter2"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void28"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "ch.qos.logback.core.rolling.RollingFileAppender"
        parameters: []
      valueType: "ch.qos.logback.core.rolling.RollingFileAppender"
      genericValueType: "ch.qos.logback.classic.spi.ILoggingEvent"
      uuid: "rollingFileAppender"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void29"
      fixed: true
    - sapientType: "ANY"
      valueType: "ch.qos.logback.classic.filter.ThresholdFilter"
      uuid: "thresholdFilter2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext17"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string15"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_PATTERN}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid188"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext17"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.logback.LogbackConfigurator"
      uuid: "config"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext18"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.util.OptionHelper"
      uuid: "OptionHelper.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_substVars1"
      valueType: "java.lang.String"
      uuid: "string16"
    - sapientType: "BASIC"
      content: !<regular>
        value: "${FILE_LOG_CHARSET}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid189"
      fixed: true
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.classic.LoggerContext"
      uuid: "loggerContext18"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.RuntimeException"
        parameters:
        - name: "cause"
          value:
            sapientType: "MOCK"
            valueType: "ch.qos.logback.core.spi.ScanException"
            uuid: "scanException"
      valueType: "java.lang.RuntimeException"
      uuid: "runtimeException"
      fixed: true
    branches:
    - lineNumber: 60
      expression: "this.logFile != null"
      range: "(60,8)-(60,27)"
      evaluatedAs: true
    - lineNumber: 170
      expression: "catch-exception (ScanException)"
      range: "(170,3)-(170,25)"
      evaluatedAs: true
      internalMethodName: "resolve"
    catchBlockExercised:
      idExternalInstruction: 5
      id: 1
      catchExceptions:
      - "ch.qos.logback.core.spi.ScanException"
