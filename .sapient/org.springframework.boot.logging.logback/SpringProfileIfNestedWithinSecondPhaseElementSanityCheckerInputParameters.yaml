---
modelFingerprint: "B324A800262D1B3A81187C9CD13FC522"
targetClass:
  fullClassName: "org.springframework.boot.logging.logback.SpringProfileIfNestedWithinSecondPhaseElementSanityChecker"
methods:
- method:
    name: "check"
    sourceCodeSignature: "void check(Model model)"
    returnType: "void"
    parameters:
    - name: "model"
      type: "ch.qos.logback.core.model.Model"
    instructionFingerprint: "3A8001CB1F28072DCBBE19956CB1BC1C"
  paths:
  - pathId: "path1"
    testPathName: "checkWhenModelIsNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "B97F147FE8ABBADBCF17ED2CE9140AEB"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "model"
      modelFingerprint: "6214B976A5865345A16815855EEAC7DF"
      valueUuid: "model"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.logback.SpringProfileIfNestedWithinSecondPhaseElementSanityChecker"
        parameters: []
      valueType: "org.springframework.boot.logging.logback.SpringProfileIfNestedWithinSecondPhaseElementSanityChecker"
      uuid: "target"
    - sapientType: "NULL"
      valueType: "ch.qos.logback.core.model.Model"
      uuid: "model"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 45
      expression: "model == null"
      range: "(45,7)-(45,19)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "checkWhenNestedPairsNotIsEmptyThrowsNullPointerException"
    constructorSignature: "<init>() : void"
    modelFingerprint: "FC817F419918C75A34A422A3DBE79606"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "model"
      modelFingerprint: "8E9E1A1CF4D7CCEB4160751840376F9C"
      valueUuid: "model"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "548EE662529B15DCBCFC4781359716C2"
      methodExercised:
        expression: "deepFindAllModelsOfType(modelClass:uniqueUuid1,modelList:arrayList,model:model):void2"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "2405EAFFB87210BBECAE2B7052E6CDD0"
      methodExercised:
        expression: "deepFindAllModelsOfType(modelClass:uniqueUuid2,modelList:arrayList,model:model):void3"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "0C940EC9412273E4A86DC055F1CD7296"
      methodExercised:
        expression: "deepFindAllModelsOfType(modelClass:uniqueUuid3,modelList:arrayList,model:model):void4"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "F7CEDA784752811083DD337EB6628500"
      methodExercised:
        expression: "deepFindNestedSubModelsOfType(modelClass:uniqueUuid4,parentList:arrayList):list2"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "A539ACD609CCADA61F0AE8F6914FAF3F"
      methodExercised:
        expression: "addWarn(msg:uniqueUuid5):void5"
    - type: "LOCAL_VARIABLE"
      name: "first"
      modelFingerprint: "F9AA91B25BCC2D660C08D8631E391FD4"
      valueUuid: "object2"
      methodExercised:
        expression: "getTag():uniqueUuid6"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "085DC12750BAC37E63C370C4A90AE3FA"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.logback.SpringProfileIfNestedWithinSecondPhaseElementSanityChecker"
        parameters: []
      valueType: "org.springframework.boot.logging.logback.SpringProfileIfNestedWithinSecondPhaseElementSanityChecker"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.model.Model"
      uuid: "model"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "ch.qos.logback.core.model.AppenderModel"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.model.Model"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "ch.qos.logback.core.model.Model"
      uuid: "arrayList"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.model.Model"
      uuid: "model"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "ch.qos.logback.classic.model.LoggerModel"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.model.Model"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "ch.qos.logback.core.model.Model"
      uuid: "arrayList"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.model.Model"
      uuid: "model"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "ch.qos.logback.classic.model.RootLoggerModel"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.model.Model"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "ch.qos.logback.core.model.Model"
      uuid: "arrayList"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.model.Model"
      uuid: "model"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "ch.qos.logback.core.joran.sanity.Pair"
          genericValueType: "ch.qos.logback.core.model.Model,ch.qos.logback.core.model.Model"
          uuid: "pair"
          collectionUuid: "list2"
      valueType: "java.util.List"
      genericValueType: "ch.qos.logback.core.joran.sanity.Pair<ch.qos.logback.core.model.Model,ch.qos.logback.core.model.Model>"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.SpringProfileModel"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.model.Model"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "ch.qos.logback.core.model.Model"
      uuid: "arrayList"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "<springProfile> elements cannot be nested within an <appender>, <logger>\
          \ or <root> element"
      valueType: "java.lang.String"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "NULL"
      valueType: "ch.qos.logback.core.model.Model"
      uuid: "object2"
      fixed: true
      explicitCastNeeded: true
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.NullPointerException"
        parameters: []
      valueType: "java.lang.NullPointerException"
      uuid: "uniqueUuid6"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.NullPointerException"
        parameters: []
      valueType: "java.lang.NullPointerException"
      uuid: "expectedResult"
    branches:
    - lineNumber: 45
      expression: "model == null"
      range: "(45,7)-(45,19)"
      evaluatedAs: false
    - lineNumber: 51
      expression: "!nestedPairs.isEmpty()"
      range: "(51,7)-(51,28)"
      evaluatedAs: true
  - pathId: "path3"
    testPathName: "checkWhenNestedPairsIsEmpty"
    constructorSignature: "<init>() : void"
    modelFingerprint: "65ED3139442FBD995F2B3D5F300D43A4"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "model"
      modelFingerprint: "8E9E1A1CF4D7CCEB4160751840376F9C"
      valueUuid: "model"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "548EE662529B15DCBCFC4781359716C2"
      methodExercised:
        expression: "deepFindAllModelsOfType(modelClass:uniqueUuid7,modelList:arrayList,model:model):void2"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "2405EAFFB87210BBECAE2B7052E6CDD0"
      methodExercised:
        expression: "deepFindAllModelsOfType(modelClass:uniqueUuid8,modelList:arrayList,model:model):void3"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "0C940EC9412273E4A86DC055F1CD7296"
      methodExercised:
        expression: "deepFindAllModelsOfType(modelClass:uniqueUuid9,modelList:arrayList,model:model):void4"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "188845AC8F2CD72B811E01ABB4E5E6A8"
      methodExercised:
        expression: "deepFindNestedSubModelsOfType(modelClass:uniqueUuid10,parentList:arrayList):list2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.logback.SpringProfileIfNestedWithinSecondPhaseElementSanityChecker"
        parameters: []
      valueType: "org.springframework.boot.logging.logback.SpringProfileIfNestedWithinSecondPhaseElementSanityChecker"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.model.Model"
      uuid: "model"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "ch.qos.logback.core.model.AppenderModel"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.model.Model"
      uuid: "uniqueUuid7"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "ch.qos.logback.core.model.Model"
      uuid: "arrayList"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.model.Model"
      uuid: "model"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "ch.qos.logback.classic.model.LoggerModel"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.model.Model"
      uuid: "uniqueUuid8"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "ch.qos.logback.core.model.Model"
      uuid: "arrayList"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.model.Model"
      uuid: "model"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "ch.qos.logback.classic.model.RootLoggerModel"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.model.Model"
      uuid: "uniqueUuid9"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "ch.qos.logback.core.model.Model"
      uuid: "arrayList"
    - sapientType: "MOCK"
      valueType: "ch.qos.logback.core.model.Model"
      uuid: "model"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "ch.qos.logback.core.joran.sanity.Pair<ch.qos.logback.core.model.Model,ch.qos.logback.core.model.Model>"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.logback.SpringProfileModel"
      valueType: "java.lang.Class"
      genericValueType: "? extends ch.qos.logback.core.model.Model"
      uuid: "uniqueUuid10"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "ch.qos.logback.core.model.Model"
      uuid: "arrayList"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 45
      expression: "model == null"
      range: "(45,7)-(45,19)"
      evaluatedAs: false
    - lineNumber: 51
      expression: "!nestedPairs.isEmpty()"
      range: "(51,7)-(51,28)"
      evaluatedAs: false
