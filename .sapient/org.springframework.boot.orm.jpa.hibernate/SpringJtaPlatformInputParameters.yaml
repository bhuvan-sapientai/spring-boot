---
modelFingerprint: "6725B950D60769D59DBF83657FF275D2"
targetClass:
  fullClassName: "org.springframework.boot.orm.jpa.hibernate.SpringJtaPlatform"
methods:
- method:
    name: "locateTransactionManager"
    sourceCodeSignature: "TransactionManager locateTransactionManager()"
    returnType: "jakarta.transaction.TransactionManager"
    instructionFingerprint: "C6612E6E7865F242321AFEA6B963CFF2"
  paths:
  - pathId: "path1"
    testPathName: "locateTransactionManagerTest"
    constructorSignature: "<init>(org.springframework.transaction.jta.JtaTransactionManager)\
      \ : void"
    modelFingerprint: "910078F05B1B7E4789B343D7A177441C"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "73F3DBE4C4F7192E8A10B3D9642BFEDB"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "265C1F96AC6F62613B18F4BFABD8ABB0"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:transactionManager,message:uniqueUuid1):void"
        staticAccess: true
    - type: "FIELD"
      name: "transactionManager"
      modelFingerprint: "F9A070F51BC6DA9F6907630E041D35EF"
      valueUuid: "transactionManager"
      methodExercised:
        expression: "getTransactionManager():transactionManager2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "87F7733D7D2BB4F26F572432FCAD55AF"
      valueUuid: "transactionManager2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.orm.jpa.hibernate.SpringJtaPlatform"
        parameters:
        - name: "transactionManager"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.transaction.jta.JtaTransactionManager"
              parameters: []
              propertiesMap:
                transactionManager:
                  sapientType: "MOCK"
                  valueType: "jakarta.transaction.TransactionManager"
                  uuid: "transactionManager2"
            valueType: "org.springframework.transaction.jta.JtaTransactionManager"
            uuid: "transactionManager"
      valueType: "org.springframework.boot.orm.jpa.hibernate.SpringJtaPlatform"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.transaction.jta.JtaTransactionManager"
        parameters: []
        propertiesMap:
          transactionManager:
            sapientType: "MOCK"
            valueType: "jakarta.transaction.TransactionManager"
            uuid: "transactionManager2"
      valueType: "org.springframework.transaction.jta.JtaTransactionManager"
      uuid: "transactionManager"
    - sapientType: "BASIC"
      content: !<regular>
        value: "TransactionManager must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.transaction.jta.JtaTransactionManager"
        parameters: []
        propertiesMap:
          transactionManager:
            sapientType: "MOCK"
            valueType: "jakarta.transaction.TransactionManager"
            uuid: "transactionManager2"
      valueType: "org.springframework.transaction.jta.JtaTransactionManager"
      uuid: "transactionManager"
    - sapientType: "MOCK"
      valueType: "jakarta.transaction.TransactionManager"
      uuid: "transactionManager2"
    - sapientType: "MOCK"
      valueType: "jakarta.transaction.TransactionManager"
      uuid: "transactionManager2"
- method:
    name: "locateUserTransaction"
    sourceCodeSignature: "UserTransaction locateUserTransaction()"
    returnType: "jakarta.transaction.UserTransaction"
    instructionFingerprint: "63356136D43D5293E1FBCCC3CD6F4C2C"
  paths:
  - pathId: "path1"
    testPathName: "locateUserTransactionTest"
    constructorSignature: "<init>(org.springframework.transaction.jta.JtaTransactionManager)\
      \ : void"
    modelFingerprint: "BA00D1C479F38FAAAF1D0D11D6402A2F"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "73F3DBE4C4F7192E8A10B3D9642BFEDB"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "265C1F96AC6F62613B18F4BFABD8ABB0"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:transactionManager,message:uniqueUuid2):void"
        staticAccess: true
    - type: "FIELD"
      name: "transactionManager"
      modelFingerprint: "773E6F59236926A4BAA84A7555E35EE6"
      valueUuid: "transactionManager"
      methodExercised:
        expression: "getUserTransaction():userTransaction"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "973A9D1235D5D65D88E6953019853DD4"
      valueUuid: "userTransaction"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.orm.jpa.hibernate.SpringJtaPlatform"
        parameters:
        - name: "transactionManager"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.transaction.jta.JtaTransactionManager"
              parameters: []
              propertiesMap:
                userTransaction:
                  sapientType: "MOCK"
                  valueType: "jakarta.transaction.UserTransaction"
                  uuid: "userTransaction"
            valueType: "org.springframework.transaction.jta.JtaTransactionManager"
            uuid: "transactionManager"
      valueType: "org.springframework.boot.orm.jpa.hibernate.SpringJtaPlatform"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.transaction.jta.JtaTransactionManager"
        parameters: []
        propertiesMap:
          userTransaction:
            sapientType: "MOCK"
            valueType: "jakarta.transaction.UserTransaction"
            uuid: "userTransaction"
      valueType: "org.springframework.transaction.jta.JtaTransactionManager"
      uuid: "transactionManager"
    - sapientType: "BASIC"
      content: !<regular>
        value: "TransactionManager must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.transaction.jta.JtaTransactionManager"
        parameters: []
        propertiesMap:
          userTransaction:
            sapientType: "MOCK"
            valueType: "jakarta.transaction.UserTransaction"
            uuid: "userTransaction"
      valueType: "org.springframework.transaction.jta.JtaTransactionManager"
      uuid: "transactionManager"
    - sapientType: "MOCK"
      valueType: "jakarta.transaction.UserTransaction"
      uuid: "userTransaction"
    - sapientType: "MOCK"
      valueType: "jakarta.transaction.UserTransaction"
      uuid: "userTransaction"
