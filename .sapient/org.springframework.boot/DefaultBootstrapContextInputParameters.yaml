---
modelFingerprint: "0351352540B75082C31508D7ADF2A656"
methods:
- method:
    name: "register"
    signature: "register(java.lang.Class<java.lang.Object>,org.springframework.boot.BootstrapRegistry$InstanceSupplier<java.lang.Object>)\
      \ : void"
    sourceCodeSignature: "void register(Class<T> type, InstanceSupplier<T> instanceSupplier)"
    instructionFingerprint: "6B79E73C5DD58EB3CED071C9F845CAE5"
  paths:
  - pathId: "path1"
    testPathName: "registerWhenTypeGetNameNotPlus_has_already_been_created"
    constructorSignature: "<init>() : void"
    modelFingerprint: "2B8D1D693795D507C2C829E3296807A9"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "type"
      modelFingerprint: "2DA28680ED779F34D6FA5B80564BF14C"
      index: 2
      valueUuid: "register_class1"
    - type: "INPUT"
      name: "instanceSupplier"
      modelFingerprint: "5D78BAEA54ACF27D9A65672CA4261ED0"
      index: 3
      valueUuid: "register_bootstrapRegistry.InstanceSupplier1"
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "4290D8A7606BA0EBCDAE13AFE83A9711"
      index: 4
      valueUuid: "uuid2"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "register_class1"
        - name: "message"
          valueUuid: "uuid1"
        signature: "notNull(Class,String): void"
        returnValueUuid: "register_void1"
        access: 9
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "9493E4FC88E2D3F1DB3F0DD692F707A8"
      index: 5
      valueUuid: "uuid4"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "register_bootstrapRegistry.InstanceSupplier1"
        - name: "message"
          valueUuid: "uuid3"
        signature: "notNull(BootstrapRegistry$InstanceSupplier,String): void"
        returnValueUuid: "register_void2"
        access: 9
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "95E5F99DED30C1D9BEA3B6DC6F59D039"
      index: 6
      valueUuid: "uuid7"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "state"
        parameters:
        - name: "expression"
          valueUuid: "uuid5"
        - name: "messageSupplier"
          valueUuid: "uuid6"
        signature: "state(boolean,Supplier): void"
        returnValueUuid: "register_void3"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 7
      valueUuid: "uuid8"
    uuid: "7e76a5e1-6ec4-32e6-bd68-c9e860660341"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.DefaultBootstrapContext"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "register_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.BootstrapRegistry$InstanceSupplier"
      genericValueType: "java.lang.Object"
      uuid: "register_bootstrapRegistry.InstanceSupplier1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "register_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "register_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Type must not be null"
      valueType: "java.lang.String"
      uuid: "uuid1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "register_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.BootstrapRegistry$InstanceSupplier"
      genericValueType: "java.lang.Object"
      uuid: "register_bootstrapRegistry.InstanceSupplier1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "InstanceSupplier must not be null"
      valueType: "java.lang.String"
      uuid: "uuid3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid7"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "register_void3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid5"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid8"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "registerIfAbsent"
    signature: "registerIfAbsent(java.lang.Class<java.lang.Object>,org.springframework.boot.BootstrapRegistry$InstanceSupplier<java.lang.Object>)\
      \ : void"
    sourceCodeSignature: "void registerIfAbsent(Class<T> type, InstanceSupplier<T>\
      \ instanceSupplier)"
    instructionFingerprint: "C048838D362814C347C6DA8CDE16EC91"
  paths:
  - pathId: "path1"
    testPathName: "registerIfAbsentWhenTypeGetNameNotPlus_has_already_been_created"
    constructorSignature: "<init>() : void"
    modelFingerprint: "41A0C1F54A681A9F7A0DC25239DF7975"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "type"
      modelFingerprint: "2DA28680ED779F34D6FA5B80564BF14C"
      index: 2
      valueUuid: "registerIfAbsent_class1"
    - type: "INPUT"
      name: "instanceSupplier"
      modelFingerprint: "5D78BAEA54ACF27D9A65672CA4261ED0"
      index: 3
      valueUuid: "registerIfAbsent_bootstrapRegistry.InstanceSupplier1"
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "4290D8A7606BA0EBCDAE13AFE83A9711"
      index: 4
      valueUuid: "uuid10"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "registerIfAbsent_class1"
        - name: "message"
          valueUuid: "uuid9"
        signature: "notNull(Class,String): void"
        returnValueUuid: "register_void1"
        access: 9
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "9493E4FC88E2D3F1DB3F0DD692F707A8"
      index: 5
      valueUuid: "uuid12"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "registerIfAbsent_bootstrapRegistry.InstanceSupplier1"
        - name: "message"
          valueUuid: "uuid11"
        signature: "notNull(BootstrapRegistry$InstanceSupplier,String): void"
        returnValueUuid: "register_void2"
        access: 9
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "95E5F99DED30C1D9BEA3B6DC6F59D039"
      index: 6
      valueUuid: "uuid15"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "state"
        parameters:
        - name: "expression"
          valueUuid: "uuid13"
        - name: "messageSupplier"
          valueUuid: "uuid14"
        signature: "state(boolean,Supplier): void"
        returnValueUuid: "register_void3"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 7
      valueUuid: "uuid16"
    uuid: "403cec47-d783-3f65-b37f-813f11425825"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.DefaultBootstrapContext"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "registerIfAbsent_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.BootstrapRegistry$InstanceSupplier"
      genericValueType: "java.lang.Object"
      uuid: "registerIfAbsent_bootstrapRegistry.InstanceSupplier1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid10"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "register_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "registerIfAbsent_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Type must not be null"
      valueType: "java.lang.String"
      uuid: "uuid9"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid12"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "register_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.BootstrapRegistry$InstanceSupplier"
      genericValueType: "java.lang.Object"
      uuid: "registerIfAbsent_bootstrapRegistry.InstanceSupplier1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "InstanceSupplier must not be null"
      valueType: "java.lang.String"
      uuid: "uuid11"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid15"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "register_void3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid13"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid14"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid16"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "isRegistered"
    signature: "isRegistered(java.lang.Class<java.lang.Object>) : boolean"
    sourceCodeSignature: "boolean isRegistered(Class<T> type)"
    instructionFingerprint: "11FC31E2F36FD3FBD92D41C6553357BE"
  paths:
  - pathId: "path1"
    testPathName: "isRegisteredTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "1492AAEE076C69C827A853E5E19E19D8"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "type"
      modelFingerprint: "2DA28680ED779F34D6FA5B80564BF14C"
      index: 2
      valueUuid: "isRegistered_class1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "26F354D57EDB6DE30F14FF7FA23B655D"
      index: 3
      valueUuid: "isRegistered_boolean1"
    uuid: "e1267394-9f05-3468-a5c7-13571afb35a2"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.DefaultBootstrapContext"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "isRegistered_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "isRegistered_boolean1"
      fixed: false
      collectionUuid: "<init>_hashMap1"
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "getRegisteredInstanceSupplier"
    signature: "getRegisteredInstanceSupplier(java.lang.Class<java.lang.Object>) :\
      \ org.springframework.boot.BootstrapRegistry$InstanceSupplier<java.lang.Object>"
    sourceCodeSignature: "InstanceSupplier<T> getRegisteredInstanceSupplier(Class<T>\
      \ type)"
    instructionFingerprint: "F259F675C5D6DB0ED185D59C56256ED4"
  paths:
  - pathId: "path1"
    testPathName: "getRegisteredInstanceSupplierTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "AAFB3085E8EE8389206B4B7C51BADF90"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "type"
      modelFingerprint: "2DA28680ED779F34D6FA5B80564BF14C"
      index: 2
      valueUuid: "getRegisteredInstanceSupplier_class1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2C2C9524CA5E30B76D94C3622ACD97E6"
      index: 3
      valueUuid: "getRegisteredInstanceSupplier_object1"
    uuid: "6b1e53e5-e8ea-3972-93ed-db80c4db0e25"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.DefaultBootstrapContext"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "getRegisteredInstanceSupplier_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "org.springframework.boot.BootstrapRegistry$InstanceSupplier"
      uuid: "getRegisteredInstanceSupplier_object1"
      fixed: false
      collectionUuid: "<init>_hashMap1"
      equalsMethodPresent: true
      explicitCastNeeded: true
- method:
    name: "addCloseListener"
    signature: "addCloseListener(org.springframework.context.ApplicationListener<org.springframework.boot.BootstrapContextClosedEvent>)\
      \ : void"
    sourceCodeSignature: "void addCloseListener(ApplicationListener<BootstrapContextClosedEvent>\
      \ listener)"
    instructionFingerprint: "0F0113867285A6ECFF560320E5610829"
  paths:
  - pathId: "path1"
    testPathName: "addCloseListenerTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "F54545A7592C0BDB52E9817C38F04A75"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "listener"
      modelFingerprint: "A9E69A46331F3AAB85B554EB3CE41162"
      index: 2
      valueUuid: "addCloseListener_applicationListener1"
    - type: "FIELD"
      name: "events"
      modelFingerprint: "31022A760CD331E157A6A62F3DA2C84D"
      index: 3
      valueUuid: "<init>_simpleApplicationEventMulticaster1"
      methodExercised:
        target: "this.events"
        name: "addApplicationListener"
        parameters:
        - name: "listener"
          valueUuid: "addCloseListener_applicationListener1"
        signature: "addApplicationListener(ApplicationListener): void"
        returnValueUuid: "addCloseListener_void1"
        access: 1025
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 4
      valueUuid: "uuid17"
    uuid: "c45260c5-09ec-3101-996f-742b4d9f2509"
    deleted: false
    disabled: false
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "events"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.events.addApplicationListener(listener);"
      lineNumber: 83
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: events - Method: addApplicationListener"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.DefaultBootstrapContext"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationListener"
      genericValueType: "org.springframework.boot.BootstrapContextClosedEvent"
      uuid: "addCloseListener_applicationListener1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.context.event.SimpleApplicationEventMulticaster"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.context.event.SimpleApplicationEventMulticaster"
      uuid: "<init>_simpleApplicationEventMulticaster1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "addCloseListener_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationListener"
      genericValueType: "org.springframework.boot.BootstrapContextClosedEvent"
      uuid: "addCloseListener_applicationListener1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid17"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "get"
    signature: "get(java.lang.Class<java.lang.Object>) : java.lang.Object"
    sourceCodeSignature: "T get(Class<T> type)"
    instructionFingerprint: "7C3E1E4E0364176B2FF0D7B4369E91F1"
  paths:
  - pathId: "path1"
    testPathName: "getTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "5D68D76B2E15B916E1B39951332235B8"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "type"
      modelFingerprint: "2DA28680ED779F34D6FA5B80564BF14C"
      index: 2
      valueUuid: "get_class1"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "9BE63519235E0C282BADA8EFF487EC3D"
      index: 3
      methodExercised:
        target: "target"
        name: "getOrElseThrow"
        parameters:
        - name: "type"
          valueUuid: "get_class1"
        - name: "exceptionSupplier"
          valueUuid: "uuid18"
        throwsExceptions:
        - "java.lang.Throwable"
        signature: "getOrElseThrow(Class,Supplier): Object throws java.lang.Throwable"
        returnValueUuid: "get_object1"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7C973EAEEC332BFEC09E51528D07A6CE"
      index: 4
      valueUuid: "get_object1"
    uuid: "9c25887d-767d-38e9-b5ae-c2e4012c49be"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.DefaultBootstrapContext"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "get_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "get_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "get_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      uuid: "uuid18"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "get_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "getOrElse"
    signature: "getOrElse(java.lang.Class<java.lang.Object>,java.lang.Object) : java.lang.Object"
    sourceCodeSignature: "T getOrElse(Class<T> type, T other)"
    instructionFingerprint: "289995F62E1FB61D8DF4C6709AFDB510"
  paths:
  - pathId: "path1"
    testPathName: "getOrElseTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "6E59B0491F934F9A92177E8825FC3BE5"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "type"
      modelFingerprint: "2DA28680ED779F34D6FA5B80564BF14C"
      index: 2
      valueUuid: "getOrElse_class1"
    - type: "INPUT"
      name: "other"
      modelFingerprint: "715D99C7D8128D27FDBBFB8D82BF40F0"
      index: 3
      valueUuid: "getOrElse_object1"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "D97596525F39C0D18FBF6D73C5B86F7A"
      index: 4
      methodExercised:
        target: "target"
        name: "getOrElseSupply"
        parameters:
        - name: "type"
          valueUuid: "getOrElse_class1"
        - name: "other"
          valueUuid: "uuid19"
        signature: "getOrElseSupply(Class,Supplier): Object"
        returnValueUuid: "getOrElse_object2"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7C973EAEEC332BFEC09E51528D07A6CE"
      index: 5
      valueUuid: "getOrElse_object2"
    uuid: "dc89f727-7530-3a48-9a76-3aac5810c58a"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.DefaultBootstrapContext"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "getOrElse_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "getOrElse_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "getOrElse_object2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "getOrElse_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      uuid: "uuid19"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "getOrElse_object2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "getOrElseSupply"
    signature: "getOrElseSupply(java.lang.Class<java.lang.Object>,java.util.function.Supplier<java.lang.Object>)\
      \ : java.lang.Object"
    sourceCodeSignature: "T getOrElseSupply(Class<T> type, Supplier<T> other)"
    instructionFingerprint: "65E15EF10E2E2E075E716C7FDDDFFD8F"
  paths:
  - pathId: "path1"
    testPathName: "getOrElseSupplyWhenInstanceSupplierIsNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "7728CCB45721F3CFA95764F05DCC670C"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "type"
      modelFingerprint: "BEC73FB50B7F74345B38305840861F5E"
      index: 2
      valueUuid: "getOrElseSupply_class1"
    - type: "INPUT"
      name: "other"
      modelFingerprint: "AB1F3EDD92EEC413431D5F83BE096D1F"
      index: 3
      valueUuid: "getOrElseSupply_supplier1"
    - type: "LOCAL_VARIABLE"
      name: "other"
      modelFingerprint: "72C2737A9B5A26DBE8E5E0A2D8FB7771"
      index: 4
      valueUuid: "getOrElseSupply_supplier1"
      methodExercised:
        target: "other"
        name: "get"
        parameters: []
        signature: "get(): Object"
        returnValueUuid: "getOrElseSupply_object2"
        access: 1025
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7C973EAEEC332BFEC09E51528D07A6CE"
      index: 5
      valueUuid: "getOrElseSupply_object2"
    uuid: "b5b6946b-0b8b-3fb0-9d85-e0b9cbd24cb2"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.DefaultBootstrapContext"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "getOrElseSupply_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "getOrElseSupply_supplier1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "getOrElseSupply_supplier1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "getOrElseSupply_object2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "getOrElseSupply_object2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "getOrElseThrow"
    signature: "getOrElseThrow(java.lang.Class<java.lang.Object>,java.util.function.Supplier<?\
      \ extends java.lang.Throwable>java.lang.Throwable) : java.lang.Object"
    sourceCodeSignature: "T getOrElseThrow(Class<T> type, Supplier<? extends X> exceptionSupplier)"
    instructionFingerprint: "516ECAFAC2C11A89A61FDC107C7654AE"
  paths:
  - pathId: "path1"
    testPathName: "getOrElseThrowWhenInstanceSupplierIsNullThrowsThrowable"
    constructorSignature: "<init>() : void"
    modelFingerprint: "4EAEE7CA985D50EBC131D653A47B03AE"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "type"
      modelFingerprint: "BEC73FB50B7F74345B38305840861F5E"
      index: 2
      valueUuid: "getOrElseThrow_class1"
    - type: "INPUT"
      name: "exceptionSupplier"
      modelFingerprint: "C910E0CCD2CB355819F81A76BC67010A"
      index: 3
      valueUuid: "getOrElseThrow_supplier1"
    - type: "LOCAL_VARIABLE"
      name: "exceptionSupplier"
      modelFingerprint: "DAD137D66D969241C7A3C0FA2AADB3B3"
      index: 4
      valueUuid: "getOrElseThrow_supplier1"
      methodExercised:
        target: "exceptionSupplier"
        name: "get"
        parameters: []
        signature: "get(): Object"
        returnValueUuid: "getOrElseThrow_object2"
        access: 1025
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7C66E340C0F5EAAC7D97CB9C0818A07E"
      index: 5
      valueUuid: "getOrElseThrow_object2"
    uuid: "09e6dfec-ee28-31a7-8bff-00559945209c"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "UNKNOWN_REASON"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.DefaultBootstrapContext"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "getOrElseThrow_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "getOrElseThrow_supplier1"
      fixed: false
      nameForMock: "IllegalArgumentException"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "getOrElseThrow_supplier1"
      fixed: false
      nameForMock: "IllegalArgumentException"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Throwable"
      uuid: "getOrElseThrow_object2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Throwable"
      uuid: "getOrElseThrow_object2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
- method:
    name: "close"
    signature: "close(org.springframework.context.ConfigurableApplicationContext)\
      \ : void"
    sourceCodeSignature: "void close(ConfigurableApplicationContext applicationContext)"
    instructionFingerprint: "087D694189CBCC8C20ED9984A9B12530"
  paths:
  - pathId: "path1"
    testPathName: "closeTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "A601C969E65769B6E286250C1C44BCD0"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "applicationContext"
      modelFingerprint: "9C74CA1E6063AA23FBAAD757A8F748A4"
      index: 2
      valueUuid: "close_configurableApplicationContext1"
    - type: "FIELD"
      name: "events"
      modelFingerprint: "2DC4281EA69C7F541F71902E46C44582"
      index: 3
      valueUuid: "<init>_simpleApplicationEventMulticaster1"
      methodExercised:
        target: "this.events"
        name: "multicastEvent"
        parameters:
        - name: "event"
          valueUuid: "close_bootstrapContextClosedEvent1"
        signature: "multicastEvent(BootstrapContextClosedEvent): void"
        returnValueUuid: "close_void1"
        access: 1025
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 4
      valueUuid: "uuid20"
    uuid: "4338ea80-df41-3c09-b3eb-b0476a460c1f"
    deleted: false
    disabled: false
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "events"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.events.multicastEvent(new BootstrapContextClosedEvent(this, applicationContext));"
      lineNumber: 133
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: events - Method: multicastEvent"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.DefaultBootstrapContext"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "close_configurableApplicationContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.context.event.SimpleApplicationEventMulticaster"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.context.event.SimpleApplicationEventMulticaster"
      uuid: "<init>_simpleApplicationEventMulticaster1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "close_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.BootstrapContextClosedEvent"
        parameters:
        - name: "source"
          value:
            sapientType: "THIS"
            valueType: "org.springframework.boot.DefaultBootstrapContext"
            uuid: "targetClassObject"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "applicationContext"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.ConfigurableApplicationContext"
            uuid: "close_configurableApplicationContext1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.BootstrapContextClosedEvent"
      uuid: "close_bootstrapContextClosedEvent1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid20"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
