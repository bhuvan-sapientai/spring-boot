---
modelFingerprint: "1E97F29C35CC6E16C2D3B9D1B12EED40"
targetClass:
  fullClassName: "org.springframework.boot.LazyInitializationBeanFactoryPostProcessor"
methods:
- method:
    name: "postProcessBeanFactory"
    sourceCodeSignature: "void postProcessBeanFactory(ConfigurableListableBeanFactory\
      \ beanFactory)"
    returnType: "void"
    throwsExceptions:
    - "org.springframework.beans.BeansException"
    parameters:
    - name: "beanFactory"
      type: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "org.springframework.beans.factory.NoSuchBeanDefinitionException"
    instructionFingerprint: "5D155B7EE424857442D8CF85792E9669"
  paths:
  - pathId: "path1"
    testPathName: "postProcessBeanFactoryWhenLazyInitIsNotNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "2F472ADDC7E8653311ED49A15C21E403"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "beanFactory"
      modelFingerprint: "2B7EF4D05F05B01EB1F2B9BE20317A7C"
      valueUuid: "beanFactory"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "899514CDDF94C44657280BAEC69A2108"
      valueUuid: "beanFactory"
      methodExercised:
        expression: "getBeansOfType(type:uniqueUuid1,includeNonSingletons:uniqueUuid2,allowEagerInit:uniqueUuid3):map"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
    - type: "STATIC"
      name: "LazyInitializationExcludeFilter.class.real"
      modelFingerprint: "EB8749589BD7306BC7AB0F96E7E1732E"
      valueUuid: "LazyInitializationExcludeFilter.class.real"
      methodExercised:
        expression: "forBeanTypes(types:classArray):lazyInitializationExcludeFilter"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "5ADE31BCC1F71599BC5F14A617145F91"
      valueUuid: "beanFactory"
      methodExercised:
        expression: "getBeanDefinitionNames():stringArray"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "250EBAEA9DB7637E5A80FE7A6E67EAAC"
      valueUuid: "beanFactory"
      methodExercised:
        expression: "getBeanDefinition(beanName:string):beanDefinition"
        throwsExceptions:
        - "org.springframework.beans.factory.NoSuchBeanDefinitionException"
    - type: "LOCAL_VARIABLE"
      name: "beanDefinition"
      modelFingerprint: "DE9A890072C0C6376023168160CAA45D"
      valueUuid: "beanDefinition"
      methodExercised:
        expression: "getLazyInit():boolean3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.LazyInitializationBeanFactoryPostProcessor"
        parameters: []
      valueType: "org.springframework.boot.LazyInitializationBeanFactoryPostProcessor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.LazyInitializationExcludeFilter"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.LazyInitializationExcludeFilter"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.boot.LazyInitializationExcludeFilter"
      uuid: "LazyInitializationExcludeFilter.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.LazyInitializationExcludeFilter"
        method: "forBeanTypes"
        methodParameters:
        - value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.beans.factory.SmartInitializingSingleton"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.beans.factory.SmartInitializingSingleton"
                  fixed: true
            valueType: "java.lang.Class[]"
            genericValueType: "org.springframework.beans.factory.SmartInitializingSingleton"
            uuid: "classArray"
      valueType: "org.springframework.boot.LazyInitializationExcludeFilter"
      uuid: "lazyInitializationExcludeFilter"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.springframework.beans.factory.SmartInitializingSingleton"
            valueType: "java.lang.Class"
            genericValueType: "org.springframework.beans.factory.SmartInitializingSingleton"
            uuid: "uniqueUuid4"
            fixed: true
      valueType: "java.lang.Class[]"
      genericValueType: "org.springframework.beans.factory.SmartInitializingSingleton"
      uuid: "classArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getBeanDefinitionNamesItem1"
            valueType: "java.lang.String"
            uuid: "string"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanDefinitionNamesItem1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "java.lang.Boolean"
      uuid: "boolean3"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 53
      expression: "for-each(beanFactory.getBeanDefinitionNames())"
      range: "(53,26)-(53,61)"
      evaluatedAs: true
    - lineNumber: 55
      expression: "beanDefinition instanceof AbstractBeanDefinition abstractBeanDefinition"
      range: "(55,8)-(55,78)"
      evaluatedAs: true
    - lineNumber: 73
      expression: "lazyInit != null"
      range: "(73,7)-(73,22)"
      evaluatedAs: true
      internalMethodName: "postProcess"
  - pathId: "path7"
    testPathName: "postProcessBeanFactoryWhenBeanTypeIsNullAndIsExcludedNotFiltersBeanNameBeanDefinitionBeanType"
    constructorSignature: "<init>() : void"
    modelFingerprint: "1FAC6CC04630B90A23444256BAAE07D1"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "beanFactory"
      modelFingerprint: "2B7EF4D05F05B01EB1F2B9BE20317A7C"
      valueUuid: "beanFactory"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "899514CDDF94C44657280BAEC69A2108"
      valueUuid: "beanFactory"
      methodExercised:
        expression: "getBeansOfType(type:uniqueUuid1,includeNonSingletons:uniqueUuid2,allowEagerInit:uniqueUuid3):map"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
    - type: "STATIC"
      name: "LazyInitializationExcludeFilter.class.real"
      modelFingerprint: "EB8749589BD7306BC7AB0F96E7E1732E"
      valueUuid: "LazyInitializationExcludeFilter.class.real"
      methodExercised:
        expression: "forBeanTypes(types:classArray):lazyInitializationExcludeFilter"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "5ADE31BCC1F71599BC5F14A617145F91"
      valueUuid: "beanFactory"
      methodExercised:
        expression: "getBeanDefinitionNames():stringArray"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "250EBAEA9DB7637E5A80FE7A6E67EAAC"
      valueUuid: "beanFactory"
      methodExercised:
        expression: "getBeanDefinition(beanName:string):beanDefinition"
        throwsExceptions:
        - "org.springframework.beans.factory.NoSuchBeanDefinitionException"
    - type: "LOCAL_VARIABLE"
      name: "beanDefinition"
      modelFingerprint: "AA9444B047FA200CD1017020678092E5"
      valueUuid: "beanDefinition"
      methodExercised:
        expression: "getLazyInit():boolean3"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "FF052714779CE82D06B251F1D5F79A42"
      valueUuid: "beanFactory"
      methodExercised:
        expression: "getType(name:string,allowFactoryBeanInit:uniqueUuid5):class"
        throwsExceptions:
        - "org.springframework.beans.factory.NoSuchBeanDefinitionException"
    - type: "LOCAL_VARIABLE"
      name: "beanDefinition"
      modelFingerprint: "5ACBFC9F8A7AD5825A48C6C2A4E972C0"
      valueUuid: "beanDefinition"
      methodExercised:
        expression: "setLazyInit(lazyInit:uniqueUuid6):void"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.LazyInitializationBeanFactoryPostProcessor"
        parameters: []
      valueType: "org.springframework.boot.LazyInitializationBeanFactoryPostProcessor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.LazyInitializationExcludeFilter"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.LazyInitializationExcludeFilter"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.boot.LazyInitializationExcludeFilter"
      uuid: "LazyInitializationExcludeFilter.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.LazyInitializationExcludeFilter"
        method: "forBeanTypes"
        methodParameters:
        - value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.beans.factory.SmartInitializingSingleton"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.beans.factory.SmartInitializingSingleton"
                  fixed: true
            valueType: "java.lang.Class[]"
            genericValueType: "org.springframework.beans.factory.SmartInitializingSingleton"
            uuid: "classArray"
      valueType: "org.springframework.boot.LazyInitializationExcludeFilter"
      uuid: "lazyInitializationExcludeFilter"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.springframework.beans.factory.SmartInitializingSingleton"
            valueType: "java.lang.Class"
            genericValueType: "org.springframework.beans.factory.SmartInitializingSingleton"
            uuid: "uniqueUuid4"
            fixed: true
      valueType: "java.lang.Class[]"
      genericValueType: "org.springframework.beans.factory.SmartInitializingSingleton"
      uuid: "classArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getBeanDefinitionNamesItem1"
            valueType: "java.lang.String"
            uuid: "string"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanDefinitionNamesItem1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "NULL"
      valueType: "java.lang.Boolean"
      uuid: "boolean3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "EXCEPTION"
      valueType: "org.springframework.beans.factory.NoSuchBeanDefinitionException"
      uuid: "class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanDefinitionNamesItem1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid6"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 53
      expression: "for-each(beanFactory.getBeanDefinitionNames())"
      range: "(53,26)-(53,61)"
      evaluatedAs: true
    - lineNumber: 55
      expression: "beanDefinition instanceof AbstractBeanDefinition abstractBeanDefinition"
      range: "(55,8)-(55,78)"
      evaluatedAs: true
    - lineNumber: 73
      expression: "lazyInit != null"
      range: "(73,7)-(73,22)"
      evaluatedAs: false
      internalMethodName: "postProcess"
    - lineNumber: 86
      expression: "catch-exception (NoSuchBeanDefinitionException)"
      range: "(86,3)-(86,41)"
      evaluatedAs: true
      internalMethodName: "getBeanType"
    - lineNumber: 93
      expression: "beanType != null"
      range: "(93,7)-(93,22)"
      evaluatedAs: false
      internalMethodName: "isExcluded"
    - lineNumber: 77
      expression: "!isExcluded(filters, beanName, beanDefinition, beanType)"
      range: "(77,7)-(77,62)"
      evaluatedAs: true
      internalMethodName: "postProcess"
    catchBlockExercised:
      idExternalInstruction: 18
      id: 1
      catchExceptions:
      - "org.springframework.beans.factory.NoSuchBeanDefinitionException"
  - pathId: "path2"
    testPathName: "postProcessBeanFactoryWhenIsExcludedFiltersBeanNameBeanDefinitionBeanType"
    constructorSignature: "<init>() : void"
    modelFingerprint: "277601ECCDEDC2D607378C8ED6AB4AD8"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "beanFactory"
      modelFingerprint: "2B7EF4D05F05B01EB1F2B9BE20317A7C"
      valueUuid: "beanFactory"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "899514CDDF94C44657280BAEC69A2108"
      valueUuid: "beanFactory"
      methodExercised:
        expression: "getBeansOfType(type:uniqueUuid1,includeNonSingletons:uniqueUuid2,allowEagerInit:uniqueUuid3):map"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
    - type: "STATIC"
      name: "LazyInitializationExcludeFilter.class"
      modelFingerprint: "2702EF42C93222131AFA304975200591"
      valueUuid: "LazyInitializationExcludeFilter.class"
      methodExercised:
        expression: "forBeanTypes(types:classArray):lazyInitializationExcludeFilter"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "5ADE31BCC1F71599BC5F14A617145F91"
      valueUuid: "beanFactory"
      methodExercised:
        expression: "getBeanDefinitionNames():stringArray"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "250EBAEA9DB7637E5A80FE7A6E67EAAC"
      valueUuid: "beanFactory"
      methodExercised:
        expression: "getBeanDefinition(beanName:string):beanDefinition"
        throwsExceptions:
        - "org.springframework.beans.factory.NoSuchBeanDefinitionException"
    - type: "LOCAL_VARIABLE"
      name: "beanDefinition"
      modelFingerprint: "AA9444B047FA200CD1017020678092E5"
      valueUuid: "beanDefinition"
      methodExercised:
        expression: "getLazyInit():boolean3"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "D751AE865F2D13AEB42D970ED9907741"
      valueUuid: "beanFactory"
      methodExercised:
        expression: "getType(name:string,allowFactoryBeanInit:uniqueUuid5):class"
        throwsExceptions:
        - "org.springframework.beans.factory.NoSuchBeanDefinitionException"
    - type: "LOCAL_VARIABLE"
      name: "filter"
      modelFingerprint: "755D4DC66E5CA8B9339C21FC54859002"
      valueUuid: "lazyInitializationExcludeFilter"
      methodExercised:
        expression: "isExcluded(beanName:string,beanDefinition:beanDefinition,beanType:class):boolean5"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.LazyInitializationBeanFactoryPostProcessor"
        parameters: []
      valueType: "org.springframework.boot.LazyInitializationBeanFactoryPostProcessor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.LazyInitializationExcludeFilter"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.LazyInitializationExcludeFilter"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.LazyInitializationExcludeFilter"
      uuid: "LazyInitializationExcludeFilter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.LazyInitializationExcludeFilter"
      uuid: "lazyInitializationExcludeFilter"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.springframework.beans.factory.SmartInitializingSingleton"
            valueType: "java.lang.Class"
            genericValueType: "org.springframework.beans.factory.SmartInitializingSingleton"
            uuid: "uniqueUuid4"
            fixed: true
      valueType: "java.lang.Class[]"
      genericValueType: "org.springframework.beans.factory.SmartInitializingSingleton"
      uuid: "classArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getBeanDefinitionNamesItem1"
            valueType: "java.lang.String"
            uuid: "string"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanDefinitionNamesItem1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "NULL"
      valueType: "java.lang.Boolean"
      uuid: "boolean3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanDefinitionNamesItem1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.LazyInitializationExcludeFilter"
      uuid: "lazyInitializationExcludeFilter"
      collectionUuid: "arrayList"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanDefinitionNamesItem1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 53
      expression: "for-each(beanFactory.getBeanDefinitionNames())"
      range: "(53,26)-(53,61)"
      evaluatedAs: true
    - lineNumber: 55
      expression: "beanDefinition instanceof AbstractBeanDefinition abstractBeanDefinition"
      range: "(55,8)-(55,78)"
      evaluatedAs: true
    - lineNumber: 73
      expression: "lazyInit != null"
      range: "(73,7)-(73,22)"
      evaluatedAs: false
      internalMethodName: "postProcess"
    - lineNumber: 93
      expression: "beanType != null"
      range: "(93,7)-(93,22)"
      evaluatedAs: true
      internalMethodName: "isExcluded"
    - lineNumber: 94
      expression: "for-each(filters)"
      range: "(94,50)-(94,56)"
      evaluatedAs: true
      internalMethodName: "isExcluded"
    - lineNumber: 95
      expression: "filter.isExcluded(beanName, beanDefinition, beanType)"
      range: "(95,9)-(95,61)"
      evaluatedAs: true
      internalMethodName: "isExcluded"
    - lineNumber: 77
      expression: "!isExcluded(filters, beanName, beanDefinition, beanType)"
      range: "(77,7)-(77,62)"
      evaluatedAs: false
      internalMethodName: "postProcess"
  - pathId: "path3"
    testPathName: "postProcessBeanFactoryWhenFilterNotIsExcludedBeanNameBeanDefinitionBeanTypeAndIsExcludedNotFiltersBeanNameBeanDefinitio"
    constructorSignature: "<init>() : void"
    modelFingerprint: "C4D9C3A9AB2BA136D496DA5C132772B1"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "beanFactory"
      modelFingerprint: "2B7EF4D05F05B01EB1F2B9BE20317A7C"
      valueUuid: "beanFactory"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "899514CDDF94C44657280BAEC69A2108"
      valueUuid: "beanFactory"
      methodExercised:
        expression: "getBeansOfType(type:uniqueUuid1,includeNonSingletons:uniqueUuid2,allowEagerInit:uniqueUuid3):map"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
    - type: "STATIC"
      name: "LazyInitializationExcludeFilter.class"
      modelFingerprint: "2702EF42C93222131AFA304975200591"
      valueUuid: "LazyInitializationExcludeFilter.class"
      methodExercised:
        expression: "forBeanTypes(types:classArray):lazyInitializationExcludeFilter"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "5ADE31BCC1F71599BC5F14A617145F91"
      valueUuid: "beanFactory"
      methodExercised:
        expression: "getBeanDefinitionNames():stringArray"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "250EBAEA9DB7637E5A80FE7A6E67EAAC"
      valueUuid: "beanFactory"
      methodExercised:
        expression: "getBeanDefinition(beanName:string):beanDefinition"
        throwsExceptions:
        - "org.springframework.beans.factory.NoSuchBeanDefinitionException"
    - type: "LOCAL_VARIABLE"
      name: "beanDefinition"
      modelFingerprint: "AA9444B047FA200CD1017020678092E5"
      valueUuid: "beanDefinition"
      methodExercised:
        expression: "getLazyInit():boolean3"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "D751AE865F2D13AEB42D970ED9907741"
      valueUuid: "beanFactory"
      methodExercised:
        expression: "getType(name:string,allowFactoryBeanInit:uniqueUuid5):class"
        throwsExceptions:
        - "org.springframework.beans.factory.NoSuchBeanDefinitionException"
    - type: "LOCAL_VARIABLE"
      name: "filter"
      modelFingerprint: "9E39C28A5049759072CD606EB66DD9CA"
      valueUuid: "lazyInitializationExcludeFilter"
      methodExercised:
        expression: "isExcluded(beanName:string,beanDefinition:beanDefinition,beanType:class):boolean5"
    - type: "LOCAL_VARIABLE"
      name: "beanDefinition"
      modelFingerprint: "5ACBFC9F8A7AD5825A48C6C2A4E972C0"
      valueUuid: "beanDefinition"
      methodExercised:
        expression: "setLazyInit(lazyInit:uniqueUuid6):void"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.LazyInitializationBeanFactoryPostProcessor"
        parameters: []
      valueType: "org.springframework.boot.LazyInitializationBeanFactoryPostProcessor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.LazyInitializationExcludeFilter"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.LazyInitializationExcludeFilter"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.LazyInitializationExcludeFilter"
      uuid: "LazyInitializationExcludeFilter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.LazyInitializationExcludeFilter"
      uuid: "lazyInitializationExcludeFilter"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.springframework.beans.factory.SmartInitializingSingleton"
            valueType: "java.lang.Class"
            genericValueType: "org.springframework.beans.factory.SmartInitializingSingleton"
            uuid: "uniqueUuid4"
            fixed: true
      valueType: "java.lang.Class[]"
      genericValueType: "org.springframework.beans.factory.SmartInitializingSingleton"
      uuid: "classArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getBeanDefinitionNamesItem1"
            valueType: "java.lang.String"
            uuid: "string"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanDefinitionNamesItem1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "NULL"
      valueType: "java.lang.Boolean"
      uuid: "boolean3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanDefinitionNamesItem1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.LazyInitializationExcludeFilter"
      uuid: "lazyInitializationExcludeFilter"
      collectionUuid: "arrayList"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanDefinitionNamesItem1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid6"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 53
      expression: "for-each(beanFactory.getBeanDefinitionNames())"
      range: "(53,26)-(53,61)"
      evaluatedAs: true
    - lineNumber: 55
      expression: "beanDefinition instanceof AbstractBeanDefinition abstractBeanDefinition"
      range: "(55,8)-(55,78)"
      evaluatedAs: true
    - lineNumber: 73
      expression: "lazyInit != null"
      range: "(73,7)-(73,22)"
      evaluatedAs: false
      internalMethodName: "postProcess"
    - lineNumber: 93
      expression: "beanType != null"
      range: "(93,7)-(93,22)"
      evaluatedAs: true
      internalMethodName: "isExcluded"
    - lineNumber: 94
      expression: "for-each(filters)"
      range: "(94,50)-(94,56)"
      evaluatedAs: true
      internalMethodName: "isExcluded"
    - lineNumber: 95
      expression: "filter.isExcluded(beanName, beanDefinition, beanType)"
      range: "(95,9)-(95,61)"
      evaluatedAs: false
      internalMethodName: "isExcluded"
    - lineNumber: 77
      expression: "!isExcluded(filters, beanName, beanDefinition, beanType)"
      range: "(77,7)-(77,62)"
      evaluatedAs: true
      internalMethodName: "postProcess"
- method:
    name: "getOrder"
    sourceCodeSignature: "int getOrder()"
    returnType: "int"
    instructionFingerprint: "C1C0572F7343926F84750E8EF178FDB9"
  paths:
  - pathId: "path1"
    testPathName: "getOrderTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "458CDB694C37AEC64D22C153D467DA0C"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
