---
modelFingerprint: "D537E635C8B8D53BD29A173D604DEE21"
targetClass:
  fullClassName: "org.springframework.boot.ApplicationEnvironment"
methods:
- method:
    name: "doGetActiveProfilesProperty"
    sourceCodeSignature: "String doGetActiveProfilesProperty()"
    returnType: "java.lang.String"
    instructionFingerprint: "137D807D65466C377F71910631A85488"
  paths:
  - pathId: "path1"
    testPathName: "doGetActiveProfilesPropertyTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "E8CE6ADC2311DF0A17E8B9FA65CAFE73"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "494333D8A9619E3B4E57274C75B778A3"
      valueUuid: "string"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ApplicationEnvironment"
        parameters: []
      valueType: "org.springframework.boot.ApplicationEnvironment"
      uuid: "target"
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "string"
      fixed: true
- method:
    name: "doGetDefaultProfilesProperty"
    sourceCodeSignature: "String doGetDefaultProfilesProperty()"
    returnType: "java.lang.String"
    instructionFingerprint: "7FC870E71BD8CA32F80246D349D66538"
  paths:
  - pathId: "path1"
    testPathName: "doGetDefaultProfilesPropertyTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "E8CE6ADC2311DF0A17E8B9FA65CAFE73"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "494333D8A9619E3B4E57274C75B778A3"
      valueUuid: "string"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ApplicationEnvironment"
        parameters: []
      valueType: "org.springframework.boot.ApplicationEnvironment"
      uuid: "target"
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "string"
      fixed: true
- method:
    name: "createPropertyResolver"
    sourceCodeSignature: "ConfigurablePropertyResolver createPropertyResolver(MutablePropertySources\
      \ propertySources)"
    returnType: "org.springframework.core.env.ConfigurablePropertyResolver"
    parameters:
    - name: "propertySources"
      type: "org.springframework.core.env.MutablePropertySources"
    instructionFingerprint: "B00607FDC96C1479B907A109A8D6BBB0"
  paths:
  - pathId: "path1"
    testPathName: "createPropertyResolverTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "DF8C9708751723285AB3AAE564C5F70B"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "propertySources"
      modelFingerprint: "D7ED1A646EC640E7C196D7F944C75BBE"
      valueUuid: "propertySources"
    - type: "STATIC"
      name: "ConfigurationPropertySources.class"
      modelFingerprint: "7F71A15C3100AD4BCD252F0B364C1A4B"
      valueUuid: "ConfigurationPropertySources.class"
      methodExercised:
        expression: "createPropertyResolver(propertySources:propertySources):configurablePropertyResolver"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C0AE134AA9762910792EF8894B505818"
      valueUuid: "configurablePropertyResolver"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ApplicationEnvironment"
        parameters: []
      valueType: "org.springframework.boot.ApplicationEnvironment"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "propertySources"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "ConfigurationPropertySources.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurablePropertyResolver"
      uuid: "configurablePropertyResolver"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "propertySources"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurablePropertyResolver"
      uuid: "configurablePropertyResolver"
