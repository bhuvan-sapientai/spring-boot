---
modelFingerprint: "6DA43B6DA76AB2D579A44416F0AD5134"
targetClass:
  fullClassName: "org.springframework.boot.DefaultPropertiesPropertySource"
methods:
- method:
    name: "hasMatchingName"
    sourceCodeSignature: "boolean hasMatchingName(PropertySource<?> propertySource)"
    returnType: "boolean"
    parameters:
    - name: "propertySource"
      type: "org.springframework.core.env.PropertySource"
    instructionFingerprint: "A1C078FFC279E51A97B455ADBA85BCF6"
  paths:
  - pathId: "path1"
    testPathName: "hasMatchingNameWhenPropertySourceGetNameEqualsNAME"
    modelFingerprint: "043A68DD8612B9824DC68841D62E429B"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "propertySource"
      modelFingerprint: "D7C2D45992F449BE1F0D76C85992029D"
      valueUuid: "propertySource"
    - type: "LOCAL_VARIABLE"
      name: "propertySource"
      modelFingerprint: "4E8F971800B73C79014AAE9A6DD8765B"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getName():name"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8383DF6F1D02800B0E90FD4143032B37"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.core.env.PropertySource"
        method: "named"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "defaultProperties"
            valueType: "java.lang.String"
            uuid: "name"
      valueType: "org.springframework.core.env.PropertySource"
      uuid: "propertySource"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.core.env.PropertySource"
        method: "named"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "defaultProperties"
            valueType: "java.lang.String"
            uuid: "name"
      valueType: "org.springframework.core.env.PropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "defaultProperties"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 60
      expression: "propertySource != null"
      range: "(60,11)-(60,32)"
      evaluatedAs: true
    - lineNumber: 60
      expression: "propertySource.getName().equals(NAME)"
      range: "(60,38)-(60,74)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "hasMatchingNameWhenPropertySourceGetNameNotEqualsNAME"
    modelFingerprint: "614FE5D4663C265794344EF455E26235"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "propertySource"
      modelFingerprint: "5BE3E06FFC3FA34B83B8B7B7EFDFAD11"
      valueUuid: "propertySource"
    - type: "LOCAL_VARIABLE"
      name: "propertySource"
      modelFingerprint: "649A048C506CAC25C7B43DC31075230C"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getName():name"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.core.env.PropertySource"
        method: "named"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "name"
      valueType: "org.springframework.core.env.PropertySource"
      uuid: "propertySource"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.core.env.PropertySource"
        method: "named"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "name"
      valueType: "org.springframework.core.env.PropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 60
      expression: "propertySource != null"
      range: "(60,11)-(60,32)"
      evaluatedAs: true
    - lineNumber: 60
      expression: "propertySource.getName().equals(NAME)"
      range: "(60,38)-(60,74)"
      evaluatedAs: false
- method:
    name: "ifNotEmpty"
    sourceCodeSignature: "void ifNotEmpty(Map<String, Object> source, Consumer<DefaultPropertiesPropertySource>\
      \ action)"
    returnType: "void"
    parameters:
    - name: "source"
      type: "java.util.Map"
    - name: "action"
      type: "java.util.function.Consumer"
    instructionFingerprint: "6468EFA576DC87CD64A266F5597264FF"
  paths:
  - pathId: "path1"
    testPathName: "ifNotEmptyWhenActionIsNotNull"
    modelFingerprint: "5A7BD9FAC254B4EAA4C81958520B29AC"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "source"
      modelFingerprint: "EFF025FF2BE53395AB13E20EF448881D"
      valueUuid: "source"
    - type: "INPUT"
      name: "action"
      modelFingerprint: "2B598EA18784F6943F98C146701E1852"
      valueUuid: "action"
    - type: "STATIC"
      name: "CollectionUtils.class"
      modelFingerprint: "863038C4890B6A8E51074ADBBE8DF8F8"
      valueUuid: "CollectionUtils.class"
      methodExercised:
        expression: "isEmpty(map:source):boolean1"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "22313A35C156343D887A9DBD66AEAC12"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "hasText(text:uniqueUuid1,message:uniqueUuid2):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "710861653E9584C80305630D5D616B8C"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:source,message:uniqueUuid3):void2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.Consumer.accept(org.springframework.boot.DefaultPropertiesPropertySource)\
        \ : void"
    allValues:
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "source"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "action"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.CollectionUtils"
      uuid: "CollectionUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "source"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "defaultProperties"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property source name must contain at least one character"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "source"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property source must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 71
      expression: "!CollectionUtils.isEmpty(source)"
      range: "(71,7)-(71,38)"
      evaluatedAs: true
    - lineNumber: 71
      expression: "action != null"
      range: "(71,43)-(71,56)"
      evaluatedAs: true
- method:
    name: "addOrMerge"
    sourceCodeSignature: "void addOrMerge(Map<String, Object> source, MutablePropertySources\
      \ sources)"
    returnType: "void"
    parameters:
    - name: "source"
      type: "java.util.Map"
    - name: "sources"
      type: "org.springframework.core.env.MutablePropertySources"
    instructionFingerprint: "308C0F7AD1D9ECE79E48D86B0080950D"
  paths:
  - pathId: "path4"
    testPathName: "addOrMergeWhenSourcesNotContainsNAME"
    modelFingerprint: "A6479C978193A1F3EF8441B09D1CF7A1"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "source"
      modelFingerprint: "52DE8CE23C249CA6A868F21162BBD214"
      valueUuid: "source"
    - type: "INPUT"
      name: "sources"
      modelFingerprint: "E1D157CD5C784FACF9C9EECD5B26544C"
      valueUuid: "sources"
    - type: "STATIC"
      name: "CollectionUtils.class"
      modelFingerprint: "617FD09B5556F138C4CD9AD2906D0712"
      valueUuid: "CollectionUtils.class"
      methodExercised:
        expression: "isEmpty(map:source):boolean1"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "22313A35C156343D887A9DBD66AEAC12"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "hasText(text:uniqueUuid4,message:uniqueUuid5):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "C0EF8AD2EE28EDA500602839A5C1DE05"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "notNull(object:hashMap,message:uniqueUuid6):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "sources"
      modelFingerprint: "1FBCEC56CF0916E080F577DB46307F25"
      valueUuid: "sources"
      methodExercised:
        expression: "contains(name:uniqueUuid7):boolean2"
    - type: "LOCAL_VARIABLE"
      name: "sources"
      modelFingerprint: "EA15EC500E270EADEAC35084DCA55383"
      valueUuid: "sources"
      methodExercised:
        expression: "addLast(propertySource:defaultPropertiesPropertySource):void4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "source"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "sources"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.CollectionUtils"
      uuid: "CollectionUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "source"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "defaultProperties"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property source name must contain at least one character"
      valueType: "java.lang.String"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "hashMap"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property source must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "defaultProperties"
      valueType: "java.lang.String"
      uuid: "uniqueUuid7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "sources"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultPropertiesPropertySource"
      uuid: "defaultPropertiesPropertySource"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 83
      expression: "!CollectionUtils.isEmpty(source)"
      range: "(83,7)-(83,38)"
      evaluatedAs: true
    - lineNumber: 86
      expression: "sources.contains(NAME)"
      range: "(86,8)-(86,29)"
      evaluatedAs: false
  - pathId: "path1"
    testPathName: "addOrMergeWhenUnderlyingSourceInstanceOfMap"
    modelFingerprint: "A159DB4CA0553CEDEFC91F70CD173F4C"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "source"
      modelFingerprint: "52DE8CE23C249CA6A868F21162BBD214"
      valueUuid: "source"
    - type: "INPUT"
      name: "sources"
      modelFingerprint: "E1D157CD5C784FACF9C9EECD5B26544C"
      valueUuid: "sources"
    - type: "STATIC"
      name: "CollectionUtils.class"
      modelFingerprint: "617FD09B5556F138C4CD9AD2906D0712"
      valueUuid: "CollectionUtils.class"
      methodExercised:
        expression: "isEmpty(map:source):boolean1"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "22313A35C156343D887A9DBD66AEAC12"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "hasText(text:uniqueUuid8,message:uniqueUuid9):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "C0EF8AD2EE28EDA500602839A5C1DE05"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "notNull(object:hashMap,message:uniqueUuid10):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "sources"
      modelFingerprint: "0B063463C7B557126A8BF531D5A801A3"
      valueUuid: "sources"
      methodExercised:
        expression: "contains(name:uniqueUuid11):boolean2"
    - type: "LOCAL_VARIABLE"
      name: "sources"
      modelFingerprint: "3E7BCB161A4226330E9F3807EDEE2EFB"
      valueUuid: "sources"
      methodExercised:
        expression: "get(name:uniqueUuid12):propertySource2"
    - type: "LOCAL_VARIABLE"
      name: "existingSource"
      modelFingerprint: "D8E7A541A23D2727966CD50F5F3D2A48"
      valueUuid: "propertySource2"
      methodExercised:
        expression: "getSource():source2"
    - type: "LOCAL_VARIABLE"
      name: "sources"
      modelFingerprint: "17A74BD1FBB45015A719F005781B4ABB"
      valueUuid: "sources"
      methodExercised:
        expression: "replace(name:uniqueUuid13,propertySource:defaultPropertiesPropertySource):void5"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "source"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "sources"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.CollectionUtils"
      uuid: "CollectionUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "source"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "defaultProperties"
      valueType: "java.lang.String"
      uuid: "uniqueUuid8"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property source name must contain at least one character"
      valueType: "java.lang.String"
      uuid: "uniqueUuid9"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "hashMap"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property source must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid10"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "defaultProperties"
      valueType: "java.lang.String"
      uuid: "uniqueUuid11"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "sources"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertySource"
      genericValueType: "?"
      uuid: "propertySource2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "defaultProperties"
      valueType: "java.lang.String"
      uuid: "uniqueUuid12"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertySource"
      genericValueType: "?"
      uuid: "propertySource2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      uuid: "source2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "sources"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "defaultProperties"
      valueType: "java.lang.String"
      uuid: "uniqueUuid13"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultPropertiesPropertySource"
      uuid: "defaultPropertiesPropertySource"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 83
      expression: "!CollectionUtils.isEmpty(source)"
      range: "(83,7)-(83,38)"
      evaluatedAs: true
    - lineNumber: 86
      expression: "sources.contains(NAME)"
      range: "(86,8)-(86,29)"
      evaluatedAs: true
    - lineNumber: 101
      expression: "existingSource != null"
      range: "(101,7)-(101,28)"
      evaluatedAs: true
      internalMethodName: "mergeIfPossible"
    - lineNumber: 103
      expression: "underlyingSource instanceof Map"
      range: "(103,8)-(103,38)"
      evaluatedAs: true
      internalMethodName: "mergeIfPossible"
    calledSomeStaticInternalMethod: true
- method:
    name: "moveToEnd"
    sourceCodeSignature: "void moveToEnd(ConfigurableEnvironment environment)"
    returnType: "void"
    parameters:
    - name: "environment"
      type: "org.springframework.core.env.ConfigurableEnvironment"
    instructionFingerprint: "C17197D10BCCC3CB7281D8C9AF23A38E"
  paths:
  - pathId: "path1"
    testPathName: "moveToEndTest"
    modelFingerprint: "8ED53F17B0529FC219C7F6D79E02D07D"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "environment"
      modelFingerprint: "2AB40C7309B23844284816875A86BEFD"
      valueUuid: "environment"
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "276EF401AE3C78FE9E9D8C7F17B82A6E"
      valueUuid: "environment"
      methodExercised:
        expression: "getPropertySources():mutablePropertySources"
    - type: "STATIC"
      name: "DefaultPropertiesPropertySource.class"
      modelFingerprint: "4F79CF49701B0DC3928DEEFF5CF8EB47"
      valueUuid: "DefaultPropertiesPropertySource.class"
      methodExercised:
        expression: "moveToEnd(propertySources:mutablePropertySources):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.DefaultPropertiesPropertySource"
      uuid: "DefaultPropertiesPropertySource.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "moveToEnd"
    sourceCodeSignature: "void moveToEnd(MutablePropertySources propertySources)"
    returnType: "void"
    parameters:
    - name: "propertySources"
      type: "org.springframework.core.env.MutablePropertySources"
    instructionFingerprint: "259BF52D12B77A5AFAA211E065632ACA"
  paths:
  - pathId: "path1"
    testPathName: "moveToEnd1WhenPropertySourceIsNotNull"
    modelFingerprint: "B5CD45863E16320F5C746D0B11175A9A"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "propertySources"
      modelFingerprint: "1FB804C65E3BFEF1A01342F1D22C144B"
      valueUuid: "propertySources"
    - type: "LOCAL_VARIABLE"
      name: "propertySources"
      modelFingerprint: "6D672E46EA3A128CECE09AE11F387BC7"
      valueUuid: "propertySources"
      methodExercised:
        expression: "remove(name:uniqueUuid14):propertySource"
    - type: "LOCAL_VARIABLE"
      name: "propertySources"
      modelFingerprint: "672ECFA0BBD410FD3BA21B2E84D7FB67"
      valueUuid: "propertySources"
      methodExercised:
        expression: "addLast(propertySource:propertySource):void"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "propertySources"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "propertySources"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertySource"
      genericValueType: "?"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "defaultProperties"
      valueType: "java.lang.String"
      uuid: "uniqueUuid14"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "propertySources"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertySource"
      genericValueType: "?"
      uuid: "propertySource"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 126
      expression: "propertySource != null"
      range: "(126,7)-(126,28)"
      evaluatedAs: true
