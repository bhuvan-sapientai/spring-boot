---
modelFingerprint: "EC956E9127B62AF548FB831317524B47"
targetClass:
  fullClassName: "org.springframework.boot.SpringBootExceptionHandler"
methods:
- method:
    name: "registerLoggedException"
    sourceCodeSignature: "void registerLoggedException(Throwable exception)"
    returnType: "void"
    parameters:
    - name: "exception"
      type: "java.lang.Throwable"
    instructionFingerprint: "2C9439D1F09F18C36619C0F09A0CBA4B"
  paths:
  - pathId: "path1"
    testPathName: "registerLoggedExceptionTest"
    constructorSignature: "<init>(java.lang.Thread$UncaughtExceptionHandler) : void"
    modelFingerprint: "C13B2A59602C3A8F4D475DA46B6704BE"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F3F15BE6BD7EA0BDBA54061BAF1CBDB6"
      valueUuid: "target"
    - type: "INPUT"
      name: "exception"
      modelFingerprint: "05CFBBFC0FF149D82C9CF6A24EF7BD27"
      valueUuid: "exception"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringBootExceptionHandler"
        parameters:
        - name: "parent"
          value:
            sapientType: "MOCK"
            valueType: "java.lang.Thread$UncaughtExceptionHandler"
            uuid: "parent"
      valueType: "org.springframework.boot.SpringBootExceptionHandler"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "exception"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "registerExitCode"
    sourceCodeSignature: "void registerExitCode(int exitCode)"
    returnType: "void"
    parameters:
    - name: "exitCode"
      type: "int"
    instructionFingerprint: "904CDEBA85CD9DB082C95D4C2547283D"
  paths:
  - pathId: "path1"
    testPathName: "registerExitCodeTest"
    constructorSignature: "<init>(java.lang.Thread$UncaughtExceptionHandler) : void"
    modelFingerprint: "5231E07C1FBB5FEC931D0CD0A294A9EC"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F3F15BE6BD7EA0BDBA54061BAF1CBDB6"
      valueUuid: "target"
    - type: "INPUT"
      name: "exitCode"
      modelFingerprint: "3F4E8FFE3DC31988CC2E54B63C54360B"
      valueUuid: "exitCode"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringBootExceptionHandler"
        parameters:
        - name: "parent"
          value:
            sapientType: "MOCK"
            valueType: "java.lang.Thread$UncaughtExceptionHandler"
            uuid: "parent"
      valueType: "org.springframework.boot.SpringBootExceptionHandler"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "exitCode"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "uncaughtException"
    sourceCodeSignature: "void uncaughtException(Thread thread, Throwable ex)"
    returnType: "void"
    parameters:
    - name: "thread"
      type: "java.lang.Thread"
    - name: "ex"
      type: "java.lang.Throwable"
    instructionFingerprint: "D6295AFE136D9650A5B2AC8BEE54D261"
  paths:
  - pathId: "path3"
    testPathName: "uncaughtExceptionWhenIsPassedToParentNotExAndThisExitCodeEquals0"
    constructorSignature: "<init>(java.lang.Thread$UncaughtExceptionHandler) : void"
    modelFingerprint: "446B6121938A643573EC7F41F6D65E4B"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F3F15BE6BD7EA0BDBA54061BAF1CBDB6"
      valueUuid: "target"
    - type: "INPUT"
      name: "thread"
      modelFingerprint: "9EA1FE3A2AD67B783AF722251672362F"
      valueUuid: "thread"
    - type: "INPUT"
      name: "ex"
      modelFingerprint: "02650D1B15C1921FD2A8DE613C29F61E"
      valueUuid: "ex"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Throwable.getCause() : java.lang.Throwable"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringBootExceptionHandler"
        parameters:
        - name: "parent"
          value:
            sapientType: "MOCK"
            valueType: "java.lang.Thread$UncaughtExceptionHandler"
            uuid: "parent"
      valueType: "org.springframework.boot.SpringBootExceptionHandler"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Thread"
        parameters: []
      valueType: "java.lang.Thread"
      uuid: "thread"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.reflect.InvocationTargetException"
        parameters:
        - name: "target"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Throwable"
              parameters: []
            valueType: "java.lang.Throwable"
            uuid: "ex-target"
      valueType: "java.lang.reflect.InvocationTargetException"
      uuid: "ex"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 89
      expression: "ex instanceof InvocationTargetException"
      range: "(89,7)-(89,45)"
      evaluatedAs: true
      internalMethodName: "isLogConfigurationMessage"
    - lineNumber: 79
      expression: "isLogConfigurationMessage(ex)"
      range: "(79,10)-(79,38)"
      evaluatedAs: false
      internalMethodName: "isPassedToParent"
    - lineNumber: 104
      expression: "this.loggedExceptions.contains(ex)"
      range: "(104,7)-(104,40)"
      evaluatedAs: false
      internalMethodName: "isRegistered"
    - lineNumber: 107
      expression: "ex instanceof InvocationTargetException"
      range: "(107,7)-(107,45)"
      evaluatedAs: true
      internalMethodName: "isRegistered"
    - lineNumber: 79
      expression: "!isRegistered(ex)"
      range: "(79,43)-(79,59)"
      evaluatedAs: false
      internalMethodName: "isPassedToParent"
    - lineNumber: 66
      expression: "isPassedToParent(ex)"
      range: "(66,8)-(66,27)"
      evaluatedAs: false
    - lineNumber: 72
      expression: "this.exitCode != 0"
      range: "(72,8)-(72,25)"
      evaluatedAs: false
  - pathId: "path1"
    testPathName: "uncaughtExceptionWhenThisParentIsNotNullAndThisExitCodeEquals0"
    constructorSignature: "<init>(java.lang.Thread$UncaughtExceptionHandler) : void"
    modelFingerprint: "6CBA6ED4D839B501C61B0B1BAFFF0510"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F3F15BE6BD7EA0BDBA54061BAF1CBDB6"
      valueUuid: "target"
    - type: "INPUT"
      name: "thread"
      modelFingerprint: "9EA1FE3A2AD67B783AF722251672362F"
      valueUuid: "thread"
    - type: "INPUT"
      name: "ex"
      modelFingerprint: "02650D1B15C1921FD2A8DE613C29F61E"
      valueUuid: "ex"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Throwable.getCause() : java.lang.Throwable"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringBootExceptionHandler"
        parameters:
        - name: "parent"
          value:
            sapientType: "MOCK"
            valueType: "java.lang.Thread$UncaughtExceptionHandler"
            uuid: "parent"
      valueType: "org.springframework.boot.SpringBootExceptionHandler"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Thread"
        parameters: []
      valueType: "java.lang.Thread"
      uuid: "thread"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.reflect.InvocationTargetException"
        parameters:
        - name: "target"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Throwable"
              parameters: []
            valueType: "java.lang.Throwable"
            uuid: "ex-target"
      valueType: "java.lang.reflect.InvocationTargetException"
      uuid: "ex"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 89
      expression: "ex instanceof InvocationTargetException"
      range: "(89,7)-(89,45)"
      evaluatedAs: true
      internalMethodName: "isLogConfigurationMessage"
    - lineNumber: 79
      expression: "isLogConfigurationMessage(ex)"
      range: "(79,10)-(79,38)"
      evaluatedAs: false
      internalMethodName: "isPassedToParent"
    - lineNumber: 104
      expression: "this.loggedExceptions.contains(ex)"
      range: "(104,7)-(104,40)"
      evaluatedAs: false
      internalMethodName: "isRegistered"
    - lineNumber: 107
      expression: "ex instanceof InvocationTargetException"
      range: "(107,7)-(107,45)"
      evaluatedAs: true
      internalMethodName: "isRegistered"
    - lineNumber: 79
      expression: "!isRegistered(ex)"
      range: "(79,43)-(79,59)"
      evaluatedAs: true
      internalMethodName: "isPassedToParent"
    - lineNumber: 66
      expression: "isPassedToParent(ex)"
      range: "(66,8)-(66,27)"
      evaluatedAs: true
    - lineNumber: 66
      expression: "this.parent != null"
      range: "(66,32)-(66,50)"
      evaluatedAs: true
    - lineNumber: 72
      expression: "this.exitCode != 0"
      range: "(72,8)-(72,25)"
      evaluatedAs: false
  - pathId: "path5"
    testPathName: "uncaughtExceptionWhenIsPassedToParentExAndThisParentIsNullAndThisExitCodeEquals0"
    constructorSignature: "<init>(java.lang.Thread$UncaughtExceptionHandler) : void"
    modelFingerprint: "C62F55C937971511CB59F7FFBED57588"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D030F2876FA5F8980B006FA7E4C70BC1"
      valueUuid: "target"
    - type: "INPUT"
      name: "thread"
      modelFingerprint: "9EA1FE3A2AD67B783AF722251672362F"
      valueUuid: "thread"
    - type: "INPUT"
      name: "ex"
      modelFingerprint: "591F657BA508F7777C9D61394F936730"
      valueUuid: "ex"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringBootExceptionHandler"
        parameters:
        - name: "parent"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Thread$UncaughtExceptionHandler"
            uuid: "parent"
            fixed: true
      valueType: "org.springframework.boot.SpringBootExceptionHandler"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Thread"
        parameters: []
      valueType: "java.lang.Thread"
      uuid: "thread"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Logback configuration error detected"
            valueType: "java.lang.String"
            uuid: "message"
      valueType: "java.lang.Throwable"
      uuid: "ex"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 89
      expression: "ex instanceof InvocationTargetException"
      range: "(89,7)-(89,45)"
      evaluatedAs: false
      internalMethodName: "isLogConfigurationMessage"
    - lineNumber: 93
      expression: "message != null"
      range: "(93,7)-(93,21)"
      evaluatedAs: true
      internalMethodName: "isLogConfigurationMessage"
    - lineNumber: 94
      expression: "for-each(LOG_CONFIGURATION_MESSAGES)"
      range: "(94,28)-(94,53)"
      evaluatedAs: true
      internalMethodName: "isLogConfigurationMessage"
    - lineNumber: 95
      expression: "message.contains(candidate)"
      range: "(95,9)-(95,35)"
      evaluatedAs: true
      internalMethodName: "isLogConfigurationMessage"
    - lineNumber: 79
      expression: "isLogConfigurationMessage(ex)"
      range: "(79,10)-(79,38)"
      evaluatedAs: true
      internalMethodName: "isPassedToParent"
    - lineNumber: 66
      expression: "isPassedToParent(ex)"
      range: "(66,8)-(66,27)"
      evaluatedAs: true
    - lineNumber: 66
      expression: "this.parent != null"
      range: "(66,32)-(66,50)"
      evaluatedAs: false
    - lineNumber: 72
      expression: "this.exitCode != 0"
      range: "(72,8)-(72,25)"
      evaluatedAs: false
  - pathId: "path6"
    testPathName: "uncaughtExceptionWhenExNotInstanceOfInvocationTargetExceptionAndIsRegisteredNotExAndIsPassedToParentExAndThisParentIsNu"
    constructorSignature: "<init>(java.lang.Thread$UncaughtExceptionHandler) : void"
    modelFingerprint: "ED8BE4A2891A00344B12953390E0091F"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D030F2876FA5F8980B006FA7E4C70BC1"
      valueUuid: "target"
    - type: "INPUT"
      name: "thread"
      modelFingerprint: "9EA1FE3A2AD67B783AF722251672362F"
      valueUuid: "thread"
    - type: "INPUT"
      name: "ex"
      modelFingerprint: "7F3F380207B2359ACEA2F0043FEECCDE"
      valueUuid: "ex"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringBootExceptionHandler"
        parameters:
        - name: "parent"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Thread$UncaughtExceptionHandler"
            uuid: "parent"
            fixed: true
      valueType: "org.springframework.boot.SpringBootExceptionHandler"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Thread"
        parameters: []
      valueType: "java.lang.Thread"
      uuid: "thread"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "message"
      valueType: "java.lang.Throwable"
      uuid: "ex"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 89
      expression: "ex instanceof InvocationTargetException"
      range: "(89,7)-(89,45)"
      evaluatedAs: false
      internalMethodName: "isLogConfigurationMessage"
    - lineNumber: 93
      expression: "message != null"
      range: "(93,7)-(93,21)"
      evaluatedAs: true
      internalMethodName: "isLogConfigurationMessage"
    - lineNumber: 94
      expression: "for-each(LOG_CONFIGURATION_MESSAGES)"
      range: "(94,28)-(94,53)"
      evaluatedAs: true
      internalMethodName: "isLogConfigurationMessage"
    - lineNumber: 95
      expression: "message.contains(candidate)"
      range: "(95,9)-(95,35)"
      evaluatedAs: false
      internalMethodName: "isLogConfigurationMessage"
    - lineNumber: 79
      expression: "isLogConfigurationMessage(ex)"
      range: "(79,10)-(79,38)"
      evaluatedAs: false
      internalMethodName: "isPassedToParent"
    - lineNumber: 104
      expression: "this.loggedExceptions.contains(ex)"
      range: "(104,7)-(104,40)"
      evaluatedAs: false
      internalMethodName: "isRegistered"
    - lineNumber: 107
      expression: "ex instanceof InvocationTargetException"
      range: "(107,7)-(107,45)"
      evaluatedAs: false
      internalMethodName: "isRegistered"
    - lineNumber: 79
      expression: "!isRegistered(ex)"
      range: "(79,43)-(79,59)"
      evaluatedAs: true
      internalMethodName: "isPassedToParent"
    - lineNumber: 66
      expression: "isPassedToParent(ex)"
      range: "(66,8)-(66,27)"
      evaluatedAs: true
    - lineNumber: 66
      expression: "this.parent != null"
      range: "(66,32)-(66,50)"
      evaluatedAs: false
    - lineNumber: 72
      expression: "this.exitCode != 0"
      range: "(72,8)-(72,25)"
      evaluatedAs: false
- method:
    name: "forCurrentThread"
    sourceCodeSignature: "SpringBootExceptionHandler forCurrentThread()"
    returnType: "org.springframework.boot.SpringBootExceptionHandler"
    instructionFingerprint: "1BE77BDF5EF55A51B65F69122C0546F9"
  paths:
  - pathId: "path1"
    testPathName: "forCurrentThreadTest"
    modelFingerprint: "AE0EFA49CA11B12AD58918CB4ECBF917"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7D7BC76017F00E1AB257750898722B72"
      valueUuid: "object"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return handler.get();"
      lineNumber: 114
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: handler - Method: get"
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringBootExceptionHandler"
      uuid: "object"
      explicitCastNeeded: true
