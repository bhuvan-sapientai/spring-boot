---
modelFingerprint: "613EA8B766DB836F68575DB4E6B3DB97"
targetClass:
  fullClassName: "org.springframework.boot.SpringApplication"
methods:
- method:
    name: "run"
    sourceCodeSignature: "ConfigurableApplicationContext run(String... args)"
    returnType: "org.springframework.context.ConfigurableApplicationContext"
    parameters:
    - name: "args"
      type: "java.lang.String[]"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Throwable"
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Throwable"
    - idExternalInstruction: 0
      id: 3
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 4
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 5
      catchExceptions:
      - "java.lang.Throwable"
    - idExternalInstruction: 0
      id: 6
      catchExceptions:
      - "java.lang.Throwable"
    - idExternalInstruction: 0
      id: 7
      catchExceptions:
      - "java.lang.Throwable"
    - idExternalInstruction: 0
      id: 5
      catchExceptions:
      - "java.lang.Throwable"
    - idExternalInstruction: 0
      id: 6
      catchExceptions:
      - "java.lang.Throwable"
    - idExternalInstruction: 0
      id: 7
      catchExceptions:
      - "java.lang.Throwable"
    - idExternalInstruction: 0
      id: 4
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 5
      catchExceptions:
      - "java.lang.Throwable"
    - idExternalInstruction: 0
      id: 6
      catchExceptions:
      - "java.lang.Throwable"
    - idExternalInstruction: 0
      id: 7
      catchExceptions:
      - "java.lang.Throwable"
    - idExternalInstruction: 0
      id: 5
      catchExceptions:
      - "java.lang.Throwable"
    - idExternalInstruction: 0
      id: 6
      catchExceptions:
      - "java.lang.Throwable"
    - idExternalInstruction: 0
      id: 7
      catchExceptions:
      - "java.lang.Throwable"
    instructionFingerprint: "B885871CBD72EA56F24A732F246071B1"
  paths:
  - pathId: "path9"
    testPathName: "runWhenDependencyComparatorNotInstanceOfOrderComparatorAndContextNotIsRunning"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "5E67857AB8370C4BF2735FF5C424B76C"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "3D00B86BF6898643756CD23F93FAAB38"
      valueUuid: "target"
    - type: "INPUT"
      name: "args"
      modelFingerprint: "62B8E965720EE46A7489315174A3A841"
      valueUuid: "args"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid1):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "C320B20653A22B9C646F1A3191D75758"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CF95A31B3D10A33864B1EBA0157B9CA4"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "404AE01AAD14CB0CD099D864172D2899"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid2,argumentResolver:uniqueUuid3):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CF95A31B3D10A33864B1EBA0157B9CA4"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid4,argumentResolver:uniqueUuid5):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CF95A31B3D10A33864B1EBA0157B9CA4"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid6,argumentResolver:uniqueUuid7):list4"
    - type: "STATIC"
      name: "SpringApplication.Startup.class"
      modelFingerprint: "DA8622EB3506E174E0335AC27132B054"
      valueUuid: "SpringApplication.Startup.class"
      methodExercised:
        expression: "create():springApplication.Startup"
        staticAccess: true
    - type: "FIELD"
      name: "shutdownHook"
      modelFingerprint: "A0CD9DC1B1C93A40FEC7031737D9BE10"
      valueUuid: "springApplicationShutdownHook"
      methodExercised:
        expression: "enableShutdownHookAddition():void2"
    - type: "LOCAL_VARIABLE"
      name: "initializer"
      modelFingerprint: "78495708A547C9C6DC2151A7C67101AC"
      valueUuid: "bootstrapRegistryInitializer"
      methodExercised:
        expression: "initialize(registry:defaultBootstrapContext):void4"
    - type: "STATIC"
      name: "SpringFactoriesLoader.ArgumentResolver.class"
      modelFingerprint: "5F0034DA74D42417617FBE94CCB6AD81"
      valueUuid: "SpringFactoriesLoader.ArgumentResolver.class"
      methodExercised:
        expression: "of(type:uniqueUuid8,value:targetClassObject):springFactoriesLoader.ArgumentResolver"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "argumentResolver"
      modelFingerprint: "900146EE10B4914AE93AEF9C5995BCEE"
      valueUuid: "springFactoriesLoader.ArgumentResolver"
      methodExercised:
        expression: "and(type:uniqueUuid9,value:args):springFactoriesLoader.ArgumentResolver2"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "27BFD3AFF61EB16D6621CC8BB9BFE4B5"
      methodExercised:
        expression: "getClassLoader():classLoader4"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader4):springFactoriesLoader4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "C997EC8D4248E2F75F459758B43838D0"
      valueUuid: "springFactoriesLoader4"
      methodExercised:
        expression: "load(factoryType:uniqueUuid10,argumentResolver:springFactoriesLoader.ArgumentResolver2):list5"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "B030C484A6C44F4577E15609B1FF871D"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "starting(bootstrapContext:defaultBootstrapContext,mainApplicationClass:uniqueUuid11):void5"
    - type: "FIELD"
      name: "applicationContextFactory"
      modelFingerprint: "E02946712D100F2805F22CC82E3EE032"
      valueUuid: "applicationContextFactory"
      methodExercised:
        expression: "createEnvironment(webApplicationType:webApplicationType):configurableEnvironment"
    - type: "LOCAL_VARIABLE"
      name: "applicationArguments"
      modelFingerprint: "029CA1B5E8067A0C5CE390F4A8056BDF"
      valueUuid: "defaultApplicationArguments"
      methodExercised:
        expression: "getSourceArgs():stringArray"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "CEF3438F2F40E2AD7B3C20BAA63D46B8"
      methodExercised:
        expression: "configureEnvironment(environment:configurableEnvironment,args:stringArray):void6"
    - type: "STATIC"
      name: "ConfigurationPropertySources.class"
      modelFingerprint: "53440E5772A40A558102E86761710896"
      valueUuid: "ConfigurationPropertySources.class"
      methodExercised:
        expression: "attach(environment:configurableEnvironment):void7"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "4BB3F16926718768701C4B733FF8CC0E"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "environmentPrepared(bootstrapContext:defaultBootstrapContext,environment:configurableEnvironment):void8"
    - type: "STATIC"
      name: "DefaultPropertiesPropertySource.class"
      modelFingerprint: "A9D0B555137E8BEDE07B6F64446A0E87"
      valueUuid: "DefaultPropertiesPropertySource.class"
      methodExercised:
        expression: "moveToEnd(environment:configurableEnvironment):void9"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "9E4ECB696B13BE24D31A494A9CFB1517"
      valueUuid: "configurableEnvironment"
      methodExercised:
        expression: "containsProperty(key:uniqueUuid12):boolean1"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "3005B7C273FB5B07AAA3FFAC84FCA35D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "state(expression:uniqueUuid13,message:uniqueUuid14):void10"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "E458C0D4F432A2EE245F849AB6082AE1"
      methodExercised:
        expression: "bindToSpringApplication(environment:configurableEnvironment):void11"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "27BFD3AFF61EB16D6621CC8BB9BFE4B5"
      methodExercised:
        expression: "getClassLoader():classLoader5"
    - type: "FIELD"
      name: "applicationContextFactory"
      modelFingerprint: "D093E551848FCE9604F07D9177C6415C"
      valueUuid: "applicationContextFactory"
      methodExercised:
        expression: "getEnvironmentType(webApplicationType:webApplicationType):class"
    - type: "LOCAL_VARIABLE"
      name: "environmentConverter"
      modelFingerprint: "901ECFBFD79C2B1E8E6991B2FDD646EF"
      valueUuid: "environmentConverter"
      methodExercised:
        expression: "convertEnvironmentIfNecessary(environment:configurableEnvironment,type:class):configurableEnvironment2"
    - type: "STATIC"
      name: "ConfigurationPropertySources.class"
      modelFingerprint: "8AB147F7CEFB2ADC4ACA9203EF9EB8F5"
      valueUuid: "ConfigurationPropertySources.class"
      methodExercised:
        expression: "attach(environment:configurableEnvironment2):void12"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "bannerPrinter"
      modelFingerprint: "C38C780C4FB921080801505A8CCDF4A6"
      valueUuid: "springApplicationBannerPrinter"
      methodExercised:
        expression: "print(environment:configurableEnvironment2,sourceClass:uniqueUuid15,out:printStream):banner"
    - type: "FIELD"
      name: "applicationContextFactory"
      modelFingerprint: "29E17154E945930B547CAF9F543B7599"
      valueUuid: "applicationContextFactory"
      methodExercised:
        expression: "create(webApplicationType:webApplicationType):configurableApplicationContext"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "C4457CBF6543DA61B3CC571D7855BC05"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "setApplicationStartup(applicationStartup:applicationStartup):void13"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "3D9E0E41C335B65CCAE967E238E128E8"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "setEnvironment(environment:configurableEnvironment2):void14"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "F7247F20B4DB91E482D564DC0E3EE670"
      methodExercised:
        expression: "postProcessApplicationContext(context:configurableApplicationContext):void15"
    - type: "STATIC"
      name: "AotDetector.class.real"
      modelFingerprint: "A651F35C9CB1BB4329EA23C459C95680"
      valueUuid: "AotDetector.class.real"
      methodExercised:
        expression: "useGeneratedArtifacts():boolean2"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "2629F473285A8D2B3BDA80841BE1B13C"
      methodExercised:
        expression: "applyInitializers(context:configurableApplicationContext):void16"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "F25700EBA48DFBE78B5458FCD3EB4646"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "contextPrepared(context:configurableApplicationContext):void17"
    - type: "LOCAL_VARIABLE"
      name: "bootstrapContext"
      modelFingerprint: "909D947F9D1DDC6DDEA8500941736C94"
      valueUuid: "defaultBootstrapContext"
      methodExercised:
        expression: "close(applicationContext:configurableApplicationContext):void18"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "A7958E929D687DDAF775F8E7F326431C"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "getParent():applicationContext"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "70B029E69BC37396007D6557BFF5988C"
      methodExercised:
        expression: "logStartupInfo(isRoot:uniqueUuid17):void19"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "7204D97E17BC4435BDF63B535ED64B97"
      methodExercised:
        expression: "logStartupProfileInfo(context:configurableApplicationContext):void20"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "6A01AAC3461FC3A19CF28FB5CC4FB9E4"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "7107C791919372E064D179B76AC9C5E9"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "registerSingleton(beanName:uniqueUuid18,singletonObject:defaultApplicationArguments):void21"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "FA8F37E3F1CCAD1CDA8FBCBF73BC2DBD"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "registerSingleton(beanName:uniqueUuid19,singletonObject:banner):void22"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "69034248F39E1300FEF9D04C0504E01A"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "addBeanFactoryPostProcessor(postProcessor:beanFactoryPostProcessor):void23"
    - type: "STATIC"
      name: "AotDetector.class.real"
      modelFingerprint: "A651F35C9CB1BB4329EA23C459C95680"
      valueUuid: "AotDetector.class.real"
      methodExercised:
        expression: "useGeneratedArtifacts():boolean4"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "B7BE57BBB1B5A7BD5ED87B40A86D76DE"
      methodExercised:
        expression: "getAllSources():set2"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "310DF01A4E66C008D8FBAFA8AF5E0066"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notEmpty(collection:set2,message:uniqueUuid21):void24"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "747750EDF95355B82946A587FD75A593"
      methodExercised:
        expression: "load(context:configurableApplicationContext,sources:objectArray2):void25"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "9DAE3D234F2CD76AACDE8442BC6EE4A6"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "contextLoaded(context:configurableApplicationContext):void26"
    - type: "FIELD"
      name: "shutdownHook"
      modelFingerprint: "955744B9BBBD449D14979830C226B3DB"
      valueUuid: "springApplicationShutdownHook"
      methodExercised:
        expression: "registerApplicationContext(context:configurableApplicationContext):void27"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "01A9466B1E33218E3C0D5F4F6DD218E7"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "refresh():void28"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      name: "startup"
      modelFingerprint: "9514A429A770044AEBDFB50062B30B4D"
      valueUuid: "springApplication.Startup"
      methodExercised:
        expression: "started():duration"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "FE5D2BC90EC0B24D7B85FD4D1CDFF78B"
      methodExercised:
        expression: "getApplicationLog():log2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "31F4778FC7271F5256CA0997FCC61AFA"
      valueUuid: "startupInfoLogger"
      methodExercised:
        expression: "logStarted(applicationLog:log2,startup:springApplication.Startup):void29"
    - type: "LOCAL_VARIABLE"
      name: "startup"
      modelFingerprint: "8632254D8D53E67F9906077923095FAF"
      valueUuid: "springApplication.Startup"
      methodExercised:
        expression: "timeTakenToStarted():duration2"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "676CA2E0A33FFC3648204E1B59D55045"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "started(context:configurableApplicationContext,timeTaken:duration2):void30"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "6A01AAC3461FC3A19CF28FB5CC4FB9E4"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory2"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "18C1A56F5149EA5DFABC9B0B3D917B4E"
      valueUuid: "configurableListableBeanFactory2"
      methodExercised:
        expression: "getBeanNamesForType(type:uniqueUuid23):stringArray2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "9FB5A4AC1406067842215F6E568A3B04"
      valueUuid: "annotationAwareOrderComparator"
      methodExercised:
        expression: "withSourceProvider(sourceProvider:orderComparator.OrderSourceProvider):comparator"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "F0E51F52C31704AC9A6AA0181DD076E9"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "isRunning():boolean7"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D051A47616C33D8E3B501B0F70F97E9D"
      valueUuid: "configurableApplicationContext"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
            fixed: true
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
        propertiesMap:
          applicationContextFactory:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ApplicationContextFactory"
            uuid: "applicationContextFactory"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid3"
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid5"
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid6"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "SpringApplication.Startup.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationShutdownHook"
        parameters: []
      valueType: "org.springframework.boot.SpringApplicationShutdownHook"
      uuid: "springApplicationShutdownHook"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "bootstrapRegistryInitializer"
      collectionUuid: "arrayList"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "SpringFactoriesLoader.ArgumentResolver.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.SpringApplication"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.SpringApplication"
      uuid: "uniqueUuid8"
      fixed: true
    - sapientType: "THIS"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String[]"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.String[]"
      uuid: "uniqueUuid9"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader4"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader4"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader4"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader4"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.SpringApplicationRunListener"
      uuid: "list5"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.SpringApplicationRunListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.SpringApplicationRunListener"
      uuid: "uniqueUuid10"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      uuid: "uniqueUuid11"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "applicationContextFactory"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.DefaultApplicationArguments"
        parameters:
        - name: "args"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "args"
      valueType: "org.springframework.boot.DefaultApplicationArguments"
      uuid: "defaultApplicationArguments"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "ConfigurationPropertySources.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.DefaultPropertiesPropertySource"
      uuid: "DefaultPropertiesPropertySource.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "spring.main.environment-prefix"
      valueType: "java.lang.String"
      uuid: "uniqueUuid12"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid13"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Environment prefix cannot be set via properties."
      valueType: "java.lang.String"
      uuid: "uniqueUuid14"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void11"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "applicationContextFactory"
    - sapientType: "CLASS"
      content: !<regular>
        value: "? extends org.springframework.core.env.ConfigurableEnvironment"
      valueType: "java.lang.Class"
      genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
      uuid: "class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.EnvironmentConverter"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "classLoader5"
      valueType: "org.springframework.boot.EnvironmentConverter"
      uuid: "environmentConverter"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ApplicationContextFactory"
                uuid: "applicationContextFactory"
              methodParameters:
              - name: "webApplicationType"
                value:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "NONE"
                  valueType: "org.springframework.boot.WebApplicationType"
                  uuid: "webApplicationType"
              methodName: "createEnvironment"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "? extends org.springframework.core.env.ConfigurableEnvironment"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "CLASS"
      content: !<regular>
        value: "? extends org.springframework.core.env.ConfigurableEnvironment"
      valueType: "java.lang.Class"
      genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "ConfigurationPropertySources.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void12"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ApplicationContextFactory"
                uuid: "applicationContextFactory"
              methodParameters:
              - name: "webApplicationType"
                value:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "NONE"
                  valueType: "org.springframework.boot.WebApplicationType"
                  uuid: "webApplicationType"
              methodName: "createEnvironment"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "? extends org.springframework.core.env.ConfigurableEnvironment"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationBannerPrinter"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.core.io.DefaultResourceLoader"
              parameters:
              - name: "classLoader"
                value:
                  sapientType: "NULL"
                  valueType: "java.lang.ClassLoader"
            valueType: "org.springframework.core.io.DefaultResourceLoader"
            uuid: "defaultResourceLoader"
            fixed: true
        - name: "fallbackBanner"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.Banner"
            uuid: "fieldBanner"
      valueType: "org.springframework.boot.SpringApplicationBannerPrinter"
      uuid: "springApplicationBannerPrinter"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.Banner"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.SpringApplicationBannerPrinter"
            parameters:
            - name: "resourceLoader"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.core.io.DefaultResourceLoader"
                  parameters:
                  - name: "classLoader"
                    value:
                      sapientType: "NULL"
                      valueType: "java.lang.ClassLoader"
                valueType: "org.springframework.core.io.DefaultResourceLoader"
                uuid: "defaultResourceLoader"
                fixed: true
            - name: "fallbackBanner"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.Banner"
                uuid: "fieldBanner"
          valueType: "org.springframework.boot.SpringApplicationBannerPrinter"
          uuid: "springApplicationBannerPrinter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.EnvironmentConverter"
                  parameters:
                  - name: "classLoader"
                    value:
                      sapientType: "OBJECT"
                      content: !<static_method_return>
                        target: "java.lang.ClassLoader"
                        method: "getPlatformClassLoader"
                        methodParameters: []
                      valueType: "java.lang.ClassLoader"
                      uuid: "classLoader5"
                valueType: "org.springframework.boot.EnvironmentConverter"
                uuid: "environmentConverter"
                fixed: true
              methodParameters:
              - name: "environment"
                value:
                  sapientType: "OBJECT"
                  content: !<method_return_from_value>
                    target: "org.springframework.core.env.ConfigurableEnvironment"
                    localVariableValue:
                      sapientType: "MOCK"
                      valueType: "org.springframework.boot.ApplicationContextFactory"
                      uuid: "applicationContextFactory"
                    methodParameters:
                    - name: "webApplicationType"
                      value:
                        sapientType: "ENUM"
                        content: !<regular>
                          value: "NONE"
                        valueType: "org.springframework.boot.WebApplicationType"
                        uuid: "webApplicationType"
                    methodName: "createEnvironment"
                  valueType: "org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "configurableEnvironment"
              - name: "type"
                value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "? extends org.springframework.core.env.ConfigurableEnvironment"
                  valueType: "java.lang.Class"
                  genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "class"
              methodName: "convertEnvironmentIfNecessary"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment2"
        - name: "sourceClass"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            uuid: "uniqueUuid16"
            explicitCastNeeded: true
        - name: "out"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "java.lang.System"
              fieldName: "out"
            valueType: "java.io.PrintStream"
            uuid: "printStream"
        methodName: "print"
      valueType: "org.springframework.boot.Banner"
      uuid: "banner"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ApplicationContextFactory"
                uuid: "applicationContextFactory"
              methodParameters:
              - name: "webApplicationType"
                value:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "NONE"
                  valueType: "org.springframework.boot.WebApplicationType"
                  uuid: "webApplicationType"
              methodName: "createEnvironment"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "? extends org.springframework.core.env.ConfigurableEnvironment"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      uuid: "uniqueUuid15"
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "java.lang.System"
        fieldName: "out"
      valueType: "java.io.PrintStream"
      uuid: "printStream"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "applicationContextFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void13"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.core.metrics.ApplicationStartup"
        fieldName: "DEFAULT"
      valueType: "org.springframework.core.metrics.ApplicationStartup"
      uuid: "applicationStartup"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void14"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ApplicationContextFactory"
                uuid: "applicationContextFactory"
              methodParameters:
              - name: "webApplicationType"
                value:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "NONE"
                  valueType: "org.springframework.boot.WebApplicationType"
                  uuid: "webApplicationType"
              methodName: "createEnvironment"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "? extends org.springframework.core.env.ConfigurableEnvironment"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void15"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "REAL"
      valueType: "org.springframework.aot.AotDetector"
      uuid: "AotDetector.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void16"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void17"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.DefaultBootstrapContext"
        parameters: []
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void18"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void19"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid17"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void20"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void21"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "springApplicationArguments"
      valueType: "java.lang.String"
      uuid: "uniqueUuid18"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultApplicationArguments"
      uuid: "defaultApplicationArguments"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void22"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "springBootBanner"
      valueType: "java.lang.String"
      uuid: "uniqueUuid19"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.Banner"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.SpringApplicationBannerPrinter"
            parameters:
            - name: "resourceLoader"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.core.io.DefaultResourceLoader"
                  parameters:
                  - name: "classLoader"
                    value:
                      sapientType: "NULL"
                      valueType: "java.lang.ClassLoader"
                valueType: "org.springframework.core.io.DefaultResourceLoader"
                uuid: "defaultResourceLoader"
                fixed: true
            - name: "fallbackBanner"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.Banner"
                uuid: "fieldBanner"
          valueType: "org.springframework.boot.SpringApplicationBannerPrinter"
          uuid: "springApplicationBannerPrinter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.EnvironmentConverter"
                  parameters:
                  - name: "classLoader"
                    value:
                      sapientType: "OBJECT"
                      content: !<static_method_return>
                        target: "java.lang.ClassLoader"
                        method: "getPlatformClassLoader"
                        methodParameters: []
                      valueType: "java.lang.ClassLoader"
                      uuid: "classLoader5"
                valueType: "org.springframework.boot.EnvironmentConverter"
                uuid: "environmentConverter"
                fixed: true
              methodParameters:
              - name: "environment"
                value:
                  sapientType: "OBJECT"
                  content: !<method_return_from_value>
                    target: "org.springframework.core.env.ConfigurableEnvironment"
                    localVariableValue:
                      sapientType: "MOCK"
                      valueType: "org.springframework.boot.ApplicationContextFactory"
                      uuid: "applicationContextFactory"
                    methodParameters:
                    - name: "webApplicationType"
                      value:
                        sapientType: "ENUM"
                        content: !<regular>
                          value: "NONE"
                        valueType: "org.springframework.boot.WebApplicationType"
                        uuid: "webApplicationType"
                    methodName: "createEnvironment"
                  valueType: "org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "configurableEnvironment"
              - name: "type"
                value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "? extends org.springframework.core.env.ConfigurableEnvironment"
                  valueType: "java.lang.Class"
                  genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "class"
              methodName: "convertEnvironmentIfNecessary"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment2"
        - name: "sourceClass"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            uuid: "uniqueUuid20"
            explicitCastNeeded: true
        - name: "out"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "java.lang.System"
              fieldName: "out"
            valueType: "java.io.PrintStream"
            uuid: "printStream"
        methodName: "print"
      valueType: "org.springframework.boot.Banner"
      uuid: "banner"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void23"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.beans.factory.config.BeanFactoryPostProcessor"
      uuid: "beanFactoryPostProcessor"
    - sapientType: "REAL"
      valueType: "org.springframework.aot.AotDetector"
      uuid: "AotDetector.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.Object"
      uuid: "set2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void24"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.Object"
      uuid: "set2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be empty"
      valueType: "java.lang.String"
      uuid: "uniqueUuid21"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void25"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Object[]"
      uuid: "objectArray2"
      collectionUuid: "set2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void26"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationShutdownHook"
        parameters: []
      valueType: "org.springframework.boot.SpringApplicationShutdownHook"
      uuid: "springApplicationShutdownHook"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void27"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void28"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration-days"
      valueType: "java.time.Duration"
      uuid: "duration"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "log2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.StartupInfoLogger"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            uuid: "uniqueUuid22"
            explicitCastNeeded: true
      valueType: "org.springframework.boot.StartupInfoLogger"
      uuid: "startupInfoLogger"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void29"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "log2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration2-days"
      valueType: "java.time.Duration"
      uuid: "duration2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void30"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration2-days"
      valueType: "java.time.Duration"
      uuid: "duration2"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.Runner"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.Runner"
      uuid: "uniqueUuid23"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
        fieldName: "INSTANCE"
      valueType: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
      uuid: "annotationAwareOrderComparator"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.util.Comparator"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<static_field_return>
            target: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
            fieldName: "INSTANCE"
          valueType: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
          uuid: "annotationAwareOrderComparator"
        methodParameters:
        - name: "sourceProvider"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "org.springframework.core.OrderComparator$OrderSourceProvider"
            uuid: "orderComparator.OrderSourceProvider"
        methodName: "withSourceProvider"
      valueType: "java.util.Comparator"
      genericValueType: "java.lang.Object"
      uuid: "comparator"
    - sapientType: "ANY"
      valueType: "org.springframework.core.OrderComparator$OrderSourceProvider"
      uuid: "orderComparator.OrderSourceProvider"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean7"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    branches:
    - lineNumber: 319
      expression: "this.registerShutdownHook"
      range: "(319,7)-(319,31)"
      evaluatedAs: true
    - lineNumber: 470
      expression: "hook != null"
      range: "(470,48)-(470,59)"
      evaluatedAs: false
      internalMethodName: "getRunListeners"
    - lineNumber: 471
      expression: "hookListener != null"
      range: "(471,7)-(471,26)"
      evaluatedAs: false
      internalMethodName: "getRunListeners"
    - lineNumber: 487
      expression: "this.environment != null"
      range: "(487,7)-(487,30)"
      evaluatedAs: false
      internalMethodName: "getOrCreateEnvironment"
    - lineNumber: 491
      expression: "environment == null"
      range: "(491,7)-(491,25)"
      evaluatedAs: false
      internalMethodName: "getOrCreateEnvironment"
    - lineNumber: 494
      expression: "environment != null"
      range: "(494,11)-(494,29)"
      evaluatedAs: true
      internalMethodName: "getOrCreateEnvironment"
    - lineNumber: 371
      expression: "!environment.containsProperty(\\\"spring.main.environment-prefix\\\
        \")"
      range: "(371,16)-(371,78)"
      evaluatedAs: false
      internalMethodName: "prepareEnvironment"
    - lineNumber: 374
      expression: "!this.isCustomEnvironment"
      range: "(374,7)-(374,31)"
      evaluatedAs: true
      internalMethodName: "prepareEnvironment"
    - lineNumber: 385
      expression: "environmentType == null"
      range: "(385,7)-(385,29)"
      evaluatedAs: false
      internalMethodName: "deduceEnvironmentClass"
    - lineNumber: 388
      expression: "environmentType == null"
      range: "(388,7)-(388,29)"
      evaluatedAs: false
      internalMethodName: "deduceEnvironmentClass"
    - lineNumber: 569
      expression: "this.bannerMode == Banner.Mode.OFF"
      range: "(569,7)-(569,40)"
      evaluatedAs: false
      internalMethodName: "printBanner"
    - lineNumber: 572
      expression: "this.resourceLoader != null"
      range: "(572,36)-(572,62)"
      evaluatedAs: false
      internalMethodName: "printBanner"
    - lineNumber: 575
      expression: "this.bannerMode == Mode.LOG"
      range: "(575,7)-(575,33)"
      evaluatedAs: false
      internalMethodName: "printBanner"
    - lineNumber: 436
      expression: "AotDetector.useGeneratedArtifacts()"
      range: "(436,7)-(436,41)"
      evaluatedAs: false
      internalMethodName: "addAotGeneratedInitializerIfNecessary"
    - lineNumber: 403
      expression: "this.logStartupInfo"
      range: "(403,7)-(403,25)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 404
      expression: "context.getParent() == null"
      range: "(404,19)-(404,45)"
      evaluatedAs: false
      internalMethodName: "prepareContext"
    - lineNumber: 410
      expression: "printedBanner != null"
      range: "(410,7)-(410,27)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 413
      expression: "beanFactory instanceof AbstractAutowireCapableBeanFactory autowireCapableBeanFactory"
      range: "(413,7)-(413,90)"
      evaluatedAs: false
      internalMethodName: "prepareContext"
    - lineNumber: 419
      expression: "this.lazyInitialization"
      range: "(419,7)-(419,29)"
      evaluatedAs: false
      internalMethodName: "prepareContext"
    - lineNumber: 422
      expression: "this.keepAlive"
      range: "(422,7)-(422,20)"
      evaluatedAs: false
      internalMethodName: "prepareContext"
    - lineNumber: 426
      expression: "!AotDetector.useGeneratedArtifacts()"
      range: "(426,7)-(426,42)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 453
      expression: "this.registerShutdownHook"
      range: "(453,7)-(453,31)"
      evaluatedAs: true
      internalMethodName: "refreshContext"
    - lineNumber: 337
      expression: "this.logStartupInfo"
      range: "(337,8)-(337,26)"
      evaluatedAs: true
    - lineNumber: 769
      expression: "for-each(beanNames)"
      range: "(769,26)-(769,34)"
      evaluatedAs: false
      internalMethodName: "callRunners"
    - lineNumber: 778
      expression: "beanFactory instanceof DefaultListableBeanFactory defaultListableBeanFactory"
      range: "(778,41)-(778,116)"
      evaluatedAs: false
      internalMethodName: "getOrderComparator"
    - lineNumber: 780
      expression: "dependencyComparator instanceof OrderComparator orderComparator"
      range: "(780,11)-(780,73)"
      evaluatedAs: false
      internalMethodName: "getOrderComparator"
    - lineNumber: 347
      expression: "context.isRunning()"
      range: "(347,8)-(347,26)"
      evaluatedAs: false
  - pathId: "path1"
    testPathName: "runWhenContextIsRunning"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "B758A953DB81622FFAA83D71F44CA4E3"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "args"
      modelFingerprint: "62B8E965720EE46A7489315174A3A841"
      valueUuid: "args"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid24):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "E9AF26A44A758F46AEA655FC22B60195"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "20006F76B7E4788E565F04F635D4A52D"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid25,argumentResolver:uniqueUuid26):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid27,argumentResolver:uniqueUuid28):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid29,argumentResolver:uniqueUuid30):list4"
    - type: "STATIC"
      name: "SpringApplication.Startup.class"
      modelFingerprint: "DA8622EB3506E174E0335AC27132B054"
      valueUuid: "SpringApplication.Startup.class"
      methodExercised:
        expression: "create():springApplication.Startup"
        staticAccess: true
    - type: "FIELD"
      name: "shutdownHook"
      modelFingerprint: "A0CD9DC1B1C93A40FEC7031737D9BE10"
      valueUuid: "springApplicationShutdownHook"
      methodExercised:
        expression: "enableShutdownHookAddition():void2"
    - type: "LOCAL_VARIABLE"
      name: "initializer"
      modelFingerprint: "78495708A547C9C6DC2151A7C67101AC"
      valueUuid: "bootstrapRegistryInitializer"
      methodExercised:
        expression: "initialize(registry:defaultBootstrapContext):void4"
    - type: "STATIC"
      name: "SpringFactoriesLoader.ArgumentResolver.class"
      modelFingerprint: "5F0034DA74D42417617FBE94CCB6AD81"
      valueUuid: "SpringFactoriesLoader.ArgumentResolver.class"
      methodExercised:
        expression: "of(type:uniqueUuid31,value:targetClassObject):springFactoriesLoader.ArgumentResolver"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "argumentResolver"
      modelFingerprint: "900146EE10B4914AE93AEF9C5995BCEE"
      valueUuid: "springFactoriesLoader.ArgumentResolver"
      methodExercised:
        expression: "and(type:uniqueUuid32,value:args):springFactoriesLoader.ArgumentResolver2"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "27BFD3AFF61EB16D6621CC8BB9BFE4B5"
      methodExercised:
        expression: "getClassLoader():classLoader4"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader4):springFactoriesLoader4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "C997EC8D4248E2F75F459758B43838D0"
      valueUuid: "springFactoriesLoader4"
      methodExercised:
        expression: "load(factoryType:uniqueUuid33,argumentResolver:springFactoriesLoader.ArgumentResolver2):list5"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "B030C484A6C44F4577E15609B1FF871D"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "starting(bootstrapContext:defaultBootstrapContext,mainApplicationClass:uniqueUuid34):void5"
    - type: "FIELD"
      name: "applicationContextFactory"
      modelFingerprint: "25377C2471D793231A76A9AB6031E41D"
      valueUuid: "applicationContextFactory"
      methodExercised:
        expression: "createEnvironment(webApplicationType:webApplicationType):configurableEnvironment"
    - type: "LOCAL_VARIABLE"
      name: "applicationArguments"
      modelFingerprint: "029CA1B5E8067A0C5CE390F4A8056BDF"
      valueUuid: "defaultApplicationArguments"
      methodExercised:
        expression: "getSourceArgs():stringArray"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "9AE315BA684DCD841054D9F789B4F9C8"
      methodExercised:
        expression: "configureEnvironment(environment:configurableEnvironment,args:stringArray):void6"
    - type: "STATIC"
      name: "ConfigurationPropertySources.class"
      modelFingerprint: "198AC93CDFAADDE86ED9A9E49385E22B"
      valueUuid: "ConfigurationPropertySources.class"
      methodExercised:
        expression: "attach(environment:configurableEnvironment):void7"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "407EE1C198658832C82611E6341DB4C3"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "environmentPrepared(bootstrapContext:defaultBootstrapContext,environment:configurableEnvironment):void8"
    - type: "STATIC"
      name: "DefaultPropertiesPropertySource.class"
      modelFingerprint: "BD26AEAB0A6DCF2FBEC9D13E6DCCF18D"
      valueUuid: "DefaultPropertiesPropertySource.class"
      methodExercised:
        expression: "moveToEnd(environment:configurableEnvironment):void9"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "ED6C6F1CB47F3B2AD213B1B75254EE80"
      valueUuid: "configurableEnvironment"
      methodExercised:
        expression: "containsProperty(key:uniqueUuid35):boolean1"
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "2A737F0AED0B795580225C9A5C41679A"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "state(expression:uniqueUuid36,message:uniqueUuid37):void10"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "B13CEBE9A8F1B2788B7AB42A3097A2C5"
      methodExercised:
        expression: "bindToSpringApplication(environment:configurableEnvironment):void11"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "27BFD3AFF61EB16D6621CC8BB9BFE4B5"
      methodExercised:
        expression: "getClassLoader():classLoader5"
    - type: "FIELD"
      name: "applicationContextFactory"
      modelFingerprint: "A5DEFE6802FCFA42B4FB428A9C1ED543"
      valueUuid: "applicationContextFactory"
      methodExercised:
        expression: "getEnvironmentType(webApplicationType:webApplicationType):class"
    - type: "LOCAL_VARIABLE"
      name: "DEFAULT"
      modelFingerprint: "B5E582BC070960EA688E5937173C2154"
      valueUuid: "applicationContextFactory"
      methodExercised:
        expression: "getEnvironmentType(webApplicationType:webApplicationType):class2"
    - type: "LOCAL_VARIABLE"
      name: "environmentConverter"
      modelFingerprint: "7EED4670244FD1F4F65657E3CA7A7A22"
      valueUuid: "environmentConverter"
      methodExercised:
        expression: "convertEnvironmentIfNecessary(environment:configurableEnvironment,type:uniqueUuid38):configurableEnvironment2"
    - type: "STATIC"
      name: "ConfigurationPropertySources.class"
      modelFingerprint: "90BA491718AA8DD9E3F26225EF9E03EF"
      valueUuid: "ConfigurationPropertySources.class"
      methodExercised:
        expression: "attach(environment:configurableEnvironment2):void12"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "bannerPrinter"
      modelFingerprint: "8226B2E5B15BB059F216D82161EA1A67"
      valueUuid: "springApplicationBannerPrinter"
      methodExercised:
        expression: "print(environment:configurableEnvironment2,sourceClass:uniqueUuid42,out:printStream):banner"
    - type: "FIELD"
      name: "applicationContextFactory"
      modelFingerprint: "EEC42AEF38C02991C940B2D3733A5914"
      valueUuid: "applicationContextFactory"
      methodExercised:
        expression: "create(webApplicationType:webApplicationType):configurableApplicationContext"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "C4457CBF6543DA61B3CC571D7855BC05"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "setApplicationStartup(applicationStartup:applicationStartup):void13"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "62CB599FF82EF3875CC28BA901D5E98B"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "setEnvironment(environment:configurableEnvironment2):void14"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "F7247F20B4DB91E482D564DC0E3EE670"
      methodExercised:
        expression: "postProcessApplicationContext(context:configurableApplicationContext):void15"
    - type: "STATIC"
      name: "AotDetector.class.real"
      modelFingerprint: "A651F35C9CB1BB4329EA23C459C95680"
      valueUuid: "AotDetector.class.real"
      methodExercised:
        expression: "useGeneratedArtifacts():boolean2"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "2629F473285A8D2B3BDA80841BE1B13C"
      methodExercised:
        expression: "applyInitializers(context:configurableApplicationContext):void16"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "F25700EBA48DFBE78B5458FCD3EB4646"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "contextPrepared(context:configurableApplicationContext):void17"
    - type: "LOCAL_VARIABLE"
      name: "bootstrapContext"
      modelFingerprint: "909D947F9D1DDC6DDEA8500941736C94"
      valueUuid: "defaultBootstrapContext"
      methodExercised:
        expression: "close(applicationContext:configurableApplicationContext):void18"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "5E3904425938E13844EB71188213737A"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "getParent():applicationContext"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "AC62DBB448DDE3961AAF97490A0B542D"
      methodExercised:
        expression: "logStartupInfo(isRoot:uniqueUuid45):void19"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "7204D97E17BC4435BDF63B535ED64B97"
      methodExercised:
        expression: "logStartupProfileInfo(context:configurableApplicationContext):void20"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "6A01AAC3461FC3A19CF28FB5CC4FB9E4"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "7107C791919372E064D179B76AC9C5E9"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "registerSingleton(beanName:uniqueUuid46,singletonObject:defaultApplicationArguments):void21"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "21D0982D0F6526544EE2782E0899FB14"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "registerSingleton(beanName:uniqueUuid47,singletonObject:banner):void22"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "69034248F39E1300FEF9D04C0504E01A"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "addBeanFactoryPostProcessor(postProcessor:beanFactoryPostProcessor):void23"
    - type: "STATIC"
      name: "AotDetector.class.real"
      modelFingerprint: "A651F35C9CB1BB4329EA23C459C95680"
      valueUuid: "AotDetector.class.real"
      methodExercised:
        expression: "useGeneratedArtifacts():boolean4"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "504C2B18FD5DE35DA01916EC347AB7B1"
      methodExercised:
        expression: "getAllSources():set2"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A2E059860C5C45B44F0B7F9AA4D95BDB"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notEmpty(collection:set2,message:uniqueUuid49):void24"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "91ACBEFD431AA6FB4341C4C76B033E1D"
      methodExercised:
        expression: "load(context:configurableApplicationContext,sources:objectArray2):void25"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "9DAE3D234F2CD76AACDE8442BC6EE4A6"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "contextLoaded(context:configurableApplicationContext):void26"
    - type: "FIELD"
      name: "shutdownHook"
      modelFingerprint: "955744B9BBBD449D14979830C226B3DB"
      valueUuid: "springApplicationShutdownHook"
      methodExercised:
        expression: "registerApplicationContext(context:configurableApplicationContext):void27"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "01A9466B1E33218E3C0D5F4F6DD218E7"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "refresh():void28"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      name: "startup"
      modelFingerprint: "9514A429A770044AEBDFB50062B30B4D"
      valueUuid: "springApplication.Startup"
      methodExercised:
        expression: "started():duration"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "FE5D2BC90EC0B24D7B85FD4D1CDFF78B"
      methodExercised:
        expression: "getApplicationLog():log2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "31F4778FC7271F5256CA0997FCC61AFA"
      valueUuid: "startupInfoLogger"
      methodExercised:
        expression: "logStarted(applicationLog:log2,startup:springApplication.Startup):void29"
    - type: "LOCAL_VARIABLE"
      name: "startup"
      modelFingerprint: "8632254D8D53E67F9906077923095FAF"
      valueUuid: "springApplication.Startup"
      methodExercised:
        expression: "timeTakenToStarted():duration2"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "676CA2E0A33FFC3648204E1B59D55045"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "started(context:configurableApplicationContext,timeTaken:duration2):void30"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "6A01AAC3461FC3A19CF28FB5CC4FB9E4"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory2"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "8A57C6E79097BE70207C443A51A26E7F"
      valueUuid: "configurableListableBeanFactory2"
      methodExercised:
        expression: "getBeanNamesForType(type:uniqueUuid51):stringArray2"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "049356A3DCD2541F910927E5E31BCA20"
      valueUuid: "configurableListableBeanFactory2"
      methodExercised:
        expression: "getBean(name:string4,requiredType:uniqueUuid52):object4"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "9FB5A4AC1406067842215F6E568A3B04"
      valueUuid: "annotationAwareOrderComparator"
      methodExercised:
        expression: "withSourceProvider(sourceProvider:orderComparator.OrderSourceProvider):comparator"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "DA96E3F9148FB8FFC04C9940573B9AF4"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "isRunning():boolean7"
    - type: "LOCAL_VARIABLE"
      name: "startup"
      modelFingerprint: "617185A19112E6053002DE8AAB9AA7F5"
      valueUuid: "springApplication.Startup"
      methodExercised:
        expression: "ready():duration3"
        privateAccess: true
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "71FA1946CACE39932158601FC2224A60"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "ready(context:configurableApplicationContext,timeTaken:duration3):void32"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D051A47616C33D8E3B501B0F70F97E9D"
      valueUuid: "configurableApplicationContext"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
        propertiesMap:
          applicationContextFactory:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ApplicationContextFactory"
            uuid: "applicationContextFactory"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid24"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "REACTIVE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "bootstrapRegistryInitializer"
          collectionUuid: "arrayList"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid25"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid26"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid27"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid28"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid29"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid30"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "SpringApplication.Startup.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationShutdownHook"
        parameters: []
      valueType: "org.springframework.boot.SpringApplicationShutdownHook"
      uuid: "springApplicationShutdownHook"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "bootstrapRegistryInitializer"
      collectionUuid: "arrayList"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "SpringFactoriesLoader.ArgumentResolver.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.SpringApplication"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.SpringApplication"
      uuid: "uniqueUuid31"
      fixed: true
    - sapientType: "THIS"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String[]"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.String[]"
      uuid: "uniqueUuid32"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader4"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader4"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader4"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader4"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.SpringApplicationRunListener"
      uuid: "list5"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.SpringApplicationRunListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.SpringApplicationRunListener"
      uuid: "uniqueUuid33"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      uuid: "uniqueUuid34"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "applicationContextFactory"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "ENUM"
      content: !<regular>
        value: "REACTIVE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.DefaultApplicationArguments"
        parameters:
        - name: "args"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "args"
      valueType: "org.springframework.boot.DefaultApplicationArguments"
      uuid: "defaultApplicationArguments"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "ConfigurationPropertySources.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.DefaultPropertiesPropertySource"
      uuid: "DefaultPropertiesPropertySource.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "spring.main.environment-prefix"
      valueType: "java.lang.String"
      uuid: "uniqueUuid35"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid36"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Environment prefix cannot be set via properties."
      valueType: "java.lang.String"
      uuid: "uniqueUuid37"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void11"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "applicationContextFactory"
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
      uuid: "class"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "REACTIVE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "applicationContextFactory"
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
      uuid: "class2"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "REACTIVE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.EnvironmentConverter"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "classLoader5"
      valueType: "org.springframework.boot.EnvironmentConverter"
      uuid: "environmentConverter"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ApplicationContextFactory"
                uuid: "applicationContextFactory"
              methodParameters:
              - name: "webApplicationType"
                value:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "REACTIVE"
                  valueType: "org.springframework.boot.WebApplicationType"
                  uuid: "webApplicationType"
              methodName: "createEnvironment"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.springframework.boot.ApplicationEnvironment"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "uniqueUuid39"
            fixed: true
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.ApplicationEnvironment"
      valueType: "java.lang.Class"
      genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
      uuid: "uniqueUuid38"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "ConfigurationPropertySources.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void12"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ApplicationContextFactory"
                uuid: "applicationContextFactory"
              methodParameters:
              - name: "webApplicationType"
                value:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "REACTIVE"
                  valueType: "org.springframework.boot.WebApplicationType"
                  uuid: "webApplicationType"
              methodName: "createEnvironment"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.springframework.boot.ApplicationEnvironment"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "uniqueUuid40"
            fixed: true
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationBannerPrinter"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "fallbackBanner"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.Banner"
            uuid: "fieldBanner"
      valueType: "org.springframework.boot.SpringApplicationBannerPrinter"
      uuid: "springApplicationBannerPrinter"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.Banner"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.SpringApplicationBannerPrinter"
            parameters:
            - name: "resourceLoader"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.core.io.ResourceLoader"
                uuid: "resourceLoader"
            - name: "fallbackBanner"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.Banner"
                uuid: "fieldBanner"
          valueType: "org.springframework.boot.SpringApplicationBannerPrinter"
          uuid: "springApplicationBannerPrinter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.EnvironmentConverter"
                  parameters:
                  - name: "classLoader"
                    value:
                      sapientType: "OBJECT"
                      content: !<static_method_return>
                        target: "java.lang.ClassLoader"
                        method: "getPlatformClassLoader"
                        methodParameters: []
                      valueType: "java.lang.ClassLoader"
                      uuid: "classLoader5"
                valueType: "org.springframework.boot.EnvironmentConverter"
                uuid: "environmentConverter"
                fixed: true
              methodParameters:
              - name: "environment"
                value:
                  sapientType: "OBJECT"
                  content: !<method_return_from_value>
                    target: "org.springframework.core.env.ConfigurableEnvironment"
                    localVariableValue:
                      sapientType: "MOCK"
                      valueType: "org.springframework.boot.ApplicationContextFactory"
                      uuid: "applicationContextFactory"
                    methodParameters:
                    - name: "webApplicationType"
                      value:
                        sapientType: "ENUM"
                        content: !<regular>
                          value: "REACTIVE"
                        valueType: "org.springframework.boot.WebApplicationType"
                        uuid: "webApplicationType"
                    methodName: "createEnvironment"
                  valueType: "org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "configurableEnvironment"
              - name: "type"
                value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.ApplicationEnvironment"
                  valueType: "java.lang.Class"
                  genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
                  fixed: true
              methodName: "convertEnvironmentIfNecessary"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment2"
        - name: "sourceClass"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            uuid: "uniqueUuid43"
            explicitCastNeeded: true
        - name: "out"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "java.lang.System"
              fieldName: "out"
            valueType: "java.io.PrintStream"
            uuid: "printStream"
        methodName: "print"
      valueType: "org.springframework.boot.Banner"
      uuid: "banner"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ApplicationContextFactory"
                uuid: "applicationContextFactory"
              methodParameters:
              - name: "webApplicationType"
                value:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "REACTIVE"
                  valueType: "org.springframework.boot.WebApplicationType"
                  uuid: "webApplicationType"
              methodName: "createEnvironment"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.springframework.boot.ApplicationEnvironment"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "uniqueUuid41"
            fixed: true
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      uuid: "uniqueUuid42"
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "java.lang.System"
        fieldName: "out"
      valueType: "java.io.PrintStream"
      uuid: "printStream"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "applicationContextFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "ENUM"
      content: !<regular>
        value: "REACTIVE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void13"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.core.metrics.ApplicationStartup"
        fieldName: "DEFAULT"
      valueType: "org.springframework.core.metrics.ApplicationStartup"
      uuid: "applicationStartup"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void14"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ApplicationContextFactory"
                uuid: "applicationContextFactory"
              methodParameters:
              - name: "webApplicationType"
                value:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "REACTIVE"
                  valueType: "org.springframework.boot.WebApplicationType"
                  uuid: "webApplicationType"
              methodName: "createEnvironment"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.springframework.boot.ApplicationEnvironment"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "uniqueUuid44"
            fixed: true
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void15"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "REAL"
      valueType: "org.springframework.aot.AotDetector"
      uuid: "AotDetector.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void16"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void17"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.DefaultBootstrapContext"
        parameters: []
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void18"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "NULL"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void19"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid45"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void20"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void21"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "springApplicationArguments"
      valueType: "java.lang.String"
      uuid: "uniqueUuid46"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultApplicationArguments"
      uuid: "defaultApplicationArguments"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void22"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "springBootBanner"
      valueType: "java.lang.String"
      uuid: "uniqueUuid47"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.Banner"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.SpringApplicationBannerPrinter"
            parameters:
            - name: "resourceLoader"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.core.io.ResourceLoader"
                uuid: "resourceLoader"
            - name: "fallbackBanner"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.Banner"
                uuid: "fieldBanner"
          valueType: "org.springframework.boot.SpringApplicationBannerPrinter"
          uuid: "springApplicationBannerPrinter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.EnvironmentConverter"
                  parameters:
                  - name: "classLoader"
                    value:
                      sapientType: "OBJECT"
                      content: !<static_method_return>
                        target: "java.lang.ClassLoader"
                        method: "getPlatformClassLoader"
                        methodParameters: []
                      valueType: "java.lang.ClassLoader"
                      uuid: "classLoader5"
                valueType: "org.springframework.boot.EnvironmentConverter"
                uuid: "environmentConverter"
                fixed: true
              methodParameters:
              - name: "environment"
                value:
                  sapientType: "OBJECT"
                  content: !<method_return_from_value>
                    target: "org.springframework.core.env.ConfigurableEnvironment"
                    localVariableValue:
                      sapientType: "MOCK"
                      valueType: "org.springframework.boot.ApplicationContextFactory"
                      uuid: "applicationContextFactory"
                    methodParameters:
                    - name: "webApplicationType"
                      value:
                        sapientType: "ENUM"
                        content: !<regular>
                          value: "REACTIVE"
                        valueType: "org.springframework.boot.WebApplicationType"
                        uuid: "webApplicationType"
                    methodName: "createEnvironment"
                  valueType: "org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "configurableEnvironment"
              - name: "type"
                value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.ApplicationEnvironment"
                  valueType: "java.lang.Class"
                  genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
                  fixed: true
              methodName: "convertEnvironmentIfNecessary"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment2"
        - name: "sourceClass"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            uuid: "uniqueUuid48"
            explicitCastNeeded: true
        - name: "out"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "java.lang.System"
              fieldName: "out"
            valueType: "java.io.PrintStream"
            uuid: "printStream"
        methodName: "print"
      valueType: "org.springframework.boot.Banner"
      uuid: "banner"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void23"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.beans.factory.config.BeanFactoryPostProcessor"
      uuid: "beanFactoryPostProcessor"
    - sapientType: "REAL"
      valueType: "org.springframework.aot.AotDetector"
      uuid: "AotDetector.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.Object"
      uuid: "set2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void24"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.Object"
      uuid: "set2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be empty"
      valueType: "java.lang.String"
      uuid: "uniqueUuid49"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void25"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Object[]"
      uuid: "objectArray2"
      collectionUuid: "set2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void26"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationShutdownHook"
        parameters: []
      valueType: "org.springframework.boot.SpringApplicationShutdownHook"
      uuid: "springApplicationShutdownHook"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void27"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void28"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration-days"
      valueType: "java.time.Duration"
      uuid: "duration"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "log2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.StartupInfoLogger"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            uuid: "uniqueUuid50"
            explicitCastNeeded: true
      valueType: "org.springframework.boot.StartupInfoLogger"
      uuid: "startupInfoLogger"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void29"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "log2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration2-days"
      valueType: "java.time.Duration"
      uuid: "duration2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void30"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration2-days"
      valueType: "java.time.Duration"
      uuid: "duration2"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getBeanNamesForTypeItem1"
            valueType: "java.lang.String"
            uuid: "string4"
      valueType: "java.lang.String[]"
      uuid: "stringArray2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.Runner"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.Runner"
      uuid: "uniqueUuid51"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.Runner"
      uuid: "object4"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanNamesForTypeItem1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.Runner"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.Runner"
      uuid: "uniqueUuid52"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
        fieldName: "INSTANCE"
      valueType: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
      uuid: "annotationAwareOrderComparator"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.util.Comparator"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<static_field_return>
            target: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
            fieldName: "INSTANCE"
          valueType: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
          uuid: "annotationAwareOrderComparator"
        methodParameters:
        - name: "sourceProvider"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "org.springframework.core.OrderComparator$OrderSourceProvider"
            uuid: "orderComparator.OrderSourceProvider"
        methodName: "withSourceProvider"
      valueType: "java.util.Comparator"
      genericValueType: "java.lang.Object"
      uuid: "comparator"
    - sapientType: "ANY"
      valueType: "org.springframework.core.OrderComparator$OrderSourceProvider"
      uuid: "orderComparator.OrderSourceProvider"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration3-days"
      valueType: "java.time.Duration"
      uuid: "duration3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void32"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration3-days"
      valueType: "java.time.Duration"
      uuid: "duration3"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    branches:
    - lineNumber: 319
      expression: "this.registerShutdownHook"
      range: "(319,7)-(319,31)"
      evaluatedAs: true
    - lineNumber: 470
      expression: "hook != null"
      range: "(470,48)-(470,59)"
      evaluatedAs: false
      internalMethodName: "getRunListeners"
    - lineNumber: 471
      expression: "hookListener != null"
      range: "(471,7)-(471,26)"
      evaluatedAs: false
      internalMethodName: "getRunListeners"
    - lineNumber: 487
      expression: "this.environment != null"
      range: "(487,7)-(487,30)"
      evaluatedAs: false
      internalMethodName: "getOrCreateEnvironment"
    - lineNumber: 491
      expression: "environment == null"
      range: "(491,7)-(491,25)"
      evaluatedAs: false
      internalMethodName: "getOrCreateEnvironment"
    - lineNumber: 494
      expression: "environment != null"
      range: "(494,11)-(494,29)"
      evaluatedAs: true
      internalMethodName: "getOrCreateEnvironment"
    - lineNumber: 371
      expression: "!environment.containsProperty(\\\"spring.main.environment-prefix\\\
        \")"
      range: "(371,16)-(371,78)"
      evaluatedAs: true
      internalMethodName: "prepareEnvironment"
    - lineNumber: 374
      expression: "!this.isCustomEnvironment"
      range: "(374,7)-(374,31)"
      evaluatedAs: true
      internalMethodName: "prepareEnvironment"
    - lineNumber: 385
      expression: "environmentType == null"
      range: "(385,7)-(385,29)"
      evaluatedAs: true
      internalMethodName: "deduceEnvironmentClass"
    - lineNumber: 385
      expression: "this.applicationContextFactory != ApplicationContextFactory.DEFAULT"
      range: "(385,34)-(385,100)"
      evaluatedAs: true
      internalMethodName: "deduceEnvironmentClass"
    - lineNumber: 388
      expression: "environmentType == null"
      range: "(388,7)-(388,29)"
      evaluatedAs: true
      internalMethodName: "deduceEnvironmentClass"
    - lineNumber: 569
      expression: "this.bannerMode == Banner.Mode.OFF"
      range: "(569,7)-(569,40)"
      evaluatedAs: false
      internalMethodName: "printBanner"
    - lineNumber: 572
      expression: "this.resourceLoader != null"
      range: "(572,36)-(572,62)"
      evaluatedAs: true
      internalMethodName: "printBanner"
    - lineNumber: 575
      expression: "this.bannerMode == Mode.LOG"
      range: "(575,7)-(575,33)"
      evaluatedAs: false
      internalMethodName: "printBanner"
    - lineNumber: 436
      expression: "AotDetector.useGeneratedArtifacts()"
      range: "(436,7)-(436,41)"
      evaluatedAs: false
      internalMethodName: "addAotGeneratedInitializerIfNecessary"
    - lineNumber: 403
      expression: "this.logStartupInfo"
      range: "(403,7)-(403,25)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 404
      expression: "context.getParent() == null"
      range: "(404,19)-(404,45)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 410
      expression: "printedBanner != null"
      range: "(410,7)-(410,27)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 413
      expression: "beanFactory instanceof AbstractAutowireCapableBeanFactory autowireCapableBeanFactory"
      range: "(413,7)-(413,90)"
      evaluatedAs: false
      internalMethodName: "prepareContext"
    - lineNumber: 419
      expression: "this.lazyInitialization"
      range: "(419,7)-(419,29)"
      evaluatedAs: false
      internalMethodName: "prepareContext"
    - lineNumber: 422
      expression: "this.keepAlive"
      range: "(422,7)-(422,20)"
      evaluatedAs: false
      internalMethodName: "prepareContext"
    - lineNumber: 426
      expression: "!AotDetector.useGeneratedArtifacts()"
      range: "(426,7)-(426,42)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 453
      expression: "this.registerShutdownHook"
      range: "(453,7)-(453,31)"
      evaluatedAs: true
      internalMethodName: "refreshContext"
    - lineNumber: 337
      expression: "this.logStartupInfo"
      range: "(337,8)-(337,26)"
      evaluatedAs: true
    - lineNumber: 769
      expression: "for-each(beanNames)"
      range: "(769,26)-(769,34)"
      evaluatedAs: true
      internalMethodName: "callRunners"
    - lineNumber: 778
      expression: "beanFactory instanceof DefaultListableBeanFactory defaultListableBeanFactory"
      range: "(778,41)-(778,116)"
      evaluatedAs: false
      internalMethodName: "getOrderComparator"
    - lineNumber: 780
      expression: "dependencyComparator instanceof OrderComparator orderComparator"
      range: "(780,11)-(780,73)"
      evaluatedAs: false
      internalMethodName: "getOrderComparator"
    - lineNumber: 347
      expression: "context.isRunning()"
      range: "(347,8)-(347,26)"
      evaluatedAs: true
  - pathId: "path10"
    testPathName: "runWhenExceptionInstanceOfAbandonedRunExceptionThrowsSpringApplicationAbandonedRunException"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "858B714BEB0D971C37F67A0EB164AB6B"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "args"
      modelFingerprint: "62B8E965720EE46A7489315174A3A841"
      valueUuid: "args"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid53):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "E9AF26A44A758F46AEA655FC22B60195"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "20006F76B7E4788E565F04F635D4A52D"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid54,argumentResolver:uniqueUuid55):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid56,argumentResolver:uniqueUuid57):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid58,argumentResolver:uniqueUuid59):list4"
    - type: "STATIC"
      name: "SpringApplication.Startup.class"
      modelFingerprint: "DA8622EB3506E174E0335AC27132B054"
      valueUuid: "SpringApplication.Startup.class"
      methodExercised:
        expression: "create():springApplication.Startup"
        staticAccess: true
    - type: "FIELD"
      name: "shutdownHook"
      modelFingerprint: "A0CD9DC1B1C93A40FEC7031737D9BE10"
      valueUuid: "springApplicationShutdownHook"
      methodExercised:
        expression: "enableShutdownHookAddition():void2"
    - type: "LOCAL_VARIABLE"
      name: "initializer"
      modelFingerprint: "78495708A547C9C6DC2151A7C67101AC"
      valueUuid: "bootstrapRegistryInitializer"
      methodExercised:
        expression: "initialize(registry:defaultBootstrapContext):void4"
    - type: "STATIC"
      name: "SpringFactoriesLoader.ArgumentResolver.class"
      modelFingerprint: "5F0034DA74D42417617FBE94CCB6AD81"
      valueUuid: "SpringFactoriesLoader.ArgumentResolver.class"
      methodExercised:
        expression: "of(type:uniqueUuid60,value:targetClassObject):springFactoriesLoader.ArgumentResolver"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "argumentResolver"
      modelFingerprint: "900146EE10B4914AE93AEF9C5995BCEE"
      valueUuid: "springFactoriesLoader.ArgumentResolver"
      methodExercised:
        expression: "and(type:uniqueUuid61,value:args):springFactoriesLoader.ArgumentResolver2"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "27BFD3AFF61EB16D6621CC8BB9BFE4B5"
      methodExercised:
        expression: "getClassLoader():classLoader4"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader4):springFactoriesLoader4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "C997EC8D4248E2F75F459758B43838D0"
      valueUuid: "springFactoriesLoader4"
      methodExercised:
        expression: "load(factoryType:uniqueUuid62,argumentResolver:springFactoriesLoader.ArgumentResolver2):list5"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "B030C484A6C44F4577E15609B1FF871D"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "starting(bootstrapContext:defaultBootstrapContext,mainApplicationClass:uniqueUuid63):void5"
    - type: "FIELD"
      name: "applicationContextFactory"
      modelFingerprint: "25377C2471D793231A76A9AB6031E41D"
      valueUuid: "applicationContextFactory"
      methodExercised:
        expression: "createEnvironment(webApplicationType:webApplicationType):configurableEnvironment"
    - type: "LOCAL_VARIABLE"
      name: "applicationArguments"
      modelFingerprint: "029CA1B5E8067A0C5CE390F4A8056BDF"
      valueUuid: "defaultApplicationArguments"
      methodExercised:
        expression: "getSourceArgs():stringArray"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "9AE315BA684DCD841054D9F789B4F9C8"
      methodExercised:
        expression: "configureEnvironment(environment:configurableEnvironment,args:stringArray):void6"
    - type: "STATIC"
      name: "ConfigurationPropertySources.class"
      modelFingerprint: "198AC93CDFAADDE86ED9A9E49385E22B"
      valueUuid: "ConfigurationPropertySources.class"
      methodExercised:
        expression: "attach(environment:configurableEnvironment):void7"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "407EE1C198658832C82611E6341DB4C3"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "environmentPrepared(bootstrapContext:defaultBootstrapContext,environment:configurableEnvironment):void8"
    - type: "STATIC"
      name: "DefaultPropertiesPropertySource.class"
      modelFingerprint: "BD26AEAB0A6DCF2FBEC9D13E6DCCF18D"
      valueUuid: "DefaultPropertiesPropertySource.class"
      methodExercised:
        expression: "moveToEnd(environment:configurableEnvironment):void9"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "ED6C6F1CB47F3B2AD213B1B75254EE80"
      valueUuid: "configurableEnvironment"
      methodExercised:
        expression: "containsProperty(key:uniqueUuid64):boolean1"
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "2A737F0AED0B795580225C9A5C41679A"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "state(expression:uniqueUuid65,message:uniqueUuid66):void10"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "B13CEBE9A8F1B2788B7AB42A3097A2C5"
      methodExercised:
        expression: "bindToSpringApplication(environment:configurableEnvironment):void11"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "27BFD3AFF61EB16D6621CC8BB9BFE4B5"
      methodExercised:
        expression: "getClassLoader():classLoader5"
    - type: "FIELD"
      name: "applicationContextFactory"
      modelFingerprint: "E66E002C0664721A8E15A73F90157A41"
      valueUuid: "applicationContextFactory"
      methodExercised:
        expression: "getEnvironmentType(webApplicationType:webApplicationType):class"
    - type: "LOCAL_VARIABLE"
      name: "environmentConverter"
      modelFingerprint: "343C8C898CBFF5B474786F8CF0AAD484"
      valueUuid: "environmentConverter"
      methodExercised:
        expression: "convertEnvironmentIfNecessary(environment:configurableEnvironment,type:class):configurableEnvironment2"
    - type: "STATIC"
      name: "ConfigurationPropertySources.class"
      modelFingerprint: "EACBD1DB13877D4CE7F99FB1A2712485"
      valueUuid: "ConfigurationPropertySources.class"
      methodExercised:
        expression: "attach(environment:configurableEnvironment2):void12"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "bannerPrinter"
      modelFingerprint: "C34FDF50A774C67D859D410B0CBAE87D"
      valueUuid: "springApplicationBannerPrinter"
      methodExercised:
        expression: "print(environment:configurableEnvironment2,sourceClass:uniqueUuid67,out:printStream):banner"
    - type: "FIELD"
      name: "applicationContextFactory"
      modelFingerprint: "EEC42AEF38C02991C940B2D3733A5914"
      valueUuid: "applicationContextFactory"
      methodExercised:
        expression: "create(webApplicationType:webApplicationType):configurableApplicationContext"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "C4457CBF6543DA61B3CC571D7855BC05"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "setApplicationStartup(applicationStartup:applicationStartup):void13"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "5D002C96109647C03179CDE3D65E6842"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "setEnvironment(environment:configurableEnvironment2):void14"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "F7247F20B4DB91E482D564DC0E3EE670"
      methodExercised:
        expression: "postProcessApplicationContext(context:configurableApplicationContext):void15"
    - type: "STATIC"
      name: "AotDetector.class.real"
      modelFingerprint: "A651F35C9CB1BB4329EA23C459C95680"
      valueUuid: "AotDetector.class.real"
      methodExercised:
        expression: "useGeneratedArtifacts():boolean2"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "2629F473285A8D2B3BDA80841BE1B13C"
      methodExercised:
        expression: "applyInitializers(context:configurableApplicationContext):void16"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "F25700EBA48DFBE78B5458FCD3EB4646"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "contextPrepared(context:configurableApplicationContext):void17"
    - type: "LOCAL_VARIABLE"
      name: "bootstrapContext"
      modelFingerprint: "909D947F9D1DDC6DDEA8500941736C94"
      valueUuid: "defaultBootstrapContext"
      methodExercised:
        expression: "close(applicationContext:configurableApplicationContext):void18"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "5E3904425938E13844EB71188213737A"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "getParent():applicationContext"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "AC62DBB448DDE3961AAF97490A0B542D"
      methodExercised:
        expression: "logStartupInfo(isRoot:uniqueUuid69):void19"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "7204D97E17BC4435BDF63B535ED64B97"
      methodExercised:
        expression: "logStartupProfileInfo(context:configurableApplicationContext):void20"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "6A01AAC3461FC3A19CF28FB5CC4FB9E4"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "7107C791919372E064D179B76AC9C5E9"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "registerSingleton(beanName:uniqueUuid70,singletonObject:defaultApplicationArguments):void21"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "5929567A6EF90B10D083B285E48F4D3D"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "registerSingleton(beanName:uniqueUuid71,singletonObject:banner):void22"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "69034248F39E1300FEF9D04C0504E01A"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "addBeanFactoryPostProcessor(postProcessor:beanFactoryPostProcessor):void23"
    - type: "STATIC"
      name: "AotDetector.class.real"
      modelFingerprint: "A651F35C9CB1BB4329EA23C459C95680"
      valueUuid: "AotDetector.class.real"
      methodExercised:
        expression: "useGeneratedArtifacts():boolean4"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "504C2B18FD5DE35DA01916EC347AB7B1"
      methodExercised:
        expression: "getAllSources():set2"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A2E059860C5C45B44F0B7F9AA4D95BDB"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notEmpty(collection:set2,message:uniqueUuid73):void24"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "91ACBEFD431AA6FB4341C4C76B033E1D"
      methodExercised:
        expression: "load(context:configurableApplicationContext,sources:objectArray2):void25"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "9DAE3D234F2CD76AACDE8442BC6EE4A6"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "contextLoaded(context:configurableApplicationContext):void26"
    - type: "FIELD"
      name: "shutdownHook"
      modelFingerprint: "955744B9BBBD449D14979830C226B3DB"
      valueUuid: "springApplicationShutdownHook"
      methodExercised:
        expression: "registerApplicationContext(context:configurableApplicationContext):void27"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "01A9466B1E33218E3C0D5F4F6DD218E7"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "refresh():void28"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      name: "startup"
      modelFingerprint: "9514A429A770044AEBDFB50062B30B4D"
      valueUuid: "springApplication.Startup"
      methodExercised:
        expression: "started():duration"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "FE5D2BC90EC0B24D7B85FD4D1CDFF78B"
      methodExercised:
        expression: "getApplicationLog():log2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "31F4778FC7271F5256CA0997FCC61AFA"
      valueUuid: "startupInfoLogger"
      methodExercised:
        expression: "logStarted(applicationLog:log2,startup:springApplication.Startup):void29"
    - type: "LOCAL_VARIABLE"
      name: "startup"
      modelFingerprint: "8632254D8D53E67F9906077923095FAF"
      valueUuid: "springApplication.Startup"
      methodExercised:
        expression: "timeTakenToStarted():duration2"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "676CA2E0A33FFC3648204E1B59D55045"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "started(context:configurableApplicationContext,timeTaken:duration2):void30"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "6A01AAC3461FC3A19CF28FB5CC4FB9E4"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory2"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "8A57C6E79097BE70207C443A51A26E7F"
      valueUuid: "configurableListableBeanFactory2"
      methodExercised:
        expression: "getBeanNamesForType(type:uniqueUuid75):stringArray2"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "049356A3DCD2541F910927E5E31BCA20"
      valueUuid: "configurableListableBeanFactory2"
      methodExercised:
        expression: "getBean(name:string4,requiredType:uniqueUuid76):object4"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "9FB5A4AC1406067842215F6E568A3B04"
      valueUuid: "annotationAwareOrderComparator"
      methodExercised:
        expression: "withSourceProvider(sourceProvider:orderComparator.OrderSourceProvider):comparator"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "428D1CDD008F1C745BC19D454576AAF4"
      valueUuid: "throwable"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
        propertiesMap:
          applicationContextFactory:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ApplicationContextFactory"
            uuid: "applicationContextFactory"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid53"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "REACTIVE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "bootstrapRegistryInitializer"
          collectionUuid: "arrayList"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid54"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid55"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid56"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid57"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid58"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid59"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "SpringApplication.Startup.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationShutdownHook"
        parameters: []
      valueType: "org.springframework.boot.SpringApplicationShutdownHook"
      uuid: "springApplicationShutdownHook"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "bootstrapRegistryInitializer"
      collectionUuid: "arrayList"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "SpringFactoriesLoader.ArgumentResolver.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.SpringApplication"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.SpringApplication"
      uuid: "uniqueUuid60"
      fixed: true
    - sapientType: "THIS"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String[]"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.String[]"
      uuid: "uniqueUuid61"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader4"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader4"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader4"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader4"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.SpringApplicationRunListener"
      uuid: "list5"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.SpringApplicationRunListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.SpringApplicationRunListener"
      uuid: "uniqueUuid62"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      uuid: "uniqueUuid63"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "applicationContextFactory"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "ENUM"
      content: !<regular>
        value: "REACTIVE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.DefaultApplicationArguments"
        parameters:
        - name: "args"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "args"
      valueType: "org.springframework.boot.DefaultApplicationArguments"
      uuid: "defaultApplicationArguments"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "ConfigurationPropertySources.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.DefaultPropertiesPropertySource"
      uuid: "DefaultPropertiesPropertySource.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "spring.main.environment-prefix"
      valueType: "java.lang.String"
      uuid: "uniqueUuid64"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid65"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Environment prefix cannot be set via properties."
      valueType: "java.lang.String"
      uuid: "uniqueUuid66"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void11"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "applicationContextFactory"
    - sapientType: "CLASS"
      content: !<regular>
        value: "? extends org.springframework.core.env.ConfigurableEnvironment"
      valueType: "java.lang.Class"
      genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
      uuid: "class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "REACTIVE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.EnvironmentConverter"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "classLoader5"
      valueType: "org.springframework.boot.EnvironmentConverter"
      uuid: "environmentConverter"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ApplicationContextFactory"
                uuid: "applicationContextFactory"
              methodParameters:
              - name: "webApplicationType"
                value:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "REACTIVE"
                  valueType: "org.springframework.boot.WebApplicationType"
                  uuid: "webApplicationType"
              methodName: "createEnvironment"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "? extends org.springframework.core.env.ConfigurableEnvironment"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "CLASS"
      content: !<regular>
        value: "? extends org.springframework.core.env.ConfigurableEnvironment"
      valueType: "java.lang.Class"
      genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "ConfigurationPropertySources.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void12"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ApplicationContextFactory"
                uuid: "applicationContextFactory"
              methodParameters:
              - name: "webApplicationType"
                value:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "REACTIVE"
                  valueType: "org.springframework.boot.WebApplicationType"
                  uuid: "webApplicationType"
              methodName: "createEnvironment"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "? extends org.springframework.core.env.ConfigurableEnvironment"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationBannerPrinter"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "fallbackBanner"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.Banner"
            uuid: "fieldBanner"
      valueType: "org.springframework.boot.SpringApplicationBannerPrinter"
      uuid: "springApplicationBannerPrinter"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.Banner"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.SpringApplicationBannerPrinter"
            parameters:
            - name: "resourceLoader"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.core.io.ResourceLoader"
                uuid: "resourceLoader"
            - name: "fallbackBanner"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.Banner"
                uuid: "fieldBanner"
          valueType: "org.springframework.boot.SpringApplicationBannerPrinter"
          uuid: "springApplicationBannerPrinter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.EnvironmentConverter"
                  parameters:
                  - name: "classLoader"
                    value:
                      sapientType: "OBJECT"
                      content: !<static_method_return>
                        target: "java.lang.ClassLoader"
                        method: "getPlatformClassLoader"
                        methodParameters: []
                      valueType: "java.lang.ClassLoader"
                      uuid: "classLoader5"
                valueType: "org.springframework.boot.EnvironmentConverter"
                uuid: "environmentConverter"
                fixed: true
              methodParameters:
              - name: "environment"
                value:
                  sapientType: "OBJECT"
                  content: !<method_return_from_value>
                    target: "org.springframework.core.env.ConfigurableEnvironment"
                    localVariableValue:
                      sapientType: "MOCK"
                      valueType: "org.springframework.boot.ApplicationContextFactory"
                      uuid: "applicationContextFactory"
                    methodParameters:
                    - name: "webApplicationType"
                      value:
                        sapientType: "ENUM"
                        content: !<regular>
                          value: "REACTIVE"
                        valueType: "org.springframework.boot.WebApplicationType"
                        uuid: "webApplicationType"
                    methodName: "createEnvironment"
                  valueType: "org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "configurableEnvironment"
              - name: "type"
                value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "? extends org.springframework.core.env.ConfigurableEnvironment"
                  valueType: "java.lang.Class"
                  genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "class"
              methodName: "convertEnvironmentIfNecessary"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment2"
        - name: "sourceClass"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            uuid: "uniqueUuid68"
            explicitCastNeeded: true
        - name: "out"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "java.lang.System"
              fieldName: "out"
            valueType: "java.io.PrintStream"
            uuid: "printStream"
        methodName: "print"
      valueType: "org.springframework.boot.Banner"
      uuid: "banner"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ApplicationContextFactory"
                uuid: "applicationContextFactory"
              methodParameters:
              - name: "webApplicationType"
                value:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "REACTIVE"
                  valueType: "org.springframework.boot.WebApplicationType"
                  uuid: "webApplicationType"
              methodName: "createEnvironment"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "? extends org.springframework.core.env.ConfigurableEnvironment"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      uuid: "uniqueUuid67"
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "java.lang.System"
        fieldName: "out"
      valueType: "java.io.PrintStream"
      uuid: "printStream"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "applicationContextFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "ENUM"
      content: !<regular>
        value: "REACTIVE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void13"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.core.metrics.ApplicationStartup"
        fieldName: "DEFAULT"
      valueType: "org.springframework.core.metrics.ApplicationStartup"
      uuid: "applicationStartup"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void14"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ApplicationContextFactory"
                uuid: "applicationContextFactory"
              methodParameters:
              - name: "webApplicationType"
                value:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "REACTIVE"
                  valueType: "org.springframework.boot.WebApplicationType"
                  uuid: "webApplicationType"
              methodName: "createEnvironment"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "? extends org.springframework.core.env.ConfigurableEnvironment"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void15"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "REAL"
      valueType: "org.springframework.aot.AotDetector"
      uuid: "AotDetector.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void16"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void17"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.DefaultBootstrapContext"
        parameters: []
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void18"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "NULL"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void19"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid69"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void20"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void21"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "springApplicationArguments"
      valueType: "java.lang.String"
      uuid: "uniqueUuid70"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultApplicationArguments"
      uuid: "defaultApplicationArguments"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void22"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "springBootBanner"
      valueType: "java.lang.String"
      uuid: "uniqueUuid71"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.Banner"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.SpringApplicationBannerPrinter"
            parameters:
            - name: "resourceLoader"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.core.io.ResourceLoader"
                uuid: "resourceLoader"
            - name: "fallbackBanner"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.Banner"
                uuid: "fieldBanner"
          valueType: "org.springframework.boot.SpringApplicationBannerPrinter"
          uuid: "springApplicationBannerPrinter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.EnvironmentConverter"
                  parameters:
                  - name: "classLoader"
                    value:
                      sapientType: "OBJECT"
                      content: !<static_method_return>
                        target: "java.lang.ClassLoader"
                        method: "getPlatformClassLoader"
                        methodParameters: []
                      valueType: "java.lang.ClassLoader"
                      uuid: "classLoader5"
                valueType: "org.springframework.boot.EnvironmentConverter"
                uuid: "environmentConverter"
                fixed: true
              methodParameters:
              - name: "environment"
                value:
                  sapientType: "OBJECT"
                  content: !<method_return_from_value>
                    target: "org.springframework.core.env.ConfigurableEnvironment"
                    localVariableValue:
                      sapientType: "MOCK"
                      valueType: "org.springframework.boot.ApplicationContextFactory"
                      uuid: "applicationContextFactory"
                    methodParameters:
                    - name: "webApplicationType"
                      value:
                        sapientType: "ENUM"
                        content: !<regular>
                          value: "REACTIVE"
                        valueType: "org.springframework.boot.WebApplicationType"
                        uuid: "webApplicationType"
                    methodName: "createEnvironment"
                  valueType: "org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "configurableEnvironment"
              - name: "type"
                value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "? extends org.springframework.core.env.ConfigurableEnvironment"
                  valueType: "java.lang.Class"
                  genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "class"
              methodName: "convertEnvironmentIfNecessary"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment2"
        - name: "sourceClass"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            uuid: "uniqueUuid72"
            explicitCastNeeded: true
        - name: "out"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "java.lang.System"
              fieldName: "out"
            valueType: "java.io.PrintStream"
            uuid: "printStream"
        methodName: "print"
      valueType: "org.springframework.boot.Banner"
      uuid: "banner"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void23"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.beans.factory.config.BeanFactoryPostProcessor"
      uuid: "beanFactoryPostProcessor"
    - sapientType: "REAL"
      valueType: "org.springframework.aot.AotDetector"
      uuid: "AotDetector.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.Object"
      uuid: "set2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void24"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.Object"
      uuid: "set2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be empty"
      valueType: "java.lang.String"
      uuid: "uniqueUuid73"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void25"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Object[]"
      uuid: "objectArray2"
      collectionUuid: "set2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void26"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationShutdownHook"
        parameters: []
      valueType: "org.springframework.boot.SpringApplicationShutdownHook"
      uuid: "springApplicationShutdownHook"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void27"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void28"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration-days"
      valueType: "java.time.Duration"
      uuid: "duration"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "log2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.StartupInfoLogger"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            uuid: "uniqueUuid74"
            explicitCastNeeded: true
      valueType: "org.springframework.boot.StartupInfoLogger"
      uuid: "startupInfoLogger"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void29"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "log2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration2-days"
      valueType: "java.time.Duration"
      uuid: "duration2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void30"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration2-days"
      valueType: "java.time.Duration"
      uuid: "duration2"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getBeanNamesForTypeItem1"
            valueType: "java.lang.String"
            uuid: "string4"
      valueType: "java.lang.String[]"
      uuid: "stringArray2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.Runner"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.Runner"
      uuid: "uniqueUuid75"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.Runner"
      uuid: "object4"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanNamesForTypeItem1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.Runner"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.Runner"
      uuid: "uniqueUuid76"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
        fieldName: "INSTANCE"
      valueType: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
      uuid: "annotationAwareOrderComparator"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.util.Comparator"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<static_field_return>
            target: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
            fieldName: "INSTANCE"
          valueType: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
          uuid: "annotationAwareOrderComparator"
        methodParameters:
        - name: "sourceProvider"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "org.springframework.core.OrderComparator$OrderSourceProvider"
            uuid: "orderComparator.OrderSourceProvider"
        methodName: "withSourceProvider"
      valueType: "java.util.Comparator"
      genericValueType: "java.lang.Object"
      uuid: "comparator"
    - sapientType: "ANY"
      valueType: "org.springframework.core.OrderComparator$OrderSourceProvider"
      uuid: "orderComparator.OrderSourceProvider"
    - sapientType: "EXCEPTION"
      valueType: "org.springframework.boot.SpringApplication$AbandonedRunException"
      uuid: "throwable"
    branches:
    - lineNumber: 319
      expression: "this.registerShutdownHook"
      range: "(319,7)-(319,31)"
      evaluatedAs: true
    - lineNumber: 470
      expression: "hook != null"
      range: "(470,48)-(470,59)"
      evaluatedAs: false
      internalMethodName: "getRunListeners"
    - lineNumber: 471
      expression: "hookListener != null"
      range: "(471,7)-(471,26)"
      evaluatedAs: false
      internalMethodName: "getRunListeners"
    - lineNumber: 487
      expression: "this.environment != null"
      range: "(487,7)-(487,30)"
      evaluatedAs: false
      internalMethodName: "getOrCreateEnvironment"
    - lineNumber: 491
      expression: "environment == null"
      range: "(491,7)-(491,25)"
      evaluatedAs: false
      internalMethodName: "getOrCreateEnvironment"
    - lineNumber: 494
      expression: "environment != null"
      range: "(494,11)-(494,29)"
      evaluatedAs: true
      internalMethodName: "getOrCreateEnvironment"
    - lineNumber: 371
      expression: "!environment.containsProperty(\\\"spring.main.environment-prefix\\\
        \")"
      range: "(371,16)-(371,78)"
      evaluatedAs: true
      internalMethodName: "prepareEnvironment"
    - lineNumber: 374
      expression: "!this.isCustomEnvironment"
      range: "(374,7)-(374,31)"
      evaluatedAs: true
      internalMethodName: "prepareEnvironment"
    - lineNumber: 385
      expression: "environmentType == null"
      range: "(385,7)-(385,29)"
      evaluatedAs: false
      internalMethodName: "deduceEnvironmentClass"
    - lineNumber: 388
      expression: "environmentType == null"
      range: "(388,7)-(388,29)"
      evaluatedAs: false
      internalMethodName: "deduceEnvironmentClass"
    - lineNumber: 569
      expression: "this.bannerMode == Banner.Mode.OFF"
      range: "(569,7)-(569,40)"
      evaluatedAs: false
      internalMethodName: "printBanner"
    - lineNumber: 572
      expression: "this.resourceLoader != null"
      range: "(572,36)-(572,62)"
      evaluatedAs: true
      internalMethodName: "printBanner"
    - lineNumber: 575
      expression: "this.bannerMode == Mode.LOG"
      range: "(575,7)-(575,33)"
      evaluatedAs: false
      internalMethodName: "printBanner"
    - lineNumber: 436
      expression: "AotDetector.useGeneratedArtifacts()"
      range: "(436,7)-(436,41)"
      evaluatedAs: false
      internalMethodName: "addAotGeneratedInitializerIfNecessary"
    - lineNumber: 403
      expression: "this.logStartupInfo"
      range: "(403,7)-(403,25)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 404
      expression: "context.getParent() == null"
      range: "(404,19)-(404,45)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 410
      expression: "printedBanner != null"
      range: "(410,7)-(410,27)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 413
      expression: "beanFactory instanceof AbstractAutowireCapableBeanFactory autowireCapableBeanFactory"
      range: "(413,7)-(413,90)"
      evaluatedAs: false
      internalMethodName: "prepareContext"
    - lineNumber: 419
      expression: "this.lazyInitialization"
      range: "(419,7)-(419,29)"
      evaluatedAs: false
      internalMethodName: "prepareContext"
    - lineNumber: 422
      expression: "this.keepAlive"
      range: "(422,7)-(422,20)"
      evaluatedAs: false
      internalMethodName: "prepareContext"
    - lineNumber: 426
      expression: "!AotDetector.useGeneratedArtifacts()"
      range: "(426,7)-(426,42)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 453
      expression: "this.registerShutdownHook"
      range: "(453,7)-(453,31)"
      evaluatedAs: true
      internalMethodName: "refreshContext"
    - lineNumber: 337
      expression: "this.logStartupInfo"
      range: "(337,8)-(337,26)"
      evaluatedAs: true
    - lineNumber: 769
      expression: "for-each(beanNames)"
      range: "(769,26)-(769,34)"
      evaluatedAs: true
      internalMethodName: "callRunners"
    - lineNumber: 778
      expression: "beanFactory instanceof DefaultListableBeanFactory defaultListableBeanFactory"
      range: "(778,41)-(778,116)"
      evaluatedAs: false
      internalMethodName: "getOrderComparator"
    - lineNumber: 780
      expression: "dependencyComparator instanceof OrderComparator orderComparator"
      range: "(780,11)-(780,73)"
      evaluatedAs: false
      internalMethodName: "getOrderComparator"
    - lineNumber: 343
      expression: "catch-exception (Throwable)"
      range: "(343,3)-(343,21)"
      evaluatedAs: true
    - lineNumber: 803
      expression: "exception instanceof AbandonedRunException abandonedRunException"
      range: "(803,7)-(803,70)"
      evaluatedAs: true
      internalMethodName: "handleRunFailure"
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Throwable"
  - pathId: "path16"
    testPathName: "runWhenCaughtThrowableAndExceptionInstanceOfAbandonedRunExceptionThrowsSpringApplicationAbandonedRunException"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "86FCFA0670D3FC371C7A5D037D17DF1C"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "args"
      modelFingerprint: "62B8E965720EE46A7489315174A3A841"
      valueUuid: "args"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid77):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "E2F288269971D6B40DA896664938F98E"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "20006F76B7E4788E565F04F635D4A52D"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid78,argumentResolver:uniqueUuid79):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid80,argumentResolver:uniqueUuid81):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid82,argumentResolver:uniqueUuid83):list4"
    - type: "STATIC"
      name: "SpringApplication.Startup.class"
      modelFingerprint: "DA8622EB3506E174E0335AC27132B054"
      valueUuid: "SpringApplication.Startup.class"
      methodExercised:
        expression: "create():springApplication.Startup"
        staticAccess: true
    - type: "FIELD"
      name: "shutdownHook"
      modelFingerprint: "A0CD9DC1B1C93A40FEC7031737D9BE10"
      valueUuid: "springApplicationShutdownHook"
      methodExercised:
        expression: "enableShutdownHookAddition():void2"
    - type: "LOCAL_VARIABLE"
      name: "initializer"
      modelFingerprint: "78495708A547C9C6DC2151A7C67101AC"
      valueUuid: "bootstrapRegistryInitializer"
      methodExercised:
        expression: "initialize(registry:defaultBootstrapContext):void4"
    - type: "STATIC"
      name: "SpringFactoriesLoader.ArgumentResolver.class"
      modelFingerprint: "5F0034DA74D42417617FBE94CCB6AD81"
      valueUuid: "SpringFactoriesLoader.ArgumentResolver.class"
      methodExercised:
        expression: "of(type:uniqueUuid84,value:targetClassObject):springFactoriesLoader.ArgumentResolver"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "argumentResolver"
      modelFingerprint: "900146EE10B4914AE93AEF9C5995BCEE"
      valueUuid: "springFactoriesLoader.ArgumentResolver"
      methodExercised:
        expression: "and(type:uniqueUuid85,value:args):springFactoriesLoader.ArgumentResolver2"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "27BFD3AFF61EB16D6621CC8BB9BFE4B5"
      methodExercised:
        expression: "getClassLoader():classLoader4"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader4):springFactoriesLoader4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "C997EC8D4248E2F75F459758B43838D0"
      valueUuid: "springFactoriesLoader4"
      methodExercised:
        expression: "load(factoryType:uniqueUuid86,argumentResolver:springFactoriesLoader.ArgumentResolver2):list5"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "B030C484A6C44F4577E15609B1FF871D"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "starting(bootstrapContext:defaultBootstrapContext,mainApplicationClass:uniqueUuid87):void5"
    - type: "FIELD"
      name: "applicationContextFactory"
      modelFingerprint: "06BD52635BC7B034715AED6488A78392"
      valueUuid: "applicationContextFactory"
      methodExercised:
        expression: "createEnvironment(webApplicationType:webApplicationType):configurableEnvironment"
    - type: "LOCAL_VARIABLE"
      name: "applicationArguments"
      modelFingerprint: "029CA1B5E8067A0C5CE390F4A8056BDF"
      valueUuid: "defaultApplicationArguments"
      methodExercised:
        expression: "getSourceArgs():stringArray"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "90BC58528E0141F4E6E011D07D70EE79"
      methodExercised:
        expression: "configureEnvironment(environment:configurableEnvironment,args:stringArray):void6"
    - type: "STATIC"
      name: "ConfigurationPropertySources.class"
      modelFingerprint: "58E4F8CCC7DC67F3E09EA91F9A6467FB"
      valueUuid: "ConfigurationPropertySources.class"
      methodExercised:
        expression: "attach(environment:configurableEnvironment):void7"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "5E7F92D4A76B53122BDFD2BE5C6BFE2B"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "environmentPrepared(bootstrapContext:defaultBootstrapContext,environment:configurableEnvironment):void8"
    - type: "STATIC"
      name: "DefaultPropertiesPropertySource.class"
      modelFingerprint: "432C497220A187F4231AD8C95D44D3D6"
      valueUuid: "DefaultPropertiesPropertySource.class"
      methodExercised:
        expression: "moveToEnd(environment:configurableEnvironment):void9"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "2BAE2A27DEF6B4CFF3B6082E9E311248"
      valueUuid: "configurableEnvironment"
      methodExercised:
        expression: "containsProperty(key:uniqueUuid88):boolean1"
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "2A737F0AED0B795580225C9A5C41679A"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "state(expression:uniqueUuid89,message:uniqueUuid90):void10"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "E6B42E54F1DFA3D64EA4D5F761BE969D"
      methodExercised:
        expression: "bindToSpringApplication(environment:configurableEnvironment):void11"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "27BFD3AFF61EB16D6621CC8BB9BFE4B5"
      methodExercised:
        expression: "getClassLoader():classLoader5"
    - type: "FIELD"
      name: "applicationContextFactory"
      modelFingerprint: "CA81E603C78F05F6FBB4BD5D16D697F6"
      valueUuid: "applicationContextFactory"
      methodExercised:
        expression: "getEnvironmentType(webApplicationType:webApplicationType):class"
    - type: "LOCAL_VARIABLE"
      name: "environmentConverter"
      modelFingerprint: "E5B9FA8FB6710B65ABA183AC228D1F66"
      valueUuid: "environmentConverter"
      methodExercised:
        expression: "convertEnvironmentIfNecessary(environment:configurableEnvironment,type:class):configurableEnvironment2"
    - type: "STATIC"
      name: "ConfigurationPropertySources.class"
      modelFingerprint: "05610F2B4CE0EE45EFD8707C0830737F"
      valueUuid: "ConfigurationPropertySources.class"
      methodExercised:
        expression: "attach(environment:configurableEnvironment2):void12"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "bannerPrinter"
      modelFingerprint: "57DBBA845CE5D3692822F30C99C8F94C"
      valueUuid: "springApplicationBannerPrinter"
      methodExercised:
        expression: "print(environment:configurableEnvironment2,sourceClass:uniqueUuid91,out:printStream):banner"
    - type: "FIELD"
      name: "applicationContextFactory"
      modelFingerprint: "9636AB959433EACCFC3EAE2B2054BBA7"
      valueUuid: "applicationContextFactory"
      methodExercised:
        expression: "create(webApplicationType:webApplicationType):configurableApplicationContext"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "C4457CBF6543DA61B3CC571D7855BC05"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "setApplicationStartup(applicationStartup:applicationStartup):void13"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "8612B0D1172C552882689E6870D41AE5"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "setEnvironment(environment:configurableEnvironment2):void14"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "F7247F20B4DB91E482D564DC0E3EE670"
      methodExercised:
        expression: "postProcessApplicationContext(context:configurableApplicationContext):void15"
    - type: "STATIC"
      name: "AotDetector.class.real"
      modelFingerprint: "A651F35C9CB1BB4329EA23C459C95680"
      valueUuid: "AotDetector.class.real"
      methodExercised:
        expression: "useGeneratedArtifacts():boolean2"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "2629F473285A8D2B3BDA80841BE1B13C"
      methodExercised:
        expression: "applyInitializers(context:configurableApplicationContext):void16"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "F25700EBA48DFBE78B5458FCD3EB4646"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "contextPrepared(context:configurableApplicationContext):void17"
    - type: "LOCAL_VARIABLE"
      name: "bootstrapContext"
      modelFingerprint: "909D947F9D1DDC6DDEA8500941736C94"
      valueUuid: "defaultBootstrapContext"
      methodExercised:
        expression: "close(applicationContext:configurableApplicationContext):void18"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "5E3904425938E13844EB71188213737A"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "getParent():applicationContext"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "AC62DBB448DDE3961AAF97490A0B542D"
      methodExercised:
        expression: "logStartupInfo(isRoot:uniqueUuid93):void19"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "7204D97E17BC4435BDF63B535ED64B97"
      methodExercised:
        expression: "logStartupProfileInfo(context:configurableApplicationContext):void20"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "6A01AAC3461FC3A19CF28FB5CC4FB9E4"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "7107C791919372E064D179B76AC9C5E9"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "registerSingleton(beanName:uniqueUuid94,singletonObject:defaultApplicationArguments):void21"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "7D9F9E6CBD122983C30C4497B512C45C"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "registerSingleton(beanName:uniqueUuid95,singletonObject:banner):void22"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "69034248F39E1300FEF9D04C0504E01A"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "addBeanFactoryPostProcessor(postProcessor:beanFactoryPostProcessor):void23"
    - type: "STATIC"
      name: "AotDetector.class.real"
      modelFingerprint: "A651F35C9CB1BB4329EA23C459C95680"
      valueUuid: "AotDetector.class.real"
      methodExercised:
        expression: "useGeneratedArtifacts():boolean4"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "504C2B18FD5DE35DA01916EC347AB7B1"
      methodExercised:
        expression: "getAllSources():set2"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A2E059860C5C45B44F0B7F9AA4D95BDB"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notEmpty(collection:set2,message:uniqueUuid97):void24"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "91ACBEFD431AA6FB4341C4C76B033E1D"
      methodExercised:
        expression: "load(context:configurableApplicationContext,sources:objectArray2):void25"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "9DAE3D234F2CD76AACDE8442BC6EE4A6"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "contextLoaded(context:configurableApplicationContext):void26"
    - type: "FIELD"
      name: "shutdownHook"
      modelFingerprint: "955744B9BBBD449D14979830C226B3DB"
      valueUuid: "springApplicationShutdownHook"
      methodExercised:
        expression: "registerApplicationContext(context:configurableApplicationContext):void27"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "01A9466B1E33218E3C0D5F4F6DD218E7"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "refresh():void28"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      name: "startup"
      modelFingerprint: "9514A429A770044AEBDFB50062B30B4D"
      valueUuid: "springApplication.Startup"
      methodExercised:
        expression: "started():duration"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "FE5D2BC90EC0B24D7B85FD4D1CDFF78B"
      methodExercised:
        expression: "getApplicationLog():log2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "31F4778FC7271F5256CA0997FCC61AFA"
      valueUuid: "startupInfoLogger"
      methodExercised:
        expression: "logStarted(applicationLog:log2,startup:springApplication.Startup):void29"
    - type: "LOCAL_VARIABLE"
      name: "startup"
      modelFingerprint: "8632254D8D53E67F9906077923095FAF"
      valueUuid: "springApplication.Startup"
      methodExercised:
        expression: "timeTakenToStarted():duration2"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "676CA2E0A33FFC3648204E1B59D55045"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "started(context:configurableApplicationContext,timeTaken:duration2):void30"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "6A01AAC3461FC3A19CF28FB5CC4FB9E4"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory2"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "8A57C6E79097BE70207C443A51A26E7F"
      valueUuid: "configurableListableBeanFactory2"
      methodExercised:
        expression: "getBeanNamesForType(type:uniqueUuid99):stringArray2"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "049356A3DCD2541F910927E5E31BCA20"
      valueUuid: "configurableListableBeanFactory2"
      methodExercised:
        expression: "getBean(name:string4,requiredType:uniqueUuid100):object4"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "9FB5A4AC1406067842215F6E568A3B04"
      valueUuid: "annotationAwareOrderComparator"
      methodExercised:
        expression: "withSourceProvider(sourceProvider:orderComparator.OrderSourceProvider):comparator"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "DA96E3F9148FB8FFC04C9940573B9AF4"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "isRunning():boolean7"
    - type: "LOCAL_VARIABLE"
      name: "startup"
      modelFingerprint: "617185A19112E6053002DE8AAB9AA7F5"
      valueUuid: "springApplication.Startup"
      methodExercised:
        expression: "ready():duration3"
        privateAccess: true
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "71FA1946CACE39932158601FC2224A60"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "ready(context:configurableApplicationContext,timeTaken:duration3):void32"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "428D1CDD008F1C745BC19D454576AAF4"
      valueUuid: "throwable"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
        propertiesMap:
          applicationContextFactory:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ApplicationContextFactory"
            uuid: "applicationContextFactory"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid77"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "SERVLET"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "bootstrapRegistryInitializer"
          collectionUuid: "arrayList"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid78"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid79"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid80"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid81"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid82"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid83"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "SpringApplication.Startup.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationShutdownHook"
        parameters: []
      valueType: "org.springframework.boot.SpringApplicationShutdownHook"
      uuid: "springApplicationShutdownHook"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "bootstrapRegistryInitializer"
      collectionUuid: "arrayList"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "SpringFactoriesLoader.ArgumentResolver.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.SpringApplication"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.SpringApplication"
      uuid: "uniqueUuid84"
      fixed: true
    - sapientType: "THIS"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String[]"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.String[]"
      uuid: "uniqueUuid85"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader4"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader4"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader4"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader4"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.SpringApplicationRunListener"
      uuid: "list5"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.SpringApplicationRunListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.SpringApplicationRunListener"
      uuid: "uniqueUuid86"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      uuid: "uniqueUuid87"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "applicationContextFactory"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "SERVLET"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "ENUM"
      content: !<regular>
        value: "SERVLET"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.DefaultApplicationArguments"
        parameters:
        - name: "args"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "args"
      valueType: "org.springframework.boot.DefaultApplicationArguments"
      uuid: "defaultApplicationArguments"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "SERVLET"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "ConfigurationPropertySources.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "SERVLET"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "SERVLET"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.DefaultPropertiesPropertySource"
      uuid: "DefaultPropertiesPropertySource.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "SERVLET"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "SERVLET"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "spring.main.environment-prefix"
      valueType: "java.lang.String"
      uuid: "uniqueUuid88"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid89"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Environment prefix cannot be set via properties."
      valueType: "java.lang.String"
      uuid: "uniqueUuid90"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void11"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "SERVLET"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "applicationContextFactory"
    - sapientType: "CLASS"
      content: !<regular>
        value: "? extends org.springframework.core.env.ConfigurableEnvironment"
      valueType: "java.lang.Class"
      genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
      uuid: "class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "SERVLET"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.EnvironmentConverter"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "classLoader5"
      valueType: "org.springframework.boot.EnvironmentConverter"
      uuid: "environmentConverter"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ApplicationContextFactory"
                uuid: "applicationContextFactory"
              methodParameters:
              - name: "webApplicationType"
                value:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "SERVLET"
                  valueType: "org.springframework.boot.WebApplicationType"
                  uuid: "webApplicationType"
              methodName: "createEnvironment"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "? extends org.springframework.core.env.ConfigurableEnvironment"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "SERVLET"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "CLASS"
      content: !<regular>
        value: "? extends org.springframework.core.env.ConfigurableEnvironment"
      valueType: "java.lang.Class"
      genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "ConfigurationPropertySources.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void12"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ApplicationContextFactory"
                uuid: "applicationContextFactory"
              methodParameters:
              - name: "webApplicationType"
                value:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "SERVLET"
                  valueType: "org.springframework.boot.WebApplicationType"
                  uuid: "webApplicationType"
              methodName: "createEnvironment"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "? extends org.springframework.core.env.ConfigurableEnvironment"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationBannerPrinter"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "fallbackBanner"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.Banner"
            uuid: "fieldBanner"
      valueType: "org.springframework.boot.SpringApplicationBannerPrinter"
      uuid: "springApplicationBannerPrinter"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.Banner"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.SpringApplicationBannerPrinter"
            parameters:
            - name: "resourceLoader"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.core.io.ResourceLoader"
                uuid: "resourceLoader"
            - name: "fallbackBanner"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.Banner"
                uuid: "fieldBanner"
          valueType: "org.springframework.boot.SpringApplicationBannerPrinter"
          uuid: "springApplicationBannerPrinter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.EnvironmentConverter"
                  parameters:
                  - name: "classLoader"
                    value:
                      sapientType: "OBJECT"
                      content: !<static_method_return>
                        target: "java.lang.ClassLoader"
                        method: "getPlatformClassLoader"
                        methodParameters: []
                      valueType: "java.lang.ClassLoader"
                      uuid: "classLoader5"
                valueType: "org.springframework.boot.EnvironmentConverter"
                uuid: "environmentConverter"
                fixed: true
              methodParameters:
              - name: "environment"
                value:
                  sapientType: "OBJECT"
                  content: !<method_return_from_value>
                    target: "org.springframework.core.env.ConfigurableEnvironment"
                    localVariableValue:
                      sapientType: "MOCK"
                      valueType: "org.springframework.boot.ApplicationContextFactory"
                      uuid: "applicationContextFactory"
                    methodParameters:
                    - name: "webApplicationType"
                      value:
                        sapientType: "ENUM"
                        content: !<regular>
                          value: "SERVLET"
                        valueType: "org.springframework.boot.WebApplicationType"
                        uuid: "webApplicationType"
                    methodName: "createEnvironment"
                  valueType: "org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "configurableEnvironment"
              - name: "type"
                value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "? extends org.springframework.core.env.ConfigurableEnvironment"
                  valueType: "java.lang.Class"
                  genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "class"
              methodName: "convertEnvironmentIfNecessary"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment2"
        - name: "sourceClass"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            uuid: "uniqueUuid92"
            explicitCastNeeded: true
        - name: "out"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "java.lang.System"
              fieldName: "out"
            valueType: "java.io.PrintStream"
            uuid: "printStream"
        methodName: "print"
      valueType: "org.springframework.boot.Banner"
      uuid: "banner"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ApplicationContextFactory"
                uuid: "applicationContextFactory"
              methodParameters:
              - name: "webApplicationType"
                value:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "SERVLET"
                  valueType: "org.springframework.boot.WebApplicationType"
                  uuid: "webApplicationType"
              methodName: "createEnvironment"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "? extends org.springframework.core.env.ConfigurableEnvironment"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      uuid: "uniqueUuid91"
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "java.lang.System"
        fieldName: "out"
      valueType: "java.io.PrintStream"
      uuid: "printStream"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "applicationContextFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "ENUM"
      content: !<regular>
        value: "SERVLET"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void13"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.core.metrics.ApplicationStartup"
        fieldName: "DEFAULT"
      valueType: "org.springframework.core.metrics.ApplicationStartup"
      uuid: "applicationStartup"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void14"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ApplicationContextFactory"
                uuid: "applicationContextFactory"
              methodParameters:
              - name: "webApplicationType"
                value:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "SERVLET"
                  valueType: "org.springframework.boot.WebApplicationType"
                  uuid: "webApplicationType"
              methodName: "createEnvironment"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "? extends org.springframework.core.env.ConfigurableEnvironment"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void15"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "REAL"
      valueType: "org.springframework.aot.AotDetector"
      uuid: "AotDetector.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void16"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void17"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.DefaultBootstrapContext"
        parameters: []
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void18"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "NULL"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void19"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid93"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void20"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void21"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "springApplicationArguments"
      valueType: "java.lang.String"
      uuid: "uniqueUuid94"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultApplicationArguments"
      uuid: "defaultApplicationArguments"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void22"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "springBootBanner"
      valueType: "java.lang.String"
      uuid: "uniqueUuid95"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.Banner"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.SpringApplicationBannerPrinter"
            parameters:
            - name: "resourceLoader"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.core.io.ResourceLoader"
                uuid: "resourceLoader"
            - name: "fallbackBanner"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.Banner"
                uuid: "fieldBanner"
          valueType: "org.springframework.boot.SpringApplicationBannerPrinter"
          uuid: "springApplicationBannerPrinter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.EnvironmentConverter"
                  parameters:
                  - name: "classLoader"
                    value:
                      sapientType: "OBJECT"
                      content: !<static_method_return>
                        target: "java.lang.ClassLoader"
                        method: "getPlatformClassLoader"
                        methodParameters: []
                      valueType: "java.lang.ClassLoader"
                      uuid: "classLoader5"
                valueType: "org.springframework.boot.EnvironmentConverter"
                uuid: "environmentConverter"
                fixed: true
              methodParameters:
              - name: "environment"
                value:
                  sapientType: "OBJECT"
                  content: !<method_return_from_value>
                    target: "org.springframework.core.env.ConfigurableEnvironment"
                    localVariableValue:
                      sapientType: "MOCK"
                      valueType: "org.springframework.boot.ApplicationContextFactory"
                      uuid: "applicationContextFactory"
                    methodParameters:
                    - name: "webApplicationType"
                      value:
                        sapientType: "ENUM"
                        content: !<regular>
                          value: "SERVLET"
                        valueType: "org.springframework.boot.WebApplicationType"
                        uuid: "webApplicationType"
                    methodName: "createEnvironment"
                  valueType: "org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "configurableEnvironment"
              - name: "type"
                value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "? extends org.springframework.core.env.ConfigurableEnvironment"
                  valueType: "java.lang.Class"
                  genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "class"
              methodName: "convertEnvironmentIfNecessary"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment2"
        - name: "sourceClass"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            uuid: "uniqueUuid96"
            explicitCastNeeded: true
        - name: "out"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "java.lang.System"
              fieldName: "out"
            valueType: "java.io.PrintStream"
            uuid: "printStream"
        methodName: "print"
      valueType: "org.springframework.boot.Banner"
      uuid: "banner"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void23"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.beans.factory.config.BeanFactoryPostProcessor"
      uuid: "beanFactoryPostProcessor"
    - sapientType: "REAL"
      valueType: "org.springframework.aot.AotDetector"
      uuid: "AotDetector.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.Object"
      uuid: "set2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void24"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.Object"
      uuid: "set2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be empty"
      valueType: "java.lang.String"
      uuid: "uniqueUuid97"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void25"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Object[]"
      uuid: "objectArray2"
      collectionUuid: "set2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void26"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationShutdownHook"
        parameters: []
      valueType: "org.springframework.boot.SpringApplicationShutdownHook"
      uuid: "springApplicationShutdownHook"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void27"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void28"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration-days"
      valueType: "java.time.Duration"
      uuid: "duration"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "log2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.StartupInfoLogger"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            uuid: "uniqueUuid98"
            explicitCastNeeded: true
      valueType: "org.springframework.boot.StartupInfoLogger"
      uuid: "startupInfoLogger"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void29"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "log2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration2-days"
      valueType: "java.time.Duration"
      uuid: "duration2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void30"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration2-days"
      valueType: "java.time.Duration"
      uuid: "duration2"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getBeanNamesForTypeItem1"
            valueType: "java.lang.String"
            uuid: "string4"
      valueType: "java.lang.String[]"
      uuid: "stringArray2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.Runner"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.Runner"
      uuid: "uniqueUuid99"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.Runner"
      uuid: "object4"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanNamesForTypeItem1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.Runner"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.Runner"
      uuid: "uniqueUuid100"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
        fieldName: "INSTANCE"
      valueType: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
      uuid: "annotationAwareOrderComparator"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.util.Comparator"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<static_field_return>
            target: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
            fieldName: "INSTANCE"
          valueType: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
          uuid: "annotationAwareOrderComparator"
        methodParameters:
        - name: "sourceProvider"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "org.springframework.core.OrderComparator$OrderSourceProvider"
            uuid: "orderComparator.OrderSourceProvider"
        methodName: "withSourceProvider"
      valueType: "java.util.Comparator"
      genericValueType: "java.lang.Object"
      uuid: "comparator"
    - sapientType: "ANY"
      valueType: "org.springframework.core.OrderComparator$OrderSourceProvider"
      uuid: "orderComparator.OrderSourceProvider"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration3-days"
      valueType: "java.time.Duration"
      uuid: "duration3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void32"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration3-days"
      valueType: "java.time.Duration"
      uuid: "duration3"
    - sapientType: "EXCEPTION"
      valueType: "org.springframework.boot.SpringApplication$AbandonedRunException"
      uuid: "throwable"
    branches:
    - lineNumber: 319
      expression: "this.registerShutdownHook"
      range: "(319,7)-(319,31)"
      evaluatedAs: true
    - lineNumber: 470
      expression: "hook != null"
      range: "(470,48)-(470,59)"
      evaluatedAs: false
      internalMethodName: "getRunListeners"
    - lineNumber: 471
      expression: "hookListener != null"
      range: "(471,7)-(471,26)"
      evaluatedAs: false
      internalMethodName: "getRunListeners"
    - lineNumber: 487
      expression: "this.environment != null"
      range: "(487,7)-(487,30)"
      evaluatedAs: false
      internalMethodName: "getOrCreateEnvironment"
    - lineNumber: 491
      expression: "environment == null"
      range: "(491,7)-(491,25)"
      evaluatedAs: false
      internalMethodName: "getOrCreateEnvironment"
    - lineNumber: 494
      expression: "environment != null"
      range: "(494,11)-(494,29)"
      evaluatedAs: true
      internalMethodName: "getOrCreateEnvironment"
    - lineNumber: 371
      expression: "!environment.containsProperty(\\\"spring.main.environment-prefix\\\
        \")"
      range: "(371,16)-(371,78)"
      evaluatedAs: true
      internalMethodName: "prepareEnvironment"
    - lineNumber: 374
      expression: "!this.isCustomEnvironment"
      range: "(374,7)-(374,31)"
      evaluatedAs: true
      internalMethodName: "prepareEnvironment"
    - lineNumber: 385
      expression: "environmentType == null"
      range: "(385,7)-(385,29)"
      evaluatedAs: false
      internalMethodName: "deduceEnvironmentClass"
    - lineNumber: 388
      expression: "environmentType == null"
      range: "(388,7)-(388,29)"
      evaluatedAs: false
      internalMethodName: "deduceEnvironmentClass"
    - lineNumber: 569
      expression: "this.bannerMode == Banner.Mode.OFF"
      range: "(569,7)-(569,40)"
      evaluatedAs: false
      internalMethodName: "printBanner"
    - lineNumber: 572
      expression: "this.resourceLoader != null"
      range: "(572,36)-(572,62)"
      evaluatedAs: true
      internalMethodName: "printBanner"
    - lineNumber: 575
      expression: "this.bannerMode == Mode.LOG"
      range: "(575,7)-(575,33)"
      evaluatedAs: false
      internalMethodName: "printBanner"
    - lineNumber: 436
      expression: "AotDetector.useGeneratedArtifacts()"
      range: "(436,7)-(436,41)"
      evaluatedAs: false
      internalMethodName: "addAotGeneratedInitializerIfNecessary"
    - lineNumber: 403
      expression: "this.logStartupInfo"
      range: "(403,7)-(403,25)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 404
      expression: "context.getParent() == null"
      range: "(404,19)-(404,45)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 410
      expression: "printedBanner != null"
      range: "(410,7)-(410,27)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 413
      expression: "beanFactory instanceof AbstractAutowireCapableBeanFactory autowireCapableBeanFactory"
      range: "(413,7)-(413,90)"
      evaluatedAs: false
      internalMethodName: "prepareContext"
    - lineNumber: 419
      expression: "this.lazyInitialization"
      range: "(419,7)-(419,29)"
      evaluatedAs: false
      internalMethodName: "prepareContext"
    - lineNumber: 422
      expression: "this.keepAlive"
      range: "(422,7)-(422,20)"
      evaluatedAs: false
      internalMethodName: "prepareContext"
    - lineNumber: 426
      expression: "!AotDetector.useGeneratedArtifacts()"
      range: "(426,7)-(426,42)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 453
      expression: "this.registerShutdownHook"
      range: "(453,7)-(453,31)"
      evaluatedAs: true
      internalMethodName: "refreshContext"
    - lineNumber: 337
      expression: "this.logStartupInfo"
      range: "(337,8)-(337,26)"
      evaluatedAs: true
    - lineNumber: 769
      expression: "for-each(beanNames)"
      range: "(769,26)-(769,34)"
      evaluatedAs: true
      internalMethodName: "callRunners"
    - lineNumber: 778
      expression: "beanFactory instanceof DefaultListableBeanFactory defaultListableBeanFactory"
      range: "(778,41)-(778,116)"
      evaluatedAs: false
      internalMethodName: "getOrderComparator"
    - lineNumber: 780
      expression: "dependencyComparator instanceof OrderComparator orderComparator"
      range: "(780,11)-(780,73)"
      evaluatedAs: false
      internalMethodName: "getOrderComparator"
    - lineNumber: 347
      expression: "context.isRunning()"
      range: "(347,8)-(347,26)"
      evaluatedAs: true
    - lineNumber: 351
      expression: "catch-exception (Throwable)"
      range: "(351,3)-(351,21)"
      evaluatedAs: true
    - lineNumber: 803
      expression: "exception instanceof AbandonedRunException abandonedRunException"
      range: "(803,7)-(803,70)"
      evaluatedAs: true
      internalMethodName: "handleRunFailure"
    catchBlockExercised:
      idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Throwable"
  - pathId: "path11"
    testPathName: "runWhenExceptionNotInstanceOfRuntimeExceptionThrowsIllegalStateException"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "D7921379947845E6AE21033729134F62"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "args"
      modelFingerprint: "62B8E965720EE46A7489315174A3A841"
      valueUuid: "args"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid101):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "484A493D8A9DE787059A9516C904C048"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "20006F76B7E4788E565F04F635D4A52D"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid102,argumentResolver:uniqueUuid103):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid104,argumentResolver:uniqueUuid105):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid106,argumentResolver:uniqueUuid107):list4"
    - type: "STATIC"
      name: "SpringApplication.Startup.class"
      modelFingerprint: "DA8622EB3506E174E0335AC27132B054"
      valueUuid: "SpringApplication.Startup.class"
      methodExercised:
        expression: "create():springApplication.Startup"
        staticAccess: true
    - type: "FIELD"
      name: "shutdownHook"
      modelFingerprint: "A0CD9DC1B1C93A40FEC7031737D9BE10"
      valueUuid: "springApplicationShutdownHook"
      methodExercised:
        expression: "enableShutdownHookAddition():void2"
    - type: "LOCAL_VARIABLE"
      name: "initializer"
      modelFingerprint: "78495708A547C9C6DC2151A7C67101AC"
      valueUuid: "bootstrapRegistryInitializer"
      methodExercised:
        expression: "initialize(registry:defaultBootstrapContext):void4"
    - type: "STATIC"
      name: "SpringFactoriesLoader.ArgumentResolver.class"
      modelFingerprint: "5F0034DA74D42417617FBE94CCB6AD81"
      valueUuid: "SpringFactoriesLoader.ArgumentResolver.class"
      methodExercised:
        expression: "of(type:uniqueUuid108,value:targetClassObject):springFactoriesLoader.ArgumentResolver"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "argumentResolver"
      modelFingerprint: "900146EE10B4914AE93AEF9C5995BCEE"
      valueUuid: "springFactoriesLoader.ArgumentResolver"
      methodExercised:
        expression: "and(type:uniqueUuid109,value:args):springFactoriesLoader.ArgumentResolver2"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "27BFD3AFF61EB16D6621CC8BB9BFE4B5"
      methodExercised:
        expression: "getClassLoader():classLoader4"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader4):springFactoriesLoader4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "C997EC8D4248E2F75F459758B43838D0"
      valueUuid: "springFactoriesLoader4"
      methodExercised:
        expression: "load(factoryType:uniqueUuid110,argumentResolver:springFactoriesLoader.ArgumentResolver2):list5"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "B030C484A6C44F4577E15609B1FF871D"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "starting(bootstrapContext:defaultBootstrapContext,mainApplicationClass:uniqueUuid111):void5"
    - type: "FIELD"
      name: "applicationContextFactory"
      modelFingerprint: "AAE3749474D33E28CB1EA24688048F40"
      valueUuid: "applicationContextFactory"
      methodExercised:
        expression: "createEnvironment(webApplicationType:webApplicationType):configurableEnvironment"
    - type: "LOCAL_VARIABLE"
      name: "applicationArguments"
      modelFingerprint: "029CA1B5E8067A0C5CE390F4A8056BDF"
      valueUuid: "defaultApplicationArguments"
      methodExercised:
        expression: "getSourceArgs():stringArray"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "2EE3446964AC96F91F5C341F4414D1DD"
      methodExercised:
        expression: "configureEnvironment(environment:configurableEnvironment,args:stringArray):void6"
    - type: "STATIC"
      name: "ConfigurationPropertySources.class"
      modelFingerprint: "3FAEEF9F2CBB47AEF5F9A23F72070744"
      valueUuid: "ConfigurationPropertySources.class"
      methodExercised:
        expression: "attach(environment:configurableEnvironment):void7"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "836CFDF85B7A0B5847F32216C1965ED8"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "environmentPrepared(bootstrapContext:defaultBootstrapContext,environment:configurableEnvironment):void8"
    - type: "STATIC"
      name: "DefaultPropertiesPropertySource.class"
      modelFingerprint: "7965CCCD0BE2F60E5E5801A757EA9C8F"
      valueUuid: "DefaultPropertiesPropertySource.class"
      methodExercised:
        expression: "moveToEnd(environment:configurableEnvironment):void9"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "4205AC5FE838825C4939D5574A243BA4"
      valueUuid: "configurableEnvironment"
      methodExercised:
        expression: "containsProperty(key:uniqueUuid112):boolean1"
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "2A737F0AED0B795580225C9A5C41679A"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "state(expression:uniqueUuid113,message:uniqueUuid114):void10"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "6189278F2A1A0FC307E837BECEE2E38C"
      methodExercised:
        expression: "bindToSpringApplication(environment:configurableEnvironment):void11"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "27BFD3AFF61EB16D6621CC8BB9BFE4B5"
      methodExercised:
        expression: "getClassLoader():classLoader5"
    - type: "FIELD"
      name: "applicationContextFactory"
      modelFingerprint: "80B48948E15FB4650F3050A0DD7937BC"
      valueUuid: "applicationContextFactory"
      methodExercised:
        expression: "getEnvironmentType(webApplicationType:webApplicationType):class"
    - type: "LOCAL_VARIABLE"
      name: "environmentConverter"
      modelFingerprint: "91569ED47F912F3F8407161E878F33F2"
      valueUuid: "environmentConverter"
      methodExercised:
        expression: "convertEnvironmentIfNecessary(environment:configurableEnvironment,type:class):configurableEnvironment2"
    - type: "STATIC"
      name: "ConfigurationPropertySources.class"
      modelFingerprint: "4B59E43BE8FA69755C71C95BC954FA01"
      valueUuid: "ConfigurationPropertySources.class"
      methodExercised:
        expression: "attach(environment:configurableEnvironment2):void12"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "bannerPrinter"
      modelFingerprint: "C4563B6CF8B99795A3DE160F9D4746E9"
      valueUuid: "springApplicationBannerPrinter"
      methodExercised:
        expression: "print(environment:configurableEnvironment2,sourceClass:uniqueUuid115,out:printStream):banner"
    - type: "FIELD"
      name: "applicationContextFactory"
      modelFingerprint: "6306AE1AF9D90401F32F2E191467FC85"
      valueUuid: "applicationContextFactory"
      methodExercised:
        expression: "create(webApplicationType:webApplicationType):configurableApplicationContext"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "C4457CBF6543DA61B3CC571D7855BC05"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "setApplicationStartup(applicationStartup:applicationStartup):void13"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "B3ACC9EA65FC960026B912BEA9928FBB"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "setEnvironment(environment:configurableEnvironment2):void14"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "F7247F20B4DB91E482D564DC0E3EE670"
      methodExercised:
        expression: "postProcessApplicationContext(context:configurableApplicationContext):void15"
    - type: "STATIC"
      name: "AotDetector.class.real"
      modelFingerprint: "A651F35C9CB1BB4329EA23C459C95680"
      valueUuid: "AotDetector.class.real"
      methodExercised:
        expression: "useGeneratedArtifacts():boolean2"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "2629F473285A8D2B3BDA80841BE1B13C"
      methodExercised:
        expression: "applyInitializers(context:configurableApplicationContext):void16"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "F25700EBA48DFBE78B5458FCD3EB4646"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "contextPrepared(context:configurableApplicationContext):void17"
    - type: "LOCAL_VARIABLE"
      name: "bootstrapContext"
      modelFingerprint: "909D947F9D1DDC6DDEA8500941736C94"
      valueUuid: "defaultBootstrapContext"
      methodExercised:
        expression: "close(applicationContext:configurableApplicationContext):void18"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "5E3904425938E13844EB71188213737A"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "getParent():applicationContext"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "AC62DBB448DDE3961AAF97490A0B542D"
      methodExercised:
        expression: "logStartupInfo(isRoot:uniqueUuid117):void19"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "7204D97E17BC4435BDF63B535ED64B97"
      methodExercised:
        expression: "logStartupProfileInfo(context:configurableApplicationContext):void20"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "6A01AAC3461FC3A19CF28FB5CC4FB9E4"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "7107C791919372E064D179B76AC9C5E9"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "registerSingleton(beanName:uniqueUuid118,singletonObject:defaultApplicationArguments):void21"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "F3AD204625DA62ACD4B21D745E5E042C"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "registerSingleton(beanName:uniqueUuid119,singletonObject:banner):void22"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "69034248F39E1300FEF9D04C0504E01A"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "addBeanFactoryPostProcessor(postProcessor:beanFactoryPostProcessor):void23"
    - type: "STATIC"
      name: "AotDetector.class.real"
      modelFingerprint: "A651F35C9CB1BB4329EA23C459C95680"
      valueUuid: "AotDetector.class.real"
      methodExercised:
        expression: "useGeneratedArtifacts():boolean4"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "504C2B18FD5DE35DA01916EC347AB7B1"
      methodExercised:
        expression: "getAllSources():set2"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A2E059860C5C45B44F0B7F9AA4D95BDB"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notEmpty(collection:set2,message:uniqueUuid121):void24"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "91ACBEFD431AA6FB4341C4C76B033E1D"
      methodExercised:
        expression: "load(context:configurableApplicationContext,sources:objectArray2):void25"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "9DAE3D234F2CD76AACDE8442BC6EE4A6"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "contextLoaded(context:configurableApplicationContext):void26"
    - type: "FIELD"
      name: "shutdownHook"
      modelFingerprint: "955744B9BBBD449D14979830C226B3DB"
      valueUuid: "springApplicationShutdownHook"
      methodExercised:
        expression: "registerApplicationContext(context:configurableApplicationContext):void27"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "01A9466B1E33218E3C0D5F4F6DD218E7"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "refresh():void28"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      name: "startup"
      modelFingerprint: "9514A429A770044AEBDFB50062B30B4D"
      valueUuid: "springApplication.Startup"
      methodExercised:
        expression: "started():duration"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "FE5D2BC90EC0B24D7B85FD4D1CDFF78B"
      methodExercised:
        expression: "getApplicationLog():log2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "31F4778FC7271F5256CA0997FCC61AFA"
      valueUuid: "startupInfoLogger"
      methodExercised:
        expression: "logStarted(applicationLog:log2,startup:springApplication.Startup):void29"
    - type: "LOCAL_VARIABLE"
      name: "startup"
      modelFingerprint: "8632254D8D53E67F9906077923095FAF"
      valueUuid: "springApplication.Startup"
      methodExercised:
        expression: "timeTakenToStarted():duration2"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "676CA2E0A33FFC3648204E1B59D55045"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "started(context:configurableApplicationContext,timeTaken:duration2):void30"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "6A01AAC3461FC3A19CF28FB5CC4FB9E4"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory2"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "8A57C6E79097BE70207C443A51A26E7F"
      valueUuid: "configurableListableBeanFactory2"
      methodExercised:
        expression: "getBeanNamesForType(type:uniqueUuid123):stringArray2"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "049356A3DCD2541F910927E5E31BCA20"
      valueUuid: "configurableListableBeanFactory2"
      methodExercised:
        expression: "getBean(name:string4,requiredType:uniqueUuid124):object4"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "9FB5A4AC1406067842215F6E568A3B04"
      valueUuid: "annotationAwareOrderComparator"
      methodExercised:
        expression: "withSourceProvider(sourceProvider:orderComparator.OrderSourceProvider):comparator"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "9CED159BA79A476605AD8BA424104DFA"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "isActive():boolean8"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "61E9AFA977DB6ECBD602BEBA7C9463AE"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "failed(context:configurableApplicationContext,exception:throwable):void32"
    - type: "STATIC"
      name: "SpringFactoriesLoader.ArgumentResolver.class"
      modelFingerprint: "70429A3A1E9B472C8BD20C617647BDFE"
      valueUuid: "SpringFactoriesLoader.ArgumentResolver.class"
      methodExercised:
        expression: "of(type:uniqueUuid125,value:configurableApplicationContext):springFactoriesLoader.ArgumentResolver3"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "27BFD3AFF61EB16D6621CC8BB9BFE4B5"
      methodExercised:
        expression: "getClassLoader():classLoader6"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader6):springFactoriesLoader5"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "AA81551829B9141514B75BF9EF42CBBD"
      valueUuid: "springFactoriesLoader5"
      methodExercised:
        expression: "load(factoryType:uniqueUuid126,argumentResolver:springFactoriesLoader.ArgumentResolver3):list6"
    - type: "LOCAL_VARIABLE"
      name: "reporter"
      modelFingerprint: "53EDADBAF6CE400D6584AFF1FE32508B"
      valueUuid: "object5"
      methodExercised:
        expression: "reportException(failure:throwable):boolean10"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "25160C0B68B296E325C49D537DB671D7"
      methodExercised:
        expression: "registerLoggedException(exception:throwable):void33"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "C2E3D1F0AC456BC4B0896B03B086FB0F"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "close():void34"
    - type: "FIELD"
      name: "shutdownHook"
      modelFingerprint: "D5B0EC1BADB2B19C635663B4FCF72382"
      valueUuid: "springApplicationShutdownHook"
      methodExercised:
        expression: "deregisterFailedApplicationContext(applicationContext:configurableApplicationContext):void35"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "9CFF50C0410C3DD68B197653731C9575"
      valueUuid: "illegalStateException"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
        propertiesMap:
          applicationContextFactory:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ApplicationContextFactory"
            uuid: "applicationContextFactory"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid101"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "bootstrapRegistryInitializer"
          collectionUuid: "arrayList"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid102"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid103"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid104"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid105"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid106"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid107"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "SpringApplication.Startup.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationShutdownHook"
        parameters: []
      valueType: "org.springframework.boot.SpringApplicationShutdownHook"
      uuid: "springApplicationShutdownHook"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "bootstrapRegistryInitializer"
      collectionUuid: "arrayList"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "SpringFactoriesLoader.ArgumentResolver.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.SpringApplication"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.SpringApplication"
      uuid: "uniqueUuid108"
      fixed: true
    - sapientType: "THIS"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String[]"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.String[]"
      uuid: "uniqueUuid109"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader4"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader4"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader4"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader4"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.SpringApplicationRunListener"
      uuid: "list5"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.SpringApplicationRunListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.SpringApplicationRunListener"
      uuid: "uniqueUuid110"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      uuid: "uniqueUuid111"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "applicationContextFactory"
    - sapientType: "NULL"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.DefaultApplicationArguments"
        parameters:
        - name: "args"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "args"
      valueType: "org.springframework.boot.DefaultApplicationArguments"
      uuid: "defaultApplicationArguments"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "ConfigurationPropertySources.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.DefaultPropertiesPropertySource"
      uuid: "DefaultPropertiesPropertySource.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "NULL"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "spring.main.environment-prefix"
      valueType: "java.lang.String"
      uuid: "uniqueUuid112"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid113"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Environment prefix cannot be set via properties."
      valueType: "java.lang.String"
      uuid: "uniqueUuid114"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void11"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "applicationContextFactory"
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
      uuid: "class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.EnvironmentConverter"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "classLoader5"
      valueType: "org.springframework.boot.EnvironmentConverter"
      uuid: "environmentConverter"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "NULL"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "ConfigurationPropertySources.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void12"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationBannerPrinter"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "fallbackBanner"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.Banner"
            uuid: "fieldBanner"
      valueType: "org.springframework.boot.SpringApplicationBannerPrinter"
      uuid: "springApplicationBannerPrinter"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.Banner"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.SpringApplicationBannerPrinter"
            parameters:
            - name: "resourceLoader"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.core.io.ResourceLoader"
                uuid: "resourceLoader"
            - name: "fallbackBanner"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.Banner"
                uuid: "fieldBanner"
          valueType: "org.springframework.boot.SpringApplicationBannerPrinter"
          uuid: "springApplicationBannerPrinter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.EnvironmentConverter"
                  parameters:
                  - name: "classLoader"
                    value:
                      sapientType: "OBJECT"
                      content: !<static_method_return>
                        target: "java.lang.ClassLoader"
                        method: "getPlatformClassLoader"
                        methodParameters: []
                      valueType: "java.lang.ClassLoader"
                      uuid: "classLoader5"
                valueType: "org.springframework.boot.EnvironmentConverter"
                uuid: "environmentConverter"
                fixed: true
              methodParameters:
              - name: "environment"
                value:
                  sapientType: "NULL"
                  valueType: "org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "configurableEnvironment"
              - name: "type"
                value:
                  sapientType: "NULL"
                  valueType: "java.lang.Class"
                  genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "class"
              methodName: "convertEnvironmentIfNecessary"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment2"
        - name: "sourceClass"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            uuid: "uniqueUuid116"
            explicitCastNeeded: true
        - name: "out"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "java.lang.System"
              fieldName: "out"
            valueType: "java.io.PrintStream"
            uuid: "printStream"
        methodName: "print"
      valueType: "org.springframework.boot.Banner"
      uuid: "banner"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      uuid: "uniqueUuid115"
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "java.lang.System"
        fieldName: "out"
      valueType: "java.io.PrintStream"
      uuid: "printStream"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "applicationContextFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void13"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.core.metrics.ApplicationStartup"
        fieldName: "DEFAULT"
      valueType: "org.springframework.core.metrics.ApplicationStartup"
      uuid: "applicationStartup"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void14"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void15"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "REAL"
      valueType: "org.springframework.aot.AotDetector"
      uuid: "AotDetector.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void16"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void17"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.DefaultBootstrapContext"
        parameters: []
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void18"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "NULL"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void19"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid117"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void20"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void21"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "springApplicationArguments"
      valueType: "java.lang.String"
      uuid: "uniqueUuid118"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultApplicationArguments"
      uuid: "defaultApplicationArguments"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void22"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "springBootBanner"
      valueType: "java.lang.String"
      uuid: "uniqueUuid119"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.Banner"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.SpringApplicationBannerPrinter"
            parameters:
            - name: "resourceLoader"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.core.io.ResourceLoader"
                uuid: "resourceLoader"
            - name: "fallbackBanner"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.Banner"
                uuid: "fieldBanner"
          valueType: "org.springframework.boot.SpringApplicationBannerPrinter"
          uuid: "springApplicationBannerPrinter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.EnvironmentConverter"
                  parameters:
                  - name: "classLoader"
                    value:
                      sapientType: "OBJECT"
                      content: !<static_method_return>
                        target: "java.lang.ClassLoader"
                        method: "getPlatformClassLoader"
                        methodParameters: []
                      valueType: "java.lang.ClassLoader"
                      uuid: "classLoader5"
                valueType: "org.springframework.boot.EnvironmentConverter"
                uuid: "environmentConverter"
                fixed: true
              methodParameters:
              - name: "environment"
                value:
                  sapientType: "NULL"
                  valueType: "org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "configurableEnvironment"
              - name: "type"
                value:
                  sapientType: "NULL"
                  valueType: "java.lang.Class"
                  genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "class"
              methodName: "convertEnvironmentIfNecessary"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment2"
        - name: "sourceClass"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            uuid: "uniqueUuid120"
            explicitCastNeeded: true
        - name: "out"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "java.lang.System"
              fieldName: "out"
            valueType: "java.io.PrintStream"
            uuid: "printStream"
        methodName: "print"
      valueType: "org.springframework.boot.Banner"
      uuid: "banner"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void23"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.beans.factory.config.BeanFactoryPostProcessor"
      uuid: "beanFactoryPostProcessor"
    - sapientType: "REAL"
      valueType: "org.springframework.aot.AotDetector"
      uuid: "AotDetector.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.Object"
      uuid: "set2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void24"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.Object"
      uuid: "set2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be empty"
      valueType: "java.lang.String"
      uuid: "uniqueUuid121"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void25"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Object[]"
      uuid: "objectArray2"
      collectionUuid: "set2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void26"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationShutdownHook"
        parameters: []
      valueType: "org.springframework.boot.SpringApplicationShutdownHook"
      uuid: "springApplicationShutdownHook"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void27"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void28"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration-days"
      valueType: "java.time.Duration"
      uuid: "duration"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "log2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.StartupInfoLogger"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            uuid: "uniqueUuid122"
            explicitCastNeeded: true
      valueType: "org.springframework.boot.StartupInfoLogger"
      uuid: "startupInfoLogger"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void29"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "log2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration2-days"
      valueType: "java.time.Duration"
      uuid: "duration2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void30"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration2-days"
      valueType: "java.time.Duration"
      uuid: "duration2"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getBeanNamesForTypeItem1"
            valueType: "java.lang.String"
            uuid: "string4"
      valueType: "java.lang.String[]"
      uuid: "stringArray2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.Runner"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.Runner"
      uuid: "uniqueUuid123"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.Runner"
      uuid: "object4"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanNamesForTypeItem1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.Runner"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.Runner"
      uuid: "uniqueUuid124"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
        fieldName: "INSTANCE"
      valueType: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
      uuid: "annotationAwareOrderComparator"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.util.Comparator"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<static_field_return>
            target: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
            fieldName: "INSTANCE"
          valueType: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
          uuid: "annotationAwareOrderComparator"
        methodParameters:
        - name: "sourceProvider"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "org.springframework.core.OrderComparator$OrderSourceProvider"
            uuid: "orderComparator.OrderSourceProvider"
        methodName: "withSourceProvider"
      valueType: "java.util.Comparator"
      genericValueType: "java.lang.Object"
      uuid: "comparator"
    - sapientType: "ANY"
      valueType: "org.springframework.core.OrderComparator$OrderSourceProvider"
      uuid: "orderComparator.OrderSourceProvider"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean8"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void32"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "NULL"
      valueType: "java.lang.Throwable"
      uuid: "throwable"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "SpringFactoriesLoader.ArgumentResolver.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ConfigurableApplicationContext"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "uniqueUuid125"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader6"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader5"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader6"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader5"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.SpringBootExceptionReporter"
          uuid: "object5"
          collectionUuid: "list6"
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.SpringBootExceptionReporter"
      uuid: "list6"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.SpringBootExceptionReporter"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.SpringBootExceptionReporter"
      uuid: "uniqueUuid126"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringBootExceptionReporter"
      uuid: "object5"
      collectionUuid: "list6"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean10"
    - sapientType: "NULL"
      valueType: "java.lang.Throwable"
      uuid: "throwable"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void33"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.lang.Throwable"
      uuid: "throwable"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void34"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationShutdownHook"
        parameters: []
      valueType: "org.springframework.boot.SpringApplicationShutdownHook"
      uuid: "springApplicationShutdownHook"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void35"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "cause"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Throwable"
            uuid: "throwable"
            fixed: true
      valueType: "java.lang.IllegalStateException"
      uuid: "illegalStateException"
      fixed: true
    branches:
    - lineNumber: 319
      expression: "this.registerShutdownHook"
      range: "(319,7)-(319,31)"
      evaluatedAs: true
    - lineNumber: 470
      expression: "hook != null"
      range: "(470,48)-(470,59)"
      evaluatedAs: false
      internalMethodName: "getRunListeners"
    - lineNumber: 471
      expression: "hookListener != null"
      range: "(471,7)-(471,26)"
      evaluatedAs: false
      internalMethodName: "getRunListeners"
    - lineNumber: 487
      expression: "this.environment != null"
      range: "(487,7)-(487,30)"
      evaluatedAs: false
      internalMethodName: "getOrCreateEnvironment"
    - lineNumber: 491
      expression: "environment == null"
      range: "(491,7)-(491,25)"
      evaluatedAs: false
      internalMethodName: "getOrCreateEnvironment"
    - lineNumber: 494
      expression: "environment != null"
      range: "(494,11)-(494,29)"
      evaluatedAs: true
      internalMethodName: "getOrCreateEnvironment"
    - lineNumber: 371
      expression: "!environment.containsProperty(\\\"spring.main.environment-prefix\\\
        \")"
      range: "(371,16)-(371,78)"
      evaluatedAs: true
      internalMethodName: "prepareEnvironment"
    - lineNumber: 374
      expression: "!this.isCustomEnvironment"
      range: "(374,7)-(374,31)"
      evaluatedAs: true
      internalMethodName: "prepareEnvironment"
    - lineNumber: 385
      expression: "environmentType == null"
      range: "(385,7)-(385,29)"
      evaluatedAs: false
      internalMethodName: "deduceEnvironmentClass"
    - lineNumber: 388
      expression: "environmentType == null"
      range: "(388,7)-(388,29)"
      evaluatedAs: false
      internalMethodName: "deduceEnvironmentClass"
    - lineNumber: 569
      expression: "this.bannerMode == Banner.Mode.OFF"
      range: "(569,7)-(569,40)"
      evaluatedAs: false
      internalMethodName: "printBanner"
    - lineNumber: 572
      expression: "this.resourceLoader != null"
      range: "(572,36)-(572,62)"
      evaluatedAs: true
      internalMethodName: "printBanner"
    - lineNumber: 575
      expression: "this.bannerMode == Mode.LOG"
      range: "(575,7)-(575,33)"
      evaluatedAs: false
      internalMethodName: "printBanner"
    - lineNumber: 436
      expression: "AotDetector.useGeneratedArtifacts()"
      range: "(436,7)-(436,41)"
      evaluatedAs: false
      internalMethodName: "addAotGeneratedInitializerIfNecessary"
    - lineNumber: 403
      expression: "this.logStartupInfo"
      range: "(403,7)-(403,25)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 404
      expression: "context.getParent() == null"
      range: "(404,19)-(404,45)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 410
      expression: "printedBanner != null"
      range: "(410,7)-(410,27)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 413
      expression: "beanFactory instanceof AbstractAutowireCapableBeanFactory autowireCapableBeanFactory"
      range: "(413,7)-(413,90)"
      evaluatedAs: false
      internalMethodName: "prepareContext"
    - lineNumber: 419
      expression: "this.lazyInitialization"
      range: "(419,7)-(419,29)"
      evaluatedAs: false
      internalMethodName: "prepareContext"
    - lineNumber: 422
      expression: "this.keepAlive"
      range: "(422,7)-(422,20)"
      evaluatedAs: false
      internalMethodName: "prepareContext"
    - lineNumber: 426
      expression: "!AotDetector.useGeneratedArtifacts()"
      range: "(426,7)-(426,42)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 453
      expression: "this.registerShutdownHook"
      range: "(453,7)-(453,31)"
      evaluatedAs: true
      internalMethodName: "refreshContext"
    - lineNumber: 337
      expression: "this.logStartupInfo"
      range: "(337,8)-(337,26)"
      evaluatedAs: true
    - lineNumber: 769
      expression: "for-each(beanNames)"
      range: "(769,26)-(769,34)"
      evaluatedAs: true
      internalMethodName: "callRunners"
    - lineNumber: 778
      expression: "beanFactory instanceof DefaultListableBeanFactory defaultListableBeanFactory"
      range: "(778,41)-(778,116)"
      evaluatedAs: false
      internalMethodName: "getOrderComparator"
    - lineNumber: 780
      expression: "dependencyComparator instanceof OrderComparator orderComparator"
      range: "(780,11)-(780,73)"
      evaluatedAs: false
      internalMethodName: "getOrderComparator"
    - lineNumber: 343
      expression: "catch-exception (Throwable)"
      range: "(343,3)-(343,21)"
      evaluatedAs: true
    - lineNumber: 803
      expression: "exception instanceof AbandonedRunException abandonedRunException"
      range: "(803,7)-(803,70)"
      evaluatedAs: false
      internalMethodName: "handleRunFailure"
    - lineNumber: 890
      expression: "context == null"
      range: "(890,7)-(890,21)"
      evaluatedAs: false
      internalMethodName: "getExitCodeFromMappedException"
    - lineNumber: 890
      expression: "!context.isActive()"
      range: "(890,26)-(890,44)"
      evaluatedAs: true
      internalMethodName: "getExitCodeFromMappedException"
    - lineNumber: 883
      expression: "exitCode == 0"
      range: "(883,7)-(883,19)"
      evaluatedAs: true
      internalMethodName: "getExitCodeFromException"
    - lineNumber: 900
      expression: "exception == null"
      range: "(900,7)-(900,23)"
      evaluatedAs: true
      internalMethodName: "getExitCodeFromExitCodeGeneratorException"
    - lineNumber: 870
      expression: "exitCode != 0"
      range: "(870,7)-(870,19)"
      evaluatedAs: false
      internalMethodName: "handleExitCode"
    - lineNumber: 809
      expression: "listeners != null"
      range: "(809,9)-(809,25)"
      evaluatedAs: true
      internalMethodName: "handleRunFailure"
    - lineNumber: 840
      expression: "for-each(exceptionReporters)"
      range: "(840,48)-(840,65)"
      evaluatedAs: true
      internalMethodName: "reportFailure"
    - lineNumber: 841
      expression: "reporter.reportException(failure)"
      range: "(841,9)-(841,41)"
      evaluatedAs: true
      internalMethodName: "reportFailure"
    - lineNumber: 815
      expression: "context != null"
      range: "(815,9)-(815,23)"
      evaluatedAs: true
      internalMethodName: "handleRunFailure"
    - lineNumber: 824
      expression: "exception instanceof RuntimeException runtimeException"
      range: "(824,11)-(824,64)"
      evaluatedAs: false
      internalMethodName: "handleRunFailure"
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Throwable"
  - pathId: "path13"
    testPathName: "runWhenExceptionInstanceOfRuntimeExceptionThrowsRuntimeException"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "3BDA3B060A0C15C1885198568DA2CE6D"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "args"
      modelFingerprint: "62B8E965720EE46A7489315174A3A841"
      valueUuid: "args"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid127):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "E2F288269971D6B40DA896664938F98E"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "20006F76B7E4788E565F04F635D4A52D"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid128,argumentResolver:uniqueUuid129):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid130,argumentResolver:uniqueUuid131):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid132,argumentResolver:uniqueUuid133):list4"
    - type: "STATIC"
      name: "SpringApplication.Startup.class"
      modelFingerprint: "DA8622EB3506E174E0335AC27132B054"
      valueUuid: "SpringApplication.Startup.class"
      methodExercised:
        expression: "create():springApplication.Startup"
        staticAccess: true
    - type: "FIELD"
      name: "shutdownHook"
      modelFingerprint: "A0CD9DC1B1C93A40FEC7031737D9BE10"
      valueUuid: "springApplicationShutdownHook"
      methodExercised:
        expression: "enableShutdownHookAddition():void2"
    - type: "LOCAL_VARIABLE"
      name: "initializer"
      modelFingerprint: "78495708A547C9C6DC2151A7C67101AC"
      valueUuid: "bootstrapRegistryInitializer"
      methodExercised:
        expression: "initialize(registry:defaultBootstrapContext):void4"
    - type: "STATIC"
      name: "SpringFactoriesLoader.ArgumentResolver.class"
      modelFingerprint: "5F0034DA74D42417617FBE94CCB6AD81"
      valueUuid: "SpringFactoriesLoader.ArgumentResolver.class"
      methodExercised:
        expression: "of(type:uniqueUuid134,value:targetClassObject):springFactoriesLoader.ArgumentResolver"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "argumentResolver"
      modelFingerprint: "900146EE10B4914AE93AEF9C5995BCEE"
      valueUuid: "springFactoriesLoader.ArgumentResolver"
      methodExercised:
        expression: "and(type:uniqueUuid135,value:args):springFactoriesLoader.ArgumentResolver2"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "27BFD3AFF61EB16D6621CC8BB9BFE4B5"
      methodExercised:
        expression: "getClassLoader():classLoader4"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader4):springFactoriesLoader4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "C997EC8D4248E2F75F459758B43838D0"
      valueUuid: "springFactoriesLoader4"
      methodExercised:
        expression: "load(factoryType:uniqueUuid136,argumentResolver:springFactoriesLoader.ArgumentResolver2):list5"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "B030C484A6C44F4577E15609B1FF871D"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "starting(bootstrapContext:defaultBootstrapContext,mainApplicationClass:uniqueUuid137):void5"
    - type: "FIELD"
      name: "applicationContextFactory"
      modelFingerprint: "06BD52635BC7B034715AED6488A78392"
      valueUuid: "applicationContextFactory"
      methodExercised:
        expression: "createEnvironment(webApplicationType:webApplicationType):configurableEnvironment"
    - type: "LOCAL_VARIABLE"
      name: "applicationArguments"
      modelFingerprint: "029CA1B5E8067A0C5CE390F4A8056BDF"
      valueUuid: "defaultApplicationArguments"
      methodExercised:
        expression: "getSourceArgs():stringArray"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "90BC58528E0141F4E6E011D07D70EE79"
      methodExercised:
        expression: "configureEnvironment(environment:configurableEnvironment,args:stringArray):void6"
    - type: "STATIC"
      name: "ConfigurationPropertySources.class"
      modelFingerprint: "58E4F8CCC7DC67F3E09EA91F9A6467FB"
      valueUuid: "ConfigurationPropertySources.class"
      methodExercised:
        expression: "attach(environment:configurableEnvironment):void7"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "5E7F92D4A76B53122BDFD2BE5C6BFE2B"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "environmentPrepared(bootstrapContext:defaultBootstrapContext,environment:configurableEnvironment):void8"
    - type: "STATIC"
      name: "DefaultPropertiesPropertySource.class"
      modelFingerprint: "432C497220A187F4231AD8C95D44D3D6"
      valueUuid: "DefaultPropertiesPropertySource.class"
      methodExercised:
        expression: "moveToEnd(environment:configurableEnvironment):void9"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "2BAE2A27DEF6B4CFF3B6082E9E311248"
      valueUuid: "configurableEnvironment"
      methodExercised:
        expression: "containsProperty(key:uniqueUuid138):boolean1"
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "2A737F0AED0B795580225C9A5C41679A"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "state(expression:uniqueUuid139,message:uniqueUuid140):void10"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "E6B42E54F1DFA3D64EA4D5F761BE969D"
      methodExercised:
        expression: "bindToSpringApplication(environment:configurableEnvironment):void11"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "27BFD3AFF61EB16D6621CC8BB9BFE4B5"
      methodExercised:
        expression: "getClassLoader():classLoader5"
    - type: "FIELD"
      name: "applicationContextFactory"
      modelFingerprint: "CA81E603C78F05F6FBB4BD5D16D697F6"
      valueUuid: "applicationContextFactory"
      methodExercised:
        expression: "getEnvironmentType(webApplicationType:webApplicationType):class"
    - type: "LOCAL_VARIABLE"
      name: "environmentConverter"
      modelFingerprint: "E5B9FA8FB6710B65ABA183AC228D1F66"
      valueUuid: "environmentConverter"
      methodExercised:
        expression: "convertEnvironmentIfNecessary(environment:configurableEnvironment,type:class):configurableEnvironment2"
    - type: "STATIC"
      name: "ConfigurationPropertySources.class"
      modelFingerprint: "05610F2B4CE0EE45EFD8707C0830737F"
      valueUuid: "ConfigurationPropertySources.class"
      methodExercised:
        expression: "attach(environment:configurableEnvironment2):void12"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "bannerPrinter"
      modelFingerprint: "57DBBA845CE5D3692822F30C99C8F94C"
      valueUuid: "springApplicationBannerPrinter"
      methodExercised:
        expression: "print(environment:configurableEnvironment2,sourceClass:uniqueUuid141,out:printStream):banner"
    - type: "FIELD"
      name: "applicationContextFactory"
      modelFingerprint: "9636AB959433EACCFC3EAE2B2054BBA7"
      valueUuid: "applicationContextFactory"
      methodExercised:
        expression: "create(webApplicationType:webApplicationType):configurableApplicationContext"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "C4457CBF6543DA61B3CC571D7855BC05"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "setApplicationStartup(applicationStartup:applicationStartup):void13"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "8612B0D1172C552882689E6870D41AE5"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "setEnvironment(environment:configurableEnvironment2):void14"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "F7247F20B4DB91E482D564DC0E3EE670"
      methodExercised:
        expression: "postProcessApplicationContext(context:configurableApplicationContext):void15"
    - type: "STATIC"
      name: "AotDetector.class.real"
      modelFingerprint: "A651F35C9CB1BB4329EA23C459C95680"
      valueUuid: "AotDetector.class.real"
      methodExercised:
        expression: "useGeneratedArtifacts():boolean2"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "2629F473285A8D2B3BDA80841BE1B13C"
      methodExercised:
        expression: "applyInitializers(context:configurableApplicationContext):void16"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "F25700EBA48DFBE78B5458FCD3EB4646"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "contextPrepared(context:configurableApplicationContext):void17"
    - type: "LOCAL_VARIABLE"
      name: "bootstrapContext"
      modelFingerprint: "909D947F9D1DDC6DDEA8500941736C94"
      valueUuid: "defaultBootstrapContext"
      methodExercised:
        expression: "close(applicationContext:configurableApplicationContext):void18"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "5E3904425938E13844EB71188213737A"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "getParent():applicationContext"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "AC62DBB448DDE3961AAF97490A0B542D"
      methodExercised:
        expression: "logStartupInfo(isRoot:uniqueUuid143):void19"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "7204D97E17BC4435BDF63B535ED64B97"
      methodExercised:
        expression: "logStartupProfileInfo(context:configurableApplicationContext):void20"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "6A01AAC3461FC3A19CF28FB5CC4FB9E4"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "7107C791919372E064D179B76AC9C5E9"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "registerSingleton(beanName:uniqueUuid144,singletonObject:defaultApplicationArguments):void21"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "7D9F9E6CBD122983C30C4497B512C45C"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "registerSingleton(beanName:uniqueUuid145,singletonObject:banner):void22"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "69034248F39E1300FEF9D04C0504E01A"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "addBeanFactoryPostProcessor(postProcessor:beanFactoryPostProcessor):void23"
    - type: "STATIC"
      name: "AotDetector.class.real"
      modelFingerprint: "A651F35C9CB1BB4329EA23C459C95680"
      valueUuid: "AotDetector.class.real"
      methodExercised:
        expression: "useGeneratedArtifacts():boolean4"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "504C2B18FD5DE35DA01916EC347AB7B1"
      methodExercised:
        expression: "getAllSources():set2"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A2E059860C5C45B44F0B7F9AA4D95BDB"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notEmpty(collection:set2,message:uniqueUuid147):void24"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "91ACBEFD431AA6FB4341C4C76B033E1D"
      methodExercised:
        expression: "load(context:configurableApplicationContext,sources:objectArray2):void25"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "9DAE3D234F2CD76AACDE8442BC6EE4A6"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "contextLoaded(context:configurableApplicationContext):void26"
    - type: "FIELD"
      name: "shutdownHook"
      modelFingerprint: "955744B9BBBD449D14979830C226B3DB"
      valueUuid: "springApplicationShutdownHook"
      methodExercised:
        expression: "registerApplicationContext(context:configurableApplicationContext):void27"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "01A9466B1E33218E3C0D5F4F6DD218E7"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "refresh():void28"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      name: "startup"
      modelFingerprint: "9514A429A770044AEBDFB50062B30B4D"
      valueUuid: "springApplication.Startup"
      methodExercised:
        expression: "started():duration"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "FE5D2BC90EC0B24D7B85FD4D1CDFF78B"
      methodExercised:
        expression: "getApplicationLog():log2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "31F4778FC7271F5256CA0997FCC61AFA"
      valueUuid: "startupInfoLogger"
      methodExercised:
        expression: "logStarted(applicationLog:log2,startup:springApplication.Startup):void29"
    - type: "LOCAL_VARIABLE"
      name: "startup"
      modelFingerprint: "8632254D8D53E67F9906077923095FAF"
      valueUuid: "springApplication.Startup"
      methodExercised:
        expression: "timeTakenToStarted():duration2"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "676CA2E0A33FFC3648204E1B59D55045"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "started(context:configurableApplicationContext,timeTaken:duration2):void30"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "6A01AAC3461FC3A19CF28FB5CC4FB9E4"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory2"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "8A57C6E79097BE70207C443A51A26E7F"
      valueUuid: "configurableListableBeanFactory2"
      methodExercised:
        expression: "getBeanNamesForType(type:uniqueUuid149):stringArray2"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "049356A3DCD2541F910927E5E31BCA20"
      valueUuid: "configurableListableBeanFactory2"
      methodExercised:
        expression: "getBean(name:string4,requiredType:uniqueUuid150):object4"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "9FB5A4AC1406067842215F6E568A3B04"
      valueUuid: "annotationAwareOrderComparator"
      methodExercised:
        expression: "withSourceProvider(sourceProvider:orderComparator.OrderSourceProvider):comparator"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "B0C2BF9972AA4C4EDBF3DAF9750E2F28"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "isActive():boolean8"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "5DDFA07303AF81DAB35393AAE9783D7E"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "getBeansOfType(type:uniqueUuid151):map"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
    - type: "LOCAL_VARIABLE"
      name: "generators"
      modelFingerprint: "1F7D9F3DFE6FB600B6DF3A8B683D1CF1"
      valueUuid: "exitCodeGenerators"
      methodExercised:
        expression: "addAll(exception:throwable,mappers:collection):void32"
    - type: "LOCAL_VARIABLE"
      name: "generators"
      modelFingerprint: "D628F6E15FB40EDEA38738DF554737B7"
      valueUuid: "exitCodeGenerators"
      methodExercised:
        expression: "getExitCode():int11"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "9FEC77CA1F086F57E5E5B840A6DFBD3E"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "publishEvent(event:exitCodeEvent):void33"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "9348C2FCC8DE8D8A578963FF61E5E05C"
      methodExercised:
        expression: "getSpringBootExceptionHandler():springBootExceptionHandler"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "D6358695736AB1012ECA90F4A044E7F6"
      valueUuid: "springBootExceptionHandler"
      methodExercised:
        expression: "registerExitCode(exitCode:int11):void34"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "7B437A4C2CB38E2CD1EC5FF7801D5E2E"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "failed(context:configurableApplicationContext,exception:throwable):void35"
    - type: "STATIC"
      name: "SpringFactoriesLoader.ArgumentResolver.class"
      modelFingerprint: "70429A3A1E9B472C8BD20C617647BDFE"
      valueUuid: "SpringFactoriesLoader.ArgumentResolver.class"
      methodExercised:
        expression: "of(type:uniqueUuid152,value:configurableApplicationContext):springFactoriesLoader.ArgumentResolver3"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "27BFD3AFF61EB16D6621CC8BB9BFE4B5"
      methodExercised:
        expression: "getClassLoader():classLoader6"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader6):springFactoriesLoader5"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "89391FA8E64C49BEE40846C385407C94"
      valueUuid: "springFactoriesLoader5"
      methodExercised:
        expression: "load(factoryType:uniqueUuid153,argumentResolver:springFactoriesLoader.ArgumentResolver3):list6"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "C2E3D1F0AC456BC4B0896B03B086FB0F"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "close():void36"
    - type: "FIELD"
      name: "shutdownHook"
      modelFingerprint: "D5B0EC1BADB2B19C635663B4FCF72382"
      valueUuid: "springApplicationShutdownHook"
      methodExercised:
        expression: "deregisterFailedApplicationContext(applicationContext:configurableApplicationContext):void37"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C47223612F71BFE607116AFCAAE5E423"
      valueUuid: "throwable"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
        propertiesMap:
          applicationContextFactory:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ApplicationContextFactory"
            uuid: "applicationContextFactory"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid127"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "SERVLET"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "bootstrapRegistryInitializer"
          collectionUuid: "arrayList"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid128"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid129"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid130"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid131"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid132"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid133"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "SpringApplication.Startup.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationShutdownHook"
        parameters: []
      valueType: "org.springframework.boot.SpringApplicationShutdownHook"
      uuid: "springApplicationShutdownHook"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "bootstrapRegistryInitializer"
      collectionUuid: "arrayList"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "SpringFactoriesLoader.ArgumentResolver.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.SpringApplication"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.SpringApplication"
      uuid: "uniqueUuid134"
      fixed: true
    - sapientType: "THIS"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String[]"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.String[]"
      uuid: "uniqueUuid135"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader4"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader4"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader4"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader4"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.SpringApplicationRunListener"
      uuid: "list5"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.SpringApplicationRunListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.SpringApplicationRunListener"
      uuid: "uniqueUuid136"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      uuid: "uniqueUuid137"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "applicationContextFactory"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "SERVLET"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "ENUM"
      content: !<regular>
        value: "SERVLET"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.DefaultApplicationArguments"
        parameters:
        - name: "args"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "args"
      valueType: "org.springframework.boot.DefaultApplicationArguments"
      uuid: "defaultApplicationArguments"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "SERVLET"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "ConfigurationPropertySources.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "SERVLET"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "SERVLET"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.DefaultPropertiesPropertySource"
      uuid: "DefaultPropertiesPropertySource.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "SERVLET"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "SERVLET"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "spring.main.environment-prefix"
      valueType: "java.lang.String"
      uuid: "uniqueUuid138"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid139"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Environment prefix cannot be set via properties."
      valueType: "java.lang.String"
      uuid: "uniqueUuid140"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void11"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "SERVLET"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "applicationContextFactory"
    - sapientType: "CLASS"
      content: !<regular>
        value: "? extends org.springframework.core.env.ConfigurableEnvironment"
      valueType: "java.lang.Class"
      genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
      uuid: "class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "SERVLET"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.EnvironmentConverter"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "classLoader5"
      valueType: "org.springframework.boot.EnvironmentConverter"
      uuid: "environmentConverter"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ApplicationContextFactory"
                uuid: "applicationContextFactory"
              methodParameters:
              - name: "webApplicationType"
                value:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "SERVLET"
                  valueType: "org.springframework.boot.WebApplicationType"
                  uuid: "webApplicationType"
              methodName: "createEnvironment"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "? extends org.springframework.core.env.ConfigurableEnvironment"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "SERVLET"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "CLASS"
      content: !<regular>
        value: "? extends org.springframework.core.env.ConfigurableEnvironment"
      valueType: "java.lang.Class"
      genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "ConfigurationPropertySources.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void12"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ApplicationContextFactory"
                uuid: "applicationContextFactory"
              methodParameters:
              - name: "webApplicationType"
                value:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "SERVLET"
                  valueType: "org.springframework.boot.WebApplicationType"
                  uuid: "webApplicationType"
              methodName: "createEnvironment"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "? extends org.springframework.core.env.ConfigurableEnvironment"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationBannerPrinter"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "fallbackBanner"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.Banner"
            uuid: "fieldBanner"
      valueType: "org.springframework.boot.SpringApplicationBannerPrinter"
      uuid: "springApplicationBannerPrinter"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.Banner"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.SpringApplicationBannerPrinter"
            parameters:
            - name: "resourceLoader"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.core.io.ResourceLoader"
                uuid: "resourceLoader"
            - name: "fallbackBanner"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.Banner"
                uuid: "fieldBanner"
          valueType: "org.springframework.boot.SpringApplicationBannerPrinter"
          uuid: "springApplicationBannerPrinter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.EnvironmentConverter"
                  parameters:
                  - name: "classLoader"
                    value:
                      sapientType: "OBJECT"
                      content: !<static_method_return>
                        target: "java.lang.ClassLoader"
                        method: "getPlatformClassLoader"
                        methodParameters: []
                      valueType: "java.lang.ClassLoader"
                      uuid: "classLoader5"
                valueType: "org.springframework.boot.EnvironmentConverter"
                uuid: "environmentConverter"
                fixed: true
              methodParameters:
              - name: "environment"
                value:
                  sapientType: "OBJECT"
                  content: !<method_return_from_value>
                    target: "org.springframework.core.env.ConfigurableEnvironment"
                    localVariableValue:
                      sapientType: "MOCK"
                      valueType: "org.springframework.boot.ApplicationContextFactory"
                      uuid: "applicationContextFactory"
                    methodParameters:
                    - name: "webApplicationType"
                      value:
                        sapientType: "ENUM"
                        content: !<regular>
                          value: "SERVLET"
                        valueType: "org.springframework.boot.WebApplicationType"
                        uuid: "webApplicationType"
                    methodName: "createEnvironment"
                  valueType: "org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "configurableEnvironment"
              - name: "type"
                value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "? extends org.springframework.core.env.ConfigurableEnvironment"
                  valueType: "java.lang.Class"
                  genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "class"
              methodName: "convertEnvironmentIfNecessary"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment2"
        - name: "sourceClass"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            uuid: "uniqueUuid142"
            explicitCastNeeded: true
        - name: "out"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "java.lang.System"
              fieldName: "out"
            valueType: "java.io.PrintStream"
            uuid: "printStream"
        methodName: "print"
      valueType: "org.springframework.boot.Banner"
      uuid: "banner"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ApplicationContextFactory"
                uuid: "applicationContextFactory"
              methodParameters:
              - name: "webApplicationType"
                value:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "SERVLET"
                  valueType: "org.springframework.boot.WebApplicationType"
                  uuid: "webApplicationType"
              methodName: "createEnvironment"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "? extends org.springframework.core.env.ConfigurableEnvironment"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      uuid: "uniqueUuid141"
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "java.lang.System"
        fieldName: "out"
      valueType: "java.io.PrintStream"
      uuid: "printStream"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "applicationContextFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "ENUM"
      content: !<regular>
        value: "SERVLET"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void13"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.core.metrics.ApplicationStartup"
        fieldName: "DEFAULT"
      valueType: "org.springframework.core.metrics.ApplicationStartup"
      uuid: "applicationStartup"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void14"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ApplicationContextFactory"
                uuid: "applicationContextFactory"
              methodParameters:
              - name: "webApplicationType"
                value:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "SERVLET"
                  valueType: "org.springframework.boot.WebApplicationType"
                  uuid: "webApplicationType"
              methodName: "createEnvironment"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "? extends org.springframework.core.env.ConfigurableEnvironment"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void15"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "REAL"
      valueType: "org.springframework.aot.AotDetector"
      uuid: "AotDetector.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void16"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void17"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.DefaultBootstrapContext"
        parameters: []
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void18"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "NULL"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void19"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid143"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void20"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void21"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "springApplicationArguments"
      valueType: "java.lang.String"
      uuid: "uniqueUuid144"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultApplicationArguments"
      uuid: "defaultApplicationArguments"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void22"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "springBootBanner"
      valueType: "java.lang.String"
      uuid: "uniqueUuid145"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.Banner"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.SpringApplicationBannerPrinter"
            parameters:
            - name: "resourceLoader"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.core.io.ResourceLoader"
                uuid: "resourceLoader"
            - name: "fallbackBanner"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.Banner"
                uuid: "fieldBanner"
          valueType: "org.springframework.boot.SpringApplicationBannerPrinter"
          uuid: "springApplicationBannerPrinter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.EnvironmentConverter"
                  parameters:
                  - name: "classLoader"
                    value:
                      sapientType: "OBJECT"
                      content: !<static_method_return>
                        target: "java.lang.ClassLoader"
                        method: "getPlatformClassLoader"
                        methodParameters: []
                      valueType: "java.lang.ClassLoader"
                      uuid: "classLoader5"
                valueType: "org.springframework.boot.EnvironmentConverter"
                uuid: "environmentConverter"
                fixed: true
              methodParameters:
              - name: "environment"
                value:
                  sapientType: "OBJECT"
                  content: !<method_return_from_value>
                    target: "org.springframework.core.env.ConfigurableEnvironment"
                    localVariableValue:
                      sapientType: "MOCK"
                      valueType: "org.springframework.boot.ApplicationContextFactory"
                      uuid: "applicationContextFactory"
                    methodParameters:
                    - name: "webApplicationType"
                      value:
                        sapientType: "ENUM"
                        content: !<regular>
                          value: "SERVLET"
                        valueType: "org.springframework.boot.WebApplicationType"
                        uuid: "webApplicationType"
                    methodName: "createEnvironment"
                  valueType: "org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "configurableEnvironment"
              - name: "type"
                value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "? extends org.springframework.core.env.ConfigurableEnvironment"
                  valueType: "java.lang.Class"
                  genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "class"
              methodName: "convertEnvironmentIfNecessary"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment2"
        - name: "sourceClass"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            uuid: "uniqueUuid146"
            explicitCastNeeded: true
        - name: "out"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "java.lang.System"
              fieldName: "out"
            valueType: "java.io.PrintStream"
            uuid: "printStream"
        methodName: "print"
      valueType: "org.springframework.boot.Banner"
      uuid: "banner"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void23"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.beans.factory.config.BeanFactoryPostProcessor"
      uuid: "beanFactoryPostProcessor"
    - sapientType: "REAL"
      valueType: "org.springframework.aot.AotDetector"
      uuid: "AotDetector.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.Object"
      uuid: "set2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void24"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.Object"
      uuid: "set2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be empty"
      valueType: "java.lang.String"
      uuid: "uniqueUuid147"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void25"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Object[]"
      uuid: "objectArray2"
      collectionUuid: "set2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void26"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationShutdownHook"
        parameters: []
      valueType: "org.springframework.boot.SpringApplicationShutdownHook"
      uuid: "springApplicationShutdownHook"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void27"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void28"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration-days"
      valueType: "java.time.Duration"
      uuid: "duration"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "log2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.StartupInfoLogger"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            uuid: "uniqueUuid148"
            explicitCastNeeded: true
      valueType: "org.springframework.boot.StartupInfoLogger"
      uuid: "startupInfoLogger"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void29"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "log2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration2-days"
      valueType: "java.time.Duration"
      uuid: "duration2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void30"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration2-days"
      valueType: "java.time.Duration"
      uuid: "duration2"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getBeanNamesForTypeItem1"
            valueType: "java.lang.String"
            uuid: "string4"
      valueType: "java.lang.String[]"
      uuid: "stringArray2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.Runner"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.Runner"
      uuid: "uniqueUuid149"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.Runner"
      uuid: "object4"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanNamesForTypeItem1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.Runner"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.Runner"
      uuid: "uniqueUuid150"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
        fieldName: "INSTANCE"
      valueType: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
      uuid: "annotationAwareOrderComparator"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.util.Comparator"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<static_field_return>
            target: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
            fieldName: "INSTANCE"
          valueType: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
          uuid: "annotationAwareOrderComparator"
        methodParameters:
        - name: "sourceProvider"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "org.springframework.core.OrderComparator$OrderSourceProvider"
            uuid: "orderComparator.OrderSourceProvider"
        methodName: "withSourceProvider"
      valueType: "java.util.Comparator"
      genericValueType: "java.lang.Object"
      uuid: "comparator"
    - sapientType: "ANY"
      valueType: "org.springframework.core.OrderComparator$OrderSourceProvider"
      uuid: "orderComparator.OrderSourceProvider"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean8"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.ExitCodeExceptionMapper"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.ExitCodeExceptionMapper"
      uuid: "uniqueUuid151"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ExitCodeGenerators"
        parameters: []
      valueType: "org.springframework.boot.ExitCodeGenerators"
      uuid: "exitCodeGenerators"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void32"
      fixed: true
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.RuntimeException"
        parameters: []
      valueType: "java.lang.RuntimeException"
      uuid: "throwable"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "org.springframework.boot.ExitCodeExceptionMapper"
      uuid: "collection"
      collectionUuid: "map"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ExitCodeGenerators"
        parameters: []
      valueType: "org.springframework.boot.ExitCodeGenerators"
      uuid: "exitCodeGenerators"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int11"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void33"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.ExitCodeEvent"
      uuid: "exitCodeEvent"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringBootExceptionHandler"
      uuid: "springBootExceptionHandler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringBootExceptionHandler"
      uuid: "springBootExceptionHandler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void34"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int11"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void35"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.RuntimeException"
        parameters: []
      valueType: "java.lang.RuntimeException"
      uuid: "throwable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "SpringFactoriesLoader.ArgumentResolver.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ConfigurableApplicationContext"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "uniqueUuid152"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader6"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader5"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader6"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader5"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.SpringBootExceptionReporter"
      uuid: "list6"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.SpringBootExceptionReporter"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.SpringBootExceptionReporter"
      uuid: "uniqueUuid153"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver3"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void36"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationShutdownHook"
        parameters: []
      valueType: "org.springframework.boot.SpringApplicationShutdownHook"
      uuid: "springApplicationShutdownHook"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void37"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.RuntimeException"
        parameters: []
      valueType: "java.lang.RuntimeException"
      uuid: "throwable"
    branches:
    - lineNumber: 319
      expression: "this.registerShutdownHook"
      range: "(319,7)-(319,31)"
      evaluatedAs: true
    - lineNumber: 470
      expression: "hook != null"
      range: "(470,48)-(470,59)"
      evaluatedAs: false
      internalMethodName: "getRunListeners"
    - lineNumber: 471
      expression: "hookListener != null"
      range: "(471,7)-(471,26)"
      evaluatedAs: false
      internalMethodName: "getRunListeners"
    - lineNumber: 487
      expression: "this.environment != null"
      range: "(487,7)-(487,30)"
      evaluatedAs: false
      internalMethodName: "getOrCreateEnvironment"
    - lineNumber: 491
      expression: "environment == null"
      range: "(491,7)-(491,25)"
      evaluatedAs: false
      internalMethodName: "getOrCreateEnvironment"
    - lineNumber: 494
      expression: "environment != null"
      range: "(494,11)-(494,29)"
      evaluatedAs: true
      internalMethodName: "getOrCreateEnvironment"
    - lineNumber: 371
      expression: "!environment.containsProperty(\\\"spring.main.environment-prefix\\\
        \")"
      range: "(371,16)-(371,78)"
      evaluatedAs: true
      internalMethodName: "prepareEnvironment"
    - lineNumber: 374
      expression: "!this.isCustomEnvironment"
      range: "(374,7)-(374,31)"
      evaluatedAs: true
      internalMethodName: "prepareEnvironment"
    - lineNumber: 385
      expression: "environmentType == null"
      range: "(385,7)-(385,29)"
      evaluatedAs: false
      internalMethodName: "deduceEnvironmentClass"
    - lineNumber: 388
      expression: "environmentType == null"
      range: "(388,7)-(388,29)"
      evaluatedAs: false
      internalMethodName: "deduceEnvironmentClass"
    - lineNumber: 569
      expression: "this.bannerMode == Banner.Mode.OFF"
      range: "(569,7)-(569,40)"
      evaluatedAs: false
      internalMethodName: "printBanner"
    - lineNumber: 572
      expression: "this.resourceLoader != null"
      range: "(572,36)-(572,62)"
      evaluatedAs: true
      internalMethodName: "printBanner"
    - lineNumber: 575
      expression: "this.bannerMode == Mode.LOG"
      range: "(575,7)-(575,33)"
      evaluatedAs: false
      internalMethodName: "printBanner"
    - lineNumber: 436
      expression: "AotDetector.useGeneratedArtifacts()"
      range: "(436,7)-(436,41)"
      evaluatedAs: false
      internalMethodName: "addAotGeneratedInitializerIfNecessary"
    - lineNumber: 403
      expression: "this.logStartupInfo"
      range: "(403,7)-(403,25)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 404
      expression: "context.getParent() == null"
      range: "(404,19)-(404,45)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 410
      expression: "printedBanner != null"
      range: "(410,7)-(410,27)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 413
      expression: "beanFactory instanceof AbstractAutowireCapableBeanFactory autowireCapableBeanFactory"
      range: "(413,7)-(413,90)"
      evaluatedAs: false
      internalMethodName: "prepareContext"
    - lineNumber: 419
      expression: "this.lazyInitialization"
      range: "(419,7)-(419,29)"
      evaluatedAs: false
      internalMethodName: "prepareContext"
    - lineNumber: 422
      expression: "this.keepAlive"
      range: "(422,7)-(422,20)"
      evaluatedAs: false
      internalMethodName: "prepareContext"
    - lineNumber: 426
      expression: "!AotDetector.useGeneratedArtifacts()"
      range: "(426,7)-(426,42)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 453
      expression: "this.registerShutdownHook"
      range: "(453,7)-(453,31)"
      evaluatedAs: true
      internalMethodName: "refreshContext"
    - lineNumber: 337
      expression: "this.logStartupInfo"
      range: "(337,8)-(337,26)"
      evaluatedAs: true
    - lineNumber: 769
      expression: "for-each(beanNames)"
      range: "(769,26)-(769,34)"
      evaluatedAs: true
      internalMethodName: "callRunners"
    - lineNumber: 778
      expression: "beanFactory instanceof DefaultListableBeanFactory defaultListableBeanFactory"
      range: "(778,41)-(778,116)"
      evaluatedAs: false
      internalMethodName: "getOrderComparator"
    - lineNumber: 780
      expression: "dependencyComparator instanceof OrderComparator orderComparator"
      range: "(780,11)-(780,73)"
      evaluatedAs: false
      internalMethodName: "getOrderComparator"
    - lineNumber: 343
      expression: "catch-exception (Throwable)"
      range: "(343,3)-(343,21)"
      evaluatedAs: true
    - lineNumber: 803
      expression: "exception instanceof AbandonedRunException abandonedRunException"
      range: "(803,7)-(803,70)"
      evaluatedAs: false
      internalMethodName: "handleRunFailure"
    - lineNumber: 890
      expression: "context == null"
      range: "(890,7)-(890,21)"
      evaluatedAs: false
      internalMethodName: "getExitCodeFromMappedException"
    - lineNumber: 890
      expression: "!context.isActive()"
      range: "(890,26)-(890,44)"
      evaluatedAs: false
      internalMethodName: "getExitCodeFromMappedException"
    - lineNumber: 883
      expression: "exitCode == 0"
      range: "(883,7)-(883,19)"
      evaluatedAs: false
      internalMethodName: "getExitCodeFromException"
    - lineNumber: 870
      expression: "exitCode != 0"
      range: "(870,7)-(870,19)"
      evaluatedAs: true
      internalMethodName: "handleExitCode"
    - lineNumber: 871
      expression: "context != null"
      range: "(871,8)-(871,22)"
      evaluatedAs: true
      internalMethodName: "handleExitCode"
    - lineNumber: 875
      expression: "handler != null"
      range: "(875,8)-(875,22)"
      evaluatedAs: true
      internalMethodName: "handleExitCode"
    - lineNumber: 809
      expression: "listeners != null"
      range: "(809,9)-(809,25)"
      evaluatedAs: true
      internalMethodName: "handleRunFailure"
    - lineNumber: 840
      expression: "for-each(exceptionReporters)"
      range: "(840,48)-(840,65)"
      evaluatedAs: false
      internalMethodName: "reportFailure"
    - lineNumber: 850
      expression: "logger.isErrorEnabled()"
      range: "(850,7)-(850,29)"
      evaluatedAs: false
      internalMethodName: "reportFailure"
    - lineNumber: 815
      expression: "context != null"
      range: "(815,9)-(815,23)"
      evaluatedAs: true
      internalMethodName: "handleRunFailure"
    - lineNumber: 824
      expression: "exception instanceof RuntimeException runtimeException"
      range: "(824,11)-(824,64)"
      evaluatedAs: true
      internalMethodName: "handleRunFailure"
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Throwable"
  - pathId: "path17"
    testPathName: "runWhenReporterReportExceptionFailureAndContextIsNotNullAndExceptionNotInstanceOfRuntimeExceThrowsIllegalStateException"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "884CF05CBCCDDA63FADCF6C8130A0172"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "args"
      modelFingerprint: "62B8E965720EE46A7489315174A3A841"
      valueUuid: "args"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid154):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "484A493D8A9DE787059A9516C904C048"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "20006F76B7E4788E565F04F635D4A52D"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid155,argumentResolver:uniqueUuid156):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid157,argumentResolver:uniqueUuid158):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid159,argumentResolver:uniqueUuid160):list4"
    - type: "STATIC"
      name: "SpringApplication.Startup.class"
      modelFingerprint: "DA8622EB3506E174E0335AC27132B054"
      valueUuid: "SpringApplication.Startup.class"
      methodExercised:
        expression: "create():springApplication.Startup"
        staticAccess: true
    - type: "FIELD"
      name: "shutdownHook"
      modelFingerprint: "A0CD9DC1B1C93A40FEC7031737D9BE10"
      valueUuid: "springApplicationShutdownHook"
      methodExercised:
        expression: "enableShutdownHookAddition():void2"
    - type: "LOCAL_VARIABLE"
      name: "initializer"
      modelFingerprint: "78495708A547C9C6DC2151A7C67101AC"
      valueUuid: "bootstrapRegistryInitializer"
      methodExercised:
        expression: "initialize(registry:defaultBootstrapContext):void4"
    - type: "STATIC"
      name: "SpringFactoriesLoader.ArgumentResolver.class"
      modelFingerprint: "5F0034DA74D42417617FBE94CCB6AD81"
      valueUuid: "SpringFactoriesLoader.ArgumentResolver.class"
      methodExercised:
        expression: "of(type:uniqueUuid161,value:targetClassObject):springFactoriesLoader.ArgumentResolver"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "argumentResolver"
      modelFingerprint: "900146EE10B4914AE93AEF9C5995BCEE"
      valueUuid: "springFactoriesLoader.ArgumentResolver"
      methodExercised:
        expression: "and(type:uniqueUuid162,value:args):springFactoriesLoader.ArgumentResolver2"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "27BFD3AFF61EB16D6621CC8BB9BFE4B5"
      methodExercised:
        expression: "getClassLoader():classLoader4"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader4):springFactoriesLoader4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "C997EC8D4248E2F75F459758B43838D0"
      valueUuid: "springFactoriesLoader4"
      methodExercised:
        expression: "load(factoryType:uniqueUuid163,argumentResolver:springFactoriesLoader.ArgumentResolver2):list5"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "B030C484A6C44F4577E15609B1FF871D"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "starting(bootstrapContext:defaultBootstrapContext,mainApplicationClass:uniqueUuid164):void5"
    - type: "FIELD"
      name: "applicationContextFactory"
      modelFingerprint: "AAE3749474D33E28CB1EA24688048F40"
      valueUuid: "applicationContextFactory"
      methodExercised:
        expression: "createEnvironment(webApplicationType:webApplicationType):configurableEnvironment"
    - type: "LOCAL_VARIABLE"
      name: "applicationArguments"
      modelFingerprint: "029CA1B5E8067A0C5CE390F4A8056BDF"
      valueUuid: "defaultApplicationArguments"
      methodExercised:
        expression: "getSourceArgs():stringArray"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "2EE3446964AC96F91F5C341F4414D1DD"
      methodExercised:
        expression: "configureEnvironment(environment:configurableEnvironment,args:stringArray):void6"
    - type: "STATIC"
      name: "ConfigurationPropertySources.class"
      modelFingerprint: "3FAEEF9F2CBB47AEF5F9A23F72070744"
      valueUuid: "ConfigurationPropertySources.class"
      methodExercised:
        expression: "attach(environment:configurableEnvironment):void7"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "836CFDF85B7A0B5847F32216C1965ED8"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "environmentPrepared(bootstrapContext:defaultBootstrapContext,environment:configurableEnvironment):void8"
    - type: "STATIC"
      name: "DefaultPropertiesPropertySource.class"
      modelFingerprint: "7965CCCD0BE2F60E5E5801A757EA9C8F"
      valueUuid: "DefaultPropertiesPropertySource.class"
      methodExercised:
        expression: "moveToEnd(environment:configurableEnvironment):void9"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "4205AC5FE838825C4939D5574A243BA4"
      valueUuid: "configurableEnvironment"
      methodExercised:
        expression: "containsProperty(key:uniqueUuid165):boolean1"
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "2A737F0AED0B795580225C9A5C41679A"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "state(expression:uniqueUuid166,message:uniqueUuid167):void10"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "6189278F2A1A0FC307E837BECEE2E38C"
      methodExercised:
        expression: "bindToSpringApplication(environment:configurableEnvironment):void11"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "27BFD3AFF61EB16D6621CC8BB9BFE4B5"
      methodExercised:
        expression: "getClassLoader():classLoader5"
    - type: "FIELD"
      name: "applicationContextFactory"
      modelFingerprint: "80B48948E15FB4650F3050A0DD7937BC"
      valueUuid: "applicationContextFactory"
      methodExercised:
        expression: "getEnvironmentType(webApplicationType:webApplicationType):class"
    - type: "LOCAL_VARIABLE"
      name: "environmentConverter"
      modelFingerprint: "91569ED47F912F3F8407161E878F33F2"
      valueUuid: "environmentConverter"
      methodExercised:
        expression: "convertEnvironmentIfNecessary(environment:configurableEnvironment,type:class):configurableEnvironment2"
    - type: "STATIC"
      name: "ConfigurationPropertySources.class"
      modelFingerprint: "4B59E43BE8FA69755C71C95BC954FA01"
      valueUuid: "ConfigurationPropertySources.class"
      methodExercised:
        expression: "attach(environment:configurableEnvironment2):void12"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "bannerPrinter"
      modelFingerprint: "C4563B6CF8B99795A3DE160F9D4746E9"
      valueUuid: "springApplicationBannerPrinter"
      methodExercised:
        expression: "print(environment:configurableEnvironment2,sourceClass:uniqueUuid168,out:printStream):banner"
    - type: "FIELD"
      name: "applicationContextFactory"
      modelFingerprint: "6306AE1AF9D90401F32F2E191467FC85"
      valueUuid: "applicationContextFactory"
      methodExercised:
        expression: "create(webApplicationType:webApplicationType):configurableApplicationContext"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "C4457CBF6543DA61B3CC571D7855BC05"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "setApplicationStartup(applicationStartup:applicationStartup):void13"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "B3ACC9EA65FC960026B912BEA9928FBB"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "setEnvironment(environment:configurableEnvironment2):void14"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "F7247F20B4DB91E482D564DC0E3EE670"
      methodExercised:
        expression: "postProcessApplicationContext(context:configurableApplicationContext):void15"
    - type: "STATIC"
      name: "AotDetector.class.real"
      modelFingerprint: "A651F35C9CB1BB4329EA23C459C95680"
      valueUuid: "AotDetector.class.real"
      methodExercised:
        expression: "useGeneratedArtifacts():boolean2"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "2629F473285A8D2B3BDA80841BE1B13C"
      methodExercised:
        expression: "applyInitializers(context:configurableApplicationContext):void16"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "F25700EBA48DFBE78B5458FCD3EB4646"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "contextPrepared(context:configurableApplicationContext):void17"
    - type: "LOCAL_VARIABLE"
      name: "bootstrapContext"
      modelFingerprint: "909D947F9D1DDC6DDEA8500941736C94"
      valueUuid: "defaultBootstrapContext"
      methodExercised:
        expression: "close(applicationContext:configurableApplicationContext):void18"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "5E3904425938E13844EB71188213737A"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "getParent():applicationContext"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "AC62DBB448DDE3961AAF97490A0B542D"
      methodExercised:
        expression: "logStartupInfo(isRoot:uniqueUuid170):void19"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "7204D97E17BC4435BDF63B535ED64B97"
      methodExercised:
        expression: "logStartupProfileInfo(context:configurableApplicationContext):void20"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "6A01AAC3461FC3A19CF28FB5CC4FB9E4"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "7107C791919372E064D179B76AC9C5E9"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "registerSingleton(beanName:uniqueUuid171,singletonObject:defaultApplicationArguments):void21"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "F3AD204625DA62ACD4B21D745E5E042C"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "registerSingleton(beanName:uniqueUuid172,singletonObject:banner):void22"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "69034248F39E1300FEF9D04C0504E01A"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "addBeanFactoryPostProcessor(postProcessor:beanFactoryPostProcessor):void23"
    - type: "STATIC"
      name: "AotDetector.class.real"
      modelFingerprint: "A651F35C9CB1BB4329EA23C459C95680"
      valueUuid: "AotDetector.class.real"
      methodExercised:
        expression: "useGeneratedArtifacts():boolean4"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "504C2B18FD5DE35DA01916EC347AB7B1"
      methodExercised:
        expression: "getAllSources():set2"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A2E059860C5C45B44F0B7F9AA4D95BDB"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notEmpty(collection:set2,message:uniqueUuid174):void24"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "91ACBEFD431AA6FB4341C4C76B033E1D"
      methodExercised:
        expression: "load(context:configurableApplicationContext,sources:objectArray2):void25"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "9DAE3D234F2CD76AACDE8442BC6EE4A6"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "contextLoaded(context:configurableApplicationContext):void26"
    - type: "FIELD"
      name: "shutdownHook"
      modelFingerprint: "955744B9BBBD449D14979830C226B3DB"
      valueUuid: "springApplicationShutdownHook"
      methodExercised:
        expression: "registerApplicationContext(context:configurableApplicationContext):void27"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "01A9466B1E33218E3C0D5F4F6DD218E7"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "refresh():void28"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      name: "startup"
      modelFingerprint: "9514A429A770044AEBDFB50062B30B4D"
      valueUuid: "springApplication.Startup"
      methodExercised:
        expression: "started():duration"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "FE5D2BC90EC0B24D7B85FD4D1CDFF78B"
      methodExercised:
        expression: "getApplicationLog():log2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "31F4778FC7271F5256CA0997FCC61AFA"
      valueUuid: "startupInfoLogger"
      methodExercised:
        expression: "logStarted(applicationLog:log2,startup:springApplication.Startup):void29"
    - type: "LOCAL_VARIABLE"
      name: "startup"
      modelFingerprint: "8632254D8D53E67F9906077923095FAF"
      valueUuid: "springApplication.Startup"
      methodExercised:
        expression: "timeTakenToStarted():duration2"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "676CA2E0A33FFC3648204E1B59D55045"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "started(context:configurableApplicationContext,timeTaken:duration2):void30"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "6A01AAC3461FC3A19CF28FB5CC4FB9E4"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory2"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "8A57C6E79097BE70207C443A51A26E7F"
      valueUuid: "configurableListableBeanFactory2"
      methodExercised:
        expression: "getBeanNamesForType(type:uniqueUuid176):stringArray2"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "049356A3DCD2541F910927E5E31BCA20"
      valueUuid: "configurableListableBeanFactory2"
      methodExercised:
        expression: "getBean(name:string4,requiredType:uniqueUuid177):object4"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "9FB5A4AC1406067842215F6E568A3B04"
      valueUuid: "annotationAwareOrderComparator"
      methodExercised:
        expression: "withSourceProvider(sourceProvider:orderComparator.OrderSourceProvider):comparator"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "DA96E3F9148FB8FFC04C9940573B9AF4"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "isRunning():boolean7"
    - type: "LOCAL_VARIABLE"
      name: "startup"
      modelFingerprint: "617185A19112E6053002DE8AAB9AA7F5"
      valueUuid: "springApplication.Startup"
      methodExercised:
        expression: "ready():duration3"
        privateAccess: true
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "71FA1946CACE39932158601FC2224A60"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "ready(context:configurableApplicationContext,timeTaken:duration3):void32"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "9CED159BA79A476605AD8BA424104DFA"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "isActive():boolean9"
    - type: "STATIC"
      name: "SpringFactoriesLoader.ArgumentResolver.class"
      modelFingerprint: "70429A3A1E9B472C8BD20C617647BDFE"
      valueUuid: "SpringFactoriesLoader.ArgumentResolver.class"
      methodExercised:
        expression: "of(type:uniqueUuid178,value:configurableApplicationContext):springFactoriesLoader.ArgumentResolver3"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "27BFD3AFF61EB16D6621CC8BB9BFE4B5"
      methodExercised:
        expression: "getClassLoader():classLoader6"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader6):springFactoriesLoader5"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "AA81551829B9141514B75BF9EF42CBBD"
      valueUuid: "springFactoriesLoader5"
      methodExercised:
        expression: "load(factoryType:uniqueUuid179,argumentResolver:springFactoriesLoader.ArgumentResolver3):list6"
    - type: "LOCAL_VARIABLE"
      name: "reporter"
      modelFingerprint: "53EDADBAF6CE400D6584AFF1FE32508B"
      valueUuid: "object5"
      methodExercised:
        expression: "reportException(failure:throwable):boolean11"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "25160C0B68B296E325C49D537DB671D7"
      methodExercised:
        expression: "registerLoggedException(exception:throwable):void33"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "C2E3D1F0AC456BC4B0896B03B086FB0F"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "close():void34"
    - type: "FIELD"
      name: "shutdownHook"
      modelFingerprint: "D5B0EC1BADB2B19C635663B4FCF72382"
      valueUuid: "springApplicationShutdownHook"
      methodExercised:
        expression: "deregisterFailedApplicationContext(applicationContext:configurableApplicationContext):void35"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "9CFF50C0410C3DD68B197653731C9575"
      valueUuid: "illegalStateException"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
        propertiesMap:
          applicationContextFactory:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ApplicationContextFactory"
            uuid: "applicationContextFactory"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid154"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "bootstrapRegistryInitializer"
          collectionUuid: "arrayList"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid155"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid156"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid157"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid158"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid159"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid160"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "SpringApplication.Startup.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationShutdownHook"
        parameters: []
      valueType: "org.springframework.boot.SpringApplicationShutdownHook"
      uuid: "springApplicationShutdownHook"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "bootstrapRegistryInitializer"
      collectionUuid: "arrayList"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "SpringFactoriesLoader.ArgumentResolver.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.SpringApplication"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.SpringApplication"
      uuid: "uniqueUuid161"
      fixed: true
    - sapientType: "THIS"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String[]"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.String[]"
      uuid: "uniqueUuid162"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader4"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader4"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader4"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader4"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.SpringApplicationRunListener"
      uuid: "list5"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.SpringApplicationRunListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.SpringApplicationRunListener"
      uuid: "uniqueUuid163"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      uuid: "uniqueUuid164"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "applicationContextFactory"
    - sapientType: "NULL"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.DefaultApplicationArguments"
        parameters:
        - name: "args"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "args"
      valueType: "org.springframework.boot.DefaultApplicationArguments"
      uuid: "defaultApplicationArguments"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "ConfigurationPropertySources.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.DefaultPropertiesPropertySource"
      uuid: "DefaultPropertiesPropertySource.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "NULL"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "spring.main.environment-prefix"
      valueType: "java.lang.String"
      uuid: "uniqueUuid165"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid166"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Environment prefix cannot be set via properties."
      valueType: "java.lang.String"
      uuid: "uniqueUuid167"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void11"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "applicationContextFactory"
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
      uuid: "class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.EnvironmentConverter"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "classLoader5"
      valueType: "org.springframework.boot.EnvironmentConverter"
      uuid: "environmentConverter"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "NULL"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "ConfigurationPropertySources.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void12"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationBannerPrinter"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "fallbackBanner"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.Banner"
            uuid: "fieldBanner"
      valueType: "org.springframework.boot.SpringApplicationBannerPrinter"
      uuid: "springApplicationBannerPrinter"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.Banner"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.SpringApplicationBannerPrinter"
            parameters:
            - name: "resourceLoader"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.core.io.ResourceLoader"
                uuid: "resourceLoader"
            - name: "fallbackBanner"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.Banner"
                uuid: "fieldBanner"
          valueType: "org.springframework.boot.SpringApplicationBannerPrinter"
          uuid: "springApplicationBannerPrinter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.EnvironmentConverter"
                  parameters:
                  - name: "classLoader"
                    value:
                      sapientType: "OBJECT"
                      content: !<static_method_return>
                        target: "java.lang.ClassLoader"
                        method: "getPlatformClassLoader"
                        methodParameters: []
                      valueType: "java.lang.ClassLoader"
                      uuid: "classLoader5"
                valueType: "org.springframework.boot.EnvironmentConverter"
                uuid: "environmentConverter"
                fixed: true
              methodParameters:
              - name: "environment"
                value:
                  sapientType: "NULL"
                  valueType: "org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "configurableEnvironment"
              - name: "type"
                value:
                  sapientType: "NULL"
                  valueType: "java.lang.Class"
                  genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "class"
              methodName: "convertEnvironmentIfNecessary"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment2"
        - name: "sourceClass"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            uuid: "uniqueUuid169"
            explicitCastNeeded: true
        - name: "out"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "java.lang.System"
              fieldName: "out"
            valueType: "java.io.PrintStream"
            uuid: "printStream"
        methodName: "print"
      valueType: "org.springframework.boot.Banner"
      uuid: "banner"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      uuid: "uniqueUuid168"
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "java.lang.System"
        fieldName: "out"
      valueType: "java.io.PrintStream"
      uuid: "printStream"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "applicationContextFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void13"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.core.metrics.ApplicationStartup"
        fieldName: "DEFAULT"
      valueType: "org.springframework.core.metrics.ApplicationStartup"
      uuid: "applicationStartup"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void14"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void15"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "REAL"
      valueType: "org.springframework.aot.AotDetector"
      uuid: "AotDetector.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void16"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void17"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.DefaultBootstrapContext"
        parameters: []
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void18"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "NULL"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void19"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid170"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void20"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void21"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "springApplicationArguments"
      valueType: "java.lang.String"
      uuid: "uniqueUuid171"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultApplicationArguments"
      uuid: "defaultApplicationArguments"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void22"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "springBootBanner"
      valueType: "java.lang.String"
      uuid: "uniqueUuid172"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.Banner"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.SpringApplicationBannerPrinter"
            parameters:
            - name: "resourceLoader"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.core.io.ResourceLoader"
                uuid: "resourceLoader"
            - name: "fallbackBanner"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.Banner"
                uuid: "fieldBanner"
          valueType: "org.springframework.boot.SpringApplicationBannerPrinter"
          uuid: "springApplicationBannerPrinter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.EnvironmentConverter"
                  parameters:
                  - name: "classLoader"
                    value:
                      sapientType: "OBJECT"
                      content: !<static_method_return>
                        target: "java.lang.ClassLoader"
                        method: "getPlatformClassLoader"
                        methodParameters: []
                      valueType: "java.lang.ClassLoader"
                      uuid: "classLoader5"
                valueType: "org.springframework.boot.EnvironmentConverter"
                uuid: "environmentConverter"
                fixed: true
              methodParameters:
              - name: "environment"
                value:
                  sapientType: "NULL"
                  valueType: "org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "configurableEnvironment"
              - name: "type"
                value:
                  sapientType: "NULL"
                  valueType: "java.lang.Class"
                  genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "class"
              methodName: "convertEnvironmentIfNecessary"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment2"
        - name: "sourceClass"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            uuid: "uniqueUuid173"
            explicitCastNeeded: true
        - name: "out"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "java.lang.System"
              fieldName: "out"
            valueType: "java.io.PrintStream"
            uuid: "printStream"
        methodName: "print"
      valueType: "org.springframework.boot.Banner"
      uuid: "banner"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void23"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.beans.factory.config.BeanFactoryPostProcessor"
      uuid: "beanFactoryPostProcessor"
    - sapientType: "REAL"
      valueType: "org.springframework.aot.AotDetector"
      uuid: "AotDetector.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.Object"
      uuid: "set2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void24"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.Object"
      uuid: "set2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be empty"
      valueType: "java.lang.String"
      uuid: "uniqueUuid174"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void25"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Object[]"
      uuid: "objectArray2"
      collectionUuid: "set2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void26"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationShutdownHook"
        parameters: []
      valueType: "org.springframework.boot.SpringApplicationShutdownHook"
      uuid: "springApplicationShutdownHook"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void27"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void28"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration-days"
      valueType: "java.time.Duration"
      uuid: "duration"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "log2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.StartupInfoLogger"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            uuid: "uniqueUuid175"
            explicitCastNeeded: true
      valueType: "org.springframework.boot.StartupInfoLogger"
      uuid: "startupInfoLogger"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void29"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "log2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration2-days"
      valueType: "java.time.Duration"
      uuid: "duration2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void30"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration2-days"
      valueType: "java.time.Duration"
      uuid: "duration2"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getBeanNamesForTypeItem1"
            valueType: "java.lang.String"
            uuid: "string4"
      valueType: "java.lang.String[]"
      uuid: "stringArray2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.Runner"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.Runner"
      uuid: "uniqueUuid176"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.Runner"
      uuid: "object4"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanNamesForTypeItem1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.Runner"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.Runner"
      uuid: "uniqueUuid177"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
        fieldName: "INSTANCE"
      valueType: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
      uuid: "annotationAwareOrderComparator"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.util.Comparator"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<static_field_return>
            target: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
            fieldName: "INSTANCE"
          valueType: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
          uuid: "annotationAwareOrderComparator"
        methodParameters:
        - name: "sourceProvider"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "org.springframework.core.OrderComparator$OrderSourceProvider"
            uuid: "orderComparator.OrderSourceProvider"
        methodName: "withSourceProvider"
      valueType: "java.util.Comparator"
      genericValueType: "java.lang.Object"
      uuid: "comparator"
    - sapientType: "ANY"
      valueType: "org.springframework.core.OrderComparator$OrderSourceProvider"
      uuid: "orderComparator.OrderSourceProvider"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration3-days"
      valueType: "java.time.Duration"
      uuid: "duration3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void32"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration3-days"
      valueType: "java.time.Duration"
      uuid: "duration3"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean9"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "SpringFactoriesLoader.ArgumentResolver.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ConfigurableApplicationContext"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "uniqueUuid178"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader6"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader5"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader6"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader5"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.SpringBootExceptionReporter"
          uuid: "object5"
          collectionUuid: "list6"
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.SpringBootExceptionReporter"
      uuid: "list6"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.SpringBootExceptionReporter"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.SpringBootExceptionReporter"
      uuid: "uniqueUuid179"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringBootExceptionReporter"
      uuid: "object5"
      collectionUuid: "list6"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean11"
    - sapientType: "NULL"
      valueType: "java.lang.Throwable"
      uuid: "throwable"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void33"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.lang.Throwable"
      uuid: "throwable"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void34"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationShutdownHook"
        parameters: []
      valueType: "org.springframework.boot.SpringApplicationShutdownHook"
      uuid: "springApplicationShutdownHook"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void35"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "cause"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Throwable"
            uuid: "throwable"
            fixed: true
      valueType: "java.lang.IllegalStateException"
      uuid: "illegalStateException"
      fixed: true
    branches:
    - lineNumber: 319
      expression: "this.registerShutdownHook"
      range: "(319,7)-(319,31)"
      evaluatedAs: true
    - lineNumber: 470
      expression: "hook != null"
      range: "(470,48)-(470,59)"
      evaluatedAs: false
      internalMethodName: "getRunListeners"
    - lineNumber: 471
      expression: "hookListener != null"
      range: "(471,7)-(471,26)"
      evaluatedAs: false
      internalMethodName: "getRunListeners"
    - lineNumber: 487
      expression: "this.environment != null"
      range: "(487,7)-(487,30)"
      evaluatedAs: false
      internalMethodName: "getOrCreateEnvironment"
    - lineNumber: 491
      expression: "environment == null"
      range: "(491,7)-(491,25)"
      evaluatedAs: false
      internalMethodName: "getOrCreateEnvironment"
    - lineNumber: 494
      expression: "environment != null"
      range: "(494,11)-(494,29)"
      evaluatedAs: true
      internalMethodName: "getOrCreateEnvironment"
    - lineNumber: 371
      expression: "!environment.containsProperty(\\\"spring.main.environment-prefix\\\
        \")"
      range: "(371,16)-(371,78)"
      evaluatedAs: true
      internalMethodName: "prepareEnvironment"
    - lineNumber: 374
      expression: "!this.isCustomEnvironment"
      range: "(374,7)-(374,31)"
      evaluatedAs: true
      internalMethodName: "prepareEnvironment"
    - lineNumber: 385
      expression: "environmentType == null"
      range: "(385,7)-(385,29)"
      evaluatedAs: false
      internalMethodName: "deduceEnvironmentClass"
    - lineNumber: 388
      expression: "environmentType == null"
      range: "(388,7)-(388,29)"
      evaluatedAs: false
      internalMethodName: "deduceEnvironmentClass"
    - lineNumber: 569
      expression: "this.bannerMode == Banner.Mode.OFF"
      range: "(569,7)-(569,40)"
      evaluatedAs: false
      internalMethodName: "printBanner"
    - lineNumber: 572
      expression: "this.resourceLoader != null"
      range: "(572,36)-(572,62)"
      evaluatedAs: true
      internalMethodName: "printBanner"
    - lineNumber: 575
      expression: "this.bannerMode == Mode.LOG"
      range: "(575,7)-(575,33)"
      evaluatedAs: false
      internalMethodName: "printBanner"
    - lineNumber: 436
      expression: "AotDetector.useGeneratedArtifacts()"
      range: "(436,7)-(436,41)"
      evaluatedAs: false
      internalMethodName: "addAotGeneratedInitializerIfNecessary"
    - lineNumber: 403
      expression: "this.logStartupInfo"
      range: "(403,7)-(403,25)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 404
      expression: "context.getParent() == null"
      range: "(404,19)-(404,45)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 410
      expression: "printedBanner != null"
      range: "(410,7)-(410,27)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 413
      expression: "beanFactory instanceof AbstractAutowireCapableBeanFactory autowireCapableBeanFactory"
      range: "(413,7)-(413,90)"
      evaluatedAs: false
      internalMethodName: "prepareContext"
    - lineNumber: 419
      expression: "this.lazyInitialization"
      range: "(419,7)-(419,29)"
      evaluatedAs: false
      internalMethodName: "prepareContext"
    - lineNumber: 422
      expression: "this.keepAlive"
      range: "(422,7)-(422,20)"
      evaluatedAs: false
      internalMethodName: "prepareContext"
    - lineNumber: 426
      expression: "!AotDetector.useGeneratedArtifacts()"
      range: "(426,7)-(426,42)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 453
      expression: "this.registerShutdownHook"
      range: "(453,7)-(453,31)"
      evaluatedAs: true
      internalMethodName: "refreshContext"
    - lineNumber: 337
      expression: "this.logStartupInfo"
      range: "(337,8)-(337,26)"
      evaluatedAs: true
    - lineNumber: 769
      expression: "for-each(beanNames)"
      range: "(769,26)-(769,34)"
      evaluatedAs: true
      internalMethodName: "callRunners"
    - lineNumber: 778
      expression: "beanFactory instanceof DefaultListableBeanFactory defaultListableBeanFactory"
      range: "(778,41)-(778,116)"
      evaluatedAs: false
      internalMethodName: "getOrderComparator"
    - lineNumber: 780
      expression: "dependencyComparator instanceof OrderComparator orderComparator"
      range: "(780,11)-(780,73)"
      evaluatedAs: false
      internalMethodName: "getOrderComparator"
    - lineNumber: 347
      expression: "context.isRunning()"
      range: "(347,8)-(347,26)"
      evaluatedAs: true
    - lineNumber: 351
      expression: "catch-exception (Throwable)"
      range: "(351,3)-(351,21)"
      evaluatedAs: true
    - lineNumber: 803
      expression: "exception instanceof AbandonedRunException abandonedRunException"
      range: "(803,7)-(803,70)"
      evaluatedAs: false
      internalMethodName: "handleRunFailure"
    - lineNumber: 890
      expression: "context == null"
      range: "(890,7)-(890,21)"
      evaluatedAs: false
      internalMethodName: "getExitCodeFromMappedException"
    - lineNumber: 890
      expression: "!context.isActive()"
      range: "(890,26)-(890,44)"
      evaluatedAs: true
      internalMethodName: "getExitCodeFromMappedException"
    - lineNumber: 883
      expression: "exitCode == 0"
      range: "(883,7)-(883,19)"
      evaluatedAs: true
      internalMethodName: "getExitCodeFromException"
    - lineNumber: 900
      expression: "exception == null"
      range: "(900,7)-(900,23)"
      evaluatedAs: true
      internalMethodName: "getExitCodeFromExitCodeGeneratorException"
    - lineNumber: 870
      expression: "exitCode != 0"
      range: "(870,7)-(870,19)"
      evaluatedAs: false
      internalMethodName: "handleExitCode"
    - lineNumber: 809
      expression: "listeners != null"
      range: "(809,9)-(809,25)"
      evaluatedAs: false
      internalMethodName: "handleRunFailure"
    - lineNumber: 840
      expression: "for-each(exceptionReporters)"
      range: "(840,48)-(840,65)"
      evaluatedAs: true
      internalMethodName: "reportFailure"
    - lineNumber: 841
      expression: "reporter.reportException(failure)"
      range: "(841,9)-(841,41)"
      evaluatedAs: true
      internalMethodName: "reportFailure"
    - lineNumber: 815
      expression: "context != null"
      range: "(815,9)-(815,23)"
      evaluatedAs: true
      internalMethodName: "handleRunFailure"
    - lineNumber: 824
      expression: "exception instanceof RuntimeException runtimeException"
      range: "(824,11)-(824,64)"
      evaluatedAs: false
      internalMethodName: "handleRunFailure"
    catchBlockExercised:
      idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Throwable"
  - pathId: "path15"
    testPathName: "runWhenLoggerNotIsErrorEnabledAndContextIsNotNullAndExceptionNotInstanceOfRuntimeExceptionThrowsIllegalStateException"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "873F97B73052B568E8F6943E32FB27B4"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "3D00B86BF6898643756CD23F93FAAB38"
      valueUuid: "target"
    - type: "INPUT"
      name: "args"
      modelFingerprint: "62B8E965720EE46A7489315174A3A841"
      valueUuid: "args"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid180):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "E9AF26A44A758F46AEA655FC22B60195"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CF95A31B3D10A33864B1EBA0157B9CA4"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "20006F76B7E4788E565F04F635D4A52D"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid181,argumentResolver:uniqueUuid182):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CF95A31B3D10A33864B1EBA0157B9CA4"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid183,argumentResolver:uniqueUuid184):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CF95A31B3D10A33864B1EBA0157B9CA4"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid185,argumentResolver:uniqueUuid186):list4"
    - type: "STATIC"
      name: "SpringApplication.Startup.class"
      modelFingerprint: "DA8622EB3506E174E0335AC27132B054"
      valueUuid: "SpringApplication.Startup.class"
      methodExercised:
        expression: "create():springApplication.Startup"
        staticAccess: true
    - type: "FIELD"
      name: "shutdownHook"
      modelFingerprint: "A0CD9DC1B1C93A40FEC7031737D9BE10"
      valueUuid: "springApplicationShutdownHook"
      methodExercised:
        expression: "enableShutdownHookAddition():void2"
    - type: "LOCAL_VARIABLE"
      name: "initializer"
      modelFingerprint: "78495708A547C9C6DC2151A7C67101AC"
      valueUuid: "bootstrapRegistryInitializer"
      methodExercised:
        expression: "initialize(registry:defaultBootstrapContext):void4"
    - type: "STATIC"
      name: "SpringFactoriesLoader.ArgumentResolver.class"
      modelFingerprint: "5F0034DA74D42417617FBE94CCB6AD81"
      valueUuid: "SpringFactoriesLoader.ArgumentResolver.class"
      methodExercised:
        expression: "of(type:uniqueUuid187,value:targetClassObject):springFactoriesLoader.ArgumentResolver"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "argumentResolver"
      modelFingerprint: "900146EE10B4914AE93AEF9C5995BCEE"
      valueUuid: "springFactoriesLoader.ArgumentResolver"
      methodExercised:
        expression: "and(type:uniqueUuid188,value:args):springFactoriesLoader.ArgumentResolver2"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "27BFD3AFF61EB16D6621CC8BB9BFE4B5"
      methodExercised:
        expression: "getClassLoader():classLoader4"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader4):springFactoriesLoader4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "C997EC8D4248E2F75F459758B43838D0"
      valueUuid: "springFactoriesLoader4"
      methodExercised:
        expression: "load(factoryType:uniqueUuid189,argumentResolver:springFactoriesLoader.ArgumentResolver2):list5"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "B030C484A6C44F4577E15609B1FF871D"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "starting(bootstrapContext:defaultBootstrapContext,mainApplicationClass:uniqueUuid190):void5"
    - type: "FIELD"
      name: "applicationContextFactory"
      modelFingerprint: "25377C2471D793231A76A9AB6031E41D"
      valueUuid: "applicationContextFactory"
      methodExercised:
        expression: "createEnvironment(webApplicationType:webApplicationType):configurableEnvironment"
    - type: "LOCAL_VARIABLE"
      name: "applicationArguments"
      modelFingerprint: "029CA1B5E8067A0C5CE390F4A8056BDF"
      valueUuid: "defaultApplicationArguments"
      methodExercised:
        expression: "getSourceArgs():stringArray"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "9AE315BA684DCD841054D9F789B4F9C8"
      methodExercised:
        expression: "configureEnvironment(environment:configurableEnvironment,args:stringArray):void6"
    - type: "STATIC"
      name: "ConfigurationPropertySources.class"
      modelFingerprint: "198AC93CDFAADDE86ED9A9E49385E22B"
      valueUuid: "ConfigurationPropertySources.class"
      methodExercised:
        expression: "attach(environment:configurableEnvironment):void7"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "407EE1C198658832C82611E6341DB4C3"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "environmentPrepared(bootstrapContext:defaultBootstrapContext,environment:configurableEnvironment):void8"
    - type: "STATIC"
      name: "DefaultPropertiesPropertySource.class"
      modelFingerprint: "BD26AEAB0A6DCF2FBEC9D13E6DCCF18D"
      valueUuid: "DefaultPropertiesPropertySource.class"
      methodExercised:
        expression: "moveToEnd(environment:configurableEnvironment):void9"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "ED6C6F1CB47F3B2AD213B1B75254EE80"
      valueUuid: "configurableEnvironment"
      methodExercised:
        expression: "containsProperty(key:uniqueUuid191):boolean1"
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "2A737F0AED0B795580225C9A5C41679A"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "state(expression:uniqueUuid192,message:uniqueUuid193):void10"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "B13CEBE9A8F1B2788B7AB42A3097A2C5"
      methodExercised:
        expression: "bindToSpringApplication(environment:configurableEnvironment):void11"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "27BFD3AFF61EB16D6621CC8BB9BFE4B5"
      methodExercised:
        expression: "getClassLoader():classLoader5"
    - type: "FIELD"
      name: "applicationContextFactory"
      modelFingerprint: "E66E002C0664721A8E15A73F90157A41"
      valueUuid: "applicationContextFactory"
      methodExercised:
        expression: "getEnvironmentType(webApplicationType:webApplicationType):class"
    - type: "LOCAL_VARIABLE"
      name: "environmentConverter"
      modelFingerprint: "343C8C898CBFF5B474786F8CF0AAD484"
      valueUuid: "environmentConverter"
      methodExercised:
        expression: "convertEnvironmentIfNecessary(environment:configurableEnvironment,type:class):configurableEnvironment2"
    - type: "STATIC"
      name: "ConfigurationPropertySources.class"
      modelFingerprint: "EACBD1DB13877D4CE7F99FB1A2712485"
      valueUuid: "ConfigurationPropertySources.class"
      methodExercised:
        expression: "attach(environment:configurableEnvironment2):void12"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "bannerPrinter"
      modelFingerprint: "7123E4118091D08EBA8DB9E9BE47BF8C"
      valueUuid: "springApplicationBannerPrinter"
      methodExercised:
        expression: "print(environment:configurableEnvironment2,sourceClass:uniqueUuid194,out:printStream):banner"
    - type: "FIELD"
      name: "applicationContextFactory"
      modelFingerprint: "EEC42AEF38C02991C940B2D3733A5914"
      valueUuid: "applicationContextFactory"
      methodExercised:
        expression: "create(webApplicationType:webApplicationType):configurableApplicationContext"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "C4457CBF6543DA61B3CC571D7855BC05"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "setApplicationStartup(applicationStartup:applicationStartup):void13"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "5D002C96109647C03179CDE3D65E6842"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "setEnvironment(environment:configurableEnvironment2):void14"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "F7247F20B4DB91E482D564DC0E3EE670"
      methodExercised:
        expression: "postProcessApplicationContext(context:configurableApplicationContext):void15"
    - type: "STATIC"
      name: "AotDetector.class.real"
      modelFingerprint: "A651F35C9CB1BB4329EA23C459C95680"
      valueUuid: "AotDetector.class.real"
      methodExercised:
        expression: "useGeneratedArtifacts():boolean2"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "2629F473285A8D2B3BDA80841BE1B13C"
      methodExercised:
        expression: "applyInitializers(context:configurableApplicationContext):void16"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "F25700EBA48DFBE78B5458FCD3EB4646"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "contextPrepared(context:configurableApplicationContext):void17"
    - type: "LOCAL_VARIABLE"
      name: "bootstrapContext"
      modelFingerprint: "909D947F9D1DDC6DDEA8500941736C94"
      valueUuid: "defaultBootstrapContext"
      methodExercised:
        expression: "close(applicationContext:configurableApplicationContext):void18"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "A7958E929D687DDAF775F8E7F326431C"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "getParent():applicationContext"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "70B029E69BC37396007D6557BFF5988C"
      methodExercised:
        expression: "logStartupInfo(isRoot:uniqueUuid196):void19"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "7204D97E17BC4435BDF63B535ED64B97"
      methodExercised:
        expression: "logStartupProfileInfo(context:configurableApplicationContext):void20"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "6A01AAC3461FC3A19CF28FB5CC4FB9E4"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "7107C791919372E064D179B76AC9C5E9"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "registerSingleton(beanName:uniqueUuid197,singletonObject:defaultApplicationArguments):void21"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "3BC43CAFE73A20DFAA41410EFEFDD405"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "registerSingleton(beanName:uniqueUuid198,singletonObject:banner):void22"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "69034248F39E1300FEF9D04C0504E01A"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "addBeanFactoryPostProcessor(postProcessor:beanFactoryPostProcessor):void23"
    - type: "STATIC"
      name: "AotDetector.class.real"
      modelFingerprint: "A651F35C9CB1BB4329EA23C459C95680"
      valueUuid: "AotDetector.class.real"
      methodExercised:
        expression: "useGeneratedArtifacts():boolean4"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "504C2B18FD5DE35DA01916EC347AB7B1"
      methodExercised:
        expression: "getAllSources():set2"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A2E059860C5C45B44F0B7F9AA4D95BDB"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notEmpty(collection:set2,message:uniqueUuid200):void24"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "91ACBEFD431AA6FB4341C4C76B033E1D"
      methodExercised:
        expression: "load(context:configurableApplicationContext,sources:objectArray2):void25"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "9DAE3D234F2CD76AACDE8442BC6EE4A6"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "contextLoaded(context:configurableApplicationContext):void26"
    - type: "FIELD"
      name: "shutdownHook"
      modelFingerprint: "955744B9BBBD449D14979830C226B3DB"
      valueUuid: "springApplicationShutdownHook"
      methodExercised:
        expression: "registerApplicationContext(context:configurableApplicationContext):void27"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "01A9466B1E33218E3C0D5F4F6DD218E7"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "refresh():void28"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      name: "startup"
      modelFingerprint: "9514A429A770044AEBDFB50062B30B4D"
      valueUuid: "springApplication.Startup"
      methodExercised:
        expression: "started():duration"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "FE5D2BC90EC0B24D7B85FD4D1CDFF78B"
      methodExercised:
        expression: "getApplicationLog():log2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "31F4778FC7271F5256CA0997FCC61AFA"
      valueUuid: "startupInfoLogger"
      methodExercised:
        expression: "logStarted(applicationLog:log2,startup:springApplication.Startup):void29"
    - type: "LOCAL_VARIABLE"
      name: "startup"
      modelFingerprint: "8632254D8D53E67F9906077923095FAF"
      valueUuid: "springApplication.Startup"
      methodExercised:
        expression: "timeTakenToStarted():duration2"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "676CA2E0A33FFC3648204E1B59D55045"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "started(context:configurableApplicationContext,timeTaken:duration2):void30"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "6A01AAC3461FC3A19CF28FB5CC4FB9E4"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory2"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "3596C8781637C69DE06BCB1A531D8330"
      valueUuid: "configurableListableBeanFactory2"
      methodExercised:
        expression: "getBeanNamesForType(type:uniqueUuid202):stringArray2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "9FB5A4AC1406067842215F6E568A3B04"
      valueUuid: "annotationAwareOrderComparator"
      methodExercised:
        expression: "withSourceProvider(sourceProvider:orderComparator.OrderSourceProvider):comparator"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "B0C2BF9972AA4C4EDBF3DAF9750E2F28"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "isActive():boolean8"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "5DDFA07303AF81DAB35393AAE9783D7E"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "getBeansOfType(type:uniqueUuid203):map"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
    - type: "LOCAL_VARIABLE"
      name: "generators"
      modelFingerprint: "E8B81D200036A6500B378CFE1ABAE1F9"
      valueUuid: "exitCodeGenerators"
      methodExercised:
        expression: "addAll(exception:throwable,mappers:collection):void32"
    - type: "LOCAL_VARIABLE"
      name: "generators"
      modelFingerprint: "D628F6E15FB40EDEA38738DF554737B7"
      valueUuid: "exitCodeGenerators"
      methodExercised:
        expression: "getExitCode():int10"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "9FEC77CA1F086F57E5E5B840A6DFBD3E"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "publishEvent(event:exitCodeEvent):void33"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "024BC48138A7C6DCA767193C9B7800D8"
      methodExercised:
        expression: "getSpringBootExceptionHandler():springBootExceptionHandler"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "678BA994CEC458C709C159E3C5209EEF"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "failed(context:configurableApplicationContext,exception:throwable):void34"
    - type: "STATIC"
      name: "SpringFactoriesLoader.ArgumentResolver.class"
      modelFingerprint: "70429A3A1E9B472C8BD20C617647BDFE"
      valueUuid: "SpringFactoriesLoader.ArgumentResolver.class"
      methodExercised:
        expression: "of(type:uniqueUuid204,value:configurableApplicationContext):springFactoriesLoader.ArgumentResolver3"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "27BFD3AFF61EB16D6621CC8BB9BFE4B5"
      methodExercised:
        expression: "getClassLoader():classLoader6"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader6):springFactoriesLoader5"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "89391FA8E64C49BEE40846C385407C94"
      valueUuid: "springFactoriesLoader5"
      methodExercised:
        expression: "load(factoryType:uniqueUuid205,argumentResolver:springFactoriesLoader.ArgumentResolver3):list6"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "C2E3D1F0AC456BC4B0896B03B086FB0F"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "close():void35"
    - type: "FIELD"
      name: "shutdownHook"
      modelFingerprint: "D5B0EC1BADB2B19C635663B4FCF72382"
      valueUuid: "springApplicationShutdownHook"
      methodExercised:
        expression: "deregisterFailedApplicationContext(applicationContext:configurableApplicationContext):void36"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "4730752B12CED7916BB2385D230012A5"
      valueUuid: "illegalStateException"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
            fixed: true
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
        propertiesMap:
          applicationContextFactory:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ApplicationContextFactory"
            uuid: "applicationContextFactory"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid180"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "REACTIVE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "bootstrapRegistryInitializer"
          collectionUuid: "arrayList"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid181"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid182"
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid183"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid184"
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid185"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid186"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "SpringApplication.Startup.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationShutdownHook"
        parameters: []
      valueType: "org.springframework.boot.SpringApplicationShutdownHook"
      uuid: "springApplicationShutdownHook"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "bootstrapRegistryInitializer"
      collectionUuid: "arrayList"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "SpringFactoriesLoader.ArgumentResolver.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.SpringApplication"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.SpringApplication"
      uuid: "uniqueUuid187"
      fixed: true
    - sapientType: "THIS"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String[]"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.String[]"
      uuid: "uniqueUuid188"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader4"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader4"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader4"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader4"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.SpringApplicationRunListener"
      uuid: "list5"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.SpringApplicationRunListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.SpringApplicationRunListener"
      uuid: "uniqueUuid189"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      uuid: "uniqueUuid190"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "applicationContextFactory"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "ENUM"
      content: !<regular>
        value: "REACTIVE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.DefaultApplicationArguments"
        parameters:
        - name: "args"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "args"
      valueType: "org.springframework.boot.DefaultApplicationArguments"
      uuid: "defaultApplicationArguments"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "ConfigurationPropertySources.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.DefaultPropertiesPropertySource"
      uuid: "DefaultPropertiesPropertySource.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "spring.main.environment-prefix"
      valueType: "java.lang.String"
      uuid: "uniqueUuid191"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid192"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Environment prefix cannot be set via properties."
      valueType: "java.lang.String"
      uuid: "uniqueUuid193"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void11"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "applicationContextFactory"
    - sapientType: "CLASS"
      content: !<regular>
        value: "? extends org.springframework.core.env.ConfigurableEnvironment"
      valueType: "java.lang.Class"
      genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
      uuid: "class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "REACTIVE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.EnvironmentConverter"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "classLoader5"
      valueType: "org.springframework.boot.EnvironmentConverter"
      uuid: "environmentConverter"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ApplicationContextFactory"
                uuid: "applicationContextFactory"
              methodParameters:
              - name: "webApplicationType"
                value:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "REACTIVE"
                  valueType: "org.springframework.boot.WebApplicationType"
                  uuid: "webApplicationType"
              methodName: "createEnvironment"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "? extends org.springframework.core.env.ConfigurableEnvironment"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "CLASS"
      content: !<regular>
        value: "? extends org.springframework.core.env.ConfigurableEnvironment"
      valueType: "java.lang.Class"
      genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "ConfigurationPropertySources.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void12"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ApplicationContextFactory"
                uuid: "applicationContextFactory"
              methodParameters:
              - name: "webApplicationType"
                value:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "REACTIVE"
                  valueType: "org.springframework.boot.WebApplicationType"
                  uuid: "webApplicationType"
              methodName: "createEnvironment"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "? extends org.springframework.core.env.ConfigurableEnvironment"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationBannerPrinter"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.core.io.DefaultResourceLoader"
              parameters:
              - name: "classLoader"
                value:
                  sapientType: "NULL"
                  valueType: "java.lang.ClassLoader"
            valueType: "org.springframework.core.io.DefaultResourceLoader"
            uuid: "defaultResourceLoader"
            fixed: true
        - name: "fallbackBanner"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.Banner"
            uuid: "fieldBanner"
      valueType: "org.springframework.boot.SpringApplicationBannerPrinter"
      uuid: "springApplicationBannerPrinter"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.Banner"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.SpringApplicationBannerPrinter"
            parameters:
            - name: "resourceLoader"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.core.io.DefaultResourceLoader"
                  parameters:
                  - name: "classLoader"
                    value:
                      sapientType: "NULL"
                      valueType: "java.lang.ClassLoader"
                valueType: "org.springframework.core.io.DefaultResourceLoader"
                uuid: "defaultResourceLoader"
                fixed: true
            - name: "fallbackBanner"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.Banner"
                uuid: "fieldBanner"
          valueType: "org.springframework.boot.SpringApplicationBannerPrinter"
          uuid: "springApplicationBannerPrinter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.EnvironmentConverter"
                  parameters:
                  - name: "classLoader"
                    value:
                      sapientType: "OBJECT"
                      content: !<static_method_return>
                        target: "java.lang.ClassLoader"
                        method: "getPlatformClassLoader"
                        methodParameters: []
                      valueType: "java.lang.ClassLoader"
                      uuid: "classLoader5"
                valueType: "org.springframework.boot.EnvironmentConverter"
                uuid: "environmentConverter"
                fixed: true
              methodParameters:
              - name: "environment"
                value:
                  sapientType: "OBJECT"
                  content: !<method_return_from_value>
                    target: "org.springframework.core.env.ConfigurableEnvironment"
                    localVariableValue:
                      sapientType: "MOCK"
                      valueType: "org.springframework.boot.ApplicationContextFactory"
                      uuid: "applicationContextFactory"
                    methodParameters:
                    - name: "webApplicationType"
                      value:
                        sapientType: "ENUM"
                        content: !<regular>
                          value: "REACTIVE"
                        valueType: "org.springframework.boot.WebApplicationType"
                        uuid: "webApplicationType"
                    methodName: "createEnvironment"
                  valueType: "org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "configurableEnvironment"
              - name: "type"
                value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "? extends org.springframework.core.env.ConfigurableEnvironment"
                  valueType: "java.lang.Class"
                  genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "class"
              methodName: "convertEnvironmentIfNecessary"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment2"
        - name: "sourceClass"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            uuid: "uniqueUuid195"
            explicitCastNeeded: true
        - name: "out"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "java.lang.System"
              fieldName: "out"
            valueType: "java.io.PrintStream"
            uuid: "printStream"
        methodName: "print"
      valueType: "org.springframework.boot.Banner"
      uuid: "banner"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ApplicationContextFactory"
                uuid: "applicationContextFactory"
              methodParameters:
              - name: "webApplicationType"
                value:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "REACTIVE"
                  valueType: "org.springframework.boot.WebApplicationType"
                  uuid: "webApplicationType"
              methodName: "createEnvironment"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "? extends org.springframework.core.env.ConfigurableEnvironment"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      uuid: "uniqueUuid194"
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "java.lang.System"
        fieldName: "out"
      valueType: "java.io.PrintStream"
      uuid: "printStream"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "applicationContextFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "ENUM"
      content: !<regular>
        value: "REACTIVE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void13"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.core.metrics.ApplicationStartup"
        fieldName: "DEFAULT"
      valueType: "org.springframework.core.metrics.ApplicationStartup"
      uuid: "applicationStartup"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void14"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ApplicationContextFactory"
                uuid: "applicationContextFactory"
              methodParameters:
              - name: "webApplicationType"
                value:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "REACTIVE"
                  valueType: "org.springframework.boot.WebApplicationType"
                  uuid: "webApplicationType"
              methodName: "createEnvironment"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "? extends org.springframework.core.env.ConfigurableEnvironment"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void15"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "REAL"
      valueType: "org.springframework.aot.AotDetector"
      uuid: "AotDetector.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void16"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void17"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.DefaultBootstrapContext"
        parameters: []
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void18"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void19"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid196"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void20"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void21"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "springApplicationArguments"
      valueType: "java.lang.String"
      uuid: "uniqueUuid197"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultApplicationArguments"
      uuid: "defaultApplicationArguments"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void22"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "springBootBanner"
      valueType: "java.lang.String"
      uuid: "uniqueUuid198"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.Banner"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.SpringApplicationBannerPrinter"
            parameters:
            - name: "resourceLoader"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.core.io.DefaultResourceLoader"
                  parameters:
                  - name: "classLoader"
                    value:
                      sapientType: "NULL"
                      valueType: "java.lang.ClassLoader"
                valueType: "org.springframework.core.io.DefaultResourceLoader"
                uuid: "defaultResourceLoader"
                fixed: true
            - name: "fallbackBanner"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.Banner"
                uuid: "fieldBanner"
          valueType: "org.springframework.boot.SpringApplicationBannerPrinter"
          uuid: "springApplicationBannerPrinter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.EnvironmentConverter"
                  parameters:
                  - name: "classLoader"
                    value:
                      sapientType: "OBJECT"
                      content: !<static_method_return>
                        target: "java.lang.ClassLoader"
                        method: "getPlatformClassLoader"
                        methodParameters: []
                      valueType: "java.lang.ClassLoader"
                      uuid: "classLoader5"
                valueType: "org.springframework.boot.EnvironmentConverter"
                uuid: "environmentConverter"
                fixed: true
              methodParameters:
              - name: "environment"
                value:
                  sapientType: "OBJECT"
                  content: !<method_return_from_value>
                    target: "org.springframework.core.env.ConfigurableEnvironment"
                    localVariableValue:
                      sapientType: "MOCK"
                      valueType: "org.springframework.boot.ApplicationContextFactory"
                      uuid: "applicationContextFactory"
                    methodParameters:
                    - name: "webApplicationType"
                      value:
                        sapientType: "ENUM"
                        content: !<regular>
                          value: "REACTIVE"
                        valueType: "org.springframework.boot.WebApplicationType"
                        uuid: "webApplicationType"
                    methodName: "createEnvironment"
                  valueType: "org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "configurableEnvironment"
              - name: "type"
                value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "? extends org.springframework.core.env.ConfigurableEnvironment"
                  valueType: "java.lang.Class"
                  genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "class"
              methodName: "convertEnvironmentIfNecessary"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment2"
        - name: "sourceClass"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            uuid: "uniqueUuid199"
            explicitCastNeeded: true
        - name: "out"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "java.lang.System"
              fieldName: "out"
            valueType: "java.io.PrintStream"
            uuid: "printStream"
        methodName: "print"
      valueType: "org.springframework.boot.Banner"
      uuid: "banner"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void23"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.beans.factory.config.BeanFactoryPostProcessor"
      uuid: "beanFactoryPostProcessor"
    - sapientType: "REAL"
      valueType: "org.springframework.aot.AotDetector"
      uuid: "AotDetector.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.Object"
      uuid: "set2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void24"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.Object"
      uuid: "set2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be empty"
      valueType: "java.lang.String"
      uuid: "uniqueUuid200"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void25"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Object[]"
      uuid: "objectArray2"
      collectionUuid: "set2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void26"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationShutdownHook"
        parameters: []
      valueType: "org.springframework.boot.SpringApplicationShutdownHook"
      uuid: "springApplicationShutdownHook"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void27"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void28"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration-days"
      valueType: "java.time.Duration"
      uuid: "duration"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "log2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.StartupInfoLogger"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            uuid: "uniqueUuid201"
            explicitCastNeeded: true
      valueType: "org.springframework.boot.StartupInfoLogger"
      uuid: "startupInfoLogger"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void29"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "log2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration2-days"
      valueType: "java.time.Duration"
      uuid: "duration2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void30"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration2-days"
      valueType: "java.time.Duration"
      uuid: "duration2"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.Runner"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.Runner"
      uuid: "uniqueUuid202"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
        fieldName: "INSTANCE"
      valueType: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
      uuid: "annotationAwareOrderComparator"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.util.Comparator"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<static_field_return>
            target: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
            fieldName: "INSTANCE"
          valueType: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
          uuid: "annotationAwareOrderComparator"
        methodParameters:
        - name: "sourceProvider"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "org.springframework.core.OrderComparator$OrderSourceProvider"
            uuid: "orderComparator.OrderSourceProvider"
        methodName: "withSourceProvider"
      valueType: "java.util.Comparator"
      genericValueType: "java.lang.Object"
      uuid: "comparator"
    - sapientType: "ANY"
      valueType: "org.springframework.core.OrderComparator$OrderSourceProvider"
      uuid: "orderComparator.OrderSourceProvider"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean8"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.ExitCodeExceptionMapper"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.ExitCodeExceptionMapper"
      uuid: "uniqueUuid203"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ExitCodeGenerators"
        parameters: []
      valueType: "org.springframework.boot.ExitCodeGenerators"
      uuid: "exitCodeGenerators"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void32"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "throwable"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "org.springframework.boot.ExitCodeExceptionMapper"
      uuid: "collection"
      collectionUuid: "map"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ExitCodeGenerators"
        parameters: []
      valueType: "org.springframework.boot.ExitCodeGenerators"
      uuid: "exitCodeGenerators"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int10"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void33"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.ExitCodeEvent"
      uuid: "exitCodeEvent"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.boot.SpringBootExceptionHandler"
      uuid: "springBootExceptionHandler"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void34"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "throwable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "SpringFactoriesLoader.ArgumentResolver.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ConfigurableApplicationContext"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "uniqueUuid204"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader6"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader5"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader6"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader5"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.SpringBootExceptionReporter"
      uuid: "list6"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.SpringBootExceptionReporter"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.SpringBootExceptionReporter"
      uuid: "uniqueUuid205"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver3"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void35"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationShutdownHook"
        parameters: []
      valueType: "org.springframework.boot.SpringApplicationShutdownHook"
      uuid: "springApplicationShutdownHook"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void36"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Throwable"
              parameters: []
            valueType: "java.lang.Throwable"
            uuid: "throwable"
      valueType: "java.lang.IllegalStateException"
      uuid: "illegalStateException"
      fixed: true
    branches:
    - lineNumber: 319
      expression: "this.registerShutdownHook"
      range: "(319,7)-(319,31)"
      evaluatedAs: true
    - lineNumber: 470
      expression: "hook != null"
      range: "(470,48)-(470,59)"
      evaluatedAs: false
      internalMethodName: "getRunListeners"
    - lineNumber: 471
      expression: "hookListener != null"
      range: "(471,7)-(471,26)"
      evaluatedAs: false
      internalMethodName: "getRunListeners"
    - lineNumber: 487
      expression: "this.environment != null"
      range: "(487,7)-(487,30)"
      evaluatedAs: false
      internalMethodName: "getOrCreateEnvironment"
    - lineNumber: 491
      expression: "environment == null"
      range: "(491,7)-(491,25)"
      evaluatedAs: false
      internalMethodName: "getOrCreateEnvironment"
    - lineNumber: 494
      expression: "environment != null"
      range: "(494,11)-(494,29)"
      evaluatedAs: true
      internalMethodName: "getOrCreateEnvironment"
    - lineNumber: 371
      expression: "!environment.containsProperty(\\\"spring.main.environment-prefix\\\
        \")"
      range: "(371,16)-(371,78)"
      evaluatedAs: true
      internalMethodName: "prepareEnvironment"
    - lineNumber: 374
      expression: "!this.isCustomEnvironment"
      range: "(374,7)-(374,31)"
      evaluatedAs: true
      internalMethodName: "prepareEnvironment"
    - lineNumber: 385
      expression: "environmentType == null"
      range: "(385,7)-(385,29)"
      evaluatedAs: false
      internalMethodName: "deduceEnvironmentClass"
    - lineNumber: 388
      expression: "environmentType == null"
      range: "(388,7)-(388,29)"
      evaluatedAs: false
      internalMethodName: "deduceEnvironmentClass"
    - lineNumber: 569
      expression: "this.bannerMode == Banner.Mode.OFF"
      range: "(569,7)-(569,40)"
      evaluatedAs: false
      internalMethodName: "printBanner"
    - lineNumber: 572
      expression: "this.resourceLoader != null"
      range: "(572,36)-(572,62)"
      evaluatedAs: false
      internalMethodName: "printBanner"
    - lineNumber: 575
      expression: "this.bannerMode == Mode.LOG"
      range: "(575,7)-(575,33)"
      evaluatedAs: false
      internalMethodName: "printBanner"
    - lineNumber: 436
      expression: "AotDetector.useGeneratedArtifacts()"
      range: "(436,7)-(436,41)"
      evaluatedAs: false
      internalMethodName: "addAotGeneratedInitializerIfNecessary"
    - lineNumber: 403
      expression: "this.logStartupInfo"
      range: "(403,7)-(403,25)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 404
      expression: "context.getParent() == null"
      range: "(404,19)-(404,45)"
      evaluatedAs: false
      internalMethodName: "prepareContext"
    - lineNumber: 410
      expression: "printedBanner != null"
      range: "(410,7)-(410,27)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 413
      expression: "beanFactory instanceof AbstractAutowireCapableBeanFactory autowireCapableBeanFactory"
      range: "(413,7)-(413,90)"
      evaluatedAs: false
      internalMethodName: "prepareContext"
    - lineNumber: 419
      expression: "this.lazyInitialization"
      range: "(419,7)-(419,29)"
      evaluatedAs: false
      internalMethodName: "prepareContext"
    - lineNumber: 422
      expression: "this.keepAlive"
      range: "(422,7)-(422,20)"
      evaluatedAs: false
      internalMethodName: "prepareContext"
    - lineNumber: 426
      expression: "!AotDetector.useGeneratedArtifacts()"
      range: "(426,7)-(426,42)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 453
      expression: "this.registerShutdownHook"
      range: "(453,7)-(453,31)"
      evaluatedAs: true
      internalMethodName: "refreshContext"
    - lineNumber: 337
      expression: "this.logStartupInfo"
      range: "(337,8)-(337,26)"
      evaluatedAs: true
    - lineNumber: 769
      expression: "for-each(beanNames)"
      range: "(769,26)-(769,34)"
      evaluatedAs: false
      internalMethodName: "callRunners"
    - lineNumber: 778
      expression: "beanFactory instanceof DefaultListableBeanFactory defaultListableBeanFactory"
      range: "(778,41)-(778,116)"
      evaluatedAs: false
      internalMethodName: "getOrderComparator"
    - lineNumber: 780
      expression: "dependencyComparator instanceof OrderComparator orderComparator"
      range: "(780,11)-(780,73)"
      evaluatedAs: false
      internalMethodName: "getOrderComparator"
    - lineNumber: 343
      expression: "catch-exception (Throwable)"
      range: "(343,3)-(343,21)"
      evaluatedAs: true
    - lineNumber: 803
      expression: "exception instanceof AbandonedRunException abandonedRunException"
      range: "(803,7)-(803,70)"
      evaluatedAs: false
      internalMethodName: "handleRunFailure"
    - lineNumber: 890
      expression: "context == null"
      range: "(890,7)-(890,21)"
      evaluatedAs: false
      internalMethodName: "getExitCodeFromMappedException"
    - lineNumber: 890
      expression: "!context.isActive()"
      range: "(890,26)-(890,44)"
      evaluatedAs: false
      internalMethodName: "getExitCodeFromMappedException"
    - lineNumber: 883
      expression: "exitCode == 0"
      range: "(883,7)-(883,19)"
      evaluatedAs: false
      internalMethodName: "getExitCodeFromException"
    - lineNumber: 870
      expression: "exitCode != 0"
      range: "(870,7)-(870,19)"
      evaluatedAs: true
      internalMethodName: "handleExitCode"
    - lineNumber: 871
      expression: "context != null"
      range: "(871,8)-(871,22)"
      evaluatedAs: true
      internalMethodName: "handleExitCode"
    - lineNumber: 875
      expression: "handler != null"
      range: "(875,8)-(875,22)"
      evaluatedAs: false
      internalMethodName: "handleExitCode"
    - lineNumber: 809
      expression: "listeners != null"
      range: "(809,9)-(809,25)"
      evaluatedAs: true
      internalMethodName: "handleRunFailure"
    - lineNumber: 840
      expression: "for-each(exceptionReporters)"
      range: "(840,48)-(840,65)"
      evaluatedAs: false
      internalMethodName: "reportFailure"
    - lineNumber: 850
      expression: "logger.isErrorEnabled()"
      range: "(850,7)-(850,29)"
      evaluatedAs: false
      internalMethodName: "reportFailure"
    - lineNumber: 815
      expression: "context != null"
      range: "(815,9)-(815,23)"
      evaluatedAs: true
      internalMethodName: "handleRunFailure"
    - lineNumber: 824
      expression: "exception instanceof RuntimeException runtimeException"
      range: "(824,11)-(824,64)"
      evaluatedAs: false
      internalMethodName: "handleRunFailure"
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Throwable"
  - pathId: "path19"
    testPathName: "runWhenContextIsNotNullAndExceptionInstanceOfRuntimeExceptionThrowsRuntimeException"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "6C8D31E9C2F6D14D027953497B302861"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "args"
      modelFingerprint: "62B8E965720EE46A7489315174A3A841"
      valueUuid: "args"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid206):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "E2F288269971D6B40DA896664938F98E"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "20006F76B7E4788E565F04F635D4A52D"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid207,argumentResolver:uniqueUuid208):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid209,argumentResolver:uniqueUuid210):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid211,argumentResolver:uniqueUuid212):list4"
    - type: "STATIC"
      name: "SpringApplication.Startup.class"
      modelFingerprint: "DA8622EB3506E174E0335AC27132B054"
      valueUuid: "SpringApplication.Startup.class"
      methodExercised:
        expression: "create():springApplication.Startup"
        staticAccess: true
    - type: "FIELD"
      name: "shutdownHook"
      modelFingerprint: "A0CD9DC1B1C93A40FEC7031737D9BE10"
      valueUuid: "springApplicationShutdownHook"
      methodExercised:
        expression: "enableShutdownHookAddition():void2"
    - type: "LOCAL_VARIABLE"
      name: "initializer"
      modelFingerprint: "78495708A547C9C6DC2151A7C67101AC"
      valueUuid: "bootstrapRegistryInitializer"
      methodExercised:
        expression: "initialize(registry:defaultBootstrapContext):void4"
    - type: "STATIC"
      name: "SpringFactoriesLoader.ArgumentResolver.class"
      modelFingerprint: "5F0034DA74D42417617FBE94CCB6AD81"
      valueUuid: "SpringFactoriesLoader.ArgumentResolver.class"
      methodExercised:
        expression: "of(type:uniqueUuid213,value:targetClassObject):springFactoriesLoader.ArgumentResolver"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "argumentResolver"
      modelFingerprint: "900146EE10B4914AE93AEF9C5995BCEE"
      valueUuid: "springFactoriesLoader.ArgumentResolver"
      methodExercised:
        expression: "and(type:uniqueUuid214,value:args):springFactoriesLoader.ArgumentResolver2"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "27BFD3AFF61EB16D6621CC8BB9BFE4B5"
      methodExercised:
        expression: "getClassLoader():classLoader4"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader4):springFactoriesLoader4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "C997EC8D4248E2F75F459758B43838D0"
      valueUuid: "springFactoriesLoader4"
      methodExercised:
        expression: "load(factoryType:uniqueUuid215,argumentResolver:springFactoriesLoader.ArgumentResolver2):list5"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "B030C484A6C44F4577E15609B1FF871D"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "starting(bootstrapContext:defaultBootstrapContext,mainApplicationClass:uniqueUuid216):void5"
    - type: "FIELD"
      name: "applicationContextFactory"
      modelFingerprint: "06BD52635BC7B034715AED6488A78392"
      valueUuid: "applicationContextFactory"
      methodExercised:
        expression: "createEnvironment(webApplicationType:webApplicationType):configurableEnvironment"
    - type: "LOCAL_VARIABLE"
      name: "applicationArguments"
      modelFingerprint: "029CA1B5E8067A0C5CE390F4A8056BDF"
      valueUuid: "defaultApplicationArguments"
      methodExercised:
        expression: "getSourceArgs():stringArray"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "90BC58528E0141F4E6E011D07D70EE79"
      methodExercised:
        expression: "configureEnvironment(environment:configurableEnvironment,args:stringArray):void6"
    - type: "STATIC"
      name: "ConfigurationPropertySources.class"
      modelFingerprint: "58E4F8CCC7DC67F3E09EA91F9A6467FB"
      valueUuid: "ConfigurationPropertySources.class"
      methodExercised:
        expression: "attach(environment:configurableEnvironment):void7"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "5E7F92D4A76B53122BDFD2BE5C6BFE2B"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "environmentPrepared(bootstrapContext:defaultBootstrapContext,environment:configurableEnvironment):void8"
    - type: "STATIC"
      name: "DefaultPropertiesPropertySource.class"
      modelFingerprint: "432C497220A187F4231AD8C95D44D3D6"
      valueUuid: "DefaultPropertiesPropertySource.class"
      methodExercised:
        expression: "moveToEnd(environment:configurableEnvironment):void9"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "2BAE2A27DEF6B4CFF3B6082E9E311248"
      valueUuid: "configurableEnvironment"
      methodExercised:
        expression: "containsProperty(key:uniqueUuid217):boolean1"
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "2A737F0AED0B795580225C9A5C41679A"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "state(expression:uniqueUuid218,message:uniqueUuid219):void10"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "E6B42E54F1DFA3D64EA4D5F761BE969D"
      methodExercised:
        expression: "bindToSpringApplication(environment:configurableEnvironment):void11"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "27BFD3AFF61EB16D6621CC8BB9BFE4B5"
      methodExercised:
        expression: "getClassLoader():classLoader5"
    - type: "FIELD"
      name: "applicationContextFactory"
      modelFingerprint: "CA81E603C78F05F6FBB4BD5D16D697F6"
      valueUuid: "applicationContextFactory"
      methodExercised:
        expression: "getEnvironmentType(webApplicationType:webApplicationType):class"
    - type: "LOCAL_VARIABLE"
      name: "environmentConverter"
      modelFingerprint: "E5B9FA8FB6710B65ABA183AC228D1F66"
      valueUuid: "environmentConverter"
      methodExercised:
        expression: "convertEnvironmentIfNecessary(environment:configurableEnvironment,type:class):configurableEnvironment2"
    - type: "STATIC"
      name: "ConfigurationPropertySources.class"
      modelFingerprint: "05610F2B4CE0EE45EFD8707C0830737F"
      valueUuid: "ConfigurationPropertySources.class"
      methodExercised:
        expression: "attach(environment:configurableEnvironment2):void12"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "bannerPrinter"
      modelFingerprint: "57DBBA845CE5D3692822F30C99C8F94C"
      valueUuid: "springApplicationBannerPrinter"
      methodExercised:
        expression: "print(environment:configurableEnvironment2,sourceClass:uniqueUuid220,out:printStream):banner"
    - type: "FIELD"
      name: "applicationContextFactory"
      modelFingerprint: "9636AB959433EACCFC3EAE2B2054BBA7"
      valueUuid: "applicationContextFactory"
      methodExercised:
        expression: "create(webApplicationType:webApplicationType):configurableApplicationContext"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "C4457CBF6543DA61B3CC571D7855BC05"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "setApplicationStartup(applicationStartup:applicationStartup):void13"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "8612B0D1172C552882689E6870D41AE5"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "setEnvironment(environment:configurableEnvironment2):void14"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "F7247F20B4DB91E482D564DC0E3EE670"
      methodExercised:
        expression: "postProcessApplicationContext(context:configurableApplicationContext):void15"
    - type: "STATIC"
      name: "AotDetector.class.real"
      modelFingerprint: "A651F35C9CB1BB4329EA23C459C95680"
      valueUuid: "AotDetector.class.real"
      methodExercised:
        expression: "useGeneratedArtifacts():boolean2"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "2629F473285A8D2B3BDA80841BE1B13C"
      methodExercised:
        expression: "applyInitializers(context:configurableApplicationContext):void16"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "F25700EBA48DFBE78B5458FCD3EB4646"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "contextPrepared(context:configurableApplicationContext):void17"
    - type: "LOCAL_VARIABLE"
      name: "bootstrapContext"
      modelFingerprint: "909D947F9D1DDC6DDEA8500941736C94"
      valueUuid: "defaultBootstrapContext"
      methodExercised:
        expression: "close(applicationContext:configurableApplicationContext):void18"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "5E3904425938E13844EB71188213737A"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "getParent():applicationContext"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "AC62DBB448DDE3961AAF97490A0B542D"
      methodExercised:
        expression: "logStartupInfo(isRoot:uniqueUuid222):void19"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "7204D97E17BC4435BDF63B535ED64B97"
      methodExercised:
        expression: "logStartupProfileInfo(context:configurableApplicationContext):void20"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "6A01AAC3461FC3A19CF28FB5CC4FB9E4"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "7107C791919372E064D179B76AC9C5E9"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "registerSingleton(beanName:uniqueUuid223,singletonObject:defaultApplicationArguments):void21"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "7D9F9E6CBD122983C30C4497B512C45C"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "registerSingleton(beanName:uniqueUuid224,singletonObject:banner):void22"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "69034248F39E1300FEF9D04C0504E01A"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "addBeanFactoryPostProcessor(postProcessor:beanFactoryPostProcessor):void23"
    - type: "STATIC"
      name: "AotDetector.class.real"
      modelFingerprint: "A651F35C9CB1BB4329EA23C459C95680"
      valueUuid: "AotDetector.class.real"
      methodExercised:
        expression: "useGeneratedArtifacts():boolean4"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "504C2B18FD5DE35DA01916EC347AB7B1"
      methodExercised:
        expression: "getAllSources():set2"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A2E059860C5C45B44F0B7F9AA4D95BDB"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notEmpty(collection:set2,message:uniqueUuid226):void24"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "91ACBEFD431AA6FB4341C4C76B033E1D"
      methodExercised:
        expression: "load(context:configurableApplicationContext,sources:objectArray2):void25"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "9DAE3D234F2CD76AACDE8442BC6EE4A6"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "contextLoaded(context:configurableApplicationContext):void26"
    - type: "FIELD"
      name: "shutdownHook"
      modelFingerprint: "955744B9BBBD449D14979830C226B3DB"
      valueUuid: "springApplicationShutdownHook"
      methodExercised:
        expression: "registerApplicationContext(context:configurableApplicationContext):void27"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "01A9466B1E33218E3C0D5F4F6DD218E7"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "refresh():void28"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      name: "startup"
      modelFingerprint: "9514A429A770044AEBDFB50062B30B4D"
      valueUuid: "springApplication.Startup"
      methodExercised:
        expression: "started():duration"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "FE5D2BC90EC0B24D7B85FD4D1CDFF78B"
      methodExercised:
        expression: "getApplicationLog():log2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "31F4778FC7271F5256CA0997FCC61AFA"
      valueUuid: "startupInfoLogger"
      methodExercised:
        expression: "logStarted(applicationLog:log2,startup:springApplication.Startup):void29"
    - type: "LOCAL_VARIABLE"
      name: "startup"
      modelFingerprint: "8632254D8D53E67F9906077923095FAF"
      valueUuid: "springApplication.Startup"
      methodExercised:
        expression: "timeTakenToStarted():duration2"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "676CA2E0A33FFC3648204E1B59D55045"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "started(context:configurableApplicationContext,timeTaken:duration2):void30"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "6A01AAC3461FC3A19CF28FB5CC4FB9E4"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory2"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "8A57C6E79097BE70207C443A51A26E7F"
      valueUuid: "configurableListableBeanFactory2"
      methodExercised:
        expression: "getBeanNamesForType(type:uniqueUuid228):stringArray2"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "049356A3DCD2541F910927E5E31BCA20"
      valueUuid: "configurableListableBeanFactory2"
      methodExercised:
        expression: "getBean(name:string4,requiredType:uniqueUuid229):object4"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "9FB5A4AC1406067842215F6E568A3B04"
      valueUuid: "annotationAwareOrderComparator"
      methodExercised:
        expression: "withSourceProvider(sourceProvider:orderComparator.OrderSourceProvider):comparator"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "DA96E3F9148FB8FFC04C9940573B9AF4"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "isRunning():boolean7"
    - type: "LOCAL_VARIABLE"
      name: "startup"
      modelFingerprint: "617185A19112E6053002DE8AAB9AA7F5"
      valueUuid: "springApplication.Startup"
      methodExercised:
        expression: "ready():duration3"
        privateAccess: true
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "71FA1946CACE39932158601FC2224A60"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "ready(context:configurableApplicationContext,timeTaken:duration3):void32"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "B0C2BF9972AA4C4EDBF3DAF9750E2F28"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "isActive():boolean9"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "5DDFA07303AF81DAB35393AAE9783D7E"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "getBeansOfType(type:uniqueUuid230):map"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
    - type: "LOCAL_VARIABLE"
      name: "generators"
      modelFingerprint: "1F7D9F3DFE6FB600B6DF3A8B683D1CF1"
      valueUuid: "exitCodeGenerators"
      methodExercised:
        expression: "addAll(exception:throwable,mappers:collection):void33"
    - type: "LOCAL_VARIABLE"
      name: "generators"
      modelFingerprint: "D628F6E15FB40EDEA38738DF554737B7"
      valueUuid: "exitCodeGenerators"
      methodExercised:
        expression: "getExitCode():int11"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "9FEC77CA1F086F57E5E5B840A6DFBD3E"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "publishEvent(event:exitCodeEvent):void34"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "9348C2FCC8DE8D8A578963FF61E5E05C"
      methodExercised:
        expression: "getSpringBootExceptionHandler():springBootExceptionHandler"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "D6358695736AB1012ECA90F4A044E7F6"
      valueUuid: "springBootExceptionHandler"
      methodExercised:
        expression: "registerExitCode(exitCode:int11):void35"
    - type: "STATIC"
      name: "SpringFactoriesLoader.ArgumentResolver.class"
      modelFingerprint: "70429A3A1E9B472C8BD20C617647BDFE"
      valueUuid: "SpringFactoriesLoader.ArgumentResolver.class"
      methodExercised:
        expression: "of(type:uniqueUuid231,value:configurableApplicationContext):springFactoriesLoader.ArgumentResolver3"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "27BFD3AFF61EB16D6621CC8BB9BFE4B5"
      methodExercised:
        expression: "getClassLoader():classLoader6"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader6):springFactoriesLoader5"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "89391FA8E64C49BEE40846C385407C94"
      valueUuid: "springFactoriesLoader5"
      methodExercised:
        expression: "load(factoryType:uniqueUuid232,argumentResolver:springFactoriesLoader.ArgumentResolver3):list6"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "C2E3D1F0AC456BC4B0896B03B086FB0F"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "close():void36"
    - type: "FIELD"
      name: "shutdownHook"
      modelFingerprint: "D5B0EC1BADB2B19C635663B4FCF72382"
      valueUuid: "springApplicationShutdownHook"
      methodExercised:
        expression: "deregisterFailedApplicationContext(applicationContext:configurableApplicationContext):void37"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C47223612F71BFE607116AFCAAE5E423"
      valueUuid: "throwable"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
        propertiesMap:
          applicationContextFactory:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ApplicationContextFactory"
            uuid: "applicationContextFactory"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid206"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "SERVLET"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "bootstrapRegistryInitializer"
          collectionUuid: "arrayList"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid207"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid208"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid209"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid210"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid211"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid212"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "SpringApplication.Startup.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationShutdownHook"
        parameters: []
      valueType: "org.springframework.boot.SpringApplicationShutdownHook"
      uuid: "springApplicationShutdownHook"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "bootstrapRegistryInitializer"
      collectionUuid: "arrayList"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "SpringFactoriesLoader.ArgumentResolver.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.SpringApplication"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.SpringApplication"
      uuid: "uniqueUuid213"
      fixed: true
    - sapientType: "THIS"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String[]"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.String[]"
      uuid: "uniqueUuid214"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader4"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader4"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader4"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader4"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.SpringApplicationRunListener"
      uuid: "list5"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.SpringApplicationRunListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.SpringApplicationRunListener"
      uuid: "uniqueUuid215"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      uuid: "uniqueUuid216"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "applicationContextFactory"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "SERVLET"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "ENUM"
      content: !<regular>
        value: "SERVLET"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.DefaultApplicationArguments"
        parameters:
        - name: "args"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "args"
      valueType: "org.springframework.boot.DefaultApplicationArguments"
      uuid: "defaultApplicationArguments"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "SERVLET"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "ConfigurationPropertySources.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "SERVLET"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "SERVLET"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.DefaultPropertiesPropertySource"
      uuid: "DefaultPropertiesPropertySource.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "SERVLET"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "SERVLET"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "spring.main.environment-prefix"
      valueType: "java.lang.String"
      uuid: "uniqueUuid217"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid218"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Environment prefix cannot be set via properties."
      valueType: "java.lang.String"
      uuid: "uniqueUuid219"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void11"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "SERVLET"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "applicationContextFactory"
    - sapientType: "CLASS"
      content: !<regular>
        value: "? extends org.springframework.core.env.ConfigurableEnvironment"
      valueType: "java.lang.Class"
      genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
      uuid: "class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "SERVLET"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.EnvironmentConverter"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "classLoader5"
      valueType: "org.springframework.boot.EnvironmentConverter"
      uuid: "environmentConverter"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ApplicationContextFactory"
                uuid: "applicationContextFactory"
              methodParameters:
              - name: "webApplicationType"
                value:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "SERVLET"
                  valueType: "org.springframework.boot.WebApplicationType"
                  uuid: "webApplicationType"
              methodName: "createEnvironment"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "? extends org.springframework.core.env.ConfigurableEnvironment"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "SERVLET"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "CLASS"
      content: !<regular>
        value: "? extends org.springframework.core.env.ConfigurableEnvironment"
      valueType: "java.lang.Class"
      genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "ConfigurationPropertySources.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void12"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ApplicationContextFactory"
                uuid: "applicationContextFactory"
              methodParameters:
              - name: "webApplicationType"
                value:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "SERVLET"
                  valueType: "org.springframework.boot.WebApplicationType"
                  uuid: "webApplicationType"
              methodName: "createEnvironment"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "? extends org.springframework.core.env.ConfigurableEnvironment"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationBannerPrinter"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "fallbackBanner"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.Banner"
            uuid: "fieldBanner"
      valueType: "org.springframework.boot.SpringApplicationBannerPrinter"
      uuid: "springApplicationBannerPrinter"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.Banner"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.SpringApplicationBannerPrinter"
            parameters:
            - name: "resourceLoader"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.core.io.ResourceLoader"
                uuid: "resourceLoader"
            - name: "fallbackBanner"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.Banner"
                uuid: "fieldBanner"
          valueType: "org.springframework.boot.SpringApplicationBannerPrinter"
          uuid: "springApplicationBannerPrinter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.EnvironmentConverter"
                  parameters:
                  - name: "classLoader"
                    value:
                      sapientType: "OBJECT"
                      content: !<static_method_return>
                        target: "java.lang.ClassLoader"
                        method: "getPlatformClassLoader"
                        methodParameters: []
                      valueType: "java.lang.ClassLoader"
                      uuid: "classLoader5"
                valueType: "org.springframework.boot.EnvironmentConverter"
                uuid: "environmentConverter"
                fixed: true
              methodParameters:
              - name: "environment"
                value:
                  sapientType: "OBJECT"
                  content: !<method_return_from_value>
                    target: "org.springframework.core.env.ConfigurableEnvironment"
                    localVariableValue:
                      sapientType: "MOCK"
                      valueType: "org.springframework.boot.ApplicationContextFactory"
                      uuid: "applicationContextFactory"
                    methodParameters:
                    - name: "webApplicationType"
                      value:
                        sapientType: "ENUM"
                        content: !<regular>
                          value: "SERVLET"
                        valueType: "org.springframework.boot.WebApplicationType"
                        uuid: "webApplicationType"
                    methodName: "createEnvironment"
                  valueType: "org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "configurableEnvironment"
              - name: "type"
                value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "? extends org.springframework.core.env.ConfigurableEnvironment"
                  valueType: "java.lang.Class"
                  genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "class"
              methodName: "convertEnvironmentIfNecessary"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment2"
        - name: "sourceClass"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            uuid: "uniqueUuid221"
            explicitCastNeeded: true
        - name: "out"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "java.lang.System"
              fieldName: "out"
            valueType: "java.io.PrintStream"
            uuid: "printStream"
        methodName: "print"
      valueType: "org.springframework.boot.Banner"
      uuid: "banner"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ApplicationContextFactory"
                uuid: "applicationContextFactory"
              methodParameters:
              - name: "webApplicationType"
                value:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "SERVLET"
                  valueType: "org.springframework.boot.WebApplicationType"
                  uuid: "webApplicationType"
              methodName: "createEnvironment"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "? extends org.springframework.core.env.ConfigurableEnvironment"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      uuid: "uniqueUuid220"
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "java.lang.System"
        fieldName: "out"
      valueType: "java.io.PrintStream"
      uuid: "printStream"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "applicationContextFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "ENUM"
      content: !<regular>
        value: "SERVLET"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void13"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.core.metrics.ApplicationStartup"
        fieldName: "DEFAULT"
      valueType: "org.springframework.core.metrics.ApplicationStartup"
      uuid: "applicationStartup"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void14"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ApplicationContextFactory"
                uuid: "applicationContextFactory"
              methodParameters:
              - name: "webApplicationType"
                value:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "SERVLET"
                  valueType: "org.springframework.boot.WebApplicationType"
                  uuid: "webApplicationType"
              methodName: "createEnvironment"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "? extends org.springframework.core.env.ConfigurableEnvironment"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void15"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "REAL"
      valueType: "org.springframework.aot.AotDetector"
      uuid: "AotDetector.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void16"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void17"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.DefaultBootstrapContext"
        parameters: []
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void18"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "NULL"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void19"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid222"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void20"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void21"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "springApplicationArguments"
      valueType: "java.lang.String"
      uuid: "uniqueUuid223"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultApplicationArguments"
      uuid: "defaultApplicationArguments"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void22"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "springBootBanner"
      valueType: "java.lang.String"
      uuid: "uniqueUuid224"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.Banner"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.SpringApplicationBannerPrinter"
            parameters:
            - name: "resourceLoader"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.core.io.ResourceLoader"
                uuid: "resourceLoader"
            - name: "fallbackBanner"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.Banner"
                uuid: "fieldBanner"
          valueType: "org.springframework.boot.SpringApplicationBannerPrinter"
          uuid: "springApplicationBannerPrinter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.EnvironmentConverter"
                  parameters:
                  - name: "classLoader"
                    value:
                      sapientType: "OBJECT"
                      content: !<static_method_return>
                        target: "java.lang.ClassLoader"
                        method: "getPlatformClassLoader"
                        methodParameters: []
                      valueType: "java.lang.ClassLoader"
                      uuid: "classLoader5"
                valueType: "org.springframework.boot.EnvironmentConverter"
                uuid: "environmentConverter"
                fixed: true
              methodParameters:
              - name: "environment"
                value:
                  sapientType: "OBJECT"
                  content: !<method_return_from_value>
                    target: "org.springframework.core.env.ConfigurableEnvironment"
                    localVariableValue:
                      sapientType: "MOCK"
                      valueType: "org.springframework.boot.ApplicationContextFactory"
                      uuid: "applicationContextFactory"
                    methodParameters:
                    - name: "webApplicationType"
                      value:
                        sapientType: "ENUM"
                        content: !<regular>
                          value: "SERVLET"
                        valueType: "org.springframework.boot.WebApplicationType"
                        uuid: "webApplicationType"
                    methodName: "createEnvironment"
                  valueType: "org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "configurableEnvironment"
              - name: "type"
                value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "? extends org.springframework.core.env.ConfigurableEnvironment"
                  valueType: "java.lang.Class"
                  genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "class"
              methodName: "convertEnvironmentIfNecessary"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment2"
        - name: "sourceClass"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            uuid: "uniqueUuid225"
            explicitCastNeeded: true
        - name: "out"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "java.lang.System"
              fieldName: "out"
            valueType: "java.io.PrintStream"
            uuid: "printStream"
        methodName: "print"
      valueType: "org.springframework.boot.Banner"
      uuid: "banner"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void23"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.beans.factory.config.BeanFactoryPostProcessor"
      uuid: "beanFactoryPostProcessor"
    - sapientType: "REAL"
      valueType: "org.springframework.aot.AotDetector"
      uuid: "AotDetector.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.Object"
      uuid: "set2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void24"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.Object"
      uuid: "set2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be empty"
      valueType: "java.lang.String"
      uuid: "uniqueUuid226"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void25"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Object[]"
      uuid: "objectArray2"
      collectionUuid: "set2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void26"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationShutdownHook"
        parameters: []
      valueType: "org.springframework.boot.SpringApplicationShutdownHook"
      uuid: "springApplicationShutdownHook"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void27"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void28"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration-days"
      valueType: "java.time.Duration"
      uuid: "duration"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "log2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.StartupInfoLogger"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            uuid: "uniqueUuid227"
            explicitCastNeeded: true
      valueType: "org.springframework.boot.StartupInfoLogger"
      uuid: "startupInfoLogger"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void29"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "log2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration2-days"
      valueType: "java.time.Duration"
      uuid: "duration2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void30"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration2-days"
      valueType: "java.time.Duration"
      uuid: "duration2"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getBeanNamesForTypeItem1"
            valueType: "java.lang.String"
            uuid: "string4"
      valueType: "java.lang.String[]"
      uuid: "stringArray2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.Runner"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.Runner"
      uuid: "uniqueUuid228"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.Runner"
      uuid: "object4"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanNamesForTypeItem1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.Runner"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.Runner"
      uuid: "uniqueUuid229"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
        fieldName: "INSTANCE"
      valueType: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
      uuid: "annotationAwareOrderComparator"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.util.Comparator"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<static_field_return>
            target: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
            fieldName: "INSTANCE"
          valueType: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
          uuid: "annotationAwareOrderComparator"
        methodParameters:
        - name: "sourceProvider"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "org.springframework.core.OrderComparator$OrderSourceProvider"
            uuid: "orderComparator.OrderSourceProvider"
        methodName: "withSourceProvider"
      valueType: "java.util.Comparator"
      genericValueType: "java.lang.Object"
      uuid: "comparator"
    - sapientType: "ANY"
      valueType: "org.springframework.core.OrderComparator$OrderSourceProvider"
      uuid: "orderComparator.OrderSourceProvider"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration3-days"
      valueType: "java.time.Duration"
      uuid: "duration3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void32"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration3-days"
      valueType: "java.time.Duration"
      uuid: "duration3"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean9"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.ExitCodeExceptionMapper"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.ExitCodeExceptionMapper"
      uuid: "uniqueUuid230"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ExitCodeGenerators"
        parameters: []
      valueType: "org.springframework.boot.ExitCodeGenerators"
      uuid: "exitCodeGenerators"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void33"
      fixed: true
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.RuntimeException"
        parameters: []
      valueType: "java.lang.RuntimeException"
      uuid: "throwable"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "org.springframework.boot.ExitCodeExceptionMapper"
      uuid: "collection"
      collectionUuid: "map"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ExitCodeGenerators"
        parameters: []
      valueType: "org.springframework.boot.ExitCodeGenerators"
      uuid: "exitCodeGenerators"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int11"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void34"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.ExitCodeEvent"
      uuid: "exitCodeEvent"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringBootExceptionHandler"
      uuid: "springBootExceptionHandler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringBootExceptionHandler"
      uuid: "springBootExceptionHandler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void35"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int11"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "SpringFactoriesLoader.ArgumentResolver.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ConfigurableApplicationContext"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "uniqueUuid231"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader6"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader5"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader6"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader5"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.SpringBootExceptionReporter"
      uuid: "list6"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.SpringBootExceptionReporter"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.SpringBootExceptionReporter"
      uuid: "uniqueUuid232"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver3"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void36"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationShutdownHook"
        parameters: []
      valueType: "org.springframework.boot.SpringApplicationShutdownHook"
      uuid: "springApplicationShutdownHook"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void37"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.RuntimeException"
        parameters: []
      valueType: "java.lang.RuntimeException"
      uuid: "throwable"
    branches:
    - lineNumber: 319
      expression: "this.registerShutdownHook"
      range: "(319,7)-(319,31)"
      evaluatedAs: true
    - lineNumber: 470
      expression: "hook != null"
      range: "(470,48)-(470,59)"
      evaluatedAs: false
      internalMethodName: "getRunListeners"
    - lineNumber: 471
      expression: "hookListener != null"
      range: "(471,7)-(471,26)"
      evaluatedAs: false
      internalMethodName: "getRunListeners"
    - lineNumber: 487
      expression: "this.environment != null"
      range: "(487,7)-(487,30)"
      evaluatedAs: false
      internalMethodName: "getOrCreateEnvironment"
    - lineNumber: 491
      expression: "environment == null"
      range: "(491,7)-(491,25)"
      evaluatedAs: false
      internalMethodName: "getOrCreateEnvironment"
    - lineNumber: 494
      expression: "environment != null"
      range: "(494,11)-(494,29)"
      evaluatedAs: true
      internalMethodName: "getOrCreateEnvironment"
    - lineNumber: 371
      expression: "!environment.containsProperty(\\\"spring.main.environment-prefix\\\
        \")"
      range: "(371,16)-(371,78)"
      evaluatedAs: true
      internalMethodName: "prepareEnvironment"
    - lineNumber: 374
      expression: "!this.isCustomEnvironment"
      range: "(374,7)-(374,31)"
      evaluatedAs: true
      internalMethodName: "prepareEnvironment"
    - lineNumber: 385
      expression: "environmentType == null"
      range: "(385,7)-(385,29)"
      evaluatedAs: false
      internalMethodName: "deduceEnvironmentClass"
    - lineNumber: 388
      expression: "environmentType == null"
      range: "(388,7)-(388,29)"
      evaluatedAs: false
      internalMethodName: "deduceEnvironmentClass"
    - lineNumber: 569
      expression: "this.bannerMode == Banner.Mode.OFF"
      range: "(569,7)-(569,40)"
      evaluatedAs: false
      internalMethodName: "printBanner"
    - lineNumber: 572
      expression: "this.resourceLoader != null"
      range: "(572,36)-(572,62)"
      evaluatedAs: true
      internalMethodName: "printBanner"
    - lineNumber: 575
      expression: "this.bannerMode == Mode.LOG"
      range: "(575,7)-(575,33)"
      evaluatedAs: false
      internalMethodName: "printBanner"
    - lineNumber: 436
      expression: "AotDetector.useGeneratedArtifacts()"
      range: "(436,7)-(436,41)"
      evaluatedAs: false
      internalMethodName: "addAotGeneratedInitializerIfNecessary"
    - lineNumber: 403
      expression: "this.logStartupInfo"
      range: "(403,7)-(403,25)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 404
      expression: "context.getParent() == null"
      range: "(404,19)-(404,45)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 410
      expression: "printedBanner != null"
      range: "(410,7)-(410,27)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 413
      expression: "beanFactory instanceof AbstractAutowireCapableBeanFactory autowireCapableBeanFactory"
      range: "(413,7)-(413,90)"
      evaluatedAs: false
      internalMethodName: "prepareContext"
    - lineNumber: 419
      expression: "this.lazyInitialization"
      range: "(419,7)-(419,29)"
      evaluatedAs: false
      internalMethodName: "prepareContext"
    - lineNumber: 422
      expression: "this.keepAlive"
      range: "(422,7)-(422,20)"
      evaluatedAs: false
      internalMethodName: "prepareContext"
    - lineNumber: 426
      expression: "!AotDetector.useGeneratedArtifacts()"
      range: "(426,7)-(426,42)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 453
      expression: "this.registerShutdownHook"
      range: "(453,7)-(453,31)"
      evaluatedAs: true
      internalMethodName: "refreshContext"
    - lineNumber: 337
      expression: "this.logStartupInfo"
      range: "(337,8)-(337,26)"
      evaluatedAs: true
    - lineNumber: 769
      expression: "for-each(beanNames)"
      range: "(769,26)-(769,34)"
      evaluatedAs: true
      internalMethodName: "callRunners"
    - lineNumber: 778
      expression: "beanFactory instanceof DefaultListableBeanFactory defaultListableBeanFactory"
      range: "(778,41)-(778,116)"
      evaluatedAs: false
      internalMethodName: "getOrderComparator"
    - lineNumber: 780
      expression: "dependencyComparator instanceof OrderComparator orderComparator"
      range: "(780,11)-(780,73)"
      evaluatedAs: false
      internalMethodName: "getOrderComparator"
    - lineNumber: 347
      expression: "context.isRunning()"
      range: "(347,8)-(347,26)"
      evaluatedAs: true
    - lineNumber: 351
      expression: "catch-exception (Throwable)"
      range: "(351,3)-(351,21)"
      evaluatedAs: true
    - lineNumber: 803
      expression: "exception instanceof AbandonedRunException abandonedRunException"
      range: "(803,7)-(803,70)"
      evaluatedAs: false
      internalMethodName: "handleRunFailure"
    - lineNumber: 890
      expression: "context == null"
      range: "(890,7)-(890,21)"
      evaluatedAs: false
      internalMethodName: "getExitCodeFromMappedException"
    - lineNumber: 890
      expression: "!context.isActive()"
      range: "(890,26)-(890,44)"
      evaluatedAs: false
      internalMethodName: "getExitCodeFromMappedException"
    - lineNumber: 883
      expression: "exitCode == 0"
      range: "(883,7)-(883,19)"
      evaluatedAs: false
      internalMethodName: "getExitCodeFromException"
    - lineNumber: 870
      expression: "exitCode != 0"
      range: "(870,7)-(870,19)"
      evaluatedAs: true
      internalMethodName: "handleExitCode"
    - lineNumber: 871
      expression: "context != null"
      range: "(871,8)-(871,22)"
      evaluatedAs: true
      internalMethodName: "handleExitCode"
    - lineNumber: 875
      expression: "handler != null"
      range: "(875,8)-(875,22)"
      evaluatedAs: true
      internalMethodName: "handleExitCode"
    - lineNumber: 809
      expression: "listeners != null"
      range: "(809,9)-(809,25)"
      evaluatedAs: false
      internalMethodName: "handleRunFailure"
    - lineNumber: 840
      expression: "for-each(exceptionReporters)"
      range: "(840,48)-(840,65)"
      evaluatedAs: false
      internalMethodName: "reportFailure"
    - lineNumber: 850
      expression: "logger.isErrorEnabled()"
      range: "(850,7)-(850,29)"
      evaluatedAs: false
      internalMethodName: "reportFailure"
    - lineNumber: 815
      expression: "context != null"
      range: "(815,9)-(815,23)"
      evaluatedAs: true
      internalMethodName: "handleRunFailure"
    - lineNumber: 824
      expression: "exception instanceof RuntimeException runtimeException"
      range: "(824,11)-(824,64)"
      evaluatedAs: true
      internalMethodName: "handleRunFailure"
    catchBlockExercised:
      idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Throwable"
  - pathId: "path12"
    testPathName: "runWhenLoggerNotIsErrorEnabledAndContextIsNotNullAndExceptionNotInstanceOfRuntimeException4ThrowsIllegalStateException"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "5BE2AA532B7E1912144F1C987D2B19DA"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "args"
      modelFingerprint: "62B8E965720EE46A7489315174A3A841"
      valueUuid: "args"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid233):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "E9AF26A44A758F46AEA655FC22B60195"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "20006F76B7E4788E565F04F635D4A52D"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid234,argumentResolver:uniqueUuid235):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid236,argumentResolver:uniqueUuid237):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid238,argumentResolver:uniqueUuid239):list4"
    - type: "STATIC"
      name: "SpringApplication.Startup.class"
      modelFingerprint: "DA8622EB3506E174E0335AC27132B054"
      valueUuid: "SpringApplication.Startup.class"
      methodExercised:
        expression: "create():springApplication.Startup"
        staticAccess: true
    - type: "FIELD"
      name: "shutdownHook"
      modelFingerprint: "A0CD9DC1B1C93A40FEC7031737D9BE10"
      valueUuid: "springApplicationShutdownHook"
      methodExercised:
        expression: "enableShutdownHookAddition():void2"
    - type: "LOCAL_VARIABLE"
      name: "initializer"
      modelFingerprint: "78495708A547C9C6DC2151A7C67101AC"
      valueUuid: "bootstrapRegistryInitializer"
      methodExercised:
        expression: "initialize(registry:defaultBootstrapContext):void4"
    - type: "STATIC"
      name: "SpringFactoriesLoader.ArgumentResolver.class"
      modelFingerprint: "5F0034DA74D42417617FBE94CCB6AD81"
      valueUuid: "SpringFactoriesLoader.ArgumentResolver.class"
      methodExercised:
        expression: "of(type:uniqueUuid240,value:targetClassObject):springFactoriesLoader.ArgumentResolver"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "argumentResolver"
      modelFingerprint: "900146EE10B4914AE93AEF9C5995BCEE"
      valueUuid: "springFactoriesLoader.ArgumentResolver"
      methodExercised:
        expression: "and(type:uniqueUuid241,value:args):springFactoriesLoader.ArgumentResolver2"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "27BFD3AFF61EB16D6621CC8BB9BFE4B5"
      methodExercised:
        expression: "getClassLoader():classLoader4"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader4):springFactoriesLoader4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "C997EC8D4248E2F75F459758B43838D0"
      valueUuid: "springFactoriesLoader4"
      methodExercised:
        expression: "load(factoryType:uniqueUuid242,argumentResolver:springFactoriesLoader.ArgumentResolver2):list5"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "B030C484A6C44F4577E15609B1FF871D"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "starting(bootstrapContext:defaultBootstrapContext,mainApplicationClass:uniqueUuid243):void5"
    - type: "FIELD"
      name: "applicationContextFactory"
      modelFingerprint: "25377C2471D793231A76A9AB6031E41D"
      valueUuid: "applicationContextFactory"
      methodExercised:
        expression: "createEnvironment(webApplicationType:webApplicationType):configurableEnvironment"
    - type: "LOCAL_VARIABLE"
      name: "applicationArguments"
      modelFingerprint: "029CA1B5E8067A0C5CE390F4A8056BDF"
      valueUuid: "defaultApplicationArguments"
      methodExercised:
        expression: "getSourceArgs():stringArray"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "9AE315BA684DCD841054D9F789B4F9C8"
      methodExercised:
        expression: "configureEnvironment(environment:configurableEnvironment,args:stringArray):void6"
    - type: "STATIC"
      name: "ConfigurationPropertySources.class"
      modelFingerprint: "198AC93CDFAADDE86ED9A9E49385E22B"
      valueUuid: "ConfigurationPropertySources.class"
      methodExercised:
        expression: "attach(environment:configurableEnvironment):void7"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "407EE1C198658832C82611E6341DB4C3"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "environmentPrepared(bootstrapContext:defaultBootstrapContext,environment:configurableEnvironment):void8"
    - type: "STATIC"
      name: "DefaultPropertiesPropertySource.class"
      modelFingerprint: "BD26AEAB0A6DCF2FBEC9D13E6DCCF18D"
      valueUuid: "DefaultPropertiesPropertySource.class"
      methodExercised:
        expression: "moveToEnd(environment:configurableEnvironment):void9"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "ED6C6F1CB47F3B2AD213B1B75254EE80"
      valueUuid: "configurableEnvironment"
      methodExercised:
        expression: "containsProperty(key:uniqueUuid244):boolean1"
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "2A737F0AED0B795580225C9A5C41679A"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "state(expression:uniqueUuid245,message:uniqueUuid246):void10"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "B13CEBE9A8F1B2788B7AB42A3097A2C5"
      methodExercised:
        expression: "bindToSpringApplication(environment:configurableEnvironment):void11"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "27BFD3AFF61EB16D6621CC8BB9BFE4B5"
      methodExercised:
        expression: "getClassLoader():classLoader5"
    - type: "FIELD"
      name: "applicationContextFactory"
      modelFingerprint: "E66E002C0664721A8E15A73F90157A41"
      valueUuid: "applicationContextFactory"
      methodExercised:
        expression: "getEnvironmentType(webApplicationType:webApplicationType):class"
    - type: "LOCAL_VARIABLE"
      name: "environmentConverter"
      modelFingerprint: "343C8C898CBFF5B474786F8CF0AAD484"
      valueUuid: "environmentConverter"
      methodExercised:
        expression: "convertEnvironmentIfNecessary(environment:configurableEnvironment,type:class):configurableEnvironment2"
    - type: "STATIC"
      name: "ConfigurationPropertySources.class"
      modelFingerprint: "EACBD1DB13877D4CE7F99FB1A2712485"
      valueUuid: "ConfigurationPropertySources.class"
      methodExercised:
        expression: "attach(environment:configurableEnvironment2):void12"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "bannerPrinter"
      modelFingerprint: "C34FDF50A774C67D859D410B0CBAE87D"
      valueUuid: "springApplicationBannerPrinter"
      methodExercised:
        expression: "print(environment:configurableEnvironment2,sourceClass:uniqueUuid247,out:printStream):banner"
    - type: "FIELD"
      name: "applicationContextFactory"
      modelFingerprint: "EEC42AEF38C02991C940B2D3733A5914"
      valueUuid: "applicationContextFactory"
      methodExercised:
        expression: "create(webApplicationType:webApplicationType):configurableApplicationContext"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "C4457CBF6543DA61B3CC571D7855BC05"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "setApplicationStartup(applicationStartup:applicationStartup):void13"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "5D002C96109647C03179CDE3D65E6842"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "setEnvironment(environment:configurableEnvironment2):void14"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "F7247F20B4DB91E482D564DC0E3EE670"
      methodExercised:
        expression: "postProcessApplicationContext(context:configurableApplicationContext):void15"
    - type: "STATIC"
      name: "AotDetector.class.real"
      modelFingerprint: "A651F35C9CB1BB4329EA23C459C95680"
      valueUuid: "AotDetector.class.real"
      methodExercised:
        expression: "useGeneratedArtifacts():boolean2"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "2629F473285A8D2B3BDA80841BE1B13C"
      methodExercised:
        expression: "applyInitializers(context:configurableApplicationContext):void16"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "F25700EBA48DFBE78B5458FCD3EB4646"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "contextPrepared(context:configurableApplicationContext):void17"
    - type: "LOCAL_VARIABLE"
      name: "bootstrapContext"
      modelFingerprint: "909D947F9D1DDC6DDEA8500941736C94"
      valueUuid: "defaultBootstrapContext"
      methodExercised:
        expression: "close(applicationContext:configurableApplicationContext):void18"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "5E3904425938E13844EB71188213737A"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "getParent():applicationContext"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "AC62DBB448DDE3961AAF97490A0B542D"
      methodExercised:
        expression: "logStartupInfo(isRoot:uniqueUuid249):void19"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "7204D97E17BC4435BDF63B535ED64B97"
      methodExercised:
        expression: "logStartupProfileInfo(context:configurableApplicationContext):void20"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "6A01AAC3461FC3A19CF28FB5CC4FB9E4"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "7107C791919372E064D179B76AC9C5E9"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "registerSingleton(beanName:uniqueUuid250,singletonObject:defaultApplicationArguments):void21"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "5929567A6EF90B10D083B285E48F4D3D"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "registerSingleton(beanName:uniqueUuid251,singletonObject:banner):void22"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "69034248F39E1300FEF9D04C0504E01A"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "addBeanFactoryPostProcessor(postProcessor:beanFactoryPostProcessor):void23"
    - type: "STATIC"
      name: "AotDetector.class.real"
      modelFingerprint: "A651F35C9CB1BB4329EA23C459C95680"
      valueUuid: "AotDetector.class.real"
      methodExercised:
        expression: "useGeneratedArtifacts():boolean4"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "504C2B18FD5DE35DA01916EC347AB7B1"
      methodExercised:
        expression: "getAllSources():set2"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A2E059860C5C45B44F0B7F9AA4D95BDB"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notEmpty(collection:set2,message:uniqueUuid253):void24"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "91ACBEFD431AA6FB4341C4C76B033E1D"
      methodExercised:
        expression: "load(context:configurableApplicationContext,sources:objectArray2):void25"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "9DAE3D234F2CD76AACDE8442BC6EE4A6"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "contextLoaded(context:configurableApplicationContext):void26"
    - type: "FIELD"
      name: "shutdownHook"
      modelFingerprint: "955744B9BBBD449D14979830C226B3DB"
      valueUuid: "springApplicationShutdownHook"
      methodExercised:
        expression: "registerApplicationContext(context:configurableApplicationContext):void27"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "01A9466B1E33218E3C0D5F4F6DD218E7"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "refresh():void28"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      name: "startup"
      modelFingerprint: "9514A429A770044AEBDFB50062B30B4D"
      valueUuid: "springApplication.Startup"
      methodExercised:
        expression: "started():duration"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "FE5D2BC90EC0B24D7B85FD4D1CDFF78B"
      methodExercised:
        expression: "getApplicationLog():log2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "31F4778FC7271F5256CA0997FCC61AFA"
      valueUuid: "startupInfoLogger"
      methodExercised:
        expression: "logStarted(applicationLog:log2,startup:springApplication.Startup):void29"
    - type: "LOCAL_VARIABLE"
      name: "startup"
      modelFingerprint: "8632254D8D53E67F9906077923095FAF"
      valueUuid: "springApplication.Startup"
      methodExercised:
        expression: "timeTakenToStarted():duration2"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "676CA2E0A33FFC3648204E1B59D55045"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "started(context:configurableApplicationContext,timeTaken:duration2):void30"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "6A01AAC3461FC3A19CF28FB5CC4FB9E4"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory2"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "8A57C6E79097BE70207C443A51A26E7F"
      valueUuid: "configurableListableBeanFactory2"
      methodExercised:
        expression: "getBeanNamesForType(type:uniqueUuid255):stringArray2"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "049356A3DCD2541F910927E5E31BCA20"
      valueUuid: "configurableListableBeanFactory2"
      methodExercised:
        expression: "getBean(name:string4,requiredType:uniqueUuid256):object4"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "9FB5A4AC1406067842215F6E568A3B04"
      valueUuid: "annotationAwareOrderComparator"
      methodExercised:
        expression: "withSourceProvider(sourceProvider:orderComparator.OrderSourceProvider):comparator"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "9CED159BA79A476605AD8BA424104DFA"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "isActive():boolean8"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "7377F3E4ED65050BD45162EA264FB1F6"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "publishEvent(event:exitCodeEvent):void32"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "9348C2FCC8DE8D8A578963FF61E5E05C"
      methodExercised:
        expression: "getSpringBootExceptionHandler():springBootExceptionHandler"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "0F906B2B465F3CD8D46982F877651C2F"
      valueUuid: "springBootExceptionHandler"
      methodExercised:
        expression: "registerExitCode(exitCode:int12):void33"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "BFD49A591BE0838CB06560CD62419E8E"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "failed(context:configurableApplicationContext,exception:throwable):void34"
    - type: "STATIC"
      name: "SpringFactoriesLoader.ArgumentResolver.class"
      modelFingerprint: "70429A3A1E9B472C8BD20C617647BDFE"
      valueUuid: "SpringFactoriesLoader.ArgumentResolver.class"
      methodExercised:
        expression: "of(type:uniqueUuid257,value:configurableApplicationContext):springFactoriesLoader.ArgumentResolver3"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "27BFD3AFF61EB16D6621CC8BB9BFE4B5"
      methodExercised:
        expression: "getClassLoader():classLoader6"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader6):springFactoriesLoader5"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "89391FA8E64C49BEE40846C385407C94"
      valueUuid: "springFactoriesLoader5"
      methodExercised:
        expression: "load(factoryType:uniqueUuid258,argumentResolver:springFactoriesLoader.ArgumentResolver3):list6"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "C2E3D1F0AC456BC4B0896B03B086FB0F"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "close():void35"
    - type: "FIELD"
      name: "shutdownHook"
      modelFingerprint: "D5B0EC1BADB2B19C635663B4FCF72382"
      valueUuid: "springApplicationShutdownHook"
      methodExercised:
        expression: "deregisterFailedApplicationContext(applicationContext:configurableApplicationContext):void36"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "935257BFE3AC06C4CE7A5C522FE58531"
      valueUuid: "illegalStateException"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
        propertiesMap:
          applicationContextFactory:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ApplicationContextFactory"
            uuid: "applicationContextFactory"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid233"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "REACTIVE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "bootstrapRegistryInitializer"
          collectionUuid: "arrayList"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid234"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid235"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid236"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid237"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid238"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid239"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "SpringApplication.Startup.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationShutdownHook"
        parameters: []
      valueType: "org.springframework.boot.SpringApplicationShutdownHook"
      uuid: "springApplicationShutdownHook"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "bootstrapRegistryInitializer"
      collectionUuid: "arrayList"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "SpringFactoriesLoader.ArgumentResolver.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.SpringApplication"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.SpringApplication"
      uuid: "uniqueUuid240"
      fixed: true
    - sapientType: "THIS"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String[]"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.String[]"
      uuid: "uniqueUuid241"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader4"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader4"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader4"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader4"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.SpringApplicationRunListener"
      uuid: "list5"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.SpringApplicationRunListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.SpringApplicationRunListener"
      uuid: "uniqueUuid242"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      uuid: "uniqueUuid243"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "applicationContextFactory"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "ENUM"
      content: !<regular>
        value: "REACTIVE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.DefaultApplicationArguments"
        parameters:
        - name: "args"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "args"
      valueType: "org.springframework.boot.DefaultApplicationArguments"
      uuid: "defaultApplicationArguments"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "ConfigurationPropertySources.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.DefaultPropertiesPropertySource"
      uuid: "DefaultPropertiesPropertySource.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "spring.main.environment-prefix"
      valueType: "java.lang.String"
      uuid: "uniqueUuid244"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid245"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Environment prefix cannot be set via properties."
      valueType: "java.lang.String"
      uuid: "uniqueUuid246"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void11"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "applicationContextFactory"
    - sapientType: "CLASS"
      content: !<regular>
        value: "? extends org.springframework.core.env.ConfigurableEnvironment"
      valueType: "java.lang.Class"
      genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
      uuid: "class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "REACTIVE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.EnvironmentConverter"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "classLoader5"
      valueType: "org.springframework.boot.EnvironmentConverter"
      uuid: "environmentConverter"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ApplicationContextFactory"
                uuid: "applicationContextFactory"
              methodParameters:
              - name: "webApplicationType"
                value:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "REACTIVE"
                  valueType: "org.springframework.boot.WebApplicationType"
                  uuid: "webApplicationType"
              methodName: "createEnvironment"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "? extends org.springframework.core.env.ConfigurableEnvironment"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "CLASS"
      content: !<regular>
        value: "? extends org.springframework.core.env.ConfigurableEnvironment"
      valueType: "java.lang.Class"
      genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "ConfigurationPropertySources.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void12"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ApplicationContextFactory"
                uuid: "applicationContextFactory"
              methodParameters:
              - name: "webApplicationType"
                value:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "REACTIVE"
                  valueType: "org.springframework.boot.WebApplicationType"
                  uuid: "webApplicationType"
              methodName: "createEnvironment"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "? extends org.springframework.core.env.ConfigurableEnvironment"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationBannerPrinter"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "fallbackBanner"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.Banner"
            uuid: "fieldBanner"
      valueType: "org.springframework.boot.SpringApplicationBannerPrinter"
      uuid: "springApplicationBannerPrinter"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.Banner"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.SpringApplicationBannerPrinter"
            parameters:
            - name: "resourceLoader"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.core.io.ResourceLoader"
                uuid: "resourceLoader"
            - name: "fallbackBanner"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.Banner"
                uuid: "fieldBanner"
          valueType: "org.springframework.boot.SpringApplicationBannerPrinter"
          uuid: "springApplicationBannerPrinter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.EnvironmentConverter"
                  parameters:
                  - name: "classLoader"
                    value:
                      sapientType: "OBJECT"
                      content: !<static_method_return>
                        target: "java.lang.ClassLoader"
                        method: "getPlatformClassLoader"
                        methodParameters: []
                      valueType: "java.lang.ClassLoader"
                      uuid: "classLoader5"
                valueType: "org.springframework.boot.EnvironmentConverter"
                uuid: "environmentConverter"
                fixed: true
              methodParameters:
              - name: "environment"
                value:
                  sapientType: "OBJECT"
                  content: !<method_return_from_value>
                    target: "org.springframework.core.env.ConfigurableEnvironment"
                    localVariableValue:
                      sapientType: "MOCK"
                      valueType: "org.springframework.boot.ApplicationContextFactory"
                      uuid: "applicationContextFactory"
                    methodParameters:
                    - name: "webApplicationType"
                      value:
                        sapientType: "ENUM"
                        content: !<regular>
                          value: "REACTIVE"
                        valueType: "org.springframework.boot.WebApplicationType"
                        uuid: "webApplicationType"
                    methodName: "createEnvironment"
                  valueType: "org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "configurableEnvironment"
              - name: "type"
                value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "? extends org.springframework.core.env.ConfigurableEnvironment"
                  valueType: "java.lang.Class"
                  genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "class"
              methodName: "convertEnvironmentIfNecessary"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment2"
        - name: "sourceClass"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            uuid: "uniqueUuid248"
            explicitCastNeeded: true
        - name: "out"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "java.lang.System"
              fieldName: "out"
            valueType: "java.io.PrintStream"
            uuid: "printStream"
        methodName: "print"
      valueType: "org.springframework.boot.Banner"
      uuid: "banner"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ApplicationContextFactory"
                uuid: "applicationContextFactory"
              methodParameters:
              - name: "webApplicationType"
                value:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "REACTIVE"
                  valueType: "org.springframework.boot.WebApplicationType"
                  uuid: "webApplicationType"
              methodName: "createEnvironment"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "? extends org.springframework.core.env.ConfigurableEnvironment"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      uuid: "uniqueUuid247"
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "java.lang.System"
        fieldName: "out"
      valueType: "java.io.PrintStream"
      uuid: "printStream"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "applicationContextFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "ENUM"
      content: !<regular>
        value: "REACTIVE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void13"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.core.metrics.ApplicationStartup"
        fieldName: "DEFAULT"
      valueType: "org.springframework.core.metrics.ApplicationStartup"
      uuid: "applicationStartup"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void14"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ApplicationContextFactory"
                uuid: "applicationContextFactory"
              methodParameters:
              - name: "webApplicationType"
                value:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "REACTIVE"
                  valueType: "org.springframework.boot.WebApplicationType"
                  uuid: "webApplicationType"
              methodName: "createEnvironment"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "? extends org.springframework.core.env.ConfigurableEnvironment"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void15"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "REAL"
      valueType: "org.springframework.aot.AotDetector"
      uuid: "AotDetector.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void16"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void17"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.DefaultBootstrapContext"
        parameters: []
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void18"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "NULL"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void19"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid249"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void20"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void21"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "springApplicationArguments"
      valueType: "java.lang.String"
      uuid: "uniqueUuid250"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultApplicationArguments"
      uuid: "defaultApplicationArguments"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void22"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "springBootBanner"
      valueType: "java.lang.String"
      uuid: "uniqueUuid251"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.Banner"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.SpringApplicationBannerPrinter"
            parameters:
            - name: "resourceLoader"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.core.io.ResourceLoader"
                uuid: "resourceLoader"
            - name: "fallbackBanner"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.Banner"
                uuid: "fieldBanner"
          valueType: "org.springframework.boot.SpringApplicationBannerPrinter"
          uuid: "springApplicationBannerPrinter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.EnvironmentConverter"
                  parameters:
                  - name: "classLoader"
                    value:
                      sapientType: "OBJECT"
                      content: !<static_method_return>
                        target: "java.lang.ClassLoader"
                        method: "getPlatformClassLoader"
                        methodParameters: []
                      valueType: "java.lang.ClassLoader"
                      uuid: "classLoader5"
                valueType: "org.springframework.boot.EnvironmentConverter"
                uuid: "environmentConverter"
                fixed: true
              methodParameters:
              - name: "environment"
                value:
                  sapientType: "OBJECT"
                  content: !<method_return_from_value>
                    target: "org.springframework.core.env.ConfigurableEnvironment"
                    localVariableValue:
                      sapientType: "MOCK"
                      valueType: "org.springframework.boot.ApplicationContextFactory"
                      uuid: "applicationContextFactory"
                    methodParameters:
                    - name: "webApplicationType"
                      value:
                        sapientType: "ENUM"
                        content: !<regular>
                          value: "REACTIVE"
                        valueType: "org.springframework.boot.WebApplicationType"
                        uuid: "webApplicationType"
                    methodName: "createEnvironment"
                  valueType: "org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "configurableEnvironment"
              - name: "type"
                value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "? extends org.springframework.core.env.ConfigurableEnvironment"
                  valueType: "java.lang.Class"
                  genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "class"
              methodName: "convertEnvironmentIfNecessary"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment2"
        - name: "sourceClass"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            uuid: "uniqueUuid252"
            explicitCastNeeded: true
        - name: "out"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "java.lang.System"
              fieldName: "out"
            valueType: "java.io.PrintStream"
            uuid: "printStream"
        methodName: "print"
      valueType: "org.springframework.boot.Banner"
      uuid: "banner"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void23"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.beans.factory.config.BeanFactoryPostProcessor"
      uuid: "beanFactoryPostProcessor"
    - sapientType: "REAL"
      valueType: "org.springframework.aot.AotDetector"
      uuid: "AotDetector.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.Object"
      uuid: "set2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void24"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.Object"
      uuid: "set2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be empty"
      valueType: "java.lang.String"
      uuid: "uniqueUuid253"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void25"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Object[]"
      uuid: "objectArray2"
      collectionUuid: "set2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void26"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationShutdownHook"
        parameters: []
      valueType: "org.springframework.boot.SpringApplicationShutdownHook"
      uuid: "springApplicationShutdownHook"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void27"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void28"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration-days"
      valueType: "java.time.Duration"
      uuid: "duration"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "log2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.StartupInfoLogger"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            uuid: "uniqueUuid254"
            explicitCastNeeded: true
      valueType: "org.springframework.boot.StartupInfoLogger"
      uuid: "startupInfoLogger"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void29"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "log2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration2-days"
      valueType: "java.time.Duration"
      uuid: "duration2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void30"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration2-days"
      valueType: "java.time.Duration"
      uuid: "duration2"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getBeanNamesForTypeItem1"
            valueType: "java.lang.String"
            uuid: "string4"
      valueType: "java.lang.String[]"
      uuid: "stringArray2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.Runner"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.Runner"
      uuid: "uniqueUuid255"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.Runner"
      uuid: "object4"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanNamesForTypeItem1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.Runner"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.Runner"
      uuid: "uniqueUuid256"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
        fieldName: "INSTANCE"
      valueType: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
      uuid: "annotationAwareOrderComparator"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.util.Comparator"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<static_field_return>
            target: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
            fieldName: "INSTANCE"
          valueType: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
          uuid: "annotationAwareOrderComparator"
        methodParameters:
        - name: "sourceProvider"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "org.springframework.core.OrderComparator$OrderSourceProvider"
            uuid: "orderComparator.OrderSourceProvider"
        methodName: "withSourceProvider"
      valueType: "java.util.Comparator"
      genericValueType: "java.lang.Object"
      uuid: "comparator"
    - sapientType: "ANY"
      valueType: "org.springframework.core.OrderComparator$OrderSourceProvider"
      uuid: "orderComparator.OrderSourceProvider"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean8"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void32"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.ExitCodeEvent"
      uuid: "exitCodeEvent"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringBootExceptionHandler"
      uuid: "springBootExceptionHandler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringBootExceptionHandler"
      uuid: "springBootExceptionHandler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void33"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: -1
      valueType: "int"
      uuid: "int12"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void34"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "message1"
            valueType: "java.lang.String"
            uuid: "throwable-message"
        - name: "cause"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Throwable"
            uuid: "cause"
      valueType: "java.lang.Throwable"
      uuid: "throwable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "SpringFactoriesLoader.ArgumentResolver.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ConfigurableApplicationContext"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "uniqueUuid257"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader6"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader5"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader6"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader5"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.SpringBootExceptionReporter"
      uuid: "list6"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.SpringBootExceptionReporter"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.SpringBootExceptionReporter"
      uuid: "uniqueUuid258"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver3"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void35"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationShutdownHook"
        parameters: []
      valueType: "org.springframework.boot.SpringApplicationShutdownHook"
      uuid: "springApplicationShutdownHook"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void36"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Throwable"
              parameters:
              - name: "message"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "message1"
                  valueType: "java.lang.String"
                  uuid: "throwable-message"
              - name: "cause"
                value:
                  sapientType: "NULL"
                  valueType: "java.lang.Throwable"
                  uuid: "cause"
            valueType: "java.lang.Throwable"
            uuid: "throwable"
      valueType: "java.lang.IllegalStateException"
      uuid: "illegalStateException"
      fixed: true
    branches:
    - lineNumber: 319
      expression: "this.registerShutdownHook"
      range: "(319,7)-(319,31)"
      evaluatedAs: true
    - lineNumber: 470
      expression: "hook != null"
      range: "(470,48)-(470,59)"
      evaluatedAs: false
      internalMethodName: "getRunListeners"
    - lineNumber: 471
      expression: "hookListener != null"
      range: "(471,7)-(471,26)"
      evaluatedAs: false
      internalMethodName: "getRunListeners"
    - lineNumber: 487
      expression: "this.environment != null"
      range: "(487,7)-(487,30)"
      evaluatedAs: false
      internalMethodName: "getOrCreateEnvironment"
    - lineNumber: 491
      expression: "environment == null"
      range: "(491,7)-(491,25)"
      evaluatedAs: false
      internalMethodName: "getOrCreateEnvironment"
    - lineNumber: 494
      expression: "environment != null"
      range: "(494,11)-(494,29)"
      evaluatedAs: true
      internalMethodName: "getOrCreateEnvironment"
    - lineNumber: 371
      expression: "!environment.containsProperty(\\\"spring.main.environment-prefix\\\
        \")"
      range: "(371,16)-(371,78)"
      evaluatedAs: true
      internalMethodName: "prepareEnvironment"
    - lineNumber: 374
      expression: "!this.isCustomEnvironment"
      range: "(374,7)-(374,31)"
      evaluatedAs: true
      internalMethodName: "prepareEnvironment"
    - lineNumber: 385
      expression: "environmentType == null"
      range: "(385,7)-(385,29)"
      evaluatedAs: false
      internalMethodName: "deduceEnvironmentClass"
    - lineNumber: 388
      expression: "environmentType == null"
      range: "(388,7)-(388,29)"
      evaluatedAs: false
      internalMethodName: "deduceEnvironmentClass"
    - lineNumber: 569
      expression: "this.bannerMode == Banner.Mode.OFF"
      range: "(569,7)-(569,40)"
      evaluatedAs: false
      internalMethodName: "printBanner"
    - lineNumber: 572
      expression: "this.resourceLoader != null"
      range: "(572,36)-(572,62)"
      evaluatedAs: true
      internalMethodName: "printBanner"
    - lineNumber: 575
      expression: "this.bannerMode == Mode.LOG"
      range: "(575,7)-(575,33)"
      evaluatedAs: false
      internalMethodName: "printBanner"
    - lineNumber: 436
      expression: "AotDetector.useGeneratedArtifacts()"
      range: "(436,7)-(436,41)"
      evaluatedAs: false
      internalMethodName: "addAotGeneratedInitializerIfNecessary"
    - lineNumber: 403
      expression: "this.logStartupInfo"
      range: "(403,7)-(403,25)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 404
      expression: "context.getParent() == null"
      range: "(404,19)-(404,45)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 410
      expression: "printedBanner != null"
      range: "(410,7)-(410,27)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 413
      expression: "beanFactory instanceof AbstractAutowireCapableBeanFactory autowireCapableBeanFactory"
      range: "(413,7)-(413,90)"
      evaluatedAs: false
      internalMethodName: "prepareContext"
    - lineNumber: 419
      expression: "this.lazyInitialization"
      range: "(419,7)-(419,29)"
      evaluatedAs: false
      internalMethodName: "prepareContext"
    - lineNumber: 422
      expression: "this.keepAlive"
      range: "(422,7)-(422,20)"
      evaluatedAs: false
      internalMethodName: "prepareContext"
    - lineNumber: 426
      expression: "!AotDetector.useGeneratedArtifacts()"
      range: "(426,7)-(426,42)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 453
      expression: "this.registerShutdownHook"
      range: "(453,7)-(453,31)"
      evaluatedAs: true
      internalMethodName: "refreshContext"
    - lineNumber: 337
      expression: "this.logStartupInfo"
      range: "(337,8)-(337,26)"
      evaluatedAs: true
    - lineNumber: 769
      expression: "for-each(beanNames)"
      range: "(769,26)-(769,34)"
      evaluatedAs: true
      internalMethodName: "callRunners"
    - lineNumber: 778
      expression: "beanFactory instanceof DefaultListableBeanFactory defaultListableBeanFactory"
      range: "(778,41)-(778,116)"
      evaluatedAs: false
      internalMethodName: "getOrderComparator"
    - lineNumber: 780
      expression: "dependencyComparator instanceof OrderComparator orderComparator"
      range: "(780,11)-(780,73)"
      evaluatedAs: false
      internalMethodName: "getOrderComparator"
    - lineNumber: 343
      expression: "catch-exception (Throwable)"
      range: "(343,3)-(343,21)"
      evaluatedAs: true
    - lineNumber: 803
      expression: "exception instanceof AbandonedRunException abandonedRunException"
      range: "(803,7)-(803,70)"
      evaluatedAs: false
      internalMethodName: "handleRunFailure"
    - lineNumber: 890
      expression: "context == null"
      range: "(890,7)-(890,21)"
      evaluatedAs: false
      internalMethodName: "getExitCodeFromMappedException"
    - lineNumber: 890
      expression: "!context.isActive()"
      range: "(890,26)-(890,44)"
      evaluatedAs: true
      internalMethodName: "getExitCodeFromMappedException"
    - lineNumber: 883
      expression: "exitCode == 0"
      range: "(883,7)-(883,19)"
      evaluatedAs: true
      internalMethodName: "getExitCodeFromException"
    - lineNumber: 900
      expression: "exception == null"
      range: "(900,7)-(900,23)"
      evaluatedAs: false
      internalMethodName: "getExitCodeFromExitCodeGeneratorException"
    - lineNumber: 903
      expression: "exception instanceof ExitCodeGenerator generator"
      range: "(903,7)-(903,54)"
      evaluatedAs: false
      internalMethodName: "getExitCodeFromExitCodeGeneratorException"
    - lineNumber: 870
      expression: "exitCode != 0"
      range: "(870,7)-(870,19)"
      evaluatedAs: true
      internalMethodName: "handleExitCode"
    - lineNumber: 871
      expression: "context != null"
      range: "(871,8)-(871,22)"
      evaluatedAs: true
      internalMethodName: "handleExitCode"
    - lineNumber: 875
      expression: "handler != null"
      range: "(875,8)-(875,22)"
      evaluatedAs: true
      internalMethodName: "handleExitCode"
    - lineNumber: 809
      expression: "listeners != null"
      range: "(809,9)-(809,25)"
      evaluatedAs: true
      internalMethodName: "handleRunFailure"
    - lineNumber: 840
      expression: "for-each(exceptionReporters)"
      range: "(840,48)-(840,65)"
      evaluatedAs: false
      internalMethodName: "reportFailure"
    - lineNumber: 850
      expression: "logger.isErrorEnabled()"
      range: "(850,7)-(850,29)"
      evaluatedAs: false
      internalMethodName: "reportFailure"
    - lineNumber: 815
      expression: "context != null"
      range: "(815,9)-(815,23)"
      evaluatedAs: true
      internalMethodName: "handleRunFailure"
    - lineNumber: 824
      expression: "exception instanceof RuntimeException runtimeException"
      range: "(824,11)-(824,64)"
      evaluatedAs: false
      internalMethodName: "handleRunFailure"
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Throwable"
  - pathId: "path18"
    testPathName: "runWhenLoggerNotIsErrorEnabledAndContextIsNotNullAndExceptionNotInstanceOfRuntimeException5ThrowsIllegalStateException"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "86347EFE5628BD247229A111039033F1"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "args"
      modelFingerprint: "62B8E965720EE46A7489315174A3A841"
      valueUuid: "args"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid259):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "E9AF26A44A758F46AEA655FC22B60195"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "20006F76B7E4788E565F04F635D4A52D"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid260,argumentResolver:uniqueUuid261):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid262,argumentResolver:uniqueUuid263):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid264,argumentResolver:uniqueUuid265):list4"
    - type: "STATIC"
      name: "SpringApplication.Startup.class"
      modelFingerprint: "DA8622EB3506E174E0335AC27132B054"
      valueUuid: "SpringApplication.Startup.class"
      methodExercised:
        expression: "create():springApplication.Startup"
        staticAccess: true
    - type: "FIELD"
      name: "shutdownHook"
      modelFingerprint: "A0CD9DC1B1C93A40FEC7031737D9BE10"
      valueUuid: "springApplicationShutdownHook"
      methodExercised:
        expression: "enableShutdownHookAddition():void2"
    - type: "LOCAL_VARIABLE"
      name: "initializer"
      modelFingerprint: "78495708A547C9C6DC2151A7C67101AC"
      valueUuid: "bootstrapRegistryInitializer"
      methodExercised:
        expression: "initialize(registry:defaultBootstrapContext):void4"
    - type: "STATIC"
      name: "SpringFactoriesLoader.ArgumentResolver.class"
      modelFingerprint: "5F0034DA74D42417617FBE94CCB6AD81"
      valueUuid: "SpringFactoriesLoader.ArgumentResolver.class"
      methodExercised:
        expression: "of(type:uniqueUuid266,value:targetClassObject):springFactoriesLoader.ArgumentResolver"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "argumentResolver"
      modelFingerprint: "900146EE10B4914AE93AEF9C5995BCEE"
      valueUuid: "springFactoriesLoader.ArgumentResolver"
      methodExercised:
        expression: "and(type:uniqueUuid267,value:args):springFactoriesLoader.ArgumentResolver2"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "27BFD3AFF61EB16D6621CC8BB9BFE4B5"
      methodExercised:
        expression: "getClassLoader():classLoader4"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader4):springFactoriesLoader4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "C997EC8D4248E2F75F459758B43838D0"
      valueUuid: "springFactoriesLoader4"
      methodExercised:
        expression: "load(factoryType:uniqueUuid268,argumentResolver:springFactoriesLoader.ArgumentResolver2):list5"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "B030C484A6C44F4577E15609B1FF871D"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "starting(bootstrapContext:defaultBootstrapContext,mainApplicationClass:uniqueUuid269):void5"
    - type: "FIELD"
      name: "applicationContextFactory"
      modelFingerprint: "25377C2471D793231A76A9AB6031E41D"
      valueUuid: "applicationContextFactory"
      methodExercised:
        expression: "createEnvironment(webApplicationType:webApplicationType):configurableEnvironment"
    - type: "LOCAL_VARIABLE"
      name: "applicationArguments"
      modelFingerprint: "029CA1B5E8067A0C5CE390F4A8056BDF"
      valueUuid: "defaultApplicationArguments"
      methodExercised:
        expression: "getSourceArgs():stringArray"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "9AE315BA684DCD841054D9F789B4F9C8"
      methodExercised:
        expression: "configureEnvironment(environment:configurableEnvironment,args:stringArray):void6"
    - type: "STATIC"
      name: "ConfigurationPropertySources.class"
      modelFingerprint: "198AC93CDFAADDE86ED9A9E49385E22B"
      valueUuid: "ConfigurationPropertySources.class"
      methodExercised:
        expression: "attach(environment:configurableEnvironment):void7"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "407EE1C198658832C82611E6341DB4C3"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "environmentPrepared(bootstrapContext:defaultBootstrapContext,environment:configurableEnvironment):void8"
    - type: "STATIC"
      name: "DefaultPropertiesPropertySource.class"
      modelFingerprint: "BD26AEAB0A6DCF2FBEC9D13E6DCCF18D"
      valueUuid: "DefaultPropertiesPropertySource.class"
      methodExercised:
        expression: "moveToEnd(environment:configurableEnvironment):void9"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "ED6C6F1CB47F3B2AD213B1B75254EE80"
      valueUuid: "configurableEnvironment"
      methodExercised:
        expression: "containsProperty(key:uniqueUuid270):boolean1"
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "2A737F0AED0B795580225C9A5C41679A"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "state(expression:uniqueUuid271,message:uniqueUuid272):void10"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "B13CEBE9A8F1B2788B7AB42A3097A2C5"
      methodExercised:
        expression: "bindToSpringApplication(environment:configurableEnvironment):void11"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "27BFD3AFF61EB16D6621CC8BB9BFE4B5"
      methodExercised:
        expression: "getClassLoader():classLoader5"
    - type: "FIELD"
      name: "applicationContextFactory"
      modelFingerprint: "E66E002C0664721A8E15A73F90157A41"
      valueUuid: "applicationContextFactory"
      methodExercised:
        expression: "getEnvironmentType(webApplicationType:webApplicationType):class"
    - type: "LOCAL_VARIABLE"
      name: "environmentConverter"
      modelFingerprint: "343C8C898CBFF5B474786F8CF0AAD484"
      valueUuid: "environmentConverter"
      methodExercised:
        expression: "convertEnvironmentIfNecessary(environment:configurableEnvironment,type:class):configurableEnvironment2"
    - type: "STATIC"
      name: "ConfigurationPropertySources.class"
      modelFingerprint: "EACBD1DB13877D4CE7F99FB1A2712485"
      valueUuid: "ConfigurationPropertySources.class"
      methodExercised:
        expression: "attach(environment:configurableEnvironment2):void12"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "bannerPrinter"
      modelFingerprint: "C34FDF50A774C67D859D410B0CBAE87D"
      valueUuid: "springApplicationBannerPrinter"
      methodExercised:
        expression: "print(environment:configurableEnvironment2,sourceClass:uniqueUuid273,out:printStream):banner"
    - type: "FIELD"
      name: "applicationContextFactory"
      modelFingerprint: "EEC42AEF38C02991C940B2D3733A5914"
      valueUuid: "applicationContextFactory"
      methodExercised:
        expression: "create(webApplicationType:webApplicationType):configurableApplicationContext"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "C4457CBF6543DA61B3CC571D7855BC05"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "setApplicationStartup(applicationStartup:applicationStartup):void13"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "5D002C96109647C03179CDE3D65E6842"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "setEnvironment(environment:configurableEnvironment2):void14"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "F7247F20B4DB91E482D564DC0E3EE670"
      methodExercised:
        expression: "postProcessApplicationContext(context:configurableApplicationContext):void15"
    - type: "STATIC"
      name: "AotDetector.class.real"
      modelFingerprint: "A651F35C9CB1BB4329EA23C459C95680"
      valueUuid: "AotDetector.class.real"
      methodExercised:
        expression: "useGeneratedArtifacts():boolean2"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "2629F473285A8D2B3BDA80841BE1B13C"
      methodExercised:
        expression: "applyInitializers(context:configurableApplicationContext):void16"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "F25700EBA48DFBE78B5458FCD3EB4646"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "contextPrepared(context:configurableApplicationContext):void17"
    - type: "LOCAL_VARIABLE"
      name: "bootstrapContext"
      modelFingerprint: "909D947F9D1DDC6DDEA8500941736C94"
      valueUuid: "defaultBootstrapContext"
      methodExercised:
        expression: "close(applicationContext:configurableApplicationContext):void18"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "5E3904425938E13844EB71188213737A"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "getParent():applicationContext"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "AC62DBB448DDE3961AAF97490A0B542D"
      methodExercised:
        expression: "logStartupInfo(isRoot:uniqueUuid275):void19"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "7204D97E17BC4435BDF63B535ED64B97"
      methodExercised:
        expression: "logStartupProfileInfo(context:configurableApplicationContext):void20"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "6A01AAC3461FC3A19CF28FB5CC4FB9E4"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "7107C791919372E064D179B76AC9C5E9"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "registerSingleton(beanName:uniqueUuid276,singletonObject:defaultApplicationArguments):void21"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "5929567A6EF90B10D083B285E48F4D3D"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "registerSingleton(beanName:uniqueUuid277,singletonObject:banner):void22"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "69034248F39E1300FEF9D04C0504E01A"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "addBeanFactoryPostProcessor(postProcessor:beanFactoryPostProcessor):void23"
    - type: "STATIC"
      name: "AotDetector.class.real"
      modelFingerprint: "A651F35C9CB1BB4329EA23C459C95680"
      valueUuid: "AotDetector.class.real"
      methodExercised:
        expression: "useGeneratedArtifacts():boolean4"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "504C2B18FD5DE35DA01916EC347AB7B1"
      methodExercised:
        expression: "getAllSources():set2"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A2E059860C5C45B44F0B7F9AA4D95BDB"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notEmpty(collection:set2,message:uniqueUuid279):void24"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "91ACBEFD431AA6FB4341C4C76B033E1D"
      methodExercised:
        expression: "load(context:configurableApplicationContext,sources:objectArray2):void25"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "9DAE3D234F2CD76AACDE8442BC6EE4A6"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "contextLoaded(context:configurableApplicationContext):void26"
    - type: "FIELD"
      name: "shutdownHook"
      modelFingerprint: "955744B9BBBD449D14979830C226B3DB"
      valueUuid: "springApplicationShutdownHook"
      methodExercised:
        expression: "registerApplicationContext(context:configurableApplicationContext):void27"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "01A9466B1E33218E3C0D5F4F6DD218E7"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "refresh():void28"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      name: "startup"
      modelFingerprint: "9514A429A770044AEBDFB50062B30B4D"
      valueUuid: "springApplication.Startup"
      methodExercised:
        expression: "started():duration"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "FE5D2BC90EC0B24D7B85FD4D1CDFF78B"
      methodExercised:
        expression: "getApplicationLog():log2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "31F4778FC7271F5256CA0997FCC61AFA"
      valueUuid: "startupInfoLogger"
      methodExercised:
        expression: "logStarted(applicationLog:log2,startup:springApplication.Startup):void29"
    - type: "LOCAL_VARIABLE"
      name: "startup"
      modelFingerprint: "8632254D8D53E67F9906077923095FAF"
      valueUuid: "springApplication.Startup"
      methodExercised:
        expression: "timeTakenToStarted():duration2"
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "676CA2E0A33FFC3648204E1B59D55045"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "started(context:configurableApplicationContext,timeTaken:duration2):void30"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "6A01AAC3461FC3A19CF28FB5CC4FB9E4"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory2"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "8A57C6E79097BE70207C443A51A26E7F"
      valueUuid: "configurableListableBeanFactory2"
      methodExercised:
        expression: "getBeanNamesForType(type:uniqueUuid281):stringArray2"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "049356A3DCD2541F910927E5E31BCA20"
      valueUuid: "configurableListableBeanFactory2"
      methodExercised:
        expression: "getBean(name:string4,requiredType:uniqueUuid282):object4"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "9FB5A4AC1406067842215F6E568A3B04"
      valueUuid: "annotationAwareOrderComparator"
      methodExercised:
        expression: "withSourceProvider(sourceProvider:orderComparator.OrderSourceProvider):comparator"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "DA96E3F9148FB8FFC04C9940573B9AF4"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "isRunning():boolean7"
    - type: "LOCAL_VARIABLE"
      name: "startup"
      modelFingerprint: "617185A19112E6053002DE8AAB9AA7F5"
      valueUuid: "springApplication.Startup"
      methodExercised:
        expression: "ready():duration3"
        privateAccess: true
    - type: "LOCAL_VARIABLE"
      name: "listeners"
      modelFingerprint: "71FA1946CACE39932158601FC2224A60"
      valueUuid: "springApplicationRunListeners"
      methodExercised:
        expression: "ready(context:configurableApplicationContext,timeTaken:duration3):void32"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "9CED159BA79A476605AD8BA424104DFA"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "isActive():boolean9"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "7377F3E4ED65050BD45162EA264FB1F6"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "publishEvent(event:exitCodeEvent):void33"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "9348C2FCC8DE8D8A578963FF61E5E05C"
      methodExercised:
        expression: "getSpringBootExceptionHandler():springBootExceptionHandler"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "0F906B2B465F3CD8D46982F877651C2F"
      valueUuid: "springBootExceptionHandler"
      methodExercised:
        expression: "registerExitCode(exitCode:int12):void34"
    - type: "STATIC"
      name: "SpringFactoriesLoader.ArgumentResolver.class"
      modelFingerprint: "70429A3A1E9B472C8BD20C617647BDFE"
      valueUuid: "SpringFactoriesLoader.ArgumentResolver.class"
      methodExercised:
        expression: "of(type:uniqueUuid283,value:configurableApplicationContext):springFactoriesLoader.ArgumentResolver3"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "27BFD3AFF61EB16D6621CC8BB9BFE4B5"
      methodExercised:
        expression: "getClassLoader():classLoader6"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader6):springFactoriesLoader5"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "89391FA8E64C49BEE40846C385407C94"
      valueUuid: "springFactoriesLoader5"
      methodExercised:
        expression: "load(factoryType:uniqueUuid284,argumentResolver:springFactoriesLoader.ArgumentResolver3):list6"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "C2E3D1F0AC456BC4B0896B03B086FB0F"
      valueUuid: "configurableApplicationContext"
      methodExercised:
        expression: "close():void35"
    - type: "FIELD"
      name: "shutdownHook"
      modelFingerprint: "D5B0EC1BADB2B19C635663B4FCF72382"
      valueUuid: "springApplicationShutdownHook"
      methodExercised:
        expression: "deregisterFailedApplicationContext(applicationContext:configurableApplicationContext):void36"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "935257BFE3AC06C4CE7A5C522FE58531"
      valueUuid: "illegalStateException"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
        propertiesMap:
          applicationContextFactory:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ApplicationContextFactory"
            uuid: "applicationContextFactory"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid259"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "REACTIVE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "bootstrapRegistryInitializer"
          collectionUuid: "arrayList"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid260"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid261"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid262"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid263"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid264"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid265"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "SpringApplication.Startup.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationShutdownHook"
        parameters: []
      valueType: "org.springframework.boot.SpringApplicationShutdownHook"
      uuid: "springApplicationShutdownHook"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "bootstrapRegistryInitializer"
      collectionUuid: "arrayList"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "SpringFactoriesLoader.ArgumentResolver.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.SpringApplication"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.SpringApplication"
      uuid: "uniqueUuid266"
      fixed: true
    - sapientType: "THIS"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String[]"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.String[]"
      uuid: "uniqueUuid267"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader4"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader4"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader4"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader4"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.SpringApplicationRunListener"
      uuid: "list5"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.SpringApplicationRunListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.SpringApplicationRunListener"
      uuid: "uniqueUuid268"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      uuid: "uniqueUuid269"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "applicationContextFactory"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "ENUM"
      content: !<regular>
        value: "REACTIVE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.DefaultApplicationArguments"
        parameters:
        - name: "args"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "args"
      valueType: "org.springframework.boot.DefaultApplicationArguments"
      uuid: "defaultApplicationArguments"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "ConfigurationPropertySources.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.DefaultPropertiesPropertySource"
      uuid: "DefaultPropertiesPropertySource.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "spring.main.environment-prefix"
      valueType: "java.lang.String"
      uuid: "uniqueUuid270"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid271"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Environment prefix cannot be set via properties."
      valueType: "java.lang.String"
      uuid: "uniqueUuid272"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void11"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "applicationContextFactory"
    - sapientType: "CLASS"
      content: !<regular>
        value: "? extends org.springframework.core.env.ConfigurableEnvironment"
      valueType: "java.lang.Class"
      genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
      uuid: "class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "REACTIVE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.EnvironmentConverter"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "classLoader5"
      valueType: "org.springframework.boot.EnvironmentConverter"
      uuid: "environmentConverter"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ApplicationContextFactory"
                uuid: "applicationContextFactory"
              methodParameters:
              - name: "webApplicationType"
                value:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "REACTIVE"
                  valueType: "org.springframework.boot.WebApplicationType"
                  uuid: "webApplicationType"
              methodName: "createEnvironment"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "? extends org.springframework.core.env.ConfigurableEnvironment"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "createEnvironment"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "CLASS"
      content: !<regular>
        value: "? extends org.springframework.core.env.ConfigurableEnvironment"
      valueType: "java.lang.Class"
      genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "ConfigurationPropertySources.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void12"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ApplicationContextFactory"
                uuid: "applicationContextFactory"
              methodParameters:
              - name: "webApplicationType"
                value:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "REACTIVE"
                  valueType: "org.springframework.boot.WebApplicationType"
                  uuid: "webApplicationType"
              methodName: "createEnvironment"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "? extends org.springframework.core.env.ConfigurableEnvironment"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationBannerPrinter"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "fallbackBanner"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.Banner"
            uuid: "fieldBanner"
      valueType: "org.springframework.boot.SpringApplicationBannerPrinter"
      uuid: "springApplicationBannerPrinter"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.Banner"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.SpringApplicationBannerPrinter"
            parameters:
            - name: "resourceLoader"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.core.io.ResourceLoader"
                uuid: "resourceLoader"
            - name: "fallbackBanner"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.Banner"
                uuid: "fieldBanner"
          valueType: "org.springframework.boot.SpringApplicationBannerPrinter"
          uuid: "springApplicationBannerPrinter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.EnvironmentConverter"
                  parameters:
                  - name: "classLoader"
                    value:
                      sapientType: "OBJECT"
                      content: !<static_method_return>
                        target: "java.lang.ClassLoader"
                        method: "getPlatformClassLoader"
                        methodParameters: []
                      valueType: "java.lang.ClassLoader"
                      uuid: "classLoader5"
                valueType: "org.springframework.boot.EnvironmentConverter"
                uuid: "environmentConverter"
                fixed: true
              methodParameters:
              - name: "environment"
                value:
                  sapientType: "OBJECT"
                  content: !<method_return_from_value>
                    target: "org.springframework.core.env.ConfigurableEnvironment"
                    localVariableValue:
                      sapientType: "MOCK"
                      valueType: "org.springframework.boot.ApplicationContextFactory"
                      uuid: "applicationContextFactory"
                    methodParameters:
                    - name: "webApplicationType"
                      value:
                        sapientType: "ENUM"
                        content: !<regular>
                          value: "REACTIVE"
                        valueType: "org.springframework.boot.WebApplicationType"
                        uuid: "webApplicationType"
                    methodName: "createEnvironment"
                  valueType: "org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "configurableEnvironment"
              - name: "type"
                value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "? extends org.springframework.core.env.ConfigurableEnvironment"
                  valueType: "java.lang.Class"
                  genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "class"
              methodName: "convertEnvironmentIfNecessary"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment2"
        - name: "sourceClass"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            uuid: "uniqueUuid274"
            explicitCastNeeded: true
        - name: "out"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "java.lang.System"
              fieldName: "out"
            valueType: "java.io.PrintStream"
            uuid: "printStream"
        methodName: "print"
      valueType: "org.springframework.boot.Banner"
      uuid: "banner"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ApplicationContextFactory"
                uuid: "applicationContextFactory"
              methodParameters:
              - name: "webApplicationType"
                value:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "REACTIVE"
                  valueType: "org.springframework.boot.WebApplicationType"
                  uuid: "webApplicationType"
              methodName: "createEnvironment"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "? extends org.springframework.core.env.ConfigurableEnvironment"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      uuid: "uniqueUuid273"
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "java.lang.System"
        fieldName: "out"
      valueType: "java.io.PrintStream"
      uuid: "printStream"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "applicationContextFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "ENUM"
      content: !<regular>
        value: "REACTIVE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void13"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.core.metrics.ApplicationStartup"
        fieldName: "DEFAULT"
      valueType: "org.springframework.core.metrics.ApplicationStartup"
      uuid: "applicationStartup"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void14"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.ConfigurableEnvironment"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.EnvironmentConverter"
            parameters:
            - name: "classLoader"
              value:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "java.lang.ClassLoader"
                  method: "getPlatformClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader5"
          valueType: "org.springframework.boot.EnvironmentConverter"
          uuid: "environmentConverter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.ApplicationContextFactory"
                uuid: "applicationContextFactory"
              methodParameters:
              - name: "webApplicationType"
                value:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "REACTIVE"
                  valueType: "org.springframework.boot.WebApplicationType"
                  uuid: "webApplicationType"
              methodName: "createEnvironment"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "? extends org.springframework.core.env.ConfigurableEnvironment"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
            uuid: "class"
        methodName: "convertEnvironmentIfNecessary"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void15"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "REAL"
      valueType: "org.springframework.aot.AotDetector"
      uuid: "AotDetector.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void16"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void17"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.DefaultBootstrapContext"
        parameters: []
      valueType: "org.springframework.boot.DefaultBootstrapContext"
      uuid: "defaultBootstrapContext"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void18"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "NULL"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void19"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid275"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void20"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void21"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "springApplicationArguments"
      valueType: "java.lang.String"
      uuid: "uniqueUuid276"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.DefaultApplicationArguments"
      uuid: "defaultApplicationArguments"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void22"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "springBootBanner"
      valueType: "java.lang.String"
      uuid: "uniqueUuid277"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.Banner"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.SpringApplicationBannerPrinter"
            parameters:
            - name: "resourceLoader"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.core.io.ResourceLoader"
                uuid: "resourceLoader"
            - name: "fallbackBanner"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.Banner"
                uuid: "fieldBanner"
          valueType: "org.springframework.boot.SpringApplicationBannerPrinter"
          uuid: "springApplicationBannerPrinter"
          fixed: true
        methodParameters:
        - name: "environment"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.springframework.core.env.ConfigurableEnvironment"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.EnvironmentConverter"
                  parameters:
                  - name: "classLoader"
                    value:
                      sapientType: "OBJECT"
                      content: !<static_method_return>
                        target: "java.lang.ClassLoader"
                        method: "getPlatformClassLoader"
                        methodParameters: []
                      valueType: "java.lang.ClassLoader"
                      uuid: "classLoader5"
                valueType: "org.springframework.boot.EnvironmentConverter"
                uuid: "environmentConverter"
                fixed: true
              methodParameters:
              - name: "environment"
                value:
                  sapientType: "OBJECT"
                  content: !<method_return_from_value>
                    target: "org.springframework.core.env.ConfigurableEnvironment"
                    localVariableValue:
                      sapientType: "MOCK"
                      valueType: "org.springframework.boot.ApplicationContextFactory"
                      uuid: "applicationContextFactory"
                    methodParameters:
                    - name: "webApplicationType"
                      value:
                        sapientType: "ENUM"
                        content: !<regular>
                          value: "REACTIVE"
                        valueType: "org.springframework.boot.WebApplicationType"
                        uuid: "webApplicationType"
                    methodName: "createEnvironment"
                  valueType: "org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "configurableEnvironment"
              - name: "type"
                value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "? extends org.springframework.core.env.ConfigurableEnvironment"
                  valueType: "java.lang.Class"
                  genericValueType: "? extends org.springframework.core.env.ConfigurableEnvironment"
                  uuid: "class"
              methodName: "convertEnvironmentIfNecessary"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "configurableEnvironment2"
        - name: "sourceClass"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            uuid: "uniqueUuid278"
            explicitCastNeeded: true
        - name: "out"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "java.lang.System"
              fieldName: "out"
            valueType: "java.io.PrintStream"
            uuid: "printStream"
        methodName: "print"
      valueType: "org.springframework.boot.Banner"
      uuid: "banner"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void23"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.beans.factory.config.BeanFactoryPostProcessor"
      uuid: "beanFactoryPostProcessor"
    - sapientType: "REAL"
      valueType: "org.springframework.aot.AotDetector"
      uuid: "AotDetector.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.Object"
      uuid: "set2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void24"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.Object"
      uuid: "set2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be empty"
      valueType: "java.lang.String"
      uuid: "uniqueUuid279"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void25"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Object[]"
      uuid: "objectArray2"
      collectionUuid: "set2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void26"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationShutdownHook"
        parameters: []
      valueType: "org.springframework.boot.SpringApplicationShutdownHook"
      uuid: "springApplicationShutdownHook"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void27"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void28"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration-days"
      valueType: "java.time.Duration"
      uuid: "duration"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "log2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.StartupInfoLogger"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            uuid: "uniqueUuid280"
            explicitCastNeeded: true
      valueType: "org.springframework.boot.StartupInfoLogger"
      uuid: "startupInfoLogger"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void29"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "log2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration2-days"
      valueType: "java.time.Duration"
      uuid: "duration2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void30"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration2-days"
      valueType: "java.time.Duration"
      uuid: "duration2"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getBeanNamesForTypeItem1"
            valueType: "java.lang.String"
            uuid: "string4"
      valueType: "java.lang.String[]"
      uuid: "stringArray2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.Runner"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.Runner"
      uuid: "uniqueUuid281"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.Runner"
      uuid: "object4"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanNamesForTypeItem1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.Runner"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.Runner"
      uuid: "uniqueUuid282"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
        fieldName: "INSTANCE"
      valueType: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
      uuid: "annotationAwareOrderComparator"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.util.Comparator"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<static_field_return>
            target: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
            fieldName: "INSTANCE"
          valueType: "org.springframework.core.annotation.AnnotationAwareOrderComparator"
          uuid: "annotationAwareOrderComparator"
        methodParameters:
        - name: "sourceProvider"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "org.springframework.core.OrderComparator$OrderSourceProvider"
            uuid: "orderComparator.OrderSourceProvider"
        methodName: "withSourceProvider"
      valueType: "java.util.Comparator"
      genericValueType: "java.lang.Object"
      uuid: "comparator"
    - sapientType: "ANY"
      valueType: "org.springframework.core.OrderComparator$OrderSourceProvider"
      uuid: "orderComparator.OrderSourceProvider"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication$Startup"
      uuid: "springApplication.Startup"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration3-days"
      valueType: "java.time.Duration"
      uuid: "duration3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationRunListeners"
        parameters:
        - name: "log"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.SpringApplication"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.SpringApplication"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "listeners"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.SpringApplicationRunListener"
            uuid: "list5"
        - name: "applicationStartup"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.core.metrics.ApplicationStartup"
              fieldName: "DEFAULT"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup"
      valueType: "org.springframework.boot.SpringApplicationRunListeners"
      uuid: "springApplicationRunListeners"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void32"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "duration3-days"
      valueType: "java.time.Duration"
      uuid: "duration3"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean9"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void33"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.ExitCodeEvent"
      uuid: "exitCodeEvent"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringBootExceptionHandler"
      uuid: "springBootExceptionHandler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringBootExceptionHandler"
      uuid: "springBootExceptionHandler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void34"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: -1
      valueType: "int"
      uuid: "int12"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "SpringFactoriesLoader.ArgumentResolver.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ConfigurableApplicationContext"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "uniqueUuid283"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader6"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader5"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader6"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader5"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.SpringBootExceptionReporter"
      uuid: "list6"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.SpringBootExceptionReporter"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.SpringBootExceptionReporter"
      uuid: "uniqueUuid284"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver3"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void35"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationShutdownHook"
        parameters: []
      valueType: "org.springframework.boot.SpringApplicationShutdownHook"
      uuid: "springApplicationShutdownHook"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void36"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Throwable"
              parameters:
              - name: "message"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "message1"
                  valueType: "java.lang.String"
                  uuid: "throwable-message"
              - name: "cause"
                value:
                  sapientType: "NULL"
                  valueType: "java.lang.Throwable"
                  uuid: "cause"
            valueType: "java.lang.Throwable"
            uuid: "throwable"
      valueType: "java.lang.IllegalStateException"
      uuid: "illegalStateException"
      fixed: true
    branches:
    - lineNumber: 319
      expression: "this.registerShutdownHook"
      range: "(319,7)-(319,31)"
      evaluatedAs: true
    - lineNumber: 470
      expression: "hook != null"
      range: "(470,48)-(470,59)"
      evaluatedAs: false
      internalMethodName: "getRunListeners"
    - lineNumber: 471
      expression: "hookListener != null"
      range: "(471,7)-(471,26)"
      evaluatedAs: false
      internalMethodName: "getRunListeners"
    - lineNumber: 487
      expression: "this.environment != null"
      range: "(487,7)-(487,30)"
      evaluatedAs: false
      internalMethodName: "getOrCreateEnvironment"
    - lineNumber: 491
      expression: "environment == null"
      range: "(491,7)-(491,25)"
      evaluatedAs: false
      internalMethodName: "getOrCreateEnvironment"
    - lineNumber: 494
      expression: "environment != null"
      range: "(494,11)-(494,29)"
      evaluatedAs: true
      internalMethodName: "getOrCreateEnvironment"
    - lineNumber: 371
      expression: "!environment.containsProperty(\\\"spring.main.environment-prefix\\\
        \")"
      range: "(371,16)-(371,78)"
      evaluatedAs: true
      internalMethodName: "prepareEnvironment"
    - lineNumber: 374
      expression: "!this.isCustomEnvironment"
      range: "(374,7)-(374,31)"
      evaluatedAs: true
      internalMethodName: "prepareEnvironment"
    - lineNumber: 385
      expression: "environmentType == null"
      range: "(385,7)-(385,29)"
      evaluatedAs: false
      internalMethodName: "deduceEnvironmentClass"
    - lineNumber: 388
      expression: "environmentType == null"
      range: "(388,7)-(388,29)"
      evaluatedAs: false
      internalMethodName: "deduceEnvironmentClass"
    - lineNumber: 569
      expression: "this.bannerMode == Banner.Mode.OFF"
      range: "(569,7)-(569,40)"
      evaluatedAs: false
      internalMethodName: "printBanner"
    - lineNumber: 572
      expression: "this.resourceLoader != null"
      range: "(572,36)-(572,62)"
      evaluatedAs: true
      internalMethodName: "printBanner"
    - lineNumber: 575
      expression: "this.bannerMode == Mode.LOG"
      range: "(575,7)-(575,33)"
      evaluatedAs: false
      internalMethodName: "printBanner"
    - lineNumber: 436
      expression: "AotDetector.useGeneratedArtifacts()"
      range: "(436,7)-(436,41)"
      evaluatedAs: false
      internalMethodName: "addAotGeneratedInitializerIfNecessary"
    - lineNumber: 403
      expression: "this.logStartupInfo"
      range: "(403,7)-(403,25)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 404
      expression: "context.getParent() == null"
      range: "(404,19)-(404,45)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 410
      expression: "printedBanner != null"
      range: "(410,7)-(410,27)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 413
      expression: "beanFactory instanceof AbstractAutowireCapableBeanFactory autowireCapableBeanFactory"
      range: "(413,7)-(413,90)"
      evaluatedAs: false
      internalMethodName: "prepareContext"
    - lineNumber: 419
      expression: "this.lazyInitialization"
      range: "(419,7)-(419,29)"
      evaluatedAs: false
      internalMethodName: "prepareContext"
    - lineNumber: 422
      expression: "this.keepAlive"
      range: "(422,7)-(422,20)"
      evaluatedAs: false
      internalMethodName: "prepareContext"
    - lineNumber: 426
      expression: "!AotDetector.useGeneratedArtifacts()"
      range: "(426,7)-(426,42)"
      evaluatedAs: true
      internalMethodName: "prepareContext"
    - lineNumber: 453
      expression: "this.registerShutdownHook"
      range: "(453,7)-(453,31)"
      evaluatedAs: true
      internalMethodName: "refreshContext"
    - lineNumber: 337
      expression: "this.logStartupInfo"
      range: "(337,8)-(337,26)"
      evaluatedAs: true
    - lineNumber: 769
      expression: "for-each(beanNames)"
      range: "(769,26)-(769,34)"
      evaluatedAs: true
      internalMethodName: "callRunners"
    - lineNumber: 778
      expression: "beanFactory instanceof DefaultListableBeanFactory defaultListableBeanFactory"
      range: "(778,41)-(778,116)"
      evaluatedAs: false
      internalMethodName: "getOrderComparator"
    - lineNumber: 780
      expression: "dependencyComparator instanceof OrderComparator orderComparator"
      range: "(780,11)-(780,73)"
      evaluatedAs: false
      internalMethodName: "getOrderComparator"
    - lineNumber: 347
      expression: "context.isRunning()"
      range: "(347,8)-(347,26)"
      evaluatedAs: true
    - lineNumber: 351
      expression: "catch-exception (Throwable)"
      range: "(351,3)-(351,21)"
      evaluatedAs: true
    - lineNumber: 803
      expression: "exception instanceof AbandonedRunException abandonedRunException"
      range: "(803,7)-(803,70)"
      evaluatedAs: false
      internalMethodName: "handleRunFailure"
    - lineNumber: 890
      expression: "context == null"
      range: "(890,7)-(890,21)"
      evaluatedAs: false
      internalMethodName: "getExitCodeFromMappedException"
    - lineNumber: 890
      expression: "!context.isActive()"
      range: "(890,26)-(890,44)"
      evaluatedAs: true
      internalMethodName: "getExitCodeFromMappedException"
    - lineNumber: 883
      expression: "exitCode == 0"
      range: "(883,7)-(883,19)"
      evaluatedAs: true
      internalMethodName: "getExitCodeFromException"
    - lineNumber: 900
      expression: "exception == null"
      range: "(900,7)-(900,23)"
      evaluatedAs: false
      internalMethodName: "getExitCodeFromExitCodeGeneratorException"
    - lineNumber: 903
      expression: "exception instanceof ExitCodeGenerator generator"
      range: "(903,7)-(903,54)"
      evaluatedAs: false
      internalMethodName: "getExitCodeFromExitCodeGeneratorException"
    - lineNumber: 870
      expression: "exitCode != 0"
      range: "(870,7)-(870,19)"
      evaluatedAs: true
      internalMethodName: "handleExitCode"
    - lineNumber: 871
      expression: "context != null"
      range: "(871,8)-(871,22)"
      evaluatedAs: true
      internalMethodName: "handleExitCode"
    - lineNumber: 875
      expression: "handler != null"
      range: "(875,8)-(875,22)"
      evaluatedAs: true
      internalMethodName: "handleExitCode"
    - lineNumber: 809
      expression: "listeners != null"
      range: "(809,9)-(809,25)"
      evaluatedAs: false
      internalMethodName: "handleRunFailure"
    - lineNumber: 840
      expression: "for-each(exceptionReporters)"
      range: "(840,48)-(840,65)"
      evaluatedAs: false
      internalMethodName: "reportFailure"
    - lineNumber: 850
      expression: "logger.isErrorEnabled()"
      range: "(850,7)-(850,29)"
      evaluatedAs: false
      internalMethodName: "reportFailure"
    - lineNumber: 815
      expression: "context != null"
      range: "(815,9)-(815,23)"
      evaluatedAs: true
      internalMethodName: "handleRunFailure"
    - lineNumber: 824
      expression: "exception instanceof RuntimeException runtimeException"
      range: "(824,11)-(824,64)"
      evaluatedAs: false
      internalMethodName: "handleRunFailure"
    catchBlockExercised:
      idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Throwable"
- method:
    name: "configureEnvironment"
    sourceCodeSignature: "void configureEnvironment(ConfigurableEnvironment environment,\
      \ String[] args)"
    returnType: "void"
    parameters:
    - name: "environment"
      type: "org.springframework.core.env.ConfigurableEnvironment"
    - name: "args"
      type: "java.lang.String[]"
    instructionFingerprint: "36D481FC0CA5F01E0EAA1F365D6D7B10"
  paths:
  - pathId: "path1"
    testPathName: "configureEnvironmentWhenThisAddConversionService"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "42CCF569DECADCEC77246F8883F3C457"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "environment"
      modelFingerprint: "2AB40C7309B23844284816875A86BEFD"
      valueUuid: "environment"
    - type: "INPUT"
      name: "args"
      modelFingerprint: "62B8E965720EE46A7489315174A3A841"
      valueUuid: "args"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid285):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "C320B20653A22B9C646F1A3191D75758"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A85230F96F7FEDC299CF0684987CBF30"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid286,argumentResolver:uniqueUuid287):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid288,argumentResolver:uniqueUuid289):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid290,argumentResolver:uniqueUuid291):list4"
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "E2FA828A5FD0D75795A8B707A6C2B951"
      valueUuid: "environment"
      methodExercised:
        expression: "setConversionService(conversionService:applicationConversionService):void2"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "140003845023B1ECCF3E414AFD317E78"
      methodExercised:
        expression: "configurePropertySources(environment:environment,args:args):void3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid285"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "arrayListItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid286"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid287"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid288"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid289"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid290"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid291"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.convert.ApplicationConversionService"
      uuid: "applicationConversionService"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 509
      expression: "this.addConversionService"
      range: "(509,7)-(509,31)"
      evaluatedAs: true
- method:
    name: "configurePropertySources"
    sourceCodeSignature: "void configurePropertySources(ConfigurableEnvironment environment,\
      \ String[] args)"
    returnType: "void"
    parameters:
    - name: "environment"
      type: "org.springframework.core.env.ConfigurableEnvironment"
    - name: "args"
      type: "java.lang.String[]"
    instructionFingerprint: "ACA20DF70611EE0BA3BF2F0F03263E3E"
  paths:
  - pathId: "path1"
    testPathName: "configurePropertySourcesWhenSourcesContainsName"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "E65285707569C4A7499EE1A53F880928"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "environment"
      modelFingerprint: "2AB40C7309B23844284816875A86BEFD"
      valueUuid: "environment"
    - type: "INPUT"
      name: "args"
      modelFingerprint: "471555BC2B6C05B2C6B276207CC83F3E"
      valueUuid: "args"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid292):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "C320B20653A22B9C646F1A3191D75758"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A85230F96F7FEDC299CF0684987CBF30"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid293,argumentResolver:uniqueUuid294):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid295,argumentResolver:uniqueUuid296):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid297,argumentResolver:uniqueUuid298):list4"
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "E97B1B215647A456976BAD20E92F84F8"
      valueUuid: "environment"
      methodExercised:
        expression: "getPropertySources():mutablePropertySources"
    - type: "STATIC"
      name: "CollectionUtils.class.real"
      modelFingerprint: "097706136E324118FB28164C6DE1DBA3"
      valueUuid: "CollectionUtils.class.real"
      methodExercised:
        expression: "isEmpty(map:fieldMap):boolean1"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "sources"
      modelFingerprint: "FA162C7618E490ACCDE05C8F6B10ABAA"
      valueUuid: "mutablePropertySources"
      methodExercised:
        expression: "contains(name:string):boolean2"
    - type: "LOCAL_VARIABLE"
      name: "sources"
      modelFingerprint: "EEE6DFA6DBA46AC8248AADF5C6FEA513"
      valueUuid: "mutablePropertySources"
      methodExercised:
        expression: "get(name:string):propertySource"
    - type: "LOCAL_VARIABLE"
      name: "composite"
      modelFingerprint: "3B9D1337A66CA3F72E17B2C96F5ADBF0"
      valueUuid: "compositePropertySource"
      methodExercised:
        expression: "addPropertySource(propertySource:simpleCommandLinePropertySource):void2"
    - type: "LOCAL_VARIABLE"
      name: "composite"
      modelFingerprint: "7D416BC08BD0B3C59EE0DC97C0D2A0D3"
      valueUuid: "compositePropertySource"
      methodExercised:
        expression: "addPropertySource(propertySource:propertySource):void3"
    - type: "LOCAL_VARIABLE"
      name: "sources"
      modelFingerprint: "2F3E4FB206A83FF27A466665347F81F5"
      valueUuid: "mutablePropertySources"
      methodExercised:
        expression: "replace(name:string,propertySource:compositePropertySource):void4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "argsItem1"
            valueType: "java.lang.String"
            uuid: "argsItem0"
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid292"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "arrayListItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid293"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid294"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid295"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid296"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid297"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid298"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "REAL"
      valueType: "org.springframework.util.CollectionUtils"
      uuid: "CollectionUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "NULL"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "fieldMap"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "commandLineArgs"
      valueType: "java.lang.String"
      uuid: "string"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertySource"
      genericValueType: "?"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "commandLineArgs"
      valueType: "java.lang.String"
      uuid: "string"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.core.env.CompositePropertySource"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "commandLineArgs"
            valueType: "java.lang.String"
            uuid: "string"
            fixed: true
      valueType: "org.springframework.core.env.CompositePropertySource"
      uuid: "compositePropertySource"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.core.env.SimpleCommandLinePropertySource"
      uuid: "simpleCommandLinePropertySource"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.core.env.CompositePropertySource"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "commandLineArgs"
            valueType: "java.lang.String"
            uuid: "string"
            fixed: true
      valueType: "org.springframework.core.env.CompositePropertySource"
      uuid: "compositePropertySource"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertySource"
      genericValueType: "?"
      uuid: "propertySource"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "commandLineArgs"
      valueType: "java.lang.String"
      uuid: "string"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.core.env.CompositePropertySource"
      uuid: "compositePropertySource"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 525
      expression: "!CollectionUtils.isEmpty(this.defaultProperties)"
      range: "(525,7)-(525,54)"
      evaluatedAs: false
    - lineNumber: 528
      expression: "this.addCommandLineProperties"
      range: "(528,7)-(528,35)"
      evaluatedAs: true
    - lineNumber: 528
      expression: "args.length > 0"
      range: "(528,40)-(528,54)"
      evaluatedAs: true
    - lineNumber: 530
      expression: "sources.contains(name)"
      range: "(530,8)-(530,29)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "configurePropertySourcesWhenSourcesNotContainsName"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "7254265E55514AC3336CF07239DF541F"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "environment"
      modelFingerprint: "2AB40C7309B23844284816875A86BEFD"
      valueUuid: "environment"
    - type: "INPUT"
      name: "args"
      modelFingerprint: "471555BC2B6C05B2C6B276207CC83F3E"
      valueUuid: "args"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid300):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "C320B20653A22B9C646F1A3191D75758"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A85230F96F7FEDC299CF0684987CBF30"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid301,argumentResolver:uniqueUuid302):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid303,argumentResolver:uniqueUuid304):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid305,argumentResolver:uniqueUuid306):list4"
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "E97B1B215647A456976BAD20E92F84F8"
      valueUuid: "environment"
      methodExercised:
        expression: "getPropertySources():mutablePropertySources"
    - type: "STATIC"
      name: "CollectionUtils.class.real"
      modelFingerprint: "097706136E324118FB28164C6DE1DBA3"
      valueUuid: "CollectionUtils.class.real"
      methodExercised:
        expression: "isEmpty(map:fieldMap):boolean1"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "sources"
      modelFingerprint: "F7EE789795E935910A9C3E780C0FA7DF"
      valueUuid: "mutablePropertySources"
      methodExercised:
        expression: "contains(name:string):boolean2"
    - type: "LOCAL_VARIABLE"
      name: "sources"
      modelFingerprint: "CB9D806F83EA427C169E4161937600B2"
      valueUuid: "mutablePropertySources"
      methodExercised:
        expression: "addFirst(propertySource:simpleCommandLinePropertySource):void2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "argsItem1"
            valueType: "java.lang.String"
            uuid: "argsItem0"
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid300"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "arrayListItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid301"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid302"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid303"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid304"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid305"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid306"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "REAL"
      valueType: "org.springframework.util.CollectionUtils"
      uuid: "CollectionUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "NULL"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "fieldMap"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "commandLineArgs"
      valueType: "java.lang.String"
      uuid: "string"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.core.env.SimpleCommandLinePropertySource"
      uuid: "simpleCommandLinePropertySource"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 525
      expression: "!CollectionUtils.isEmpty(this.defaultProperties)"
      range: "(525,7)-(525,54)"
      evaluatedAs: false
    - lineNumber: 528
      expression: "this.addCommandLineProperties"
      range: "(528,7)-(528,35)"
      evaluatedAs: true
    - lineNumber: 528
      expression: "args.length > 0"
      range: "(528,40)-(528,54)"
      evaluatedAs: true
    - lineNumber: 530
      expression: "sources.contains(name)"
      range: "(530,8)-(530,29)"
      evaluatedAs: false
- method:
    name: "configureProfiles"
    sourceCodeSignature: "void configureProfiles(ConfigurableEnvironment environment,\
      \ String[] args)"
    returnType: "void"
    parameters:
    - name: "environment"
      type: "org.springframework.core.env.ConfigurableEnvironment"
    - name: "args"
      type: "java.lang.String[]"
    instructionFingerprint: "1509E91B92784B1BB564F0E687D22D4A"
  paths:
  - pathId: "path1"
    testPathName: "configureProfilesTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "A2D9E408E156860DE1B6F3D201EFF82E"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues: []
- method:
    name: "bindToSpringApplication"
    sourceCodeSignature: "void bindToSpringApplication(ConfigurableEnvironment environment)"
    returnType: "void"
    parameters:
    - name: "environment"
      type: "org.springframework.core.env.ConfigurableEnvironment"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 3
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "3E515F661205CADC96EE5145BC88889B"
  paths:
  - pathId: "path1"
    testPathName: "bindToSpringApplicationTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "D1DADC38AFE60166D1D851C84AD274F8"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "environment"
      modelFingerprint: "3F73E3E0E26E26EEEFAD4DD95D3AE3D4"
      valueUuid: "environment"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid314):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "C320B20653A22B9C646F1A3191D75758"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A85230F96F7FEDC299CF0684987CBF30"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid315,argumentResolver:uniqueUuid316):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid317,argumentResolver:uniqueUuid318):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid319,argumentResolver:uniqueUuid320):list4"
    - type: "STATIC"
      name: "Binder.class"
      modelFingerprint: "E3F8DFDCDD3BF8F6213238E0F38BB0FA"
      valueUuid: "Binder.class"
      methodExercised:
        expression: "get(environment:environment):binder"
        staticAccess: true
    - type: "STATIC"
      name: "Bindable.class"
      modelFingerprint: "61983C1EC36093B8134568267BD06DCE"
      valueUuid: "Bindable.class"
      methodExercised:
        expression: "ofInstance(instance:targetClassObject):bindable"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "2EE9D2186B01355D271009F687CE6B72"
      valueUuid: "binder"
      methodExercised:
        expression: "bind(name:uniqueUuid321,target:bindable):bindResult"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid314"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "arrayListItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid315"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid316"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid317"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid318"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid319"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid320"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "Binder.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "binder"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "Bindable.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "org.springframework.boot.SpringApplication"
      uuid: "bindable"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "binder"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "bindResult"
    - sapientType: "BASIC"
      content: !<regular>
        value: "spring.main"
      valueType: "java.lang.String"
      uuid: "uniqueUuid321"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "org.springframework.boot.SpringApplication"
      uuid: "bindable"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
  - pathId: "path2"
    testPathName: "bindToSpringApplicationWhenCaughtExceptionThrowsIllegalStateException"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "23B234905DF26ECBDABD5BB52721FCDC"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "environment"
      modelFingerprint: "3F73E3E0E26E26EEEFAD4DD95D3AE3D4"
      valueUuid: "environment"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid322):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "C320B20653A22B9C646F1A3191D75758"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A85230F96F7FEDC299CF0684987CBF30"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid323,argumentResolver:uniqueUuid324):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid325,argumentResolver:uniqueUuid326):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid327,argumentResolver:uniqueUuid328):list4"
    - type: "STATIC"
      name: "Binder.class"
      modelFingerprint: "E3F8DFDCDD3BF8F6213238E0F38BB0FA"
      valueUuid: "Binder.class"
      methodExercised:
        expression: "get(environment:environment):binder"
        staticAccess: true
    - type: "STATIC"
      name: "Bindable.class"
      modelFingerprint: "61983C1EC36093B8134568267BD06DCE"
      valueUuid: "Bindable.class"
      methodExercised:
        expression: "ofInstance(instance:targetClassObject):bindable"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "2EE9D2186B01355D271009F687CE6B72"
      valueUuid: "binder"
      methodExercised:
        expression: "bind(name:uniqueUuid329,target:bindable):bindResult"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "276A8A0B0B497CF220D0A7CF0B51E784"
      valueUuid: "illegalStateException"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid322"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "arrayListItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid323"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid324"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid325"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid326"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid327"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid328"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "Binder.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "binder"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "Bindable.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "org.springframework.boot.SpringApplication"
      uuid: "bindable"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "binder"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "bindResult"
    - sapientType: "BASIC"
      content: !<regular>
        value: "spring.main"
      valueType: "java.lang.String"
      uuid: "uniqueUuid329"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "org.springframework.boot.SpringApplication"
      uuid: "bindable"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Cannot bind to SpringApplication"
            valueType: "java.lang.String"
            uuid: "uniqueUuid330"
            fixed: true
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Exception"
              parameters: []
            valueType: "java.lang.Exception"
            uuid: "exception"
      valueType: "java.lang.IllegalStateException"
      uuid: "illegalStateException"
      fixed: true
    branches:
    - lineNumber: 563
      expression: "catch-exception (Exception)"
      range: "(563,3)-(563,21)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 3
      catchExceptions:
      - "java.lang.Exception"
- method:
    name: "createApplicationContext"
    sourceCodeSignature: "ConfigurableApplicationContext createApplicationContext()"
    returnType: "org.springframework.context.ConfigurableApplicationContext"
    instructionFingerprint: "9CE886A164DDE54B568F45AB8095A9AC"
  paths:
  - pathId: "path1"
    testPathName: "createApplicationContextTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "896327DDBCD5F400342CCC4058927D7A"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid331):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "E9AF26A44A758F46AEA655FC22B60195"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A85230F96F7FEDC299CF0684987CBF30"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid332,argumentResolver:uniqueUuid333):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid334,argumentResolver:uniqueUuid335):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid336,argumentResolver:uniqueUuid337):list4"
    - type: "FIELD"
      name: "applicationContextFactory"
      modelFingerprint: "F83BACFDEBC375F4323EC0A1CEA88143"
      valueUuid: "applicationContextFactory"
      methodExercised:
        expression: "create(webApplicationType:webApplicationType):configurableApplicationContext"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "067BB31420272C8BB8D8A0C3734E3D72"
      valueUuid: "configurableApplicationContext"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
        propertiesMap:
          applicationContextFactory:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.ApplicationContextFactory"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.ApplicationContextFactory"
            uuid: "applicationContextFactory"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid331"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "REACTIVE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "arrayListItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid332"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid333"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid334"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid335"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid336"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid337"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.ApplicationContextFactory"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "applicationContextFactory"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.context.ConfigurableApplicationContext"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<static_field_return>
            target: "org.springframework.boot.ApplicationContextFactory"
            fieldName: "DEFAULT"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "create"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "ENUM"
      content: !<regular>
        value: "REACTIVE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.context.ConfigurableApplicationContext"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<static_field_return>
            target: "org.springframework.boot.ApplicationContextFactory"
            fieldName: "DEFAULT"
          valueType: "org.springframework.boot.ApplicationContextFactory"
          uuid: "applicationContextFactory"
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "webApplicationType"
        methodName: "create"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
- method:
    name: "postProcessApplicationContext"
    sourceCodeSignature: "void postProcessApplicationContext(ConfigurableApplicationContext\
      \ context)"
    returnType: "void"
    parameters:
    - name: "context"
      type: "org.springframework.context.ConfigurableApplicationContext"
    instructionFingerprint: "0ABD0B08C3A1900D62BC3D302E2CCCD1"
  paths:
  - pathId: "path1"
    testPathName: "postProcessApplicationContextWhenContextInstanceOfDefaultResourceLoaderAndThisAddConversionService"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "86E05A4975CB6538272BBD8562960483"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "69ED5A12C9DE5D405241C1BC6152BFA7"
      valueUuid: "context"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid338):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "C320B20653A22B9C646F1A3191D75758"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A85230F96F7FEDC299CF0684987CBF30"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid339,argumentResolver:uniqueUuid340):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid341,argumentResolver:uniqueUuid342):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid343,argumentResolver:uniqueUuid344):list4"
    - type: "LOCAL_VARIABLE"
      name: "genericApplicationContext"
      modelFingerprint: "6F8B37F393F2538D1DC84F8110E85559"
      valueUuid: "context"
      methodExercised:
        expression: "setResourceLoader(resourceLoader:resourceLoader):void2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader4"
    - type: "LOCAL_VARIABLE"
      name: "defaultResourceLoader"
      modelFingerprint: "216F31E57931D88B1FE422AC8DF62765"
      valueUuid: "context"
      methodExercised:
        expression: "setClassLoader(classLoader:classLoader4):void3"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "2677A5448E9FBFC5899B874388DD52E9"
      valueUuid: "context"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "4610FCB514E58D45371AE66EDB806776"
      valueUuid: "context"
      methodExercised:
        expression: "getEnvironment():configurableEnvironment"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "364337F18CE7C569724C0FA5FD64B84F"
      valueUuid: "configurableEnvironment"
      methodExercised:
        expression: "getConversionService():configurableConversionService"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "CA64063C1099655313CEC1D666C81450"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "setConversionService(conversionService:configurableConversionService):void4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.support.GenericApplicationContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid338"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "arrayListItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid339"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid340"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid341"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid342"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid343"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid344"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.support.GenericApplicationContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader4"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.support.GenericApplicationContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader4"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.support.GenericApplicationContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.support.GenericApplicationContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.support.ConfigurableConversionService"
      uuid: "configurableConversionService"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.support.ConfigurableConversionService"
      uuid: "configurableConversionService"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 598
      expression: "this.beanNameGenerator != null"
      range: "(598,7)-(598,36)"
      evaluatedAs: false
    - lineNumber: 602
      expression: "this.resourceLoader != null"
      range: "(602,7)-(602,33)"
      evaluatedAs: true
    - lineNumber: 603
      expression: "context instanceof GenericApplicationContext genericApplicationContext"
      range: "(603,8)-(603,77)"
      evaluatedAs: true
    - lineNumber: 606
      expression: "context instanceof DefaultResourceLoader defaultResourceLoader"
      range: "(606,8)-(606,69)"
      evaluatedAs: true
    - lineNumber: 610
      expression: "this.addConversionService"
      range: "(610,7)-(610,31)"
      evaluatedAs: true
- method:
    name: "applyInitializers"
    sourceCodeSignature: "void applyInitializers(ConfigurableApplicationContext context)"
    returnType: "void"
    parameters:
    - name: "context"
      type: "org.springframework.context.ConfigurableApplicationContext"
    instructionFingerprint: "F9AAC8F435F2FEC68670FA676B1F18E4"
  paths:
  - pathId: "path1"
    testPathName: "applyInitializersWhenGetInitializersIsNotEmpty"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "055AE4E84DC93CF6445CE6901DA477D3"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "6DEF13B8BEABCF66180D86ACB2708D19"
      valueUuid: "context"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid345):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "C320B20653A22B9C646F1A3191D75758"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A85230F96F7FEDC299CF0684987CBF30"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid346,argumentResolver:uniqueUuid347):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid348,argumentResolver:uniqueUuid349):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid350,argumentResolver:uniqueUuid351):list4"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "14C8EE5544404D1C6796C3F10ED0921F"
      methodExercised:
        expression: "getInitializers():set2"
    - type: "STATIC"
      name: "GenericTypeResolver.class"
      modelFingerprint: "F685A4B370A3225CDA2EA27D3078219B"
      valueUuid: "GenericTypeResolver.class"
      methodExercised:
        expression: "resolveTypeArgument(clazz:class,genericType:uniqueUuid352):class2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "C92C20BED11A7A26ACBD7FF4523FCB6A"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "isInstanceOf(type:class2,obj:context,message:uniqueUuid353):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "initializer"
      modelFingerprint: "78E2DC0D01E9040DAE15615520D11A9E"
      valueUuid: "object3"
      methodExercised:
        expression: "initialize(applicationContext:context):void3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid345"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "arrayListItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid346"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid347"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid348"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid349"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid350"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid351"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashSet"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.context.ApplicationContextInitializer"
          uuid: "object3"
          collectionUuid: "set2"
      valueType: "java.util.Set"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "set2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.GenericTypeResolver"
      uuid: "GenericTypeResolver.class"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid352"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class2"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "context"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Unable to call initializer."
      valueType: "java.lang.String"
      uuid: "uniqueUuid353"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "object3"
      collectionUuid: "set2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "context"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 623
      expression: "for-each(getInitializers())"
      range: "(623,52)-(623,68)"
      evaluatedAs: true
- method:
    name: "logStartupInfo"
    sourceCodeSignature: "void logStartupInfo(boolean isRoot)"
    returnType: "void"
    parameters:
    - name: "isRoot"
      type: "boolean"
    instructionFingerprint: "A773CD2EE3BB068E69C19F8D41C34E15"
  paths:
  - pathId: "path1"
    testPathName: "logStartupInfoWhenIsRoot"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "713C3CDA412063FB01EAFB85364D14C1"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "isRoot"
      modelFingerprint: "87ED7C9CF7FC748EBFFF314787610F9F"
      valueUuid: "isRoot"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid354):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "C320B20653A22B9C646F1A3191D75758"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A85230F96F7FEDC299CF0684987CBF30"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid355,argumentResolver:uniqueUuid356):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid357,argumentResolver:uniqueUuid358):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid359,argumentResolver:uniqueUuid360):list4"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "FE5D2BC90EC0B24D7B85FD4D1CDFF78B"
      methodExercised:
        expression: "getApplicationLog():log2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "8EB8B8F9E52848CECB1719A9E5CC9C78"
      valueUuid: "startupInfoLogger"
      methodExercised:
        expression: "logStarting(applicationLog:log2):void2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "isRoot"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid354"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "arrayListItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid355"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid356"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid357"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid358"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid359"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid360"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "log2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.StartupInfoLogger"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            uuid: "uniqueUuid361"
            explicitCastNeeded: true
      valueType: "org.springframework.boot.StartupInfoLogger"
      uuid: "startupInfoLogger"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "log2"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 637
      expression: "isRoot"
      range: "(637,7)-(637,12)"
      evaluatedAs: true
- method:
    name: "logStartupProfileInfo"
    sourceCodeSignature: "void logStartupProfileInfo(ConfigurableApplicationContext\
      \ context)"
    returnType: "void"
    parameters:
    - name: "context"
      type: "org.springframework.context.ConfigurableApplicationContext"
    instructionFingerprint: "AD1246F0B1C4E501B8894FBBECC458F1"
  paths:
  - pathId: "path1"
    testPathName: "logStartupProfileInfoWhenDefaultProfilesSizeLessThanOrEqualsTo1"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "761D8B2B0BDD442FE2E7D7E28DA8C30E"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "22F7680E81C8A00E4B019BF90B716E88"
      valueUuid: "context"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid362):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "C320B20653A22B9C646F1A3191D75758"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A85230F96F7FEDC299CF0684987CBF30"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid363,argumentResolver:uniqueUuid364):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid365,argumentResolver:uniqueUuid366):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid367,argumentResolver:uniqueUuid368):list4"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "FE5D2BC90EC0B24D7B85FD4D1CDFF78B"
      methodExercised:
        expression: "getApplicationLog():log2"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "862B2199EAED822A0A6CD36A8ACF2BC7"
      valueUuid: "context"
      methodExercised:
        expression: "getEnvironment():configurableEnvironment"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B50FD944488234F7A72B89325632A6C8"
      valueUuid: "configurableEnvironment"
      methodExercised:
        expression: "getActiveProfiles():stringArray"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "8A72508A0532E53CD2ADAEF2BDC5B634"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "isEmpty(obj:list6):boolean2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "862B2199EAED822A0A6CD36A8ACF2BC7"
      valueUuid: "context"
      methodExercised:
        expression: "getEnvironment():configurableEnvironment2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "6B9081897229F988CA8C5883529FA3A3"
      valueUuid: "configurableEnvironment2"
      methodExercised:
        expression: "getDefaultProfiles():stringArray2"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "E79EC03C7431680953B5F8CE1237AC2C"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "collectionToDelimitedString(coll:list8,delim:uniqueUuid369):string2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid362"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "arrayListItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid363"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid364"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid365"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid366"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid367"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid368"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "log2"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "list6"
      collectionUuid: "list5"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment2"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray2"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "list8"
      collectionUuid: "list7"
    - sapientType: "BASIC"
      content: !<regular>
        value: ", "
      valueType: "java.lang.String"
      uuid: "uniqueUuid369"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 648
      expression: "log.isInfoEnabled()"
      range: "(648,7)-(648,25)"
      evaluatedAs: true
    - lineNumber: 650
      expression: "ObjectUtils.isEmpty(activeProfiles)"
      range: "(650,8)-(650,42)"
      evaluatedAs: true
    - lineNumber: 653
      expression: "defaultProfiles.size() <= 1"
      range: "(653,8)-(653,34)"
      evaluatedAs: true
- method:
    name: "getApplicationLog"
    sourceCodeSignature: "Log getApplicationLog()"
    returnType: "org.apache.commons.logging.Log"
    instructionFingerprint: "6985F8E0C5F1AC65437DFBF45963B381"
  paths:
  - pathId: "path1"
    testPathName: "getApplicationLogWhenThisMainApplicationClassIsNull"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "8072BCEE41F467C62DDDBC3B2EBA322F"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid370):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "C320B20653A22B9C646F1A3191D75758"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A85230F96F7FEDC299CF0684987CBF30"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid371,argumentResolver:uniqueUuid372):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid373,argumentResolver:uniqueUuid374):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid375,argumentResolver:uniqueUuid376):list4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "F1387319AEC62BCBBBD147263382D424"
      valueUuid: "log"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid370"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "arrayListItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid371"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid372"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid373"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid374"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid375"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid376"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.apache.commons.logging.LogFactory"
        method: "getLog"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.springframework.boot.SpringApplication"
            valueType: "java.lang.Class"
            genericValueType: "org.springframework.boot.SpringApplication"
            uuid: "uniqueUuid377"
            fixed: true
      valueType: "org.apache.commons.logging.Log"
      uuid: "log"
    branches:
    - lineNumber: 674
      expression: "this.mainApplicationClass == null"
      range: "(674,7)-(674,39)"
      evaluatedAs: true
- method:
    name: "load"
    sourceCodeSignature: "void load(ApplicationContext context, Object[] sources)"
    returnType: "void"
    parameters:
    - name: "context"
      type: "org.springframework.context.ApplicationContext"
    - name: "sources"
      type: "java.lang.Object[]"
    instructionFingerprint: "1DE25FC4C00D2320BE3032FE3AC42C24"
  paths:
  - pathId: "path3"
    testPathName: "loadWhenContextNotInstanceOfAbstractApplicationContextThrowsIllegalStateException"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "30545C387CFB723B2CE3516432CFDD79"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "6596023CDCF1B2D399C9B8A5AE1D7BBD"
      valueUuid: "context"
    - type: "INPUT"
      name: "sources"
      modelFingerprint: "D7AC45A4DA193E60801F85059A98FC50"
      valueUuid: "sources"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid378):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "C320B20653A22B9C646F1A3191D75758"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A85230F96F7FEDC299CF0684987CBF30"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid379,argumentResolver:uniqueUuid380):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid381,argumentResolver:uniqueUuid382):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid383,argumentResolver:uniqueUuid384):list4"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "484E2132A26EF5BC20006C6ED389ACC4"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "arrayToCommaDelimitedString(arr:sources):string"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3A63B7B994A866A4E148567DDF1588EA"
      valueUuid: "illegalStateException"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "context"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Object[]"
      uuid: "sources"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid378"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "arrayListItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid379"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid380"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid381"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid382"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid383"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid384"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Object[]"
      uuid: "sources"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "s"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Could not locate BeanDefinitionRegistry"
            valueType: "java.lang.String"
            uuid: "uniqueUuid385"
            fixed: true
      valueType: "java.lang.IllegalStateException"
      uuid: "illegalStateException"
      fixed: true
    branches:
    - lineNumber: 686
      expression: "logger.isDebugEnabled()"
      range: "(686,7)-(686,29)"
      evaluatedAs: true
    - lineNumber: 730
      expression: "context instanceof BeanDefinitionRegistry registry"
      range: "(730,7)-(730,56)"
      evaluatedAs: false
      internalMethodName: "getBeanDefinitionRegistry"
    - lineNumber: 733
      expression: "context instanceof AbstractApplicationContext abstractApplicationContext"
      range: "(733,7)-(733,78)"
      evaluatedAs: false
      internalMethodName: "getBeanDefinitionRegistry"
  - pathId: "path1"
    testPathName: "loadWhenThisEnvironmentIsNull"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "64132A3CABF3EAD94277AB3F6D47AA6B"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "681B6E58816EC36B169A1FF53DD84DB4"
      valueUuid: "context"
    - type: "INPUT"
      name: "sources"
      modelFingerprint: "D7AC45A4DA193E60801F85059A98FC50"
      valueUuid: "sources"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid386):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "C320B20653A22B9C646F1A3191D75758"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A85230F96F7FEDC299CF0684987CBF30"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid387,argumentResolver:uniqueUuid388):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid389,argumentResolver:uniqueUuid390):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid391,argumentResolver:uniqueUuid392):list4"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "484E2132A26EF5BC20006C6ED389ACC4"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "arrayToCommaDelimitedString(arr:sources):string"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "abstractApplicationContext"
      modelFingerprint: "8A175771FC62EE1DAA0C51072DB7C4DB"
      valueUuid: "context"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "35A89D2E6D19096884A719A4565AA102"
      methodExercised:
        expression: "createBeanDefinitionLoader(registry:configurableListableBeanFactorycheckCast,sources:sources):beanDefinitionLoader"
    - type: "LOCAL_VARIABLE"
      name: "loader"
      modelFingerprint: "CAC3C266B3F7E2FA6FCEA9BA1BCAD41A"
      valueUuid: "beanDefinitionLoader"
      methodExercised:
        expression: "setResourceLoader(resourceLoader:resourceLoader):void3"
    - type: "LOCAL_VARIABLE"
      name: "loader"
      modelFingerprint: "F0E65D83C4A6CCB0F9F3224D4AA03EA7"
      valueUuid: "beanDefinitionLoader"
      methodExercised:
        expression: "load():void4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "context"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Object[]"
      uuid: "sources"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid386"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "arrayListItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid387"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid388"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid389"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid390"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid391"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid392"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Object[]"
      uuid: "sources"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.BeanDefinitionLoader"
      uuid: "beanDefinitionLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "configurableListableBeanFactorycheckCast"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Object[]"
      uuid: "sources"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.BeanDefinitionLoader"
      uuid: "beanDefinitionLoader"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.BeanDefinitionLoader"
      uuid: "beanDefinitionLoader"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 686
      expression: "logger.isDebugEnabled()"
      range: "(686,7)-(686,29)"
      evaluatedAs: true
    - lineNumber: 730
      expression: "context instanceof BeanDefinitionRegistry registry"
      range: "(730,7)-(730,56)"
      evaluatedAs: false
      internalMethodName: "getBeanDefinitionRegistry"
    - lineNumber: 733
      expression: "context instanceof AbstractApplicationContext abstractApplicationContext"
      range: "(733,7)-(733,78)"
      evaluatedAs: true
      internalMethodName: "getBeanDefinitionRegistry"
    - lineNumber: 690
      expression: "this.beanNameGenerator != null"
      range: "(690,7)-(690,36)"
      evaluatedAs: false
    - lineNumber: 693
      expression: "this.resourceLoader != null"
      range: "(693,7)-(693,33)"
      evaluatedAs: true
    - lineNumber: 696
      expression: "this.environment != null"
      range: "(696,7)-(696,30)"
      evaluatedAs: false
- method:
    name: "getResourceLoader"
    sourceCodeSignature: "ResourceLoader getResourceLoader()"
    returnType: "org.springframework.core.io.ResourceLoader"
    instructionFingerprint: "24FF99A7684E85D589FF87246C6EDF37"
  paths:
  - pathId: "path1"
    testPathName: "getResourceLoaderTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "4A8F4911F090D027DBA176E5AC39D634"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues: []
- method:
    name: "getClassLoader"
    sourceCodeSignature: "ClassLoader getClassLoader()"
    returnType: "java.lang.ClassLoader"
    instructionFingerprint: "E0C50DD3E0955208A4A9468C6DBA07EC"
  paths:
  - pathId: "path1"
    testPathName: "getClassLoaderWhenThisResourceLoaderIsNotNull"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "7E9F67423FF848754A5B8925ACBB6679"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid400):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "C320B20653A22B9C646F1A3191D75758"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A85230F96F7FEDC299CF0684987CBF30"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid401,argumentResolver:uniqueUuid402):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid403,argumentResolver:uniqueUuid404):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid405,argumentResolver:uniqueUuid406):list4"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "75B31636EC5912ABFB4153BB82319304"
      valueUuid: "classLoader4"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid400"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "arrayListItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid401"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid402"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid403"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid404"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid405"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid406"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader4"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader4"
    branches:
    - lineNumber: 718
      expression: "this.resourceLoader != null"
      range: "(718,7)-(718,33)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "getClassLoaderWhenThisResourceLoaderIsNull"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "5638482F761FCF4A79C5EE665EF03E54"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "3D00B86BF6898643756CD23F93FAAB38"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid407):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "C320B20653A22B9C646F1A3191D75758"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CF95A31B3D10A33864B1EBA0157B9CA4"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A85230F96F7FEDC299CF0684987CBF30"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid408,argumentResolver:uniqueUuid409):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CF95A31B3D10A33864B1EBA0157B9CA4"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid410,argumentResolver:uniqueUuid411):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CF95A31B3D10A33864B1EBA0157B9CA4"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid412,argumentResolver:uniqueUuid413):list4"
    - type: "STATIC"
      name: "ClassUtils.class.real"
      modelFingerprint: "70484AD192BDA84A12E8618883BD7800"
      valueUuid: "ClassUtils.class.real"
      methodExercised:
        expression: "getDefaultClassLoader():classLoader4"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8BF5919AEE95024FF45E4BD3C5E90EBF"
      valueUuid: "classLoader4"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
            fixed: true
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid407"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "arrayListItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid408"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid409"
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid410"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid411"
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid412"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid413"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ClassUtils"
        method: "getDefaultClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader4"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ClassUtils"
        method: "getDefaultClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader4"
    branches:
    - lineNumber: 718
      expression: "this.resourceLoader != null"
      range: "(718,7)-(718,33)"
      evaluatedAs: false
- method:
    name: "createBeanDefinitionLoader"
    sourceCodeSignature: "BeanDefinitionLoader createBeanDefinitionLoader(BeanDefinitionRegistry\
      \ registry, Object[] sources)"
    returnType: "org.springframework.boot.BeanDefinitionLoader"
    parameters:
    - name: "registry"
      type: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
    - name: "sources"
      type: "java.lang.Object[]"
    instructionFingerprint: "C9294D6850D4A8BF896D40D56818394B"
  paths:
  - pathId: "path1"
    testPathName: "createBeanDefinitionLoaderTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "F332F946D2ADCE795D559345AE54F467"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "registry"
      modelFingerprint: "6307DBD7728684407BE44EA47124BF7D"
      valueUuid: "registry"
    - type: "INPUT"
      name: "sources"
      modelFingerprint: "D7AC45A4DA193E60801F85059A98FC50"
      valueUuid: "sources"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid414):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "C320B20653A22B9C646F1A3191D75758"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A85230F96F7FEDC299CF0684987CBF30"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid415,argumentResolver:uniqueUuid416):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid417,argumentResolver:uniqueUuid418):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid419,argumentResolver:uniqueUuid420):list4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "FE188DEB625B742BC40A5B5DA58A238D"
      valueUuid: "beanDefinitionLoader"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Object[]"
      uuid: "sources"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid414"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "arrayListItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid415"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid416"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid417"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid418"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid419"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid420"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.BeanDefinitionLoader"
        parameters:
        - name: "registry"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
            uuid: "registry"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Object[]"
            uuid: "sources"
      valueType: "org.springframework.boot.BeanDefinitionLoader"
      uuid: "beanDefinitionLoader"
      fixed: true
- method:
    name: "refresh"
    sourceCodeSignature: "void refresh(ConfigurableApplicationContext applicationContext)"
    returnType: "void"
    parameters:
    - name: "applicationContext"
      type: "org.springframework.context.ConfigurableApplicationContext"
    instructionFingerprint: "D1F9F7B75C42ED4C676D30FD01FC6317"
  paths:
  - pathId: "path1"
    testPathName: "refreshTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "4CAEE1864C38CD7207C5E5C228071E50"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "applicationContext"
      modelFingerprint: "DF659A8AABEBC6871FFB4901FD8A4D44"
      valueUuid: "applicationContext"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid421):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "C320B20653A22B9C646F1A3191D75758"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A85230F96F7FEDC299CF0684987CBF30"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid422,argumentResolver:uniqueUuid423):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid424,argumentResolver:uniqueUuid425):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid426,argumentResolver:uniqueUuid427):list4"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "CEEB7BF4BBF40EBAE4B000372A7741B1"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "refresh():void2"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
        - "java.lang.IllegalStateException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid421"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "arrayListItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid422"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid423"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid424"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid425"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid426"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid427"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "applicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "afterRefresh"
    sourceCodeSignature: "void afterRefresh(ConfigurableApplicationContext context,\
      \ ApplicationArguments args)"
    returnType: "void"
    parameters:
    - name: "context"
      type: "org.springframework.context.ConfigurableApplicationContext"
    - name: "args"
      type: "org.springframework.boot.ApplicationArguments"
    instructionFingerprint: "2DD3A053A506BC551F93CBC6C2A87B41"
  paths:
  - pathId: "path1"
    testPathName: "afterRefreshTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "CA10BEA839522DB014716511838344BC"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues: []
- method:
    name: "registerLoggedException"
    sourceCodeSignature: "void registerLoggedException(Throwable exception)"
    returnType: "void"
    parameters:
    - name: "exception"
      type: "java.lang.Throwable"
    instructionFingerprint: "9D7BC81A242BC6828BFF39BBC0339828"
  paths:
  - pathId: "path1"
    testPathName: "registerLoggedExceptionWhenHandlerIsNotNull"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "6FE8D41FBCD89DD03AB56CCF8CD8EB5E"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "exception"
      modelFingerprint: "05CFBBFC0FF149D82C9CF6A24EF7BD27"
      valueUuid: "exception"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid435):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "C320B20653A22B9C646F1A3191D75758"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A85230F96F7FEDC299CF0684987CBF30"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid436,argumentResolver:uniqueUuid437):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid438,argumentResolver:uniqueUuid439):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid440,argumentResolver:uniqueUuid441):list4"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "9348C2FCC8DE8D8A578963FF61E5E05C"
      methodExercised:
        expression: "getSpringBootExceptionHandler():springBootExceptionHandler"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "F9DC9A3609EFCE7A52C83835E7854099"
      valueUuid: "springBootExceptionHandler"
      methodExercised:
        expression: "registerLoggedException(exception:exception):void2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "exception"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid435"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "arrayListItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid436"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid437"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid438"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid439"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid440"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid441"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringBootExceptionHandler"
      uuid: "springBootExceptionHandler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringBootExceptionHandler"
      uuid: "springBootExceptionHandler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "exception"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 863
      expression: "handler != null"
      range: "(863,7)-(863,21)"
      evaluatedAs: true
- method:
    name: "getSpringBootExceptionHandler"
    sourceCodeSignature: "SpringBootExceptionHandler getSpringBootExceptionHandler()"
    returnType: "org.springframework.boot.SpringBootExceptionHandler"
    instructionFingerprint: "4A8498D4A894E79C56F6A13137CDBC0A"
  paths:
  - pathId: "path1"
    testPathName: "getSpringBootExceptionHandlerWhenIsMainThreadNotThreadCurrentThread"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "892194571D69DB5B286A126825A522D0"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid442):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "C320B20653A22B9C646F1A3191D75758"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A85230F96F7FEDC299CF0684987CBF30"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid443,argumentResolver:uniqueUuid444):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid445,argumentResolver:uniqueUuid446):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid447,argumentResolver:uniqueUuid448):list4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "EF979CBF67A73976CAF9A1C661EC223E"
      valueUuid: "springBootExceptionHandler"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid442"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "arrayListItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid443"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid444"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid445"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid446"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid447"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid448"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.SpringBootExceptionHandler"
      uuid: "springBootExceptionHandler"
      fixed: true
    branches:
    - lineNumber: 917
      expression: "\\\"main\\\".equals(currentThread.getName())"
      range: "(917,11)-(917,48)"
      evaluatedAs: false
      internalMethodName: "isMainThread"
    - lineNumber: 917
      expression: "\\\"restartedMain\\\".equals(currentThread.getName())"
      range: "(917,53)-(917,99)"
      evaluatedAs: false
      internalMethodName: "isMainThread"
    - lineNumber: 910
      expression: "isMainThread(Thread.currentThread())"
      range: "(910,7)-(910,42)"
      evaluatedAs: false
- method:
    name: "getMainApplicationClass"
    sourceCodeSignature: "Class<?> getMainApplicationClass()"
    returnType: "java.lang.Class"
    genericReturnType: "?"
    instructionFingerprint: "AF2FAA3ECBAB59E10E7B3B5D284384A7"
  paths:
  - pathId: "path1"
    testPathName: "getMainApplicationClassTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "9380F32CAE968464BD496248A0D208BE"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues: []
- method:
    name: "setMainApplicationClass"
    sourceCodeSignature: "void setMainApplicationClass(Class<?> mainApplicationClass)"
    returnType: "void"
    parameters:
    - name: "mainApplicationClass"
      type: "java.lang.Class"
    instructionFingerprint: "F2E5ACF2DE89BCAC103B797057DE26AB"
  paths:
  - pathId: "path1"
    testPathName: "setMainApplicationClassTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "F6567F306D7A31267C9D580B107B8CF7"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues: []
- method:
    name: "getWebApplicationType"
    sourceCodeSignature: "WebApplicationType getWebApplicationType()"
    returnType: "org.springframework.boot.WebApplicationType"
    instructionFingerprint: "90D0793E204EF3F6F43DD374888AAF73"
  paths:
  - pathId: "path1"
    testPathName: "getWebApplicationTypeTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "798D01DCABC0AAFF4E16B6186ABDA7F5"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues: []
- method:
    name: "setWebApplicationType"
    sourceCodeSignature: "void setWebApplicationType(WebApplicationType webApplicationType)"
    returnType: "void"
    parameters:
    - name: "webApplicationType"
      type: "org.springframework.boot.WebApplicationType"
    instructionFingerprint: "CB8265443C2D9F1FA456A49A68669C02"
  paths:
  - pathId: "path1"
    testPathName: "setWebApplicationTypeTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "F6B86B0F70FBE411D84C14A3CD8C3C63"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "webApplicationType"
      modelFingerprint: "39F8607E22C91A68F4B61AF803A2F157"
      valueUuid: "webApplicationType"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid470):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "C320B20653A22B9C646F1A3191D75758"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType2"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A85230F96F7FEDC299CF0684987CBF30"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid471,argumentResolver:uniqueUuid472):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid473,argumentResolver:uniqueUuid474):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid475,argumentResolver:uniqueUuid476):list4"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "4B1D50E1FA4F8AC8919491B908B3F1E2"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:webApplicationType,message:uniqueUuid477):void2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    - type: "STATE_VERIFICATION_FIELD"
      name: "webApplicationType"
      modelFingerprint: "19EEA70CF0A200AA516FF6F3BB1CEAAE"
      valueUuid: "webApplicationType"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "ENUM"
      content: !<regular>
        value: "REACTIVE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid470"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "arrayListItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid471"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid472"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid473"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid474"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid475"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid476"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "REACTIVE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "BASIC"
      content: !<regular>
        value: "WebApplicationType must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid477"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "REACTIVE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
- method:
    name: "setAllowBeanDefinitionOverriding"
    sourceCodeSignature: "void setAllowBeanDefinitionOverriding(boolean allowBeanDefinitionOverriding)"
    returnType: "void"
    parameters:
    - name: "allowBeanDefinitionOverriding"
      type: "boolean"
    instructionFingerprint: "3415EA2542F891185F4A319698B72CF0"
  paths:
  - pathId: "path1"
    testPathName: "setAllowBeanDefinitionOverridingTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "2A1873C574549A2DE12FE5E58A54C2E0"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues: []
- method:
    name: "setAllowCircularReferences"
    sourceCodeSignature: "void setAllowCircularReferences(boolean allowCircularReferences)"
    returnType: "void"
    parameters:
    - name: "allowCircularReferences"
      type: "boolean"
    instructionFingerprint: "77BDDD7F7F51203AD727E2389CA695AE"
  paths:
  - pathId: "path1"
    testPathName: "setAllowCircularReferencesTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "F93E9DF67958BD52C24B7C7662AD18C0"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues: []
- method:
    name: "setLazyInitialization"
    sourceCodeSignature: "void setLazyInitialization(boolean lazyInitialization)"
    returnType: "void"
    parameters:
    - name: "lazyInitialization"
      type: "boolean"
    instructionFingerprint: "1ED02B302E82CE33AF8B34E4DE713B18"
  paths:
  - pathId: "path1"
    testPathName: "setLazyInitializationTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "2D993B6F1B5B0A37DC11A553F41A7793"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues: []
- method:
    name: "setHeadless"
    sourceCodeSignature: "void setHeadless(boolean headless)"
    returnType: "void"
    parameters:
    - name: "headless"
      type: "boolean"
    instructionFingerprint: "D5413E8DBDFC0FEF1D0901FE496A8AFC"
  paths:
  - pathId: "path1"
    testPathName: "setHeadlessTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "B2918F69A47994D0B62F3AFE5AA5F338"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues: []
- method:
    name: "setRegisterShutdownHook"
    sourceCodeSignature: "void setRegisterShutdownHook(boolean registerShutdownHook)"
    returnType: "void"
    parameters:
    - name: "registerShutdownHook"
      type: "boolean"
    instructionFingerprint: "EF22801E9CC4C5C4D3D2334A0A810388"
  paths:
  - pathId: "path1"
    testPathName: "setRegisterShutdownHookTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "DCAC391F3735A3705B537AD6F43453D1"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues: []
- method:
    name: "setBanner"
    sourceCodeSignature: "void setBanner(Banner banner)"
    returnType: "void"
    parameters:
    - name: "banner"
      type: "org.springframework.boot.Banner"
    instructionFingerprint: "7315CD33458155E16C09F65069AD9272"
  paths:
  - pathId: "path1"
    testPathName: "setBannerTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "E8BF99DAA61EF7AFF2BE936BD050556B"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues: []
- method:
    name: "setBannerMode"
    sourceCodeSignature: "void setBannerMode(Banner.Mode bannerMode)"
    returnType: "void"
    parameters:
    - name: "bannerMode"
      type: "org.springframework.boot.Banner$Mode"
    instructionFingerprint: "1FDFE3962169F9178C1C982E25FBD0EF"
  paths:
  - pathId: "path1"
    testPathName: "setBannerModeTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "FF0EBCB5EA03F9710CAC1EF6256B2735"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues: []
- method:
    name: "setLogStartupInfo"
    sourceCodeSignature: "void setLogStartupInfo(boolean logStartupInfo)"
    returnType: "void"
    parameters:
    - name: "logStartupInfo"
      type: "boolean"
    instructionFingerprint: "A2AA0183C6FAF1B9EF8847F8C8397979"
  paths:
  - pathId: "path1"
    testPathName: "setLogStartupInfoTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "B184695CD828228294A496C35C4C821C"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues: []
- method:
    name: "setAddCommandLineProperties"
    sourceCodeSignature: "void setAddCommandLineProperties(boolean addCommandLineProperties)"
    returnType: "void"
    parameters:
    - name: "addCommandLineProperties"
      type: "boolean"
    instructionFingerprint: "801CC506388DF150E81DE0C0278E46CB"
  paths:
  - pathId: "path1"
    testPathName: "setAddCommandLinePropertiesTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "6CA7B4B19B85C96AB122130CCAAF28E9"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues: []
- method:
    name: "setAddConversionService"
    sourceCodeSignature: "void setAddConversionService(boolean addConversionService)"
    returnType: "void"
    parameters:
    - name: "addConversionService"
      type: "boolean"
    instructionFingerprint: "8278A0B5D19B8E3167D1B52ECF168917"
  paths:
  - pathId: "path1"
    testPathName: "setAddConversionServiceTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "6A2BB5DEE33A073E1691A784F419CABB"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues: []
- method:
    name: "addBootstrapRegistryInitializer"
    sourceCodeSignature: "void addBootstrapRegistryInitializer(BootstrapRegistryInitializer\
      \ bootstrapRegistryInitializer)"
    returnType: "void"
    parameters:
    - name: "bootstrapRegistryInitializer"
      type: "org.springframework.boot.BootstrapRegistryInitializer"
    instructionFingerprint: "FF0B94853EEF49956861602AEC2E789C"
  paths:
  - pathId: "path1"
    testPathName: "addBootstrapRegistryInitializerTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "84156DDAD7DA5C26E3E537ACAE50B36E"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "bootstrapRegistryInitializer"
      modelFingerprint: "78C61746847C2E03C8757CCFD4E4F4E8"
      valueUuid: "bootstrapRegistryInitializer"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid548):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "C320B20653A22B9C646F1A3191D75758"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A85230F96F7FEDC299CF0684987CBF30"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid549,argumentResolver:uniqueUuid550):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid551,argumentResolver:uniqueUuid552):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid553,argumentResolver:uniqueUuid554):list4"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "11F37C81FBEE8CA454D87CB64D40ADA6"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:bootstrapRegistryInitializer,message:uniqueUuid555):void2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "bootstrapRegistryInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid548"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "arrayListItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid549"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid550"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid551"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid552"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid553"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid554"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "bootstrapRegistryInitializer"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BootstrapRegistryInitializer must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid555"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "setDefaultProperties"
    sourceCodeSignature: "void setDefaultProperties(Map<String, Object> defaultProperties)"
    returnType: "void"
    parameters:
    - name: "defaultProperties"
      type: "java.util.Map"
    instructionFingerprint: "48629612AE517D4DD55E339CD4883BC7"
  paths:
  - pathId: "path1"
    testPathName: "setDefaultPropertiesTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "1DE20DA99C378C4B3EF2A4822C8B72D4"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues: []
- method:
    name: "setDefaultProperties"
    sourceCodeSignature: "void setDefaultProperties(Properties defaultProperties)"
    returnType: "void"
    parameters:
    - name: "defaultProperties"
      type: "java.util.Properties"
    instructionFingerprint: "FBE035751820F4EB5D1C5F25124BA38F"
  paths:
  - pathId: "path1"
    testPathName: "setDefaultProperties1WhenCollectionsListDefaultPropertiesPropertyNamesIsNotEmpty"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "685C97B01C0C935E26EDCF91D5120DC0"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "defaultProperties"
      modelFingerprint: "EAE964276AFC561C02A76C77F97B2639"
      valueUuid: "defaultProperties"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid564):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "C320B20653A22B9C646F1A3191D75758"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A85230F96F7FEDC299CF0684987CBF30"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid565,argumentResolver:uniqueUuid566):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid567,argumentResolver:uniqueUuid568):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid569,argumentResolver:uniqueUuid570):list4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "defaultPropertiesItem1Key1"
              valueType: "java.lang.String"
              uuid: "object3"
              collectionUuid: "arrayList4"
              explicitCastNeeded: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object4"
              collectionUuid: "defaultProperties"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid563"
      valueType: "java.util.Properties"
      uuid: "defaultProperties"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid564"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "arrayListItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid565"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid566"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid567"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid568"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid569"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid570"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 1083
      expression: "for-each(Collections.list(defaultProperties.propertyNames()))"
      range: "(1083,21)-(1083,71)"
      evaluatedAs: true
- method:
    name: "setAdditionalProfiles"
    sourceCodeSignature: "void setAdditionalProfiles(String... profiles)"
    returnType: "void"
    parameters:
    - name: "profiles"
      type: "java.lang.String[]"
    instructionFingerprint: "60EE2210AE341D2509DE53D94E30E397"
  paths:
  - pathId: "path1"
    testPathName: "setAdditionalProfilesTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "EFC6E4F28038FC2CC8ED59F209029F5F"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "profiles"
      modelFingerprint: "428EF24C122A142CEA28BB8A17720A55"
      valueUuid: "profiles"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid571):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "C320B20653A22B9C646F1A3191D75758"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A85230F96F7FEDC299CF0684987CBF30"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid572,argumentResolver:uniqueUuid573):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid574,argumentResolver:uniqueUuid575):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid576,argumentResolver:uniqueUuid577):list4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    - type: "STATE_VERIFICATION_FIELD"
      name: "additionalProfiles"
      modelFingerprint: "29BC237CA0B5DD781AAB693FD03D2A64"
      valueUuid: "set2"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "profiles"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid571"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "arrayListItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid572"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid573"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid574"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid575"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid576"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid577"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.String"
      uuid: "set2"
- method:
    name: "getAdditionalProfiles"
    sourceCodeSignature: "Set<String> getAdditionalProfiles()"
    returnType: "java.util.Set"
    genericReturnType: "java.lang.String"
    instructionFingerprint: "D9C467E590B9F69C9E901993B68FE1E0"
  paths:
  - pathId: "path1"
    testPathName: "getAdditionalProfilesTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "9B6BE3AD94175AE8C2F46F868569C3E3"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues: []
- method:
    name: "setBeanNameGenerator"
    sourceCodeSignature: "void setBeanNameGenerator(BeanNameGenerator beanNameGenerator)"
    returnType: "void"
    parameters:
    - name: "beanNameGenerator"
      type: "org.springframework.beans.factory.support.BeanNameGenerator"
    instructionFingerprint: "5CC5B5A29E9F0787A70DC8262389012F"
  paths:
  - pathId: "path1"
    testPathName: "setBeanNameGeneratorTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "6F0106F892CE751147A3084916747BCE"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues: []
- method:
    name: "setEnvironment"
    sourceCodeSignature: "void setEnvironment(ConfigurableEnvironment environment)"
    returnType: "void"
    parameters:
    - name: "environment"
      type: "org.springframework.core.env.ConfigurableEnvironment"
    instructionFingerprint: "6C0085B28FCD7851EA918CD867C021D9"
  paths:
  - pathId: "path1"
    testPathName: "setEnvironmentTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "F04820970B79AA78989439BBC440B2A5"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "environment"
      modelFingerprint: "3F73E3E0E26E26EEEFAD4DD95D3AE3D4"
      valueUuid: "environment"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid592):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "C320B20653A22B9C646F1A3191D75758"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A85230F96F7FEDC299CF0684987CBF30"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid593,argumentResolver:uniqueUuid594):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid595,argumentResolver:uniqueUuid596):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid597,argumentResolver:uniqueUuid598):list4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid592"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "arrayListItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid593"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid594"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid595"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid596"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid597"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid598"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "addPrimarySources"
    sourceCodeSignature: "void addPrimarySources(Collection<Class<?>> additionalPrimarySources)"
    returnType: "void"
    parameters:
    - name: "additionalPrimarySources"
      type: "java.util.Collection"
    instructionFingerprint: "368B9F8120865CE63D8F6CAEB8E6C811"
  paths:
  - pathId: "path1"
    testPathName: "addPrimarySourcesTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "A1C85D093D757B35FA9478722DD4B240"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "additionalPrimarySources"
      modelFingerprint: "2E139CC42A8D260C78040588290930E9"
      valueUuid: "additionalPrimarySources"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid599):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "C320B20653A22B9C646F1A3191D75758"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A85230F96F7FEDC299CF0684987CBF30"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid600,argumentResolver:uniqueUuid601):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid602,argumentResolver:uniqueUuid603):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid604,argumentResolver:uniqueUuid605):list4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "java.lang.Class<?>"
      uuid: "additionalPrimarySources"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid599"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "arrayListItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid600"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid601"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid602"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid603"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid604"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid605"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "getSources"
    sourceCodeSignature: "Set<String> getSources()"
    returnType: "java.util.Set"
    genericReturnType: "java.lang.String"
    instructionFingerprint: "3FA9376FB46FBAF82C8218AD59FC8ED3"
  paths:
  - pathId: "path1"
    testPathName: "getSourcesTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "19914C336FED3D05D6A7B6F2D67299EC"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues: []
- method:
    name: "setSources"
    sourceCodeSignature: "void setSources(Set<String> sources)"
    returnType: "void"
    parameters:
    - name: "sources"
      type: "java.util.Set"
    instructionFingerprint: "C95C37BABBF1C0CBE526CCD22813EFCB"
  paths:
  - pathId: "path1"
    testPathName: "setSourcesTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "FAB46185641BD99E47EEE272CFA88A38"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "sources"
      modelFingerprint: "645DA83CC146E89DC91EB982E3B608CA"
      valueUuid: "sources"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid613):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "C320B20653A22B9C646F1A3191D75758"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A85230F96F7FEDC299CF0684987CBF30"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid614,argumentResolver:uniqueUuid615):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid616,argumentResolver:uniqueUuid617):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid618,argumentResolver:uniqueUuid619):list4"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "2120C724563195C3F770469762E651EC"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid620):void2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    - type: "STATE_VERIFICATION_FIELD"
      name: "sources"
      modelFingerprint: "A2919991AB8EE4CDA154435430872D5E"
      valueUuid: "linkedHashSet3"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.String"
      uuid: "sources"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid613"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "arrayListItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid614"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid615"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid616"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid617"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid618"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid619"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.String"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid620"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.LinkedHashSet"
        parameters:
        - name: "c"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Set"
            genericValueType: "java.lang.String"
            uuid: "sources"
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.String"
      uuid: "linkedHashSet3"
- method:
    name: "getAllSources"
    sourceCodeSignature: "Set<Object> getAllSources()"
    returnType: "java.util.Set"
    genericReturnType: "java.lang.Object"
    instructionFingerprint: "52A8A5B366AAC6F29ADFDA7E21DA5671"
  paths:
  - pathId: "path1"
    testPathName: "getAllSourcesWhenCollectionUtilsIsEmptyThisSources"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "556A239BF44761FF9D773E05277CBC69"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid621):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "C320B20653A22B9C646F1A3191D75758"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A85230F96F7FEDC299CF0684987CBF30"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid622,argumentResolver:uniqueUuid623):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid624,argumentResolver:uniqueUuid625):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid626,argumentResolver:uniqueUuid627):list4"
    - type: "STATIC"
      name: "CollectionUtils.class"
      modelFingerprint: "8C064D1E004903AF57F8B8F3E26E1048"
      valueUuid: "CollectionUtils.class"
      methodExercised:
        expression: "isEmpty(collection:linkedHashSet2):boolean1"
        staticAccess: true
    - type: "STATIC"
      name: "CollectionUtils.class.real"
      modelFingerprint: "F5F72972B708C55070A2984A702F2DE4"
      valueUuid: "CollectionUtils.class.real"
      methodExercised:
        expression: "isEmpty(collection:linkedHashSet):boolean3"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "4B7798B7F8C919AB6A63F2C014BFCD8E"
      valueUuid: "set2"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid621"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "arrayListItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid622"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid623"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid624"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid625"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid626"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid627"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.CollectionUtils"
      uuid: "CollectionUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.LinkedHashSet"
      genericValueType: "java.lang.Class<?>"
      uuid: "linkedHashSet2"
    - sapientType: "REAL"
      valueType: "org.springframework.util.CollectionUtils"
      uuid: "CollectionUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.LinkedHashSet"
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.String"
      uuid: "linkedHashSet"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashSet"
        parameters: []
        values:
        - sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
          valueType: "java.lang.Object"
          uuid: "set2Item0"
      valueType: "java.util.Set"
      genericValueType: "java.lang.Object"
      uuid: "set2"
    branches:
    - lineNumber: 1178
      expression: "!CollectionUtils.isEmpty(this.primarySources)"
      range: "(1178,7)-(1178,51)"
      evaluatedAs: true
    - lineNumber: 1181
      expression: "!CollectionUtils.isEmpty(this.sources)"
      range: "(1181,7)-(1181,44)"
      evaluatedAs: false
- method:
    name: "setResourceLoader"
    sourceCodeSignature: "void setResourceLoader(ResourceLoader resourceLoader)"
    returnType: "void"
    parameters:
    - name: "resourceLoader"
      type: "org.springframework.core.io.ResourceLoader"
    instructionFingerprint: "A7082CFB83C99F96768C92CA3A560C72"
  paths:
  - pathId: "path1"
    testPathName: "setResourceLoaderTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "A0E8ECAEDABDF8D3881BDAF952EBA852"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "resourceLoader"
      modelFingerprint: "FDCEEEDB2A3FBA968DEEBF037704477E"
      valueUuid: "resourceLoader"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid628):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "C320B20653A22B9C646F1A3191D75758"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader2"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A85230F96F7FEDC299CF0684987CBF30"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid629,argumentResolver:uniqueUuid630):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader2"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid631,argumentResolver:uniqueUuid632):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader2"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid633,argumentResolver:uniqueUuid634):list4"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "7A8DFF0C628BC002373EEDFC1BD657C4"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:resourceLoader,message:uniqueUuid635):void2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    - type: "STATE_VERIFICATION_FIELD"
      name: "resourceLoader"
      modelFingerprint: "C284C8EF1F6C45ED692FD0BFF37DA182"
      valueUuid: "resourceLoader"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader2"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid628"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "arrayListItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid629"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid630"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid631"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid632"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid633"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid634"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ResourceLoader must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid635"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
- method:
    name: "getEnvironmentPrefix"
    sourceCodeSignature: "String getEnvironmentPrefix()"
    returnType: "java.lang.String"
    instructionFingerprint: "B6C56D9103C2AD088797BC0222FF8BC7"
  paths:
  - pathId: "path1"
    testPathName: "getEnvironmentPrefixTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "DF784054BCF16E526A97151541066340"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues: []
- method:
    name: "setEnvironmentPrefix"
    sourceCodeSignature: "void setEnvironmentPrefix(String environmentPrefix)"
    returnType: "void"
    parameters:
    - name: "environmentPrefix"
      type: "java.lang.String"
    instructionFingerprint: "BF4009921C399DB52399EA3F3B918223"
  paths:
  - pathId: "path1"
    testPathName: "setEnvironmentPrefixTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "F609387A9A779D447E9BA9CF52CCD826"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues: []
- method:
    name: "setApplicationContextFactory"
    sourceCodeSignature: "void setApplicationContextFactory(ApplicationContextFactory\
      \ applicationContextFactory)"
    returnType: "void"
    parameters:
    - name: "applicationContextFactory"
      type: "org.springframework.boot.ApplicationContextFactory"
    instructionFingerprint: "F08DE9A544A31A52288D5DEC1BBBC078"
  paths:
  - pathId: "path1"
    testPathName: "setApplicationContextFactoryWhenApplicationContextFactoryIsNotNull"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "6623D67C75FDF4E65B5EAF4EDA7A97EA"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "applicationContextFactory"
      modelFingerprint: "773E056CB7A62067BB156573CDDF7F13"
      valueUuid: "applicationContextFactory"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid650):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "C320B20653A22B9C646F1A3191D75758"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A85230F96F7FEDC299CF0684987CBF30"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid651,argumentResolver:uniqueUuid652):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid653,argumentResolver:uniqueUuid654):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid655,argumentResolver:uniqueUuid656):list4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "applicationContextFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid650"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "arrayListItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid651"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid652"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid653"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid654"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid655"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid656"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 1227
      expression: "applicationContextFactory != null"
      range: "(1227,37)-(1227,69)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "setApplicationContextFactoryWhenApplicationContextFactoryIsNull"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "DA5E599D8E8DCED820D5F198288B7A43"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "applicationContextFactory"
      modelFingerprint: "203A6BD2562FD8C7A5B3A3736D26403E"
      valueUuid: "applicationContextFactory"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid657):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "C320B20653A22B9C646F1A3191D75758"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A85230F96F7FEDC299CF0684987CBF30"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid658,argumentResolver:uniqueUuid659):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid660,argumentResolver:uniqueUuid661):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid662,argumentResolver:uniqueUuid663):list4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "applicationContextFactory"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid657"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "arrayListItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid658"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid659"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid660"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid661"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid662"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid663"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 1227
      expression: "applicationContextFactory != null"
      range: "(1227,37)-(1227,69)"
      evaluatedAs: false
- method:
    name: "setInitializers"
    sourceCodeSignature: "void setInitializers(Collection<? extends ApplicationContextInitializer<?>>\
      \ initializers)"
    returnType: "void"
    parameters:
    - name: "initializers"
      type: "java.util.Collection"
    instructionFingerprint: "6DE22A82B065F3ABF9F62DDDDAD59E12"
  paths:
  - pathId: "path1"
    testPathName: "setInitializersTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "DB85E253B283CFE0D2E1E27AE3CB7CF3"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "initializers"
      modelFingerprint: "23814FA0D70532D510215F8601F7EE86"
      valueUuid: "list3"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid664):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "C320B20653A22B9C646F1A3191D75758"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A85230F96F7FEDC299CF0684987CBF30"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid665,argumentResolver:uniqueUuid666):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid667,argumentResolver:uniqueUuid668):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid669,argumentResolver:uniqueUuid670):list4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid664"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "arrayListItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid665"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid666"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid667"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid668"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid669"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid670"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "addInitializers"
    sourceCodeSignature: "void addInitializers(ApplicationContextInitializer<?>...\
      \ initializers)"
    returnType: "void"
    parameters:
    - name: "initializers"
      type: "org.springframework.context.ApplicationContextInitializer[]"
    instructionFingerprint: "79988F14C77A1F9D4F8C0EEF0FC9A0C4"
  paths:
  - pathId: "path1"
    testPathName: "addInitializersTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "39540B11FDEB8602A835D0D53ED42AC5"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "initializers"
      modelFingerprint: "F8A838027768AEC105BDAC701B9DB71F"
      valueUuid: "initializers"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid671):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "C320B20653A22B9C646F1A3191D75758"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A85230F96F7FEDC299CF0684987CBF30"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid672,argumentResolver:uniqueUuid673):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid674,argumentResolver:uniqueUuid675):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid676,argumentResolver:uniqueUuid677):list4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.context.ApplicationContextInitializer[]"
      genericValueType: "?"
      uuid: "initializers"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid671"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "arrayListItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid672"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid673"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid674"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid675"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid676"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid677"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "getInitializers"
    sourceCodeSignature: "Set<ApplicationContextInitializer<?>> getInitializers()"
    returnType: "java.util.Set"
    genericReturnType: "org.springframework.context.ApplicationContextInitializer<?>"
    instructionFingerprint: "12A67899268AF8630750D683B54EB138"
  paths:
  - pathId: "path1"
    testPathName: "getInitializersTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "A44009BDBBF779398C1266C13CC91E40"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid678):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "C320B20653A22B9C646F1A3191D75758"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A85230F96F7FEDC299CF0684987CBF30"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid679,argumentResolver:uniqueUuid680):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid681,argumentResolver:uniqueUuid682):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid683,argumentResolver:uniqueUuid684):list4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "F0082354C2E5344EC95E0AABE07A5175"
      valueUuid: "linkedHashSet3"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid678"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "arrayListItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid679"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid680"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid681"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid682"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid683"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid684"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.LinkedHashSet"
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "linkedHashSet3"
    calledSomeStaticInternalMethod: true
- method:
    name: "setListeners"
    sourceCodeSignature: "void setListeners(Collection<? extends ApplicationListener<?>>\
      \ listeners)"
    returnType: "void"
    parameters:
    - name: "listeners"
      type: "java.util.Collection"
    instructionFingerprint: "F2ADA9DC20F2883C5C4290EF8D39B4C3"
  paths:
  - pathId: "path1"
    testPathName: "setListenersTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "7868A31542BBFADB983C0DE8578D3C57"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "listeners"
      modelFingerprint: "30A23FED36F1E463599F05653A454CB8"
      valueUuid: "list4"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid685):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "C320B20653A22B9C646F1A3191D75758"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A85230F96F7FEDC299CF0684987CBF30"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid686,argumentResolver:uniqueUuid687):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid688,argumentResolver:uniqueUuid689):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid690,argumentResolver:uniqueUuid691):list4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid685"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "arrayListItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid686"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid687"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid688"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid689"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid690"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid691"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "addListeners"
    sourceCodeSignature: "void addListeners(ApplicationListener<?>... listeners)"
    returnType: "void"
    parameters:
    - name: "listeners"
      type: "org.springframework.context.ApplicationListener[]"
    instructionFingerprint: "FF011F1CFC443B491BD1D45BA8948100"
  paths:
  - pathId: "path1"
    testPathName: "addListenersTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "951C8C976E2E3B2756C15C9B0B112B6F"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "listeners"
      modelFingerprint: "2AAEB3DDF0E8797BA450B2E5E1FFE0A3"
      valueUuid: "listeners"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid692):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "C320B20653A22B9C646F1A3191D75758"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A85230F96F7FEDC299CF0684987CBF30"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid693,argumentResolver:uniqueUuid694):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid695,argumentResolver:uniqueUuid696):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid697,argumentResolver:uniqueUuid698):list4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.context.ApplicationListener[]"
      genericValueType: "?"
      uuid: "listeners"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid692"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "arrayListItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid693"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid694"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid695"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid696"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid697"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid698"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "getListeners"
    sourceCodeSignature: "Set<ApplicationListener<?>> getListeners()"
    returnType: "java.util.Set"
    genericReturnType: "org.springframework.context.ApplicationListener<?>"
    instructionFingerprint: "6E715C6DBBDEDB40C94541C900ACDDC3"
  paths:
  - pathId: "path1"
    testPathName: "getListenersTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "7FA6F11E1F5D1E0FD4CCB11599BB1477"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid699):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "C320B20653A22B9C646F1A3191D75758"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A85230F96F7FEDC299CF0684987CBF30"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid700,argumentResolver:uniqueUuid701):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid702,argumentResolver:uniqueUuid703):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid704,argumentResolver:uniqueUuid705):list4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "13EC1D6EA9D9A12FC2B1988A97880C3F"
      valueUuid: "linkedHashSet3"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid699"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "arrayListItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid700"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid701"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid702"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid703"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid704"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid705"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.LinkedHashSet"
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "linkedHashSet3"
    calledSomeStaticInternalMethod: true
- method:
    name: "setApplicationStartup"
    sourceCodeSignature: "void setApplicationStartup(ApplicationStartup applicationStartup)"
    returnType: "void"
    parameters:
    - name: "applicationStartup"
      type: "org.springframework.core.metrics.ApplicationStartup"
    instructionFingerprint: "B62F7E043105BA50F331F8A1EEBB285B"
  paths:
  - pathId: "path1"
    testPathName: "setApplicationStartupWhenApplicationStartupIsNotNull"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "FD38E198C8C82BF348AB7835665D6546"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "applicationStartup"
      modelFingerprint: "E6FA8D24A01675AE1A78544C1B223327"
      valueUuid: "applicationStartup"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid706):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "C320B20653A22B9C646F1A3191D75758"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A85230F96F7FEDC299CF0684987CBF30"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid707,argumentResolver:uniqueUuid708):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid709,argumentResolver:uniqueUuid710):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid711,argumentResolver:uniqueUuid712):list4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    - type: "STATE_VERIFICATION_FIELD"
      name: "applicationStartup"
      modelFingerprint: "EA69281AB829E20E9F4461593DE1438C"
      valueUuid: "applicationStartup"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.metrics.ApplicationStartup"
      uuid: "applicationStartup"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid706"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "arrayListItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid707"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid708"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid709"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid710"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid711"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid712"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.metrics.ApplicationStartup"
      uuid: "applicationStartup"
    branches:
    - lineNumber: 1292
      expression: "applicationStartup != null"
      range: "(1292,30)-(1292,55)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "setApplicationStartupWhenApplicationStartupIsNull"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "6C19C21B79D65213CE275C8ABE4A8B37"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BBA5D48EA5EB2E44DF4CB51C16CA8F9A"
      valueUuid: "target"
    - type: "INPUT"
      name: "applicationStartup"
      modelFingerprint: "5A4D41D75CFA9FE553055CFD425962D1"
      valueUuid: "applicationStartup"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D7ECAF3F8B75737277AF204579B1A394"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:primarySources,message:uniqueUuid713):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationType.class"
      modelFingerprint: "C320B20653A22B9C646F1A3191D75758"
      valueUuid: "WebApplicationType.class"
      methodExercised:
        expression: "deduceFromClasspath():webApplicationType"
        staticAccess: true
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader):springFactoriesLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A85230F96F7FEDC299CF0684987CBF30"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid714,argumentResolver:uniqueUuid715):list2"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader2"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader2):springFactoriesLoader2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F54C0FCFB33572AF3A7ED6F2F8D5BC4A"
      valueUuid: "springFactoriesLoader2"
      methodExercised:
        expression: "load(factoryType:uniqueUuid716,argumentResolver:uniqueUuid717):list3"
    - type: "FIELD"
      name: "resourceLoader"
      modelFingerprint: "CA1C00214822C4B5F02255B112F7EE18"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader3"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class"
      modelFingerprint: "550639DC954F1D0BD5420E99E2A3CF06"
      valueUuid: "SpringFactoriesLoader.class"
      methodExercised:
        expression: "forDefaultResourceLocation(classLoader:classLoader3):springFactoriesLoader3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBFF8238FA905571DFB5DDB3F742A068"
      valueUuid: "springFactoriesLoader3"
      methodExercised:
        expression: "load(factoryType:uniqueUuid718,argumentResolver:uniqueUuid719):list4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    - type: "STATE_VERIFICATION_FIELD"
      name: "applicationStartup"
      modelFingerprint: "29DCB04302B0B4D9849E0DF1B1DA7675"
      valueUuid: "applicationStartup2"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "primarySources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "target"
    - sapientType: "NULL"
      valueType: "org.springframework.core.metrics.ApplicationStartup"
      uuid: "applicationStartup"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "primarySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PrimarySources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid713"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "WebApplicationType.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.BootstrapRegistryInitializer"
          uuid: "arrayListItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistryInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "uniqueUuid714"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid715"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationContextInitializer<?>"
      uuid: "list3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid716"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid717"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.context.ApplicationListener<?>"
      uuid: "list4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationListener"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationListener"
      uuid: "uniqueUuid718"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "uniqueUuid719"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.core.metrics.ApplicationStartup"
        fieldName: "DEFAULT"
      valueType: "org.springframework.core.metrics.ApplicationStartup"
      uuid: "applicationStartup2"
    branches:
    - lineNumber: 1292
      expression: "applicationStartup != null"
      range: "(1292,30)-(1292,55)"
      evaluatedAs: false
- method:
    name: "getApplicationStartup"
    sourceCodeSignature: "ApplicationStartup getApplicationStartup()"
    returnType: "org.springframework.core.metrics.ApplicationStartup"
    instructionFingerprint: "CA475053B4D982471066C8B33E2DFB5A"
  paths:
  - pathId: "path1"
    testPathName: "getApplicationStartupTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "D7037F3B90B40733A5BB8D5B1E7F7C1F"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues: []
- method:
    name: "isKeepAlive"
    sourceCodeSignature: "boolean isKeepAlive()"
    returnType: "boolean"
    instructionFingerprint: "27234457073B1B1B8DD361A189368049"
  paths:
  - pathId: "path1"
    testPathName: "isKeepAliveTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "58DC78DCC08EEF86B7FB78C825371087"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues: []
- method:
    name: "setKeepAlive"
    sourceCodeSignature: "void setKeepAlive(boolean keepAlive)"
    returnType: "void"
    parameters:
    - name: "keepAlive"
      type: "boolean"
    instructionFingerprint: "1E38D59965C6D47A384DB46854CC23FE"
  paths:
  - pathId: "path1"
    testPathName: "setKeepAliveTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "6E69BC90694FCB74525C4EDEA063899A"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues: []
- method:
    name: "getShutdownHandlers"
    sourceCodeSignature: "SpringApplicationShutdownHandlers getShutdownHandlers()"
    returnType: "org.springframework.boot.SpringApplicationShutdownHandlers"
    instructionFingerprint: "16D1547E223569C959A7C3FBD1989D80"
  paths:
  - pathId: "path1"
    testPathName: "getShutdownHandlersTest"
    modelFingerprint: "CE4A9BDA1DDF5FD3482D6319FBB1DD44"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "FIELD"
      name: "shutdownHook"
      modelFingerprint: "FB6EE59FFFA14D994C59C545011CDE37"
      valueUuid: "springApplicationShutdownHook"
      methodExercised:
        expression: "getHandlers():springApplicationShutdownHandlers"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "4FBD08ACD8D13EDE7D4B6969EBECB8E8"
      valueUuid: "springApplicationShutdownHandlers"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplicationShutdownHook"
        parameters: []
      valueType: "org.springframework.boot.SpringApplicationShutdownHook"
      uuid: "springApplicationShutdownHook"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.SpringApplicationShutdownHandlers"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.SpringApplicationShutdownHook"
            parameters: []
          valueType: "org.springframework.boot.SpringApplicationShutdownHook"
          uuid: "springApplicationShutdownHook"
          fixed: true
        methodParameters: []
        methodName: "getHandlers"
      valueType: "org.springframework.boot.SpringApplicationShutdownHandlers"
      uuid: "springApplicationShutdownHandlers"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.SpringApplicationShutdownHandlers"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.SpringApplicationShutdownHook"
            parameters: []
          valueType: "org.springframework.boot.SpringApplicationShutdownHook"
          uuid: "springApplicationShutdownHook"
          fixed: true
        methodParameters: []
        methodName: "getHandlers"
      valueType: "org.springframework.boot.SpringApplicationShutdownHandlers"
      uuid: "springApplicationShutdownHandlers"
- method:
    name: "run"
    sourceCodeSignature: "ConfigurableApplicationContext run(Class<?> primarySource,\
      \ String... args)"
    returnType: "org.springframework.context.ConfigurableApplicationContext"
    parameters:
    - name: "primarySource"
      type: "java.lang.Class"
    - name: "args"
      type: "java.lang.String[]"
    instructionFingerprint: "A500FF39AB8C7AE01D669BDAA7F9E41F"
  paths:
  - pathId: "path1"
    testPathName: "run1Test"
    modelFingerprint: "AB55250E7C94B907ABD7F829B7843134"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "primarySource"
      modelFingerprint: "3CE48379E424B2040A93BCE7149B6643"
      valueUuid: "primarySource"
    - type: "INPUT"
      name: "args"
      modelFingerprint: "62B8E965720EE46A7489315174A3A841"
      valueUuid: "args"
    - type: "STATIC"
      name: "SpringApplication.class"
      modelFingerprint: "C5DF334A1D5EAD1B77A66E457F37463C"
      valueUuid: "SpringApplication.class"
      methodExercised:
        expression: "run(primarySources:classArray,args:args):configurableApplicationContext"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "AE03A11E5B8246E8E9234219567D5484"
      valueUuid: "configurableApplicationContext"
    disabled: false
    allValues:
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "primarySource"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "SpringApplication.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "primarySource"
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "classArray"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
- method:
    name: "run"
    sourceCodeSignature: "ConfigurableApplicationContext run(Class<?> primarySource,\
      \ String... args)"
    returnType: "org.springframework.context.ConfigurableApplicationContext"
    parameters:
    - name: "primarySources"
      type: "java.lang.Class[]"
    - name: "args"
      type: "java.lang.String[]"
    instructionFingerprint: "F799F65038C499198AD12E743D2C7CED"
  paths:
  - pathId: "path1"
    testPathName: "run2Test"
    modelFingerprint: "3203A201506CBEE3117A7E21D9E562E6"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".walk(this::findMainClass)"
      lineNumber: 301
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type StackWalker - Method: walk"
    allValues: []
  - pathId: "path1"
    testPathName: "run1Test"
    modelFingerprint: "AB55250E7C94B907ABD7F829B7843134"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "primarySource"
      modelFingerprint: "3CE48379E424B2040A93BCE7149B6643"
      valueUuid: "primarySource"
    - type: "INPUT"
      name: "args"
      modelFingerprint: "62B8E965720EE46A7489315174A3A841"
      valueUuid: "args"
    - type: "STATIC"
      name: "SpringApplication.class"
      modelFingerprint: "C5DF334A1D5EAD1B77A66E457F37463C"
      valueUuid: "SpringApplication.class"
      methodExercised:
        expression: "run(primarySources:classArray,args:args):configurableApplicationContext"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "AE03A11E5B8246E8E9234219567D5484"
      valueUuid: "configurableApplicationContext"
    disabled: false
    allValues:
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "primarySource"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "SpringApplication.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "primarySource"
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "classArray"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
- method:
    name: "exit"
    sourceCodeSignature: "int exit(ApplicationContext context, ExitCodeGenerator...\
      \ exitCodeGenerators)"
    returnType: "int"
    parameters:
    - name: "context"
      type: "org.springframework.context.ApplicationContext"
    - name: "exitCodeGenerators"
      type: "org.springframework.boot.ExitCodeGenerator[]"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 8
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "C8CB86D0279584A4045DFE4FC44BFE60"
  paths:
  - pathId: "path1"
    testPathName: "exitWhenContextNotInstanceOfConfigurableApplicationContext"
    modelFingerprint: "72228766A5FD5BD968D874D5CB2330D6"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "context"
      modelFingerprint: "A4FADCC1E02EED3729A8336C60442EF2"
      valueUuid: "context"
    - type: "INPUT"
      name: "exitCodeGenerators"
      modelFingerprint: "82E8F7A3CA151D974D8C39678FE4F3DF"
      valueUuid: "exitCodeGenerators"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "34ABE5BBFAD8FBC3BAC652C63106980D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:context,message:uniqueUuid748):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "96D9EF51DA2DBB32C8494B725E77DE61"
      valueUuid: "context"
      methodExercised:
        expression: "getBeansOfType(type:uniqueUuid749):map"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
    - type: "LOCAL_VARIABLE"
      name: "generators"
      modelFingerprint: "4D80D5840A0C71FEB56D2258A215FE44"
      valueUuid: "exitCodeGenerators2"
      methodExercised:
        expression: "addAll(generators:exitCodeGenerators):void2"
    - type: "LOCAL_VARIABLE"
      name: "generators"
      modelFingerprint: "C65DD636B24B8506B84AD748B3244FF1"
      valueUuid: "exitCodeGenerators2"
      methodExercised:
        expression: "addAll(generators:collection):void3"
    - type: "LOCAL_VARIABLE"
      name: "generators"
      modelFingerprint: "3982896209BB2CD4CC57230A4ACD6258"
      valueUuid: "exitCodeGenerators2"
      methodExercised:
        expression: "getExitCode():int2"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "3409286F7CD8D3F276E70C8A816B4398"
      valueUuid: "context"
      methodExercised:
        expression: "publishEvent(event:exitCodeEvent):void4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8DADD3D4F5EBEB6E3C2BA867411B5286"
      valueUuid: "int2"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "generators.addAll(exitCodeGenerators);"
      lineNumber: 1392
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: generators - Method: addAll"
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "context"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.ExitCodeGenerator[]"
      uuid: "exitCodeGenerators"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "context"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Context must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid748"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "context"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.ExitCodeGenerator"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.ExitCodeGenerator"
      uuid: "uniqueUuid749"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ExitCodeGenerators"
        parameters: []
      valueType: "org.springframework.boot.ExitCodeGenerators"
      uuid: "exitCodeGenerators2"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.ExitCodeGenerator[]"
      uuid: "exitCodeGenerators"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ExitCodeGenerators"
        parameters: []
      valueType: "org.springframework.boot.ExitCodeGenerators"
      uuid: "exitCodeGenerators2"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "org.springframework.boot.ExitCodeGenerator"
      uuid: "collection"
      collectionUuid: "map"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ExitCodeGenerators"
        parameters: []
      valueType: "org.springframework.boot.ExitCodeGenerators"
      uuid: "exitCodeGenerators2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: -1
      valueType: "int"
      uuid: "int2"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.ExitCodeEvent"
      uuid: "exitCodeEvent"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: -1
      valueType: "int"
      uuid: "int2"
    branches:
    - lineNumber: 1395
      expression: "exitCode != 0"
      range: "(1395,9)-(1395,21)"
      evaluatedAs: true
    - lineNumber: 1462
      expression: "context instanceof ConfigurableApplicationContext closable"
      range: "(1462,7)-(1462,64)"
      evaluatedAs: false
      internalMethodName: "close"
    calledSomeStaticInternalMethod: true
  - pathId: "path3"
    testPathName: "exitWhenExitCodeNotEquals0"
    modelFingerprint: "486D0C6D1F6E57053552AB737522A9E6"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "context"
      modelFingerprint: "A4FADCC1E02EED3729A8336C60442EF2"
      valueUuid: "context"
    - type: "INPUT"
      name: "exitCodeGenerators"
      modelFingerprint: "82E8F7A3CA151D974D8C39678FE4F3DF"
      valueUuid: "exitCodeGenerators"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "34ABE5BBFAD8FBC3BAC652C63106980D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:context,message:uniqueUuid750):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "96D9EF51DA2DBB32C8494B725E77DE61"
      valueUuid: "context"
      methodExercised:
        expression: "getBeansOfType(type:uniqueUuid751):map"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
    - type: "LOCAL_VARIABLE"
      name: "generators"
      modelFingerprint: "4D80D5840A0C71FEB56D2258A215FE44"
      valueUuid: "exitCodeGenerators2"
      methodExercised:
        expression: "addAll(generators:exitCodeGenerators):void2"
    - type: "LOCAL_VARIABLE"
      name: "generators"
      modelFingerprint: "C65DD636B24B8506B84AD748B3244FF1"
      valueUuid: "exitCodeGenerators2"
      methodExercised:
        expression: "addAll(generators:collection):void3"
    - type: "LOCAL_VARIABLE"
      name: "generators"
      modelFingerprint: "D628F6E15FB40EDEA38738DF554737B7"
      valueUuid: "exitCodeGenerators2"
      methodExercised:
        expression: "getExitCode():int2"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "6BE790C99473CD5E467919208BFF4BDA"
      valueUuid: "context"
      methodExercised:
        expression: "publishEvent(event:exitCodeEvent):void4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B6D407614DB44C84166BB746871DE945"
      valueUuid: "int2"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "generators.addAll(exitCodeGenerators);"
      lineNumber: 1392
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: generators - Method: addAll"
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "context"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.ExitCodeGenerator[]"
      uuid: "exitCodeGenerators"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "context"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Context must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid750"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "context"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.ExitCodeGenerator"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.ExitCodeGenerator"
      uuid: "uniqueUuid751"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ExitCodeGenerators"
        parameters: []
      valueType: "org.springframework.boot.ExitCodeGenerators"
      uuid: "exitCodeGenerators2"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.ExitCodeGenerator[]"
      uuid: "exitCodeGenerators"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ExitCodeGenerators"
        parameters: []
      valueType: "org.springframework.boot.ExitCodeGenerators"
      uuid: "exitCodeGenerators2"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "org.springframework.boot.ExitCodeGenerator"
      uuid: "collection"
      collectionUuid: "map"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ExitCodeGenerators"
        parameters: []
      valueType: "org.springframework.boot.ExitCodeGenerators"
      uuid: "exitCodeGenerators2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int2"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.ExitCodeEvent"
      uuid: "exitCodeEvent"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int2"
    branches:
    - lineNumber: 1395
      expression: "exitCode != 0"
      range: "(1395,9)-(1395,21)"
      evaluatedAs: true
    - lineNumber: 1462
      expression: "context instanceof ConfigurableApplicationContext closable"
      range: "(1462,7)-(1462,64)"
      evaluatedAs: false
      internalMethodName: "close"
    - lineNumber: 1403
      expression: "catch-exception (Exception)"
      range: "(1403,3)-(1403,21)"
      evaluatedAs: true
    - lineNumber: 1405
      expression: "exitCode != 0"
      range: "(1405,16)-(1405,28)"
      evaluatedAs: true
    calledSomeStaticInternalMethod: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 8
      catchExceptions:
      - "java.lang.Exception"
  - pathId: "path4"
    testPathName: "exitWhenExitCodeEquals0"
    modelFingerprint: "C124EB9F63ACAABA539D6388211BC988"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "context"
      modelFingerprint: "A4FADCC1E02EED3729A8336C60442EF2"
      valueUuid: "context"
    - type: "INPUT"
      name: "exitCodeGenerators"
      modelFingerprint: "82E8F7A3CA151D974D8C39678FE4F3DF"
      valueUuid: "exitCodeGenerators"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "34ABE5BBFAD8FBC3BAC652C63106980D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:context,message:uniqueUuid752):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "96D9EF51DA2DBB32C8494B725E77DE61"
      valueUuid: "context"
      methodExercised:
        expression: "getBeansOfType(type:uniqueUuid753):map"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
    - type: "LOCAL_VARIABLE"
      name: "generators"
      modelFingerprint: "4D80D5840A0C71FEB56D2258A215FE44"
      valueUuid: "exitCodeGenerators2"
      methodExercised:
        expression: "addAll(generators:exitCodeGenerators):void2"
    - type: "LOCAL_VARIABLE"
      name: "generators"
      modelFingerprint: "C65DD636B24B8506B84AD748B3244FF1"
      valueUuid: "exitCodeGenerators2"
      methodExercised:
        expression: "addAll(generators:collection):void3"
    - type: "LOCAL_VARIABLE"
      name: "generators"
      modelFingerprint: "03687EE2219D58FCEA016830EFFECF08"
      valueUuid: "exitCodeGenerators2"
      methodExercised:
        expression: "getExitCode():int2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B82821A36FAFC461A4BA4C050EF71A78"
      valueUuid: "int3"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "generators.addAll(exitCodeGenerators);"
      lineNumber: 1392
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: generators - Method: addAll"
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "context"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.ExitCodeGenerator[]"
      uuid: "exitCodeGenerators"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "context"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Context must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid752"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "context"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.ExitCodeGenerator"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.ExitCodeGenerator"
      uuid: "uniqueUuid753"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ExitCodeGenerators"
        parameters: []
      valueType: "org.springframework.boot.ExitCodeGenerators"
      uuid: "exitCodeGenerators2"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.ExitCodeGenerator[]"
      uuid: "exitCodeGenerators"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ExitCodeGenerators"
        parameters: []
      valueType: "org.springframework.boot.ExitCodeGenerators"
      uuid: "exitCodeGenerators2"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "org.springframework.boot.ExitCodeGenerator"
      uuid: "collection"
      collectionUuid: "map"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ExitCodeGenerators"
        parameters: []
      valueType: "org.springframework.boot.ExitCodeGenerators"
      uuid: "exitCodeGenerators2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int2"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int3"
      fixed: true
    branches:
    - lineNumber: 1395
      expression: "exitCode != 0"
      range: "(1395,9)-(1395,21)"
      evaluatedAs: false
    - lineNumber: 1462
      expression: "context instanceof ConfigurableApplicationContext closable"
      range: "(1462,7)-(1462,64)"
      evaluatedAs: false
      internalMethodName: "close"
    - lineNumber: 1403
      expression: "catch-exception (Exception)"
      range: "(1403,3)-(1403,21)"
      evaluatedAs: true
    - lineNumber: 1405
      expression: "exitCode != 0"
      range: "(1405,16)-(1405,28)"
      evaluatedAs: false
    calledSomeStaticInternalMethod: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 8
      catchExceptions:
      - "java.lang.Exception"
- method:
    name: "from"
    sourceCodeSignature: "SpringApplication.Augmented from(ThrowingConsumer<String[]>\
      \ main)"
    returnType: "org.springframework.boot.SpringApplication$Augmented"
    parameters:
    - name: "main"
      type: "org.springframework.util.function.ThrowingConsumer"
    instructionFingerprint: "7488CAF5ADB8086D8236D2AA53D739A6"
  paths:
  - pathId: "path1"
    testPathName: "fromTest"
    modelFingerprint: "C64D36473F41AEED3A4C31BE3818B204"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "main"
      modelFingerprint: "B755A33FF79D030C379ADD906734A747"
      valueUuid: "main"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "BAAAE51E9424F033591131E5C6BBE264"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:main,message:uniqueUuid754):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "6F6C9E1361DF4633715881859A1625B5"
      valueUuid: "springApplication.Augmented"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.util.function.ThrowingConsumer"
      genericValueType: "java.lang.String[]"
      uuid: "main"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.function.ThrowingConsumer"
      genericValueType: "java.lang.String[]"
      uuid: "main"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Main must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid754"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication$Augmented"
        parameters:
        - name: "main"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.util.function.ThrowingConsumer"
            genericValueType: "java.lang.String[]"
            uuid: "main"
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Set"
            genericValueType: "java.lang.Class<?>"
            uuid: "set"
      valueType: "org.springframework.boot.SpringApplication$Augmented"
      uuid: "springApplication.Augmented"
      fixed: true
- method:
    name: "withHook"
    sourceCodeSignature: "void withHook(SpringApplicationHook hook, Runnable action)"
    returnType: "void"
    parameters:
    - name: "hook"
      type: "org.springframework.boot.SpringApplicationHook"
    - name: "action"
      type: "java.lang.Runnable"
    instructionFingerprint: "34FD9E3CC4CB5A0B4210A3DE6937FB56"
  paths:
  - pathId: "path1"
    testPathName: "withHookTest"
    modelFingerprint: "988A1FFD3E0848457B98DC95D195FF2F"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "hook"
      modelFingerprint: "1ACFB0A2F07905ECF7A3BFD0013BB66D"
      valueUuid: "hook"
    - type: "INPUT"
      name: "action"
      modelFingerprint: "2FFBB8669E5E6900BABC26848B5558F4"
      valueUuid: "action"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "applicationHook.set(hook);"
      lineNumber: 1452
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: applicationHook - Method: set"
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplicationHook"
      uuid: "hook"
    - sapientType: "MOCK"
      valueType: "java.lang.Runnable"
      uuid: "action"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    calledSomeStaticInternalMethod: true
- method:
    name: "withHook"
    sourceCodeSignature: "<T> T withHook(SpringApplicationHook hook, ThrowingSupplier<T>\
      \ action)"
    returnType: "java.lang.Object"
    parameters:
    - name: "hook"
      type: "org.springframework.boot.SpringApplicationHook"
    - name: "action"
      type: "org.springframework.util.function.ThrowingSupplier"
    instructionFingerprint: "23A2EFDFC4F42C799644080323EC0B41"
  paths:
  - pathId: "path1"
    testPathName: "withHook1Test"
    modelFingerprint: "DE54AD2AD72AE151811F490CA5CA95F0"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "hook"
      modelFingerprint: "1ACFB0A2F07905ECF7A3BFD0013BB66D"
      valueUuid: "hook"
    - type: "INPUT"
      name: "action"
      modelFingerprint: "D2C5105474D5A532457527D858420CB1"
      valueUuid: "action"
    - type: "LOCAL_VARIABLE"
      name: "action"
      modelFingerprint: "0C5FECA9DAA4030CAE28EA45C20F657A"
      valueUuid: "action"
      methodExercised:
        expression: "get():object"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "applicationHook.set(hook);"
      lineNumber: 1452
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: applicationHook - Method: set"
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplicationHook"
      uuid: "hook"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.function.ThrowingSupplier"
      genericValueType: "java.lang.Object"
      uuid: "action"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.function.ThrowingSupplier"
      genericValueType: "java.lang.Object"
      uuid: "action"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
