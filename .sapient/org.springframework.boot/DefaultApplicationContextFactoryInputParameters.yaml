---
modelFingerprint: "347D7C6D430FBB5D3CFA79AE8EADEB26"
targetClass:
  fullClassName: "org.springframework.boot.DefaultApplicationContextFactory"
methods:
- method:
    name: "getEnvironmentType"
    sourceCodeSignature: "Class<? extends ConfigurableEnvironment> getEnvironmentType(WebApplicationType\
      \ webApplicationType)"
    returnType: "java.lang.Class"
    genericReturnType: "? extends org.springframework.core.env.ConfigurableEnvironment"
    parameters:
    - name: "webApplicationType"
      type: "org.springframework.boot.WebApplicationType"
    instructionFingerprint: "808E3DF40FCBAA8C2C0D84FECD5A51FD"
  paths:
  - pathId: "path1"
    testPathName: "getEnvironmentTypeWhenDefaultResultIsNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "B9ED84FE1F10D333091FC411F82751C2"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "webApplicationType"
      modelFingerprint: "C8018C7621E24BA70976325317E1BD20"
      valueUuid: "webApplicationType"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class.real"
      modelFingerprint: "CDAB5059C43D085181B2BBB30D001324"
      valueUuid: "SpringFactoriesLoader.class.real"
      methodExercised:
        expression: "loadFactories(factoryType:uniqueUuid1,classLoader:classLoader):list"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "678BB11625E55BFD3C8DABEA02107DA0"
      valueUuid: "object"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.DefaultApplicationContextFactory"
        parameters: []
      valueType: "org.springframework.boot.DefaultApplicationContextFactory"
      uuid: "target"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "REAL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class.real"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      uuid: "list"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.ApplicationContextFactory"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.ClassLoader"
        localVariableValue:
          sapientType: "CLASS"
          content: !<regular>
            value: "org.springframework.boot.DefaultApplicationContextFactory"
          valueType: "java.lang.Class"
          genericValueType: "org.springframework.boot.DefaultApplicationContextFactory"
          uuid: "uniqueUuid2"
          fixed: true
        methodParameters: []
        methodName: "getClassLoader"
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      uuid: "object"
      fixed: true
      explicitCastNeeded: true
    branches:
    - lineNumber: 68
      expression: "for-each(SpringFactoriesLoader.loadFactories(ApplicationContextFactory.class,\
        \ getClass().getClassLoader()))"
      range: "(68,46)-(69,32)"
      evaluatedAs: false
      internalMethodName: "getFromSpringFactories"
    - lineNumber: 75
      expression: "defaultResult != null"
      range: "(75,11)-(75,31)"
      evaluatedAs: false
      internalMethodName: "getFromSpringFactories"
- method:
    name: "createEnvironment"
    sourceCodeSignature: "ConfigurableEnvironment createEnvironment(WebApplicationType\
      \ webApplicationType)"
    returnType: "org.springframework.core.env.ConfigurableEnvironment"
    parameters:
    - name: "webApplicationType"
      type: "org.springframework.boot.WebApplicationType"
    instructionFingerprint: "5760C1E585E1FF86387DEED8D2AA6F94"
  paths:
  - pathId: "path1"
    testPathName: "createEnvironmentWhenDefaultResultIsNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "59F96237751200F3D357761264336B62"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "webApplicationType"
      modelFingerprint: "C8018C7621E24BA70976325317E1BD20"
      valueUuid: "webApplicationType"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class.real"
      modelFingerprint: "CDAB5059C43D085181B2BBB30D001324"
      valueUuid: "SpringFactoriesLoader.class.real"
      methodExercised:
        expression: "loadFactories(factoryType:uniqueUuid3,classLoader:classLoader):list"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "07C617B6F1D348BCC0225644494DDADD"
      valueUuid: "object"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.DefaultApplicationContextFactory"
        parameters: []
      valueType: "org.springframework.boot.DefaultApplicationContextFactory"
      uuid: "target"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "REAL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class.real"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      uuid: "list"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.ApplicationContextFactory"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.ClassLoader"
        localVariableValue:
          sapientType: "CLASS"
          content: !<regular>
            value: "org.springframework.boot.DefaultApplicationContextFactory"
          valueType: "java.lang.Class"
          genericValueType: "org.springframework.boot.DefaultApplicationContextFactory"
          uuid: "uniqueUuid4"
          fixed: true
        methodParameters: []
        methodName: "getClassLoader"
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "NULL"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "object"
      fixed: true
      explicitCastNeeded: true
    branches:
    - lineNumber: 68
      expression: "for-each(SpringFactoriesLoader.loadFactories(ApplicationContextFactory.class,\
        \ getClass().getClassLoader()))"
      range: "(68,46)-(69,32)"
      evaluatedAs: false
      internalMethodName: "getFromSpringFactories"
    - lineNumber: 75
      expression: "defaultResult != null"
      range: "(75,11)-(75,31)"
      evaluatedAs: false
      internalMethodName: "getFromSpringFactories"
- method:
    name: "create"
    sourceCodeSignature: "ConfigurableApplicationContext create(WebApplicationType\
      \ webApplicationType)"
    returnType: "org.springframework.context.ConfigurableApplicationContext"
    parameters:
    - name: "webApplicationType"
      type: "org.springframework.boot.WebApplicationType"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "9D110A2722A0600DFB6891259A0A2B20"
  paths:
  - pathId: "path1"
    testPathName: "createWhenDefaultResultIsNotNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "69658ECC591EDBE5BD6DA2CD8D8BD49E"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "webApplicationType"
      modelFingerprint: "C8018C7621E24BA70976325317E1BD20"
      valueUuid: "webApplicationType"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class.real"
      modelFingerprint: "CDAB5059C43D085181B2BBB30D001324"
      valueUuid: "SpringFactoriesLoader.class.real"
      methodExercised:
        expression: "loadFactories(factoryType:uniqueUuid5,classLoader:classLoader):list"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "AE03A11E5B8246E8E9234219567D5484"
      valueUuid: "object"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return (defaultResult != null) ? defaultResult.get() : null;"
      lineNumber: 75
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: defaultResult - Method: get"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.DefaultApplicationContextFactory"
        parameters: []
      valueType: "org.springframework.boot.DefaultApplicationContextFactory"
      uuid: "target"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "REAL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class.real"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      uuid: "list"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.ApplicationContextFactory"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.ClassLoader"
        localVariableValue:
          sapientType: "CLASS"
          content: !<regular>
            value: "org.springframework.boot.DefaultApplicationContextFactory"
          valueType: "java.lang.Class"
          genericValueType: "org.springframework.boot.DefaultApplicationContextFactory"
          uuid: "uniqueUuid6"
          fixed: true
        methodParameters: []
        methodName: "getClassLoader"
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "object"
      explicitCastNeeded: true
    branches:
    - lineNumber: 68
      expression: "for-each(SpringFactoriesLoader.loadFactories(ApplicationContextFactory.class,\
        \ getClass().getClassLoader()))"
      range: "(68,46)-(69,32)"
      evaluatedAs: false
      internalMethodName: "getFromSpringFactories"
    - lineNumber: 75
      expression: "defaultResult != null"
      range: "(75,11)-(75,31)"
      evaluatedAs: true
      internalMethodName: "getFromSpringFactories"
  - pathId: "path2"
    testPathName: "createWhenCaughtExceptionThrowsIllegalStateException"
    constructorSignature: "<init>() : void"
    modelFingerprint: "2C1C772BBD7BD4A3EC7631B484D55FAB"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "webApplicationType"
      modelFingerprint: "C8018C7621E24BA70976325317E1BD20"
      valueUuid: "webApplicationType"
    - type: "STATIC"
      name: "SpringFactoriesLoader.class.real"
      modelFingerprint: "CDAB5059C43D085181B2BBB30D001324"
      valueUuid: "SpringFactoriesLoader.class.real"
      methodExercised:
        expression: "loadFactories(factoryType:uniqueUuid7,classLoader:classLoader):list"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "6DCF9799DC7BEDCB52E2EEBD59577B0C"
      valueUuid: "illegalStateException"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return (defaultResult != null) ? defaultResult.get() : null;"
      lineNumber: 75
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: defaultResult - Method: get"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.DefaultApplicationContextFactory"
        parameters: []
      valueType: "org.springframework.boot.DefaultApplicationContextFactory"
      uuid: "target"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "REAL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "SpringFactoriesLoader.class.real"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      uuid: "list"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.ApplicationContextFactory"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "uniqueUuid7"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.ClassLoader"
        localVariableValue:
          sapientType: "CLASS"
          content: !<regular>
            value: "org.springframework.boot.DefaultApplicationContextFactory"
          valueType: "java.lang.Class"
          genericValueType: "org.springframework.boot.DefaultApplicationContextFactory"
          uuid: "uniqueUuid8"
          fixed: true
        methodParameters: []
        methodName: "getClassLoader"
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Unable create a default ApplicationContext instance, you may\
                \ need a custom ApplicationContextFactory"
            valueType: "java.lang.String"
            uuid: "uniqueUuid9"
            fixed: true
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Exception"
              parameters: []
            valueType: "java.lang.Exception"
            uuid: "exception"
      valueType: "java.lang.IllegalStateException"
      uuid: "illegalStateException"
      fixed: true
    branches:
    - lineNumber: 68
      expression: "for-each(SpringFactoriesLoader.loadFactories(ApplicationContextFactory.class,\
        \ getClass().getClassLoader()))"
      range: "(68,46)-(69,32)"
      evaluatedAs: false
      internalMethodName: "getFromSpringFactories"
    - lineNumber: 75
      expression: "defaultResult != null"
      range: "(75,11)-(75,31)"
      evaluatedAs: true
      internalMethodName: "getFromSpringFactories"
    - lineNumber: 53
      expression: "catch-exception (Exception)"
      range: "(53,3)-(53,21)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
