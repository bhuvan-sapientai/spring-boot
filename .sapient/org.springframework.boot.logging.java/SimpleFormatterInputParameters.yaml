---
modelFingerprint: "E9D54A985DE2111C7BA16124B1F06344"
targetClass:
  fullClassName: "org.springframework.boot.logging.java.SimpleFormatter"
methods:
- method:
    name: "format"
    sourceCodeSignature: "String format(LogRecord record)"
    returnType: "java.lang.String"
    parameters:
    - name: "record"
      type: "java.util.logging.LogRecord"
    instructionFingerprint: "1B865D35FE61865AD4860E482F74FE2B"
  paths:
  - pathId: "path1"
    testPathName: "formatWhenNameIsNotNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "8FE3F4A9CE0C64D23EF962E6FBD0780B"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "113ABC0F5AC27A2CEE7AEF2B96A41C1C"
      valueUuid: "target"
    - type: "INPUT"
      name: "record"
      modelFingerprint: "2298FF07E03DC044BCD4BC8DB6EDC704"
      valueUuid: "record"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "F7F660E09080B2D02E88FC67F6A92815"
      methodExercised:
        expression: "formatMessage(record:record):string9"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "26EE4C4C36995C7CEACDE6B3FC809284"
      valueUuid: "string14"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.System.getenv(java.lang.String) : java.lang.String"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.java.SimpleFormatter"
        parameters: []
      valueType: "org.springframework.boot.logging.java.SimpleFormatter"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.util.logging.LogRecord"
        parameters:
        - name: "level"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.util.logging.Level"
              method: "parse"
              methodParameters:
              - name: "name"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "name1"
                  valueType: "java.lang.String"
                  uuid: "record-level-name"
            valueType: "java.util.logging.Level"
            uuid: "record-level"
        - name: "msg"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "msg1"
            valueType: "java.lang.String"
            uuid: "record-msg"
      valueType: "java.util.logging.LogRecord"
      uuid: "record"
    - sapientType: "BASIC"
      content: !<regular>
        value: "F"
      valueType: "java.lang.String"
      uuid: "string9"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.util.logging.LogRecord"
        parameters:
        - name: "level"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.util.logging.Level"
              method: "parse"
              methodParameters:
              - name: "name"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "name1"
                  valueType: "java.lang.String"
                  uuid: "record-level-name"
            valueType: "java.util.logging.Level"
            uuid: "record-level"
        - name: "msg"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "msg1"
            valueType: "java.lang.String"
            uuid: "record-msg"
      valueType: "java.util.logging.LogRecord"
      uuid: "record"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string14"
    branches:
    - lineNumber: 53
      expression: "record.getThrown() == null"
      range: "(53,7)-(53,32)"
      evaluatedAs: true
      internalMethodName: "getThrowable"
    - lineNumber: 66
      expression: "name != null"
      range: "(66,11)-(66,22)"
      evaluatedAs: true
      internalMethodName: "getThreadName"
    calledSomeStaticInternalMethod: true
  - pathId: "path2"
    testPathName: "formatWhenRecordGetThrownIsNotNullAndNameIsNotNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "99A066777E8B6F49D7B7AFFC98F899E0"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "113ABC0F5AC27A2CEE7AEF2B96A41C1C"
      valueUuid: "target"
    - type: "INPUT"
      name: "record"
      modelFingerprint: "2298FF07E03DC044BCD4BC8DB6EDC704"
      valueUuid: "record"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "F7F660E09080B2D02E88FC67F6A92815"
      methodExercised:
        expression: "formatMessage(record:record):string9"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "26EE4C4C36995C7CEACDE6B3FC809284"
      valueUuid: "string14"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.System.getenv(java.lang.String) : java.lang.String"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.java.SimpleFormatter"
        parameters: []
      valueType: "org.springframework.boot.logging.java.SimpleFormatter"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.util.logging.LogRecord"
        parameters:
        - name: "level"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.util.logging.Level"
              method: "parse"
              methodParameters:
              - name: "name"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "name1"
                  valueType: "java.lang.String"
                  uuid: "record-level-name"
            valueType: "java.util.logging.Level"
            uuid: "record-level"
        - name: "msg"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "msg1"
            valueType: "java.lang.String"
            uuid: "record-msg"
      valueType: "java.util.logging.LogRecord"
      uuid: "record"
    - sapientType: "BASIC"
      content: !<regular>
        value: "F"
      valueType: "java.lang.String"
      uuid: "string9"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.util.logging.LogRecord"
        parameters:
        - name: "level"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.util.logging.Level"
              method: "parse"
              methodParameters:
              - name: "name"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "name1"
                  valueType: "java.lang.String"
                  uuid: "record-level-name"
            valueType: "java.util.logging.Level"
            uuid: "record-level"
        - name: "msg"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "msg1"
            valueType: "java.lang.String"
            uuid: "record-msg"
      valueType: "java.util.logging.LogRecord"
      uuid: "record"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string14"
    branches:
    - lineNumber: 53
      expression: "record.getThrown() == null"
      range: "(53,7)-(53,32)"
      evaluatedAs: false
      internalMethodName: "getThrowable"
    - lineNumber: 66
      expression: "name != null"
      range: "(66,11)-(66,22)"
      evaluatedAs: true
      internalMethodName: "getThreadName"
    calledSomeStaticInternalMethod: true
