---
modelFingerprint: "FF90DA1422DD1CC079C5E371910AF42F"
methods:
- method:
    name: "format"
    signature: "format(java.util.logging.LogRecord) : java.lang.String"
    sourceCodeSignature: "String format(LogRecord record)"
    instructionFingerprint: "5750E54A9EB386CA2F10C8EDDF1AC1F3"
  paths:
  - pathId: "path1"
    testPathName: "formatWhenNameIsNotNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "4205D6DEFF5D6F03497A79A469357FB5"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "113ABC0F5AC27A2CEE7AEF2B96A41C1C"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "record"
      modelFingerprint: "456FFD701CDEB8E9ECA3215667714C6A"
      index: 2
      valueUuid: "format_logRecord1"
    - type: "LOCAL_VARIABLE"
      name: "record"
      modelFingerprint: "7B635E1E0491B0C1322C00018D339F15"
      index: 3
      valueUuid: "format_logRecord1"
      methodExercised:
        target: "record"
        name: "getMillis"
        parameters: []
        signature: "getMillis(): long"
        returnValueUuid: "format_long1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "record"
      modelFingerprint: "01127F9C88E9B1531728EEFA72D610DF"
      index: 4
      valueUuid: "format_logRecord1"
      methodExercised:
        target: "record"
        name: "getLoggerName"
        parameters: []
        signature: "getLoggerName(): String"
        returnValueUuid: "format_string1"
        access: 1
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "15F3D33C96332E7C7909FA631CB73BB9"
      index: 5
      methodExercised:
        target: "target"
        name: "formatMessage"
        parameters:
        - name: "digit"
          valueUuid: "format_logRecord1"
        signature: "formatMessage(LogRecord): String"
        returnValueUuid: "format_string2"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "record"
      modelFingerprint: "F9930330BB5CD2A5D231DA34D17446FC"
      index: 6
      valueUuid: "format_logRecord1"
      methodExercised:
        target: "record"
        name: "getThrown"
        parameters: []
        signature: "getThrown(): Throwable"
        returnValueUuid: "getThrowable_throwable1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "record"
      modelFingerprint: "3DE737CDD4288D5BA14ADC5EE07EF89B"
      index: 7
      valueUuid: "format_logRecord1"
      methodExercised:
        target: "record"
        name: "getLoggerName"
        parameters: []
        signature: "getLoggerName(): String"
        returnValueUuid: "format_string4"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "record"
      modelFingerprint: "75D183CFF0B0B4C9705B3C75D05797B8"
      index: 8
      valueUuid: "format_logRecord1"
      methodExercised:
        target: "record"
        name: "getLevel"
        parameters: []
        signature: "getLevel(): Level"
        returnValueUuid: "format_level1"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "BCAF1333B8FD89D2E42C34124911ED44"
      index: 9
      valueUuid: "format_string6"
    uuid: "f6aba6ed-1741-3610-ae6b-01cb65d31d1a"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.System.getenv(java.lang.String) : java.lang.String"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.java.SimpleFormatter"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.java.SimpleFormatter"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.logging.LogRecord"
      uuid: "format_logRecord1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.logging.LogRecord"
      uuid: "format_logRecord1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "long"
      uuid: "format_long1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.logging.LogRecord"
      uuid: "format_logRecord1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "C"
      valueType: "java.lang.String"
      uuid: "format_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "F"
      valueType: "java.lang.String"
      uuid: "format_string2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.logging.LogRecord"
      uuid: "format_logRecord1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.logging.LogRecord"
      uuid: "format_logRecord1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.lang.Throwable"
      uuid: "getThrowable_throwable1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.logging.LogRecord"
      uuid: "format_logRecord1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "D"
      valueType: "java.lang.String"
      uuid: "format_string4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.logging.LogRecord"
      uuid: "format_logRecord1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.util.logging.Level"
        method: "parse"
        methodParameters:
        - name: "x"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "x1"
            valueType: "java.lang.String"
            uuid: "format_level1-x"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.logging.Level"
      uuid: "format_level1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "format_string6"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "formatWhenRecordGetThrownIsNotNullAndNameIsNotNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "1D3BCB50118F85672F865DB0481276FB"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "113ABC0F5AC27A2CEE7AEF2B96A41C1C"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "record"
      modelFingerprint: "456FFD701CDEB8E9ECA3215667714C6A"
      index: 2
      valueUuid: "format_logRecord1"
    - type: "LOCAL_VARIABLE"
      name: "record"
      modelFingerprint: "7B635E1E0491B0C1322C00018D339F15"
      index: 3
      valueUuid: "format_logRecord1"
      methodExercised:
        target: "record"
        name: "getMillis"
        parameters: []
        signature: "getMillis(): long"
        returnValueUuid: "format_long1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "record"
      modelFingerprint: "01127F9C88E9B1531728EEFA72D610DF"
      index: 4
      valueUuid: "format_logRecord1"
      methodExercised:
        target: "record"
        name: "getLoggerName"
        parameters: []
        signature: "getLoggerName(): String"
        returnValueUuid: "format_string1"
        access: 1
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "15F3D33C96332E7C7909FA631CB73BB9"
      index: 5
      methodExercised:
        target: "target"
        name: "formatMessage"
        parameters:
        - name: "digit"
          valueUuid: "format_logRecord1"
        signature: "formatMessage(LogRecord): String"
        returnValueUuid: "format_string2"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "record"
      modelFingerprint: "1FF048E14BB19EB1D303AE52A8549F96"
      index: 6
      valueUuid: "format_logRecord1"
      methodExercised:
        target: "record"
        name: "getThrown"
        parameters: []
        signature: "getThrown(): Throwable"
        returnValueUuid: "getThrowable_throwable1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "record"
      modelFingerprint: "1FF048E14BB19EB1D303AE52A8549F96"
      index: 7
      valueUuid: "format_logRecord1"
      methodExercised:
        target: "record"
        name: "getThrown"
        parameters: []
        signature: "getThrown(): Throwable"
        returnValueUuid: "getThrowable_throwable2"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "record"
      modelFingerprint: "3DE737CDD4288D5BA14ADC5EE07EF89B"
      index: 8
      valueUuid: "format_logRecord1"
      methodExercised:
        target: "record"
        name: "getLoggerName"
        parameters: []
        signature: "getLoggerName(): String"
        returnValueUuid: "format_string3"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "record"
      modelFingerprint: "75D183CFF0B0B4C9705B3C75D05797B8"
      index: 9
      valueUuid: "format_logRecord1"
      methodExercised:
        target: "record"
        name: "getLevel"
        parameters: []
        signature: "getLevel(): Level"
        returnValueUuid: "format_level1"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "BCAF1333B8FD89D2E42C34124911ED44"
      index: 10
      valueUuid: "format_string5"
    uuid: "cc0265c6-0b70-3aee-8959-8b18b56df679"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.System.getenv(java.lang.String) : java.lang.String"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.java.SimpleFormatter"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.java.SimpleFormatter"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.logging.LogRecord"
      uuid: "format_logRecord1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.logging.LogRecord"
      uuid: "format_logRecord1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "long"
      uuid: "format_long1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.logging.LogRecord"
      uuid: "format_logRecord1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "C"
      valueType: "java.lang.String"
      uuid: "format_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "F"
      valueType: "java.lang.String"
      uuid: "format_string2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.logging.LogRecord"
      uuid: "format_logRecord1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.logging.LogRecord"
      uuid: "format_logRecord1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Throwable"
      uuid: "getThrowable_throwable1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.logging.LogRecord"
      uuid: "format_logRecord1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Throwable"
      uuid: "getThrowable_throwable2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.logging.LogRecord"
      uuid: "format_logRecord1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "D"
      valueType: "java.lang.String"
      uuid: "format_string3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.logging.LogRecord"
      uuid: "format_logRecord1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.util.logging.Level"
        method: "parse"
        methodParameters:
        - name: "x"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "x1"
            valueType: "java.lang.String"
            uuid: "format_level1-x"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.logging.Level"
      uuid: "format_level1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "format_string5"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
