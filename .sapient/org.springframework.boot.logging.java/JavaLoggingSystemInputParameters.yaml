---
modelFingerprint: "CED2D0538BD43D05730CCC4ACBFF9D2E"
methods:
- method:
    name: "getStandardConfigLocations"
    returnType: "java.lang.String[]"
    signature: "getStandardConfigLocations() : java.lang.String[]"
    instructionFingerprint: "0DC5493CF908CBF501BF2D2470B4C3F6"
    parametersTypes: []
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "getStandardConfigLocationsTest"
    nameDefinedByUser: false
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "7B312F3C5A422EFA4070D356EF6F6DB0"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.logging.java.JavaLoggingSystem"
          parameters:
          - name: "classLoader"
            value:
              sapientType: "OBJECT"
              content: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              suggestedContent: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              valueType: "java.lang.ClassLoader"
              uuid: "<init>_classLoader1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.logging.java.JavaLoggingSystem"
          parameters:
          - name: "classLoader"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              valueType: "java.lang.ClassLoader"
              uuid: "<init>_classLoader1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.logging.java.JavaLoggingSystem"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E0D5EC570439CC98062B5DDD89EAF482"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "ARRAY"
        content: !<array>
          values:
            0:
              sapientType: "BASIC"
              content: !<regular>
                value: "logging.properties"
              valueType: "java.lang.String"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
        suggestedContent: !<array>
          values:
            0:
              sapientType: "BASIC"
              content: !<regular>
                value: "logging.properties"
              valueType: "java.lang.String"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
        valueType: "java.lang.String[]"
        uuid: "getStandardConfigLocations_string[]1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "5a1250c3-53ff-343b-84f3-94443200df8f"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "beforeInitialize"
    returnType: "void"
    signature: "beforeInitialize() : void"
    instructionFingerprint: "1CFBCD81E36C249481BFCE570AF93B63"
    parametersTypes: []
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "beforeInitializeTest"
    nameDefinedByUser: false
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "D74383EAF7EEBABFD50B240C509A5F9C"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.logging.java.JavaLoggingSystem"
          parameters:
          - name: "classLoader"
            value:
              sapientType: "OBJECT"
              content: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              suggestedContent: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              valueType: "java.lang.ClassLoader"
              uuid: "<init>_classLoader1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.logging.java.JavaLoggingSystem"
          parameters:
          - name: "classLoader"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              valueType: "java.lang.ClassLoader"
              uuid: "<init>_classLoader1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.logging.java.JavaLoggingSystem"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "VOID"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "ad54bd8f-d876-3b12-8f91-715323a57500"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "loadDefaults"
    returnType: "void"
    signature: "loadDefaults(org.springframework.boot.logging.LoggingInitializationContext,org.springframework.boot.logging.LogFile)\
      \ : void"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "F4D272C765A817854FEC5F8E5EF38E80"
    parametersTypes:
    - "org.springframework.boot.logging.LoggingInitializationContext"
    - "org.springframework.boot.logging.LogFile"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "loadDefaultsWhenLogFileIsNotNull"
    nameDefinedByUser: false
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "43498B1DDEC888719951538EFA1F561A"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.logging.java.JavaLoggingSystem"
          parameters:
          - name: "classLoader"
            value:
              sapientType: "OBJECT"
              content: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              suggestedContent: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              valueType: "java.lang.ClassLoader"
              uuid: "<init>_classLoader1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.logging.java.JavaLoggingSystem"
          parameters:
          - name: "classLoader"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              valueType: "java.lang.ClassLoader"
              uuid: "<init>_classLoader1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.logging.java.JavaLoggingSystem"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "initializationContext"
      modelFingerprint: "A9E95525DCEE373649A909B088272A89"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.logging.LoggingInitializationContext"
        uuid: "loadDefaults_loggingInitializationContext1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "logFile"
      modelFingerprint: "0CDB155A10F4A5FC7276123FEFFDF7E8"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.logging.LogFile"
        uuid: "loadDefaults_logFile1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "C13F20E7F5F42B4DBAB17547B3221E1B"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.springframework.util.ClassUtils"
        uuid: "org.springframework.util.ClassUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "getPackageName"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.springframework.boot.logging.java.JavaLoggingSystem"
            valueType: "java.lang.Class"
            genericValueType: "org.springframework.boot.logging.java.JavaLoggingSystem"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getPackageName(Class): String"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: "org.springframework.boot.logging.java"
          valueType: "java.lang.String"
          uuid: "getPackagedConfigFile_string1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "5AF553CB0A44F16183A6922F6EB0F459"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "loadConfiguration"
        parameters:
        - name: "location"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "classpath:org/springframework/boot/logging/java/logging-file.properties"
            valueType: "java.lang.String"
            uuid: "getPackagedConfigFile_string6"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "logFile"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LogFile"
            uuid: "loadDefaults_logFile1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "loadConfiguration(String,LogFile): void"
        returnValue:
          sapientType: "VOID"
          valueType: "void"
          uuid: "loadDefaults_void1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 4
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "VOID"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "ab30a742-738c-3366-8b58-ac5d3f5bb0c4"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path2"
    pathIdForUser: "path2"
    testPathName: "loadDefaultsWhenLogFileIsNull"
    nameDefinedByUser: false
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "48B526167C34F89B2B1539EF1068DA4D"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.logging.java.JavaLoggingSystem"
          parameters:
          - name: "classLoader"
            value:
              sapientType: "OBJECT"
              content: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              suggestedContent: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              valueType: "java.lang.ClassLoader"
              uuid: "<init>_classLoader1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.logging.java.JavaLoggingSystem"
          parameters:
          - name: "classLoader"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              valueType: "java.lang.ClassLoader"
              uuid: "<init>_classLoader1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.logging.java.JavaLoggingSystem"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "initializationContext"
      modelFingerprint: "A9E95525DCEE373649A909B088272A89"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.logging.LoggingInitializationContext"
        uuid: "loadDefaults_loggingInitializationContext1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "logFile"
      modelFingerprint: "A3CB47FEDC92663A4B31E3B27D7C6A23"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "NULL"
        valueType: "org.springframework.boot.logging.LogFile"
        uuid: "loadDefaults_logFile1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "C13F20E7F5F42B4DBAB17547B3221E1B"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.springframework.util.ClassUtils"
        uuid: "org.springframework.util.ClassUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "getPackageName"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.springframework.boot.logging.java.JavaLoggingSystem"
            valueType: "java.lang.Class"
            genericValueType: "org.springframework.boot.logging.java.JavaLoggingSystem"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getPackageName(Class): String"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: "org.springframework.boot.logging.java"
          valueType: "java.lang.String"
          uuid: "getPackagedConfigFile_string1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "2B6CFD80F4F7914DC3659C30F3CE3B2E"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "loadConfiguration"
        parameters:
        - name: "location"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "classpath:org/springframework/boot/logging/java/logging.properties"
            valueType: "java.lang.String"
            uuid: "getPackagedConfigFile_string6"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "logFile"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.logging.LogFile"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "loadConfiguration(String,LogFile): void"
        returnValue:
          sapientType: "VOID"
          valueType: "void"
          uuid: "loadDefaults_void1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 4
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "VOID"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "17d58b05-9b3d-387c-8073-47ea91528b78"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "loadConfiguration"
    returnType: "void"
    signature: "loadConfiguration(org.springframework.boot.logging.LoggingInitializationContext,java.lang.String,org.springframework.boot.logging.LogFile)\
      \ : void"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "7DD4C88BDD24F2DA3C39D15A9576089E"
    parametersTypes:
    - "org.springframework.boot.logging.LoggingInitializationContext"
    - "java.lang.String"
    - "org.springframework.boot.logging.LogFile"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "loadConfigurationTest"
    nameDefinedByUser: false
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "3E917D9B5FC8DC970B43D23135DDAEB5"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.logging.java.JavaLoggingSystem"
          parameters:
          - name: "classLoader"
            value:
              sapientType: "OBJECT"
              content: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              suggestedContent: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              valueType: "java.lang.ClassLoader"
              uuid: "<init>_classLoader1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.logging.java.JavaLoggingSystem"
          parameters:
          - name: "classLoader"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              valueType: "java.lang.ClassLoader"
              uuid: "<init>_classLoader1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.logging.java.JavaLoggingSystem"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "initializationContext"
      modelFingerprint: "A9E95525DCEE373649A909B088272A89"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.logging.LoggingInitializationContext"
        uuid: "loadConfiguration_loggingInitializationContext1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "location"
      modelFingerprint: "C192C3D47C9857E221AEFB8803CC0175"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "location1"
        valueType: "java.lang.String"
        uuid: "loadConfiguration_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "logFile"
      modelFingerprint: "0CDB155A10F4A5FC7276123FEFFDF7E8"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.logging.LogFile"
        uuid: "loadConfiguration_logFile1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "CAFD549AE9CFD2ABED5D68F8A342D6C6"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "loadConfiguration"
        parameters:
        - name: "location"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "location1"
            valueType: "java.lang.String"
            uuid: "loadConfiguration_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "logFile"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LogFile"
            uuid: "loadConfiguration_logFile1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "loadConfiguration(String,LogFile): void"
        returnValue:
          sapientType: "VOID"
          valueType: "void"
          uuid: "loadConfiguration_void1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 4
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "VOID"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "9b5ab968-45d4-3e62-9d6e-78e0871df18a"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "loadConfiguration"
    returnType: "void"
    signature: "loadConfiguration(java.lang.String,org.springframework.boot.logging.LogFile)\
      \ : void"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "E7FA1657F01B05919F461D9479CE5A76"
    parametersTypes:
    - "java.lang.String"
    - "org.springframework.boot.logging.LogFile"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "loadConfiguration1WhenLogFileIsNotNull"
    nameDefinedByUser: false
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "72197513FC2934202C41DB607971887F"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.logging.java.JavaLoggingSystem"
          parameters:
          - name: "classLoader"
            value:
              sapientType: "OBJECT"
              content: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              suggestedContent: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              valueType: "java.lang.ClassLoader"
              uuid: "<init>_classLoader1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.logging.java.JavaLoggingSystem"
          parameters:
          - name: "classLoader"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              valueType: "java.lang.ClassLoader"
              uuid: "<init>_classLoader1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.logging.java.JavaLoggingSystem"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "location"
      modelFingerprint: "E49A552D9D84F1C52B9FB29DAADD83F9"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "A"
        suggestedContent: !<regular>
          value: "A"
        valueType: "java.lang.String"
        uuid: "loadConfiguration_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "logFile"
      modelFingerprint: "AFF934C3C12F983F6F00CC6174DC11DD"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.logging.LogFile"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.logging.LogFile"
        uuid: "loadConfiguration_logFile1"
        fixed: false
        nameForMock: "loadConfiguration_logFile1"
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "58473DD210E9F2AF4B51CDA51F7FBFDB"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.Assert"
        uuid: "org.springframework.util.Assert"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            suggestedContent: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "loadConfiguration_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Location must not be null"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "notNull(String,String): void"
        returnValue:
          sapientType: "VOID"
          valueType: "void"
          uuid: "loadConfiguration_void1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ResourceUtils"
      modelFingerprint: "ECCA503439244232E71956903FE14C12"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 2
      value:
        sapientType: "REAL"
        valueType: "org.springframework.util.ResourceUtils"
        uuid: "org.springframework.util.ResourceUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.ResourceUtils"
        name: "getURL"
        parameters:
        - name: "description"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            suggestedContent: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "loadConfiguration_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        throwsExceptions:
        - "java.io.FileNotFoundException"
        signature: "getURL(String): URL throws java.io.FileNotFoundException"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.springframework.util.ResourceUtils"
            method: "getURL"
            methodParameters:
            - value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "A"
                valueType: "java.lang.String"
                uuid: "loadConfiguration_string1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.springframework.util.ResourceUtils"
            method: "getURL"
            methodParameters:
            - value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "A"
                valueType: "java.lang.String"
                uuid: "loadConfiguration_string1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.net.URL"
          uuid: "loadConfiguration_uRL1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "FileCopyUtils"
      modelFingerprint: "5B491440A9D3A020F54A080318C70F25"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 2
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.FileCopyUtils"
        uuid: "org.springframework.util.FileCopyUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.FileCopyUtils"
        name: "copyToString"
        parameters:
        - name: "in"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.InputStreamReader"
              parameters:
              - name: "in"
                value:
                  sapientType: "OBJECT"
                  content: !<method_return_from_value>
                    target: "java.io.InputStream"
                    localVariableValue:
                      sapientType: "OBJECT"
                      content: !<static_method_return>
                        target: "org.springframework.util.ResourceUtils"
                        method: "getURL"
                        methodParameters:
                        - value:
                            sapientType: "BASIC"
                            content: !<regular>
                              value: "A"
                            valueType: "java.lang.String"
                            uuid: "loadConfiguration_string1"
                            fixed: false
                            equalsMethodPresent: false
                            explicitCastNeeded: false
                      suggestedContent: !<static_method_return>
                        target: "org.springframework.util.ResourceUtils"
                        method: "getURL"
                        methodParameters:
                        - value:
                            sapientType: "BASIC"
                            content: !<regular>
                              value: "A"
                            valueType: "java.lang.String"
                            uuid: "loadConfiguration_string1"
                            fixed: false
                            equalsMethodPresent: false
                            explicitCastNeeded: false
                      valueType: "java.net.URL"
                      uuid: "loadConfiguration_uRL1"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    methodParameters: []
                    methodName: "openStream"
                  suggestedContent: !<method_return_from_value>
                    target: "java.io.InputStream"
                    localVariableValue:
                      sapientType: "OBJECT"
                      suggestedContent: !<static_method_return>
                        target: "org.springframework.util.ResourceUtils"
                        method: "getURL"
                        methodParameters:
                        - value:
                            sapientType: "BASIC"
                            content: !<regular>
                              value: "A"
                            valueType: "java.lang.String"
                            uuid: "loadConfiguration_string1"
                            fixed: false
                            equalsMethodPresent: false
                            explicitCastNeeded: false
                      valueType: "java.net.URL"
                      uuid: "loadConfiguration_uRL1"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    methodParameters: []
                    methodName: "openStream"
                  valueType: "java.io.InputStream"
                  uuid: "loadConfiguration_inputStream1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              privateConstructor: false
              createdByTargetCode: true
            suggestedContent: !<new>
              target: "java.io.InputStreamReader"
              parameters:
              - name: "in"
                value:
                  sapientType: "OBJECT"
                  suggestedContent: !<method_return_from_value>
                    target: "java.io.InputStream"
                    localVariableValue:
                      sapientType: "OBJECT"
                      suggestedContent: !<static_method_return>
                        target: "org.springframework.util.ResourceUtils"
                        method: "getURL"
                        methodParameters:
                        - value:
                            sapientType: "BASIC"
                            content: !<regular>
                              value: "A"
                            valueType: "java.lang.String"
                            uuid: "loadConfiguration_string1"
                            fixed: false
                            equalsMethodPresent: false
                            explicitCastNeeded: false
                      valueType: "java.net.URL"
                      uuid: "loadConfiguration_uRL1"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    methodParameters: []
                    methodName: "openStream"
                  valueType: "java.io.InputStream"
                  uuid: "loadConfiguration_inputStream1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              privateConstructor: false
              createdByTargetCode: true
            valueType: "java.io.InputStreamReader"
            uuid: "loadConfiguration_inputStreamReader1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        throwsExceptions:
        - "java.io.IOException"
        signature: "copyToString(InputStreamReader): String throws java.io.IOException"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: "${LOG_FILE}"
          suggestedContent: !<regular>
            value: "${LOG_FILE}"
          valueType: "java.lang.String"
          uuid: "loadConfiguration_string2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "9CA09FD126206954E4D30ED71C3D8E45"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 2
      value:
        sapientType: "REAL"
        valueType: "org.springframework.util.StringUtils"
        uuid: "org.springframework.util.StringUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "cleanPath"
        parameters:
        - name: "element"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "loadConfiguration_logFile1"
            suggestedContent: !<regular>
              value: "loadConfiguration_logFile1"
            valueType: "java.lang.String"
            uuid: "loadConfiguration_string3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "cleanPath(String): String"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: "loadConfiguration_logFile1"
          suggestedContent: !<regular>
            value: "loadConfiguration_logFile1"
          valueType: "java.lang.String"
          uuid: "loadConfiguration_string4"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "VOID"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "cb081a4a-6d69-3432-8836-0e6fc0ac2c27"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "object of type LogManager"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "LogManager.getLogManager().readConfiguration(new ByteArrayInputStream(configuration.getBytes()));"
      lineNumber: 110
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: object of type LogManager - Method: readConfiguration"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
  - pathId: "path2"
    pathIdForUser: "path2"
    testPathName: "loadConfiguration1WhenLogFileIsNull"
    nameDefinedByUser: false
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "5FF30192CE4C9F9B6257B7383153A7DF"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "676a7437-fa62-38ac-8bdd-996cd721d6f0"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "object of type LogManager"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "LogManager.getLogManager().readConfiguration(new ByteArrayInputStream(configuration.getBytes()));"
      lineNumber: 110
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: object of type LogManager - Method: readConfiguration"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path3"
    pathIdForUser: "path3"
    testPathName: "loadConfiguration1WhenCaughtExceptionThrowsIllegalStateException"
    nameDefinedByUser: false
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "EE7EB835A39DB8717A39AB5FF3DF4E44"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.logging.java.JavaLoggingSystem"
          parameters:
          - name: "classLoader"
            value:
              sapientType: "OBJECT"
              content: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              suggestedContent: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              valueType: "java.lang.ClassLoader"
              uuid: "<init>_classLoader1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.logging.java.JavaLoggingSystem"
          parameters:
          - name: "classLoader"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              valueType: "java.lang.ClassLoader"
              uuid: "<init>_classLoader1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.logging.java.JavaLoggingSystem"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "location"
      modelFingerprint: "E49A552D9D84F1C52B9FB29DAADD83F9"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "A"
        suggestedContent: !<regular>
          value: "A"
        valueType: "java.lang.String"
        uuid: "loadConfiguration_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "logFile"
      modelFingerprint: "AFF934C3C12F983F6F00CC6174DC11DD"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.logging.LogFile"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.logging.LogFile"
        uuid: "loadConfiguration_logFile1"
        fixed: false
        nameForMock: "loadConfiguration_logFile1"
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "58473DD210E9F2AF4B51CDA51F7FBFDB"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.Assert"
        uuid: "org.springframework.util.Assert"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            suggestedContent: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "loadConfiguration_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Location must not be null"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "notNull(String,String): void"
        returnValue:
          sapientType: "VOID"
          valueType: "void"
          uuid: "loadConfiguration_void1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ResourceUtils"
      modelFingerprint: "ECCA503439244232E71956903FE14C12"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 2
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.ResourceUtils"
        uuid: "org.springframework.util.ResourceUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.ResourceUtils"
        name: "getURL"
        parameters:
        - name: "description"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            suggestedContent: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "loadConfiguration_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        throwsExceptions:
        - "java.io.FileNotFoundException"
        signature: "getURL(String): URL throws java.io.FileNotFoundException"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.springframework.util.ResourceUtils"
            method: "getURL"
            methodParameters:
            - value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "A"
                valueType: "java.lang.String"
                uuid: "loadConfiguration_string1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.springframework.util.ResourceUtils"
            method: "getURL"
            methodParameters:
            - value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "A"
                valueType: "java.lang.String"
                uuid: "loadConfiguration_string1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.net.URL"
          uuid: "loadConfiguration_uRL1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "34A04B9B01C7247CBD3908E28B2C1725"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 2
      value:
        sapientType: "OBJECT"
        content: !<static_method_return>
          target: "org.springframework.util.ResourceUtils"
          method: "getURL"
          methodParameters:
          - value:
              sapientType: "BASIC"
              content: !<regular>
                value: "A"
              valueType: "java.lang.String"
              uuid: "loadConfiguration_string1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
        suggestedContent: !<static_method_return>
          target: "org.springframework.util.ResourceUtils"
          method: "getURL"
          methodParameters:
          - value:
              sapientType: "BASIC"
              content: !<regular>
                value: "A"
              valueType: "java.lang.String"
              uuid: "loadConfiguration_string1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
        valueType: "java.net.URL"
        uuid: "loadConfiguration_uRL1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "java.net.URL"
        name: "openStream"
        parameters: []
        throwsExceptions:
        - "java.io.IOException"
        signature: "openStream(): InputStream throws java.io.IOException"
        returnValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "java.io.InputStream"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<static_method_return>
                target: "org.springframework.util.ResourceUtils"
                method: "getURL"
                methodParameters:
                - value:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "A"
                    valueType: "java.lang.String"
                    uuid: "loadConfiguration_string1"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
              suggestedContent: !<static_method_return>
                target: "org.springframework.util.ResourceUtils"
                method: "getURL"
                methodParameters:
                - value:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "A"
                    valueType: "java.lang.String"
                    uuid: "loadConfiguration_string1"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
              valueType: "java.net.URL"
              uuid: "loadConfiguration_uRL1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
            methodParameters: []
            methodName: "openStream"
          suggestedContent: !<method_return_from_value>
            target: "java.io.InputStream"
            localVariableValue:
              sapientType: "OBJECT"
              suggestedContent: !<static_method_return>
                target: "org.springframework.util.ResourceUtils"
                method: "getURL"
                methodParameters:
                - value:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "A"
                    valueType: "java.lang.String"
                    uuid: "loadConfiguration_string1"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
              valueType: "java.net.URL"
              uuid: "loadConfiguration_uRL1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
            methodParameters: []
            methodName: "openStream"
          valueType: "java.io.InputStream"
          uuid: "loadConfiguration_inputStream1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 17
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "FileCopyUtils"
      modelFingerprint: "5B491440A9D3A020F54A080318C70F25"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 2
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.FileCopyUtils"
        uuid: "org.springframework.util.FileCopyUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.FileCopyUtils"
        name: "copyToString"
        parameters:
        - name: "in"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.InputStreamReader"
              parameters:
              - name: "in"
                value:
                  sapientType: "OBJECT"
                  content: !<method_return_from_value>
                    target: "java.io.InputStream"
                    localVariableValue:
                      sapientType: "OBJECT"
                      content: !<static_method_return>
                        target: "org.springframework.util.ResourceUtils"
                        method: "getURL"
                        methodParameters:
                        - value:
                            sapientType: "BASIC"
                            content: !<regular>
                              value: "A"
                            valueType: "java.lang.String"
                            uuid: "loadConfiguration_string1"
                            fixed: false
                            equalsMethodPresent: false
                            explicitCastNeeded: false
                      suggestedContent: !<static_method_return>
                        target: "org.springframework.util.ResourceUtils"
                        method: "getURL"
                        methodParameters:
                        - value:
                            sapientType: "BASIC"
                            content: !<regular>
                              value: "A"
                            valueType: "java.lang.String"
                            uuid: "loadConfiguration_string1"
                            fixed: false
                            equalsMethodPresent: false
                            explicitCastNeeded: false
                      valueType: "java.net.URL"
                      uuid: "loadConfiguration_uRL1"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    methodParameters: []
                    methodName: "openStream"
                  suggestedContent: !<method_return_from_value>
                    target: "java.io.InputStream"
                    localVariableValue:
                      sapientType: "OBJECT"
                      suggestedContent: !<static_method_return>
                        target: "org.springframework.util.ResourceUtils"
                        method: "getURL"
                        methodParameters:
                        - value:
                            sapientType: "BASIC"
                            content: !<regular>
                              value: "A"
                            valueType: "java.lang.String"
                            uuid: "loadConfiguration_string1"
                            fixed: false
                            equalsMethodPresent: false
                            explicitCastNeeded: false
                      valueType: "java.net.URL"
                      uuid: "loadConfiguration_uRL1"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    methodParameters: []
                    methodName: "openStream"
                  valueType: "java.io.InputStream"
                  uuid: "loadConfiguration_inputStream1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              privateConstructor: false
              createdByTargetCode: true
            suggestedContent: !<new>
              target: "java.io.InputStreamReader"
              parameters:
              - name: "in"
                value:
                  sapientType: "OBJECT"
                  suggestedContent: !<method_return_from_value>
                    target: "java.io.InputStream"
                    localVariableValue:
                      sapientType: "OBJECT"
                      suggestedContent: !<static_method_return>
                        target: "org.springframework.util.ResourceUtils"
                        method: "getURL"
                        methodParameters:
                        - value:
                            sapientType: "BASIC"
                            content: !<regular>
                              value: "A"
                            valueType: "java.lang.String"
                            uuid: "loadConfiguration_string1"
                            fixed: false
                            equalsMethodPresent: false
                            explicitCastNeeded: false
                      valueType: "java.net.URL"
                      uuid: "loadConfiguration_uRL1"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    methodParameters: []
                    methodName: "openStream"
                  valueType: "java.io.InputStream"
                  uuid: "loadConfiguration_inputStream1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              privateConstructor: false
              createdByTargetCode: true
            valueType: "java.io.InputStreamReader"
            uuid: "loadConfiguration_inputStreamReader1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        throwsExceptions:
        - "java.io.IOException"
        signature: "copyToString(InputStreamReader): String throws java.io.IOException"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: "${LOG_FILE}"
          suggestedContent: !<regular>
            value: "${LOG_FILE}"
          valueType: "java.lang.String"
          uuid: "loadConfiguration_string2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "9CA09FD126206954E4D30ED71C3D8E45"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 2
      value:
        sapientType: "REAL"
        valueType: "org.springframework.util.StringUtils"
        uuid: "org.springframework.util.StringUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "cleanPath"
        parameters:
        - name: "element"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "loadConfiguration_logFile1"
            suggestedContent: !<regular>
              value: "loadConfiguration_logFile1"
            valueType: "java.lang.String"
            uuid: "loadConfiguration_string3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "cleanPath(String): String"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: "loadConfiguration_logFile1"
          suggestedContent: !<regular>
            value: "loadConfiguration_logFile1"
          valueType: "java.lang.String"
          uuid: "loadConfiguration_string4"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "51601EACB389783FA4EAF0FD8B3688D6"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 2
      value:
        sapientType: "OBJECT"
        content: !<static_method_return>
          target: "java.util.logging.LogManager"
          method: "getLogManager"
          methodParameters: []
        suggestedContent: !<static_method_return>
          target: "java.util.logging.LogManager"
          method: "getLogManager"
          methodParameters: []
        valueType: "java.util.logging.LogManager"
        uuid: "loadConfiguration_logManager1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "java.util.logging.LogManager"
        name: "readConfiguration"
        parameters:
        - name: "x"
          value:
            sapientType: "INPUT_STREAM"
            content: !<inputStream>
              inputStreamClass: "java.io.ByteArrayInputStream"
              values: []
              parameters:
              - name: "buf"
                value:
                  sapientType: "ARRAY"
                  suggestedContent: !<array>
                    values:
                      0:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 108
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item0"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      1:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 111
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item1"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      2:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 97
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item2"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      3:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 100
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item3"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      4:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 67
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item4"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      5:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 111
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item5"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      6:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 110
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item6"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      7:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 102
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item7"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      8:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 105
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item8"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      9:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 103
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item9"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      10:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 117
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item10"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      11:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 114
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item11"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      12:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 97
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item12"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      13:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 116
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item13"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      14:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 105
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item14"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      15:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 111
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item15"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      16:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 110
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item16"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      17:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 95
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item17"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      18:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 108
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item18"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      19:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 111
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item19"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      20:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 103
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item20"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      21:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 70
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item21"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      22:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 105
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item22"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      23:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 108
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item23"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      24:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 101
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item24"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      25:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 49
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item25"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                  valueType: "byte[]"
                  uuid: "loadConfiguration_byte[]1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            suggestedContent: !<inputStream>
              inputStreamClass: "java.io.ByteArrayInputStream"
              values: []
              parameters:
              - name: "buf"
                value:
                  sapientType: "ARRAY"
                  suggestedContent: !<array>
                    values:
                      0:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 108
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item0"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      1:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 111
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item1"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      2:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 97
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item2"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      3:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 100
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item3"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      4:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 67
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item4"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      5:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 111
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item5"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      6:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 110
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item6"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      7:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 102
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item7"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      8:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 105
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item8"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      9:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 103
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item9"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      10:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 117
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item10"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      11:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 114
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item11"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      12:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 97
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item12"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      13:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 116
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item13"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      14:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 105
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item14"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      15:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 111
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item15"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      16:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 110
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item16"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      17:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 95
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item17"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      18:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 108
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item18"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      19:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 111
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item19"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      20:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 103
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item20"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      21:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 70
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item21"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      22:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 105
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item22"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      23:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 108
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item23"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      24:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 101
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item24"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      25:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: 49
                        valueType: "byte"
                        uuid: "loadConfiguration_byte[]1-item25"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                  valueType: "byte[]"
                  uuid: "loadConfiguration_byte[]1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "java.io.ByteArrayInputStream"
            uuid: "loadConfiguration_byteArrayInputStream1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        throwsExceptions:
        - "java.io.IOException"
        - "java.lang.SecurityException"
        signature: "readConfiguration(ByteArrayInputStream): void throws java.io.IOException,java.lang.SecurityException"
        returnValue:
          sapientType: "VOID"
          valueType: "void"
          uuid: "loadConfiguration_void2"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5461C25873DEB4BB12C87B35E87A5409"
      index: 10
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "EXCEPTION"
        content: !<new>
          target: "java.lang.IllegalStateException"
          parameters:
          - name: "message"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "Could not initialize Java logging from A"
              suggestedContent: !<regular>
                value: "Could not initialize Java logging from A"
              valueType: "java.lang.String"
              uuid: "loadConfiguration_string6"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "cause"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Exception"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "java.lang.Exception"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.lang.Exception"
              uuid: "loadConfiguration_exception1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "java.lang.IllegalStateException"
          parameters:
          - name: "message"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: "Could not initialize Java logging from A"
              valueType: "java.lang.String"
              uuid: "loadConfiguration_string6"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "cause"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<new>
                target: "java.lang.Exception"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.lang.Exception"
              uuid: "loadConfiguration_exception1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "java.lang.IllegalStateException"
        uuid: "loadConfiguration_illegalStateException1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "d8aa49fb-f8d7-35a5-8379-a9af06a492bc"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "object of type LogManager"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "LogManager.getLogManager().readConfiguration(new ByteArrayInputStream(configuration.getBytes()));"
      lineNumber: 110
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: object of type LogManager - Method: readConfiguration"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
  - pathId: "path4"
    pathIdForUser: "path4"
    testPathName: "loadConfiguration1WhenLogFileIsNullAndCaughtExceptionThrowsIllegalStateException"
    nameDefinedByUser: false
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "303E2BEE567AC6D45636C76AB73E2E5C"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: true
    inputParameters: []
    uuid: "2a57138b-0a52-3135-8467-8496b70fac38"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "object of type LogManager"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "LogManager.getLogManager().readConfiguration(new ByteArrayInputStream(configuration.getBytes()));"
      lineNumber: 110
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: object of type LogManager - Method: readConfiguration"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "getSupportedLogLevels"
    returnType: "java.util.Set"
    signature: "getSupportedLogLevels() : java.util.Set<org.springframework.boot.logging.LogLevel>"
    instructionFingerprint: "C176876AEC8434087C1C2EE4249A0945"
    parametersTypes: []
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "getSupportedLogLevelsTest"
    nameDefinedByUser: false
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "D1CC791CE3662ADE923CE50344AF1285"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.logging.java.JavaLoggingSystem"
          parameters:
          - name: "classLoader"
            value:
              sapientType: "OBJECT"
              content: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              suggestedContent: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              valueType: "java.lang.ClassLoader"
              uuid: "<init>_classLoader1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.logging.java.JavaLoggingSystem"
          parameters:
          - name: "classLoader"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              valueType: "java.lang.ClassLoader"
              uuid: "<init>_classLoader1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.logging.java.JavaLoggingSystem"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "LEVELS"
      modelFingerprint: "9AC670789DF308F909430E555742EBBB"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.logging.AbstractLoggingSystem$LogLevels"
          parameters: []
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.logging.AbstractLoggingSystem$LogLevels"
          parameters: []
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.logging.AbstractLoggingSystem$LogLevels"
        genericValueType: "java.util.logging.Level"
        uuid: "<clinit>_abstractLoggingSystem.LogLevels1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.LEVELS"
        name: "getSupported"
        parameters: []
        signature: "getSupported(): Set"
        returnValue:
          sapientType: "COLLECTION"
          content: !<collection>
            parameters: []
            values: []
          suggestedContent: !<collection>
            parameters: []
            values: []
          valueType: "java.util.Set"
          genericValueType: "org.springframework.boot.logging.LogLevel"
          uuid: "getSupportedLogLevels_set1"
          fixed: false
          equalsMethodPresent: true
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "4823A1F66F466BA8ECBC9C336AC784C4"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "COLLECTION"
        content: !<collection>
          parameters: []
          values: []
        suggestedContent: !<collection>
          parameters: []
          values: []
        valueType: "java.util.Set"
        genericValueType: "org.springframework.boot.logging.LogLevel"
        uuid: "getSupportedLogLevels_set1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "82f1eac0-2fc3-39e9-ac77-65b21be0daa5"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "LEVELS"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return LEVELS.getSupported();"
      lineNumber: 119
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: LEVELS - Method: getSupported"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
- method:
    name: "setLogLevel"
    returnType: "void"
    signature: "setLogLevel(java.lang.String,org.springframework.boot.logging.LogLevel)\
      \ : void"
    instructionFingerprint: "500D3696B6E5CECC9131E0DFB67C0967"
    parametersTypes:
    - "java.lang.String"
    - "org.springframework.boot.logging.LogLevel"
  paths:
  - pathId: "path4"
    pathIdForUser: "path1"
    testPathName: "setLogLevelWhenLoggerIsNotNull"
    nameDefinedByUser: false
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "65974AD3474904BDCA279EF6B09107C5"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "afa371c0-8f78-3bee-bcd5-b73f6570c925"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path1"
    pathIdForUser: "path2"
    testPathName: "setLogLevelWhenROOT_LOGGER_NAMEEqualsLoggerNameAndLoggerIsNotNull"
    nameDefinedByUser: false
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "C91DE2292F354955E7B4E51010BF783B"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.logging.java.JavaLoggingSystem"
          parameters:
          - name: "classLoader"
            value:
              sapientType: "OBJECT"
              content: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              suggestedContent: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              valueType: "java.lang.ClassLoader"
              uuid: "<init>_classLoader1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.logging.java.JavaLoggingSystem"
          parameters:
          - name: "classLoader"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              valueType: "java.lang.ClassLoader"
              uuid: "<init>_classLoader1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.logging.java.JavaLoggingSystem"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "loggerName"
      modelFingerprint: "FBB072D801211A7403EFF6CBA1DAD229"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "ROOT"
        suggestedContent: !<regular>
          value: "ROOT"
        valueType: "java.lang.String"
        uuid: "setLogLevel_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "level"
      modelFingerprint: "F5E9DC19B4DBF239CB75FCDED5BD82D2"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "ENUM"
        content: !<regular>
          value: "OFF"
        suggestedContent: !<regular>
          value: "OFF"
        valueType: "org.springframework.boot.logging.LogLevel"
        uuid: "setLogLevel_logLevel1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "LEVELS"
      modelFingerprint: "39A1378321F5F81A35091ED0A0149ECC"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.logging.AbstractLoggingSystem$LogLevels"
          parameters: []
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.logging.AbstractLoggingSystem$LogLevels"
          parameters: []
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.logging.AbstractLoggingSystem$LogLevels"
        genericValueType: "java.util.logging.Level"
        uuid: "<clinit>_abstractLoggingSystem.LogLevels1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.LEVELS"
        name: "convertSystemToNative"
        parameters:
        - name: "level"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "OFF"
            suggestedContent: !<regular>
              value: "OFF"
            valueType: "org.springframework.boot.logging.LogLevel"
            uuid: "setLogLevel_logLevel1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "convertSystemToNative(LogLevel): Object"
        returnValue:
          sapientType: "NULL"
          valueType: "java.util.logging.Level"
          uuid: "setLogLevel_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "VOID"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "d08a78e4-e1f9-3b2f-b8cd-7b13a29ff4f9"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path2"
    pathIdForUser: "path3"
    testPathName: "setLogLevelWhenROOT_LOGGER_NAMENotEqualsLoggerNameAndLoggerIsNotNull"
    nameDefinedByUser: false
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "93F84AF1F6C3EEF7F8109AED47C5B2F8"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "7ae89de0-ff2a-38fd-aed4-c1b35422bf13"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path3"
    pathIdForUser: "path4"
    testPathName: "setLogLevelWhenLoggerIsNull"
    nameDefinedByUser: false
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "92FBB79D6C0272D2EDE016B764FE87D0"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "2fbc11d0-1059-3424-9dc7-76227f1299b1"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "getLoggerConfigurations"
    returnType: "java.util.List"
    signature: "getLoggerConfigurations() : java.util.List<org.springframework.boot.logging.LoggerConfiguration>"
    instructionFingerprint: "B0FC75F9B0426DF6868E0B5CEE4977CC"
    parametersTypes: []
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "getLoggerConfigurationsWhenNamesHasMoreElements"
    nameDefinedByUser: false
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "262072D2D7374F94B8DDBA850F08C265"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.logging.java.JavaLoggingSystem"
          parameters:
          - name: "classLoader"
            value:
              sapientType: "OBJECT"
              content: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              suggestedContent: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              valueType: "java.lang.ClassLoader"
              uuid: "<init>_classLoader1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.logging.java.JavaLoggingSystem"
          parameters:
          - name: "classLoader"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              valueType: "java.lang.ClassLoader"
              uuid: "<init>_classLoader1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.logging.java.JavaLoggingSystem"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "68249A6FF1706394A7442CF6443283EE"
      index: 2
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            suggestedContent: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "278B0653B8EFB6972EAD7C960CCA4BCF"
      index: 3
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.diff.util.DiffDrawUtil"
            suggestedContent: !<regular>
              value: "#com.intellij.diff.util.DiffDrawUtil"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "3697FB0D7BEB6BD68BE2342254961F69"
      index: 4
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.openapi.actionSystem.impl.segmentedActionBar.SegmentedActionToolbarComponent"
            suggestedContent: !<regular>
              value: "#com.intellij.openapi.actionSystem.impl.segmentedActionBar.SegmentedActionToolbarComponent"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration3"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "EC1B73200CC4D8D9EEC3BFF8B33CB210"
      index: 5
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.util.indexing.contentQueue.IndexUpdateRunner"
            suggestedContent: !<regular>
              value: "#com.intellij.util.indexing.contentQueue.IndexUpdateRunner"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object4"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration4"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "E08F5E27B66AB4963539CA1C6BEB9091"
      index: 6
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#org.zmlx.hg4idea.util.HgUtil"
            suggestedContent: !<regular>
              value: "#org.zmlx.hg4idea.util.HgUtil"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object5"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration5"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "B4AC85CDC38695B2B7318C528386ADDB"
      index: 7
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "com.intellij.ui.HyperlinkLabel"
            suggestedContent: !<regular>
              value: "com.intellij.ui.HyperlinkLabel"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object6"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration6"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "BC1849D63321F759818BFCB43A95BED1"
      index: 8
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.psi.impl.java.stubs.impl.PsiAnnotationStubImpl"
            suggestedContent: !<regular>
              value: "#com.intellij.psi.impl.java.stubs.impl.PsiAnnotationStubImpl"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object7"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration7"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "B99E9F30D36855A4996E3A43E6020917"
      index: 9
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.codeInspection.i18n.I18nizeAction"
            suggestedContent: !<regular>
              value: "#com.intellij.codeInspection.i18n.I18nizeAction"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object8"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration8"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "4E9BCD1E3091B76155AE09FDC1B81BB5"
      index: 10
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.psi.impl.source.tree.java.AnnotationParamListElement"
            suggestedContent: !<regular>
              value: "#com.intellij.psi.impl.source.tree.java.AnnotationParamListElement"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object9"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration9"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "C5AE6B1D968B1E48E126200AA6AA38AA"
      index: 11
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "org.eclipse.aether.transport.http.HttpTransporter"
            suggestedContent: !<regular>
              value: "org.eclipse.aether.transport.http.HttpTransporter"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object10"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration10"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "E7AA5215A0213E9C38766833C4219934"
      index: 12
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#git4idea.actions.GitPull"
            suggestedContent: !<regular>
              value: "#git4idea.actions.GitPull"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object11"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration11"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "05D066D6244078F262E4E84895A418CF"
      index: 13
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.openapi.vcs.actions.AnnotateToggleAction"
            suggestedContent: !<regular>
              value: "#com.intellij.openapi.vcs.actions.AnnotateToggleAction"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object12"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration12"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "AA535F2975620FCB4EF9132780B22FE8"
      index: 14
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "org.languagetool.rules.spelling.morfologik.MorfologikSpellerRule"
            suggestedContent: !<regular>
              value: "org.languagetool.rules.spelling.morfologik.MorfologikSpellerRule"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object13"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration13"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "F634B7690058240842E07B7214AF9001"
      index: 15
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#git4idea.log.GitLogProvider"
            suggestedContent: !<regular>
              value: "#git4idea.log.GitLogProvider"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object14"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration14"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "E765553128017B6429DC0C68655E5D54"
      index: 16
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.openapi.vfs.impl.local.WatchRootsManager"
            suggestedContent: !<regular>
              value: "#com.intellij.openapi.vfs.impl.local.WatchRootsManager"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object15"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration15"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "4EE6756D9B195A9800F791934987D462"
      index: 17
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.util.xml.impl.AttributeChildInvocationHandler"
            suggestedContent: !<regular>
              value: "#com.intellij.util.xml.impl.AttributeChildInvocationHandler"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object16"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration16"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "09A9202BF936749C84036D6108D8C71F"
      index: 18
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#org.jetbrains.kotlin.psi.stubs.impl.KotlinStubBaseImpl"
            suggestedContent: !<regular>
              value: "#org.jetbrains.kotlin.psi.stubs.impl.KotlinStubBaseImpl"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object17"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration17"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "59920B19CF2D74F8DBC43F94D201A1B1"
      index: 19
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.lang.ant.config.impl.AntReference"
            suggestedContent: !<regular>
              value: "#com.intellij.lang.ant.config.impl.AntReference"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object18"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration18"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "A4D38563F4634977DF360C135DC1C9C5"
      index: 20
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "org.apache.http.conn.ssl.AllowAllHostnameVerifier"
            suggestedContent: !<regular>
              value: "org.apache.http.conn.ssl.AllowAllHostnameVerifier"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object19"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration19"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "00A4A24590C07CE359D637A78DB1B0EF"
      index: 21
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.refactoring.extractInterface.ExtractInterfaceHandler"
            suggestedContent: !<regular>
              value: "#com.intellij.refactoring.extractInterface.ExtractInterfaceHandler"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object20"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration20"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "D751822403DFDE16583B3423FE64A437"
      index: 22
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.openapi.wm.impl.PainterHelper"
            suggestedContent: !<regular>
              value: "#com.intellij.openapi.wm.impl.PainterHelper"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object21"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration21"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "1DF9D07D677290873FD5AE1ADACF6005"
      index: 23
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.codeInsight.editorActions.TypedHandler"
            suggestedContent: !<regular>
              value: "#com.intellij.codeInsight.editorActions.TypedHandler"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object22"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration22"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "A46F4E8DEA8FFD82FF189B9D7737DC85"
      index: 24
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.execution.process.KillableProcessHandler"
            suggestedContent: !<regular>
              value: "#com.intellij.execution.process.KillableProcessHandler"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object23"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration23"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "3634016DDC06F12B476F9B2ACA8E514B"
      index: 25
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.openapi.vcs.impl.PartialChangesUtil"
            suggestedContent: !<regular>
              value: "#com.intellij.openapi.vcs.impl.PartialChangesUtil"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object24"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration24"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "93F90AE4352F8F6EB9C3913BC924C00B"
      index: 26
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.execution.testDiscovery.TestDiscoveryIndex"
            suggestedContent: !<regular>
              value: "#com.intellij.execution.testDiscovery.TestDiscoveryIndex"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object25"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration25"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "DE4678A913E50453FBAA8F30C0ABCB21"
      index: 27
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#org.jetbrains.plugins.terminal.ShellTerminalWidget"
            suggestedContent: !<regular>
              value: "#org.jetbrains.plugins.terminal.ShellTerminalWidget"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object26"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration26"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "4D0605281F1439E7656FDB3C7DCFF4E6"
      index: 28
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            suggestedContent: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object27"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration27"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "E2BE53D4C231127C38D18E13C6E39709"
      index: 29
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.lang.properties.PropertiesUastReferenceContributor"
            suggestedContent: !<regular>
              value: "#com.intellij.lang.properties.PropertiesUastReferenceContributor"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object28"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration28"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "19163959F35960D2031FAD6C6629BD4B"
      index: 30
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.debugger.ui.breakpoints.ExceptionBreakpoint"
            suggestedContent: !<regular>
              value: "#com.intellij.debugger.ui.breakpoints.ExceptionBreakpoint"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object29"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration29"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "C7980A7B478D473F49E59509EA0789B5"
      index: 31
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "H"
            suggestedContent: !<regular>
              value: "H"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object30"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration30"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "CF721BD70C7B04F111E9FFA042021CE1"
      index: 32
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.psi.impl.source.xml.XmlDoctypeImpl"
            suggestedContent: !<regular>
              value: "#com.intellij.psi.impl.source.xml.XmlDoctypeImpl"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object31"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration31"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "124BB9CE77F688DC1D68B94226A2EC4F"
      index: 33
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.psi.impl.source.tree.java.MethodReferenceResolver"
            suggestedContent: !<regular>
              value: "#com.intellij.psi.impl.source.tree.java.MethodReferenceResolver"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object32"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration32"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "BA2E7D8AD135466C606EFEE25BB282C7"
      index: 34
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#org.jetbrains.idea.perforce.application.PerforceClientRootsChecker"
            suggestedContent: !<regular>
              value: "#org.jetbrains.idea.perforce.application.PerforceClientRootsChecker"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object33"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration33"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "69A11BCFD1A241FE2B349527F8F6BBC0"
      index: 35
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.util.xml.impl.DomRootInvocationHandler"
            suggestedContent: !<regular>
              value: "#com.intellij.util.xml.impl.DomRootInvocationHandler"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object34"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration34"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "051FA66AB744B7F4C40919D12E55A865"
      index: 36
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.codeInsight.daemon.impl.quickfix.DefineParamsDefaultValueAction"
            suggestedContent: !<regular>
              value: "#com.intellij.codeInsight.daemon.impl.quickfix.DefineParamsDefaultValueAction"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object35"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration35"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "2EED0B6B509A6F93F4EA72B82A536BBB"
      index: 37
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.openapi.util.LowMemoryWatcher"
            suggestedContent: !<regular>
              value: "#com.intellij.openapi.util.LowMemoryWatcher"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object36"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration36"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "46B304C067909BCB379F1125ADF47E41"
      index: 38
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.codeInspection.dataFlow.ConstantValueInspection"
            suggestedContent: !<regular>
              value: "#com.intellij.codeInspection.dataFlow.ConstantValueInspection"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object37"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration37"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "F4E775F6C3CF1C48F38305EE2629FFBB"
      index: 39
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "sun.awt.X11.focus.XWindowPeer"
            suggestedContent: !<regular>
              value: "sun.awt.X11.focus.XWindowPeer"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object38"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration38"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "170AA882AA29DE51B6322C233D72CF00"
      index: 40
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#org.zmlx.hg4idea.util.HgVersion"
            suggestedContent: !<regular>
              value: "#org.zmlx.hg4idea.util.HgVersion"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object39"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration39"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "DBE0EE6B623A72944AF3EEFDD7B1DBD9"
      index: 41
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "org.apache.http.impl.conn.DefaultClientConnection"
            suggestedContent: !<regular>
              value: "org.apache.http.impl.conn.DefaultClientConnection"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object40"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration40"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "F3D24B1FEC67B9DB05A4E866C30B1AA6"
      index: 42
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.codeInsight.actions.VcsFacade"
            suggestedContent: !<regular>
              value: "#com.intellij.codeInsight.actions.VcsFacade"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object41"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration41"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "1DAEFCC5C158842B1C2C741D67E65E94"
      index: 43
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.openapi.paths.PathReferenceProviderBase"
            suggestedContent: !<regular>
              value: "#com.intellij.openapi.paths.PathReferenceProviderBase"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object42"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration42"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "C76DBF465E4C76CA0B6651F4CF696B6C"
      index: 44
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.codeInsight.daemon.impl.analysis.LambdaHighlightingUtil"
            suggestedContent: !<regular>
              value: "#com.intellij.codeInsight.daemon.impl.analysis.LambdaHighlightingUtil"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object43"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration43"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "BA4936A1928416E91170D25404A33AC5"
      index: 45
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.toolWindow.ToolWindowPane"
            suggestedContent: !<regular>
              value: "#com.intellij.toolWindow.ToolWindowPane"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object44"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration44"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "21486BA9407A0329208B8284D8D1289E"
      index: 46
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.concurrency.JobLauncher"
            suggestedContent: !<regular>
              value: "#com.intellij.concurrency.JobLauncher"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object45"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration45"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "452460A93104E886810523060AE3D870"
      index: 47
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "sun.awt.X11.enable.XComponentPeer"
            suggestedContent: !<regular>
              value: "sun.awt.X11.enable.XComponentPeer"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object46"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration46"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "ECD4DFCC34C9AA4FE1DF16036263FD7D"
      index: 48
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.codeInspection.CommonProblemDescriptorImpl"
            suggestedContent: !<regular>
              value: "#com.intellij.codeInspection.CommonProblemDescriptorImpl"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object47"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration47"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "0055E6267B1B5E02801261AE5E643620"
      index: 49
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.openapi.editor.impl.SelectionModelImpl"
            suggestedContent: !<regular>
              value: "#com.intellij.openapi.editor.impl.SelectionModelImpl"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object48"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration48"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "02181481D0B6F41EB6421FEE336060DF"
      index: 50
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.execution.actions.BaseRunConfigurationAction"
            suggestedContent: !<regular>
              value: "#com.intellij.execution.actions.BaseRunConfigurationAction"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object49"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration49"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "27CE79E42D4466C1A57BE5BA7019BA02"
      index: 51
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "okhttp3.OkHttpClient"
            suggestedContent: !<regular>
              value: "okhttp3.OkHttpClient"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object50"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration50"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "7F6ED78E7A9D2F521B8FCC098E7CB3AE"
      index: 52
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "jdk.internal.httpclient.debug"
            suggestedContent: !<regular>
              value: "jdk.internal.httpclient.debug"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object51"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration51"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "802402C10CC953B90A9AADB19798E108"
      index: 53
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.codeInsight.daemon.impl.DaemonListeners"
            suggestedContent: !<regular>
              value: "#com.intellij.codeInsight.daemon.impl.DaemonListeners"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object52"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration52"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "1174618196443A3628714B5BF7633576"
      index: 54
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.indexing.shared.util.zipFs.UncompressedZipFileSystem"
            suggestedContent: !<regular>
              value: "#com.intellij.indexing.shared.util.zipFs.UncompressedZipFileSystem"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object53"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration53"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "F3BAE54C7D2A27CDB566EC0E0479D47A"
      index: 55
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.openapi.editor.impl.IntervalTreeImpl"
            suggestedContent: !<regular>
              value: "#com.intellij.openapi.editor.impl.IntervalTreeImpl"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object54"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration54"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "326E20E609309AF93D545D43524C60D4"
      index: 56
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#git4idea.index.GitStageTracker"
            suggestedContent: !<regular>
              value: "#git4idea.index.GitStageTracker"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object55"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration55"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "883399102959AEE05325C077E326965C"
      index: 57
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#org.intellij.plugins.xpathView.XPathEvalAction"
            suggestedContent: !<regular>
              value: "#org.intellij.plugins.xpathView.XPathEvalAction"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object56"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration56"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "F8F07AACD08D057AB3C6870844262A16"
      index: 58
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.psi.search.scope.packageSet.FilePatternPackageSet"
            suggestedContent: !<regular>
              value: "#com.intellij.psi.search.scope.packageSet.FilePatternPackageSet"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object57"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration57"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "EE6D30B9F2F8644E1688D43812F80961"
      index: 59
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.codeInsight.folding.impl.UpdateFoldRegionsOperation"
            suggestedContent: !<regular>
              value: "#com.intellij.codeInsight.folding.impl.UpdateFoldRegionsOperation"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object58"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration58"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "C626EB3E5301AFA9EE8D83FF8B38A9D1"
      index: 60
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.openapi.roots.impl.libraries.RenameLibraryHandler"
            suggestedContent: !<regular>
              value: "#com.intellij.openapi.roots.impl.libraries.RenameLibraryHandler"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object59"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration59"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "375602C3837029BB3AD0B70CE35B27A8"
      index: 61
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.openapi.editor.impl.softwrap.mapping.CachingSoftWrapDataMapper"
            suggestedContent: !<regular>
              value: "#com.intellij.openapi.editor.impl.softwrap.mapping.CachingSoftWrapDataMapper"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object60"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration60"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "F5665F88737F7592537940E93989A419"
      index: 62
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.psi.controlFlow.ControlFlowAnalyzer"
            suggestedContent: !<regular>
              value: "#com.intellij.psi.controlFlow.ControlFlowAnalyzer"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object61"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration61"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "B9CE0317627F6FF8A0A1E1A9300749BB"
      index: 63
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "com.sun.xml.bind.v2.runtime.reflect.Accessor$FieldReflection"
            suggestedContent: !<regular>
              value: "com.sun.xml.bind.v2.runtime.reflect.Accessor$FieldReflection"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object62"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration62"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "612B1623015795B18E3997504A62D5C6"
      index: 64
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.externalProcessAuthHelper.ExternalProcessHandlerService"
            suggestedContent: !<regular>
              value: "#com.intellij.externalProcessAuthHelper.ExternalProcessHandlerService"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object63"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration63"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "710958FF5439EA533093CB7EC5BBC4D8"
      index: 65
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.execution.RunManager"
            suggestedContent: !<regular>
              value: "#com.intellij.execution.RunManager"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object64"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration64"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "71F88A27957C58F2D3DA126C2A055F0F"
      index: 66
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "org.apache.commons.beanutils.converters.BooleanConverter"
            suggestedContent: !<regular>
              value: "org.apache.commons.beanutils.converters.BooleanConverter"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object65"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration65"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "E8132C683F969C5962DB3F3566524548"
      index: 67
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.codeInspection.dataFlow.interpreter.StandardDataFlowInterpreter"
            suggestedContent: !<regular>
              value: "#com.intellij.codeInspection.dataFlow.interpreter.StandardDataFlowInterpreter"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object66"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration66"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "78FB09082BF6E93948BCE9A3D9C8F3D3"
      index: 68
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "org.apache.http.wire"
            suggestedContent: !<regular>
              value: "org.apache.http.wire"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object67"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration67"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "8B30CA8A3C5F2F8F0BEC4BD502F4EBAA"
      index: 69
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.compiler.server.impl.BuildProcessClasspathManager"
            suggestedContent: !<regular>
              value: "#com.intellij.compiler.server.impl.BuildProcessClasspathManager"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object68"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration68"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "6BA9C53EA733F2BC746A55DAD2695CE7"
      index: 70
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.openapi.wm.impl.ToolWindowManagerImpl"
            suggestedContent: !<regular>
              value: "#com.intellij.openapi.wm.impl.ToolWindowManagerImpl"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object69"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration69"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "D7F61EA04404B153AA2EE154EDF5F5DA"
      index: 71
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.psi.GenericsUtil"
            suggestedContent: !<regular>
              value: "#com.intellij.psi.GenericsUtil"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object70"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration70"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "163577E05B247529BCE07279FEA04FDB"
      index: 72
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.openapi.wm.impl.X11UiUtil"
            suggestedContent: !<regular>
              value: "#com.intellij.openapi.wm.impl.X11UiUtil"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object71"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration71"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "360F16D60F75D2E80CE4CD854E6EE7D6"
      index: 73
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.openapi.editor.richcopy.view.AbstractSyntaxAwareReader"
            suggestedContent: !<regular>
              value: "#com.intellij.openapi.editor.richcopy.view.AbstractSyntaxAwareReader"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object72"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration72"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "51593979BEA195F2C03FE1BFDDDAD8E5"
      index: 74
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.openapi.vcs.changes.VcsIgnoreManagerImpl"
            suggestedContent: !<regular>
              value: "#com.intellij.openapi.vcs.changes.VcsIgnoreManagerImpl"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object73"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration73"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "4E0376B9E5B56BA7586E5C2635A8C5EC"
      index: 75
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.psi.impl.migration.PsiMigrationManager"
            suggestedContent: !<regular>
              value: "#com.intellij.psi.impl.migration.PsiMigrationManager"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object74"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration74"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "BCD2129BFF84ACD71A1557D1DC8A6840"
      index: 76
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "org.apache.http.impl.client.DefaultRedirectStrategy"
            suggestedContent: !<regular>
              value: "org.apache.http.impl.client.DefaultRedirectStrategy"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object75"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration75"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "37A5DCC3EF06E381AB5D625148D4645A"
      index: 77
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.util.indexing.UnindexedFilesScannerExecutor"
            suggestedContent: !<regular>
              value: "#com.intellij.util.indexing.UnindexedFilesScannerExecutor"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object76"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration76"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "B99797A7FB59DD5B9816DAFE5F54E7CD"
      index: 78
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "org.gradle.tooling.GradleConnector"
            suggestedContent: !<regular>
              value: "org.gradle.tooling.GradleConnector"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object77"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration77"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "D6448A963463EE37663859EF465CEDA6"
      index: 79
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.openapi.projectRoots.impl.jdkDownloader.JdkAuto"
            suggestedContent: !<regular>
              value: "#com.intellij.openapi.projectRoots.impl.jdkDownloader.JdkAuto"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object78"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration78"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "13DCA42FDEF1BE435DF1C97A9C0F1FBD"
      index: 80
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.framework.detection.impl.DetectedFrameworksData"
            suggestedContent: !<regular>
              value: "#com.intellij.framework.detection.impl.DetectedFrameworksData"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object79"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration79"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "24CC5C61E21C3C71B5C6881847750553"
      index: 81
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.codeInspection.dataFlow.java.inst.MethodCallInstruction"
            suggestedContent: !<regular>
              value: "#com.intellij.codeInspection.dataFlow.java.inst.MethodCallInstruction"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object80"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration80"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "5C5663A0A27332BBD39C96B283D3A384"
      index: 82
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.ui.InsertPathAction"
            suggestedContent: !<regular>
              value: "#com.intellij.ui.InsertPathAction"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object81"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration81"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "62B6B7B0AEC69A5B52DBB216BC8B7ADC"
      index: 83
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.theoryinpractice.testng.inspection.DuplicatedDataProviderNamesInspection"
            suggestedContent: !<regular>
              value: "#com.theoryinpractice.testng.inspection.DuplicatedDataProviderNamesInspection"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object82"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration82"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "62E0D30693DDF83C1A85E9FB545A6E3D"
      index: 84
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.openapi.wm.impl.SideStack"
            suggestedContent: !<regular>
              value: "#com.intellij.openapi.wm.impl.SideStack"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object83"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration83"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "C1408928150E24363A87695BE67E066F"
      index: 85
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.jetbrains.rdserver.daemon.RdServerEditorTracker"
            suggestedContent: !<regular>
              value: "#com.jetbrains.rdserver.daemon.RdServerEditorTracker"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object84"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration84"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "B82792FEC4AA78FB7A953B4571A9588E"
      index: 86
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.codeInsight.daemon.impl.DefaultHighlightVisitor"
            suggestedContent: !<regular>
              value: "#com.intellij.codeInsight.daemon.impl.DefaultHighlightVisitor"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object85"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration85"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "CB4F365D4525EF432F6C9EB952C4D108"
      index: 87
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.psi.impl.source.tree.SharedImplUtil"
            suggestedContent: !<regular>
              value: "#com.intellij.psi.impl.source.tree.SharedImplUtil"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object86"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration86"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "6B4D26C7C294B5B4C4ACAF61DDB3F8F0"
      index: 88
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.util.indexing.diagnostic.IndexOperationFUS"
            suggestedContent: !<regular>
              value: "#com.intellij.util.indexing.diagnostic.IndexOperationFUS"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object87"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration87"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "C78450E731FEBB65C0D9427A6C7F2C33"
      index: 89
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "org.eclipse.aether.internal.impl.TrackingFileManager"
            suggestedContent: !<regular>
              value: "org.eclipse.aether.internal.impl.TrackingFileManager"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object88"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration88"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "B584FFFC1F04C2F31D141E479B553E30"
      index: 90
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.platform.templates.SaveProjectAsTemplateAction"
            suggestedContent: !<regular>
              value: "#com.intellij.platform.templates.SaveProjectAsTemplateAction"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object89"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration89"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "AC05D2D6864CB7151F548DC6322AE88D"
      index: 91
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.util.indexing.ProjectChangedFilesScanner"
            suggestedContent: !<regular>
              value: "#com.intellij.util.indexing.ProjectChangedFilesScanner"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object90"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration90"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "7079CF9814E497C89D1C95062040950F"
      index: 92
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#org.jetbrains.plugins.groovy.codeInspection.confusing.GrUnusedIncDecInspection"
            suggestedContent: !<regular>
              value: "#org.jetbrains.plugins.groovy.codeInspection.confusing.GrUnusedIncDecInspection"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object91"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration91"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "03A694A08CB55431538BC135394E3E42"
      index: 93
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.psi.impl.source.resolve.ClassResolverProcessor"
            suggestedContent: !<regular>
              value: "#com.intellij.psi.impl.source.resolve.ClassResolverProcessor"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object92"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration92"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "925B4C685B569CA1ABB66EB398D55957"
      index: 94
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#git4idea.rebase.GitSimpleEditorHandler"
            suggestedContent: !<regular>
              value: "#git4idea.rebase.GitSimpleEditorHandler"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object93"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration93"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "7E3FC27EDBC0D22A97BCC4BFE41B9525"
      index: 95
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "java.awt.event.InputEvent"
            suggestedContent: !<regular>
              value: "java.awt.event.InputEvent"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object94"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration94"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "A05AEC6131215F08C830953D30E729E2"
      index: 96
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.lang.documentation.psi"
            suggestedContent: !<regular>
              value: "#com.intellij.lang.documentation.psi"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object95"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration95"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "35A0A6F02E4E786349438D49EC10603B"
      index: 97
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.util.containers.Enumerator"
            suggestedContent: !<regular>
              value: "#com.intellij.util.containers.Enumerator"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object96"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration96"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "3BA8AF394E6B9B6E57373352B14C6566"
      index: 98
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.vcs.log.impl.VcsLogCachesInvalidator"
            suggestedContent: !<regular>
              value: "#com.intellij.vcs.log.impl.VcsLogCachesInvalidator"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object97"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration97"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "3FE0C3F96B7938FC30F323FD0203C470"
      index: 99
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.util.MethodInvocator"
            suggestedContent: !<regular>
              value: "#com.intellij.util.MethodInvocator"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object98"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration98"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "95BE5AD24ACBCB06742182ECEEEEACBA"
      index: 100
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#org.jetbrains.kotlin.idea.script.ScriptTemplatesFromDependenciesProvider"
            suggestedContent: !<regular>
              value: "#org.jetbrains.kotlin.idea.script.ScriptTemplatesFromDependenciesProvider"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object99"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration99"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "73A47F9A1B50926448385DCDA5468D3C"
      index: 101
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.intellij.uiDesigner.binding.FormClassAnnotator"
            suggestedContent: !<regular>
              value: "#com.intellij.uiDesigner.binding.FormClassAnnotator"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object100"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration100"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "3D6AC33EFD4530758692D8D4081517D4"
      index: 102
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getLoggerConfiguration"
        parameters:
        - name: "loggerName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "#com.android.tools.idea.run.ui.BaseAction"
            suggestedContent: !<regular>
              value: "#com.android.tools.idea.run.ui.BaseAction"
            valueType: "java.lang.String"
            uuid: "getLoggerConfigurations_object101"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getLoggerConfiguration(String): LoggerConfiguration"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.logging.LoggerConfiguration"
          uuid: "getLoggerConfigurations_loggerConfiguration101"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B889F227B11E0B7DB523A2156CDB49A3"
      index: 103
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "COLLECTION"
        content: !<collection>
          collectionClass: "java.util.ArrayList"
          parameters: []
          values:
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration4"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration5"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration6"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration7"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration8"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration9"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration10"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration11"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration12"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration13"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration14"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration15"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration16"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration17"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration18"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration19"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration20"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration21"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration22"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration23"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration24"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration25"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration26"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration27"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration28"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration29"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration30"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration31"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration32"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration33"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration34"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration35"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration36"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration37"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration38"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration39"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration40"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration41"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration42"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration43"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration44"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration45"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration46"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration47"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration48"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration49"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration50"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration51"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration52"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration53"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration54"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration55"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration56"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration57"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration58"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration59"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration60"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration61"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration62"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration63"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration64"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration65"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration66"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration67"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration68"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration69"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration70"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration71"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration72"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration73"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration74"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration75"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration76"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration77"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration78"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration79"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration80"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration81"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration82"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration83"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration84"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration85"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration86"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration87"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration88"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration89"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration90"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration91"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration92"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration93"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration94"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration95"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration96"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration97"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration98"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration99"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration100"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration101"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        suggestedContent: !<collection>
          collectionClass: "java.util.ArrayList"
          parameters: []
          values:
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration4"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration5"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration6"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration7"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration8"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration9"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration10"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration11"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration12"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration13"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration14"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration15"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration16"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration17"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration18"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration19"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration20"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration21"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration22"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration23"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration24"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration25"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration26"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration27"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration28"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration29"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration30"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration31"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration32"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration33"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration34"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration35"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration36"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration37"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration38"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration39"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration40"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration41"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration42"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration43"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration44"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration45"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration46"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration47"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration48"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration49"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration50"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration51"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration52"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration53"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration54"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration55"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration56"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration57"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration58"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration59"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration60"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration61"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration62"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration63"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration64"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration65"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration66"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration67"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration68"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration69"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration70"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration71"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration72"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration73"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration74"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration75"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration76"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration77"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration78"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration79"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration80"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration81"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration82"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration83"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration84"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration85"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration86"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration87"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration88"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration89"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration90"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration91"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration92"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration93"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration94"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration95"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration96"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration97"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration98"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration99"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration100"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          - sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration"
            uuid: "getLoggerConfigurations_loggerConfiguration101"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        valueType: "java.util.List"
        genericValueType: "org.springframework.boot.logging.LoggerConfiguration"
        uuid: "getLoggerConfigurations_list1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "855a9e38-7486-375a-821a-b4bc7d5739af"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "GET_STATIC_FINAL_FIELD_INSTRUCTION_FIELD_NOT_ACCESSIBLE"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
- method:
    name: "getLoggerConfiguration"
    returnType: "org.springframework.boot.logging.LoggerConfiguration"
    signature: "getLoggerConfiguration(java.lang.String) : org.springframework.boot.logging.LoggerConfiguration"
    instructionFingerprint: "95FCC1F3EDB5D724E3FECAFB51B6B96C"
    parametersTypes:
    - "java.lang.String"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "getLoggerConfigurationWhenLoggerIsNull"
    nameDefinedByUser: false
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "AC55AC785A9AC633049E35AA3117A440"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.logging.java.JavaLoggingSystem"
          parameters:
          - name: "classLoader"
            value:
              sapientType: "OBJECT"
              content: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              suggestedContent: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              valueType: "java.lang.ClassLoader"
              uuid: "<init>_classLoader1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.logging.java.JavaLoggingSystem"
          parameters:
          - name: "classLoader"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              valueType: "java.lang.ClassLoader"
              uuid: "<init>_classLoader1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.logging.java.JavaLoggingSystem"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "loggerName"
      modelFingerprint: "1486C7CCEFAAC6E88D4E37DF69930E07"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "A"
        suggestedContent: !<regular>
          value: "A"
        valueType: "java.lang.String"
        uuid: "getLoggerConfiguration_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3CF264C0FD69582F3E4F116469D4F550"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "NULL"
        valueType: "org.springframework.boot.logging.LoggerConfiguration"
        uuid: "getLoggerConfiguration_loggerConfiguration1"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "1d2112b3-8acc-3521-84da-e493ffddac34"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "UNKNOWN_REASON"
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
  - pathId: "path2"
    pathIdForUser: "path2"
    testPathName: "getLoggerConfigurationWhenStringUtilsHasLengthLoggerGetName"
    nameDefinedByUser: false
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "F974285EA857FF8C01FA932D05E2C54F"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.logging.java.JavaLoggingSystem"
          parameters:
          - name: "classLoader"
            value:
              sapientType: "OBJECT"
              content: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              suggestedContent: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              valueType: "java.lang.ClassLoader"
              uuid: "<init>_classLoader1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.logging.java.JavaLoggingSystem"
          parameters:
          - name: "classLoader"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              valueType: "java.lang.ClassLoader"
              uuid: "<init>_classLoader1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.logging.java.JavaLoggingSystem"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "loggerName"
      modelFingerprint: "1486C7CCEFAAC6E88D4E37DF69930E07"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "A"
        suggestedContent: !<regular>
          value: "A"
        valueType: "java.lang.String"
        uuid: "getLoggerConfiguration_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "LEVELS"
      modelFingerprint: "24CA605C23E0701B283897F4CF187740"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.logging.AbstractLoggingSystem$LogLevels"
          parameters: []
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.logging.AbstractLoggingSystem$LogLevels"
          parameters: []
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.logging.AbstractLoggingSystem$LogLevels"
        genericValueType: "java.util.logging.Level"
        uuid: "<clinit>_abstractLoggingSystem.LogLevels1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.LEVELS"
        name: "convertNativeToSystem"
        parameters:
        - name: "level"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.util.logging.Level"
              method: "parse"
              methodParameters:
              - name: "x"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "x1"
                  valueType: "java.lang.String"
                  uuid: "getLoggerConfiguration_level1-x"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            suggestedContent: !<static_method_return>
              target: "java.util.logging.Level"
              method: "parse"
              methodParameters:
              - name: "x"
                value:
                  sapientType: "BASIC"
                  valueType: "java.lang.String"
                  uuid: "getLoggerConfiguration_level1-x"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "java.util.logging.Level"
            uuid: "getLoggerConfiguration_level1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "convertNativeToSystem(Level): LogLevel"
        returnValue:
          sapientType: "ENUM"
          content: !<regular>
            value: "TRACE"
          valueType: "org.springframework.boot.logging.LogLevel"
          uuid: "getLoggerConfiguration_logLevel1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "LEVELS"
      modelFingerprint: "24CA605C23E0701B283897F4CF187740"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.logging.AbstractLoggingSystem$LogLevels"
          parameters: []
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.logging.AbstractLoggingSystem$LogLevels"
          parameters: []
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.logging.AbstractLoggingSystem$LogLevels"
        genericValueType: "java.util.logging.Level"
        uuid: "<clinit>_abstractLoggingSystem.LogLevels1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.LEVELS"
        name: "convertNativeToSystem"
        parameters:
        - name: "level"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.util.logging.Level"
              method: "parse"
              methodParameters:
              - name: "x"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "x1"
                  valueType: "java.lang.String"
                  uuid: "getEffectiveLevel_level3-x"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            suggestedContent: !<static_method_return>
              target: "java.util.logging.Level"
              method: "parse"
              methodParameters:
              - name: "x"
                value:
                  sapientType: "BASIC"
                  valueType: "java.lang.String"
                  uuid: "getEffectiveLevel_level3-x"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "java.util.logging.Level"
            uuid: "getEffectiveLevel_level3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "convertNativeToSystem(Level): LogLevel"
        returnValue:
          sapientType: "ENUM"
          content: !<regular>
            value: "TRACE"
          valueType: "org.springframework.boot.logging.LogLevel"
          uuid: "getLoggerConfiguration_logLevel2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "304796640D18CA0948BF36FE7432D660"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.springframework.util.StringUtils"
        uuid: "org.springframework.util.StringUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "hasLength"
        parameters:
        - name: "str"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "B"
            suggestedContent: !<regular>
              value: "B"
            valueType: "java.lang.String"
            uuid: "getLoggerConfiguration_string2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "hasLength(String): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getLoggerConfiguration_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "BC490D6AB029AB274F35D1B874DDD653"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.logging.LoggerConfiguration"
          parameters:
          - name: "name"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "name1"
              valueType: "java.lang.String"
              uuid: "getLoggerConfiguration_string3"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "configuredLevel"
            value:
              sapientType: "ENUM"
              content: !<regular>
                value: "TRACE"
              valueType: "org.springframework.boot.logging.LogLevel"
              uuid: "getLoggerConfiguration_logLevel1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "effectiveLevel"
            value:
              sapientType: "ENUM"
              content: !<regular>
                value: "TRACE"
              valueType: "org.springframework.boot.logging.LogLevel"
              uuid: "getLoggerConfiguration_logLevel2"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.logging.LoggerConfiguration"
          parameters:
          - name: "name"
            value:
              sapientType: "BASIC"
              valueType: "java.lang.String"
              uuid: "getLoggerConfiguration_string3"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "configuredLevel"
            value:
              sapientType: "ENUM"
              valueType: "org.springframework.boot.logging.LogLevel"
              uuid: "getLoggerConfiguration_logLevel1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "effectiveLevel"
            value:
              sapientType: "ENUM"
              valueType: "org.springframework.boot.logging.LogLevel"
              uuid: "getLoggerConfiguration_logLevel2"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.logging.LoggerConfiguration"
        uuid: "getLoggerConfiguration_loggerConfiguration1"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "249e51d4-a67c-3f36-ae3a-6d201eac9609"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "LEVELS"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "LogLevel level = LEVELS.convertNativeToSystem(logger.getLevel());"
      lineNumber: 151
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: LEVELS - Method: convertNativeToSystem"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
  - pathId: "path3"
    pathIdForUser: "path3"
    testPathName: "getLoggerConfigurationWhenStringUtilsNotHasLengthLoggerGetName"
    nameDefinedByUser: false
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "85F1ACF9DCEF413336BF186881C24173"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.logging.java.JavaLoggingSystem"
          parameters:
          - name: "classLoader"
            value:
              sapientType: "OBJECT"
              content: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              suggestedContent: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              valueType: "java.lang.ClassLoader"
              uuid: "<init>_classLoader1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.logging.java.JavaLoggingSystem"
          parameters:
          - name: "classLoader"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              valueType: "java.lang.ClassLoader"
              uuid: "<init>_classLoader1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.logging.java.JavaLoggingSystem"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "loggerName"
      modelFingerprint: "1486C7CCEFAAC6E88D4E37DF69930E07"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "A"
        suggestedContent: !<regular>
          value: "A"
        valueType: "java.lang.String"
        uuid: "getLoggerConfiguration_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "LEVELS"
      modelFingerprint: "24CA605C23E0701B283897F4CF187740"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.logging.AbstractLoggingSystem$LogLevels"
          parameters: []
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.logging.AbstractLoggingSystem$LogLevels"
          parameters: []
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.logging.AbstractLoggingSystem$LogLevels"
        genericValueType: "java.util.logging.Level"
        uuid: "<clinit>_abstractLoggingSystem.LogLevels1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.LEVELS"
        name: "convertNativeToSystem"
        parameters:
        - name: "level"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.util.logging.Level"
              method: "parse"
              methodParameters:
              - name: "x"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "x1"
                  valueType: "java.lang.String"
                  uuid: "getLoggerConfiguration_level1-x"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            suggestedContent: !<static_method_return>
              target: "java.util.logging.Level"
              method: "parse"
              methodParameters:
              - name: "x"
                value:
                  sapientType: "BASIC"
                  valueType: "java.lang.String"
                  uuid: "getLoggerConfiguration_level1-x"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "java.util.logging.Level"
            uuid: "getLoggerConfiguration_level1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "convertNativeToSystem(Level): LogLevel"
        returnValue:
          sapientType: "ENUM"
          content: !<regular>
            value: "TRACE"
          valueType: "org.springframework.boot.logging.LogLevel"
          uuid: "getLoggerConfiguration_logLevel1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "LEVELS"
      modelFingerprint: "24CA605C23E0701B283897F4CF187740"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.logging.AbstractLoggingSystem$LogLevels"
          parameters: []
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.logging.AbstractLoggingSystem$LogLevels"
          parameters: []
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.logging.AbstractLoggingSystem$LogLevels"
        genericValueType: "java.util.logging.Level"
        uuid: "<clinit>_abstractLoggingSystem.LogLevels1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.LEVELS"
        name: "convertNativeToSystem"
        parameters:
        - name: "level"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.util.logging.Level"
              method: "parse"
              methodParameters:
              - name: "x"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "x1"
                  valueType: "java.lang.String"
                  uuid: "getEffectiveLevel_level3-x"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            suggestedContent: !<static_method_return>
              target: "java.util.logging.Level"
              method: "parse"
              methodParameters:
              - name: "x"
                value:
                  sapientType: "BASIC"
                  valueType: "java.lang.String"
                  uuid: "getEffectiveLevel_level3-x"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "java.util.logging.Level"
            uuid: "getEffectiveLevel_level3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "convertNativeToSystem(Level): LogLevel"
        returnValue:
          sapientType: "ENUM"
          content: !<regular>
            value: "TRACE"
          valueType: "org.springframework.boot.logging.LogLevel"
          uuid: "getLoggerConfiguration_logLevel2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "86415DFCA2E8AC06342C9AF37ECC9C8C"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.StringUtils"
        uuid: "org.springframework.util.StringUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "hasLength"
        parameters:
        - name: "str"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "B"
            suggestedContent: !<regular>
              value: "B"
            valueType: "java.lang.String"
            uuid: "getLoggerConfiguration_string2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "hasLength(String): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "getLoggerConfiguration_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "85E4D991ACA44ACEB73FC3078961BCB8"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.logging.LoggerConfiguration"
          parameters:
          - name: "name"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "ROOT"
              valueType: "java.lang.String"
              uuid: "getLoggerConfiguration_string3"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "configuredLevel"
            value:
              sapientType: "ENUM"
              content: !<regular>
                value: "TRACE"
              valueType: "org.springframework.boot.logging.LogLevel"
              uuid: "getLoggerConfiguration_logLevel1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "effectiveLevel"
            value:
              sapientType: "ENUM"
              content: !<regular>
                value: "TRACE"
              valueType: "org.springframework.boot.logging.LogLevel"
              uuid: "getLoggerConfiguration_logLevel2"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.logging.LoggerConfiguration"
          parameters:
          - name: "name"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "ROOT"
              valueType: "java.lang.String"
              uuid: "getLoggerConfiguration_string3"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "configuredLevel"
            value:
              sapientType: "ENUM"
              valueType: "org.springframework.boot.logging.LogLevel"
              uuid: "getLoggerConfiguration_logLevel1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "effectiveLevel"
            value:
              sapientType: "ENUM"
              valueType: "org.springframework.boot.logging.LogLevel"
              uuid: "getLoggerConfiguration_logLevel2"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.logging.LoggerConfiguration"
        uuid: "getLoggerConfiguration_loggerConfiguration1"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "44675f94-23c5-36b0-8d41-9db6cc032a8c"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "LEVELS"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "LogLevel level = LEVELS.convertNativeToSystem(logger.getLevel());"
      lineNumber: 151
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: LEVELS - Method: convertNativeToSystem"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
  - pathId: "path4"
    pathIdForUser: "path4"
    testPathName: "getLoggerConfigurationWhenLoggerGetLevelIsNotNullAndStringUtilsNotHasLengthLoggerGetName"
    nameDefinedByUser: false
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "6E369175D58D093D052A34AF8BC0CA5C"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "3f32d212-95b1-37e4-849c-cdc0fca28e60"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "LEVELS"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "LogLevel level = LEVELS.convertNativeToSystem(logger.getLevel());"
      lineNumber: 151
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: LEVELS - Method: convertNativeToSystem"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "getShutdownHandler"
    returnType: "java.lang.Runnable"
    signature: "getShutdownHandler() : java.lang.Runnable"
    instructionFingerprint: "7E792F186E242AE71F91FD09A9D73056"
    parametersTypes: []
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "getShutdownHandlerTest"
    nameDefinedByUser: false
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "9AF404133B6502E953B9B12A6CB425D3"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.logging.java.JavaLoggingSystem"
          parameters:
          - name: "classLoader"
            value:
              sapientType: "OBJECT"
              content: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              suggestedContent: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              valueType: "java.lang.ClassLoader"
              uuid: "<init>_classLoader1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.logging.java.JavaLoggingSystem"
          parameters:
          - name: "classLoader"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              valueType: "java.lang.ClassLoader"
              uuid: "<init>_classLoader1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.logging.java.JavaLoggingSystem"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5396116BCC1FF3A56024EB6637798F5A"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "NOT_NULL"
        valueType: "java.lang.Runnable"
        uuid: "getShutdownHandler_runnable1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "1fa3a2e1-a02e-3401-a913-93f2f865166f"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "cleanUp"
    returnType: "void"
    signature: "cleanUp() : void"
    instructionFingerprint: "B8D58820D5D860C976B738905A905D94"
    parametersTypes: []
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "cleanUpTest"
    nameDefinedByUser: false
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "C777AC9E36CA2D2BFB50F27CF6932FAB"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.logging.java.JavaLoggingSystem"
          parameters:
          - name: "classLoader"
            value:
              sapientType: "OBJECT"
              content: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              suggestedContent: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              valueType: "java.lang.ClassLoader"
              uuid: "<init>_classLoader1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.logging.java.JavaLoggingSystem"
          parameters:
          - name: "classLoader"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<static_method_return>
                target: "java.lang.ClassLoader"
                method: "getPlatformClassLoader"
                methodParameters: []
              valueType: "java.lang.ClassLoader"
              uuid: "<init>_classLoader1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.logging.java.JavaLoggingSystem"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "VOID"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "90f58dbe-753c-36ac-91d5-9317e7372db1"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
