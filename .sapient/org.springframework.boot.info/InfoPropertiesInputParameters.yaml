---
modelFingerprint: "734FC5E971838FC8488B68A9157005AC"
targetClass:
  fullClassName: "org.springframework.boot.info.InfoProperties"
methods:
- method:
    name: "get"
    sourceCodeSignature: "String get(String key)"
    returnType: "java.lang.String"
    parameters:
    - name: "key"
      type: "java.lang.String"
    instructionFingerprint: "6A80466E566067E718A83226B674CEFB"
  paths:
  - pathId: "path1"
    testPathName: "getTest"
    constructorSignature: "<init>(java.util.Properties) : void"
    modelFingerprint: "4E3BF0294E837C150A7585CF8640E54A"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "32F53A20A36936346358E786FACCE822"
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "A4B031520ABEDE26EA7F395AC59F72CE"
      valueUuid: "key"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "378A5F3A3C2EC7D11510A198AFABC302"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:entries,message:uniqueUuid1):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D446A609419428DDEAA49A58091F3986"
      valueUuid: "string"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.info.InfoProperties"
        parameters:
        - name: "entries"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Properties"
            uuid: "entries"
      valueType: "org.springframework.boot.info.InfoProperties"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "key"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Properties"
      uuid: "entries"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Entries must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "result1"
      valueType: "java.lang.String"
      uuid: "string"
      collectionUuid: "properties"
- method:
    name: "getInstant"
    sourceCodeSignature: "Instant getInstant(String key)"
    returnType: "java.time.Instant"
    parameters:
    - name: "key"
      type: "java.lang.String"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.NumberFormatException"
    instructionFingerprint: "BBD6874610CB58623E30F63D16FBE8EA"
  paths:
  - pathId: "path1"
    testPathName: "getInstantWhenSIsNotNull"
    constructorSignature: "<init>(java.util.Properties) : void"
    modelFingerprint: "12FC1DDC28E93A0F46575AC9F4050162"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "32F53A20A36936346358E786FACCE822"
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "A4B031520ABEDE26EA7F395AC59F72CE"
      valueUuid: "key"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "378A5F3A3C2EC7D11510A198AFABC302"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:entries,message:uniqueUuid2):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E12B4D4D0F2E66A0ECFCB11C763176B4"
      valueUuid: "instant"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.info.InfoProperties"
        parameters:
        - name: "entries"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Properties"
            uuid: "entries"
      valueType: "org.springframework.boot.info.InfoProperties"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "key"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Properties"
      uuid: "entries"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Entries must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Instant"
        method: "ofEpochMilli"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "long1"
      valueType: "java.time.Instant"
      uuid: "instant"
    branches:
    - lineNumber: 65
      expression: "s != null"
      range: "(65,7)-(65,15)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "getInstantWhenSIsNull"
    constructorSignature: "<init>(java.util.Properties) : void"
    modelFingerprint: "70D6151645C180AEEC0EDB9E1CFB7516"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "32F53A20A36936346358E786FACCE822"
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "A4B031520ABEDE26EA7F395AC59F72CE"
      valueUuid: "key"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "378A5F3A3C2EC7D11510A198AFABC302"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:entries,message:uniqueUuid3):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2E05A915699F80AFE74760BCE7CF29C2"
      valueUuid: "instant"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.info.InfoProperties"
        parameters:
        - name: "entries"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Properties"
            uuid: "entries"
      valueType: "org.springframework.boot.info.InfoProperties"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "key"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Properties"
      uuid: "entries"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Entries must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.time.Instant"
      uuid: "instant"
      fixed: true
    branches:
    - lineNumber: 65
      expression: "s != null"
      range: "(65,7)-(65,15)"
      evaluatedAs: false
  - pathId: "path3"
    testPathName: "getInstantWhenCaughtNumberFormatException"
    constructorSignature: "<init>(java.util.Properties) : void"
    modelFingerprint: "F7EB9A2A7C9E63EE00E03530B6EDB583"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "32F53A20A36936346358E786FACCE822"
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "A4B031520ABEDE26EA7F395AC59F72CE"
      valueUuid: "key"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "378A5F3A3C2EC7D11510A198AFABC302"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:entries,message:uniqueUuid4):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2E05A915699F80AFE74760BCE7CF29C2"
      valueUuid: "instant2"
    disabled: false
    failureReason:
      reason: "DEPENDENCY_TO_THROW_EXCEPTION_NOT_FOUND"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.info.InfoProperties"
        parameters:
        - name: "entries"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Properties"
            uuid: "entries"
      valueType: "org.springframework.boot.info.InfoProperties"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "key"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Properties"
      uuid: "entries"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Entries must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.time.Instant"
      uuid: "instant2"
      fixed: true
    branches:
    - lineNumber: 65
      expression: "s != null"
      range: "(65,7)-(65,15)"
      evaluatedAs: true
    - lineNumber: 69
      expression: "catch-exception (NumberFormatException)"
      range: "(69,4)-(69,34)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.NumberFormatException"
- method:
    name: "iterator"
    sourceCodeSignature: "Iterator<Entry> iterator()"
    returnType: "java.util.Iterator"
    genericReturnType: "org.springframework.boot.info.InfoProperties$Entry"
    instructionFingerprint: "657D61EA42179E894327B2FD3EEC310D"
  paths:
  - pathId: "path1"
    testPathName: "iteratorTest"
    constructorSignature: "<init>(java.util.Properties) : void"
    modelFingerprint: "AAC25198276825B45301D771FBB7B642"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "971F51EC936554715D174B4CFC47F4B3"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "3D13BCA3650C9E44CFFD0C9A73343FAF"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "notNull(object:entries,message:uniqueUuid1):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E94B30F986D7D2B4DFB4E89D746F2F02"
      valueUuid: "infoProperties.PropertiesIteratorNotNull"
    disabled: false
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.info.InfoProperties"
        parameters:
        - name: "entries"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Properties"
            uuid: "entries"
      valueType: "org.springframework.boot.info.InfoProperties"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Properties"
      uuid: "entries"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Entries must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "NOT_NULL"
      valueType: "java.util.Iterator"
      genericValueType: "org.springframework.boot.info.InfoProperties$Entry"
      uuid: "infoProperties.PropertiesIteratorNotNull"
      fixed: true
- method:
    name: "toPropertySource"
    sourceCodeSignature: "PropertySource<?> toPropertySource()"
    returnType: "org.springframework.core.env.PropertySource"
    genericReturnType: "?"
    instructionFingerprint: "FF3546D08D3CF0E1E54C7773FA0E318C"
  paths:
  - pathId: "path1"
    testPathName: "toPropertySourceTest"
    constructorSignature: "<init>(java.util.Properties) : void"
    modelFingerprint: "09FC15C197ADEAE0AE21072AEA976236"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "32F53A20A36936346358E786FACCE822"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "378A5F3A3C2EC7D11510A198AFABC302"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:entries,message:uniqueUuid6):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "36B612072D4E252E25A2827380438C17"
      valueUuid: "propertiesPropertySource"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.info.InfoProperties"
        parameters:
        - name: "entries"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Properties"
            uuid: "entries"
      valueType: "org.springframework.boot.info.InfoProperties"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Properties"
      uuid: "entries"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Entries must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid6"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.core.env.PropertiesPropertySource"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "InfoProperties"
            valueType: "java.lang.String"
            uuid: "string"
        - name: "source"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Properties"
            uuid: "properties2"
      valueType: "org.springframework.core.env.PropertiesPropertySource"
      uuid: "propertiesPropertySource"
      fixed: true
