---
modelFingerprint: "2BBE8CAA3B5641864E06DFAEF6C5A407"
targetClass:
  fullClassName: "org.springframework.boot.info.GitProperties"
methods:
- method:
    name: "getBranch"
    sourceCodeSignature: "String getBranch()"
    returnType: "java.lang.String"
    instructionFingerprint: "72348B75213A5D39C843C19ADDF8609D"
  paths:
  - pathId: "path1"
    testPathName: "getBranchTest"
    constructorSignature: "<init>(java.util.Properties) : void"
    modelFingerprint: "BB565858305290E0D3E203D1D78C33A2"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "C57072705465EEBEDD9B5C165F9F2DB4"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "6E9A00E050D268E6E10568CA1F49A3F4"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:properties,message:uniqueUuid10):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D446A609419428DDEAA49A58091F3986"
      valueUuid: "string5"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.info.GitProperties"
        parameters:
        - name: "entries"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "build.time"
                    valueType: "java.lang.String"
                    fixed: true
                  value:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "0"
                    valueType: "java.lang.String"
                    uuid: "string3"
                    collectionUuid: "entries"
                valueType: "java.util.Map$Entry"
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "commit.time"
                    valueType: "java.lang.String"
                    fixed: true
                  value:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "0"
                    valueType: "java.lang.String"
                    uuid: "string"
                    collectionUuid: "entries"
                valueType: "java.util.Map$Entry"
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.lang.Object"
                      parameters: []
                    valueType: "java.lang.Object"
                    uuid: "entriesKey"
                  value:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.lang.Object"
                      parameters: []
                    valueType: "java.lang.Object"
                    uuid: "entriesValue"
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "commit.id"
                    valueType: "java.lang.String"
                    fixed: true
                  value:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.lang.Object"
                      parameters: []
                    valueType: "java.lang.Object"
                    uuid: "object3"
                    collectionUuid: "entries"
                valueType: "java.util.Map$Entry"
            valueType: "java.util.Properties"
            genericValueType: "java.lang.Object, java.lang.Object"
            uuid: "entries"
      valueType: "org.springframework.boot.info.GitProperties"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "build.time"
              valueType: "java.lang.String"
              uuid: "uniqueUuid2"
              fixed: true
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "0"
              valueType: "java.lang.String"
              uuid: "string4"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid1"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "commit.time"
              valueType: "java.lang.String"
              uuid: "uniqueUuid4"
              fixed: true
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "0"
              valueType: "java.lang.String"
              uuid: "string2"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid3"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "propertiesKey"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "propertiesValue"
          uuid: "uniqueUuid5"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "commit.id"
              valueType: "java.lang.String"
              uuid: "uniqueUuid7"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object3"
              collectionUuid: "entries"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid6"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "commit.id.full"
              valueType: "java.lang.String"
              uuid: "uniqueUuid9"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object3"
              collectionUuid: "entries"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.Object"
          uuid: "uniqueUuid8"
      valueType: "java.util.Properties"
      genericValueType: "java.lang.Object, java.lang.Object"
      uuid: "properties"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Entries must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid10"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "result1"
      valueType: "java.lang.String"
      uuid: "string5"
      collectionUuid: "properties2"
    calledSomeStaticInternalMethod: true
- method:
    name: "getCommitId"
    sourceCodeSignature: "String getCommitId()"
    returnType: "java.lang.String"
    instructionFingerprint: "EE729BC8FD91F7E5B1373A2EEA39820A"
  paths:
  - pathId: "path1"
    testPathName: "getCommitIdTest"
    constructorSignature: "<init>(java.util.Properties) : void"
    modelFingerprint: "E7BABB73CDE19569918E1509BCE9A2A4"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "C57072705465EEBEDD9B5C165F9F2DB4"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "6E9A00E050D268E6E10568CA1F49A3F4"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:properties,message:uniqueUuid20):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D446A609419428DDEAA49A58091F3986"
      valueUuid: "string5"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.info.GitProperties"
        parameters:
        - name: "entries"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "build.time"
                    valueType: "java.lang.String"
                    fixed: true
                  value:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "0"
                    valueType: "java.lang.String"
                    uuid: "string3"
                    collectionUuid: "entries"
                valueType: "java.util.Map$Entry"
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "commit.time"
                    valueType: "java.lang.String"
                    fixed: true
                  value:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "0"
                    valueType: "java.lang.String"
                    uuid: "string"
                    collectionUuid: "entries"
                valueType: "java.util.Map$Entry"
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.lang.Object"
                      parameters: []
                    valueType: "java.lang.Object"
                    uuid: "entriesKey"
                  value:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.lang.Object"
                      parameters: []
                    valueType: "java.lang.Object"
                    uuid: "entriesValue"
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "commit.id"
                    valueType: "java.lang.String"
                    fixed: true
                  value:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.lang.Object"
                      parameters: []
                    valueType: "java.lang.Object"
                    uuid: "object3"
                    collectionUuid: "entries"
                valueType: "java.util.Map$Entry"
            valueType: "java.util.Properties"
            genericValueType: "java.lang.Object, java.lang.Object"
            uuid: "entries"
      valueType: "org.springframework.boot.info.GitProperties"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "build.time"
              valueType: "java.lang.String"
              uuid: "uniqueUuid12"
              fixed: true
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "0"
              valueType: "java.lang.String"
              uuid: "string4"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid11"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "commit.time"
              valueType: "java.lang.String"
              uuid: "uniqueUuid14"
              fixed: true
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "0"
              valueType: "java.lang.String"
              uuid: "string2"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid13"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "propertiesKey"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "propertiesValue"
          uuid: "uniqueUuid15"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "commit.id"
              valueType: "java.lang.String"
              uuid: "uniqueUuid17"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object3"
              collectionUuid: "entries"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid16"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "commit.id.full"
              valueType: "java.lang.String"
              uuid: "uniqueUuid19"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object3"
              collectionUuid: "entries"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.Object"
          uuid: "uniqueUuid18"
      valueType: "java.util.Properties"
      genericValueType: "java.lang.Object, java.lang.Object"
      uuid: "properties"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Entries must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid20"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "result1"
      valueType: "java.lang.String"
      uuid: "string5"
      collectionUuid: "properties2"
    calledSomeStaticInternalMethod: true
- method:
    name: "getShortCommitId"
    sourceCodeSignature: "String getShortCommitId()"
    returnType: "java.lang.String"
    instructionFingerprint: "17928573494D43644E8D7AB0BBD73FEA"
  paths:
  - pathId: "path1"
    testPathName: "getShortCommitIdWhenShortIdIsNotNull"
    constructorSignature: "<init>(java.util.Properties) : void"
    modelFingerprint: "3BCC85AA95EF61AABCE10D8CE4D538E2"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "C57072705465EEBEDD9B5C165F9F2DB4"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "6E9A00E050D268E6E10568CA1F49A3F4"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:properties,message:uniqueUuid30):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D446A609419428DDEAA49A58091F3986"
      valueUuid: "string5"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.info.GitProperties"
        parameters:
        - name: "entries"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "build.time"
                    valueType: "java.lang.String"
                    fixed: true
                  value:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "0"
                    valueType: "java.lang.String"
                    uuid: "string3"
                    collectionUuid: "entries"
                valueType: "java.util.Map$Entry"
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "commit.time"
                    valueType: "java.lang.String"
                    fixed: true
                  value:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "0"
                    valueType: "java.lang.String"
                    uuid: "string"
                    collectionUuid: "entries"
                valueType: "java.util.Map$Entry"
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.lang.Object"
                      parameters: []
                    valueType: "java.lang.Object"
                    uuid: "entriesKey"
                  value:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.lang.Object"
                      parameters: []
                    valueType: "java.lang.Object"
                    uuid: "entriesValue"
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "commit.id"
                    valueType: "java.lang.String"
                    fixed: true
                  value:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.lang.Object"
                      parameters: []
                    valueType: "java.lang.Object"
                    uuid: "object3"
                    collectionUuid: "entries"
                valueType: "java.util.Map$Entry"
            valueType: "java.util.Properties"
            genericValueType: "java.lang.Object, java.lang.Object"
            uuid: "entries"
      valueType: "org.springframework.boot.info.GitProperties"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "build.time"
              valueType: "java.lang.String"
              uuid: "uniqueUuid22"
              fixed: true
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "0"
              valueType: "java.lang.String"
              uuid: "string4"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid21"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "commit.time"
              valueType: "java.lang.String"
              uuid: "uniqueUuid24"
              fixed: true
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "0"
              valueType: "java.lang.String"
              uuid: "string2"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid23"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "propertiesKey"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "propertiesValue"
          uuid: "uniqueUuid25"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "commit.id"
              valueType: "java.lang.String"
              uuid: "uniqueUuid27"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object3"
              collectionUuid: "entries"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid26"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "commit.id.full"
              valueType: "java.lang.String"
              uuid: "uniqueUuid29"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object3"
              collectionUuid: "entries"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.Object"
          uuid: "uniqueUuid28"
      valueType: "java.util.Properties"
      genericValueType: "java.lang.Object, java.lang.Object"
      uuid: "properties"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Entries must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid30"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "result1"
      valueType: "java.lang.String"
      uuid: "string5"
      collectionUuid: "properties2"
    branches:
    - lineNumber: 64
      expression: "shortId != null"
      range: "(64,7)-(64,21)"
      evaluatedAs: true
    calledSomeStaticInternalMethod: true
  - pathId: "path2"
    testPathName: "getShortCommitIdWhenIdIsNull"
    constructorSignature: "<init>(java.util.Properties) : void"
    modelFingerprint: "B4AC14BD67532458AD81DAAB2B428584"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "C57072705465EEBEDD9B5C165F9F2DB4"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "6E9A00E050D268E6E10568CA1F49A3F4"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:properties,message:uniqueUuid40):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "22F8881FFD450B0298D1E902000A1687"
      methodExercised:
        expression: "getCommitId():string6"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "494333D8A9619E3B4E57274C75B778A3"
      valueUuid: "string7"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.info.GitProperties"
        parameters:
        - name: "entries"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "build.time"
                    valueType: "java.lang.String"
                    fixed: true
                  value:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "0"
                    valueType: "java.lang.String"
                    uuid: "string3"
                    collectionUuid: "entries"
                valueType: "java.util.Map$Entry"
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "commit.time"
                    valueType: "java.lang.String"
                    fixed: true
                  value:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "0"
                    valueType: "java.lang.String"
                    uuid: "string"
                    collectionUuid: "entries"
                valueType: "java.util.Map$Entry"
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.lang.Object"
                      parameters: []
                    valueType: "java.lang.Object"
                    uuid: "entriesKey"
                  value:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.lang.Object"
                      parameters: []
                    valueType: "java.lang.Object"
                    uuid: "entriesValue"
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "commit.id"
                    valueType: "java.lang.String"
                    fixed: true
                  value:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.lang.Object"
                      parameters: []
                    valueType: "java.lang.Object"
                    uuid: "object3"
                    collectionUuid: "entries"
                valueType: "java.util.Map$Entry"
            valueType: "java.util.Properties"
            genericValueType: "java.lang.Object, java.lang.Object"
            uuid: "entries"
      valueType: "org.springframework.boot.info.GitProperties"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "build.time"
              valueType: "java.lang.String"
              uuid: "uniqueUuid32"
              fixed: true
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "0"
              valueType: "java.lang.String"
              uuid: "string4"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid31"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "commit.time"
              valueType: "java.lang.String"
              uuid: "uniqueUuid34"
              fixed: true
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "0"
              valueType: "java.lang.String"
              uuid: "string2"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid33"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "propertiesKey"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "propertiesValue"
          uuid: "uniqueUuid35"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "commit.id"
              valueType: "java.lang.String"
              uuid: "uniqueUuid37"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object3"
              collectionUuid: "entries"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid36"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "commit.id.full"
              valueType: "java.lang.String"
              uuid: "uniqueUuid39"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object3"
              collectionUuid: "entries"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.Object"
          uuid: "uniqueUuid38"
      valueType: "java.util.Properties"
      genericValueType: "java.lang.Object, java.lang.Object"
      uuid: "properties"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Entries must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid40"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "string6"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "string7"
      fixed: true
    branches:
    - lineNumber: 64
      expression: "shortId != null"
      range: "(64,7)-(64,21)"
      evaluatedAs: false
    - lineNumber: 68
      expression: "id == null"
      range: "(68,7)-(68,16)"
      evaluatedAs: true
    calledSomeStaticInternalMethod: true
  - pathId: "path3"
    testPathName: "getShortCommitIdWhenIdLengthGreaterThan7"
    constructorSignature: "<init>(java.util.Properties) : void"
    modelFingerprint: "80D4CC6BF790AB2FAF7041F9B71B7202"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B65BA8319AE19E0F57D796F1E399794E"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "4E746A7B73EA4499397205B0DF3FE7BB"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:properties,message:uniqueUuid50):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "77840F76C58B4BF0D8A1C77009765F93"
      methodExercised:
        expression: "getCommitId():string6"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7907BD6A67A5DEAF26651193F5CB3DE6"
      valueUuid: "string7"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.info.GitProperties"
        parameters:
        - name: "entries"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "commit.id"
                    valueType: "java.lang.String"
                    fixed: true
                  value:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.lang.Object"
                      parameters: []
                    valueType: "java.lang.Object"
                    uuid: "object3"
                    collectionUuid: "entries"
                valueType: "java.util.Map$Entry"
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "commit.time"
                    valueType: "java.lang.String"
                    fixed: true
                  value:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "0"
                    valueType: "java.lang.String"
                    uuid: "string"
                    collectionUuid: "entries"
                valueType: "java.util.Map$Entry"
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.lang.Object"
                      parameters: []
                    valueType: "java.lang.Object"
                    uuid: "entriesKey"
                  value:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.lang.Object"
                      parameters: []
                    valueType: "java.lang.Object"
                    uuid: "entriesValue"
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "build.time"
                    valueType: "java.lang.String"
                    fixed: true
                  value:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "0"
                    valueType: "java.lang.String"
                    uuid: "string3"
                    collectionUuid: "entries"
                valueType: "java.util.Map$Entry"
            valueType: "java.util.Properties"
            genericValueType: "java.lang.Object, java.lang.Object"
            uuid: "entries"
      valueType: "org.springframework.boot.info.GitProperties"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "commit.id"
              valueType: "java.lang.String"
              uuid: "uniqueUuid42"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object3"
              collectionUuid: "entries"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid41"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "commit.time"
              valueType: "java.lang.String"
              uuid: "uniqueUuid44"
              fixed: true
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "0"
              valueType: "java.lang.String"
              uuid: "string2"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid43"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "propertiesKey"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "propertiesValue"
          uuid: "uniqueUuid45"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "build.time"
              valueType: "java.lang.String"
              uuid: "uniqueUuid47"
              fixed: true
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "0"
              valueType: "java.lang.String"
              uuid: "string4"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid46"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "commit.id.full"
              valueType: "java.lang.String"
              uuid: "uniqueUuid49"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object3"
              collectionUuid: "entries"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.Object"
          uuid: "uniqueUuid48"
      valueType: "java.util.Properties"
      genericValueType: "java.lang.Object, java.lang.Object"
      uuid: "properties"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Entries must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid50"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "ABCDEFGH"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ABCDEFG"
      valueType: "java.lang.String"
      uuid: "string7"
    branches:
    - lineNumber: 64
      expression: "shortId != null"
      range: "(64,7)-(64,21)"
      evaluatedAs: false
    - lineNumber: 68
      expression: "id == null"
      range: "(68,7)-(68,16)"
      evaluatedAs: false
    - lineNumber: 71
      expression: "id.length() > 7"
      range: "(71,11)-(71,25)"
      evaluatedAs: true
    calledSomeStaticInternalMethod: true
  - pathId: "path4"
    testPathName: "getShortCommitIdWhenIdLengthNotGreaterThan7"
    constructorSignature: "<init>(java.util.Properties) : void"
    modelFingerprint: "EF964BDB2E3B00FA0EE9EB8342E54827"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "C57072705465EEBEDD9B5C165F9F2DB4"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "6E9A00E050D268E6E10568CA1F49A3F4"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:properties,message:uniqueUuid60):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "F3E7303F0CC2D20F1D455D40066A58A4"
      methodExercised:
        expression: "getCommitId():string6"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "26EE4C4C36995C7CEACDE6B3FC809284"
      valueUuid: "string6"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.info.GitProperties"
        parameters:
        - name: "entries"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "build.time"
                    valueType: "java.lang.String"
                    fixed: true
                  value:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "0"
                    valueType: "java.lang.String"
                    uuid: "string3"
                    collectionUuid: "entries"
                valueType: "java.util.Map$Entry"
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "commit.time"
                    valueType: "java.lang.String"
                    fixed: true
                  value:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "0"
                    valueType: "java.lang.String"
                    uuid: "string"
                    collectionUuid: "entries"
                valueType: "java.util.Map$Entry"
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.lang.Object"
                      parameters: []
                    valueType: "java.lang.Object"
                    uuid: "entriesKey"
                  value:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.lang.Object"
                      parameters: []
                    valueType: "java.lang.Object"
                    uuid: "entriesValue"
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "commit.id"
                    valueType: "java.lang.String"
                    fixed: true
                  value:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.lang.Object"
                      parameters: []
                    valueType: "java.lang.Object"
                    uuid: "object3"
                    collectionUuid: "entries"
                valueType: "java.util.Map$Entry"
            valueType: "java.util.Properties"
            genericValueType: "java.lang.Object, java.lang.Object"
            uuid: "entries"
      valueType: "org.springframework.boot.info.GitProperties"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "build.time"
              valueType: "java.lang.String"
              uuid: "uniqueUuid52"
              fixed: true
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "0"
              valueType: "java.lang.String"
              uuid: "string4"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid51"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "commit.time"
              valueType: "java.lang.String"
              uuid: "uniqueUuid54"
              fixed: true
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "0"
              valueType: "java.lang.String"
              uuid: "string2"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid53"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "propertiesKey"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "propertiesValue"
          uuid: "uniqueUuid55"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "commit.id"
              valueType: "java.lang.String"
              uuid: "uniqueUuid57"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object3"
              collectionUuid: "entries"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid56"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "commit.id.full"
              valueType: "java.lang.String"
              uuid: "uniqueUuid59"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object3"
              collectionUuid: "entries"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.Object"
          uuid: "uniqueUuid58"
      valueType: "java.util.Properties"
      genericValueType: "java.lang.Object, java.lang.Object"
      uuid: "properties"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Entries must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid60"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string6"
    branches:
    - lineNumber: 64
      expression: "shortId != null"
      range: "(64,7)-(64,21)"
      evaluatedAs: false
    - lineNumber: 68
      expression: "id == null"
      range: "(68,7)-(68,16)"
      evaluatedAs: false
    - lineNumber: 71
      expression: "id.length() > 7"
      range: "(71,11)-(71,25)"
      evaluatedAs: false
    calledSomeStaticInternalMethod: true
- method:
    name: "getCommitTime"
    sourceCodeSignature: "Instant getCommitTime()"
    returnType: "java.time.Instant"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.NumberFormatException"
    instructionFingerprint: "A423B913DED2C13453B3B5710DF27478"
  paths:
  - pathId: "path1"
    testPathName: "getCommitTimeTest"
    constructorSignature: "<init>(java.util.Properties) : void"
    modelFingerprint: "CE7032B3ED8503F9E6974F3AB19E1EA9"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "9925E87FDC85B0227156D79155A93947"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "E01EF08658E211B9179F0AD70DF60B0A"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:properties,message:uniqueUuid69):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "05E10E43A71971008B8D7709616BF1E7"
      methodExercised:
        expression: "getInstant(key:uniqueUuid70):instant"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5B5DAAE14D1716B3B25C20BB47AA9C52"
      valueUuid: "instant"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.info.GitProperties"
        parameters:
        - name: "entries"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "commit.time"
                    valueType: "java.lang.String"
                    fixed: true
                  value:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "0"
                    valueType: "java.lang.String"
                    uuid: "string"
                    collectionUuid: "entries"
                valueType: "java.util.Map$Entry"
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "build.time"
                    valueType: "java.lang.String"
                    fixed: true
                  value:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "0"
                    valueType: "java.lang.String"
                    uuid: "string3"
                    collectionUuid: "entries"
                valueType: "java.util.Map$Entry"
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "commit.id"
                    valueType: "java.lang.String"
                    fixed: true
                  value:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.lang.Object"
                      parameters: []
                    valueType: "java.lang.Object"
                    uuid: "object3"
                    collectionUuid: "entries"
                valueType: "java.util.Map$Entry"
            valueType: "java.util.Properties"
            uuid: "entries"
      valueType: "org.springframework.boot.info.GitProperties"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "commit.time"
              valueType: "java.lang.String"
              uuid: "uniqueUuid62"
              fixed: true
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "0"
              valueType: "java.lang.String"
              uuid: "string2"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid61"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "build.time"
              valueType: "java.lang.String"
              uuid: "uniqueUuid64"
              fixed: true
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "0"
              valueType: "java.lang.String"
              uuid: "string4"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid63"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "commit.id"
              valueType: "java.lang.String"
              uuid: "uniqueUuid66"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object3"
              collectionUuid: "entries"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid65"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "commit.id.full"
              valueType: "java.lang.String"
              uuid: "uniqueUuid68"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object3"
              collectionUuid: "entries"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.Object"
          uuid: "uniqueUuid67"
      valueType: "java.util.Properties"
      uuid: "properties"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Entries must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid69"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Instant"
        method: "ofEpochSecond"
        methodParameters:
        - name: "epochSecond"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1700000000
            valueType: "int"
            uuid: "uniqueUuid72"
            fixed: true
      valueType: "java.time.Instant"
      uuid: "instant"
    - sapientType: "BASIC"
      content: !<regular>
        value: "commit.time"
      valueType: "java.lang.String"
      uuid: "uniqueUuid70"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Instant"
        method: "ofEpochSecond"
        methodParameters:
        - name: "epochSecond"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1700000000
            valueType: "int"
            uuid: "uniqueUuid72"
            fixed: true
      valueType: "java.time.Instant"
      uuid: "instant"
    calledSomeStaticInternalMethod: true
