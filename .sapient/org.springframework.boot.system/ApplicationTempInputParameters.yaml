---
modelFingerprint: "071B496D1733239874A5759417BB6E74"
methods:
- method:
    name: "toString"
    signature: "toString() : java.lang.String"
    sourceCodeSignature: "String toString()"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.io.IOException"
    instructionFingerprint: "8BBC67A0D09F3BAC3F1B9395A44E5BD9"
  paths:
  - pathId: "path1"
    testPathName: "toStringTest"
    constructorSignature: "<init>(java.lang.Class<?>) : void"
    modelFingerprint: "EB2656FE5C0B65638A039F8CEBB80845"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6B8450258D08909E372E2FDD6E091454"
      index: 1
      valueUuid: "target"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "0B76346E0E1B0E02F63F5DB3437AFE5A"
      index: 2
      methodExercised:
        target: "target"
        name: "getDir"
        parameters: []
        signature: "getDir(): File"
        returnValueUuid: "toString_file1"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 3
      valueUuid: "toString_string1"
    uuid: "363d3698-f34c-39ad-914f-376a19498023"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.io.File.getAbsolutePath() : java.lang.String"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.system.ApplicationTemp"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "<init>_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.system.ApplicationTemp"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "toString_file1-pathname"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.io.File"
      uuid: "toString_file1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "result1"
      valueType: "java.lang.String"
      uuid: "toString_string1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "getDir"
    signature: "getDir() : java.io.File"
    sourceCodeSignature: "File getDir()"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.io.IOException"
    instructionFingerprint: "44E16A86759233E541B6000EBCBDE1AE"
  paths:
  - pathId: "path10"
    testPathName: "getDirWhenFilesExistsPath"
    constructorSignature: "<init>(java.lang.Class<?>) : void"
    modelFingerprint: "A59A31EC475B9C9F9A050CEC788E5D86"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "ef8471cd-f0e7-3e71-b8f9-76806da7d1df"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "update(digest, home.getSource());"
      lineNumber: 145
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: home - Method: getSource"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path3"
    testPathName: "getDirWhenSourceInstanceOfFileAndFilesExistsPath"
    constructorSignature: "<init>(java.lang.Class<?>) : void"
    modelFingerprint: "512D9E88F0B93A6DA26BD76FFBD778A0"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "fd9809cf-5d70-39f2-9a75-d0898be6fc64"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "update(digest, home.getSource());"
      lineNumber: 145
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: home - Method: getSource"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path4"
    testPathName: "getDirWhenSourceIsNotNullAndSourceInstanceOfFileAndFilesExistsPath"
    constructorSignature: "<init>(java.lang.Class<?>) : void"
    modelFingerprint: "0E13C0F4EDA9781A502E30ABAF0EBC85"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "fbf8267d-f5e5-3b9a-8fef-af2cf3830f19"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "update(digest, home.getSource());"
      lineNumber: 145
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: home - Method: getSource"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path5"
    testPathName: "getDirWhenThisPathIsNullAndSourceIsNotNullAndSourceInstanceOfFileAndFilesExistsPath"
    constructorSignature: "<init>(java.lang.Class<?>) : void"
    modelFingerprint: "48C464370BE8FE5F3FC935DEDA57E7CB"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "217c55b2-1ac1-3edb-85d3-c5ac7be4f2cf"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "update(digest, home.getSource());"
      lineNumber: 145
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: home - Method: getSource"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path6"
    testPathName: "getDirWhenThisPathIsNullAndThisPathIsNullAndSourceIsNotNullAndSourceInstanceOfFileAndFilesExistsPath"
    constructorSignature: "<init>(java.lang.Class<?>) : void"
    modelFingerprint: "F62A9ED27FB12E820AB0F399B50114F3"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "52dfe0be-5134-31e0-955b-8d566ce00988"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "update(digest, home.getSource());"
      lineNumber: 145
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: home - Method: getSource"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path7"
    testPathName: "getDirWhenThisPathIsNullAndThisPathIsNullAndSourceIsNotNullAndSourceInstanceOfFileAndFilesExistsPath2"
    constructorSignature: "<init>(java.lang.Class<?>) : void"
    modelFingerprint: "97DADE5E09427C09BEDC61E904AA6167"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "9d3a9ca3-6fe9-3792-b261-d824edaaad8c"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "update(digest, home.getSource());"
      lineNumber: 145
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: home - Method: getSource"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path8"
    testPathName: "getDirWhenThisPathIsNullAndThisPathIsNullAndSourceIsNotNullAndSourceInstanceOfFileAndFilesExistsPath3"
    constructorSignature: "<init>(java.lang.Class<?>) : void"
    modelFingerprint: "91590844F0281F1FB3123D5213EDF25E"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "dd2f0946-0cc3-3f40-9fcb-e0c3d73b7a69"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "update(digest, home.getSource());"
      lineNumber: 145
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: home - Method: getSource"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path9"
    testPathName: "getDirWhenThisPathIsNullAndThisPathIsNullAndSourceIsNotNullAndSourceInstanceOfFileAndFilesExistsPath4"
    constructorSignature: "<init>(java.lang.Class<?>) : void"
    modelFingerprint: "2564E3BC387AC7186B2D773EF5DA8613"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "3f65c08e-561e-3d5b-8fd1-b1cc2585b692"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "update(digest, home.getSource());"
      lineNumber: 145
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: home - Method: getSource"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path11"
    testPathName: "getDirWhenCaughtExceptionThrowsIllegalStateException"
    constructorSignature: "<init>(java.lang.Class<?>) : void"
    modelFingerprint: "9C5AFD39F19490AAB3D594560643640D"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 22
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "ACD6035A8DABC92415FD1A3CF98AA566"
      index: 1
      valueUuid: "target"
    - type: "STATIC"
      name: "MessageDigest"
      modelFingerprint: "DB197A57D07133951000EFC80C9BDF97"
      index: 2
      idsTryCatchBlockSurrounding:
      - 220002
      valueUuid: "uuid58"
      methodExercised:
        target: "java.security.MessageDigest"
        name: "getInstance"
        parameters:
        - name: "md"
          valueUuid: "uuid57"
        throwsExceptions:
        - "java.security.NoSuchAlgorithmException"
        signature: "getInstance(String): MessageDigest throws java.security.NoSuchAlgorithmException"
        returnValueUuid: "generateHash_messageDigest1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "home"
      modelFingerprint: "D794BEBDC7BEFC80ED1D0F48699F0CED"
      index: 3
      idsTryCatchBlockSurrounding:
      - 220002
      valueUuid: "generateHash_applicationHome1"
      methodExercised:
        target: "home"
        name: "getSource"
        parameters: []
        signature: "getSource(): File"
        returnValueUuid: "generateHash_file1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "home"
      modelFingerprint: "16FA8237E0A2E71C0DCFF1D061CD97CA"
      index: 4
      idsTryCatchBlockSurrounding:
      - 220002
      valueUuid: "generateHash_applicationHome1"
      methodExercised:
        target: "home"
        name: "getDir"
        parameters: []
        signature: "getDir(): File"
        returnValueUuid: "generateHash_file2"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E251EF5F123C56730C65681F6E04FFF2"
      index: 5
      valueUuid: "generateHash_illegalStateException1"
    uuid: "aaf5659d-e049-3014-9017-614ee1dda133"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "update(digest, home.getSource());"
      lineNumber: 145
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: home - Method: getSource"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.system.ApplicationTemp"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "<init>_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.system.ApplicationTemp"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.MessageDigest"
      uuid: "uuid58"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.security.MessageDigest"
        method: "getInstance"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "SHA-1"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.security.MessageDigest"
      uuid: "generateHash_messageDigest1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "SHA-1"
      valueType: "java.lang.String"
      uuid: "uuid57"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.system.ApplicationHome"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "<init>_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.system.ApplicationHome"
      uuid: "generateHash_applicationHome1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.io.File"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.system.ApplicationHome"
            parameters:
            - name: "sourceClass"
              value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "java.lang.Object"
                valueType: "java.lang.Class"
                genericValueType: "?"
                uuid: "<init>_class1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: true
          valueType: "org.springframework.boot.system.ApplicationHome"
          uuid: "generateHash_applicationHome1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "getSource"
      valueType: "java.io.File"
      uuid: "generateHash_file1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.system.ApplicationHome"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "<init>_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.system.ApplicationHome"
      uuid: "generateHash_applicationHome1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.io.File"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.system.ApplicationHome"
            parameters:
            - name: "sourceClass"
              value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "java.lang.Object"
                valueType: "java.lang.Class"
                genericValueType: "?"
                uuid: "<init>_class1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: true
          valueType: "org.springframework.boot.system.ApplicationHome"
          uuid: "generateHash_applicationHome1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "getDir"
      valueType: "java.io.File"
      uuid: "generateHash_file2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Exception"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Exception"
            uuid: "generateHash_exception1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.lang.IllegalStateException"
      uuid: "generateHash_illegalStateException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path1"
    testPathName: "getDirWhenFileSystemSupportedFileAttributeViewsNotContainsPosix"
    constructorSignature: "<init>(java.lang.Class<?>) : void"
    modelFingerprint: "6DFE2AEC01E259038C80B403E06827DE"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "8247f182-8eb3-36c4-9e65-9f9b7b7ec961"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "update(digest, home.getSource());"
      lineNumber: 145
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: home - Method: getSource"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path2"
    testPathName: "getDirWhenFileSystemSupportedFileAttributeViewsContainsPosix"
    constructorSignature: "<init>(java.lang.Class<?>) : void"
    modelFingerprint: "9D0E9737D087D4570AE2F8C0A3177682"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "ACD6035A8DABC92415FD1A3CF98AA566"
      index: 1
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      name: "home"
      modelFingerprint: "D794BEBDC7BEFC80ED1D0F48699F0CED"
      index: 2
      idsTryCatchBlockSurrounding:
      - 220002
      valueUuid: "generateHash_applicationHome1"
      methodExercised:
        target: "home"
        name: "getSource"
        parameters: []
        signature: "getSource(): File"
        returnValueUuid: "generateHash_file1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "home"
      modelFingerprint: "16FA8237E0A2E71C0DCFF1D061CD97CA"
      index: 3
      idsTryCatchBlockSurrounding:
      - 220002
      valueUuid: "generateHash_applicationHome1"
      methodExercised:
        target: "home"
        name: "getDir"
        parameters: []
        signature: "getDir(): File"
        returnValueUuid: "generateHash_file2"
        access: 1
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "D0C76C4417E428414B0DF65736174D8F"
      index: 4
      valueUuid: "uuid66"
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "hasLength"
        parameters:
        - name: "str"
          valueUuid: "getTempDirectory_string1"
        signature: "hasLength(String): boolean"
        returnValueUuid: "getTempDirectory_boolean1"
        access: 9
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "DBA2025126A2D06718E155DCF3BCD137"
      index: 5
      valueUuid: "uuid68"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "state"
        parameters:
        - name: "expression"
          valueUuid: "getTempDirectory_boolean1"
        - name: "message"
          valueUuid: "uuid67"
        signature: "state(boolean,String): void"
        returnValueUuid: "getTempDirectory_void1"
        access: 9
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "D83F923687A63AA3C57684FC28F23D1B"
      index: 6
      valueUuid: "uuid70"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "state"
        parameters:
        - name: "expression"
          valueUuid: "getTempDirectory_boolean2"
        - name: "messageSupplier"
          valueUuid: "uuid69"
        signature: "state(boolean,Supplier): void"
        returnValueUuid: "getTempDirectory_void2"
        access: 9
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "D83F923687A63AA3C57684FC28F23D1B"
      index: 7
      valueUuid: "uuid72"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "state"
        parameters:
        - name: "expression"
          valueUuid: "getTempDirectory_boolean3"
        - name: "messageSupplier"
          valueUuid: "uuid71"
        signature: "state(boolean,Supplier): void"
        returnValueUuid: "getTempDirectory_void3"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C35DAF025483DBD85B4104CE66E73E7B"
      index: 8
      valueUuid: "getDir_file1"
    uuid: "a91bd8d0-de31-30b0-96dd-9a4b52db88fa"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "update(digest, home.getSource());"
      lineNumber: 145
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: home - Method: getSource"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.system.ApplicationTemp"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "<init>_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.system.ApplicationTemp"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.system.ApplicationHome"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "<init>_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.system.ApplicationHome"
      uuid: "generateHash_applicationHome1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.io.File"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.system.ApplicationHome"
            parameters:
            - name: "sourceClass"
              value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "java.lang.Object"
                valueType: "java.lang.Class"
                genericValueType: "?"
                uuid: "<init>_class1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: true
          valueType: "org.springframework.boot.system.ApplicationHome"
          uuid: "generateHash_applicationHome1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "getSource"
      valueType: "java.io.File"
      uuid: "generateHash_file1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.system.ApplicationHome"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "<init>_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.system.ApplicationHome"
      uuid: "generateHash_applicationHome1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.io.File"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.system.ApplicationHome"
            parameters:
            - name: "sourceClass"
              value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "java.lang.Object"
                valueType: "java.lang.Class"
                genericValueType: "?"
                uuid: "<init>_class1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: true
          valueType: "org.springframework.boot.system.ApplicationHome"
          uuid: "generateHash_applicationHome1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "getDir"
      valueType: "java.io.File"
      uuid: "generateHash_file2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "uuid66"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getTempDirectory_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "E"
      valueType: "java.lang.String"
      uuid: "getTempDirectory_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid68"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "getTempDirectory_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getTempDirectory_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "No 'java.io.tmpdir' property set"
      valueType: "java.lang.String"
      uuid: "uuid67"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid70"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "getTempDirectory_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getTempDirectory_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid69"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid72"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "getTempDirectory_void3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getTempDirectory_boolean3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid71"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.io.File"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "java.nio.file.Path"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<static_method_return>
                target: "java.nio.file.Paths"
                method: "get"
                methodParameters:
                - value:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "E"
                    valueType: "java.lang.String"
                    uuid: "getTempDirectory_string1"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                - value:
                    sapientType: "ARRAY"
                    content: !<array>
                      values: {}
                    valueType: "java.lang.String[]"
                    uuid: "getTempDirectory_string[]1"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
              valueType: "java.nio.file.Path"
              uuid: "getTempDirectory_path1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
            methodParameters:
            - value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "CF227A74CBB3471A6228495F554CA05042C3D3BB"
                valueType: "java.lang.String"
                uuid: "getPath_string1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            methodName: "resolve"
          valueType: "java.nio.file.Path"
          uuid: "getPath_path1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "toFile"
      valueType: "java.io.File"
      uuid: "getDir_file1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path12"
    testPathName: "getDirWhenCaughtIOExceptionThrowsIllegalStateException"
    constructorSignature: "<init>(java.lang.Class<?>) : void"
    modelFingerprint: "7FED01AC5ECE7DA88D2EBD5007ED4846"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 33
      id: 1
      catchExceptions:
      - "java.io.IOException"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "ACD6035A8DABC92415FD1A3CF98AA566"
      index: 1
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      name: "home"
      modelFingerprint: "9B3DFFC29AD4416E334353B200710525"
      index: 2
      idsTryCatchBlockSurrounding:
      - 220002
      valueUuid: "generateHash_applicationHome1"
      methodExercised:
        target: "home"
        name: "getSource"
        parameters: []
        signature: "getSource(): File"
        returnValueUuid: "generateHash_file1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "home"
      modelFingerprint: "BBFF41A3D34294EEEB8394DEB3D82E3F"
      index: 3
      idsTryCatchBlockSurrounding:
      - 220002
      valueUuid: "generateHash_applicationHome1"
      methodExercised:
        target: "home"
        name: "getDir"
        parameters: []
        signature: "getDir(): File"
        returnValueUuid: "generateHash_file2"
        access: 1
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "0ADC91B76C5E1D2A8701BB911882A91E"
      index: 4
      valueUuid: "uuid73"
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "hasLength"
        parameters:
        - name: "str"
          valueUuid: "getTempDirectory_string1"
        signature: "hasLength(String): boolean"
        returnValueUuid: "getTempDirectory_boolean1"
        access: 9
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "DBA2025126A2D06718E155DCF3BCD137"
      index: 5
      valueUuid: "uuid75"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "state"
        parameters:
        - name: "expression"
          valueUuid: "getTempDirectory_boolean1"
        - name: "message"
          valueUuid: "uuid74"
        signature: "state(boolean,String): void"
        returnValueUuid: "getTempDirectory_void1"
        access: 9
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "D83F923687A63AA3C57684FC28F23D1B"
      index: 6
      valueUuid: "uuid77"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "state"
        parameters:
        - name: "expression"
          valueUuid: "getTempDirectory_boolean2"
        - name: "messageSupplier"
          valueUuid: "uuid76"
        signature: "state(boolean,Supplier): void"
        returnValueUuid: "getTempDirectory_void2"
        access: 9
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "D83F923687A63AA3C57684FC28F23D1B"
      index: 7
      valueUuid: "uuid79"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "state"
        parameters:
        - name: "expression"
          valueUuid: "getTempDirectory_boolean3"
        - name: "messageSupplier"
          valueUuid: "uuid78"
        signature: "state(boolean,Supplier): void"
        returnValueUuid: "getTempDirectory_void3"
        access: 9
    - type: "STATIC"
      name: "Files"
      modelFingerprint: "01EF9928CEA89885F3C17A1F8C776590"
      index: 8
      idsTryCatchBlockSurrounding:
      - 330001
      valueUuid: "uuid80"
      methodExercised:
        target: "java.nio.file.Files"
        name: "createDirectory"
        parameters:
        - name: "dir"
          valueUuid: "getPath_path1"
        - name: "attrs"
          valueUuid: "<clinit>_fileAttribute[]1"
        throwsExceptions:
        - "java.io.IOException"
        signature: "createDirectory(Path,FileAttribute[]): Path throws java.io.IOException"
        returnValueUuid: "createDirectory_path1"
        access: 137
    - type: "RESULT"
      name: "result"
      modelFingerprint: "205DAB70DC3D5A50A39304BFA1B9F0AB"
      index: 9
      valueUuid: "createDirectory_illegalStateException1"
    uuid: "365406e5-8915-3934-abba-eb572554d3b2"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "update(digest, home.getSource());"
      lineNumber: 145
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: home - Method: getSource"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.system.ApplicationTemp"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "<init>_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.system.ApplicationTemp"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.system.ApplicationHome"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "<init>_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.system.ApplicationHome"
      uuid: "generateHash_applicationHome1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.io.File"
      uuid: "generateHash_file1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.system.ApplicationHome"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "<init>_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.system.ApplicationHome"
      uuid: "generateHash_applicationHome1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.io.File"
      uuid: "generateHash_file2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "uuid73"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getTempDirectory_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "getTempDirectory_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid75"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "getTempDirectory_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getTempDirectory_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "No 'java.io.tmpdir' property set"
      valueType: "java.lang.String"
      uuid: "uuid74"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid77"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "getTempDirectory_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getTempDirectory_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid76"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid79"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "getTempDirectory_void3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getTempDirectory_boolean3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid78"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.nio.file.Files"
      uuid: "uuid80"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.nio.file.Path"
      uuid: "createDirectory_path1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.nio.file.Path"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "java.nio.file.Paths"
            method: "get"
            methodParameters:
            - value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "A"
                valueType: "java.lang.String"
                uuid: "getTempDirectory_string1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - value:
                sapientType: "ARRAY"
                content: !<array>
                  values: {}
                valueType: "java.lang.String[]"
                uuid: "getTempDirectory_string[]1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.nio.file.Path"
          uuid: "getTempDirectory_path1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "DA39A3EE5E6B4B0D3255BFEF95601890AFD80709"
            valueType: "java.lang.String"
            uuid: "getPath_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        methodName: "resolve"
      valueType: "java.nio.file.Path"
      uuid: "getPath_path1"
      fixed: false
      nameForMock: "getPath_path1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.nio.file.attribute.FileAttribute[]"
      uuid: "<clinit>_fileAttribute[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Unable to create application temp directory getPath_path1"
            valueType: "java.lang.String"
            uuid: "createDirectory_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.IOException"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.io.IOException"
            uuid: "createDirectory_iOException1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.lang.IllegalStateException"
      uuid: "createDirectory_illegalStateException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "getDir"
    signature: "getDir(java.lang.String) : java.io.File"
    sourceCodeSignature: "File getDir(String subDir)"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.io.IOException"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.io.IOException"
    instructionFingerprint: "FC22CD5604A6A20D941FF9E85563A5E8"
  paths:
  - pathId: "path12"
    testPathName: "getDir1WhenFilesExistsPath"
    constructorSignature: "<init>(java.lang.Class<?>) : void"
    modelFingerprint: "3534A238F0703BDDFC9702AC33B1B3B9"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "1031438f-4e4e-3752-9bf1-688d32002a1e"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "update(digest, home.getSource());"
      lineNumber: 145
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: home - Method: getSource"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path5"
    testPathName: "getDir1WhenSourceInstanceOfFileAndFilesExistsPath"
    constructorSignature: "<init>(java.lang.Class<?>) : void"
    modelFingerprint: "CFD9ACEE84C80B1449462FC05B8ADDDF"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "6d40968e-9827-3b6c-87aa-dd3a501d8006"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "update(digest, home.getSource());"
      lineNumber: 145
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: home - Method: getSource"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path6"
    testPathName: "getDir1WhenSourceIsNotNullAndSourceInstanceOfFileAndFilesExistsPath"
    constructorSignature: "<init>(java.lang.Class<?>) : void"
    modelFingerprint: "36584431BDB4FAC2C8BC4ABDF848D7A8"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "d9ac7087-43c9-3116-b767-095d91e08861"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "update(digest, home.getSource());"
      lineNumber: 145
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: home - Method: getSource"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path7"
    testPathName: "getDir1WhenThisPathIsNullAndSourceIsNotNullAndSourceInstanceOfFileAndFilesExistsPath"
    constructorSignature: "<init>(java.lang.Class<?>) : void"
    modelFingerprint: "F9D9B0D403128B9BC0BD01A178A8DD2C"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "2d9b3d30-4b7f-39ec-920a-f88e10dc92a7"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "update(digest, home.getSource());"
      lineNumber: 145
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: home - Method: getSource"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path8"
    testPathName: "getDir1WhenThisPathIsNullAndThisPathIsNullAndSourceIsNotNullAndSourceInstanceOfFileAndFilesExistsPath"
    constructorSignature: "<init>(java.lang.Class<?>) : void"
    modelFingerprint: "F8E642A428630CB84D84BC023BE6E05E"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "85aefb32-48f3-38a8-8d24-e91f20287615"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "update(digest, home.getSource());"
      lineNumber: 145
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: home - Method: getSource"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path9"
    testPathName: "getDir1WhenThisPathIsNullAndThisPathIsNullAndSourceIsNotNullAndSourceInstanceOfFileAndFilesExistsPath2"
    constructorSignature: "<init>(java.lang.Class<?>) : void"
    modelFingerprint: "F2AF8D388C5F8D6A5FC75AD4452FE95C"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "32ffed59-54a8-3f3e-99be-f09bbba25bb0"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "update(digest, home.getSource());"
      lineNumber: 145
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: home - Method: getSource"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path10"
    testPathName: "getDir1WhenThisPathIsNullAndThisPathIsNullAndSourceIsNotNullAndSourceInstanceOfFileAndFilesExistsPath3"
    constructorSignature: "<init>(java.lang.Class<?>) : void"
    modelFingerprint: "F1CABC3303A796CC97687C16AA919AF3"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "45175168-642c-3ae8-a0d3-57c9f8d8ffc1"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "update(digest, home.getSource());"
      lineNumber: 145
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: home - Method: getSource"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path11"
    testPathName: "getDir1WhenThisPathIsNullAndThisPathIsNullAndSourceIsNotNullAndSourceInstanceOfFileAndFilesExistsPath4"
    constructorSignature: "<init>(java.lang.Class<?>) : void"
    modelFingerprint: "D5B18A112155BF773DDE49D19CE20B43"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "31c3a0f7-4fc7-38c8-bb5c-fb8407838c5e"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "update(digest, home.getSource());"
      lineNumber: 145
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: home - Method: getSource"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path14"
    testPathName: "getDir1WhenCaughtExceptionThrowsIllegalStateException"
    constructorSignature: "<init>(java.lang.Class<?>) : void"
    modelFingerprint: "1D0BAC70607977C713F7629504D98FD8"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 22
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "ACD6035A8DABC92415FD1A3CF98AA566"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "subDir"
      modelFingerprint: "DB42E3B744854A70FCE05BB587F5614D"
      index: 2
      valueUuid: "getDir_string1"
    - type: "STATIC"
      name: "MessageDigest"
      modelFingerprint: "DB197A57D07133951000EFC80C9BDF97"
      index: 3
      idsTryCatchBlockSurrounding:
      - 220002
      valueUuid: "uuid138"
      methodExercised:
        target: "java.security.MessageDigest"
        name: "getInstance"
        parameters:
        - name: "md"
          valueUuid: "uuid137"
        throwsExceptions:
        - "java.security.NoSuchAlgorithmException"
        signature: "getInstance(String): MessageDigest throws java.security.NoSuchAlgorithmException"
        returnValueUuid: "generateHash_messageDigest1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "home"
      modelFingerprint: "D794BEBDC7BEFC80ED1D0F48699F0CED"
      index: 4
      idsTryCatchBlockSurrounding:
      - 220002
      valueUuid: "generateHash_applicationHome1"
      methodExercised:
        target: "home"
        name: "getSource"
        parameters: []
        signature: "getSource(): File"
        returnValueUuid: "generateHash_file1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "home"
      modelFingerprint: "16FA8237E0A2E71C0DCFF1D061CD97CA"
      index: 5
      idsTryCatchBlockSurrounding:
      - 220002
      valueUuid: "generateHash_applicationHome1"
      methodExercised:
        target: "home"
        name: "getDir"
        parameters: []
        signature: "getDir(): File"
        returnValueUuid: "generateHash_file2"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E251EF5F123C56730C65681F6E04FFF2"
      index: 6
      valueUuid: "generateHash_illegalStateException1"
    uuid: "144b838a-c048-3694-b392-f38e695b5df2"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "update(digest, home.getSource());"
      lineNumber: 145
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: home - Method: getSource"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.system.ApplicationTemp"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "<init>_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.system.ApplicationTemp"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "subDir1"
      valueType: "java.lang.String"
      uuid: "getDir_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.MessageDigest"
      uuid: "uuid138"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.security.MessageDigest"
        method: "getInstance"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "SHA-1"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.security.MessageDigest"
      uuid: "generateHash_messageDigest1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "SHA-1"
      valueType: "java.lang.String"
      uuid: "uuid137"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.system.ApplicationHome"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "<init>_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.system.ApplicationHome"
      uuid: "generateHash_applicationHome1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.io.File"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.system.ApplicationHome"
            parameters:
            - name: "sourceClass"
              value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "java.lang.Object"
                valueType: "java.lang.Class"
                genericValueType: "?"
                uuid: "<init>_class1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: true
          valueType: "org.springframework.boot.system.ApplicationHome"
          uuid: "generateHash_applicationHome1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "getSource"
      valueType: "java.io.File"
      uuid: "generateHash_file1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.system.ApplicationHome"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "<init>_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.system.ApplicationHome"
      uuid: "generateHash_applicationHome1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.io.File"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.system.ApplicationHome"
            parameters:
            - name: "sourceClass"
              value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "java.lang.Object"
                valueType: "java.lang.Class"
                genericValueType: "?"
                uuid: "<init>_class1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: true
          valueType: "org.springframework.boot.system.ApplicationHome"
          uuid: "generateHash_applicationHome1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "getDir"
      valueType: "java.io.File"
      uuid: "generateHash_file2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Exception"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Exception"
            uuid: "generateHash_exception1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.lang.IllegalStateException"
      uuid: "generateHash_illegalStateException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "getDir1WhenFileSystemSupportedFileAttributeViewsNotContainsPosix"
    constructorSignature: "<init>(java.lang.Class<?>) : void"
    modelFingerprint: "1F48B1A5A60849FF2E9039FCE82E8826"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "ACD6035A8DABC92415FD1A3CF98AA566"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "subDir"
      modelFingerprint: "DB42E3B744854A70FCE05BB587F5614D"
      index: 2
      valueUuid: "getDir_string1"
    - type: "LOCAL_VARIABLE"
      name: "home"
      modelFingerprint: "D794BEBDC7BEFC80ED1D0F48699F0CED"
      index: 3
      idsTryCatchBlockSurrounding:
      - 220002
      valueUuid: "generateHash_applicationHome1"
      methodExercised:
        target: "home"
        name: "getSource"
        parameters: []
        signature: "getSource(): File"
        returnValueUuid: "generateHash_file1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "home"
      modelFingerprint: "16FA8237E0A2E71C0DCFF1D061CD97CA"
      index: 4
      idsTryCatchBlockSurrounding:
      - 220002
      valueUuid: "generateHash_applicationHome1"
      methodExercised:
        target: "home"
        name: "getDir"
        parameters: []
        signature: "getDir(): File"
        returnValueUuid: "generateHash_file2"
        access: 1
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "2CC56851CE362AB7644F7341D7D94B55"
      index: 5
      valueUuid: "uuid139"
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "hasLength"
        parameters:
        - name: "str"
          valueUuid: "getTempDirectory_string1"
        signature: "hasLength(String): boolean"
        returnValueUuid: "getTempDirectory_boolean1"
        access: 9
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "DBA2025126A2D06718E155DCF3BCD137"
      index: 6
      valueUuid: "uuid141"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "state"
        parameters:
        - name: "expression"
          valueUuid: "getTempDirectory_boolean1"
        - name: "message"
          valueUuid: "uuid140"
        signature: "state(boolean,String): void"
        returnValueUuid: "getTempDirectory_void1"
        access: 9
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "D83F923687A63AA3C57684FC28F23D1B"
      index: 7
      valueUuid: "uuid143"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "state"
        parameters:
        - name: "expression"
          valueUuid: "getTempDirectory_boolean2"
        - name: "messageSupplier"
          valueUuid: "uuid142"
        signature: "state(boolean,Supplier): void"
        returnValueUuid: "getTempDirectory_void2"
        access: 9
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "D83F923687A63AA3C57684FC28F23D1B"
      index: 8
      valueUuid: "uuid145"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "state"
        parameters:
        - name: "expression"
          valueUuid: "getTempDirectory_boolean3"
        - name: "messageSupplier"
          valueUuid: "uuid144"
        signature: "state(boolean,Supplier): void"
        returnValueUuid: "getTempDirectory_void3"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E3ABEFC85425FFAFB7740F34EB2FBAFD"
      index: 9
      valueUuid: "getDir_file1"
    uuid: "5adca7e0-07e6-34d2-bbf0-944f11373da7"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "update(digest, home.getSource());"
      lineNumber: 145
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: home - Method: getSource"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.system.ApplicationTemp"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "<init>_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.system.ApplicationTemp"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "getDir_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.system.ApplicationHome"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "<init>_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.system.ApplicationHome"
      uuid: "generateHash_applicationHome1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.io.File"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.system.ApplicationHome"
            parameters:
            - name: "sourceClass"
              value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "java.lang.Object"
                valueType: "java.lang.Class"
                genericValueType: "?"
                uuid: "<init>_class1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: true
          valueType: "org.springframework.boot.system.ApplicationHome"
          uuid: "generateHash_applicationHome1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "getSource"
      valueType: "java.io.File"
      uuid: "generateHash_file1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.system.ApplicationHome"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "<init>_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.system.ApplicationHome"
      uuid: "generateHash_applicationHome1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.io.File"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.system.ApplicationHome"
            parameters:
            - name: "sourceClass"
              value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "java.lang.Object"
                valueType: "java.lang.Class"
                genericValueType: "?"
                uuid: "<init>_class1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: true
          valueType: "org.springframework.boot.system.ApplicationHome"
          uuid: "generateHash_applicationHome1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "getDir"
      valueType: "java.io.File"
      uuid: "generateHash_file2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "uuid139"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getTempDirectory_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "G"
      valueType: "java.lang.String"
      uuid: "getTempDirectory_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid141"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "getTempDirectory_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getTempDirectory_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "No 'java.io.tmpdir' property set"
      valueType: "java.lang.String"
      uuid: "uuid140"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid143"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "getTempDirectory_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getTempDirectory_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid142"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid145"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "getTempDirectory_void3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getTempDirectory_boolean3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid144"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.io.File"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "java.nio.file.Path"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<method_return_from_value>
                target: "java.nio.file.Path"
                localVariableValue:
                  sapientType: "OBJECT"
                  content: !<static_method_return>
                    target: "java.nio.file.Paths"
                    method: "get"
                    methodParameters:
                    - value:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: "G"
                        valueType: "java.lang.String"
                        uuid: "getTempDirectory_string1"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                    - value:
                        sapientType: "ARRAY"
                        content: !<array>
                          values: {}
                        valueType: "java.lang.String[]"
                        uuid: "getTempDirectory_string[]1"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                  valueType: "java.nio.file.Path"
                  uuid: "getTempDirectory_path1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                methodParameters:
                - value:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "48A0E79EBFEAD234B3831630A8F4CBE2E1C7B482"
                    valueType: "java.lang.String"
                    uuid: "getPath_string1"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                methodName: "resolve"
              valueType: "java.nio.file.Path"
              uuid: "getPath_path1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
            methodParameters:
            - value:
                sapientType: "BASIC"
                content: !<regular>
                  value: ""
                valueType: "java.lang.String"
                uuid: "getDir_string1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            methodName: "resolve"
          valueType: "java.nio.file.Path"
          uuid: "getDir_path1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "toFile"
      valueType: "java.io.File"
      uuid: "getDir_file1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path3"
    testPathName: "getDir1WhenFilesNotExistsPathAndFileSystemSupportedFileAttributeViewsNotContainsPosix"
    constructorSignature: "<init>(java.lang.Class<?>) : void"
    modelFingerprint: "FED5F2B373DECCCF785B35453B010DD6"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "47197798-a843-3982-a309-db8d8953470c"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "update(digest, home.getSource());"
      lineNumber: 145
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: home - Method: getSource"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path1"
    testPathName: "getDir1WhenSourceInstanceOfFileAndFilesNotExistsPathAndFileSystemSupportedFileAttributeViewsNotContainsPosix"
    constructorSignature: "<init>(java.lang.Class<?>) : void"
    modelFingerprint: "D45507F75FA8DD2ACB88FD57E5F11A53"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "ACD6035A8DABC92415FD1A3CF98AA566"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "subDir"
      modelFingerprint: "B8AA7632D11A52ABFE399FD125369F53"
      index: 2
      valueUuid: "getDir_string1"
    - type: "LOCAL_VARIABLE"
      name: "home"
      modelFingerprint: "D794BEBDC7BEFC80ED1D0F48699F0CED"
      index: 3
      idsTryCatchBlockSurrounding:
      - 220002
      valueUuid: "generateHash_applicationHome1"
      methodExercised:
        target: "home"
        name: "getSource"
        parameters: []
        signature: "getSource(): File"
        returnValueUuid: "generateHash_file1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "home"
      modelFingerprint: "16FA8237E0A2E71C0DCFF1D061CD97CA"
      index: 4
      idsTryCatchBlockSurrounding:
      - 220002
      valueUuid: "generateHash_applicationHome1"
      methodExercised:
        target: "home"
        name: "getDir"
        parameters: []
        signature: "getDir(): File"
        returnValueUuid: "generateHash_file2"
        access: 1
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "2CC56851CE362AB7644F7341D7D94B55"
      index: 5
      valueUuid: "uuid153"
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "hasLength"
        parameters:
        - name: "str"
          valueUuid: "getTempDirectory_string1"
        signature: "hasLength(String): boolean"
        returnValueUuid: "getTempDirectory_boolean1"
        access: 9
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "DBA2025126A2D06718E155DCF3BCD137"
      index: 6
      valueUuid: "uuid155"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "state"
        parameters:
        - name: "expression"
          valueUuid: "getTempDirectory_boolean1"
        - name: "message"
          valueUuid: "uuid154"
        signature: "state(boolean,String): void"
        returnValueUuid: "getTempDirectory_void1"
        access: 9
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "D83F923687A63AA3C57684FC28F23D1B"
      index: 7
      valueUuid: "uuid157"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "state"
        parameters:
        - name: "expression"
          valueUuid: "getTempDirectory_boolean2"
        - name: "messageSupplier"
          valueUuid: "uuid156"
        signature: "state(boolean,Supplier): void"
        returnValueUuid: "getTempDirectory_void2"
        access: 9
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "D83F923687A63AA3C57684FC28F23D1B"
      index: 8
      valueUuid: "uuid159"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "state"
        parameters:
        - name: "expression"
          valueUuid: "getTempDirectory_boolean3"
        - name: "messageSupplier"
          valueUuid: "uuid158"
        signature: "state(boolean,Supplier): void"
        returnValueUuid: "getTempDirectory_void3"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "962498D81DF9BDB20F802FFDBA149072"
      index: 9
      valueUuid: "getDir_file1"
    uuid: "d4382e51-e37d-3868-b084-f5702797f523"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "update(digest, home.getSource());"
      lineNumber: 145
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: home - Method: getSource"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.system.ApplicationTemp"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "<init>_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.system.ApplicationTemp"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "I"
      valueType: "java.lang.String"
      uuid: "getDir_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.system.ApplicationHome"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "<init>_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.system.ApplicationHome"
      uuid: "generateHash_applicationHome1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.io.File"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.system.ApplicationHome"
            parameters:
            - name: "sourceClass"
              value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "java.lang.Object"
                valueType: "java.lang.Class"
                genericValueType: "?"
                uuid: "<init>_class1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: true
          valueType: "org.springframework.boot.system.ApplicationHome"
          uuid: "generateHash_applicationHome1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "getSource"
      valueType: "java.io.File"
      uuid: "generateHash_file1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.system.ApplicationHome"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "<init>_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.system.ApplicationHome"
      uuid: "generateHash_applicationHome1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.io.File"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.system.ApplicationHome"
            parameters:
            - name: "sourceClass"
              value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "java.lang.Object"
                valueType: "java.lang.Class"
                genericValueType: "?"
                uuid: "<init>_class1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: true
          valueType: "org.springframework.boot.system.ApplicationHome"
          uuid: "generateHash_applicationHome1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "getDir"
      valueType: "java.io.File"
      uuid: "generateHash_file2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "uuid153"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getTempDirectory_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "G"
      valueType: "java.lang.String"
      uuid: "getTempDirectory_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid155"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "getTempDirectory_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getTempDirectory_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "No 'java.io.tmpdir' property set"
      valueType: "java.lang.String"
      uuid: "uuid154"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid157"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "getTempDirectory_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getTempDirectory_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid156"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid159"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "getTempDirectory_void3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getTempDirectory_boolean3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid158"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.io.File"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "java.nio.file.Path"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<method_return_from_value>
                target: "java.nio.file.Path"
                localVariableValue:
                  sapientType: "OBJECT"
                  content: !<static_method_return>
                    target: "java.nio.file.Paths"
                    method: "get"
                    methodParameters:
                    - value:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: "G"
                        valueType: "java.lang.String"
                        uuid: "getTempDirectory_string1"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                    - value:
                        sapientType: "ARRAY"
                        content: !<array>
                          values: {}
                        valueType: "java.lang.String[]"
                        uuid: "getTempDirectory_string[]1"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                  valueType: "java.nio.file.Path"
                  uuid: "getTempDirectory_path1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                methodParameters:
                - value:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "48A0E79EBFEAD234B3831630A8F4CBE2E1C7B482"
                    valueType: "java.lang.String"
                    uuid: "getPath_string1"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                methodName: "resolve"
              valueType: "java.nio.file.Path"
              uuid: "getPath_path1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
            methodParameters:
            - value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "I"
                valueType: "java.lang.String"
                uuid: "getDir_string1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            methodName: "resolve"
          valueType: "java.nio.file.Path"
          uuid: "getDir_path1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "toFile"
      valueType: "java.io.File"
      uuid: "getDir_file1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path4"
    testPathName: "getDir1WhenFileSystemSupportedFileAttributeViewsContainsPosix"
    constructorSignature: "<init>(java.lang.Class<?>) : void"
    modelFingerprint: "7000498C8B62AC6A09193167BD52D739"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "ACD6035A8DABC92415FD1A3CF98AA566"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "subDir"
      modelFingerprint: "DB42E3B744854A70FCE05BB587F5614D"
      index: 2
      valueUuid: "getDir_string1"
    - type: "LOCAL_VARIABLE"
      name: "home"
      modelFingerprint: "D794BEBDC7BEFC80ED1D0F48699F0CED"
      index: 3
      idsTryCatchBlockSurrounding:
      - 220002
      valueUuid: "generateHash_applicationHome1"
      methodExercised:
        target: "home"
        name: "getSource"
        parameters: []
        signature: "getSource(): File"
        returnValueUuid: "generateHash_file1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "home"
      modelFingerprint: "16FA8237E0A2E71C0DCFF1D061CD97CA"
      index: 4
      idsTryCatchBlockSurrounding:
      - 220002
      valueUuid: "generateHash_applicationHome1"
      methodExercised:
        target: "home"
        name: "getDir"
        parameters: []
        signature: "getDir(): File"
        returnValueUuid: "generateHash_file2"
        access: 1
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "6057B6F1D35B683A5845F4E191BD79C8"
      index: 5
      valueUuid: "uuid160"
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "hasLength"
        parameters:
        - name: "str"
          valueUuid: "getTempDirectory_string1"
        signature: "hasLength(String): boolean"
        returnValueUuid: "getTempDirectory_boolean1"
        access: 9
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "DBA2025126A2D06718E155DCF3BCD137"
      index: 6
      valueUuid: "uuid162"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "state"
        parameters:
        - name: "expression"
          valueUuid: "getTempDirectory_boolean1"
        - name: "message"
          valueUuid: "uuid161"
        signature: "state(boolean,String): void"
        returnValueUuid: "getTempDirectory_void1"
        access: 9
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "D83F923687A63AA3C57684FC28F23D1B"
      index: 7
      valueUuid: "uuid164"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "state"
        parameters:
        - name: "expression"
          valueUuid: "getTempDirectory_boolean2"
        - name: "messageSupplier"
          valueUuid: "uuid163"
        signature: "state(boolean,Supplier): void"
        returnValueUuid: "getTempDirectory_void2"
        access: 9
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "D83F923687A63AA3C57684FC28F23D1B"
      index: 8
      valueUuid: "uuid166"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "state"
        parameters:
        - name: "expression"
          valueUuid: "getTempDirectory_boolean3"
        - name: "messageSupplier"
          valueUuid: "uuid165"
        signature: "state(boolean,Supplier): void"
        returnValueUuid: "getTempDirectory_void3"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "ECD12D90A319B78B3411CE2CAA066CDD"
      index: 9
      valueUuid: "getDir_file1"
    uuid: "c6bb1315-9c72-3012-9a23-b463a8cf9fbc"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "update(digest, home.getSource());"
      lineNumber: 145
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: home - Method: getSource"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.system.ApplicationTemp"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "<init>_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.system.ApplicationTemp"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "getDir_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.system.ApplicationHome"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "<init>_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.system.ApplicationHome"
      uuid: "generateHash_applicationHome1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.io.File"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.system.ApplicationHome"
            parameters:
            - name: "sourceClass"
              value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "java.lang.Object"
                valueType: "java.lang.Class"
                genericValueType: "?"
                uuid: "<init>_class1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: true
          valueType: "org.springframework.boot.system.ApplicationHome"
          uuid: "generateHash_applicationHome1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "getSource"
      valueType: "java.io.File"
      uuid: "generateHash_file1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.system.ApplicationHome"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "<init>_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.system.ApplicationHome"
      uuid: "generateHash_applicationHome1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.io.File"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.system.ApplicationHome"
            parameters:
            - name: "sourceClass"
              value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "java.lang.Object"
                valueType: "java.lang.Class"
                genericValueType: "?"
                uuid: "<init>_class1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: true
          valueType: "org.springframework.boot.system.ApplicationHome"
          uuid: "generateHash_applicationHome1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "getDir"
      valueType: "java.io.File"
      uuid: "generateHash_file2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "uuid160"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getTempDirectory_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "I"
      valueType: "java.lang.String"
      uuid: "getTempDirectory_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid162"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "getTempDirectory_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getTempDirectory_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "No 'java.io.tmpdir' property set"
      valueType: "java.lang.String"
      uuid: "uuid161"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid164"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "getTempDirectory_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getTempDirectory_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid163"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid166"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "getTempDirectory_void3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getTempDirectory_boolean3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid165"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.io.File"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "java.nio.file.Path"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<method_return_from_value>
                target: "java.nio.file.Path"
                localVariableValue:
                  sapientType: "OBJECT"
                  content: !<static_method_return>
                    target: "java.nio.file.Paths"
                    method: "get"
                    methodParameters:
                    - value:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: "I"
                        valueType: "java.lang.String"
                        uuid: "getTempDirectory_string1"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                    - value:
                        sapientType: "ARRAY"
                        content: !<array>
                          values: {}
                        valueType: "java.lang.String[]"
                        uuid: "getTempDirectory_string[]1"
                        fixed: false
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                  valueType: "java.nio.file.Path"
                  uuid: "getTempDirectory_path1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                methodParameters:
                - value:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "BC83D506D801D15C24FA977D5EB9E3F48202F98E"
                    valueType: "java.lang.String"
                    uuid: "getPath_string1"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                methodName: "resolve"
              valueType: "java.nio.file.Path"
              uuid: "getPath_path1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
            methodParameters:
            - value:
                sapientType: "BASIC"
                content: !<regular>
                  value: ""
                valueType: "java.lang.String"
                uuid: "getDir_string1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            methodName: "resolve"
          valueType: "java.nio.file.Path"
          uuid: "getDir_path1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "toFile"
      valueType: "java.io.File"
      uuid: "getDir_file1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path15"
    testPathName: "getDir1WhenCaughtIOExceptionThrowsIllegalStateException"
    constructorSignature: "<init>(java.lang.Class<?>) : void"
    modelFingerprint: "D8C9764B3E59594175AEA538586312E9"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 33
      id: 1
      catchExceptions:
      - "java.io.IOException"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "ACD6035A8DABC92415FD1A3CF98AA566"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "subDir"
      modelFingerprint: "DB42E3B744854A70FCE05BB587F5614D"
      index: 2
      valueUuid: "getDir_string1"
    - type: "LOCAL_VARIABLE"
      name: "home"
      modelFingerprint: "9B3DFFC29AD4416E334353B200710525"
      index: 3
      idsTryCatchBlockSurrounding:
      - 220002
      valueUuid: "generateHash_applicationHome1"
      methodExercised:
        target: "home"
        name: "getSource"
        parameters: []
        signature: "getSource(): File"
        returnValueUuid: "generateHash_file1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "home"
      modelFingerprint: "BBFF41A3D34294EEEB8394DEB3D82E3F"
      index: 4
      idsTryCatchBlockSurrounding:
      - 220002
      valueUuid: "generateHash_applicationHome1"
      methodExercised:
        target: "home"
        name: "getDir"
        parameters: []
        signature: "getDir(): File"
        returnValueUuid: "generateHash_file2"
        access: 1
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "0ADC91B76C5E1D2A8701BB911882A91E"
      index: 5
      valueUuid: "uuid167"
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "hasLength"
        parameters:
        - name: "str"
          valueUuid: "getTempDirectory_string1"
        signature: "hasLength(String): boolean"
        returnValueUuid: "getTempDirectory_boolean1"
        access: 9
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "DBA2025126A2D06718E155DCF3BCD137"
      index: 6
      valueUuid: "uuid169"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "state"
        parameters:
        - name: "expression"
          valueUuid: "getTempDirectory_boolean1"
        - name: "message"
          valueUuid: "uuid168"
        signature: "state(boolean,String): void"
        returnValueUuid: "getTempDirectory_void1"
        access: 9
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "D83F923687A63AA3C57684FC28F23D1B"
      index: 7
      valueUuid: "uuid171"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "state"
        parameters:
        - name: "expression"
          valueUuid: "getTempDirectory_boolean2"
        - name: "messageSupplier"
          valueUuid: "uuid170"
        signature: "state(boolean,Supplier): void"
        returnValueUuid: "getTempDirectory_void2"
        access: 9
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "D83F923687A63AA3C57684FC28F23D1B"
      index: 8
      valueUuid: "uuid173"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "state"
        parameters:
        - name: "expression"
          valueUuid: "getTempDirectory_boolean3"
        - name: "messageSupplier"
          valueUuid: "uuid172"
        signature: "state(boolean,Supplier): void"
        returnValueUuid: "getTempDirectory_void3"
        access: 9
    - type: "STATIC"
      name: "Files"
      modelFingerprint: "01EF9928CEA89885F3C17A1F8C776590"
      index: 9
      idsTryCatchBlockSurrounding:
      - 330001
      valueUuid: "uuid174"
      methodExercised:
        target: "java.nio.file.Files"
        name: "createDirectory"
        parameters:
        - name: "dir"
          valueUuid: "getPath_path1"
        - name: "attrs"
          valueUuid: "<clinit>_fileAttribute[]1"
        throwsExceptions:
        - "java.io.IOException"
        signature: "createDirectory(Path,FileAttribute[]): Path throws java.io.IOException"
        returnValueUuid: "createDirectory_path1"
        access: 137
    - type: "RESULT"
      name: "result"
      modelFingerprint: "205DAB70DC3D5A50A39304BFA1B9F0AB"
      index: 10
      valueUuid: "createDirectory_illegalStateException1"
    uuid: "56bfa480-c409-32db-96d8-5e8e3d83f1c1"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "update(digest, home.getSource());"
      lineNumber: 145
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: home - Method: getSource"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.system.ApplicationTemp"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "<init>_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.system.ApplicationTemp"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "subDir1"
      valueType: "java.lang.String"
      uuid: "getDir_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.system.ApplicationHome"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "<init>_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.system.ApplicationHome"
      uuid: "generateHash_applicationHome1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.io.File"
      uuid: "generateHash_file1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.system.ApplicationHome"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "<init>_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.system.ApplicationHome"
      uuid: "generateHash_applicationHome1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.io.File"
      uuid: "generateHash_file2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "uuid167"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getTempDirectory_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "getTempDirectory_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid169"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "getTempDirectory_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getTempDirectory_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "No 'java.io.tmpdir' property set"
      valueType: "java.lang.String"
      uuid: "uuid168"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid171"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "getTempDirectory_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getTempDirectory_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid170"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid173"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "getTempDirectory_void3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getTempDirectory_boolean3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid172"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.nio.file.Files"
      uuid: "uuid174"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.nio.file.Path"
      uuid: "createDirectory_path1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.nio.file.Path"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "java.nio.file.Paths"
            method: "get"
            methodParameters:
            - value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "A"
                valueType: "java.lang.String"
                uuid: "getTempDirectory_string1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - value:
                sapientType: "ARRAY"
                content: !<array>
                  values: {}
                valueType: "java.lang.String[]"
                uuid: "getTempDirectory_string[]1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.nio.file.Path"
          uuid: "getTempDirectory_path1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "DA39A3EE5E6B4B0D3255BFEF95601890AFD80709"
            valueType: "java.lang.String"
            uuid: "getPath_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        methodName: "resolve"
      valueType: "java.nio.file.Path"
      uuid: "getPath_path1"
      fixed: false
      nameForMock: "getPath_path1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.nio.file.attribute.FileAttribute[]"
      uuid: "<clinit>_fileAttribute[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Unable to create application temp directory getPath_path1"
            valueType: "java.lang.String"
            uuid: "createDirectory_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.IOException"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.io.IOException"
            uuid: "createDirectory_iOException1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.lang.IllegalStateException"
      uuid: "createDirectory_illegalStateException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path13"
    testPathName: "getDir1WhenFileSystemSupportedFileAttributeViewsNotContainsPosixAndCaughtIOExceptionThrowsIllegalStateException"
    constructorSignature: "<init>(java.lang.Class<?>) : void"
    modelFingerprint: "3D9A99818B8D31DF1611E1EA267EEFEA"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 7
      id: 1
      catchExceptions:
      - "java.io.IOException"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "ACD6035A8DABC92415FD1A3CF98AA566"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "subDir"
      modelFingerprint: "F450129161B5A91BC544DFAB5132D1F5"
      index: 2
      valueUuid: "getDir_string1"
    - type: "LOCAL_VARIABLE"
      name: "home"
      modelFingerprint: "9B3DFFC29AD4416E334353B200710525"
      index: 3
      idsTryCatchBlockSurrounding:
      - 220002
      valueUuid: "generateHash_applicationHome1"
      methodExercised:
        target: "home"
        name: "getSource"
        parameters: []
        signature: "getSource(): File"
        returnValueUuid: "generateHash_file1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "home"
      modelFingerprint: "BBFF41A3D34294EEEB8394DEB3D82E3F"
      index: 4
      idsTryCatchBlockSurrounding:
      - 220002
      valueUuid: "generateHash_applicationHome1"
      methodExercised:
        target: "home"
        name: "getDir"
        parameters: []
        signature: "getDir(): File"
        returnValueUuid: "generateHash_file2"
        access: 1
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "0ADC91B76C5E1D2A8701BB911882A91E"
      index: 5
      valueUuid: "uuid175"
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "hasLength"
        parameters:
        - name: "str"
          valueUuid: "getTempDirectory_string1"
        signature: "hasLength(String): boolean"
        returnValueUuid: "getTempDirectory_boolean1"
        access: 9
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "DBA2025126A2D06718E155DCF3BCD137"
      index: 6
      valueUuid: "uuid177"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "state"
        parameters:
        - name: "expression"
          valueUuid: "getTempDirectory_boolean1"
        - name: "message"
          valueUuid: "uuid176"
        signature: "state(boolean,String): void"
        returnValueUuid: "getTempDirectory_void1"
        access: 9
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "D83F923687A63AA3C57684FC28F23D1B"
      index: 7
      valueUuid: "uuid179"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "state"
        parameters:
        - name: "expression"
          valueUuid: "getTempDirectory_boolean2"
        - name: "messageSupplier"
          valueUuid: "uuid178"
        signature: "state(boolean,Supplier): void"
        returnValueUuid: "getTempDirectory_void2"
        access: 9
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "D83F923687A63AA3C57684FC28F23D1B"
      index: 8
      valueUuid: "uuid181"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "state"
        parameters:
        - name: "expression"
          valueUuid: "getTempDirectory_boolean3"
        - name: "messageSupplier"
          valueUuid: "uuid180"
        signature: "state(boolean,Supplier): void"
        returnValueUuid: "getTempDirectory_void3"
        access: 9
    - type: "STATIC"
      name: "Files"
      modelFingerprint: "C90C483704D63B55A5CEDD579939024F"
      index: 9
      idsTryCatchBlockSurrounding:
      - 70001
      valueUuid: "uuid182"
      methodExercised:
        target: "java.nio.file.Files"
        name: "createDirectory"
        parameters:
        - name: "dir"
          valueUuid: "getDir_path1"
        - name: "attrs"
          valueUuid: "<clinit>_fileAttribute[]1"
        throwsExceptions:
        - "java.io.IOException"
        signature: "createDirectory(Path,FileAttribute[]): Path throws java.io.IOException"
        returnValueUuid: "createDirectory_path1"
        access: 137
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A6446C87FDC6521347CA1A20D03C8107"
      index: 10
      valueUuid: "createDirectory_illegalStateException1"
    uuid: "c9123d5e-c2b4-3397-9d12-afdcce97011e"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "update(digest, home.getSource());"
      lineNumber: 145
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: home - Method: getSource"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.system.ApplicationTemp"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "<init>_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.system.ApplicationTemp"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "getDir_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.system.ApplicationHome"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "<init>_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.system.ApplicationHome"
      uuid: "generateHash_applicationHome1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.io.File"
      uuid: "generateHash_file1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.system.ApplicationHome"
        parameters:
        - name: "sourceClass"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "<init>_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.system.ApplicationHome"
      uuid: "generateHash_applicationHome1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.io.File"
      uuid: "generateHash_file2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "uuid175"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getTempDirectory_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "getTempDirectory_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid177"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "getTempDirectory_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getTempDirectory_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "No 'java.io.tmpdir' property set"
      valueType: "java.lang.String"
      uuid: "uuid176"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid179"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "getTempDirectory_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getTempDirectory_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid178"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid181"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "getTempDirectory_void3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getTempDirectory_boolean3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid180"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.nio.file.Files"
      uuid: "uuid182"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.nio.file.Path"
      uuid: "createDirectory_path1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.nio.file.Path"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "java.nio.file.Path"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<static_method_return>
                target: "java.nio.file.Paths"
                method: "get"
                methodParameters:
                - value:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "A"
                    valueType: "java.lang.String"
                    uuid: "getTempDirectory_string1"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                - value:
                    sapientType: "ARRAY"
                    content: !<array>
                      values: {}
                    valueType: "java.lang.String[]"
                    uuid: "getTempDirectory_string[]1"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
              valueType: "java.nio.file.Path"
              uuid: "getTempDirectory_path1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
            methodParameters:
            - value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "DA39A3EE5E6B4B0D3255BFEF95601890AFD80709"
                valueType: "java.lang.String"
                uuid: "getPath_string1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            methodName: "resolve"
          valueType: "java.nio.file.Path"
          uuid: "getPath_path1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "B"
            valueType: "java.lang.String"
            uuid: "getDir_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        methodName: "resolve"
      valueType: "java.nio.file.Path"
      uuid: "getDir_path1"
      fixed: false
      nameForMock: "getDir_path1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.nio.file.attribute.FileAttribute[]"
      uuid: "<clinit>_fileAttribute[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Unable to create application temp directory getDir_path1"
            valueType: "java.lang.String"
            uuid: "createDirectory_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.IOException"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.io.IOException"
            uuid: "createDirectory_iOException1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.lang.IllegalStateException"
      uuid: "createDirectory_illegalStateException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
