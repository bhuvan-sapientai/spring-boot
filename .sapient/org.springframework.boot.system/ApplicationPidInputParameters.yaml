---
modelFingerprint: "6CA3BF253B48816B8B2A0D72BB7CBFE7"
methods:
- method:
    name: "equals"
    signature: "equals(java.lang.Object) : boolean"
    sourceCodeSignature: "boolean equals(Object obj)"
    instructionFingerprint: "BF5AC2B0EFA6426D170EA5CE4513A99D"
  paths:
  - pathId: "path1"
    testPathName: "equalsWhenObjEqualsThis"
    constructorSignature: "<init>(java.lang.String) : void"
    modelFingerprint: "7800D1AFF6770DDB5E124694B744ABE0"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "16caa39e-2c3e-346f-ae77-8d525c1ff8ee"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path4"
    testPathName: "equalsWhenObjNotInstanceOfApplicationPid"
    constructorSignature: "<init>(java.lang.String) : void"
    modelFingerprint: "D2616302E0F1DAF208DE5FD36BA5D0FF"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "e123193d-a509-39ce-bbea-22ec180e4e47"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path2"
    testPathName: "equalsWhenObjectUtilsNullSafeEqualsThisPidOtherPid"
    constructorSignature: "<init>(java.lang.String) : void"
    modelFingerprint: "9688FB3DDC83BE7D9ED7267CF2A4DC2F"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "ef4d3731-c4d8-338c-b768-053ef26a36e5"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path3"
    testPathName: "equalsWhenObjectUtilsNotNullSafeEqualsThisPidOtherPid"
    constructorSignature: "<init>(java.lang.String) : void"
    modelFingerprint: "8DE32E1929C297484E2F6C215C431686"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "cf15eef1-88e1-3f4c-9ba3-0075bf987d23"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
- method:
    name: "toString"
    signature: "toString() : java.lang.String"
    sourceCodeSignature: "String toString()"
    instructionFingerprint: "AB6951FF65438885BA910306D285F81D"
  paths:
  - pathId: "path1"
    testPathName: "toStringWhenThisPidIsNotNull"
    constructorSignature: "<init>(java.lang.String) : void"
    modelFingerprint: "5B7D6281B265E793727B61D34740E07F"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "0A0DFB75B13B0BF65BFD9835109F439C"
      index: 1
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 2
      valueUuid: "<init>_string1"
    uuid: "1f086ad3-0e19-3b9f-8b76-522fc39272f9"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.system.ApplicationPid"
        parameters:
        - name: "pid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pid1"
            valueType: "java.lang.String"
            uuid: "<init>_string1"
            fixed: false
            equalsMethodPresent: true
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.system.ApplicationPid"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "pid1"
      valueType: "java.lang.String"
      uuid: "<init>_string1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "toStringWhenThisPidIsNull"
    constructorSignature: "<init>(java.lang.String) : void"
    modelFingerprint: "9B0C79A9543DDCAEF1C24118EAF514AB"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "E2118961900D22FF08CC6289DA3EC8F9"
      index: 1
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "79FFD7F94CE95F89CD5C59C8FC6D5AE0"
      index: 2
      valueUuid: "uuid5"
    uuid: "f2e3978a-a93d-340b-bcb3-16b966527273"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.system.ApplicationPid"
        parameters:
        - name: "pid"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "<init>_string1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.system.ApplicationPid"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "???"
      valueType: "java.lang.String"
      uuid: "uuid5"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "write"
    signature: "write(java.io.File) : void"
    sourceCodeSignature: "void write(File file)"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Throwable"
    - idExternalInstruction: 0
      id: 3
      catchExceptions:
      - "java.lang.Throwable"
    - idExternalInstruction: 0
      id: 4
      catchExceptions:
      - "java.lang.UnsupportedOperationException"
    - idExternalInstruction: 0
      id: 5
      catchExceptions:
      - "java.lang.UnsupportedOperationException"
    instructionFingerprint: "2904AFF21C69F449548CF7082C32536D"
  paths:
  - pathId: "path4"
    testPathName: "writeWhenFileNotExists"
    constructorSignature: "<init>(java.lang.String) : void"
    modelFingerprint: "58A0DB7C7F52CFECB8B5E3EB8A185331"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "e05c5b72-1759-3be3-9e8f-265f4ba6049e"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "writer"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.io.File.getParentFile() : java.io.File"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path6"
    testPathName: "writeWhenParentIsNullAndFileNotExists"
    constructorSignature: "<init>(java.lang.String) : void"
    modelFingerprint: "DF6BB2346CE3325FDE8D733733E02532"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "0e6fc8f3-262e-3804-ba3d-c22f42339af3"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "writer"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.io.File.getParentFile() : java.io.File"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path3"
    testPathName: "writeWhenFileNotCanWriteThrowsFileNotFoundException"
    constructorSignature: "<init>(java.lang.String) : void"
    modelFingerprint: "545498BCBD2C0DE49B8F24E4C3DF4F55"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "2567cc17-efdb-392f-b633-067156cb6386"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.io.File.getParentFile() : java.io.File"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path7"
    testPathName: "writeWhenDefaultBranchThrowsThrowable"
    constructorSignature: "<init>(java.lang.String) : void"
    modelFingerprint: "FDD6192A6D6B7833AEB67AB5B0DB4072"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Throwable"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D4ACA749A456751F5B8142C1E4A4FC45"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "file"
      modelFingerprint: "03F891C65DE698FEC5B4CA633C72E8D1"
      index: 2
      valueUuid: "write_file1"
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "78F2C5F3D0A0A7C2F83C286AA596990A"
      index: 3
      valueUuid: "uuid3"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "state"
        parameters:
        - name: "expression"
          valueUuid: "uuid1"
        - name: "message"
          valueUuid: "uuid2"
        signature: "state(boolean,String): void"
        returnValueUuid: "write_void1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "writer"
      modelFingerprint: "ECD3386009F4BF77BA22DC7FD7458E87"
      index: 4
      idsTryCatchBlockSurrounding:
      - 2
      valueUuid: "write_fileWriter1"
      methodExercised:
        target: "writer"
        name: "append"
        parameters:
        - name: "csq"
          valueUuid: "<init>_string1"
        throwsExceptions:
        - "java.io.IOException"
        signature: "append(String): Writer throws java.io.IOException"
        returnValueUuid: "write_writer1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "writer"
      modelFingerprint: "64B182ADCFFD85201D3B50C732245937"
      index: 5
      idsTryCatchBlockSurrounding:
      - 3
      valueUuid: "write_fileWriter1"
      methodExercised:
        target: "writer"
        name: "close"
        parameters: []
        throwsExceptions:
        - "java.io.IOException"
        signature: "close(): void throws java.io.IOException"
        returnValueUuid: "write_void2"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7C66E340C0F5EAAC7D97CB9C0818A07E"
      index: 6
      valueUuid: "write_throwable1"
    uuid: "9a9c6dde-df33-3507-acd9-a8520553502b"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "writer"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "try (FileWriter writer = new FileWriter(file)) {"
      lineNumber: 93
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: writer - Method: close"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.system.ApplicationPid"
        parameters:
        - name: "pid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "1234"
            valueType: "java.lang.String"
            uuid: "<init>_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.system.ApplicationPid"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "write_file1-pathname"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.io.File"
      uuid: "write_file1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "write_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "No PID available"
      valueType: "java.lang.String"
      uuid: "uuid2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.FileWriter"
        parameters:
        - name: "file"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.File"
              parameters:
              - name: "pathname"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pathname1"
                  valueType: "java.lang.String"
                  uuid: "write_file1-pathname"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.io.File"
            uuid: "write_file1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        thrownExceptions:
        - "java.io.IOException"
        createdByTargetCode: true
      valueType: "java.io.FileWriter"
      uuid: "write_fileWriter1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.io.Writer"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.io.FileWriter"
            parameters:
            - name: "file"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "java.io.File"
                  parameters:
                  - name: "pathname"
                    value:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: "pathname1"
                      valueType: "java.lang.String"
                      uuid: "write_file1-pathname"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                  privateConstructor: false
                  createdByTargetCode: false
                valueType: "java.io.File"
                uuid: "write_file1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            thrownExceptions:
            - "java.io.IOException"
            createdByTargetCode: true
          valueType: "java.io.FileWriter"
          uuid: "write_fileWriter1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters:
        - name: "csq"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "1234"
            valueType: "java.lang.String"
            uuid: "<init>_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        methodName: "append"
      valueType: "java.io.Writer"
      uuid: "write_writer1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "1234"
      valueType: "java.lang.String"
      uuid: "<init>_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.FileWriter"
        parameters:
        - name: "file"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.File"
              parameters:
              - name: "pathname"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pathname1"
                  valueType: "java.lang.String"
                  uuid: "write_file1-pathname"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.io.File"
            uuid: "write_file1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        thrownExceptions:
        - "java.io.IOException"
        createdByTargetCode: true
      valueType: "java.io.FileWriter"
      uuid: "write_fileWriter1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "write_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Throwable"
      uuid: "write_throwable1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path5"
    testPathName: "writeWhenFileExistsAndFileNotCanWriteThrowsFileNotFoundException"
    constructorSignature: "<init>(java.lang.String) : void"
    modelFingerprint: "9D318AB44DDB428B759CB870D12DB98D"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "E2118961900D22FF08CC6289DA3EC8F9"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "file"
      modelFingerprint: "8A5A0F22DD9C1795C4DF7630ED5A969D"
      index: 2
      valueUuid: "write_file1"
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "DCE023329073B018A740AEE2FB1815CA"
      index: 3
      valueUuid: "uuid22"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "state"
        parameters:
        - name: "expression"
          valueUuid: "uuid20"
        - name: "message"
          valueUuid: "uuid21"
        signature: "state(boolean,String): void"
        returnValueUuid: "write_void1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2556ADC21479BF8CEB4205637E609110"
      index: 4
      valueUuid: "assertCanOverwrite_fileNotFoundException1"
    uuid: "0f3b2e0a-65a5-3e63-91dc-0e7873a33ca2"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.io.File.getParentFile() : java.io.File"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.system.ApplicationPid"
        parameters:
        - name: "pid"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "<init>_string1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.system.ApplicationPid"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "write_file1-pathname"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.io.File"
      uuid: "write_file1"
      fixed: false
      nameForMock: "write_file1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid22"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "write_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid20"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "No PID available"
      valueType: "java.lang.String"
      uuid: "uuid21"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.io.FileNotFoundException"
        parameters:
        - name: "s"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "write_file1 (permission denied)"
            valueType: "java.lang.String"
            uuid: "assertCanOverwrite_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.io.FileNotFoundException"
      uuid: "assertCanOverwrite_fileNotFoundException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path1"
    testPathName: "writeWhenCanWritePosixFileFile"
    constructorSignature: "<init>(java.lang.String) : void"
    modelFingerprint: "CCD569BA31D85F705FC84DF9093543D1"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "99D0C5CDEB818F53F9B9F081DDB58EAB"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "file"
      modelFingerprint: "8A5A0F22DD9C1795C4DF7630ED5A969D"
      index: 2
      valueUuid: "write_file1"
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "78F2C5F3D0A0A7C2F83C286AA596990A"
      index: 3
      valueUuid: "uuid25"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "state"
        parameters:
        - name: "expression"
          valueUuid: "uuid23"
        - name: "message"
          valueUuid: "uuid24"
        signature: "state(boolean,String): void"
        returnValueUuid: "write_void1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 4
      valueUuid: "uuid26"
    uuid: "91cd37bb-3a3f-3516-9748-a67546b79a59"
    deleted: false
    disabled: false
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "writer"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.io.File.getParentFile() : java.io.File"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.system.ApplicationPid"
        parameters:
        - name: "pid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pid1"
            valueType: "java.lang.String"
            uuid: "<init>_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.system.ApplicationPid"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "write_file1-pathname"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.io.File"
      uuid: "write_file1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid25"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "write_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid23"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "No PID available"
      valueType: "java.lang.String"
      uuid: "uuid24"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid26"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "writeWhenCanWritePosixFileNotFileThrowsFileNotFoundException"
    constructorSignature: "<init>(java.lang.String) : void"
    modelFingerprint: "4D217AF9C7AD8A60A94E15DDD40DAC3E"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "99D0C5CDEB818F53F9B9F081DDB58EAB"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "file"
      modelFingerprint: "8A5A0F22DD9C1795C4DF7630ED5A969D"
      index: 2
      valueUuid: "write_file1"
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "78F2C5F3D0A0A7C2F83C286AA596990A"
      index: 3
      valueUuid: "uuid29"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "state"
        parameters:
        - name: "expression"
          valueUuid: "uuid27"
        - name: "message"
          valueUuid: "uuid28"
        signature: "state(boolean,String): void"
        returnValueUuid: "write_void1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2556ADC21479BF8CEB4205637E609110"
      index: 4
      valueUuid: "assertCanOverwrite_fileNotFoundException1"
    uuid: "824ae2cd-1252-3b81-b1ff-948607246b85"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.io.File.getParentFile() : java.io.File"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.system.ApplicationPid"
        parameters:
        - name: "pid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pid1"
            valueType: "java.lang.String"
            uuid: "<init>_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.system.ApplicationPid"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "write_file1-pathname"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.io.File"
      uuid: "write_file1"
      fixed: false
      nameForMock: "write_file1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid29"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "write_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid27"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "No PID available"
      valueType: "java.lang.String"
      uuid: "uuid28"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.io.FileNotFoundException"
        parameters:
        - name: "s"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "write_file1 (permission denied)"
            valueType: "java.lang.String"
            uuid: "assertCanOverwrite_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.io.FileNotFoundException"
      uuid: "assertCanOverwrite_fileNotFoundException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path8"
    testPathName: "writeWhenCaughtUnsupportedOperationExceptionAndCanWritePosixFileFile"
    constructorSignature: "<init>(java.lang.String) : void"
    modelFingerprint: "3066268448B1911238C88177A5F4DE87"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 7
      id: 4
      catchExceptions:
      - "java.lang.UnsupportedOperationException"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "99D0C5CDEB818F53F9B9F081DDB58EAB"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "file"
      modelFingerprint: "8A5A0F22DD9C1795C4DF7630ED5A969D"
      index: 2
      valueUuid: "write_file1"
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "78F2C5F3D0A0A7C2F83C286AA596990A"
      index: 3
      valueUuid: "uuid32"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "state"
        parameters:
        - name: "expression"
          valueUuid: "uuid30"
        - name: "message"
          valueUuid: "uuid31"
        signature: "state(boolean,String): void"
        returnValueUuid: "write_void1"
        access: 9
    - type: "STATIC"
      name: "Files"
      modelFingerprint: "6DF86ECBEB7A5FF39733BD4ED064D727"
      index: 4
      idsTryCatchBlockSurrounding:
      - 70004
      valueUuid: "uuid33"
      methodExercised:
        target: "java.nio.file.Files"
        name: "getPosixFilePermissions"
        parameters:
        - name: "path"
          valueUuid: "canWritePosixFile_path1"
        - name: "options"
          valueUuid: "canWritePosixFile_linkOption[]1"
        throwsExceptions:
        - "java.io.IOException"
        signature: "getPosixFilePermissions(Path,LinkOption[]): Set throws java.io.IOException"
        returnValueUuid: "canWritePosixFile_set1"
        access: 137
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 5
      valueUuid: "uuid34"
    uuid: "42b10ac1-f960-3d39-b8e5-9de93c41e390"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "writer"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.io.File.getParentFile() : java.io.File"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.system.ApplicationPid"
        parameters:
        - name: "pid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pid1"
            valueType: "java.lang.String"
            uuid: "<init>_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.system.ApplicationPid"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "write_file1-pathname"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.io.File"
      uuid: "write_file1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid32"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "write_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid30"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "No PID available"
      valueType: "java.lang.String"
      uuid: "uuid31"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.nio.file.Files"
      uuid: "uuid33"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashSet"
        parameters: []
        values:
        - sapientType: "ENUM"
          content: !<regular>
            value: "OWNER_WRITE"
          valueType: "java.nio.file.attribute.PosixFilePermission"
          uuid: "Enum-java.nio.file.attribute.PosixFilePermission-OWNER_WRITE"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Set"
      genericValueType: "java.nio.file.attribute.PosixFilePermission"
      uuid: "canWritePosixFile_set1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.nio.file.Path"
      uuid: "canWritePosixFile_path1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.nio.file.LinkOption[]"
      uuid: "canWritePosixFile_linkOption[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid34"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
