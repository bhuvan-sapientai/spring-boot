---
modelFingerprint: "7906E267BBE5588DA8B62F0F16641919"
targetClass:
  fullClassName: "org.springframework.boot.context.properties.bind.handler.IgnoreTopLevelConverterNotFoundBindHandler"
methods:
- method:
    name: "onFailure"
    sourceCodeSignature: "Object onFailure(ConfigurationPropertyName name, Bindable<?>\
      \ target, BindContext context, Exception error)"
    returnType: "java.lang.Object"
    throwsExceptions:
    - "java.lang.Exception"
    parameters:
    - name: "name"
      type: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    - name: "target"
      type: "org.springframework.boot.context.properties.bind.Bindable"
    - name: "context"
      type: "org.springframework.boot.context.properties.bind.BindContext"
    - name: "error"
      type: "java.lang.Exception"
    instructionFingerprint: "3E76465C1FCEBAD2827FBD9C2C96B3A7"
  paths:
  - pathId: "path1"
    testPathName: "onFailureWhenErrorInstanceOfConverterNotFoundException"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindHandler)\
      \ : void"
    modelFingerprint: "8059187813B13B5CAD7881545F2474ED"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "FA558E0CD59D41001085A47EC3686204"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "3340664D785032C795BAABD64A310117"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "4751B65555804AA12E800A372C9B566E"
      valueUuid: "context"
    - type: "INPUT"
      name: "error"
      modelFingerprint: "F1FCEE1438139D4755839507A77FF1F1"
      valueUuid: "error"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "45DED21A09A1E07857992D008B5983B1"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:parent,message:uniqueUuid1):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "48706751B2DFAA36272D0E160F6DAA86"
      valueUuid: "context"
      methodExercised:
        expression: "getDepth():int1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B5832848421B6892B8D06BE61ADCD847"
      valueUuid: "object"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.handler.IgnoreTopLevelConverterNotFoundBindHandler"
        parameters:
        - name: "parent"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "parent"
      valueType: "org.springframework.boot.context.properties.bind.handler.IgnoreTopLevelConverterNotFoundBindHandler"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConverterNotFoundException"
      uuid: "error"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "parent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Parent must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int1"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object"
      fixed: true
    branches:
    - lineNumber: 53
      expression: "context.getDepth() == 0"
      range: "(53,7)-(53,29)"
      evaluatedAs: true
    - lineNumber: 53
      expression: "error instanceof ConverterNotFoundException"
      range: "(53,34)-(53,76)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "onFailureWhenErrorNotInstanceOfConverterNotFoundExceptionThrowsException"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindHandler)\
      \ : void"
    modelFingerprint: "B8F929F0AB9C9E4660D605407497E9E6"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "FA558E0CD59D41001085A47EC3686204"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "3340664D785032C795BAABD64A310117"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "4751B65555804AA12E800A372C9B566E"
      valueUuid: "context"
    - type: "INPUT"
      name: "error"
      modelFingerprint: "A47484B889156FDA7E7991FC8B6773DA"
      valueUuid: "error"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "45DED21A09A1E07857992D008B5983B1"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:parent,message:uniqueUuid2):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "48706751B2DFAA36272D0E160F6DAA86"
      valueUuid: "context"
      methodExercised:
        expression: "getDepth():int1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "DDE461B268FF26747D5F6F275309C586"
      valueUuid: "error"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.handler.IgnoreTopLevelConverterNotFoundBindHandler"
        parameters:
        - name: "parent"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "parent"
      valueType: "org.springframework.boot.context.properties.bind.handler.IgnoreTopLevelConverterNotFoundBindHandler"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.Exception"
        parameters: []
      valueType: "java.lang.Exception"
      uuid: "error"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "parent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Parent must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int1"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.Exception"
        parameters: []
      valueType: "java.lang.Exception"
      uuid: "error"
    branches:
    - lineNumber: 53
      expression: "context.getDepth() == 0"
      range: "(53,7)-(53,29)"
      evaluatedAs: true
    - lineNumber: 53
      expression: "error instanceof ConverterNotFoundException"
      range: "(53,34)-(53,76)"
      evaluatedAs: false
