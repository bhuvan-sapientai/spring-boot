---
modelFingerprint: "3ADFBEBFAF41F758EE509872A9D26261"
targetClass:
  fullClassName: "org.springframework.boot.context.properties.bind.handler.NoUnboundElementsBindHandler"
methods:
- method:
    name: "onStart"
    sourceCodeSignature: "<T> Bindable<T> onStart(ConfigurationPropertyName name,\
      \ Bindable<T> target, BindContext context)"
    returnType: "org.springframework.boot.context.properties.bind.Bindable"
    parameters:
    - name: "name"
      type: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    - name: "target"
      type: "org.springframework.boot.context.properties.bind.Bindable"
    - name: "context"
      type: "org.springframework.boot.context.properties.bind.BindContext"
    instructionFingerprint: "CDE491211A1437FB5EF36A5A985C76CE"
  paths:
  - pathId: "path1"
    testPathName: "onStartTest"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindHandler,java.util.function.Function<org.springframework.boot.context.properties.source.ConfigurationPropertySource,java.lang.Boolean>)\
      \ : void"
    modelFingerprint: "9503953EF1A6D9913D58456C69B67DEC"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "33F2D1B60F47F66783B7E70F9D2FA534"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F8F75E4AC569B29AA63CBB077B0C7D40"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "657A0D5935396A840B697C7476D3E736"
      valueUuid: "context"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "8E1CCC542A6F671530DE4CBFB6CC7B6B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:parent,message:uniqueUuid1):void"
        staticAccess: true
    - type: "FIELD"
      name: "parent"
      modelFingerprint: "29CF930ECBEED89F1AEDED3B7296D6F8"
      valueUuid: "parent"
      methodExercised:
        expression: "onStart(name:name,target:target1,context:context):bindable"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "11B5E8D4395677EA88062346247F39C3"
      valueUuid: "bindable"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.handler.NoUnboundElementsBindHandler"
        parameters:
        - name: "parent"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "parent"
        - name: "filter"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "filter"
      valueType: "org.springframework.boot.context.properties.bind.handler.NoUnboundElementsBindHandler"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "parent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Parent must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "parent"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable"
- method:
    name: "onSuccess"
    sourceCodeSignature: "Object onSuccess(ConfigurationPropertyName name, Bindable<?>\
      \ target, BindContext context, Object result)"
    returnType: "java.lang.Object"
    parameters:
    - name: "name"
      type: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    - name: "target"
      type: "org.springframework.boot.context.properties.bind.Bindable"
    - name: "context"
      type: "org.springframework.boot.context.properties.bind.BindContext"
    - name: "result"
      type: "java.lang.Object"
    instructionFingerprint: "AD5BA51D13A9466C3687400C57D0DB6D"
  paths:
  - pathId: "path1"
    testPathName: "onSuccessTest"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindHandler,java.util.function.Function<org.springframework.boot.context.properties.source.ConfigurationPropertySource,java.lang.Boolean>)\
      \ : void"
    modelFingerprint: "125E381453AADC15E46BD3E11159D223"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "33F2D1B60F47F66783B7E70F9D2FA534"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "3340664D785032C795BAABD64A310117"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "657A0D5935396A840B697C7476D3E736"
      valueUuid: "context"
    - type: "INPUT"
      name: "result"
      modelFingerprint: "31A650D2671F03F3038B5B482F360664"
      valueUuid: "result1"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "8E1CCC542A6F671530DE4CBFB6CC7B6B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:parent,message:uniqueUuid2):void"
        staticAccess: true
    - type: "FIELD"
      name: "parent"
      modelFingerprint: "5CFD838ED0E5DC98F5D05F0E1430746E"
      valueUuid: "parent"
      methodExercised:
        expression: "onSuccess(name:name,target:target1,context:context,result:result1):object"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.handler.NoUnboundElementsBindHandler"
        parameters:
        - name: "parent"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "parent"
        - name: "filter"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "filter"
      valueType: "org.springframework.boot.context.properties.bind.handler.NoUnboundElementsBindHandler"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "result1"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "parent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Parent must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "parent"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "result1"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
- method:
    name: "onFailure"
    sourceCodeSignature: "Object onFailure(ConfigurationPropertyName name, Bindable<?>\
      \ target, BindContext context, Exception error)"
    returnType: "java.lang.Object"
    throwsExceptions:
    - "java.lang.Exception"
    parameters:
    - name: "name"
      type: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    - name: "target"
      type: "org.springframework.boot.context.properties.bind.Bindable"
    - name: "context"
      type: "org.springframework.boot.context.properties.bind.BindContext"
    - name: "error"
      type: "java.lang.Exception"
    instructionFingerprint: "875520E7C985B204AA92FF693CB68CC9"
  paths:
  - pathId: "path1"
    testPathName: "onFailureWhenErrorInstanceOfUnboundConfigurationPropertiesExceptionThrowsUnboundConfigurationPropertiesException"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindHandler,java.util.function.Function<org.springframework.boot.context.properties.source.ConfigurationPropertySource,java.lang.Boolean>)\
      \ : void"
    modelFingerprint: "9D753A1A09CCC0410B345037A91258E0"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "1C7A09E80C68E86F90301DDA46066D2D"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "3340664D785032C795BAABD64A310117"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "657A0D5935396A840B697C7476D3E736"
      valueUuid: "context"
    - type: "INPUT"
      name: "error"
      modelFingerprint: "C9707BF6671069635E22AA2B259F0288"
      valueUuid: "error"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "45DED21A09A1E07857992D008B5983B1"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:parent,message:uniqueUuid3):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7A5B1EF13C8C4C8D28F0C8BD9BCD7668"
      valueUuid: "error"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.handler.NoUnboundElementsBindHandler"
        parameters:
        - name: "parent"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "parent"
        - name: "filter"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "filter"
      valueType: "org.springframework.boot.context.properties.bind.handler.NoUnboundElementsBindHandler"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "EXCEPTION"
      valueType: "org.springframework.boot.context.properties.bind.UnboundConfigurationPropertiesException"
      uuid: "error"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "parent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Parent must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "EXCEPTION"
      valueType: "org.springframework.boot.context.properties.bind.UnboundConfigurationPropertiesException"
      uuid: "error"
    branches:
    - lineNumber: 78
      expression: "error instanceof UnboundConfigurationPropertiesException"
      range: "(78,7)-(78,62)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "onFailureWhenErrorNotInstanceOfUnboundConfigurationPropertiesException"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindHandler,java.util.function.Function<org.springframework.boot.context.properties.source.ConfigurationPropertySource,java.lang.Boolean>)\
      \ : void"
    modelFingerprint: "337784A6E5F5D00A570A5F5AAAEC95A9"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "33F2D1B60F47F66783B7E70F9D2FA534"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "3340664D785032C795BAABD64A310117"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "657A0D5935396A840B697C7476D3E736"
      valueUuid: "context"
    - type: "INPUT"
      name: "error"
      modelFingerprint: "35835E2BFCD9D5A7221AF881AC276EE2"
      valueUuid: "error"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "8E1CCC542A6F671530DE4CBFB6CC7B6B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:parent,message:uniqueUuid4):void"
        staticAccess: true
    - type: "FIELD"
      name: "parent"
      modelFingerprint: "9F1591FE66B0BE2081910A9CEDD27E3E"
      valueUuid: "parent"
      methodExercised:
        expression: "onFailure(name:name,target:target1,context:context,error:error):object"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.handler.NoUnboundElementsBindHandler"
        parameters:
        - name: "parent"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "parent"
        - name: "filter"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "filter"
      valueType: "org.springframework.boot.context.properties.bind.handler.NoUnboundElementsBindHandler"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Exception"
        parameters: []
      valueType: "java.lang.Exception"
      uuid: "error"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "parent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Parent must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "parent"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Exception"
        parameters: []
      valueType: "java.lang.Exception"
      uuid: "error"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
    branches:
    - lineNumber: 78
      expression: "error instanceof UnboundConfigurationPropertiesException"
      range: "(78,7)-(78,62)"
      evaluatedAs: false
- method:
    name: "onFinish"
    sourceCodeSignature: "void onFinish(ConfigurationPropertyName name, Bindable<?>\
      \ target, BindContext context, Object result)"
    returnType: "void"
    throwsExceptions:
    - "java.lang.Exception"
    parameters:
    - name: "name"
      type: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    - name: "target"
      type: "org.springframework.boot.context.properties.bind.Bindable"
    - name: "context"
      type: "org.springframework.boot.context.properties.bind.BindContext"
    - name: "result"
      type: "java.lang.Object"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "630CE9AF5FE49FF483A67982E23BE5BC"
  paths:
  - pathId: "path10"
    testPathName: "onFinishWhenFilteredIsEmptyAndUnboundIsEmpty"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindHandler,java.util.function.Function<org.springframework.boot.context.properties.source.ConfigurationPropertySource,java.lang.Boolean>)\
      \ : void"
    modelFingerprint: "DB317BDFCFD5787ED803620D60CBCCAD"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "1C7A09E80C68E86F90301DDA46066D2D"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "3340664D785032C795BAABD64A310117"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "4751B65555804AA12E800A372C9B566E"
      valueUuid: "context"
    - type: "INPUT"
      name: "result"
      modelFingerprint: "31A650D2671F03F3038B5B482F360664"
      valueUuid: "result1"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "45DED21A09A1E07857992D008B5983B1"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:parent,message:uniqueUuid5):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "48706751B2DFAA36272D0E160F6DAA86"
      valueUuid: "context"
      methodExercised:
        expression: "getDepth():int1"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "671E550CFD3113CCFF5804E9990F8BC7"
      valueUuid: "context"
      methodExercised:
        expression: "getSources():iterable"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "6802D2447BDAD64C720EDA0170645D7B"
      valueUuid: "name"
      methodExercised:
        expression: "isAncestorOf(name:configurationPropertyName):boolean4"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "6ADBC77261FA6C3D155CD65A537D9E6E"
      valueUuid: "object"
      methodExercised:
        expression: "filter(filter:uniqueUuid6):iterableConfigurationPropertySource"
    - type: "LOCAL_VARIABLE"
      name: "filtered"
      modelFingerprint: "50AF12DC60A19CBE24152D5C7533CC30"
      valueUuid: "iterableConfigurationPropertySource"
      methodExercised:
        expression: "iterator():iterator2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.Function.apply(org.springframework.boot.context.properties.source.IterableConfigurationPropertySource)\
        \ : java.lang.Object"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.handler.NoUnboundElementsBindHandler"
        parameters:
        - name: "parent"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "parent"
        - name: "filter"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "filter"
      valueType: "org.springframework.boot.context.properties.bind.handler.NoUnboundElementsBindHandler"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "result1"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "parent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Parent must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "iterable"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "iterable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "iterable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "iterableConfigurationPropertySource"
    - sapientType: "ANY"
      valueType: "java.util.function.Predicate"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uniqueUuid6"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "iterableConfigurationPropertySource"
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            parameters: []
            values: []
          valueType: "java.util.List"
          genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "iterator2-CollectionContent"
      valueType: "java.util.Iterator"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "iterator2"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 87
      expression: "context.getDepth() == 0"
      range: "(87,7)-(87,29)"
      evaluatedAs: true
    - lineNumber: 94
      expression: "for-each(context.getSources())"
      range: "(94,45)-(94,64)"
      evaluatedAs: true
      internalMethodName: "checkNoUnboundElements"
    - lineNumber: 95
      expression: "source instanceof IterableConfigurationPropertySource"
      range: "(95,8)-(95,60)"
      evaluatedAs: true
      internalMethodName: "checkNoUnboundElements"
    - lineNumber: 95
      expression: "this.filter.apply(source)"
      range: "(95,65)-(95,89)"
      evaluatedAs: true
      internalMethodName: "checkNoUnboundElements"
    - lineNumber: 118
      expression: "name.isAncestorOf(candidate)"
      range: "(118,7)-(118,34)"
      evaluatedAs: false
      internalMethodName: "isUnbound"
    - lineNumber: 107
      expression: "for-each(filtered)"
      range: "(107,48)-(107,55)"
      evaluatedAs: false
      internalMethodName: "collectUnbound"
    - lineNumber: 99
      expression: "!unbound.isEmpty()"
      range: "(99,7)-(99,24)"
      evaluatedAs: false
      internalMethodName: "checkNoUnboundElements"
  - pathId: "path15"
    testPathName: "onFinishWhenUnboundNotIsEmptyThrowsUnboundConfigurationPropertiesException"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindHandler,java.util.function.Function<org.springframework.boot.context.properties.source.ConfigurationPropertySource,java.lang.Boolean>)\
      \ : void"
    modelFingerprint: "59647C8ABA86D5D47E3367E841BCC835"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "1C7A09E80C68E86F90301DDA46066D2D"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "3340664D785032C795BAABD64A310117"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "4751B65555804AA12E800A372C9B566E"
      valueUuid: "context"
    - type: "INPUT"
      name: "result"
      modelFingerprint: "31A650D2671F03F3038B5B482F360664"
      valueUuid: "result1"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "45DED21A09A1E07857992D008B5983B1"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:parent,message:uniqueUuid7):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "48706751B2DFAA36272D0E160F6DAA86"
      valueUuid: "context"
      methodExercised:
        expression: "getDepth():int1"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "671E550CFD3113CCFF5804E9990F8BC7"
      valueUuid: "context"
      methodExercised:
        expression: "getSources():iterable"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "6802D2447BDAD64C720EDA0170645D7B"
      valueUuid: "name"
      methodExercised:
        expression: "isAncestorOf(name:configurationPropertyName):boolean4"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "6ADBC77261FA6C3D155CD65A537D9E6E"
      valueUuid: "object"
      methodExercised:
        expression: "filter(filter:uniqueUuid8):iterableConfigurationPropertySource"
    - type: "LOCAL_VARIABLE"
      name: "filtered"
      modelFingerprint: "C4661DFD9B65CE9311C7B2E8A8665E70"
      valueUuid: "iterableConfigurationPropertySource"
      methodExercised:
        expression: "iterator():iterator2"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "6802D2447BDAD64C720EDA0170645D7B"
      valueUuid: "name"
      methodExercised:
        expression: "isAncestorOf(name:configurationPropertyName2):boolean6"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "6ADBC77261FA6C3D155CD65A537D9E6E"
      valueUuid: "object"
      methodExercised:
        expression: "filter(filter:uniqueUuid9):iterableConfigurationPropertySource2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "D800C419BE6BD88DF7F976BF2A2EA045"
      valueUuid: "iterableConfigurationPropertySource2"
      methodExercised:
        expression: "getConfigurationProperty(name:object3):configurationProperty"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "0F77515D9260A190D71997704380808F"
      valueUuid: "unboundConfigurationPropertiesException"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.Function.apply(org.springframework.boot.context.properties.source.IterableConfigurationPropertySource)\
        \ : java.lang.Object"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.handler.NoUnboundElementsBindHandler"
        parameters:
        - name: "parent"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "parent"
        - name: "filter"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "filter"
      valueType: "org.springframework.boot.context.properties.bind.handler.NoUnboundElementsBindHandler"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "result1"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "parent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Parent must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "iterable"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "iterable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "iterable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "iterableConfigurationPropertySource"
    - sapientType: "ANY"
      valueType: "java.util.function.Predicate"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uniqueUuid8"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "iterableConfigurationPropertySource"
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "object3"
              collectionUuid: "iterator2-CollectionContent"
          valueType: "java.util.List"
          genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "iterator2-CollectionContent"
      valueType: "java.util.Iterator"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "iterator2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean6"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "iterable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "iterableConfigurationPropertySource2"
    - sapientType: "ANY"
      valueType: "java.util.function.Predicate"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uniqueUuid9"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "iterableConfigurationPropertySource2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "object3"
      collectionUuid: "iterator2-CollectionContent"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.UnboundConfigurationPropertiesException"
        parameters:
        - name: "unboundProperties"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.TreeSet"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
                uuid: "configurationProperty"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            uuid: "treeSet"
      valueType: "org.springframework.boot.context.properties.bind.UnboundConfigurationPropertiesException"
      uuid: "unboundConfigurationPropertiesException"
      fixed: true
    branches:
    - lineNumber: 87
      expression: "context.getDepth() == 0"
      range: "(87,7)-(87,29)"
      evaluatedAs: true
    - lineNumber: 94
      expression: "for-each(context.getSources())"
      range: "(94,45)-(94,64)"
      evaluatedAs: true
      internalMethodName: "checkNoUnboundElements"
    - lineNumber: 95
      expression: "source instanceof IterableConfigurationPropertySource"
      range: "(95,8)-(95,60)"
      evaluatedAs: true
      internalMethodName: "checkNoUnboundElements"
    - lineNumber: 95
      expression: "this.filter.apply(source)"
      range: "(95,65)-(95,89)"
      evaluatedAs: true
      internalMethodName: "checkNoUnboundElements"
    - lineNumber: 118
      expression: "name.isAncestorOf(candidate)"
      range: "(118,7)-(118,34)"
      evaluatedAs: false
      internalMethodName: "isUnbound"
    - lineNumber: 107
      expression: "for-each(filtered)"
      range: "(107,48)-(107,55)"
      evaluatedAs: true
      internalMethodName: "collectUnbound"
    - lineNumber: 112
      expression: "catch-exception (Exception)"
      range: "(112,4)-(112,22)"
      evaluatedAs: true
      internalMethodName: "collectUnbound"
    - lineNumber: 99
      expression: "!unbound.isEmpty()"
      range: "(99,7)-(99,24)"
      evaluatedAs: true
      internalMethodName: "checkNoUnboundElements"
    catchBlockExercised:
      idExternalInstruction: 40
      id: 1
      catchExceptions:
      - "java.lang.Exception"
  - pathId: "path1"
    testPathName: "onFinishWhenFilteredIsNotEmptyAndUnboundNotIsEmptyThrowsUnboundConfigurationPropertiesException"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindHandler,java.util.function.Function<org.springframework.boot.context.properties.source.ConfigurationPropertySource,java.lang.Boolean>)\
      \ : void"
    modelFingerprint: "5404C51BD61EE8B1641137667863DFC0"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "1C7A09E80C68E86F90301DDA46066D2D"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "3340664D785032C795BAABD64A310117"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "4751B65555804AA12E800A372C9B566E"
      valueUuid: "context"
    - type: "INPUT"
      name: "result"
      modelFingerprint: "31A650D2671F03F3038B5B482F360664"
      valueUuid: "result1"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "45DED21A09A1E07857992D008B5983B1"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:parent,message:uniqueUuid10):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "48706751B2DFAA36272D0E160F6DAA86"
      valueUuid: "context"
      methodExercised:
        expression: "getDepth():int1"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "671E550CFD3113CCFF5804E9990F8BC7"
      valueUuid: "context"
      methodExercised:
        expression: "getSources():iterable"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "40CDE8C70522F22904AF15BF209A4551"
      valueUuid: "name"
      methodExercised:
        expression: "isAncestorOf(name:configurationPropertyName):boolean4"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "0451BC4EDFA914BEB16E6CEEEE8AFDD7"
      valueUuid: "configurationPropertyName"
      methodExercised:
        expression: "getNumberOfElements():int2"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "FE7AF61CDB748094116FFD9A0A856F44"
      valueUuid: "configurationPropertyName"
      methodExercised:
        expression: "isLastElementIndexed():boolean6"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "8138D307636A9EB9EC01C96FA8B8B451"
      valueUuid: "configurationPropertyName"
      methodExercised:
        expression: "chop(size:int3):configurationPropertyName2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "6ADBC77261FA6C3D155CD65A537D9E6E"
      valueUuid: "object"
      methodExercised:
        expression: "filter(filter:uniqueUuid11):iterableConfigurationPropertySource"
    - type: "LOCAL_VARIABLE"
      name: "filtered"
      modelFingerprint: "C4661DFD9B65CE9311C7B2E8A8665E70"
      valueUuid: "iterableConfigurationPropertySource"
      methodExercised:
        expression: "iterator():iterator2"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "40CDE8C70522F22904AF15BF209A4551"
      valueUuid: "name"
      methodExercised:
        expression: "isAncestorOf(name:configurationPropertyName3):boolean9"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "0451BC4EDFA914BEB16E6CEEEE8AFDD7"
      valueUuid: "configurationPropertyName3"
      methodExercised:
        expression: "getNumberOfElements():int4"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "FE7AF61CDB748094116FFD9A0A856F44"
      valueUuid: "configurationPropertyName3"
      methodExercised:
        expression: "isLastElementIndexed():boolean11"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "8138D307636A9EB9EC01C96FA8B8B451"
      valueUuid: "configurationPropertyName3"
      methodExercised:
        expression: "chop(size:int5):configurationPropertyName4"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "6ADBC77261FA6C3D155CD65A537D9E6E"
      valueUuid: "object"
      methodExercised:
        expression: "filter(filter:uniqueUuid12):iterableConfigurationPropertySource2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "D800C419BE6BD88DF7F976BF2A2EA045"
      valueUuid: "iterableConfigurationPropertySource2"
      methodExercised:
        expression: "getConfigurationProperty(name:object3):configurationProperty"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "0F77515D9260A190D71997704380808F"
      valueUuid: "unboundConfigurationPropertiesException"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.Function.apply(org.springframework.boot.context.properties.source.IterableConfigurationPropertySource)\
        \ : java.lang.Object"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.handler.NoUnboundElementsBindHandler"
        parameters:
        - name: "parent"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "parent"
        - name: "filter"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "filter"
      valueType: "org.springframework.boot.context.properties.bind.handler.NoUnboundElementsBindHandler"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "result1"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "parent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Parent must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid10"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "iterable"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "iterable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean6"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName2"
    - sapientType: "BASIC"
      content: !<regular>
        value: -1
      valueType: "int"
      uuid: "int3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "iterable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "iterableConfigurationPropertySource"
    - sapientType: "ANY"
      valueType: "java.util.function.Predicate"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uniqueUuid11"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "iterableConfigurationPropertySource"
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "object3"
              collectionUuid: "iterator2-CollectionContent"
          valueType: "java.util.List"
          genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "iterator2-CollectionContent"
      valueType: "java.util.Iterator"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "iterator2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean9"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean11"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName4"
    - sapientType: "BASIC"
      content: !<regular>
        value: -1
      valueType: "int"
      uuid: "int5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "iterable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "iterableConfigurationPropertySource2"
    - sapientType: "ANY"
      valueType: "java.util.function.Predicate"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uniqueUuid12"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "iterableConfigurationPropertySource2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "object3"
      collectionUuid: "iterator2-CollectionContent"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.UnboundConfigurationPropertiesException"
        parameters:
        - name: "unboundProperties"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.TreeSet"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
                uuid: "configurationProperty"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            uuid: "treeSet"
      valueType: "org.springframework.boot.context.properties.bind.UnboundConfigurationPropertiesException"
      uuid: "unboundConfigurationPropertiesException"
      fixed: true
    branches:
    - lineNumber: 87
      expression: "context.getDepth() == 0"
      range: "(87,7)-(87,29)"
      evaluatedAs: true
    - lineNumber: 94
      expression: "for-each(context.getSources())"
      range: "(94,45)-(94,64)"
      evaluatedAs: true
      internalMethodName: "checkNoUnboundElements"
    - lineNumber: 95
      expression: "source instanceof IterableConfigurationPropertySource"
      range: "(95,8)-(95,60)"
      evaluatedAs: true
      internalMethodName: "checkNoUnboundElements"
    - lineNumber: 95
      expression: "this.filter.apply(source)"
      range: "(95,65)-(95,89)"
      evaluatedAs: true
      internalMethodName: "checkNoUnboundElements"
    - lineNumber: 118
      expression: "name.isAncestorOf(candidate)"
      range: "(118,7)-(118,34)"
      evaluatedAs: true
      internalMethodName: "isUnbound"
    - lineNumber: 119
      expression: "!this.boundNames.contains(candidate)"
      range: "(119,11)-(119,46)"
      evaluatedAs: true
      internalMethodName: "isUnbound"
    - lineNumber: 126
      expression: "candidate.isLastElementIndexed()"
      range: "(126,7)-(126,38)"
      evaluatedAs: true
      internalMethodName: "isOverriddenCollectionElement"
    - lineNumber: 119
      expression: "!isOverriddenCollectionElement(candidate)"
      range: "(119,51)-(119,91)"
      evaluatedAs: true
      internalMethodName: "isUnbound"
    - lineNumber: 107
      expression: "for-each(filtered)"
      range: "(107,48)-(107,55)"
      evaluatedAs: true
      internalMethodName: "collectUnbound"
    - lineNumber: 99
      expression: "!unbound.isEmpty()"
      range: "(99,7)-(99,24)"
      evaluatedAs: true
      internalMethodName: "checkNoUnboundElements"
  - pathId: "path5"
    testPathName: "onFinishWhenIsOverriddenCollectionElementNotCandidateAndFilteredIsNotEmptyThrowsUnboundConfigurationPropertiesException"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindHandler,java.util.function.Function<org.springframework.boot.context.properties.source.ConfigurationPropertySource,java.lang.Boolean>)\
      \ : void"
    modelFingerprint: "ABFC84926CFD2C7134AC253B97F3B2BF"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "1C7A09E80C68E86F90301DDA46066D2D"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "3340664D785032C795BAABD64A310117"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "4751B65555804AA12E800A372C9B566E"
      valueUuid: "context"
    - type: "INPUT"
      name: "result"
      modelFingerprint: "31A650D2671F03F3038B5B482F360664"
      valueUuid: "result1"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "45DED21A09A1E07857992D008B5983B1"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:parent,message:uniqueUuid13):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "48706751B2DFAA36272D0E160F6DAA86"
      valueUuid: "context"
      methodExercised:
        expression: "getDepth():int1"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "671E550CFD3113CCFF5804E9990F8BC7"
      valueUuid: "context"
      methodExercised:
        expression: "getSources():iterable"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "40CDE8C70522F22904AF15BF209A4551"
      valueUuid: "name"
      methodExercised:
        expression: "isAncestorOf(name:configurationPropertyName):boolean4"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "0451BC4EDFA914BEB16E6CEEEE8AFDD7"
      valueUuid: "configurationPropertyName"
      methodExercised:
        expression: "getNumberOfElements():int2"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "FE7AF61CDB748094116FFD9A0A856F44"
      valueUuid: "configurationPropertyName"
      methodExercised:
        expression: "isLastElementIndexed():boolean6"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "8138D307636A9EB9EC01C96FA8B8B451"
      valueUuid: "configurationPropertyName"
      methodExercised:
        expression: "chop(size:int3):configurationPropertyName2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "6ADBC77261FA6C3D155CD65A537D9E6E"
      valueUuid: "object"
      methodExercised:
        expression: "filter(filter:uniqueUuid14):iterableConfigurationPropertySource"
    - type: "LOCAL_VARIABLE"
      name: "filtered"
      modelFingerprint: "C4661DFD9B65CE9311C7B2E8A8665E70"
      valueUuid: "iterableConfigurationPropertySource"
      methodExercised:
        expression: "iterator():iterator2"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "6802D2447BDAD64C720EDA0170645D7B"
      valueUuid: "name"
      methodExercised:
        expression: "isAncestorOf(name:configurationPropertyName3):boolean9"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "6ADBC77261FA6C3D155CD65A537D9E6E"
      valueUuid: "object"
      methodExercised:
        expression: "filter(filter:uniqueUuid15):iterableConfigurationPropertySource2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "D800C419BE6BD88DF7F976BF2A2EA045"
      valueUuid: "iterableConfigurationPropertySource2"
      methodExercised:
        expression: "getConfigurationProperty(name:object3):configurationProperty"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "0F77515D9260A190D71997704380808F"
      valueUuid: "unboundConfigurationPropertiesException"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.Function.apply(org.springframework.boot.context.properties.source.IterableConfigurationPropertySource)\
        \ : java.lang.Object"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.handler.NoUnboundElementsBindHandler"
        parameters:
        - name: "parent"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "parent"
        - name: "filter"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "filter"
      valueType: "org.springframework.boot.context.properties.bind.handler.NoUnboundElementsBindHandler"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "result1"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "parent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Parent must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid13"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "iterable"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "iterable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean6"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName2"
    - sapientType: "BASIC"
      content: !<regular>
        value: -1
      valueType: "int"
      uuid: "int3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "iterable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "iterableConfigurationPropertySource"
    - sapientType: "ANY"
      valueType: "java.util.function.Predicate"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uniqueUuid14"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "iterableConfigurationPropertySource"
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "object3"
              collectionUuid: "iterator2-CollectionContent"
          valueType: "java.util.List"
          genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "iterator2-CollectionContent"
      valueType: "java.util.Iterator"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "iterator2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean9"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "iterable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "iterableConfigurationPropertySource2"
    - sapientType: "ANY"
      valueType: "java.util.function.Predicate"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uniqueUuid15"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "iterableConfigurationPropertySource2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "object3"
      collectionUuid: "iterator2-CollectionContent"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.UnboundConfigurationPropertiesException"
        parameters:
        - name: "unboundProperties"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.TreeSet"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
                uuid: "configurationProperty"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            uuid: "treeSet"
      valueType: "org.springframework.boot.context.properties.bind.UnboundConfigurationPropertiesException"
      uuid: "unboundConfigurationPropertiesException"
      fixed: true
    branches:
    - lineNumber: 87
      expression: "context.getDepth() == 0"
      range: "(87,7)-(87,29)"
      evaluatedAs: true
    - lineNumber: 94
      expression: "for-each(context.getSources())"
      range: "(94,45)-(94,64)"
      evaluatedAs: true
      internalMethodName: "checkNoUnboundElements"
    - lineNumber: 95
      expression: "source instanceof IterableConfigurationPropertySource"
      range: "(95,8)-(95,60)"
      evaluatedAs: true
      internalMethodName: "checkNoUnboundElements"
    - lineNumber: 95
      expression: "this.filter.apply(source)"
      range: "(95,65)-(95,89)"
      evaluatedAs: true
      internalMethodName: "checkNoUnboundElements"
    - lineNumber: 118
      expression: "name.isAncestorOf(candidate)"
      range: "(118,7)-(118,34)"
      evaluatedAs: true
      internalMethodName: "isUnbound"
    - lineNumber: 119
      expression: "!this.boundNames.contains(candidate)"
      range: "(119,11)-(119,46)"
      evaluatedAs: true
      internalMethodName: "isUnbound"
    - lineNumber: 126
      expression: "candidate.isLastElementIndexed()"
      range: "(126,7)-(126,38)"
      evaluatedAs: true
      internalMethodName: "isOverriddenCollectionElement"
    - lineNumber: 119
      expression: "!isOverriddenCollectionElement(candidate)"
      range: "(119,51)-(119,91)"
      evaluatedAs: true
      internalMethodName: "isUnbound"
    - lineNumber: 107
      expression: "for-each(filtered)"
      range: "(107,48)-(107,55)"
      evaluatedAs: true
      internalMethodName: "collectUnbound"
    - lineNumber: 99
      expression: "!unbound.isEmpty()"
      range: "(99,7)-(99,24)"
      evaluatedAs: true
      internalMethodName: "checkNoUnboundElements"
  - pathId: "path3"
    testPathName: "onFinishWhenIndexedIsNullAndUnboundNotIsEmpty2ThrowsUnboundConfigurationPropertiesException"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindHandler,java.util.function.Function<org.springframework.boot.context.properties.source.ConfigurationPropertySource,java.lang.Boolean>)\
      \ : void"
    modelFingerprint: "E0C8F196120A9A1A5E51A0D0AF1F5A10"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "1C7A09E80C68E86F90301DDA46066D2D"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "3340664D785032C795BAABD64A310117"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "4751B65555804AA12E800A372C9B566E"
      valueUuid: "context"
    - type: "INPUT"
      name: "result"
      modelFingerprint: "31A650D2671F03F3038B5B482F360664"
      valueUuid: "result1"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "45DED21A09A1E07857992D008B5983B1"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:parent,message:uniqueUuid16):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "48706751B2DFAA36272D0E160F6DAA86"
      valueUuid: "context"
      methodExercised:
        expression: "getDepth():int1"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "671E550CFD3113CCFF5804E9990F8BC7"
      valueUuid: "context"
      methodExercised:
        expression: "getSources():iterable"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "40CDE8C70522F22904AF15BF209A4551"
      valueUuid: "name"
      methodExercised:
        expression: "isAncestorOf(name:configurationPropertyName):boolean4"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "0451BC4EDFA914BEB16E6CEEEE8AFDD7"
      valueUuid: "configurationPropertyName"
      methodExercised:
        expression: "getNumberOfElements():int2"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "FE7AF61CDB748094116FFD9A0A856F44"
      valueUuid: "configurationPropertyName"
      methodExercised:
        expression: "isLastElementIndexed():boolean6"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "8138D307636A9EB9EC01C96FA8B8B451"
      valueUuid: "configurationPropertyName"
      methodExercised:
        expression: "chop(size:int3):configurationPropertyName2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "6ADBC77261FA6C3D155CD65A537D9E6E"
      valueUuid: "object"
      methodExercised:
        expression: "filter(filter:uniqueUuid17):iterableConfigurationPropertySource"
    - type: "LOCAL_VARIABLE"
      name: "filtered"
      modelFingerprint: "C4661DFD9B65CE9311C7B2E8A8665E70"
      valueUuid: "iterableConfigurationPropertySource"
      methodExercised:
        expression: "iterator():iterator2"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "40CDE8C70522F22904AF15BF209A4551"
      valueUuid: "name"
      methodExercised:
        expression: "isAncestorOf(name:configurationPropertyName3):boolean9"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "0451BC4EDFA914BEB16E6CEEEE8AFDD7"
      valueUuid: "configurationPropertyName3"
      methodExercised:
        expression: "getNumberOfElements():int4"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "D5F209AC6DEFB918334FD02FBD132FF3"
      valueUuid: "configurationPropertyName3"
      methodExercised:
        expression: "isLastElementIndexed():boolean11"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "662BF5EA8DF8435418505046E467616A"
      valueUuid: "configurationPropertyName3"
      methodExercised:
        expression: "getNumberOfElements():int7"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "4B838EB821A2D4DF50C4DC382AC7FDFE"
      valueUuid: "configurationPropertyName3"
      methodExercised:
        expression: "isNumericIndex(elementIndex:int6):boolean12"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "0B8DBDD76B6E0E9B13DDEC1419C1D5EC"
      valueUuid: "configurationPropertyName3"
      methodExercised:
        expression: "getNumberOfElements():int9"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "6ADBC77261FA6C3D155CD65A537D9E6E"
      valueUuid: "object"
      methodExercised:
        expression: "filter(filter:uniqueUuid18):iterableConfigurationPropertySource2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "D800C419BE6BD88DF7F976BF2A2EA045"
      valueUuid: "iterableConfigurationPropertySource2"
      methodExercised:
        expression: "getConfigurationProperty(name:object3):configurationProperty"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "0F77515D9260A190D71997704380808F"
      valueUuid: "unboundConfigurationPropertiesException"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.Function.apply(org.springframework.boot.context.properties.source.IterableConfigurationPropertySource)\
        \ : java.lang.Object"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.handler.NoUnboundElementsBindHandler"
        parameters:
        - name: "parent"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "parent"
        - name: "filter"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "filter"
      valueType: "org.springframework.boot.context.properties.bind.handler.NoUnboundElementsBindHandler"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "result1"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "parent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Parent must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid16"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "iterable"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "iterable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean6"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName2"
    - sapientType: "BASIC"
      content: !<regular>
        value: -1
      valueType: "int"
      uuid: "int3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "iterable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "iterableConfigurationPropertySource"
    - sapientType: "ANY"
      valueType: "java.util.function.Predicate"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uniqueUuid17"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "iterableConfigurationPropertySource"
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "object3"
              collectionUuid: "iterator2-CollectionContent"
          valueType: "java.util.List"
          genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "iterator2-CollectionContent"
      valueType: "java.util.Iterator"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "iterator2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean9"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean11"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean12"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int9"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "iterable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "iterableConfigurationPropertySource2"
    - sapientType: "ANY"
      valueType: "java.util.function.Predicate"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uniqueUuid18"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "iterableConfigurationPropertySource2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "object3"
      collectionUuid: "iterator2-CollectionContent"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.UnboundConfigurationPropertiesException"
        parameters:
        - name: "unboundProperties"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.TreeSet"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
                uuid: "configurationProperty"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            uuid: "treeSet"
      valueType: "org.springframework.boot.context.properties.bind.UnboundConfigurationPropertiesException"
      uuid: "unboundConfigurationPropertiesException"
      fixed: true
    branches:
    - lineNumber: 87
      expression: "context.getDepth() == 0"
      range: "(87,7)-(87,29)"
      evaluatedAs: true
    - lineNumber: 94
      expression: "for-each(context.getSources())"
      range: "(94,45)-(94,64)"
      evaluatedAs: true
      internalMethodName: "checkNoUnboundElements"
    - lineNumber: 95
      expression: "source instanceof IterableConfigurationPropertySource"
      range: "(95,8)-(95,60)"
      evaluatedAs: true
      internalMethodName: "checkNoUnboundElements"
    - lineNumber: 95
      expression: "this.filter.apply(source)"
      range: "(95,65)-(95,89)"
      evaluatedAs: true
      internalMethodName: "checkNoUnboundElements"
    - lineNumber: 118
      expression: "name.isAncestorOf(candidate)"
      range: "(118,7)-(118,34)"
      evaluatedAs: true
      internalMethodName: "isUnbound"
    - lineNumber: 119
      expression: "!this.boundNames.contains(candidate)"
      range: "(119,11)-(119,46)"
      evaluatedAs: true
      internalMethodName: "isUnbound"
    - lineNumber: 126
      expression: "candidate.isLastElementIndexed()"
      range: "(126,7)-(126,38)"
      evaluatedAs: true
      internalMethodName: "isOverriddenCollectionElement"
    - lineNumber: 119
      expression: "!isOverriddenCollectionElement(candidate)"
      range: "(119,51)-(119,91)"
      evaluatedAs: true
      internalMethodName: "isUnbound"
    - lineNumber: 107
      expression: "for-each(filtered)"
      range: "(107,48)-(107,55)"
      evaluatedAs: true
      internalMethodName: "collectUnbound"
    - lineNumber: 146
      expression: "i < candidate.getNumberOfElements()"
      range: "(146,19)-(146,53)"
      evaluatedAs: true
      internalMethodName: "getIndexed"
    - lineNumber: 147
      expression: "candidate.isNumericIndex(i)"
      range: "(147,8)-(147,34)"
      evaluatedAs: false
      internalMethodName: "getIndexed"
    - lineNumber: 131
      expression: "indexed != null"
      range: "(131,7)-(131,21)"
      evaluatedAs: false
      internalMethodName: "isOverriddenCollectionElement"
    - lineNumber: 99
      expression: "!unbound.isEmpty()"
      range: "(99,7)-(99,24)"
      evaluatedAs: true
      internalMethodName: "checkNoUnboundElements"
  - pathId: "path8"
    testPathName: "onFinishWhenCandidateNotIsNumericIndexIAndIndexedIsNullAndIsOverriddenCollectionElementNotCandidateAndFilteredIsEmptyAn"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindHandler,java.util.function.Function<org.springframework.boot.context.properties.source.ConfigurationPropertySource,java.lang.Boolean>)\
      \ : void"
    modelFingerprint: "E896C15F4BBD41AE5365D827C83C870C"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "1C7A09E80C68E86F90301DDA46066D2D"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "3340664D785032C795BAABD64A310117"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "4751B65555804AA12E800A372C9B566E"
      valueUuid: "context"
    - type: "INPUT"
      name: "result"
      modelFingerprint: "31A650D2671F03F3038B5B482F360664"
      valueUuid: "result1"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "45DED21A09A1E07857992D008B5983B1"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:parent,message:uniqueUuid19):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "48706751B2DFAA36272D0E160F6DAA86"
      valueUuid: "context"
      methodExercised:
        expression: "getDepth():int1"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "671E550CFD3113CCFF5804E9990F8BC7"
      valueUuid: "context"
      methodExercised:
        expression: "getSources():iterable"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "40CDE8C70522F22904AF15BF209A4551"
      valueUuid: "name"
      methodExercised:
        expression: "isAncestorOf(name:configurationPropertyName):boolean4"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "0451BC4EDFA914BEB16E6CEEEE8AFDD7"
      valueUuid: "configurationPropertyName"
      methodExercised:
        expression: "getNumberOfElements():int2"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "D5F209AC6DEFB918334FD02FBD132FF3"
      valueUuid: "configurationPropertyName"
      methodExercised:
        expression: "isLastElementIndexed():boolean6"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "662BF5EA8DF8435418505046E467616A"
      valueUuid: "configurationPropertyName"
      methodExercised:
        expression: "getNumberOfElements():int5"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "4B838EB821A2D4DF50C4DC382AC7FDFE"
      valueUuid: "configurationPropertyName"
      methodExercised:
        expression: "isNumericIndex(elementIndex:int4):boolean7"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "0B8DBDD76B6E0E9B13DDEC1419C1D5EC"
      valueUuid: "configurationPropertyName"
      methodExercised:
        expression: "getNumberOfElements():int7"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "6ADBC77261FA6C3D155CD65A537D9E6E"
      valueUuid: "object"
      methodExercised:
        expression: "filter(filter:uniqueUuid20):iterableConfigurationPropertySource"
    - type: "LOCAL_VARIABLE"
      name: "filtered"
      modelFingerprint: "50AF12DC60A19CBE24152D5C7533CC30"
      valueUuid: "iterableConfigurationPropertySource"
      methodExercised:
        expression: "iterator():iterator2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.Function.apply(org.springframework.boot.context.properties.source.IterableConfigurationPropertySource)\
        \ : java.lang.Object"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.handler.NoUnboundElementsBindHandler"
        parameters:
        - name: "parent"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "parent"
        - name: "filter"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "filter"
      valueType: "org.springframework.boot.context.properties.bind.handler.NoUnboundElementsBindHandler"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "result1"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "parent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Parent must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid19"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "iterable"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "iterable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean6"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean7"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "iterable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "iterableConfigurationPropertySource"
    - sapientType: "ANY"
      valueType: "java.util.function.Predicate"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uniqueUuid20"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "iterableConfigurationPropertySource"
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            parameters: []
            values: []
          valueType: "java.util.List"
          genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "iterator2-CollectionContent"
      valueType: "java.util.Iterator"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "iterator2"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 87
      expression: "context.getDepth() == 0"
      range: "(87,7)-(87,29)"
      evaluatedAs: true
    - lineNumber: 94
      expression: "for-each(context.getSources())"
      range: "(94,45)-(94,64)"
      evaluatedAs: true
      internalMethodName: "checkNoUnboundElements"
    - lineNumber: 95
      expression: "source instanceof IterableConfigurationPropertySource"
      range: "(95,8)-(95,60)"
      evaluatedAs: true
      internalMethodName: "checkNoUnboundElements"
    - lineNumber: 95
      expression: "this.filter.apply(source)"
      range: "(95,65)-(95,89)"
      evaluatedAs: true
      internalMethodName: "checkNoUnboundElements"
    - lineNumber: 118
      expression: "name.isAncestorOf(candidate)"
      range: "(118,7)-(118,34)"
      evaluatedAs: true
      internalMethodName: "isUnbound"
    - lineNumber: 119
      expression: "!this.boundNames.contains(candidate)"
      range: "(119,11)-(119,46)"
      evaluatedAs: true
      internalMethodName: "isUnbound"
    - lineNumber: 126
      expression: "candidate.isLastElementIndexed()"
      range: "(126,7)-(126,38)"
      evaluatedAs: false
      internalMethodName: "isOverriddenCollectionElement"
    - lineNumber: 146
      expression: "i < candidate.getNumberOfElements()"
      range: "(146,19)-(146,53)"
      evaluatedAs: true
      internalMethodName: "getIndexed"
    - lineNumber: 147
      expression: "candidate.isNumericIndex(i)"
      range: "(147,8)-(147,34)"
      evaluatedAs: false
      internalMethodName: "getIndexed"
    - lineNumber: 131
      expression: "indexed != null"
      range: "(131,7)-(131,21)"
      evaluatedAs: false
      internalMethodName: "isOverriddenCollectionElement"
    - lineNumber: 119
      expression: "!isOverriddenCollectionElement(candidate)"
      range: "(119,51)-(119,91)"
      evaluatedAs: true
      internalMethodName: "isUnbound"
    - lineNumber: 107
      expression: "for-each(filtered)"
      range: "(107,48)-(107,55)"
      evaluatedAs: false
      internalMethodName: "collectUnbound"
    - lineNumber: 99
      expression: "!unbound.isEmpty()"
      range: "(99,7)-(99,24)"
      evaluatedAs: false
      internalMethodName: "checkNoUnboundElements"
  - pathId: "path2"
    testPathName: "onFinishWhenThisBoundNamesNotContainsConfigurationPropertyNameOfZeroethProThrowsUnboundConfigurationPropertiesException"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindHandler,java.util.function.Function<org.springframework.boot.context.properties.source.ConfigurationPropertySource,java.lang.Boolean>)\
      \ : void"
    modelFingerprint: "409F91F90452B124A3F74F3860C16945"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "1C7A09E80C68E86F90301DDA46066D2D"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "3340664D785032C795BAABD64A310117"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "4751B65555804AA12E800A372C9B566E"
      valueUuid: "context"
    - type: "INPUT"
      name: "result"
      modelFingerprint: "31A650D2671F03F3038B5B482F360664"
      valueUuid: "result1"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "45DED21A09A1E07857992D008B5983B1"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:parent,message:uniqueUuid21):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "48706751B2DFAA36272D0E160F6DAA86"
      valueUuid: "context"
      methodExercised:
        expression: "getDepth():int1"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "671E550CFD3113CCFF5804E9990F8BC7"
      valueUuid: "context"
      methodExercised:
        expression: "getSources():iterable"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "40CDE8C70522F22904AF15BF209A4551"
      valueUuid: "name"
      methodExercised:
        expression: "isAncestorOf(name:configurationPropertyName):boolean4"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "0451BC4EDFA914BEB16E6CEEEE8AFDD7"
      valueUuid: "configurationPropertyName"
      methodExercised:
        expression: "getNumberOfElements():int2"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "FE7AF61CDB748094116FFD9A0A856F44"
      valueUuid: "configurationPropertyName"
      methodExercised:
        expression: "isLastElementIndexed():boolean6"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "8138D307636A9EB9EC01C96FA8B8B451"
      valueUuid: "configurationPropertyName"
      methodExercised:
        expression: "chop(size:int3):configurationPropertyName2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "6ADBC77261FA6C3D155CD65A537D9E6E"
      valueUuid: "object"
      methodExercised:
        expression: "filter(filter:uniqueUuid22):iterableConfigurationPropertySource"
    - type: "LOCAL_VARIABLE"
      name: "filtered"
      modelFingerprint: "C4661DFD9B65CE9311C7B2E8A8665E70"
      valueUuid: "iterableConfigurationPropertySource"
      methodExercised:
        expression: "iterator():iterator2"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "40CDE8C70522F22904AF15BF209A4551"
      valueUuid: "name"
      methodExercised:
        expression: "isAncestorOf(name:configurationPropertyName3):boolean9"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "0451BC4EDFA914BEB16E6CEEEE8AFDD7"
      valueUuid: "configurationPropertyName3"
      methodExercised:
        expression: "getNumberOfElements():int4"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "D5F209AC6DEFB918334FD02FBD132FF3"
      valueUuid: "configurationPropertyName3"
      methodExercised:
        expression: "isLastElementIndexed():boolean11"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "662BF5EA8DF8435418505046E467616A"
      valueUuid: "configurationPropertyName3"
      methodExercised:
        expression: "getNumberOfElements():int7"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "17D578AA110042E8445142CE04086BB4"
      valueUuid: "configurationPropertyName3"
      methodExercised:
        expression: "isNumericIndex(elementIndex:int6):boolean12"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "3EE6AC3B98C414D9546FEEF765C19093"
      valueUuid: "configurationPropertyName3"
      methodExercised:
        expression: "chop(size:int6):configurationPropertyName4"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "F2722793111D1628A924D422CE0816FE"
      valueUuid: "configurationPropertyName3"
      methodExercised:
        expression: "getElement(elementIndex:uniqueUuid23,form:Enum-org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form-UNIFORM):string2"
    - type: "STATIC"
      name: "ConfigurationPropertyName.class"
      modelFingerprint: "5F041E7AF44A8FA57EA28982ACC53B11"
      valueUuid: "ConfigurationPropertyName.class"
      methodExercised:
        expression: "of(name:string4):configurationPropertyName5"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "6ADBC77261FA6C3D155CD65A537D9E6E"
      valueUuid: "object"
      methodExercised:
        expression: "filter(filter:uniqueUuid24):iterableConfigurationPropertySource2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "D800C419BE6BD88DF7F976BF2A2EA045"
      valueUuid: "iterableConfigurationPropertySource2"
      methodExercised:
        expression: "getConfigurationProperty(name:object3):configurationProperty"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "0F77515D9260A190D71997704380808F"
      valueUuid: "unboundConfigurationPropertiesException"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.Function.apply(org.springframework.boot.context.properties.source.IterableConfigurationPropertySource)\
        \ : java.lang.Object"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.handler.NoUnboundElementsBindHandler"
        parameters:
        - name: "parent"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "parent"
        - name: "filter"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "filter"
      valueType: "org.springframework.boot.context.properties.bind.handler.NoUnboundElementsBindHandler"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "result1"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "parent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Parent must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid21"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "iterable"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "iterable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean6"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName2"
    - sapientType: "BASIC"
      content: !<regular>
        value: -1
      valueType: "int"
      uuid: "int3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "iterable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "iterableConfigurationPropertySource"
    - sapientType: "ANY"
      valueType: "java.util.function.Predicate"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uniqueUuid22"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "iterableConfigurationPropertySource"
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "object3"
              collectionUuid: "iterator2-CollectionContent"
          valueType: "java.util.List"
          genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "iterator2-CollectionContent"
      valueType: "java.util.Iterator"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "iterator2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean9"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean11"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean12"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName4"
      nameForMock: "configurationPropertyName4"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getElement1"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "uniqueUuid23"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "UNIFORM"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form"
      uuid: "Enum-org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form-UNIFORM"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "ConfigurationPropertyName.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A[0]"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "iterable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "iterableConfigurationPropertySource2"
    - sapientType: "ANY"
      valueType: "java.util.function.Predicate"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uniqueUuid24"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "iterableConfigurationPropertySource2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "object3"
      collectionUuid: "iterator2-CollectionContent"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.UnboundConfigurationPropertiesException"
        parameters:
        - name: "unboundProperties"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.TreeSet"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
                uuid: "configurationProperty"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            uuid: "treeSet"
      valueType: "org.springframework.boot.context.properties.bind.UnboundConfigurationPropertiesException"
      uuid: "unboundConfigurationPropertiesException"
      fixed: true
    branches:
    - lineNumber: 87
      expression: "context.getDepth() == 0"
      range: "(87,7)-(87,29)"
      evaluatedAs: true
    - lineNumber: 94
      expression: "for-each(context.getSources())"
      range: "(94,45)-(94,64)"
      evaluatedAs: true
      internalMethodName: "checkNoUnboundElements"
    - lineNumber: 95
      expression: "source instanceof IterableConfigurationPropertySource"
      range: "(95,8)-(95,60)"
      evaluatedAs: true
      internalMethodName: "checkNoUnboundElements"
    - lineNumber: 95
      expression: "this.filter.apply(source)"
      range: "(95,65)-(95,89)"
      evaluatedAs: true
      internalMethodName: "checkNoUnboundElements"
    - lineNumber: 118
      expression: "name.isAncestorOf(candidate)"
      range: "(118,7)-(118,34)"
      evaluatedAs: true
      internalMethodName: "isUnbound"
    - lineNumber: 119
      expression: "!this.boundNames.contains(candidate)"
      range: "(119,11)-(119,46)"
      evaluatedAs: true
      internalMethodName: "isUnbound"
    - lineNumber: 126
      expression: "candidate.isLastElementIndexed()"
      range: "(126,7)-(126,38)"
      evaluatedAs: true
      internalMethodName: "isOverriddenCollectionElement"
    - lineNumber: 119
      expression: "!isOverriddenCollectionElement(candidate)"
      range: "(119,51)-(119,91)"
      evaluatedAs: true
      internalMethodName: "isUnbound"
    - lineNumber: 107
      expression: "for-each(filtered)"
      range: "(107,48)-(107,55)"
      evaluatedAs: true
      internalMethodName: "collectUnbound"
    - lineNumber: 146
      expression: "i < candidate.getNumberOfElements()"
      range: "(146,19)-(146,53)"
      evaluatedAs: true
      internalMethodName: "getIndexed"
    - lineNumber: 147
      expression: "candidate.isNumericIndex(i)"
      range: "(147,8)-(147,34)"
      evaluatedAs: true
      internalMethodName: "getIndexed"
    - lineNumber: 131
      expression: "indexed != null"
      range: "(131,7)-(131,21)"
      evaluatedAs: true
      internalMethodName: "isOverriddenCollectionElement"
    - lineNumber: 133
      expression: "this.boundNames.contains(ConfigurationPropertyName.of(zeroethProperty))"
      range: "(133,8)-(133,78)"
      evaluatedAs: false
      internalMethodName: "isOverriddenCollectionElement"
    - lineNumber: 99
      expression: "!unbound.isEmpty()"
      range: "(99,7)-(99,24)"
      evaluatedAs: true
      internalMethodName: "checkNoUnboundElements"
  - pathId: "path7"
    testPathName: "onFinishWhenThisBoundNamesNotContainsConfigurationPropertyNameOfZeroethPropertyAndIsOverriddenCollectionElementNotCandi"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindHandler,java.util.function.Function<org.springframework.boot.context.properties.source.ConfigurationPropertySource,java.lang.Boolean>)\
      \ : void"
    modelFingerprint: "1B0950D751DAFAED8D34624365D40372"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "1C7A09E80C68E86F90301DDA46066D2D"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "3340664D785032C795BAABD64A310117"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "4751B65555804AA12E800A372C9B566E"
      valueUuid: "context"
    - type: "INPUT"
      name: "result"
      modelFingerprint: "31A650D2671F03F3038B5B482F360664"
      valueUuid: "result1"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "45DED21A09A1E07857992D008B5983B1"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:parent,message:uniqueUuid25):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "48706751B2DFAA36272D0E160F6DAA86"
      valueUuid: "context"
      methodExercised:
        expression: "getDepth():int1"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "671E550CFD3113CCFF5804E9990F8BC7"
      valueUuid: "context"
      methodExercised:
        expression: "getSources():iterable"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "40CDE8C70522F22904AF15BF209A4551"
      valueUuid: "name"
      methodExercised:
        expression: "isAncestorOf(name:configurationPropertyName):boolean4"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "0451BC4EDFA914BEB16E6CEEEE8AFDD7"
      valueUuid: "configurationPropertyName"
      methodExercised:
        expression: "getNumberOfElements():int2"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "D5F209AC6DEFB918334FD02FBD132FF3"
      valueUuid: "configurationPropertyName"
      methodExercised:
        expression: "isLastElementIndexed():boolean6"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "662BF5EA8DF8435418505046E467616A"
      valueUuid: "configurationPropertyName"
      methodExercised:
        expression: "getNumberOfElements():int5"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "17D578AA110042E8445142CE04086BB4"
      valueUuid: "configurationPropertyName"
      methodExercised:
        expression: "isNumericIndex(elementIndex:int4):boolean7"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "3EE6AC3B98C414D9546FEEF765C19093"
      valueUuid: "configurationPropertyName"
      methodExercised:
        expression: "chop(size:int4):configurationPropertyName2"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "F2722793111D1628A924D422CE0816FE"
      valueUuid: "configurationPropertyName"
      methodExercised:
        expression: "getElement(elementIndex:uniqueUuid26,form:Enum-org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form-UNIFORM):string2"
    - type: "STATIC"
      name: "ConfigurationPropertyName.class"
      modelFingerprint: "5F041E7AF44A8FA57EA28982ACC53B11"
      valueUuid: "ConfigurationPropertyName.class"
      methodExercised:
        expression: "of(name:string4):configurationPropertyName3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "6ADBC77261FA6C3D155CD65A537D9E6E"
      valueUuid: "object"
      methodExercised:
        expression: "filter(filter:uniqueUuid27):iterableConfigurationPropertySource"
    - type: "LOCAL_VARIABLE"
      name: "filtered"
      modelFingerprint: "50AF12DC60A19CBE24152D5C7533CC30"
      valueUuid: "iterableConfigurationPropertySource"
      methodExercised:
        expression: "iterator():iterator2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.Function.apply(org.springframework.boot.context.properties.source.IterableConfigurationPropertySource)\
        \ : java.lang.Object"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.handler.NoUnboundElementsBindHandler"
        parameters:
        - name: "parent"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "parent"
        - name: "filter"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "filter"
      valueType: "org.springframework.boot.context.properties.bind.handler.NoUnboundElementsBindHandler"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "result1"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "parent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Parent must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid25"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "iterable"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "iterable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean6"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean7"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName2"
      nameForMock: "configurationPropertyName2"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getElement1"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "uniqueUuid26"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "UNIFORM"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form"
      uuid: "Enum-org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form-UNIFORM"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "ConfigurationPropertyName.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A[0]"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "iterable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "iterableConfigurationPropertySource"
    - sapientType: "ANY"
      valueType: "java.util.function.Predicate"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uniqueUuid27"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "iterableConfigurationPropertySource"
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            parameters: []
            values: []
          valueType: "java.util.List"
          genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "iterator2-CollectionContent"
      valueType: "java.util.Iterator"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "iterator2"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 87
      expression: "context.getDepth() == 0"
      range: "(87,7)-(87,29)"
      evaluatedAs: true
    - lineNumber: 94
      expression: "for-each(context.getSources())"
      range: "(94,45)-(94,64)"
      evaluatedAs: true
      internalMethodName: "checkNoUnboundElements"
    - lineNumber: 95
      expression: "source instanceof IterableConfigurationPropertySource"
      range: "(95,8)-(95,60)"
      evaluatedAs: true
      internalMethodName: "checkNoUnboundElements"
    - lineNumber: 95
      expression: "this.filter.apply(source)"
      range: "(95,65)-(95,89)"
      evaluatedAs: true
      internalMethodName: "checkNoUnboundElements"
    - lineNumber: 118
      expression: "name.isAncestorOf(candidate)"
      range: "(118,7)-(118,34)"
      evaluatedAs: true
      internalMethodName: "isUnbound"
    - lineNumber: 119
      expression: "!this.boundNames.contains(candidate)"
      range: "(119,11)-(119,46)"
      evaluatedAs: true
      internalMethodName: "isUnbound"
    - lineNumber: 126
      expression: "candidate.isLastElementIndexed()"
      range: "(126,7)-(126,38)"
      evaluatedAs: false
      internalMethodName: "isOverriddenCollectionElement"
    - lineNumber: 146
      expression: "i < candidate.getNumberOfElements()"
      range: "(146,19)-(146,53)"
      evaluatedAs: true
      internalMethodName: "getIndexed"
    - lineNumber: 147
      expression: "candidate.isNumericIndex(i)"
      range: "(147,8)-(147,34)"
      evaluatedAs: true
      internalMethodName: "getIndexed"
    - lineNumber: 131
      expression: "indexed != null"
      range: "(131,7)-(131,21)"
      evaluatedAs: true
      internalMethodName: "isOverriddenCollectionElement"
    - lineNumber: 133
      expression: "this.boundNames.contains(ConfigurationPropertyName.of(zeroethProperty))"
      range: "(133,8)-(133,78)"
      evaluatedAs: false
      internalMethodName: "isOverriddenCollectionElement"
    - lineNumber: 119
      expression: "!isOverriddenCollectionElement(candidate)"
      range: "(119,51)-(119,91)"
      evaluatedAs: true
      internalMethodName: "isUnbound"
    - lineNumber: 107
      expression: "for-each(filtered)"
      range: "(107,48)-(107,55)"
      evaluatedAs: false
      internalMethodName: "collectUnbound"
    - lineNumber: 99
      expression: "!unbound.isEmpty()"
      range: "(99,7)-(99,24)"
      evaluatedAs: false
      internalMethodName: "checkNoUnboundElements"
