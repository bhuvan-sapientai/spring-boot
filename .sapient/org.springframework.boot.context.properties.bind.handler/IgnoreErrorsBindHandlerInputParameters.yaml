---
modelFingerprint: "BE3E6C29A8196315921109A053AD843F"
targetClass:
  fullClassName: "org.springframework.boot.context.properties.bind.handler.IgnoreErrorsBindHandler"
methods:
- method:
    name: "onFailure"
    sourceCodeSignature: "Object onFailure(ConfigurationPropertyName name, Bindable<?>\
      \ target, BindContext context, Exception error)"
    returnType: "java.lang.Object"
    throwsExceptions:
    - "java.lang.Exception"
    parameters:
    - name: "name"
      type: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    - name: "target"
      type: "org.springframework.boot.context.properties.bind.Bindable"
    - name: "context"
      type: "org.springframework.boot.context.properties.bind.BindContext"
    - name: "error"
      type: "java.lang.Exception"
    instructionFingerprint: "8F42633A8B997867558FD76A1EFE05BE"
  paths:
  - pathId: "path1"
    testPathName: "onFailureWhenTargetGetValueIsNotNull"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindHandler)\
      \ : void"
    modelFingerprint: "C03C18EF3DC132099FDE59B9A54FA77B"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "FA558E0CD59D41001085A47EC3686204"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F1407DA2B6198C4F666DAC57AA87F49E"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "657A0D5935396A840B697C7476D3E736"
      valueUuid: "context"
    - type: "INPUT"
      name: "error"
      modelFingerprint: "35835E2BFCD9D5A7221AF881AC276EE2"
      valueUuid: "error"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "45DED21A09A1E07857992D008B5983B1"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:parent,message:uniqueUuid1):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "5C1D2E33D8EE42EE11D3247FB6D5AFFB"
      valueUuid: "target1"
      methodExercised:
        expression: "getValue():value"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "5C1D2E33D8EE42EE11D3247FB6D5AFFB"
      valueUuid: "target1"
      methodExercised:
        expression: "getValue():value"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.Supplier.get() : java.lang.Object"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.handler.IgnoreErrorsBindHandler"
        parameters:
        - name: "parent"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "parent"
      valueType: "org.springframework.boot.context.properties.bind.handler.IgnoreErrorsBindHandler"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Exception"
        parameters: []
      valueType: "java.lang.Exception"
      uuid: "error"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "parent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Parent must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "value"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "value"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
    branches:
    - lineNumber: 44
      expression: "target.getValue() != null"
      range: "(44,11)-(44,35)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "onFailureWhenTargetGetValueIsNull"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindHandler)\
      \ : void"
    modelFingerprint: "B99E9D1B148B2CCEA232CB23F8530669"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "FA558E0CD59D41001085A47EC3686204"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F1407DA2B6198C4F666DAC57AA87F49E"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "657A0D5935396A840B697C7476D3E736"
      valueUuid: "context"
    - type: "INPUT"
      name: "error"
      modelFingerprint: "35835E2BFCD9D5A7221AF881AC276EE2"
      valueUuid: "error"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "45DED21A09A1E07857992D008B5983B1"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:parent,message:uniqueUuid2):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F47E8DA923D7CC4B632C43231BBA8EAF"
      valueUuid: "target1"
      methodExercised:
        expression: "getValue():value"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B5832848421B6892B8D06BE61ADCD847"
      valueUuid: "object"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.handler.IgnoreErrorsBindHandler"
        parameters:
        - name: "parent"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "parent"
      valueType: "org.springframework.boot.context.properties.bind.handler.IgnoreErrorsBindHandler"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Exception"
        parameters: []
      valueType: "java.lang.Exception"
      uuid: "error"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "parent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Parent must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "NULL"
      valueType: "java.util.function.Supplier"
      uuid: "value"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object"
      fixed: true
    branches:
    - lineNumber: 44
      expression: "target.getValue() != null"
      range: "(44,11)-(44,35)"
      evaluatedAs: false
