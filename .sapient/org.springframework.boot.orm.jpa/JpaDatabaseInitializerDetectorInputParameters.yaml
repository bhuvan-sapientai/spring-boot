---
modelFingerprint: "89685197AC24D86416FD4F2839D04CBE"
targetClass:
  fullClassName: "org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector"
methods:
- method:
    name: "getDatabaseInitializerBeanTypes"
    sourceCodeSignature: "Set<Class<?>> getDatabaseInitializerBeanTypes()"
    returnType: "java.util.Set"
    genericReturnType: "java.lang.Class<?>"
    instructionFingerprint: "F09BEA70552AE5E9D8361B653C8BEC6E"
  paths:
  - pathId: "path1"
    testPathName: "getDatabaseInitializerBeanTypesWhenDeferred"
    constructorSignature: "<init>(org.springframework.core.env.Environment) : void"
    modelFingerprint: "29B575B52B4C2784F2C3F84F315F5AA6"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "E8ED2DF3066072F3BA6F654F8B0A085A"
      valueUuid: "target"
    - type: "FIELD"
      name: "environment"
      modelFingerprint: "148EEF10B61DB3355CADDB4C315C2A84"
      valueUuid: "environment"
      methodExercised:
        expression: "getProperty(key:uniqueUuid1,targetType:class,defaultValue:boolean):object"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "51B0CF3142F6E5635F9BBA45AF477858"
      valueUuid: "set"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector"
        parameters:
        - name: "environment"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.Environment"
            uuid: "environment"
      valueType: "org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "environment"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "java.lang.Boolean"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "spring.jpa.defer-datasource-initialization"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "boolean"
      valueType: "java.lang.Class"
      uuid: "class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "java.lang.Boolean"
      uuid: "boolean"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "CLASS"
          content: !<regular>
            value: "jakarta.persistence.EntityManagerFactory"
          valueType: "java.lang.Class"
          genericValueType: "jakarta.persistence.EntityManagerFactory"
          uuid: "uniqueUuid2"
          fixed: true
      valueType: "java.util.Set"
      genericValueType: "java.lang.Class<?>"
      uuid: "set"
    branches:
    - lineNumber: 50
      expression: "deferred"
      range: "(50,10)-(50,17)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "getDatabaseInitializerBeanTypesWhenNotDeferred"
    constructorSignature: "<init>(org.springframework.core.env.Environment) : void"
    modelFingerprint: "4649A36C0F4F8E08F90B2644ED9E8F10"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "E8ED2DF3066072F3BA6F654F8B0A085A"
      valueUuid: "target"
    - type: "FIELD"
      name: "environment"
      modelFingerprint: "669ED869CCAA90EB15C27E7DCB7124F7"
      valueUuid: "environment"
      methodExercised:
        expression: "getProperty(key:uniqueUuid3,targetType:class,defaultValue:boolean):object"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D25F12D96C9B560BAC8650252FF7B008"
      valueUuid: "set"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector"
        parameters:
        - name: "environment"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.Environment"
            uuid: "environment"
      valueType: "org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "environment"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "java.lang.Boolean"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "spring.jpa.defer-datasource-initialization"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "boolean"
      valueType: "java.lang.Class"
      uuid: "class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "java.lang.Boolean"
      uuid: "boolean"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.Class<?>"
      uuid: "set"
    branches:
    - lineNumber: 50
      expression: "deferred"
      range: "(50,10)-(50,17)"
      evaluatedAs: false
- method:
    name: "detectionComplete"
    sourceCodeSignature: "void detectionComplete(ConfigurableListableBeanFactory beanFactory,\
      \ Set<String> dataSourceInitializerNames)"
    returnType: "void"
    parameters:
    - name: "beanFactory"
      type: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
    - name: "dataSourceInitializerNames"
      type: "java.util.Set"
    instructionFingerprint: "D465A67F2895F920FAAED49731E92BD4"
  paths:
  - pathId: "path1"
    testPathName: "detectionCompleteWhenOtherInitializersIsEmpty"
    constructorSignature: "<init>(org.springframework.core.env.Environment) : void"
    modelFingerprint: "EFE1362F140A235292D9161519E4C5A3"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "113D9242D6655DB4D4D1BE191B749842"
      valueUuid: "target"
    - type: "INPUT"
      name: "beanFactory"
      modelFingerprint: "932A2700B3FDD585DF4F3E3794C50826"
      valueUuid: "beanFactory"
    - type: "INPUT"
      name: "dataSourceInitializerNames"
      modelFingerprint: "B9D633B4705AFD9F0CBBF8CDBB291935"
      valueUuid: "dataSourceInitializerNames"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector"
        parameters:
        - name: "environment"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.Environment"
            uuid: "environment"
      valueType: "org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.String"
      uuid: "dataSourceInitializerNames"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 63
      expression: "iterator.hasNext()"
      range: "(63,10)-(63,27)"
      evaluatedAs: false
      internalMethodName: "configureOtherInitializersToDependOnJpaInitializers"
    - lineNumber: 72
      expression: "for-each(otherInitializers)"
      range: "(72,38)-(72,54)"
      evaluatedAs: false
      internalMethodName: "configureOtherInitializersToDependOnJpaInitializers"
