---
modelFingerprint: "DE52F7CF1588A917CF2B82B75F2C9700"
targetClass:
  fullClassName: "org.springframework.boot.orm.jpa.JpaDependsOnDatabaseInitializationDetector"
methods:
- method:
    name: "getDependsOnDatabaseInitializationBeanTypes"
    sourceCodeSignature: "Set<Class<?>> getDependsOnDatabaseInitializationBeanTypes()"
    returnType: "java.util.Set"
    genericReturnType: "java.lang.Class<?>"
    instructionFingerprint: "6C916EB1845F1C197241B76B11C0DDAA"
  paths:
  - pathId: "path1"
    testPathName: "getDependsOnDatabaseInitializationBeanTypesWhenPostpone"
    constructorSignature: "<init>(org.springframework.core.env.Environment) : void"
    modelFingerprint: "656DCF201B8C553FE81A69F3B92A2FEC"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "E8ED2DF3066072F3BA6F654F8B0A085A"
      valueUuid: "target"
    - type: "FIELD"
      name: "environment"
      modelFingerprint: "148EEF10B61DB3355CADDB4C315C2A84"
      valueUuid: "environment"
      methodExercised:
        expression: "getProperty(key:uniqueUuid1,targetType:class,defaultValue:boolean):object"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D25F12D96C9B560BAC8650252FF7B008"
      valueUuid: "set"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.orm.jpa.JpaDependsOnDatabaseInitializationDetector"
        parameters:
        - name: "environment"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.Environment"
            uuid: "environment"
      valueType: "org.springframework.boot.orm.jpa.JpaDependsOnDatabaseInitializationDetector"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "environment"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "java.lang.Boolean"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "spring.jpa.defer-datasource-initialization"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "boolean"
      valueType: "java.lang.Class"
      uuid: "class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "java.lang.Boolean"
      uuid: "boolean"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.Class<?>"
      uuid: "set"
    branches:
    - lineNumber: 48
      expression: "postpone"
      range: "(48,10)-(48,17)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "getDependsOnDatabaseInitializationBeanTypesWhenNotPostpone"
    constructorSignature: "<init>(org.springframework.core.env.Environment) : void"
    modelFingerprint: "3E0ED92C1C4C005FFDB93CACA10A93A1"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "E8ED2DF3066072F3BA6F654F8B0A085A"
      valueUuid: "target"
    - type: "FIELD"
      name: "environment"
      modelFingerprint: "669ED869CCAA90EB15C27E7DCB7124F7"
      valueUuid: "environment"
      methodExercised:
        expression: "getProperty(key:uniqueUuid2,targetType:class,defaultValue:boolean):object"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "CFC801B646F47990F24D5D6FE0FDA235"
      valueUuid: "hashSet"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.orm.jpa.JpaDependsOnDatabaseInitializationDetector"
        parameters:
        - name: "environment"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.Environment"
            uuid: "environment"
      valueType: "org.springframework.boot.orm.jpa.JpaDependsOnDatabaseInitializationDetector"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "environment"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "java.lang.Boolean"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "spring.jpa.defer-datasource-initialization"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "boolean"
      valueType: "java.lang.Class"
      uuid: "class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "java.lang.Boolean"
      uuid: "boolean"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashSet"
        parameters: []
        values:
        - sapientType: "CLASS"
          content: !<regular>
            value: "jakarta.persistence.EntityManagerFactory"
          valueType: "java.lang.Class"
          genericValueType: "jakarta.persistence.EntityManagerFactory"
          uuid: "uniqueUuid3"
          fixed: true
        - sapientType: "CLASS"
          content: !<regular>
            value: "org.springframework.orm.jpa.AbstractEntityManagerFactoryBean"
          valueType: "java.lang.Class"
          genericValueType: "org.springframework.orm.jpa.AbstractEntityManagerFactoryBean"
          uuid: "uniqueUuid4"
          fixed: true
      valueType: "java.util.Set"
      genericValueType: "java.lang.Class<?>"
      uuid: "hashSet"
    branches:
    - lineNumber: 48
      expression: "postpone"
      range: "(48,10)-(48,17)"
      evaluatedAs: false
