---
modelFingerprint: "F869C2897012748FC75114B6BC53F053"
targetClass:
  fullClassName: "org.springframework.boot.util.Instantiator"
methods:
- method:
    name: "instantiate"
    sourceCodeSignature: "List<T> instantiate(Collection<String> names)"
    returnType: "java.util.List"
    genericReturnType: "java.lang.Object"
    parameters:
    - name: "names"
      type: "java.util.Collection"
    instructionFingerprint: "59923C17FDB5BAF160B17C495545CEFD"
  paths:
  - pathId: "path1"
    testPathName: "instantiateTest"
    constructorSignature: "<init>(java.lang.Class<?>,java.util.function.Consumer<org.springframework.boot.util.Instantiator$AvailableParameters>,org.springframework.boot.util.Instantiator$FailureHandler)\
      \ : void"
    modelFingerprint: "226705ABFF999409E492609F7E1F9AFD"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "08A0CDE0EC7021BF7B86791BB0470178"
      valueUuid: "target"
    - type: "INPUT"
      name: "names"
      modelFingerprint: "52A24458973D7A7584FC661F12C5B350"
      valueUuid: "names"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "EA54F15855D5606FEACEC078625CE671"
      methodExercised:
        expression: "instantiate(classLoader:uniqueUuid1,names:names):list"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "6D73048CBDA67D9D5B39F593039CAB64"
      valueUuid: "list"
    disabled: false
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.util.Instantiator"
        parameters:
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "type"
        - name: "availableParameters"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "availableParameters"
        - name: "failureHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.util.Instantiator$FailureHandler"
            uuid: "failureHandler"
      valueType: "org.springframework.boot.util.Instantiator"
      genericValueType: "java.lang.Object"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "java.lang.String"
      uuid: "names"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list"
    - sapientType: "NULL"
      valueType: "java.lang.ClassLoader"
      uuid: "uniqueUuid1"
      explicitCastNeeded: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "java.lang.String"
      uuid: "names"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list"
- method:
    name: "instantiate"
    sourceCodeSignature: "List<T> instantiate(ClassLoader classLoader, Collection<String>\
      \ names)"
    returnType: "java.util.List"
    genericReturnType: "java.lang.Object"
    parameters:
    - name: "classLoader"
      type: "java.lang.ClassLoader"
    - name: "names"
      type: "java.util.Collection"
    instructionFingerprint: "00F8A341C4FFACBE718642DF3F5A2A0F"
  paths:
  - pathId: "path2"
    testPathName: "instantiate1WhenArgsIsNotNull"
    constructorSignature: "<init>(java.lang.Class<?>,java.util.function.Consumer<org.springframework.boot.util.Instantiator$AvailableParameters>,org.springframework.boot.util.Instantiator$FailureHandler)\
      \ : void"
    modelFingerprint: "4124BA6B4544226383CB82F08EA1D4F5"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "08A0CDE0EC7021BF7B86791BB0470178"
      valueUuid: "target"
    - type: "INPUT"
      name: "classLoader"
      modelFingerprint: "C286DE215DE7563ED1CD0033A63BD833"
      valueUuid: "classLoader"
    - type: "INPUT"
      name: "names"
      modelFingerprint: "06F3685C37254CA4166AF41B4BF7A859"
      valueUuid: "names"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F07CB7A066EBE73D47968254C715633D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:names,message:uniqueUuid2):void2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F69C7EC6629A801DD4BA8C1F5317C41D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "isAssignable(superType:type,subType:class):void3"
        staticAccess: true
    - type: "STATIC"
      name: "ReflectionUtils.class"
      modelFingerprint: "DF2D73FC74598E86A25A3760435FFE95"
      valueUuid: "ReflectionUtils.class"
      methodExercised:
        expression: "makeAccessible(ctor:constructor):void5"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "BB521B0437F53D2D5D90EEAE91C44524"
      valueUuid: "list3"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.util.Instantiator"
        parameters:
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "type"
        - name: "availableParameters"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "availableParameters"
        - name: "failureHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.util.Instantiator$FailureHandler"
            uuid: "failureHandler"
      valueType: "org.springframework.boot.util.Instantiator"
      genericValueType: "java.lang.Object"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "namesItem1"
          valueType: "java.lang.String"
          uuid: "string"
          collectionUuid: "names"
      valueType: "java.util.Collection"
      genericValueType: "java.lang.String"
      uuid: "names"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "namesItem1"
          valueType: "java.lang.String"
          uuid: "string"
          collectionUuid: "names"
      valueType: "java.util.Collection"
      genericValueType: "java.lang.String"
      uuid: "names"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Names must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "type"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ReflectionUtils"
      uuid: "ReflectionUtils.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "java.lang.reflect.Constructor"
      uuid: "constructor"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list3"
    branches:
    - lineNumber: 159
      expression: "for-each(constructors)"
      range: "(159,37)-(159,48)"
      evaluatedAs: true
      internalMethodName: "instantiate"
    - lineNumber: 171
      expression: "i < parameterTypes.length"
      range: "(171,19)-(171,43)"
      evaluatedAs: false
      internalMethodName: "getArgs"
    - lineNumber: 161
      expression: "args != null"
      range: "(161,8)-(161,19)"
      evaluatedAs: true
      internalMethodName: "instantiate"
  - pathId: "path1"
    testPathName: "instantiate1WhenParameterIsNullAndArgsIsNull"
    constructorSignature: "<init>(java.lang.Class<?>,java.util.function.Consumer<org.springframework.boot.util.Instantiator$AvailableParameters>,org.springframework.boot.util.Instantiator$FailureHandler)\
      \ : void"
    modelFingerprint: "B49F6183DEC4699691B482D4F98BB325"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "48D3ACCBE5261BAC453C7C83C39B953B"
      valueUuid: "target"
    - type: "INPUT"
      name: "classLoader"
      modelFingerprint: "C286DE215DE7563ED1CD0033A63BD833"
      valueUuid: "classLoader"
    - type: "INPUT"
      name: "names"
      modelFingerprint: "06F3685C37254CA4166AF41B4BF7A859"
      valueUuid: "names"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F07CB7A066EBE73D47968254C715633D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:names,message:uniqueUuid3):void2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "610A5AE6FB34EE1F7437B41EAC63AA07"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "isAssignable(superType:type,subType:class):void3"
        staticAccess: true
    - type: "FIELD"
      name: "failureHandler"
      modelFingerprint: "2AE47048B32D2A74F7176BBC0A0E8E16"
      valueUuid: "failureHandler"
      methodExercised:
        expression: "handleFailure(type:type,implementationName:string4,failure:throwable):void5"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "BB521B0437F53D2D5D90EEAE91C44524"
      valueUuid: "list3"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.util.Instantiator"
        parameters:
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "type"
        - name: "availableParameters"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "availableParameters"
        - name: "failureHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.util.Instantiator$FailureHandler"
            uuid: "failureHandler"
      valueType: "org.springframework.boot.util.Instantiator"
      genericValueType: "java.lang.Object"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "namesItem1"
          valueType: "java.lang.String"
          uuid: "string"
          collectionUuid: "names"
      valueType: "java.util.Collection"
      genericValueType: "java.lang.String"
      uuid: "names"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "namesItem1"
          valueType: "java.lang.String"
          uuid: "string"
          collectionUuid: "names"
      valueType: "java.util.Collection"
      genericValueType: "java.lang.String"
      uuid: "names"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Names must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "type"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.util.Instantiator$FailureHandler"
      uuid: "failureHandler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "type"
    - sapientType: "BASIC"
      content: !<regular>
        value: "implementationName1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "throwable"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list3"
    branches:
    - lineNumber: 159
      expression: "for-each(constructors)"
      range: "(159,37)-(159,48)"
      evaluatedAs: true
      internalMethodName: "instantiate"
    - lineNumber: 171
      expression: "i < parameterTypes.length"
      range: "(171,19)-(171,43)"
      evaluatedAs: true
      internalMethodName: "getArgs"
    - lineNumber: 182
      expression: "for-each(this.availableParameters.entrySet())"
      range: "(182,64)-(182,98)"
      evaluatedAs: false
      internalMethodName: "getAvailableParameter"
    - lineNumber: 173
      expression: "parameter == null"
      range: "(173,8)-(173,24)"
      evaluatedAs: true
      internalMethodName: "getArgs"
    - lineNumber: 161
      expression: "args != null"
      range: "(161,8)-(161,19)"
      evaluatedAs: false
      internalMethodName: "instantiate"
- method:
    name: "instantiateTypes"
    sourceCodeSignature: "List<T> instantiateTypes(Collection<Class<?>> types)"
    returnType: "java.util.List"
    genericReturnType: "java.lang.Object"
    parameters:
    - name: "types"
      type: "java.util.Collection"
    instructionFingerprint: "D094A4C5B8AF2A40E6489668A441B044"
  paths:
  - pathId: "path2"
    testPathName: "instantiateTypesWhenArgsIsNotNull"
    constructorSignature: "<init>(java.lang.Class<?>,java.util.function.Consumer<org.springframework.boot.util.Instantiator$AvailableParameters>,org.springframework.boot.util.Instantiator$FailureHandler)\
      \ : void"
    modelFingerprint: "CAABDF2C838B26221F5AD2814643CE46"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "08A0CDE0EC7021BF7B86791BB0470178"
      valueUuid: "target"
    - type: "INPUT"
      name: "types"
      modelFingerprint: "F0D32D2D5724CCF69A1690C8321DA9EF"
      valueUuid: "types"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "FDBEBABB92AE0AAEA0195CDBE6F73FE6"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:types,message:uniqueUuid4):void2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F69C7EC6629A801DD4BA8C1F5317C41D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "isAssignable(superType:type,subType:class2):void3"
        staticAccess: true
    - type: "STATIC"
      name: "ReflectionUtils.class"
      modelFingerprint: "DF2D73FC74598E86A25A3760435FFE95"
      valueUuid: "ReflectionUtils.class"
      methodExercised:
        expression: "makeAccessible(ctor:constructor):void5"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "BB521B0437F53D2D5D90EEAE91C44524"
      valueUuid: "list3"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.util.Instantiator"
        parameters:
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "type"
        - name: "availableParameters"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "availableParameters"
        - name: "failureHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.util.Instantiator$FailureHandler"
            uuid: "failureHandler"
      valueType: "org.springframework.boot.util.Instantiator"
      genericValueType: "java.lang.Object"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "CLASS"
          content: !<regular>
            value: "java.lang.Object"
          valueType: "java.lang.Class"
          genericValueType: "?"
          uuid: "class"
          collectionUuid: "types"
      valueType: "java.util.Collection"
      genericValueType: "java.lang.Class<?>"
      uuid: "types"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "CLASS"
          content: !<regular>
            value: "java.lang.Object"
          valueType: "java.lang.Class"
          genericValueType: "?"
          uuid: "class"
          collectionUuid: "types"
      valueType: "java.util.Collection"
      genericValueType: "java.lang.Class<?>"
      uuid: "types"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Types must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "type"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ReflectionUtils"
      uuid: "ReflectionUtils.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "java.lang.reflect.Constructor"
      uuid: "constructor"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list3"
    branches:
    - lineNumber: 159
      expression: "for-each(constructors)"
      range: "(159,37)-(159,48)"
      evaluatedAs: true
      internalMethodName: "instantiate"
    - lineNumber: 171
      expression: "i < parameterTypes.length"
      range: "(171,19)-(171,43)"
      evaluatedAs: false
      internalMethodName: "getArgs"
    - lineNumber: 161
      expression: "args != null"
      range: "(161,8)-(161,19)"
      evaluatedAs: true
      internalMethodName: "instantiate"
  - pathId: "path1"
    testPathName: "instantiateTypesWhenParameterIsNullAndArgsIsNull"
    constructorSignature: "<init>(java.lang.Class<?>,java.util.function.Consumer<org.springframework.boot.util.Instantiator$AvailableParameters>,org.springframework.boot.util.Instantiator$FailureHandler)\
      \ : void"
    modelFingerprint: "133565629FFC0C51E84E58D36A16EE29"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "48D3ACCBE5261BAC453C7C83C39B953B"
      valueUuid: "target"
    - type: "INPUT"
      name: "types"
      modelFingerprint: "F0D32D2D5724CCF69A1690C8321DA9EF"
      valueUuid: "types"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "FDBEBABB92AE0AAEA0195CDBE6F73FE6"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:types,message:uniqueUuid5):void2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "610A5AE6FB34EE1F7437B41EAC63AA07"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "isAssignable(superType:type,subType:class2):void3"
        staticAccess: true
    - type: "FIELD"
      name: "failureHandler"
      modelFingerprint: "2AE47048B32D2A74F7176BBC0A0E8E16"
      valueUuid: "failureHandler"
      methodExercised:
        expression: "handleFailure(type:type,implementationName:string3,failure:throwable):void5"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "BB521B0437F53D2D5D90EEAE91C44524"
      valueUuid: "list3"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.util.Instantiator"
        parameters:
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "type"
        - name: "availableParameters"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "availableParameters"
        - name: "failureHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.util.Instantiator$FailureHandler"
            uuid: "failureHandler"
      valueType: "org.springframework.boot.util.Instantiator"
      genericValueType: "java.lang.Object"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "CLASS"
          content: !<regular>
            value: "java.lang.Object"
          valueType: "java.lang.Class"
          genericValueType: "?"
          uuid: "class"
          collectionUuid: "types"
      valueType: "java.util.Collection"
      genericValueType: "java.lang.Class<?>"
      uuid: "types"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "CLASS"
          content: !<regular>
            value: "java.lang.Object"
          valueType: "java.lang.Class"
          genericValueType: "?"
          uuid: "class"
          collectionUuid: "types"
      valueType: "java.util.Collection"
      genericValueType: "java.lang.Class<?>"
      uuid: "types"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Types must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "type"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.util.Instantiator$FailureHandler"
      uuid: "failureHandler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "type"
    - sapientType: "BASIC"
      content: !<regular>
        value: "implementationName1"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "throwable"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.Object"
      uuid: "list3"
    branches:
    - lineNumber: 159
      expression: "for-each(constructors)"
      range: "(159,37)-(159,48)"
      evaluatedAs: true
      internalMethodName: "instantiate"
    - lineNumber: 171
      expression: "i < parameterTypes.length"
      range: "(171,19)-(171,43)"
      evaluatedAs: true
      internalMethodName: "getArgs"
    - lineNumber: 182
      expression: "for-each(this.availableParameters.entrySet())"
      range: "(182,64)-(182,98)"
      evaluatedAs: false
      internalMethodName: "getAvailableParameter"
    - lineNumber: 173
      expression: "parameter == null"
      range: "(173,8)-(173,24)"
      evaluatedAs: true
      internalMethodName: "getArgs"
    - lineNumber: 161
      expression: "args != null"
      range: "(161,8)-(161,19)"
      evaluatedAs: false
      internalMethodName: "instantiate"
