---
modelFingerprint: "88390C63F1CD5AC121768CBE3D8C4696"
methods:
- method:
    name: "analyze"
    signature: "analyze(java.lang.Throwable,org.springframework.web.util.pattern.PatternParseException)\
      \ : org.springframework.boot.diagnostics.FailureAnalysis"
    sourceCodeSignature: "FailureAnalysis analyze(Throwable rootFailure, PatternParseException\
      \ cause)"
    instructionFingerprint: "B1229F38583E114827A206DDAA2C3CA6"
  paths:
  - pathId: "path1"
    testPathName: "analyze2Test"
    constructorSignature: "<init>() : void"
    modelFingerprint: "E4CCE546CB65A66D966B5B0E004A317E"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "rootFailure"
      modelFingerprint: "74AFC98C2E3A647A785F57191E4F7E6A"
      index: 2
      valueUuid: "analyze_throwable1"
    - type: "INPUT"
      name: "cause"
      modelFingerprint: "6067D3CCD05F72C2EE378F17294C8D1A"
      index: 3
      valueUuid: "analyze_patternParseException1"
    - type: "LOCAL_VARIABLE"
      name: "cause"
      modelFingerprint: "283AFF09825D1F78B029C127BEB514AF"
      index: 4
      valueUuid: "analyze_patternParseException1"
      methodExercised:
        target: "cause"
        name: "toDetailedString"
        parameters: []
        signature: "toDetailedString(): String"
        returnValueUuid: "analyze_string1"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "F9A5D83C6FEFDEC0042AACD971BF412B"
      index: 5
      valueUuid: "analyze_failureAnalysis1"
    uuid: "61fb4ac6-aef4-3600-ac10-5fdf40761c4c"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.analyzer.PatternParseFailureAnalyzer"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.diagnostics.analyzer.PatternParseFailureAnalyzer"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Throwable"
      uuid: "analyze_throwable1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.web.util.pattern.PatternParseException"
      uuid: "analyze_patternParseException1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.web.util.pattern.PatternParseException"
      uuid: "analyze_patternParseException1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "analyze_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.FailureAnalysis"
        parameters:
        - name: "description"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Invalid mapping pattern detected:\\nA"
            valueType: "java.lang.String"
            uuid: "analyze_string2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "action"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Fix this pattern in your application or switch to the legacy\
                \ parser implementation with 'spring.mvc.pathmatch.matching-strategy=ant_path_matcher'."
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "cause"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.web.util.pattern.PatternParseException"
            uuid: "analyze_patternParseException1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "analyze_failureAnalysis1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
