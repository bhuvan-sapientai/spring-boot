---
modelFingerprint: "0267FEAB510C0DF8D4D8C74F81CDA0E3"
targetClass:
  fullClassName: "org.springframework.boot.diagnostics.analyzer.UnboundConfigurationPropertyFailureAnalyzer"
methods:
- method:
    name: "analyze"
    sourceCodeSignature: "FailureAnalysis analyze(Throwable rootFailure, UnboundConfigurationPropertiesException\
      \ cause)"
    returnType: "org.springframework.boot.diagnostics.FailureAnalysis"
    parameters:
    - name: "rootFailure"
      type: "java.lang.Throwable"
    - name: "cause"
      type: "org.springframework.boot.context.properties.bind.UnboundConfigurationPropertiesException"
    instructionFingerprint: "5A4B3255D5F6656C675C87E8E17516E2"
  paths:
  - pathId: "path4"
    testPathName: "analyze2WhenTypeNotIsInstanceFailureThrowsNullPointerException"
    constructorSignature: "<init>() : void"
    modelFingerprint: "2C52E0FECAE81F4FF431E8E72BD525E8"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "rootFailure"
      modelFingerprint: "338AC576BBDBA3AE31EE9588E71A9C9D"
      valueUuid: "rootFailure"
    - type: "INPUT"
      name: "cause"
      modelFingerprint: "CD94E14FA3424270A5ED81C13FD941E6"
      valueUuid: "cause"
    - type: "LOCAL_VARIABLE"
      name: "cause"
      modelFingerprint: "16D02F9A5BC5700BE0C7D5040A52AE61"
      valueUuid: "throwable2"
      methodExercised:
        expression: "getTarget():uniqueUuid1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "085DC12750BAC37E63C370C4A90AE3FA"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.analyzer.UnboundConfigurationPropertyFailureAnalyzer"
        parameters: []
      valueType: "org.springframework.boot.diagnostics.analyzer.UnboundConfigurationPropertyFailureAnalyzer"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "rootFailure"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.UnboundConfigurationPropertiesException"
      uuid: "cause"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.bind.BindException"
      uuid: "throwable2"
      fixed: true
      explicitCastNeeded: true
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.NullPointerException"
        parameters: []
      valueType: "java.lang.NullPointerException"
      uuid: "uniqueUuid1"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.NullPointerException"
        parameters: []
      valueType: "java.lang.NullPointerException"
      uuid: "expectedResult"
    branches:
    - lineNumber: 58
      expression: "failure != null"
      range: "(58,10)-(58,24)"
      evaluatedAs: true
      internalMethodName: "findCause"
    - lineNumber: 59
      expression: "type.isInstance(failure)"
      range: "(59,8)-(59,31)"
      evaluatedAs: false
      internalMethodName: "findCause"
  - pathId: "path1"
    testPathName: "analyze2WhenPropertyIsNotNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "08A124217B9412C46EEDDC36B2C387F2"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "rootFailure"
      modelFingerprint: "789043DBF7904D3AE8B59F393CAE39DC"
      valueUuid: "rootFailure"
    - type: "INPUT"
      name: "cause"
      modelFingerprint: "CD94E14FA3424270A5ED81C13FD941E6"
      valueUuid: "cause"
    - type: "LOCAL_VARIABLE"
      name: "cause"
      modelFingerprint: "F4AD74C39F26075002F3699DE87742F3"
      valueUuid: "rootFailure"
      methodExercised:
        expression: "getTarget():target1"
    - type: "LOCAL_VARIABLE"
      name: "exception"
      modelFingerprint: "61CF6FE396AFE4DB6221160D37CE4885"
      valueUuid: "cause"
      methodExercised:
        expression: "getUnboundProperties():unboundProperties"
    - type: "LOCAL_VARIABLE"
      name: "property"
      modelFingerprint: "A7493A968B97B720EA7F4BAB70E8064B"
      valueUuid: "object"
      methodExercised:
        expression: "getName():name"
    - type: "LOCAL_VARIABLE"
      name: "property"
      modelFingerprint: "CF30B2BB238B62F03999D67C921427BD"
      valueUuid: "object"
      methodExercised:
        expression: "getValue():value"
    - type: "LOCAL_VARIABLE"
      name: "property"
      modelFingerprint: "0F83AA213D606D7159C4DA4049BF71AC"
      valueUuid: "object"
      methodExercised:
        expression: "getOrigin():origin"
    - type: "LOCAL_VARIABLE"
      name: "exception"
      modelFingerprint: "BCC5CB7EA2526176953E3A4D5E2DAE98"
      valueUuid: "cause"
      methodExercised:
        expression: "getMessage():message"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "90B151E79E2AA5E7D0F82A70A5FC4D76"
      valueUuid: "failureAnalysis"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isInstance(java.lang.Throwable)\
        \ : boolean"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.analyzer.UnboundConfigurationPropertyFailureAnalyzer"
        parameters: []
      valueType: "org.springframework.boot.diagnostics.analyzer.UnboundConfigurationPropertyFailureAnalyzer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindException"
      uuid: "rootFailure"
      explicitCastNeeded: true
      explicitCastForOverloadedMethods: "java.lang.Throwable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.UnboundConfigurationPropertiesException"
      uuid: "cause"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindException"
      uuid: "rootFailure"
      explicitCastNeeded: true
      explicitCastForOverloadedMethods: "java.lang.Throwable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
      nameForMock: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.UnboundConfigurationPropertiesException"
      uuid: "cause"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashSet"
        parameters: []
        values:
        - sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "name"
                nameForMock: "name"
            - name: "value"
              value:
                sapientType: "MOCK"
                valueType: "java.lang.Object"
                uuid: "value"
                nameForMock: "value"
            - name: "origin"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "origin"
                nameForMock: "origin"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "object"
          collectionUuid: "unboundProperties"
      valueType: "java.util.Set"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "unboundProperties"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
            nameForMock: "name"
        - name: "value"
          value:
            sapientType: "MOCK"
            valueType: "java.lang.Object"
            uuid: "value"
            nameForMock: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
            nameForMock: "origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "object"
      collectionUuid: "unboundProperties"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
      nameForMock: "name"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
            nameForMock: "name"
        - name: "value"
          value:
            sapientType: "MOCK"
            valueType: "java.lang.Object"
            uuid: "value"
            nameForMock: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
            nameForMock: "origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "object"
      collectionUuid: "unboundProperties"
    - sapientType: "MOCK"
      valueType: "java.lang.Object"
      uuid: "value"
      nameForMock: "value"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
            nameForMock: "name"
        - name: "value"
          value:
            sapientType: "MOCK"
            valueType: "java.lang.Object"
            uuid: "value"
            nameForMock: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
            nameForMock: "origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "object"
      collectionUuid: "unboundProperties"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin"
      nameForMock: "origin"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.UnboundConfigurationPropertiesException"
      uuid: "cause"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "message"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.FailureAnalysis"
        parameters:
        - name: "description"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "string7"
        - name: "action"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Update your application's configuration"
            valueType: "java.lang.String"
            uuid: "uniqueUuid2"
            fixed: true
        - name: "cause"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindException"
            uuid: "rootFailure"
            explicitCastNeeded: true
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "failureAnalysis"
      fixed: true
    branches:
    - lineNumber: 58
      expression: "failure != null"
      range: "(58,10)-(58,24)"
      evaluatedAs: true
      internalMethodName: "findCause"
    - lineNumber: 59
      expression: "type.isInstance(failure)"
      range: "(59,8)-(59,31)"
      evaluatedAs: true
      internalMethodName: "findCause"
    - lineNumber: 44
      expression: "for-each(exception.getUnboundProperties())"
      range: "(44,41)-(44,72)"
      evaluatedAs: true
      internalMethodName: "analyzeUnboundConfigurationPropertiesException"
    - lineNumber: 52
      expression: "property != null"
      range: "(52,7)-(52,22)"
      evaluatedAs: true
      internalMethodName: "buildDescription"
