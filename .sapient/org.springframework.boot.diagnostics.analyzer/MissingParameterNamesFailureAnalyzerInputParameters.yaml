---
modelFingerprint: "63820665856AE55FB4B4A06959E1FA5C"
targetClass:
  fullClassName: "org.springframework.boot.diagnostics.analyzer.MissingParameterNamesFailureAnalyzer"
methods:
- method:
    name: "analyze"
    sourceCodeSignature: "FailureAnalysis analyze(Throwable failure)"
    returnType: "org.springframework.boot.diagnostics.FailureAnalysis"
    parameters:
    - name: "failure"
      type: "java.lang.Throwable"
    instructionFingerprint: "EC83C7451DA61A7C13EA4D8982C5E741"
  paths:
  - pathId: "path1"
    testPathName: "analyzeTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "150C2CA9DE6553116BAD9BB2D35BDBDE"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "failure"
      modelFingerprint: "AFF4BBFAF9C79CD0A0457F4EE6D5F2A0"
      valueUuid: "failure"
    - type: "STATIC"
      name: "MissingParameterNamesFailureAnalyzer.class"
      modelFingerprint: "9ED0905F7F42252D76D7739CAFF11E88"
      valueUuid: "MissingParameterNamesFailureAnalyzer.class"
      methodExercised:
        expression: "analyzeForMissingParameters(failure:failure):failureAnalysis"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C428FAD79898BD8E8DA9EA20EB175D74"
      valueUuid: "failureAnalysis"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.analyzer.MissingParameterNamesFailureAnalyzer"
        parameters: []
      valueType: "org.springframework.boot.diagnostics.analyzer.MissingParameterNamesFailureAnalyzer"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "failure"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.diagnostics.analyzer.MissingParameterNamesFailureAnalyzer"
      uuid: "MissingParameterNamesFailureAnalyzer.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "failureAnalysis"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "failure"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "failureAnalysis"
- method:
    name: "analyzeForMissingParameters"
    sourceCodeSignature: "FailureAnalysis analyzeForMissingParameters(Throwable failure)"
    returnType: "org.springframework.boot.diagnostics.FailureAnalysis"
    parameters:
    - name: "failure"
      type: "java.lang.Throwable"
    instructionFingerprint: "EFEF322C0D31B0F862454E3980BD0DC9"
  paths:
  - pathId: "path4"
    testPathName: "analyzeForMissingParametersWhenAnalysisIsNotNull"
    modelFingerprint: "2890BC22B4DEC51371D4E87773E05C34"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "failure"
      modelFingerprint: "AFF4BBFAF9C79CD0A0457F4EE6D5F2A0"
      valueUuid: "failure"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C428FAD79898BD8E8DA9EA20EB175D74"
      valueUuid: "failureAnalysis"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Throwable.getStackTrace() : java.lang.StackTraceElement[]"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "failure"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "failureAnalysis"
    branches:
    - lineNumber: 64
      expression: "cause != null"
      range: "(64,7)-(64,19)"
      evaluatedAs: true
      internalMethodName: "analyzeForMissingParameters"
    - lineNumber: 64
      expression: "seen.add(cause)"
      range: "(64,24)-(64,38)"
      evaluatedAs: true
      internalMethodName: "analyzeForMissingParameters"
    - lineNumber: 84
      expression: "message != null"
      range: "(84,10)-(84,24)"
      evaluatedAs: true
      internalMethodName: "isSpringParametersException"
    - lineNumber: 84
      expression: "message.contains(USE_PARAMETERS_MESSAGE)"
      range: "(84,29)-(84,68)"
      evaluatedAs: true
      internalMethodName: "isSpringParametersException"
    - lineNumber: 89
      expression: "elements.length > 0"
      range: "(89,10)-(89,28)"
      evaluatedAs: true
      internalMethodName: "isSpringException"
    - lineNumber: 93
      expression: "className != null"
      range: "(93,10)-(93,26)"
      evaluatedAs: true
      internalMethodName: "isSpringClass"
    - lineNumber: 93
      expression: "className.startsWith(\\\"org.springframework.\\\")"
      range: "(93,31)-(93,74)"
      evaluatedAs: false
      internalMethodName: "isSpringClass"
    - lineNumber: 89
      expression: "isSpringClass(elements[0].getClassName())"
      range: "(89,33)-(89,73)"
      evaluatedAs: false
      internalMethodName: "isSpringException"
    - lineNumber: 84
      expression: "isSpringException(failure)"
      range: "(84,73)-(84,98)"
      evaluatedAs: false
      internalMethodName: "isSpringParametersException"
    - lineNumber: 65
      expression: "isSpringParametersException(cause)"
      range: "(65,8)-(65,41)"
      evaluatedAs: false
      internalMethodName: "analyzeForMissingParameters"
    - lineNumber: 69
      expression: "analysis != null"
      range: "(69,8)-(69,23)"
      evaluatedAs: true
      internalMethodName: "analyzeForMissingParameters"
    calledSomeStaticInternalMethod: true
  - pathId: "path1"
    testPathName: "analyzeForMissingParametersWhenStringUtilsHasTextMessage"
    modelFingerprint: "4F3DE1B719B5EB4C7FEA021E6BFA7467"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "failure"
      modelFingerprint: "AFF4BBFAF9C79CD0A0457F4EE6D5F2A0"
      valueUuid: "failure"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "4934B9B0D973DBEBF6409D45EE0D8A4A"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:message):boolean4"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "28A5CC556101CF4E40B920C0CC26D650"
      valueUuid: "failureAnalysis"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Throwable.getStackTrace() : java.lang.StackTraceElement[]"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "failure"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Ensure that the compiler uses the '-parameters' flag"
      valueType: "java.lang.String"
      uuid: "message"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.FailureAnalysis"
        parameters:
        - name: "description"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Ensure that the compiler uses the '-parameters' flag:\\n\\n\
                \    Resulting Failure: java.lang.Throwable: Ensure that the compiler\
                \ uses the '-parameters' flag"
            valueType: "java.lang.String"
            uuid: "string11"
        - name: "action"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Ensure that your compiler is configured to use the '-parameters'\
                \ flag.\\nYou may need to update both your build tool settings as\
                \ well as your IDE.\\n(See https://github.com/spring-projects/spring-framework/wiki/Upgrading-to-Spring-Framework-6.x#parameter-name-retention)\\\
                n"
            valueType: "java.lang.String"
            uuid: "string"
            fixed: true
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Throwable"
              parameters: []
            valueType: "java.lang.Throwable"
            uuid: "failure"
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "failureAnalysis"
      fixed: true
    branches:
    - lineNumber: 64
      expression: "cause != null"
      range: "(64,7)-(64,19)"
      evaluatedAs: true
      internalMethodName: "analyzeForMissingParameters"
    - lineNumber: 64
      expression: "seen.add(cause)"
      range: "(64,24)-(64,38)"
      evaluatedAs: true
      internalMethodName: "analyzeForMissingParameters"
    - lineNumber: 84
      expression: "message != null"
      range: "(84,10)-(84,24)"
      evaluatedAs: true
      internalMethodName: "isSpringParametersException"
    - lineNumber: 84
      expression: "message.contains(USE_PARAMETERS_MESSAGE)"
      range: "(84,29)-(84,68)"
      evaluatedAs: true
      internalMethodName: "isSpringParametersException"
    - lineNumber: 89
      expression: "elements.length > 0"
      range: "(89,10)-(89,28)"
      evaluatedAs: true
      internalMethodName: "isSpringException"
    - lineNumber: 93
      expression: "className != null"
      range: "(93,10)-(93,26)"
      evaluatedAs: true
      internalMethodName: "isSpringClass"
    - lineNumber: 93
      expression: "className.startsWith(\\\"org.springframework.\\\")"
      range: "(93,31)-(93,74)"
      evaluatedAs: true
      internalMethodName: "isSpringClass"
    - lineNumber: 89
      expression: "isSpringClass(elements[0].getClassName())"
      range: "(89,33)-(89,73)"
      evaluatedAs: true
      internalMethodName: "isSpringException"
    - lineNumber: 84
      expression: "isSpringException(failure)"
      range: "(84,73)-(84,98)"
      evaluatedAs: true
      internalMethodName: "isSpringParametersException"
    - lineNumber: 65
      expression: "isSpringParametersException(cause)"
      range: "(65,8)-(65,41)"
      evaluatedAs: true
      internalMethodName: "analyzeForMissingParameters"
    - lineNumber: 98
      expression: "rootFailure != cause"
      range: "(98,7)-(98,26)"
      evaluatedAs: true
      internalMethodName: "getAnalysis"
    - lineNumber: 106
      expression: "StringUtils.hasText(message)"
      range: "(106,37)-(106,64)"
      evaluatedAs: true
      internalMethodName: "getExceptionTypeAndMessage"
    calledSomeStaticInternalMethod: true
  - pathId: "path2"
    testPathName: "analyzeForMissingParametersWhenStringUtilsNotHasTextMessage"
    modelFingerprint: "87B2CCA1A067C72EA171B9C20DDC47AC"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "failure"
      modelFingerprint: "AFF4BBFAF9C79CD0A0457F4EE6D5F2A0"
      valueUuid: "failure"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "BF16A0A7A55F9FD900E6C62C4E6B6137"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasText(str:message):boolean4"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7AC4973BC0F225D1CFDFFABD9F6A221F"
      valueUuid: "failureAnalysis"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Throwable.getStackTrace() : java.lang.StackTraceElement[]"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "failure"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Ensure that the compiler uses the '-parameters' flag"
      valueType: "java.lang.String"
      uuid: "message"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.FailureAnalysis"
        parameters:
        - name: "description"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Ensure that the compiler uses the '-parameters' flag:\\n\\n\
                \    Resulting Failure: java.lang.Throwable"
            valueType: "java.lang.String"
            uuid: "string10"
        - name: "action"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Ensure that your compiler is configured to use the '-parameters'\
                \ flag.\\nYou may need to update both your build tool settings as\
                \ well as your IDE.\\n(See https://github.com/spring-projects/spring-framework/wiki/Upgrading-to-Spring-Framework-6.x#parameter-name-retention)\\\
                n"
            valueType: "java.lang.String"
            uuid: "string"
            fixed: true
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Throwable"
              parameters: []
            valueType: "java.lang.Throwable"
            uuid: "failure"
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "failureAnalysis"
      fixed: true
    branches:
    - lineNumber: 64
      expression: "cause != null"
      range: "(64,7)-(64,19)"
      evaluatedAs: true
      internalMethodName: "analyzeForMissingParameters"
    - lineNumber: 64
      expression: "seen.add(cause)"
      range: "(64,24)-(64,38)"
      evaluatedAs: true
      internalMethodName: "analyzeForMissingParameters"
    - lineNumber: 84
      expression: "message != null"
      range: "(84,10)-(84,24)"
      evaluatedAs: true
      internalMethodName: "isSpringParametersException"
    - lineNumber: 84
      expression: "message.contains(USE_PARAMETERS_MESSAGE)"
      range: "(84,29)-(84,68)"
      evaluatedAs: true
      internalMethodName: "isSpringParametersException"
    - lineNumber: 89
      expression: "elements.length > 0"
      range: "(89,10)-(89,28)"
      evaluatedAs: true
      internalMethodName: "isSpringException"
    - lineNumber: 93
      expression: "className != null"
      range: "(93,10)-(93,26)"
      evaluatedAs: true
      internalMethodName: "isSpringClass"
    - lineNumber: 93
      expression: "className.startsWith(\\\"org.springframework.\\\")"
      range: "(93,31)-(93,74)"
      evaluatedAs: true
      internalMethodName: "isSpringClass"
    - lineNumber: 89
      expression: "isSpringClass(elements[0].getClassName())"
      range: "(89,33)-(89,73)"
      evaluatedAs: true
      internalMethodName: "isSpringException"
    - lineNumber: 84
      expression: "isSpringException(failure)"
      range: "(84,73)-(84,98)"
      evaluatedAs: true
      internalMethodName: "isSpringParametersException"
    - lineNumber: 65
      expression: "isSpringParametersException(cause)"
      range: "(65,8)-(65,41)"
      evaluatedAs: true
      internalMethodName: "analyzeForMissingParameters"
    - lineNumber: 98
      expression: "rootFailure != cause"
      range: "(98,7)-(98,26)"
      evaluatedAs: true
      internalMethodName: "getAnalysis"
    - lineNumber: 106
      expression: "StringUtils.hasText(message)"
      range: "(106,37)-(106,64)"
      evaluatedAs: false
      internalMethodName: "getExceptionTypeAndMessage"
    calledSomeStaticInternalMethod: true
  - pathId: "path5"
    testPathName: "analyzeForMissingParametersWhenCauseGetSuppressedIsNotEmptyAndAnalysisIsNotNull"
    modelFingerprint: "0A6BF4F3826CECD9517B935744467872"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "failure"
      modelFingerprint: "AFF4BBFAF9C79CD0A0457F4EE6D5F2A0"
      valueUuid: "failure"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C428FAD79898BD8E8DA9EA20EB175D74"
      valueUuid: "failureAnalysis2"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Throwable.getStackTrace() : java.lang.StackTraceElement[]"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "failure"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "failureAnalysis2"
    branches:
    - lineNumber: 64
      expression: "cause != null"
      range: "(64,7)-(64,19)"
      evaluatedAs: true
      internalMethodName: "analyzeForMissingParameters"
    - lineNumber: 64
      expression: "seen.add(cause)"
      range: "(64,24)-(64,38)"
      evaluatedAs: true
      internalMethodName: "analyzeForMissingParameters"
    - lineNumber: 84
      expression: "message != null"
      range: "(84,10)-(84,24)"
      evaluatedAs: true
      internalMethodName: "isSpringParametersException"
    - lineNumber: 84
      expression: "message.contains(USE_PARAMETERS_MESSAGE)"
      range: "(84,29)-(84,68)"
      evaluatedAs: true
      internalMethodName: "isSpringParametersException"
    - lineNumber: 89
      expression: "elements.length > 0"
      range: "(89,10)-(89,28)"
      evaluatedAs: true
      internalMethodName: "isSpringException"
    - lineNumber: 93
      expression: "className != null"
      range: "(93,10)-(93,26)"
      evaluatedAs: true
      internalMethodName: "isSpringClass"
    - lineNumber: 93
      expression: "className.startsWith(\\\"org.springframework.\\\")"
      range: "(93,31)-(93,74)"
      evaluatedAs: false
      internalMethodName: "isSpringClass"
    - lineNumber: 89
      expression: "isSpringClass(elements[0].getClassName())"
      range: "(89,33)-(89,73)"
      evaluatedAs: false
      internalMethodName: "isSpringException"
    - lineNumber: 84
      expression: "isSpringException(failure)"
      range: "(84,73)-(84,98)"
      evaluatedAs: false
      internalMethodName: "isSpringParametersException"
    - lineNumber: 65
      expression: "isSpringParametersException(cause)"
      range: "(65,8)-(65,41)"
      evaluatedAs: false
      internalMethodName: "analyzeForMissingParameters"
    - lineNumber: 69
      expression: "analysis != null"
      range: "(69,8)-(69,23)"
      evaluatedAs: false
      internalMethodName: "analyzeForMissingParameters"
    - lineNumber: 72
      expression: "for-each(cause.getSuppressed())"
      range: "(72,32)-(72,52)"
      evaluatedAs: true
      internalMethodName: "analyzeForMissingParameters"
    - lineNumber: 74
      expression: "analysis != null"
      range: "(74,9)-(74,24)"
      evaluatedAs: true
      internalMethodName: "analyzeForMissingParameters"
    calledSomeStaticInternalMethod: true
  - pathId: "path6"
    testPathName: "analyzeForMissingParametersWhenAnalysisIsNull"
    modelFingerprint: "ED45F0F12F0759400E0DAAF5788C10D7"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "failure"
      modelFingerprint: "AFF4BBFAF9C79CD0A0457F4EE6D5F2A0"
      valueUuid: "failure"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "CFD668B73CDA4578861F95E56AEEBB6D"
      valueUuid: "failureAnalysis3"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Throwable.getStackTrace() : java.lang.StackTraceElement[]"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "failure"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "failureAnalysis3"
      fixed: true
    branches:
    - lineNumber: 64
      expression: "cause != null"
      range: "(64,7)-(64,19)"
      evaluatedAs: true
      internalMethodName: "analyzeForMissingParameters"
    - lineNumber: 64
      expression: "seen.add(cause)"
      range: "(64,24)-(64,38)"
      evaluatedAs: true
      internalMethodName: "analyzeForMissingParameters"
    - lineNumber: 84
      expression: "message != null"
      range: "(84,10)-(84,24)"
      evaluatedAs: true
      internalMethodName: "isSpringParametersException"
    - lineNumber: 84
      expression: "message.contains(USE_PARAMETERS_MESSAGE)"
      range: "(84,29)-(84,68)"
      evaluatedAs: true
      internalMethodName: "isSpringParametersException"
    - lineNumber: 89
      expression: "elements.length > 0"
      range: "(89,10)-(89,28)"
      evaluatedAs: true
      internalMethodName: "isSpringException"
    - lineNumber: 93
      expression: "className != null"
      range: "(93,10)-(93,26)"
      evaluatedAs: true
      internalMethodName: "isSpringClass"
    - lineNumber: 93
      expression: "className.startsWith(\\\"org.springframework.\\\")"
      range: "(93,31)-(93,74)"
      evaluatedAs: false
      internalMethodName: "isSpringClass"
    - lineNumber: 89
      expression: "isSpringClass(elements[0].getClassName())"
      range: "(89,33)-(89,73)"
      evaluatedAs: false
      internalMethodName: "isSpringException"
    - lineNumber: 84
      expression: "isSpringException(failure)"
      range: "(84,73)-(84,98)"
      evaluatedAs: false
      internalMethodName: "isSpringParametersException"
    - lineNumber: 65
      expression: "isSpringParametersException(cause)"
      range: "(65,8)-(65,41)"
      evaluatedAs: false
      internalMethodName: "analyzeForMissingParameters"
    - lineNumber: 69
      expression: "analysis != null"
      range: "(69,8)-(69,23)"
      evaluatedAs: false
      internalMethodName: "analyzeForMissingParameters"
    - lineNumber: 72
      expression: "for-each(cause.getSuppressed())"
      range: "(72,32)-(72,52)"
      evaluatedAs: true
      internalMethodName: "analyzeForMissingParameters"
    - lineNumber: 74
      expression: "analysis != null"
      range: "(74,9)-(74,24)"
      evaluatedAs: false
      internalMethodName: "analyzeForMissingParameters"
    calledSomeStaticInternalMethod: true
- method:
    name: "appendPossibility"
    sourceCodeSignature: "void appendPossibility(StringBuilder description)"
    returnType: "void"
    parameters:
    - name: "description"
      type: "java.lang.StringBuilder"
    instructionFingerprint: "AFE58137A736271583F04B18731C514A"
  paths:
  - pathId: "path1"
    testPathName: "appendPossibilityWhenDescriptionToStringNotEndsWithSystemLineSeparator"
    modelFingerprint: "3FC576D1E0B4CC2275E86866A5D28809"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "description"
      modelFingerprint: "D12125179F081D47E982AFF7C28EECF0"
      valueUuid: "description"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.StringBuilder"
        parameters:
        - name: "str"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "descriptioninitString"
      valueType: "java.lang.StringBuilder"
      uuid: "description"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 110
      expression: "!description.toString().endsWith(System.lineSeparator())"
      range: "(110,7)-(110,62)"
      evaluatedAs: true
