---
modelFingerprint: "C5C9B6DAD059AAD919BFD17E7C381CED"
targetClass:
  fullClassName: "org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer"
methods:
- method:
    name: "analyze"
    sourceCodeSignature: "FailureAnalysis analyze(Throwable rootFailure, BindException\
      \ cause)"
    returnType: "org.springframework.boot.diagnostics.FailureAnalysis"
    parameters:
    - name: "rootFailure"
      type: "java.lang.Throwable"
    - name: "cause"
      type: "org.springframework.boot.context.properties.bind.BindException"
    instructionFingerprint: "F88329B9207742A15AFE9C8854D0A32E"
  paths:
  - pathId: "path1"
    testPathName: "analyze2WhenRootCauseInstanceOfUnboundConfigurationPropertiesException"
    constructorSignature: "<init>() : void"
    modelFingerprint: "55322F3D277C500535C88473D7082D7F"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "rootFailure"
      modelFingerprint: "342BEFE484C53ADA99B8405F2B8802F3"
      valueUuid: "rootFailure"
    - type: "INPUT"
      name: "cause"
      modelFingerprint: "6DCCD1988CADF3440EB2469807F429CD"
      valueUuid: "cause"
    - type: "LOCAL_VARIABLE"
      name: "cause"
      modelFingerprint: "49D161E7C09419528EE4EC9FB916BF64"
      valueUuid: "cause"
      methodExercised:
        expression: "getCause():cause2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "CFD668B73CDA4578861F95E56AEEBB6D"
      valueUuid: "failureAnalysis"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer"
        parameters: []
      valueType: "org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "rootFailure"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindException"
      uuid: "cause"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindException"
      uuid: "cause"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.UnboundConfigurationPropertiesException"
      uuid: "cause2"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "failureAnalysis"
      fixed: true
    branches:
    - lineNumber: 48
      expression: "rootCause instanceof BindValidationException"
      range: "(48,7)-(48,50)"
      evaluatedAs: false
    - lineNumber: 48
      expression: "rootCause instanceof UnboundConfigurationPropertiesException"
      range: "(49,8)-(49,67)"
      evaluatedAs: true
  - pathId: "path7"
    testPathName: "analyze2WhenMissingParametersAnalysisIsNullAndConversionFailureIsNullAndValidValuesIsEmptyAndMissingParametersAnalysisI"
    constructorSignature: "<init>() : void"
    modelFingerprint: "A1B40077F8114562D1C7620F2BA271BD"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "rootFailure"
      modelFingerprint: "342BEFE484C53ADA99B8405F2B8802F3"
      valueUuid: "rootFailure"
    - type: "INPUT"
      name: "cause"
      modelFingerprint: "6DCCD1988CADF3440EB2469807F429CD"
      valueUuid: "cause"
    - type: "LOCAL_VARIABLE"
      name: "cause"
      modelFingerprint: "53366E96A897FECD3172404578347F19"
      valueUuid: "cause"
      methodExercised:
        expression: "getCause():cause2"
    - type: "STATIC"
      name: "MissingParameterNamesFailureAnalyzer.class"
      modelFingerprint: "43AC9DB767440CB8F3C0A43FE395EA9F"
      valueUuid: "MissingParameterNamesFailureAnalyzer.class"
      methodExercised:
        expression: "analyzeForMissingParameters(failure:rootFailure):failureAnalysis"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "cause"
      modelFingerprint: "AAC7DB5A78F188955157F988BFD15148"
      valueUuid: "cause"
      methodExercised:
        expression: "getMessage():message"
    - type: "LOCAL_VARIABLE"
      name: "cause"
      modelFingerprint: "BEB7327103C4978713B2B80E42A5899C"
      valueUuid: "cause"
      methodExercised:
        expression: "getProperty():property"
    - type: "LOCAL_VARIABLE"
      name: "property"
      modelFingerprint: "A7493A968B97B720EA7F4BAB70E8064B"
      valueUuid: "property"
      methodExercised:
        expression: "getName():name"
    - type: "LOCAL_VARIABLE"
      name: "property"
      modelFingerprint: "CF30B2BB238B62F03999D67C921427BD"
      valueUuid: "property"
      methodExercised:
        expression: "getValue():value"
    - type: "LOCAL_VARIABLE"
      name: "property"
      modelFingerprint: "0F83AA213D606D7159C4DA4049BF71AC"
      valueUuid: "property"
      methodExercised:
        expression: "getOrigin():origin"
    - type: "LOCAL_VARIABLE"
      name: "cause"
      modelFingerprint: "53366E96A897FECD3172404578347F19"
      valueUuid: "cause"
      methodExercised:
        expression: "getCause():cause2"
    - type: "LOCAL_VARIABLE"
      name: "conversionFailure"
      modelFingerprint: "BC39B782EEFAF8F21969AA273F1E4BEC"
      valueUuid: "causecheckCast"
      methodExercised:
        expression: "getSourceType():sourceType"
    - type: "LOCAL_VARIABLE"
      name: "conversionFailure"
      modelFingerprint: "98A050253C01A955B1367F8355F4D8D6"
      valueUuid: "causecheckCast"
      methodExercised:
        expression: "getTargetType():targetType"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "504AB0E22E35812A417FF19491128667"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:message2):boolean4"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3DE8CC963825E845E53F49FBDC534B8C"
      valueUuid: "failureAnalysis2"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isInstance(org.springframework.boot.context.properties.bind.BindException)\
        \ : boolean"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer"
        parameters: []
      valueType: "org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "rootFailure"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindException"
      uuid: "cause"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindException"
      uuid: "cause"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "message1"
            valueType: "java.lang.String"
            uuid: "cause2-message"
        - name: "cause"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Throwable"
            uuid: "cause3"
      valueType: "java.lang.Throwable"
      uuid: "cause2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.diagnostics.analyzer.MissingParameterNamesFailureAnalyzer"
      uuid: "MissingParameterNamesFailureAnalyzer.class"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "failureAnalysis"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "rootFailure"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindException"
      uuid: "cause"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "message"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindException"
      uuid: "cause"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
            nameForMock: "name"
        - name: "value"
          value:
            sapientType: "MOCK"
            valueType: "java.lang.Object"
            uuid: "value"
            nameForMock: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
            nameForMock: "origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "property"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
            nameForMock: "name"
        - name: "value"
          value:
            sapientType: "MOCK"
            valueType: "java.lang.Object"
            uuid: "value"
            nameForMock: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
            nameForMock: "origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "property"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
      nameForMock: "name"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
            nameForMock: "name"
        - name: "value"
          value:
            sapientType: "MOCK"
            valueType: "java.lang.Object"
            uuid: "value"
            nameForMock: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
            nameForMock: "origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "property"
    - sapientType: "MOCK"
      valueType: "java.lang.Object"
      uuid: "value"
      nameForMock: "value"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
            nameForMock: "name"
        - name: "value"
          value:
            sapientType: "MOCK"
            valueType: "java.lang.Object"
            uuid: "value"
            nameForMock: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
            nameForMock: "origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "property"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin"
      nameForMock: "origin"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindException"
      uuid: "cause"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "message1"
            valueType: "java.lang.String"
            uuid: "cause2-message"
        - name: "cause"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Throwable"
            uuid: "cause3"
      valueType: "java.lang.Throwable"
      uuid: "cause2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionFailedException"
      uuid: "causecheckCast"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
      nameForMock: "sourceType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionFailedException"
      uuid: "causecheckCast"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
      nameForMock: "targetType"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "message2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.FailureAnalysis"
        parameters:
        - name: "description"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A:\\n\\n    Property: null\\n    Value: \\\"null\\\"\\n    Origin:\
                \ null\\n    Reason: failed to convert sourceType to targetType (caused\
                \ by java.lang.Throwable)"
            valueType: "java.lang.String"
            uuid: "string12"
        - name: "action"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Update your application's configuration"
            valueType: "java.lang.String"
            uuid: "string13"
        - name: "cause"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindException"
            uuid: "cause"
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "failureAnalysis2"
      fixed: true
    branches:
    - lineNumber: 48
      expression: "rootCause instanceof BindValidationException"
      range: "(48,7)-(48,50)"
      evaluatedAs: false
    - lineNumber: 48
      expression: "rootCause instanceof UnboundConfigurationPropertiesException"
      range: "(49,8)-(49,67)"
      evaluatedAs: false
    - lineNumber: 69
      expression: "property != null"
      range: "(69,7)-(69,22)"
      evaluatedAs: true
      internalMethodName: "buildDescription"
    - lineNumber: 95
      expression: "rootCause != null"
      range: "(95,10)-(95,26)"
      evaluatedAs: true
      internalMethodName: "getRootCause"
    - lineNumber: 95
      expression: "rootCause.getCause() != null"
      range: "(95,31)-(95,58)"
      evaluatedAs: true
      internalMethodName: "getRootCause"
    - lineNumber: 58
      expression: "failure != null"
      range: "(58,10)-(58,24)"
      evaluatedAs: true
      internalMethodName: "findCause"
    - lineNumber: 59
      expression: "type.isInstance(failure)"
      range: "(59,8)-(59,31)"
      evaluatedAs: true
      internalMethodName: "findCause"
    - lineNumber: 79
      expression: "conversionFailure != null"
      range: "(79,7)-(79,31)"
      evaluatedAs: true
      internalMethodName: "getMessage"
    - lineNumber: 82
      expression: "rootCause != null"
      range: "(82,8)-(82,24)"
      evaluatedAs: true
      internalMethodName: "getMessage"
    - lineNumber: 103
      expression: "StringUtils.hasText(message)"
      range: "(103,37)-(103,64)"
      evaluatedAs: false
      internalMethodName: "getExceptionTypeAndMessage"
    - lineNumber: 62
      expression: "missingParametersAnalysis != null"
      range: "(62,7)-(62,39)"
      evaluatedAs: false
      internalMethodName: "analyzeGenericBindException"
    - lineNumber: 122
      expression: "conversionFailure != null"
      range: "(122,7)-(122,31)"
      evaluatedAs: false
      internalMethodName: "findValidValues"
    - lineNumber: 110
      expression: "!validValues.isEmpty()"
      range: "(110,7)-(110,28)"
      evaluatedAs: false
      internalMethodName: "getFailureAnalysis"
    - lineNumber: 114
      expression: "missingParametersAnalysis != null"
      range: "(114,7)-(114,39)"
      evaluatedAs: false
      internalMethodName: "getFailureAnalysis"
  - pathId: "path2"
    testPathName: "analyze2WhenValidValuesNotIsEmptyAndMissingParametersAnalysisIsNotNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "4264CCC84A20D3018D0F29A1ADA30DE3"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "rootFailure"
      modelFingerprint: "342BEFE484C53ADA99B8405F2B8802F3"
      valueUuid: "rootFailure"
    - type: "INPUT"
      name: "cause"
      modelFingerprint: "6DCCD1988CADF3440EB2469807F429CD"
      valueUuid: "cause"
    - type: "LOCAL_VARIABLE"
      name: "cause"
      modelFingerprint: "53366E96A897FECD3172404578347F19"
      valueUuid: "cause"
      methodExercised:
        expression: "getCause():cause2"
    - type: "STATIC"
      name: "MissingParameterNamesFailureAnalyzer.class"
      modelFingerprint: "10C480068DA07F87FD31E6BF02A513BC"
      valueUuid: "MissingParameterNamesFailureAnalyzer.class"
      methodExercised:
        expression: "analyzeForMissingParameters(failure:rootFailure):failureAnalysis"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "cause"
      modelFingerprint: "AAC7DB5A78F188955157F988BFD15148"
      valueUuid: "cause"
      methodExercised:
        expression: "getMessage():message"
    - type: "LOCAL_VARIABLE"
      name: "cause"
      modelFingerprint: "BEB7327103C4978713B2B80E42A5899C"
      valueUuid: "cause"
      methodExercised:
        expression: "getProperty():property"
    - type: "LOCAL_VARIABLE"
      name: "property"
      modelFingerprint: "A7493A968B97B720EA7F4BAB70E8064B"
      valueUuid: "property"
      methodExercised:
        expression: "getName():name"
    - type: "LOCAL_VARIABLE"
      name: "property"
      modelFingerprint: "CF30B2BB238B62F03999D67C921427BD"
      valueUuid: "property"
      methodExercised:
        expression: "getValue():value"
    - type: "LOCAL_VARIABLE"
      name: "property"
      modelFingerprint: "0F83AA213D606D7159C4DA4049BF71AC"
      valueUuid: "property"
      methodExercised:
        expression: "getOrigin():origin"
    - type: "LOCAL_VARIABLE"
      name: "cause"
      modelFingerprint: "53366E96A897FECD3172404578347F19"
      valueUuid: "cause"
      methodExercised:
        expression: "getCause():cause2"
    - type: "LOCAL_VARIABLE"
      name: "conversionFailure"
      modelFingerprint: "BC39B782EEFAF8F21969AA273F1E4BEC"
      valueUuid: "causecheckCast"
      methodExercised:
        expression: "getSourceType():sourceType"
    - type: "LOCAL_VARIABLE"
      name: "conversionFailure"
      modelFingerprint: "98A050253C01A955B1367F8355F4D8D6"
      valueUuid: "causecheckCast"
      methodExercised:
        expression: "getTargetType():targetType"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "C969F0656BA78A05799B3291CE698BC7"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasText(str:message2):boolean4"
        staticAccess: true
    - type: "STATIC"
      name: "MissingParameterNamesFailureAnalyzer.class"
      modelFingerprint: "556EDF5B9E678F41BDBB9BB126DF86DE"
      valueUuid: "MissingParameterNamesFailureAnalyzer.class"
      methodExercised:
        expression: "appendPossibility(description:stringBuilder):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "conversionFailure"
      modelFingerprint: "6FAE6D400954BC547A8DD7F0E60FD3EB"
      valueUuid: "causecheckCast"
      methodExercised:
        expression: "getTargetType():targetType2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "DF6BE1818C72B981C168DC4F59944B9B"
      valueUuid: "targetType2"
      methodExercised:
        expression: "getType():type"
    - type: "LOCAL_VARIABLE"
      name: "missingParametersAnalysis"
      modelFingerprint: "83DEA2E2E084101E0F2ADB90DCB9F7F1"
      valueUuid: "failureAnalysis"
      methodExercised:
        expression: "getAction():action"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "53E4FF42A2CC913FA6566EB417FACC1D"
      valueUuid: "failureAnalysis2"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isInstance(org.springframework.boot.context.properties.bind.BindException)\
        \ : boolean"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer"
        parameters: []
      valueType: "org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "rootFailure"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindException"
      uuid: "cause"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindException"
      uuid: "cause"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "message1"
            valueType: "java.lang.String"
            uuid: "cause2-message"
        - name: "cause"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Throwable"
            uuid: "cause3"
      valueType: "java.lang.Throwable"
      uuid: "cause2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.diagnostics.analyzer.MissingParameterNamesFailureAnalyzer"
      uuid: "MissingParameterNamesFailureAnalyzer.class"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.FailureAnalysis"
        parameters:
        - name: "description"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "description1"
            valueType: "java.lang.String"
            uuid: "failureAnalysis-description"
        - name: "action"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "action"
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Throwable"
              parameters: []
            valueType: "java.lang.Throwable"
            uuid: "failureAnalysis-cause"
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "failureAnalysis"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "rootFailure"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindException"
      uuid: "cause"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "message"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindException"
      uuid: "cause"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
            nameForMock: "name"
        - name: "value"
          value:
            sapientType: "MOCK"
            valueType: "java.lang.Object"
            uuid: "value"
            nameForMock: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
            nameForMock: "origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "property"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
            nameForMock: "name"
        - name: "value"
          value:
            sapientType: "MOCK"
            valueType: "java.lang.Object"
            uuid: "value"
            nameForMock: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
            nameForMock: "origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "property"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
      nameForMock: "name"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
            nameForMock: "name"
        - name: "value"
          value:
            sapientType: "MOCK"
            valueType: "java.lang.Object"
            uuid: "value"
            nameForMock: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
            nameForMock: "origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "property"
    - sapientType: "MOCK"
      valueType: "java.lang.Object"
      uuid: "value"
      nameForMock: "value"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
            nameForMock: "name"
        - name: "value"
          value:
            sapientType: "MOCK"
            valueType: "java.lang.Object"
            uuid: "value"
            nameForMock: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
            nameForMock: "origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "property"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin"
      nameForMock: "origin"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindException"
      uuid: "cause"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "message1"
            valueType: "java.lang.String"
            uuid: "cause2-message"
        - name: "cause"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Throwable"
            uuid: "cause3"
      valueType: "java.lang.Throwable"
      uuid: "cause2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionFailedException"
      uuid: "causecheckCast"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
      nameForMock: "sourceType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionFailedException"
      uuid: "causecheckCast"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
      nameForMock: "targetType"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "message2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.diagnostics.analyzer.MissingParameterNamesFailureAnalyzer"
      uuid: "MissingParameterNamesFailureAnalyzer.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.StringBuilder"
        parameters:
        - name: "str"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A:\\n"
            valueType: "java.lang.String"
            uuid: "string2"
      valueType: "java.lang.StringBuilder"
      uuid: "stringBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionFailedException"
      uuid: "causecheckCast"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.core.convert.TypeDescriptor"
        parameters:
        - name: "resolvableType"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "targetType2-resolvableType"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "type"
        - name: "annotations"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.annotation.Annotation[]"
            uuid: "targetType2-annotations"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.core.convert.TypeDescriptor"
        parameters:
        - name: "resolvableType"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "targetType2-resolvableType"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "type"
        - name: "annotations"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.annotation.Annotation[]"
            uuid: "targetType2-annotations"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "type"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.FailureAnalysis"
        parameters:
        - name: "description"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "description1"
            valueType: "java.lang.String"
            uuid: "failureAnalysis-description"
        - name: "action"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "action"
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Throwable"
              parameters: []
            valueType: "java.lang.Throwable"
            uuid: "failureAnalysis-cause"
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "failureAnalysis"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "action"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.FailureAnalysis"
        parameters:
        - name: "description"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A:\\n\\n    Property: null\\n    Value: \\\"null\\\"\\n    Origin:\
                \ null\\n    Reason: failed to convert sourceType to targetType (caused\
                \ by java.lang.Throwable: )"
            valueType: "java.lang.String"
            uuid: "string13"
        - name: "action"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Update your application's configuration. The following values\
                \ are valid:\\n\\n    \\n\\n"
            valueType: "java.lang.String"
            uuid: "string19"
        - name: "cause"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindException"
            uuid: "cause"
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "failureAnalysis2"
      fixed: true
    branches:
    - lineNumber: 48
      expression: "rootCause instanceof BindValidationException"
      range: "(48,7)-(48,50)"
      evaluatedAs: false
    - lineNumber: 48
      expression: "rootCause instanceof UnboundConfigurationPropertiesException"
      range: "(49,8)-(49,67)"
      evaluatedAs: false
    - lineNumber: 69
      expression: "property != null"
      range: "(69,7)-(69,22)"
      evaluatedAs: true
      internalMethodName: "buildDescription"
    - lineNumber: 95
      expression: "rootCause != null"
      range: "(95,10)-(95,26)"
      evaluatedAs: true
      internalMethodName: "getRootCause"
    - lineNumber: 95
      expression: "rootCause.getCause() != null"
      range: "(95,31)-(95,58)"
      evaluatedAs: true
      internalMethodName: "getRootCause"
    - lineNumber: 58
      expression: "failure != null"
      range: "(58,10)-(58,24)"
      evaluatedAs: true
      internalMethodName: "findCause"
    - lineNumber: 59
      expression: "type.isInstance(failure)"
      range: "(59,8)-(59,31)"
      evaluatedAs: true
      internalMethodName: "findCause"
    - lineNumber: 79
      expression: "conversionFailure != null"
      range: "(79,7)-(79,31)"
      evaluatedAs: true
      internalMethodName: "getMessage"
    - lineNumber: 82
      expression: "rootCause != null"
      range: "(82,8)-(82,24)"
      evaluatedAs: true
      internalMethodName: "getMessage"
    - lineNumber: 103
      expression: "StringUtils.hasText(message)"
      range: "(103,37)-(103,64)"
      evaluatedAs: true
      internalMethodName: "getExceptionTypeAndMessage"
    - lineNumber: 62
      expression: "missingParametersAnalysis != null"
      range: "(62,7)-(62,39)"
      evaluatedAs: true
      internalMethodName: "analyzeGenericBindException"
    - lineNumber: 122
      expression: "conversionFailure != null"
      range: "(122,7)-(122,31)"
      evaluatedAs: true
      internalMethodName: "findValidValues"
    - lineNumber: 124
      expression: "enumConstants != null"
      range: "(124,8)-(124,28)"
      evaluatedAs: true
      internalMethodName: "findValidValues"
    - lineNumber: 110
      expression: "!validValues.isEmpty()"
      range: "(110,7)-(110,28)"
      evaluatedAs: true
      internalMethodName: "getFailureAnalysis"
    - lineNumber: 114
      expression: "missingParametersAnalysis != null"
      range: "(114,7)-(114,39)"
      evaluatedAs: true
      internalMethodName: "getFailureAnalysis"
  - pathId: "path8"
    testPathName: "analyze2WhenConversionFailureIsNullAndValidValuesIsEmptyAndMissingParametersAnalysisIsNull2"
    constructorSignature: "<init>() : void"
    modelFingerprint: "DF2BEFC5663D4BD4ED37441DF3F4CCA8"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "rootFailure"
      modelFingerprint: "342BEFE484C53ADA99B8405F2B8802F3"
      valueUuid: "rootFailure"
    - type: "INPUT"
      name: "cause"
      modelFingerprint: "6DCCD1988CADF3440EB2469807F429CD"
      valueUuid: "cause"
    - type: "LOCAL_VARIABLE"
      name: "cause"
      modelFingerprint: "53366E96A897FECD3172404578347F19"
      valueUuid: "cause"
      methodExercised:
        expression: "getCause():cause2"
    - type: "STATIC"
      name: "MissingParameterNamesFailureAnalyzer.class"
      modelFingerprint: "43AC9DB767440CB8F3C0A43FE395EA9F"
      valueUuid: "MissingParameterNamesFailureAnalyzer.class"
      methodExercised:
        expression: "analyzeForMissingParameters(failure:rootFailure):failureAnalysis"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "cause"
      modelFingerprint: "AAC7DB5A78F188955157F988BFD15148"
      valueUuid: "cause"
      methodExercised:
        expression: "getMessage():message"
    - type: "LOCAL_VARIABLE"
      name: "cause"
      modelFingerprint: "BEB7327103C4978713B2B80E42A5899C"
      valueUuid: "cause"
      methodExercised:
        expression: "getProperty():property"
    - type: "LOCAL_VARIABLE"
      name: "property"
      modelFingerprint: "A7493A968B97B720EA7F4BAB70E8064B"
      valueUuid: "property"
      methodExercised:
        expression: "getName():name"
    - type: "LOCAL_VARIABLE"
      name: "property"
      modelFingerprint: "CF30B2BB238B62F03999D67C921427BD"
      valueUuid: "property"
      methodExercised:
        expression: "getValue():value"
    - type: "LOCAL_VARIABLE"
      name: "property"
      modelFingerprint: "0F83AA213D606D7159C4DA4049BF71AC"
      valueUuid: "property"
      methodExercised:
        expression: "getOrigin():origin"
    - type: "LOCAL_VARIABLE"
      name: "cause"
      modelFingerprint: "53366E96A897FECD3172404578347F19"
      valueUuid: "cause"
      methodExercised:
        expression: "getCause():cause2"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "C969F0656BA78A05799B3291CE698BC7"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasText(str:message2):boolean4"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "C969F0656BA78A05799B3291CE698BC7"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasText(str:message2):boolean5"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "1B473C4C7A6506E75E84BACA64C8140D"
      valueUuid: "failureAnalysis2"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isInstance(org.springframework.boot.context.properties.bind.BindException)\
        \ : boolean"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer"
        parameters: []
      valueType: "org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "rootFailure"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindException"
      uuid: "cause"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindException"
      uuid: "cause"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "message1"
            valueType: "java.lang.String"
            uuid: "cause2-message"
        - name: "cause"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Throwable"
            uuid: "cause3"
      valueType: "java.lang.Throwable"
      uuid: "cause2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.diagnostics.analyzer.MissingParameterNamesFailureAnalyzer"
      uuid: "MissingParameterNamesFailureAnalyzer.class"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "failureAnalysis"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "rootFailure"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindException"
      uuid: "cause"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "message"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindException"
      uuid: "cause"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
            nameForMock: "name"
        - name: "value"
          value:
            sapientType: "MOCK"
            valueType: "java.lang.Object"
            uuid: "value"
            nameForMock: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
            nameForMock: "origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "property"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
            nameForMock: "name"
        - name: "value"
          value:
            sapientType: "MOCK"
            valueType: "java.lang.Object"
            uuid: "value"
            nameForMock: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
            nameForMock: "origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "property"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
      nameForMock: "name"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
            nameForMock: "name"
        - name: "value"
          value:
            sapientType: "MOCK"
            valueType: "java.lang.Object"
            uuid: "value"
            nameForMock: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
            nameForMock: "origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "property"
    - sapientType: "MOCK"
      valueType: "java.lang.Object"
      uuid: "value"
      nameForMock: "value"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
            nameForMock: "name"
        - name: "value"
          value:
            sapientType: "MOCK"
            valueType: "java.lang.Object"
            uuid: "value"
            nameForMock: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
            nameForMock: "origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "property"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin"
      nameForMock: "origin"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindException"
      uuid: "cause"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "message1"
            valueType: "java.lang.String"
            uuid: "cause2-message"
        - name: "cause"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Throwable"
            uuid: "cause3"
      valueType: "java.lang.Throwable"
      uuid: "cause2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "message2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean5"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "message2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.FailureAnalysis"
        parameters:
        - name: "description"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A:\\n\\n    Property: null\\n    Value: \\\"null\\\"\\n    Origin:\
                \ null\\n    Reason: java.lang.Throwable: "
            valueType: "java.lang.String"
            uuid: "string12"
        - name: "action"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Update your application's configuration"
            valueType: "java.lang.String"
            uuid: "string13"
        - name: "cause"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindException"
            uuid: "cause"
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "failureAnalysis2"
      fixed: true
    branches:
    - lineNumber: 48
      expression: "rootCause instanceof BindValidationException"
      range: "(48,7)-(48,50)"
      evaluatedAs: false
    - lineNumber: 48
      expression: "rootCause instanceof UnboundConfigurationPropertiesException"
      range: "(49,8)-(49,67)"
      evaluatedAs: false
    - lineNumber: 69
      expression: "property != null"
      range: "(69,7)-(69,22)"
      evaluatedAs: true
      internalMethodName: "buildDescription"
    - lineNumber: 95
      expression: "rootCause != null"
      range: "(95,10)-(95,26)"
      evaluatedAs: true
      internalMethodName: "getRootCause"
    - lineNumber: 95
      expression: "rootCause.getCause() != null"
      range: "(95,31)-(95,58)"
      evaluatedAs: true
      internalMethodName: "getRootCause"
    - lineNumber: 58
      expression: "failure != null"
      range: "(58,10)-(58,24)"
      evaluatedAs: true
      internalMethodName: "findCause"
    - lineNumber: 59
      expression: "type.isInstance(failure)"
      range: "(59,8)-(59,31)"
      evaluatedAs: true
      internalMethodName: "findCause"
    - lineNumber: 79
      expression: "conversionFailure != null"
      range: "(79,7)-(79,31)"
      evaluatedAs: false
      internalMethodName: "getMessage"
    - lineNumber: 87
      expression: "rootCause != null"
      range: "(87,7)-(87,23)"
      evaluatedAs: true
      internalMethodName: "getMessage"
    - lineNumber: 87
      expression: "StringUtils.hasText(rootCause.getMessage())"
      range: "(87,28)-(87,70)"
      evaluatedAs: true
      internalMethodName: "getMessage"
    - lineNumber: 103
      expression: "StringUtils.hasText(message)"
      range: "(103,37)-(103,64)"
      evaluatedAs: true
      internalMethodName: "getExceptionTypeAndMessage"
    - lineNumber: 62
      expression: "missingParametersAnalysis != null"
      range: "(62,7)-(62,39)"
      evaluatedAs: false
      internalMethodName: "analyzeGenericBindException"
    - lineNumber: 122
      expression: "conversionFailure != null"
      range: "(122,7)-(122,31)"
      evaluatedAs: false
      internalMethodName: "findValidValues"
    - lineNumber: 110
      expression: "!validValues.isEmpty()"
      range: "(110,7)-(110,28)"
      evaluatedAs: false
      internalMethodName: "getFailureAnalysis"
    - lineNumber: 114
      expression: "missingParametersAnalysis != null"
      range: "(114,7)-(114,39)"
      evaluatedAs: false
      internalMethodName: "getFailureAnalysis"
  - pathId: "path9"
    testPathName: "analyze2WhenConversionFailureIsNullAndValidValuesIsEmptyAndMissingParametersAnalysisIsNull3"
    constructorSignature: "<init>() : void"
    modelFingerprint: "7AD8DB6B2F6C4D7F0DA5151BF8414617"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "rootFailure"
      modelFingerprint: "342BEFE484C53ADA99B8405F2B8802F3"
      valueUuid: "rootFailure"
    - type: "INPUT"
      name: "cause"
      modelFingerprint: "6DCCD1988CADF3440EB2469807F429CD"
      valueUuid: "cause"
    - type: "LOCAL_VARIABLE"
      name: "cause"
      modelFingerprint: "53366E96A897FECD3172404578347F19"
      valueUuid: "cause"
      methodExercised:
        expression: "getCause():cause2"
    - type: "STATIC"
      name: "MissingParameterNamesFailureAnalyzer.class"
      modelFingerprint: "43AC9DB767440CB8F3C0A43FE395EA9F"
      valueUuid: "MissingParameterNamesFailureAnalyzer.class"
      methodExercised:
        expression: "analyzeForMissingParameters(failure:rootFailure):failureAnalysis"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "cause"
      modelFingerprint: "AAC7DB5A78F188955157F988BFD15148"
      valueUuid: "cause"
      methodExercised:
        expression: "getMessage():message"
    - type: "LOCAL_VARIABLE"
      name: "cause"
      modelFingerprint: "BEB7327103C4978713B2B80E42A5899C"
      valueUuid: "cause"
      methodExercised:
        expression: "getProperty():property"
    - type: "LOCAL_VARIABLE"
      name: "property"
      modelFingerprint: "A7493A968B97B720EA7F4BAB70E8064B"
      valueUuid: "property"
      methodExercised:
        expression: "getName():name"
    - type: "LOCAL_VARIABLE"
      name: "property"
      modelFingerprint: "CF30B2BB238B62F03999D67C921427BD"
      valueUuid: "property"
      methodExercised:
        expression: "getValue():value"
    - type: "LOCAL_VARIABLE"
      name: "property"
      modelFingerprint: "0F83AA213D606D7159C4DA4049BF71AC"
      valueUuid: "property"
      methodExercised:
        expression: "getOrigin():origin"
    - type: "LOCAL_VARIABLE"
      name: "cause"
      modelFingerprint: "53366E96A897FECD3172404578347F19"
      valueUuid: "cause"
      methodExercised:
        expression: "getCause():cause2"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "C969F0656BA78A05799B3291CE698BC7"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasText(str:message2):boolean4"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "504AB0E22E35812A417FF19491128667"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasText(str:message2):boolean5"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B764215AF0D184E5B70274097FDB0B8B"
      valueUuid: "failureAnalysis2"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isInstance(org.springframework.boot.context.properties.bind.BindException)\
        \ : boolean"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer"
        parameters: []
      valueType: "org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "rootFailure"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindException"
      uuid: "cause"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindException"
      uuid: "cause"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "message1"
            valueType: "java.lang.String"
            uuid: "cause2-message"
        - name: "cause"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Throwable"
            uuid: "cause3"
      valueType: "java.lang.Throwable"
      uuid: "cause2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.diagnostics.analyzer.MissingParameterNamesFailureAnalyzer"
      uuid: "MissingParameterNamesFailureAnalyzer.class"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "failureAnalysis"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "rootFailure"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindException"
      uuid: "cause"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "message"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindException"
      uuid: "cause"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
            nameForMock: "name"
        - name: "value"
          value:
            sapientType: "MOCK"
            valueType: "java.lang.Object"
            uuid: "value"
            nameForMock: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
            nameForMock: "origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "property"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
            nameForMock: "name"
        - name: "value"
          value:
            sapientType: "MOCK"
            valueType: "java.lang.Object"
            uuid: "value"
            nameForMock: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
            nameForMock: "origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "property"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
      nameForMock: "name"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
            nameForMock: "name"
        - name: "value"
          value:
            sapientType: "MOCK"
            valueType: "java.lang.Object"
            uuid: "value"
            nameForMock: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
            nameForMock: "origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "property"
    - sapientType: "MOCK"
      valueType: "java.lang.Object"
      uuid: "value"
      nameForMock: "value"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
            nameForMock: "name"
        - name: "value"
          value:
            sapientType: "MOCK"
            valueType: "java.lang.Object"
            uuid: "value"
            nameForMock: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
            nameForMock: "origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "property"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin"
      nameForMock: "origin"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindException"
      uuid: "cause"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "message1"
            valueType: "java.lang.String"
            uuid: "cause2-message"
        - name: "cause"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Throwable"
            uuid: "cause3"
      valueType: "java.lang.Throwable"
      uuid: "cause2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "message2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean5"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "message2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.FailureAnalysis"
        parameters:
        - name: "description"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A:\\n\\n    Property: null\\n    Value: \\\"null\\\"\\n    Origin:\
                \ null\\n    Reason: java.lang.Throwable"
            valueType: "java.lang.String"
            uuid: "string11"
        - name: "action"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Update your application's configuration"
            valueType: "java.lang.String"
            uuid: "string12"
        - name: "cause"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindException"
            uuid: "cause"
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "failureAnalysis2"
      fixed: true
    branches:
    - lineNumber: 48
      expression: "rootCause instanceof BindValidationException"
      range: "(48,7)-(48,50)"
      evaluatedAs: false
    - lineNumber: 48
      expression: "rootCause instanceof UnboundConfigurationPropertiesException"
      range: "(49,8)-(49,67)"
      evaluatedAs: false
    - lineNumber: 69
      expression: "property != null"
      range: "(69,7)-(69,22)"
      evaluatedAs: true
      internalMethodName: "buildDescription"
    - lineNumber: 95
      expression: "rootCause != null"
      range: "(95,10)-(95,26)"
      evaluatedAs: true
      internalMethodName: "getRootCause"
    - lineNumber: 95
      expression: "rootCause.getCause() != null"
      range: "(95,31)-(95,58)"
      evaluatedAs: true
      internalMethodName: "getRootCause"
    - lineNumber: 58
      expression: "failure != null"
      range: "(58,10)-(58,24)"
      evaluatedAs: true
      internalMethodName: "findCause"
    - lineNumber: 59
      expression: "type.isInstance(failure)"
      range: "(59,8)-(59,31)"
      evaluatedAs: true
      internalMethodName: "findCause"
    - lineNumber: 79
      expression: "conversionFailure != null"
      range: "(79,7)-(79,31)"
      evaluatedAs: false
      internalMethodName: "getMessage"
    - lineNumber: 87
      expression: "rootCause != null"
      range: "(87,7)-(87,23)"
      evaluatedAs: true
      internalMethodName: "getMessage"
    - lineNumber: 87
      expression: "StringUtils.hasText(rootCause.getMessage())"
      range: "(87,28)-(87,70)"
      evaluatedAs: true
      internalMethodName: "getMessage"
    - lineNumber: 103
      expression: "StringUtils.hasText(message)"
      range: "(103,37)-(103,64)"
      evaluatedAs: false
      internalMethodName: "getExceptionTypeAndMessage"
    - lineNumber: 62
      expression: "missingParametersAnalysis != null"
      range: "(62,7)-(62,39)"
      evaluatedAs: false
      internalMethodName: "analyzeGenericBindException"
    - lineNumber: 122
      expression: "conversionFailure != null"
      range: "(122,7)-(122,31)"
      evaluatedAs: false
      internalMethodName: "findValidValues"
    - lineNumber: 110
      expression: "!validValues.isEmpty()"
      range: "(110,7)-(110,28)"
      evaluatedAs: false
      internalMethodName: "getFailureAnalysis"
    - lineNumber: 114
      expression: "missingParametersAnalysis != null"
      range: "(114,7)-(114,39)"
      evaluatedAs: false
      internalMethodName: "getFailureAnalysis"
  - pathId: "path10"
    testPathName: "analyze2WhenConversionFailureIsNullAndValidValuesIsEmptyAndMissingParametersAnalysisIsNull4"
    constructorSignature: "<init>() : void"
    modelFingerprint: "25B774CD307E060CE82E6B74D33B9E5C"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "rootFailure"
      modelFingerprint: "342BEFE484C53ADA99B8405F2B8802F3"
      valueUuid: "rootFailure"
    - type: "INPUT"
      name: "cause"
      modelFingerprint: "38D837FDFD956E58DF8CAAF090055928"
      valueUuid: "cause"
    - type: "LOCAL_VARIABLE"
      name: "cause"
      modelFingerprint: "FA50596227C13FD2537A6C7A9B90699A"
      valueUuid: "cause"
      methodExercised:
        expression: "getCause():cause2"
    - type: "STATIC"
      name: "MissingParameterNamesFailureAnalyzer.class"
      modelFingerprint: "43AC9DB767440CB8F3C0A43FE395EA9F"
      valueUuid: "MissingParameterNamesFailureAnalyzer.class"
      methodExercised:
        expression: "analyzeForMissingParameters(failure:rootFailure):failureAnalysis"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "cause"
      modelFingerprint: "DFC2233FBB2206CE53D0ED2018932B70"
      valueUuid: "cause"
      methodExercised:
        expression: "getMessage():message"
    - type: "LOCAL_VARIABLE"
      name: "cause"
      modelFingerprint: "AFFE5FEF155AA6D055FE680894D8234F"
      valueUuid: "cause"
      methodExercised:
        expression: "getProperty():property"
    - type: "LOCAL_VARIABLE"
      name: "property"
      modelFingerprint: "A7493A968B97B720EA7F4BAB70E8064B"
      valueUuid: "property"
      methodExercised:
        expression: "getName():name"
    - type: "LOCAL_VARIABLE"
      name: "property"
      modelFingerprint: "CF30B2BB238B62F03999D67C921427BD"
      valueUuid: "property"
      methodExercised:
        expression: "getValue():value"
    - type: "LOCAL_VARIABLE"
      name: "property"
      modelFingerprint: "0F83AA213D606D7159C4DA4049BF71AC"
      valueUuid: "property"
      methodExercised:
        expression: "getOrigin():origin"
    - type: "LOCAL_VARIABLE"
      name: "cause"
      modelFingerprint: "FA50596227C13FD2537A6C7A9B90699A"
      valueUuid: "cause"
      methodExercised:
        expression: "getCause():cause2"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "504AB0E22E35812A417FF19491128667"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:message2):boolean4"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "A91647CB447119BB97CB86EA51675C61"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:message):boolean5"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "638B20F0495263E439D2B11DE75EFB19"
      valueUuid: "failureAnalysis2"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isInstance(org.springframework.boot.context.properties.bind.BindException)\
        \ : boolean"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer"
        parameters: []
      valueType: "org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "rootFailure"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindException"
      uuid: "cause"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindException"
      uuid: "cause"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "message1"
            valueType: "java.lang.String"
            uuid: "cause2-message"
        - name: "cause"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Throwable"
            uuid: "cause3"
      valueType: "java.lang.Throwable"
      uuid: "cause2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.diagnostics.analyzer.MissingParameterNamesFailureAnalyzer"
      uuid: "MissingParameterNamesFailureAnalyzer.class"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "failureAnalysis"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "rootFailure"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindException"
      uuid: "cause"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "message"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindException"
      uuid: "cause"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
            nameForMock: "name"
        - name: "value"
          value:
            sapientType: "MOCK"
            valueType: "java.lang.Object"
            uuid: "value"
            nameForMock: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
            nameForMock: "origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "property"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
            nameForMock: "name"
        - name: "value"
          value:
            sapientType: "MOCK"
            valueType: "java.lang.Object"
            uuid: "value"
            nameForMock: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
            nameForMock: "origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "property"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
      nameForMock: "name"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
            nameForMock: "name"
        - name: "value"
          value:
            sapientType: "MOCK"
            valueType: "java.lang.Object"
            uuid: "value"
            nameForMock: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
            nameForMock: "origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "property"
    - sapientType: "MOCK"
      valueType: "java.lang.Object"
      uuid: "value"
      nameForMock: "value"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
            nameForMock: "name"
        - name: "value"
          value:
            sapientType: "MOCK"
            valueType: "java.lang.Object"
            uuid: "value"
            nameForMock: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
            nameForMock: "origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "property"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin"
      nameForMock: "origin"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindException"
      uuid: "cause"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "message1"
            valueType: "java.lang.String"
            uuid: "cause2-message"
        - name: "cause"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Throwable"
            uuid: "cause3"
      valueType: "java.lang.Throwable"
      uuid: "cause2"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "message2"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "message"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.FailureAnalysis"
        parameters:
        - name: "description"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A:\\n\\n    Property: null\\n    Value: \\\"null\\\"\\n    Origin:\
                \ null\\n    Reason: org.springframework.boot.context.properties.bind.BindException:\
                \ A"
            valueType: "java.lang.String"
            uuid: "string12"
        - name: "action"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Update your application's configuration"
            valueType: "java.lang.String"
            uuid: "string13"
        - name: "cause"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindException"
            uuid: "cause"
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "failureAnalysis2"
      fixed: true
    branches:
    - lineNumber: 48
      expression: "rootCause instanceof BindValidationException"
      range: "(48,7)-(48,50)"
      evaluatedAs: false
    - lineNumber: 48
      expression: "rootCause instanceof UnboundConfigurationPropertiesException"
      range: "(49,8)-(49,67)"
      evaluatedAs: false
    - lineNumber: 69
      expression: "property != null"
      range: "(69,7)-(69,22)"
      evaluatedAs: true
      internalMethodName: "buildDescription"
    - lineNumber: 95
      expression: "rootCause != null"
      range: "(95,10)-(95,26)"
      evaluatedAs: true
      internalMethodName: "getRootCause"
    - lineNumber: 95
      expression: "rootCause.getCause() != null"
      range: "(95,31)-(95,58)"
      evaluatedAs: true
      internalMethodName: "getRootCause"
    - lineNumber: 58
      expression: "failure != null"
      range: "(58,10)-(58,24)"
      evaluatedAs: true
      internalMethodName: "findCause"
    - lineNumber: 59
      expression: "type.isInstance(failure)"
      range: "(59,8)-(59,31)"
      evaluatedAs: true
      internalMethodName: "findCause"
    - lineNumber: 79
      expression: "conversionFailure != null"
      range: "(79,7)-(79,31)"
      evaluatedAs: false
      internalMethodName: "getMessage"
    - lineNumber: 87
      expression: "rootCause != null"
      range: "(87,7)-(87,23)"
      evaluatedAs: true
      internalMethodName: "getMessage"
    - lineNumber: 87
      expression: "StringUtils.hasText(rootCause.getMessage())"
      range: "(87,28)-(87,70)"
      evaluatedAs: false
      internalMethodName: "getMessage"
    - lineNumber: 103
      expression: "StringUtils.hasText(message)"
      range: "(103,37)-(103,64)"
      evaluatedAs: true
      internalMethodName: "getExceptionTypeAndMessage"
    - lineNumber: 62
      expression: "missingParametersAnalysis != null"
      range: "(62,7)-(62,39)"
      evaluatedAs: false
      internalMethodName: "analyzeGenericBindException"
    - lineNumber: 122
      expression: "conversionFailure != null"
      range: "(122,7)-(122,31)"
      evaluatedAs: false
      internalMethodName: "findValidValues"
    - lineNumber: 110
      expression: "!validValues.isEmpty()"
      range: "(110,7)-(110,28)"
      evaluatedAs: false
      internalMethodName: "getFailureAnalysis"
    - lineNumber: 114
      expression: "missingParametersAnalysis != null"
      range: "(114,7)-(114,39)"
      evaluatedAs: false
      internalMethodName: "getFailureAnalysis"
  - pathId: "path12"
    testPathName: "analyze2WhenConversionFailureIsNullAndValidValuesIsEmptyAndMissingParametersAnalysisIsNull6"
    constructorSignature: "<init>() : void"
    modelFingerprint: "B0A36CB199E6B011E4EAFB9C4CDBE100"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "rootFailure"
      modelFingerprint: "342BEFE484C53ADA99B8405F2B8802F3"
      valueUuid: "rootFailure"
    - type: "INPUT"
      name: "cause"
      modelFingerprint: "38D837FDFD956E58DF8CAAF090055928"
      valueUuid: "cause"
    - type: "LOCAL_VARIABLE"
      name: "cause"
      modelFingerprint: "EB901A15DEC397FA124BFE07E64D0C2D"
      valueUuid: "cause"
      methodExercised:
        expression: "getCause():cause2"
    - type: "STATIC"
      name: "MissingParameterNamesFailureAnalyzer.class"
      modelFingerprint: "43AC9DB767440CB8F3C0A43FE395EA9F"
      valueUuid: "MissingParameterNamesFailureAnalyzer.class"
      methodExercised:
        expression: "analyzeForMissingParameters(failure:rootFailure):failureAnalysis"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "cause"
      modelFingerprint: "DFC2233FBB2206CE53D0ED2018932B70"
      valueUuid: "cause"
      methodExercised:
        expression: "getMessage():message"
    - type: "LOCAL_VARIABLE"
      name: "cause"
      modelFingerprint: "AFFE5FEF155AA6D055FE680894D8234F"
      valueUuid: "cause"
      methodExercised:
        expression: "getProperty():property"
    - type: "LOCAL_VARIABLE"
      name: "property"
      modelFingerprint: "A7493A968B97B720EA7F4BAB70E8064B"
      valueUuid: "property"
      methodExercised:
        expression: "getName():name"
    - type: "LOCAL_VARIABLE"
      name: "property"
      modelFingerprint: "CF30B2BB238B62F03999D67C921427BD"
      valueUuid: "property"
      methodExercised:
        expression: "getValue():value"
    - type: "LOCAL_VARIABLE"
      name: "property"
      modelFingerprint: "0F83AA213D606D7159C4DA4049BF71AC"
      valueUuid: "property"
      methodExercised:
        expression: "getOrigin():origin"
    - type: "LOCAL_VARIABLE"
      name: "cause"
      modelFingerprint: "EB901A15DEC397FA124BFE07E64D0C2D"
      valueUuid: "cause"
      methodExercised:
        expression: "getCause():cause2"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "504AB0E22E35812A417FF19491128667"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasText(str:message2):boolean11"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "54487C1342835B70D21156D482BFAC73"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasText(str:message):boolean12"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A3B17BFC82053DEEA77493D6BA05099D"
      valueUuid: "failureAnalysis2"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isInstance(org.springframework.boot.context.properties.bind.BindException)\
        \ : boolean"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer"
        parameters: []
      valueType: "org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "rootFailure"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindException"
      uuid: "cause"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindException"
      uuid: "cause"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "message1"
            valueType: "java.lang.String"
            uuid: "cause2-message"
        - name: "cause"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Throwable"
            uuid: "cause3"
      valueType: "java.lang.Throwable"
      uuid: "cause2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.diagnostics.analyzer.MissingParameterNamesFailureAnalyzer"
      uuid: "MissingParameterNamesFailureAnalyzer.class"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "failureAnalysis"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "rootFailure"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindException"
      uuid: "cause"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "message"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindException"
      uuid: "cause"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
            nameForMock: "name"
        - name: "value"
          value:
            sapientType: "MOCK"
            valueType: "java.lang.Object"
            uuid: "value"
            nameForMock: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
            nameForMock: "origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "property"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
            nameForMock: "name"
        - name: "value"
          value:
            sapientType: "MOCK"
            valueType: "java.lang.Object"
            uuid: "value"
            nameForMock: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
            nameForMock: "origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "property"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
      nameForMock: "name"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
            nameForMock: "name"
        - name: "value"
          value:
            sapientType: "MOCK"
            valueType: "java.lang.Object"
            uuid: "value"
            nameForMock: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
            nameForMock: "origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "property"
    - sapientType: "MOCK"
      valueType: "java.lang.Object"
      uuid: "value"
      nameForMock: "value"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
            nameForMock: "name"
        - name: "value"
          value:
            sapientType: "MOCK"
            valueType: "java.lang.Object"
            uuid: "value"
            nameForMock: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
            nameForMock: "origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "property"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin"
      nameForMock: "origin"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindException"
      uuid: "cause"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "message1"
            valueType: "java.lang.String"
            uuid: "cause2-message"
        - name: "cause"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Throwable"
            uuid: "cause3"
      valueType: "java.lang.Throwable"
      uuid: "cause2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean11"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "message2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean12"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "message"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.FailureAnalysis"
        parameters:
        - name: "description"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A:\\n\\n    Property: null\\n    Value: \\\"null\\\"\\n    Origin:\
                \ null\\n    Reason: org.springframework.boot.context.properties.bind.BindException"
            valueType: "java.lang.String"
            uuid: "string11"
        - name: "action"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Update your application's configuration"
            valueType: "java.lang.String"
            uuid: "string12"
        - name: "cause"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindException"
            uuid: "cause"
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "failureAnalysis2"
      fixed: true
    branches:
    - lineNumber: 48
      expression: "rootCause instanceof BindValidationException"
      range: "(48,7)-(48,50)"
      evaluatedAs: false
    - lineNumber: 48
      expression: "rootCause instanceof UnboundConfigurationPropertiesException"
      range: "(49,8)-(49,67)"
      evaluatedAs: false
    - lineNumber: 69
      expression: "property != null"
      range: "(69,7)-(69,22)"
      evaluatedAs: true
      internalMethodName: "buildDescription"
    - lineNumber: 95
      expression: "rootCause != null"
      range: "(95,10)-(95,26)"
      evaluatedAs: true
      internalMethodName: "getRootCause"
    - lineNumber: 95
      expression: "rootCause.getCause() != null"
      range: "(95,31)-(95,58)"
      evaluatedAs: true
      internalMethodName: "getRootCause"
    - lineNumber: 58
      expression: "failure != null"
      range: "(58,10)-(58,24)"
      evaluatedAs: true
      internalMethodName: "findCause"
    - lineNumber: 59
      expression: "type.isInstance(failure)"
      range: "(59,8)-(59,31)"
      evaluatedAs: false
      internalMethodName: "findCause"
    - lineNumber: 79
      expression: "conversionFailure != null"
      range: "(79,7)-(79,31)"
      evaluatedAs: false
      internalMethodName: "getMessage"
    - lineNumber: 87
      expression: "rootCause != null"
      range: "(87,7)-(87,23)"
      evaluatedAs: true
      internalMethodName: "getMessage"
    - lineNumber: 87
      expression: "StringUtils.hasText(rootCause.getMessage())"
      range: "(87,28)-(87,70)"
      evaluatedAs: false
      internalMethodName: "getMessage"
    - lineNumber: 103
      expression: "StringUtils.hasText(message)"
      range: "(103,37)-(103,64)"
      evaluatedAs: false
      internalMethodName: "getExceptionTypeAndMessage"
    - lineNumber: 62
      expression: "missingParametersAnalysis != null"
      range: "(62,7)-(62,39)"
      evaluatedAs: false
      internalMethodName: "analyzeGenericBindException"
    - lineNumber: 122
      expression: "conversionFailure != null"
      range: "(122,7)-(122,31)"
      evaluatedAs: false
      internalMethodName: "findValidValues"
    - lineNumber: 110
      expression: "!validValues.isEmpty()"
      range: "(110,7)-(110,28)"
      evaluatedAs: false
      internalMethodName: "getFailureAnalysis"
    - lineNumber: 114
      expression: "missingParametersAnalysis != null"
      range: "(114,7)-(114,39)"
      evaluatedAs: false
      internalMethodName: "getFailureAnalysis"
