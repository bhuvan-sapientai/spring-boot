---
modelFingerprint: "76236D841731FBBDA0B281FFADB4B171"
targetClass:
  fullClassName: "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyNameFailureAnalyzer"
methods:
- method:
    name: "analyze"
    sourceCodeSignature: "FailureAnalysis analyze(Throwable rootFailure, InvalidConfigurationPropertyNameException\
      \ cause)"
    returnType: "org.springframework.boot.diagnostics.FailureAnalysis"
    parameters:
    - name: "rootFailure"
      type: "java.lang.Throwable"
    - name: "cause"
      type: "org.springframework.boot.context.properties.source.InvalidConfigurationPropertyNameException"
    instructionFingerprint: "13D804682C8CCFE88F7062F66A615625"
  paths:
  - pathId: "path1"
    testPathName: "analyze2WhenExceptionIsNotNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "11C1116D3BD8A80F6F41FE9AC3A2A2B2"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "rootFailure"
      modelFingerprint: "D0C0A609420284A19DB63D7D80C8D2FA"
      valueUuid: "rootFailure"
    - type: "INPUT"
      name: "cause"
      modelFingerprint: "5024D89F67F90405E41461D8FE0AB356"
      valueUuid: "cause"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "02203CC75DA6529109F1D2788F6BE531"
      valueUuid: "failureAnalysis"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyNameFailureAnalyzer"
        parameters: []
      valueType: "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyNameFailureAnalyzer"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.beans.factory.BeanCreationException"
        parameters:
        - name: "beanName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "beanName"
        - name: "msg"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "msg1"
            valueType: "java.lang.String"
            uuid: "rootFailure-msg"
      valueType: "org.springframework.beans.factory.BeanCreationException"
      uuid: "rootFailure"
      explicitCastNeeded: true
      explicitCastForOverloadedMethods: "java.lang.Throwable"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.InvalidConfigurationPropertyNameException"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "name1"
            valueType: "java.lang.String"
            uuid: "name"
            nameForMock: "name"
        - name: "invalidCharacters"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "BASIC"
                content: !<regular>
                  value: "D"
                valueType: "java.lang.Character"
                uuid: "character"
                collectionUuid: "invalidCharacters"
            valueType: "java.util.List"
            genericValueType: "java.lang.Character"
            uuid: "invalidCharacters"
      valueType: "org.springframework.boot.context.properties.source.InvalidConfigurationPropertyNameException"
      uuid: "cause"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.FailureAnalysis"
        parameters:
        - name: "description"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Configuration property name 'name1' is not valid:\\n\\n    Invalid\
                \ characters: 'D'\\n    Bean: A\\n    Reason: Canonical names should\
                \ be kebab-case ('-' separated), lowercase alpha-numeric characters\
                \ and must start with a letter"
            valueType: "java.lang.String"
            uuid: "string8"
        - name: "action"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Modify 'name1' so that it conforms to the canonical names requirements."
            valueType: "java.lang.String"
            uuid: "string"
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.context.properties.source.InvalidConfigurationPropertyNameException"
              parameters:
              - name: "name"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "name1"
                  valueType: "java.lang.String"
                  uuid: "name"
                  nameForMock: "name"
              - name: "invalidCharacters"
                value:
                  sapientType: "COLLECTION"
                  content: !<collection>
                    collectionClass: "java.util.ArrayList"
                    parameters: []
                    values:
                    - sapientType: "BASIC"
                      content: !<regular>
                        value: "D"
                      valueType: "java.lang.Character"
                      uuid: "character"
                      collectionUuid: "invalidCharacters"
                  valueType: "java.util.List"
                  genericValueType: "java.lang.Character"
                  uuid: "invalidCharacters"
            valueType: "org.springframework.boot.context.properties.source.InvalidConfigurationPropertyNameException"
            uuid: "cause"
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "failureAnalysis"
      fixed: true
    branches:
    - lineNumber: 58
      expression: "failure != null"
      range: "(58,10)-(58,24)"
      evaluatedAs: true
      internalMethodName: "findCause"
    - lineNumber: 59
      expression: "type.isInstance(failure)"
      range: "(59,8)-(59,31)"
      evaluatedAs: true
      internalMethodName: "findCause"
    - lineNumber: 48
      expression: "exception != null"
      range: "(48,7)-(48,23)"
      evaluatedAs: true
      internalMethodName: "buildDescription"
  - pathId: "path2"
    testPathName: "analyze2WhenTypeNotIsInstanceFailureAndExceptionIsNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "479566F2F8E79CE93314489297A09D67"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "rootFailure"
      modelFingerprint: "338AC576BBDBA3AE31EE9588E71A9C9D"
      valueUuid: "rootFailure"
    - type: "INPUT"
      name: "cause"
      modelFingerprint: "D6DF9D34C627D9B47C8E7F48E86DAE03"
      valueUuid: "cause"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "AF1BC581B0728EACEDF7F759788FEA2F"
      valueUuid: "failureAnalysis"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyNameFailureAnalyzer"
        parameters: []
      valueType: "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyNameFailureAnalyzer"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "rootFailure"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.InvalidConfigurationPropertyNameException"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "name1"
            valueType: "java.lang.String"
            uuid: "name"
            nameForMock: "name"
        - name: "invalidCharacters"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "BASIC"
                content: !<regular>
                  value: "A"
                valueType: "java.lang.Character"
                uuid: "character"
                collectionUuid: "invalidCharacters"
            valueType: "java.util.List"
            genericValueType: "java.lang.Character"
            uuid: "invalidCharacters"
      valueType: "org.springframework.boot.context.properties.source.InvalidConfigurationPropertyNameException"
      uuid: "cause"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.FailureAnalysis"
        parameters:
        - name: "description"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Configuration property name 'name1' is not valid:\\n\\n    Invalid\
                \ characters: 'A'\\n    Reason: Canonical names should be kebab-case\
                \ ('-' separated), lowercase alpha-numeric characters and must start\
                \ with a letter"
            valueType: "java.lang.String"
            uuid: "string6"
        - name: "action"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Modify 'name1' so that it conforms to the canonical names requirements."
            valueType: "java.lang.String"
            uuid: "string"
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.context.properties.source.InvalidConfigurationPropertyNameException"
              parameters:
              - name: "name"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "name1"
                  valueType: "java.lang.String"
                  uuid: "name"
                  nameForMock: "name"
              - name: "invalidCharacters"
                value:
                  sapientType: "COLLECTION"
                  content: !<collection>
                    collectionClass: "java.util.ArrayList"
                    parameters: []
                    values:
                    - sapientType: "BASIC"
                      content: !<regular>
                        value: "A"
                      valueType: "java.lang.Character"
                      uuid: "character"
                      collectionUuid: "invalidCharacters"
                  valueType: "java.util.List"
                  genericValueType: "java.lang.Character"
                  uuid: "invalidCharacters"
            valueType: "org.springframework.boot.context.properties.source.InvalidConfigurationPropertyNameException"
            uuid: "cause"
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "failureAnalysis"
      fixed: true
    branches:
    - lineNumber: 58
      expression: "failure != null"
      range: "(58,10)-(58,24)"
      evaluatedAs: true
      internalMethodName: "findCause"
    - lineNumber: 59
      expression: "type.isInstance(failure)"
      range: "(59,8)-(59,31)"
      evaluatedAs: false
      internalMethodName: "findCause"
    - lineNumber: 48
      expression: "exception != null"
      range: "(48,7)-(48,23)"
      evaluatedAs: false
      internalMethodName: "buildDescription"
