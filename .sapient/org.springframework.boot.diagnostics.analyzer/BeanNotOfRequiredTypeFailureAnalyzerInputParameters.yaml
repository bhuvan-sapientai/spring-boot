---
modelFingerprint: "DACEEEC9CDFBFFB4A1BC63CA5D562860"
targetClass:
  fullClassName: "org.springframework.boot.diagnostics.analyzer.BeanNotOfRequiredTypeFailureAnalyzer"
methods:
- method:
    name: "analyze"
    sourceCodeSignature: "FailureAnalysis analyze(Throwable rootFailure, BeanNotOfRequiredTypeException\
      \ cause)"
    returnType: "org.springframework.boot.diagnostics.FailureAnalysis"
    parameters:
    - name: "rootFailure"
      type: "java.lang.Throwable"
    - name: "cause"
      type: "org.springframework.beans.factory.BeanNotOfRequiredTypeException"
    instructionFingerprint: "C30A4E04F63B7819572CB345D209772F"
  paths:
  - pathId: "path1"
    testPathName: "analyze2WhenProxyNotIsProxyClassCauseGetActualType"
    constructorSignature: "<init>() : void"
    modelFingerprint: "F58568425E9778A2685F02D6C894958C"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "rootFailure"
      modelFingerprint: "338AC576BBDBA3AE31EE9588E71A9C9D"
      valueUuid: "rootFailure"
    - type: "INPUT"
      name: "cause"
      modelFingerprint: "CD6963BD34794C077AFD9EFB2F3A9A95"
      valueUuid: "cause"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "CFD668B73CDA4578861F95E56AEEBB6D"
      valueUuid: "failureAnalysis"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.analyzer.BeanNotOfRequiredTypeFailureAnalyzer"
        parameters: []
      valueType: "org.springframework.boot.diagnostics.analyzer.BeanNotOfRequiredTypeFailureAnalyzer"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "rootFailure"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.beans.factory.BeanNotOfRequiredTypeException"
        parameters:
        - name: "beanName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "beanName1"
            valueType: "java.lang.String"
            uuid: "cause-beanName"
        - name: "requiredType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            uuid: "cause-requiredType"
        - name: "actualType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "actualType"
      valueType: "org.springframework.beans.factory.BeanNotOfRequiredTypeException"
      uuid: "cause"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "failureAnalysis"
      fixed: true
    branches:
    - lineNumber: 43
      expression: "!Proxy.isProxyClass(cause.getActualType())"
      range: "(43,7)-(43,48)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "analyze2WhenExGetRequiredTypeGetInterfacesIsNotEmpty"
    constructorSignature: "<init>() : void"
    modelFingerprint: "E99B4019CE420D51239FB8E340C893D6"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "rootFailure"
      modelFingerprint: "342BEFE484C53ADA99B8405F2B8802F3"
      valueUuid: "rootFailure"
    - type: "INPUT"
      name: "cause"
      modelFingerprint: "3F0500BBD7A3BD2E826E859B5BD818CE"
      valueUuid: "cause"
    - type: "LOCAL_VARIABLE"
      name: "cause"
      modelFingerprint: "65F388ECBDC3896C93CB162EB18D5CA9"
      valueUuid: "cause"
      methodExercised:
        expression: "getActualType():actualType"
    - type: "LOCAL_VARIABLE"
      name: "ex"
      modelFingerprint: "81659D704ED160019ABB5FD8992AC4C6"
      valueUuid: "cause"
      methodExercised:
        expression: "getBeanName():beanName"
    - type: "LOCAL_VARIABLE"
      name: "ex"
      modelFingerprint: "65F388ECBDC3896C93CB162EB18D5CA9"
      valueUuid: "cause"
      methodExercised:
        expression: "getActualType():actualType"
    - type: "LOCAL_VARIABLE"
      name: "ex"
      modelFingerprint: "65F388ECBDC3896C93CB162EB18D5CA9"
      valueUuid: "cause"
      methodExercised:
        expression: "getActualType():actualType"
    - type: "LOCAL_VARIABLE"
      name: "ex"
      modelFingerprint: "952D0714EB1287841F6727E8C125056F"
      valueUuid: "cause"
      methodExercised:
        expression: "getRequiredType():requiredType"
    - type: "LOCAL_VARIABLE"
      name: "ex"
      modelFingerprint: "952D0714EB1287841F6727E8C125056F"
      valueUuid: "cause"
      methodExercised:
        expression: "getRequiredType():requiredType"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2B36F1AE38F4239872791D10B2D298D4"
      valueUuid: "failureAnalysis"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.reflect.Proxy.isProxyClass(java.lang.Class<?>)\
        \ : boolean"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.analyzer.BeanNotOfRequiredTypeFailureAnalyzer"
        parameters: []
      valueType: "org.springframework.boot.diagnostics.analyzer.BeanNotOfRequiredTypeFailureAnalyzer"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "rootFailure"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.beans.factory.BeanNotOfRequiredTypeException"
        parameters:
        - name: "beanName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "beanName1"
            valueType: "java.lang.String"
            uuid: "beanName"
        - name: "requiredType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "requiredType"
        - name: "actualType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "actualType"
      valueType: "org.springframework.beans.factory.BeanNotOfRequiredTypeException"
      uuid: "cause"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.beans.factory.BeanNotOfRequiredTypeException"
        parameters:
        - name: "beanName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "beanName1"
            valueType: "java.lang.String"
            uuid: "beanName"
        - name: "requiredType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "requiredType"
        - name: "actualType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "actualType"
      valueType: "org.springframework.beans.factory.BeanNotOfRequiredTypeException"
      uuid: "cause"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "actualType"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.beans.factory.BeanNotOfRequiredTypeException"
        parameters:
        - name: "beanName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "beanName1"
            valueType: "java.lang.String"
            uuid: "beanName"
        - name: "requiredType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "requiredType"
        - name: "actualType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "actualType"
      valueType: "org.springframework.beans.factory.BeanNotOfRequiredTypeException"
      uuid: "cause"
    - sapientType: "BASIC"
      content: !<regular>
        value: "beanName1"
      valueType: "java.lang.String"
      uuid: "beanName"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.beans.factory.BeanNotOfRequiredTypeException"
        parameters:
        - name: "beanName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "beanName1"
            valueType: "java.lang.String"
            uuid: "beanName"
        - name: "requiredType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "requiredType"
        - name: "actualType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "actualType"
      valueType: "org.springframework.beans.factory.BeanNotOfRequiredTypeException"
      uuid: "cause"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "actualType"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.beans.factory.BeanNotOfRequiredTypeException"
        parameters:
        - name: "beanName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "beanName1"
            valueType: "java.lang.String"
            uuid: "beanName"
        - name: "requiredType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "requiredType"
        - name: "actualType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "actualType"
      valueType: "org.springframework.beans.factory.BeanNotOfRequiredTypeException"
      uuid: "cause"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "actualType"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.beans.factory.BeanNotOfRequiredTypeException"
        parameters:
        - name: "beanName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "beanName1"
            valueType: "java.lang.String"
            uuid: "beanName"
        - name: "requiredType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "requiredType"
        - name: "actualType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "actualType"
      valueType: "org.springframework.beans.factory.BeanNotOfRequiredTypeException"
      uuid: "cause"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "requiredType"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.beans.factory.BeanNotOfRequiredTypeException"
        parameters:
        - name: "beanName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "beanName1"
            valueType: "java.lang.String"
            uuid: "beanName"
        - name: "requiredType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "requiredType"
        - name: "actualType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "actualType"
      valueType: "org.springframework.beans.factory.BeanNotOfRequiredTypeException"
      uuid: "cause"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "requiredType"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.FailureAnalysis"
        parameters:
        - name: "description"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "string8"
        - name: "action"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Consider injecting the bean as one of its interfaces or forcing\
                \ the use of CGLib-based proxies by setting proxyTargetClass=true\
                \ on @EnableAsync and/or @EnableCaching."
            valueType: "java.lang.String"
            uuid: "uniqueUuid1"
            fixed: true
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.beans.factory.BeanNotOfRequiredTypeException"
              parameters:
              - name: "beanName"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "beanName1"
                  valueType: "java.lang.String"
                  uuid: "beanName"
              - name: "requiredType"
                value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "java.lang.Object"
                  valueType: "java.lang.Class"
                  genericValueType: "?"
                  uuid: "requiredType"
              - name: "actualType"
                value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "java.lang.Object"
                  valueType: "java.lang.Class"
                  genericValueType: "?"
                  uuid: "actualType"
            valueType: "org.springframework.beans.factory.BeanNotOfRequiredTypeException"
            uuid: "cause"
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "failureAnalysis"
      fixed: true
    branches:
    - lineNumber: 43
      expression: "!Proxy.isProxyClass(cause.getActualType())"
      range: "(43,7)-(43,48)"
      evaluatedAs: false
    - lineNumber: 54
      expression: "for-each(ex.getActualType().getInterfaces())"
      range: "(54,39)-(54,72)"
      evaluatedAs: true
      internalMethodName: "getDescription"
    - lineNumber: 58
      expression: "for-each(ex.getRequiredType().getInterfaces())"
      range: "(58,41)-(58,76)"
      evaluatedAs: true
      internalMethodName: "getDescription"
