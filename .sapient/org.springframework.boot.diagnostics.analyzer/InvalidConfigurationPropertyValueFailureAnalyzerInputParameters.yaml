---
modelFingerprint: "D5BDCD102DAD93C69251779872DABF04"
targetClass:
  fullClassName: "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyValueFailureAnalyzer"
methods:
- method:
    name: "analyze"
    sourceCodeSignature: "FailureAnalysis analyze(Throwable rootFailure, InvalidConfigurationPropertyValueException\
      \ cause)"
    returnType: "org.springframework.boot.diagnostics.FailureAnalysis"
    parameters:
    - name: "rootFailure"
      type: "java.lang.Throwable"
    - name: "cause"
      type: "org.springframework.boot.context.properties.source.InvalidConfigurationPropertyValueException"
    instructionFingerprint: "0F0C25C0D4869EA5EBC07CAC132793FA"
  paths:
  - pathId: "path1"
    testPathName: "analyze2WhenDescriptorsIsEmpty"
    constructorSignature: "<init>(org.springframework.core.env.Environment) : void"
    modelFingerprint: "BE1CBBF3642DF7BEF7C241156CEDB15F"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "9B36F71C094E1051ACD363C80957ED1E"
      valueUuid: "target"
    - type: "INPUT"
      name: "rootFailure"
      modelFingerprint: "342BEFE484C53ADA99B8405F2B8802F3"
      valueUuid: "rootFailure"
    - type: "INPUT"
      name: "cause"
      modelFingerprint: "9175924A0B93B2F743BF8CE7E05E2E83"
      valueUuid: "cause"
    - type: "LOCAL_VARIABLE"
      name: "cause"
      modelFingerprint: "8497079E8354BA1425E8A8C1C9DB1866"
      valueUuid: "cause"
      methodExercised:
        expression: "getName():name"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "CFD668B73CDA4578861F95E56AEEBB6D"
      valueUuid: "failureAnalysis"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyValueFailureAnalyzer"
        parameters:
        - name: "environment"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "environment"
            fixed: true
            explicitCastNeeded: true
      valueType: "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyValueFailureAnalyzer"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "rootFailure"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.InvalidConfigurationPropertyValueException"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "name1"
            valueType: "java.lang.String"
            uuid: "name"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "cause-value"
        - name: "reason"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "reason1"
            valueType: "java.lang.String"
            uuid: "cause-reason"
      valueType: "org.springframework.boot.context.properties.source.InvalidConfigurationPropertyValueException"
      uuid: "cause"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.InvalidConfigurationPropertyValueException"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "name1"
            valueType: "java.lang.String"
            uuid: "name"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "cause-value"
        - name: "reason"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "reason1"
            valueType: "java.lang.String"
            uuid: "cause-reason"
      valueType: "org.springframework.boot.context.properties.source.InvalidConfigurationPropertyValueException"
      uuid: "cause"
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "failureAnalysis"
      fixed: true
    branches:
    - lineNumber: 70
      expression: "this.environment == null"
      range: "(70,7)-(70,30)"
      evaluatedAs: true
      internalMethodName: "getPropertySources"
    - lineNumber: 53
      expression: "descriptors.isEmpty()"
      range: "(53,7)-(53,27)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "analyze2WhenThisEnvironmentIsNotNullAndDescriptorsIsEmpty"
    constructorSignature: "<init>(org.springframework.core.env.Environment) : void"
    modelFingerprint: "560202F54A70157E42694E9685ECB9DD"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6E25B354624A7E27B7D47978D775C2DA"
      valueUuid: "target"
    - type: "INPUT"
      name: "rootFailure"
      modelFingerprint: "342BEFE484C53ADA99B8405F2B8802F3"
      valueUuid: "rootFailure"
    - type: "INPUT"
      name: "cause"
      modelFingerprint: "9175924A0B93B2F743BF8CE7E05E2E83"
      valueUuid: "cause"
    - type: "LOCAL_VARIABLE"
      name: "cause"
      modelFingerprint: "8497079E8354BA1425E8A8C1C9DB1866"
      valueUuid: "cause"
      methodExercised:
        expression: "getName():name"
    - type: "FIELD"
      name: "environment"
      modelFingerprint: "9B4EF364D99169E3F4E20B025C6E9832"
      valueUuid: "environment"
      methodExercised:
        expression: "getPropertySources():mutablePropertySources"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "8D777FEC2275B7A42CD1B771458221A7"
      valueUuid: "mutablePropertySources"
      methodExercised:
        expression: "stream():stream"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "CFD668B73CDA4578861F95E56AEEBB6D"
      valueUuid: "failureAnalysis"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.stream.Stream.filter(java.util.function.Predicate)\
        \ : java.util.stream.Stream<org.springframework.core.env.PropertySource<?>>"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyValueFailureAnalyzer"
        parameters:
        - name: "environment"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "environment"
            explicitCastNeeded: true
      valueType: "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyValueFailureAnalyzer"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "rootFailure"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.InvalidConfigurationPropertyValueException"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "name1"
            valueType: "java.lang.String"
            uuid: "name"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "cause-value"
        - name: "reason"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "reason1"
            valueType: "java.lang.String"
            uuid: "cause-reason"
      valueType: "org.springframework.boot.context.properties.source.InvalidConfigurationPropertyValueException"
      uuid: "cause"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.InvalidConfigurationPropertyValueException"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "name1"
            valueType: "java.lang.String"
            uuid: "name"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "cause-value"
        - name: "reason"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "reason1"
            valueType: "java.lang.String"
            uuid: "cause-reason"
      valueType: "org.springframework.boot.context.properties.source.InvalidConfigurationPropertyValueException"
      uuid: "cause"
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.util.stream.Stream"
        method: "empty"
        methodParameters: []
      valueType: "java.util.stream.Stream"
      uuid: "stream"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "failureAnalysis"
      fixed: true
    branches:
    - lineNumber: 70
      expression: "this.environment == null"
      range: "(70,7)-(70,30)"
      evaluatedAs: false
      internalMethodName: "getPropertySources"
    - lineNumber: 53
      expression: "descriptors.isEmpty()"
      range: "(53,7)-(53,27)"
      evaluatedAs: true
