---
modelFingerprint: "38D20C22AFDD6CF64887FDD7759F27D9"
targetClass:
  fullClassName: "org.springframework.boot.diagnostics.analyzer.BindValidationFailureAnalyzer"
methods:
- method:
    name: "analyze"
    sourceCodeSignature: "FailureAnalysis analyze(Throwable rootFailure, Throwable\
      \ cause)"
    returnType: "org.springframework.boot.diagnostics.FailureAnalysis"
    parameters:
    - name: "rootFailure"
      type: "java.lang.Throwable"
    - name: "cause"
      type: "java.lang.Throwable"
    instructionFingerprint: "EF5467855C1AC1B7CCD8A32F2FE4ACED"
  paths:
  - pathId: "path5"
    testPathName: "analyze2WhenDetailsIsNotNullAndDetailsGetErrorsIsEmpty"
    constructorSignature: "<init>() : void"
    modelFingerprint: "124AECB811F0AB4E36BB5E68F2577C3B"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "rootFailure"
      modelFingerprint: "230CB92BC9823D5067401198FFFF17A8"
      valueUuid: "rootFailure"
    - type: "INPUT"
      name: "cause"
      modelFingerprint: "1D9CEFDD57E45CF12FAE8B8B31814824"
      valueUuid: "cause"
    - type: "LOCAL_VARIABLE"
      name: "validationException"
      modelFingerprint: "7373C9ED54648379F8A8894159EFA01F"
      valueUuid: "rootFailure"
      methodExercised:
        expression: "getValidationErrors():validationErrors"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "C0BA29FEF83E9E04ACE866DFD0AF49ED"
      valueUuid: "validationErrors"
      methodExercised:
        expression: "getAllErrors():list"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "25D9688E335224EA3CAC9D4558E0D5EE"
      valueUuid: "failureAnalysis"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isInstance(java.lang.Throwable)\
        \ : boolean"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.analyzer.BindValidationFailureAnalyzer"
        parameters: []
      valueType: "org.springframework.boot.diagnostics.analyzer.BindValidationFailureAnalyzer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.validation.BindValidationException"
      uuid: "rootFailure"
      explicitCastNeeded: true
      explicitCastForOverloadedMethods: "java.lang.Throwable"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "cause"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.validation.BindValidationException"
      uuid: "rootFailure"
      explicitCastNeeded: true
      explicitCastForOverloadedMethods: "java.lang.Throwable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.validation.ValidationErrors"
      uuid: "validationErrors"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.validation.ValidationErrors"
      uuid: "validationErrors"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.validation.ObjectError"
      uuid: "list"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.FailureAnalysis"
        parameters:
        - name: "description"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "string2"
        - name: "action"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Update your application's configuration"
            valueType: "java.lang.String"
            uuid: "uniqueUuid1"
            fixed: true
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Throwable"
              parameters: []
            valueType: "java.lang.Throwable"
            uuid: "throwable3"
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "failureAnalysis"
      fixed: true
    branches:
    - lineNumber: 58
      expression: "failure != null"
      range: "(58,10)-(58,24)"
      evaluatedAs: true
      internalMethodName: "findCause"
    - lineNumber: 59
      expression: "type.isInstance(failure)"
      range: "(59,8)-(59,31)"
      evaluatedAs: true
      internalMethodName: "findCause"
    - lineNumber: 49
      expression: "validationException != null"
      range: "(49,7)-(49,33)"
      evaluatedAs: true
      internalMethodName: "getBindValidationExceptionDetails"
    - lineNumber: 41
      expression: "details == null"
      range: "(41,7)-(41,21)"
      evaluatedAs: false
    - lineNumber: 66
      expression: "for-each(details.getErrors())"
      range: "(66,28)-(66,46)"
      evaluatedAs: false
      internalMethodName: "analyzeBindValidationException"
  - pathId: "path7"
    testPathName: "analyze2WhenBindExceptionIsNullAndDetailsIsNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "06A835A1B4DA03F004D304A1B6B4F94B"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "rootFailure"
      modelFingerprint: "338AC576BBDBA3AE31EE9588E71A9C9D"
      valueUuid: "rootFailure"
    - type: "INPUT"
      name: "cause"
      modelFingerprint: "7627486091E0E6943BF829B972BFFC56"
      valueUuid: "cause"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "CFD668B73CDA4578861F95E56AEEBB6D"
      valueUuid: "failureAnalysis"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.analyzer.BindValidationFailureAnalyzer"
        parameters: []
      valueType: "org.springframework.boot.diagnostics.analyzer.BindValidationFailureAnalyzer"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "rootFailure"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "cause"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "failureAnalysis"
      fixed: true
    branches:
    - lineNumber: 58
      expression: "failure != null"
      range: "(58,10)-(58,24)"
      evaluatedAs: true
      internalMethodName: "findCause"
    - lineNumber: 59
      expression: "type.isInstance(failure)"
      range: "(59,8)-(59,31)"
      evaluatedAs: false
      internalMethodName: "findCause"
    - lineNumber: 49
      expression: "validationException != null"
      range: "(49,7)-(49,33)"
      evaluatedAs: false
      internalMethodName: "getBindValidationExceptionDetails"
    - lineNumber: 56
      expression: "bindException != null"
      range: "(56,7)-(56,27)"
      evaluatedAs: false
      internalMethodName: "getBindValidationExceptionDetails"
    - lineNumber: 41
      expression: "details == null"
      range: "(41,7)-(41,21)"
      evaluatedAs: true
  - pathId: "path6"
    testPathName: "analyze2WhenBindExceptionIsNotNullAndDetailsIsNotNullAndDetailsGetErrorsIsEmpty"
    constructorSignature: "<init>() : void"
    modelFingerprint: "100C8F60034098968935A56CE39E55FF"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "rootFailure"
      modelFingerprint: "78A19798BEDA423BA56935051F69417C"
      valueUuid: "rootFailure"
    - type: "INPUT"
      name: "cause"
      modelFingerprint: "1D9CEFDD57E45CF12FAE8B8B31814824"
      valueUuid: "cause"
    - type: "LOCAL_VARIABLE"
      name: "bindException"
      modelFingerprint: "7983CA0CCFBFEFD8261067FFD53A7068"
      valueUuid: "rootFailure"
      methodExercised:
        expression: "getAllErrors():list"
    - type: "LOCAL_VARIABLE"
      name: "bindException"
      modelFingerprint: "BE7875C522BE5587C4AA379EA49EF45D"
      valueUuid: "rootFailure"
      methodExercised:
        expression: "getTarget():object"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "25D9688E335224EA3CAC9D4558E0D5EE"
      valueUuid: "failureAnalysis"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isInstance(java.lang.Throwable)\
        \ : boolean"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.analyzer.BindValidationFailureAnalyzer"
        parameters: []
      valueType: "org.springframework.boot.diagnostics.analyzer.BindValidationFailureAnalyzer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.validation.BindException"
      uuid: "rootFailure"
      explicitCastNeeded: true
      explicitCastForOverloadedMethods: "java.lang.Throwable"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "cause"
    - sapientType: "MOCK"
      valueType: "org.springframework.validation.BindException"
      uuid: "rootFailure"
      explicitCastNeeded: true
      explicitCastForOverloadedMethods: "java.lang.Throwable"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.validation.ObjectError"
      uuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.validation.BindException"
      uuid: "rootFailure"
      explicitCastNeeded: true
      explicitCastForOverloadedMethods: "java.lang.Throwable"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.FailureAnalysis"
        parameters:
        - name: "description"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "string2"
        - name: "action"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Update your application's configuration"
            valueType: "java.lang.String"
            uuid: "uniqueUuid2"
            fixed: true
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Throwable"
              parameters: []
            valueType: "java.lang.Throwable"
            uuid: "throwable3"
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "failureAnalysis"
      fixed: true
    branches:
    - lineNumber: 58
      expression: "failure != null"
      range: "(58,10)-(58,24)"
      evaluatedAs: true
      internalMethodName: "findCause"
    - lineNumber: 59
      expression: "type.isInstance(failure)"
      range: "(59,8)-(59,31)"
      evaluatedAs: false
      internalMethodName: "findCause"
    - lineNumber: 49
      expression: "validationException != null"
      range: "(49,7)-(49,33)"
      evaluatedAs: false
      internalMethodName: "getBindValidationExceptionDetails"
    - lineNumber: 56
      expression: "bindException != null"
      range: "(56,7)-(56,27)"
      evaluatedAs: true
      internalMethodName: "getBindValidationExceptionDetails"
    - lineNumber: 41
      expression: "details == null"
      range: "(41,7)-(41,21)"
      evaluatedAs: false
    - lineNumber: 66
      expression: "for-each(details.getErrors())"
      range: "(66,28)-(66,46)"
      evaluatedAs: false
      internalMethodName: "analyzeBindValidationException"
  - pathId: "path1"
    testPathName: "analyze2WhenOriginIsNotNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "CA81C2D8E40734DBF2D320477751A11A"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "rootFailure"
      modelFingerprint: "230CB92BC9823D5067401198FFFF17A8"
      valueUuid: "rootFailure"
    - type: "INPUT"
      name: "cause"
      modelFingerprint: "1D9CEFDD57E45CF12FAE8B8B31814824"
      valueUuid: "cause"
    - type: "LOCAL_VARIABLE"
      name: "validationException"
      modelFingerprint: "7373C9ED54648379F8A8894159EFA01F"
      valueUuid: "rootFailure"
      methodExercised:
        expression: "getValidationErrors():validationErrors"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "C0BA29FEF83E9E04ACE866DFD0AF49ED"
      valueUuid: "validationErrors"
      methodExercised:
        expression: "getAllErrors():list"
    - type: "STATIC"
      name: "Origin.class"
      modelFingerprint: "2DCB7C480F3D466AC9BF87CCA283CB08"
      valueUuid: "Origin.class"
      methodExercised:
        expression: "from(source:object2):origin"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "error"
      modelFingerprint: "1DE2B8774239433AD6917A43246D81B4"
      valueUuid: "object2"
      methodExercised:
        expression: "getObjectName():objectName"
    - type: "LOCAL_VARIABLE"
      name: "error"
      modelFingerprint: "C6F3C7A8D7D7E9BBCFD81228A7F8E22E"
      valueUuid: "object2"
      methodExercised:
        expression: "getField():field"
    - type: "LOCAL_VARIABLE"
      name: "error"
      modelFingerprint: "C24C8425CFDAEB69D20ECB05139A93BB"
      valueUuid: "object2"
      methodExercised:
        expression: "getRejectedValue():rejectedValue"
    - type: "LOCAL_VARIABLE"
      name: "error"
      modelFingerprint: "6D574AB324A0AEE2CC026CE9FDFDCF0F"
      valueUuid: "object2"
      methodExercised:
        expression: "getDefaultMessage():defaultMessage"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "25D9688E335224EA3CAC9D4558E0D5EE"
      valueUuid: "failureAnalysis"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isInstance(java.lang.Throwable)\
        \ : boolean"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.analyzer.BindValidationFailureAnalyzer"
        parameters: []
      valueType: "org.springframework.boot.diagnostics.analyzer.BindValidationFailureAnalyzer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.validation.BindValidationException"
      uuid: "rootFailure"
      explicitCastNeeded: true
      explicitCastForOverloadedMethods: "java.lang.Throwable"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "cause"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.validation.BindValidationException"
      uuid: "rootFailure"
      explicitCastNeeded: true
      explicitCastForOverloadedMethods: "java.lang.Throwable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.validation.ValidationErrors"
      uuid: "validationErrors"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.validation.ValidationErrors"
      uuid: "validationErrors"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.validation.ObjectError"
      uuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "Origin.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin"
      nameForMock: "origin"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.validation.FieldError"
        parameters:
        - name: "objectName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "objectName"
        - name: "field"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "field"
        - name: "rejectedValue"
          value:
            sapientType: "MOCK"
            valueType: "java.lang.Object"
            uuid: "rejectedValue"
            nameForMock: "rejectedValue"
        - name: "bindingFailure"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "object2-bindingFailure"
        - name: "codes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "object2-codes"
        - name: "arguments"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Object[]"
            uuid: "object2-arguments"
        - name: "defaultMessage"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "defaultMessage"
      valueType: "org.springframework.validation.FieldError"
      uuid: "object2"
      collectionUuid: "list2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.validation.FieldError"
        parameters:
        - name: "objectName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "objectName"
        - name: "field"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "field"
        - name: "rejectedValue"
          value:
            sapientType: "MOCK"
            valueType: "java.lang.Object"
            uuid: "rejectedValue"
            nameForMock: "rejectedValue"
        - name: "bindingFailure"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "object2-bindingFailure"
        - name: "codes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "object2-codes"
        - name: "arguments"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Object[]"
            uuid: "object2-arguments"
        - name: "defaultMessage"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "defaultMessage"
      valueType: "org.springframework.validation.FieldError"
      uuid: "object2"
      collectionUuid: "list2"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "objectName"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.validation.FieldError"
        parameters:
        - name: "objectName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "objectName"
        - name: "field"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "field"
        - name: "rejectedValue"
          value:
            sapientType: "MOCK"
            valueType: "java.lang.Object"
            uuid: "rejectedValue"
            nameForMock: "rejectedValue"
        - name: "bindingFailure"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "object2-bindingFailure"
        - name: "codes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "object2-codes"
        - name: "arguments"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Object[]"
            uuid: "object2-arguments"
        - name: "defaultMessage"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "defaultMessage"
      valueType: "org.springframework.validation.FieldError"
      uuid: "object2"
      collectionUuid: "list2"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "field"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.validation.FieldError"
        parameters:
        - name: "objectName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "objectName"
        - name: "field"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "field"
        - name: "rejectedValue"
          value:
            sapientType: "MOCK"
            valueType: "java.lang.Object"
            uuid: "rejectedValue"
            nameForMock: "rejectedValue"
        - name: "bindingFailure"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "object2-bindingFailure"
        - name: "codes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "object2-codes"
        - name: "arguments"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Object[]"
            uuid: "object2-arguments"
        - name: "defaultMessage"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "defaultMessage"
      valueType: "org.springframework.validation.FieldError"
      uuid: "object2"
      collectionUuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.lang.Object"
      uuid: "rejectedValue"
      nameForMock: "rejectedValue"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.validation.FieldError"
        parameters:
        - name: "objectName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "objectName"
        - name: "field"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "field"
        - name: "rejectedValue"
          value:
            sapientType: "MOCK"
            valueType: "java.lang.Object"
            uuid: "rejectedValue"
            nameForMock: "rejectedValue"
        - name: "bindingFailure"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "object2-bindingFailure"
        - name: "codes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "object2-codes"
        - name: "arguments"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Object[]"
            uuid: "object2-arguments"
        - name: "defaultMessage"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "defaultMessage"
      valueType: "org.springframework.validation.FieldError"
      uuid: "object2"
      collectionUuid: "list2"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "defaultMessage"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.FailureAnalysis"
        parameters:
        - name: "description"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "string10"
        - name: "action"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Update your application's configuration"
            valueType: "java.lang.String"
            uuid: "uniqueUuid3"
            fixed: true
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Throwable"
              parameters: []
            valueType: "java.lang.Throwable"
            uuid: "throwable"
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "failureAnalysis"
      fixed: true
    branches:
    - lineNumber: 58
      expression: "failure != null"
      range: "(58,10)-(58,24)"
      evaluatedAs: true
      internalMethodName: "findCause"
    - lineNumber: 59
      expression: "type.isInstance(failure)"
      range: "(59,8)-(59,31)"
      evaluatedAs: true
      internalMethodName: "findCause"
    - lineNumber: 49
      expression: "validationException != null"
      range: "(49,7)-(49,33)"
      evaluatedAs: true
      internalMethodName: "getBindValidationExceptionDetails"
    - lineNumber: 41
      expression: "details == null"
      range: "(41,7)-(41,21)"
      evaluatedAs: false
    - lineNumber: 66
      expression: "for-each(details.getErrors())"
      range: "(66,28)-(66,46)"
      evaluatedAs: true
      internalMethodName: "analyzeBindValidationException"
    - lineNumber: 67
      expression: "error instanceof FieldError fieldError"
      range: "(67,8)-(67,45)"
      evaluatedAs: true
      internalMethodName: "analyzeBindValidationException"
    - lineNumber: 79
      expression: "origin != null"
      range: "(79,7)-(79,20)"
      evaluatedAs: true
      internalMethodName: "appendFieldError"
