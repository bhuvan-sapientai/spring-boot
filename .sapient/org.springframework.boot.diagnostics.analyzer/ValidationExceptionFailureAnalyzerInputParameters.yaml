---
modelFingerprint: "E95623080B1E4A1FBA7F24585FB2A1CB"
targetClass:
  fullClassName: "org.springframework.boot.diagnostics.analyzer.ValidationExceptionFailureAnalyzer"
methods:
- method:
    name: "analyze"
    sourceCodeSignature: "FailureAnalysis analyze(Throwable rootFailure, ValidationException\
      \ cause)"
    returnType: "org.springframework.boot.diagnostics.FailureAnalysis"
    parameters:
    - name: "rootFailure"
      type: "java.lang.Throwable"
    - name: "cause"
      type: "jakarta.validation.ValidationException"
    instructionFingerprint: "14F307851D7FC7FD72E7E66914B9D7BE"
  paths:
  - pathId: "path1"
    testPathName: "analyze2WhenCauseGetMessageStartsWithJAKARTA_MISSING_IMPLEMENTATION_MESSAGE"
    constructorSignature: "<init>() : void"
    modelFingerprint: "D5AA59B7454CBA54A28809DB8AB657A1"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "rootFailure"
      modelFingerprint: "342BEFE484C53ADA99B8405F2B8802F3"
      valueUuid: "rootFailure"
    - type: "INPUT"
      name: "cause"
      modelFingerprint: "FF4147C60D70E91DF69A0172ED98035F"
      valueUuid: "cause"
    - type: "LOCAL_VARIABLE"
      name: "cause"
      modelFingerprint: "995E2359B15DD971BAC9443027CEA64E"
      valueUuid: "cause"
      methodExercised:
        expression: "getMessage():message"
    - type: "LOCAL_VARIABLE"
      name: "cause"
      modelFingerprint: "995E2359B15DD971BAC9443027CEA64E"
      valueUuid: "cause"
      methodExercised:
        expression: "getMessage():message"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "BFA32B4451A5BF621B332F3164BDB708"
      valueUuid: "failureAnalysis"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.analyzer.ValidationExceptionFailureAnalyzer"
        parameters: []
      valueType: "org.springframework.boot.diagnostics.analyzer.ValidationExceptionFailureAnalyzer"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "rootFailure"
    - sapientType: "OBJECT"
      content: !<new>
        target: "jakarta.validation.ValidationException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Unable to create a Configuration, because no Jakarta Bean Validation\
                \ provider could be foundA"
            valueType: "java.lang.String"
            uuid: "message"
      valueType: "jakarta.validation.ValidationException"
      uuid: "cause"
    - sapientType: "OBJECT"
      content: !<new>
        target: "jakarta.validation.ValidationException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Unable to create a Configuration, because no Jakarta Bean Validation\
                \ provider could be foundA"
            valueType: "java.lang.String"
            uuid: "message"
      valueType: "jakarta.validation.ValidationException"
      uuid: "cause"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Unable to create a Configuration, because no Jakarta Bean Validation\
          \ provider could be foundA"
      valueType: "java.lang.String"
      uuid: "message"
    - sapientType: "OBJECT"
      content: !<new>
        target: "jakarta.validation.ValidationException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Unable to create a Configuration, because no Jakarta Bean Validation\
                \ provider could be foundA"
            valueType: "java.lang.String"
            uuid: "message"
      valueType: "jakarta.validation.ValidationException"
      uuid: "cause"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Unable to create a Configuration, because no Jakarta Bean Validation\
          \ provider could be foundA"
      valueType: "java.lang.String"
      uuid: "message"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.FailureAnalysis"
        parameters:
        - name: "description"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "The Bean Validation API is on the classpath but no implementation\
                \ could be found"
            valueType: "java.lang.String"
            uuid: "uniqueUuid1"
            fixed: true
        - name: "action"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Add an implementation, such as Hibernate Validator, to the classpath"
            valueType: "java.lang.String"
            uuid: "uniqueUuid2"
            fixed: true
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "jakarta.validation.ValidationException"
              parameters:
              - name: "message"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "Unable to create a Configuration, because no Jakarta Bean\
                      \ Validation provider could be foundA"
                  valueType: "java.lang.String"
                  uuid: "message"
            valueType: "jakarta.validation.ValidationException"
            uuid: "cause"
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "failureAnalysis"
      fixed: true
    branches:
    - lineNumber: 41
      expression: "cause.getMessage().startsWith(JAVAX_MISSING_IMPLEMENTATION_MESSAGE)"
      range: "(41,7)-(41,73)"
      evaluatedAs: false
    - lineNumber: 42
      expression: "cause.getMessage().startsWith(JAKARTA_MISSING_IMPLEMENTATION_MESSAGE)"
      range: "(42,8)-(42,76)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "analyze2WhenCauseGetMessageNotStartsWithJAKARTA_MISSING_IMPLEMENTATION_MESSAGE"
    constructorSignature: "<init>() : void"
    modelFingerprint: "7A00FE1D5DF74E599E46082002344325"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "rootFailure"
      modelFingerprint: "342BEFE484C53ADA99B8405F2B8802F3"
      valueUuid: "rootFailure"
    - type: "INPUT"
      name: "cause"
      modelFingerprint: "F19CB0BCA673F6F72C586F4234B7E3D7"
      valueUuid: "cause"
    - type: "LOCAL_VARIABLE"
      name: "cause"
      modelFingerprint: "351F57CF32369B97550726647952E77F"
      valueUuid: "cause"
      methodExercised:
        expression: "getMessage():message"
    - type: "LOCAL_VARIABLE"
      name: "cause"
      modelFingerprint: "351F57CF32369B97550726647952E77F"
      valueUuid: "cause"
      methodExercised:
        expression: "getMessage():message"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "CFD668B73CDA4578861F95E56AEEBB6D"
      valueUuid: "failureAnalysis"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.analyzer.ValidationExceptionFailureAnalyzer"
        parameters: []
      valueType: "org.springframework.boot.diagnostics.analyzer.ValidationExceptionFailureAnalyzer"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "rootFailure"
    - sapientType: "OBJECT"
      content: !<new>
        target: "jakarta.validation.ValidationException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "message"
      valueType: "jakarta.validation.ValidationException"
      uuid: "cause"
    - sapientType: "OBJECT"
      content: !<new>
        target: "jakarta.validation.ValidationException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "message"
      valueType: "jakarta.validation.ValidationException"
      uuid: "cause"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "message"
    - sapientType: "OBJECT"
      content: !<new>
        target: "jakarta.validation.ValidationException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "message"
      valueType: "jakarta.validation.ValidationException"
      uuid: "cause"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "message"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "failureAnalysis"
      fixed: true
    branches:
    - lineNumber: 41
      expression: "cause.getMessage().startsWith(JAVAX_MISSING_IMPLEMENTATION_MESSAGE)"
      range: "(41,7)-(41,73)"
      evaluatedAs: false
    - lineNumber: 42
      expression: "cause.getMessage().startsWith(JAKARTA_MISSING_IMPLEMENTATION_MESSAGE)"
      range: "(42,8)-(42,76)"
      evaluatedAs: false
