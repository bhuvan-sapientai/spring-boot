---
modelFingerprint: "915FA9592EC6650F969FB58F7F78E0AE"
targetClass:
  fullClassName: "org.springframework.boot.context.properties.source.ConfigurationProperty"
methods:
- method:
    name: "getSource"
    sourceCodeSignature: "ConfigurationPropertySource getSource()"
    returnType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
    instructionFingerprint: "CB92AA7505A2FAC851DE3AFBE38719D6"
  paths:
  - pathId: "path1"
    testPathName: "getSourceTest"
    constructorSignature: "<init>(org.springframework.boot.context.properties.source.ConfigurationPropertyName,java.lang.Object,org.springframework.boot.origin.Origin)\
      \ : void"
    modelFingerprint: "BB6CE74814F74C05AAE5E9CEC53FB4DE"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "getName"
    sourceCodeSignature: "ConfigurationPropertyName getName()"
    returnType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    instructionFingerprint: "EADEBE4CDEE8EB944432205FAF657F18"
  paths:
  - pathId: "path1"
    testPathName: "getNameTest"
    constructorSignature: "<init>(org.springframework.boot.context.properties.source.ConfigurationPropertyName,java.lang.Object,org.springframework.boot.origin.Origin)\
      \ : void"
    modelFingerprint: "2C067509E7B023C4CC4E849C63872820"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "getValue"
    sourceCodeSignature: "Object getValue()"
    returnType: "java.lang.Object"
    instructionFingerprint: "CDFB22A64F60814CB42F30FCC66E6AFC"
  paths:
  - pathId: "path1"
    testPathName: "getValueTest"
    constructorSignature: "<init>(org.springframework.boot.context.properties.source.ConfigurationPropertyName,java.lang.Object,org.springframework.boot.origin.Origin)\
      \ : void"
    modelFingerprint: "08DED2EBC440C5E3D67D6E824B48BCB3"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "getOrigin"
    sourceCodeSignature: "Origin getOrigin()"
    returnType: "org.springframework.boot.origin.Origin"
    instructionFingerprint: "F4DCD75CCFE1C9F17DBCC0F175DAAF8B"
  paths:
  - pathId: "path1"
    testPathName: "getOriginTest"
    constructorSignature: "<init>(org.springframework.boot.context.properties.source.ConfigurationPropertyName,java.lang.Object,org.springframework.boot.origin.Origin)\
      \ : void"
    modelFingerprint: "0096956BAF31466C607C630CC9D96775"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "equals"
    sourceCodeSignature: "boolean equals(Object obj)"
    returnType: "boolean"
    parameters:
    - name: "obj"
      type: "java.lang.Object"
    instructionFingerprint: "C2351969F6794C32F005B70A2BA7234F"
  paths:
  - pathId: "path1"
    testPathName: "equalsWhenThisEqualsObj"
    constructorSignature: "<init>(org.springframework.boot.context.properties.source.ConfigurationPropertyName,java.lang.Object,org.springframework.boot.origin.Origin)\
      \ : void"
    modelFingerprint: "37A5601CEBB8EA3C8264310D49658E75"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    branches:
    - lineNumber: 92
      expression: "this == obj"
      range: "(92,7)-(92,17)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "equalsWhenGetClassNotEqualsObjGetClass"
    constructorSignature: "<init>(org.springframework.boot.context.properties.source.ConfigurationPropertyName,java.lang.Object,org.springframework.boot.origin.Origin)\
      \ : void"
    modelFingerprint: "EB3684C8EA79BF354EFC992E46CAB83D"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    branches:
    - lineNumber: 92
      expression: "this == obj"
      range: "(92,7)-(92,17)"
      evaluatedAs: false
    - lineNumber: 95
      expression: "obj == null"
      range: "(95,7)-(95,17)"
      evaluatedAs: false
    - lineNumber: 95
      expression: "getClass() != obj.getClass()"
      range: "(95,22)-(95,49)"
      evaluatedAs: true
  - pathId: "path5"
    testPathName: "equalsWhenNotResult"
    constructorSignature: "<init>(org.springframework.boot.context.properties.source.ConfigurationPropertyName,java.lang.Object,org.springframework.boot.origin.Origin)\
      \ : void"
    modelFingerprint: "B2F471686D0E4F0D8D27F543C4B256EA"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    branches:
    - lineNumber: 92
      expression: "this == obj"
      range: "(92,7)-(92,17)"
      evaluatedAs: false
    - lineNumber: 95
      expression: "obj == null"
      range: "(95,7)-(95,17)"
      evaluatedAs: false
    - lineNumber: 95
      expression: "getClass() != obj.getClass()"
      range: "(95,22)-(95,49)"
      evaluatedAs: false
    - lineNumber: 100
      expression: "result"
      range: "(100,12)-(100,17)"
      evaluatedAs: true
    - lineNumber: 100
      expression: "ObjectUtils.nullSafeEquals(this.name, other.name)"
      range: "(100,22)-(100,70)"
      evaluatedAs: false
    - lineNumber: 101
      expression: "result"
      range: "(101,12)-(101,17)"
      evaluatedAs: false
  - pathId: "path3"
    testPathName: "equalsWhenObjectUtilsNullSafeEqualsThisValueOtherValue"
    constructorSignature: "<init>(org.springframework.boot.context.properties.source.ConfigurationPropertyName,java.lang.Object,org.springframework.boot.origin.Origin)\
      \ : void"
    modelFingerprint: "7C3E9D5A077CB57CD0569E1E4090BDD3"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    branches:
    - lineNumber: 92
      expression: "this == obj"
      range: "(92,7)-(92,17)"
      evaluatedAs: false
    - lineNumber: 95
      expression: "obj == null"
      range: "(95,7)-(95,17)"
      evaluatedAs: false
    - lineNumber: 95
      expression: "getClass() != obj.getClass()"
      range: "(95,22)-(95,49)"
      evaluatedAs: false
    - lineNumber: 100
      expression: "result"
      range: "(100,12)-(100,17)"
      evaluatedAs: true
    - lineNumber: 100
      expression: "ObjectUtils.nullSafeEquals(this.name, other.name)"
      range: "(100,22)-(100,70)"
      evaluatedAs: true
    - lineNumber: 101
      expression: "result"
      range: "(101,12)-(101,17)"
      evaluatedAs: true
    - lineNumber: 101
      expression: "ObjectUtils.nullSafeEquals(this.value, other.value)"
      range: "(101,22)-(101,72)"
      evaluatedAs: true
- method:
    name: "toString"
    sourceCodeSignature: "String toString()"
    returnType: "java.lang.String"
    instructionFingerprint: "7DA45C2F7B8BD766ECC09EA971AEB900"
  paths:
  - pathId: "path1"
    testPathName: "toStringTest"
    constructorSignature: "<init>(org.springframework.boot.context.properties.source.ConfigurationPropertyName,java.lang.Object,org.springframework.boot.origin.Origin)\
      \ : void"
    modelFingerprint: "8F40467F07C2940B780193AFB019F208"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "8B2E5ECA202BDE3EA3F1B7E4B87165B9"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "6B3E2F800EF54F12F4F1664D3F634B2E"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid17):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "848EEAA70B541E9EA3CD719CF5FEDB77"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:value,message:uniqueUuid18):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "DF4583C4044758BECEAD9A19E98508ED"
      valueUuid: "toStringCreator"
      methodExercised:
        expression: "append(fieldName:uniqueUuid19,value:name):toStringCreator2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "56CC679D6059BD8774D0F1CF2EBC1BF0"
      valueUuid: "toStringCreator2"
      methodExercised:
        expression: "append(fieldName:uniqueUuid21,value:value):toStringCreator3"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "D9447D0AABD6421BFC5B85A0C6056B2B"
      valueUuid: "toStringCreator3"
      methodExercised:
        expression: "append(fieldName:uniqueUuid24,value:origin):toStringCreator4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D446A609419428DDEAA49A58091F3986"
      valueUuid: "string"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return new ToStringCreator(this).append(\\\"name\\\", this.name)"
      lineNumber: 114
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type ToStringCreator - Method: append"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid17"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "value"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Value must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid18"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.core.style.ToStringCreator"
        parameters:
        - name: "obj"
          value:
            sapientType: "THIS"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            uuid: "targetClassObject"
            fixed: true
      valueType: "org.springframework.core.style.ToStringCreator"
      uuid: "toStringCreator"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.style.ToStringCreator"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.core.style.ToStringCreator"
            parameters:
            - name: "obj"
              value:
                sapientType: "THIS"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
                uuid: "targetClassObject"
                fixed: true
          valueType: "org.springframework.core.style.ToStringCreator"
          uuid: "toStringCreator"
          fixed: true
        methodParameters:
        - name: "fieldName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "name"
            valueType: "java.lang.String"
            uuid: "uniqueUuid23"
            fixed: true
        - name: "value"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
        methodName: "append"
      valueType: "org.springframework.core.style.ToStringCreator"
      uuid: "toStringCreator2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "name"
      valueType: "java.lang.String"
      uuid: "uniqueUuid19"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.style.ToStringCreator"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.core.style.ToStringCreator"
            parameters:
            - name: "obj"
              value:
                sapientType: "THIS"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
                uuid: "targetClassObject"
                fixed: true
          valueType: "org.springframework.core.style.ToStringCreator"
          uuid: "toStringCreator"
          fixed: true
        methodParameters:
        - name: "fieldName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "name"
            valueType: "java.lang.String"
            uuid: "uniqueUuid23"
            fixed: true
        - name: "value"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
        methodName: "append"
      valueType: "org.springframework.core.style.ToStringCreator"
      uuid: "toStringCreator2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.style.ToStringCreator"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.springframework.core.style.ToStringCreator"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.style.ToStringCreator"
                parameters:
                - name: "obj"
                  value:
                    sapientType: "THIS"
                    valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
                    uuid: "targetClassObject"
                    fixed: true
              valueType: "org.springframework.core.style.ToStringCreator"
              uuid: "toStringCreator"
              fixed: true
            methodParameters:
            - name: "fieldName"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "name"
                valueType: "java.lang.String"
                fixed: true
            - name: "value"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "name"
            methodName: "append"
          valueType: "org.springframework.core.style.ToStringCreator"
          uuid: "toStringCreator2"
        methodParameters:
        - name: "fieldName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "value"
            valueType: "java.lang.String"
            uuid: "uniqueUuid26"
            fixed: true
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "value"
        methodName: "append"
      valueType: "org.springframework.core.style.ToStringCreator"
      uuid: "toStringCreator3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "value"
      valueType: "java.lang.String"
      uuid: "uniqueUuid21"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "value"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.style.ToStringCreator"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.springframework.core.style.ToStringCreator"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.style.ToStringCreator"
                parameters:
                - name: "obj"
                  value:
                    sapientType: "THIS"
                    valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
                    uuid: "targetClassObject"
                    fixed: true
              valueType: "org.springframework.core.style.ToStringCreator"
              uuid: "toStringCreator"
              fixed: true
            methodParameters:
            - name: "fieldName"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "name"
                valueType: "java.lang.String"
                fixed: true
            - name: "value"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "name"
            methodName: "append"
          valueType: "org.springframework.core.style.ToStringCreator"
          uuid: "toStringCreator2"
        methodParameters:
        - name: "fieldName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "value"
            valueType: "java.lang.String"
            uuid: "uniqueUuid26"
            fixed: true
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "value"
        methodName: "append"
      valueType: "org.springframework.core.style.ToStringCreator"
      uuid: "toStringCreator3"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.style.ToStringCreator"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.springframework.core.style.ToStringCreator"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<method_return_from_value>
                target: "org.springframework.core.style.ToStringCreator"
                localVariableValue:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.springframework.core.style.ToStringCreator"
                    parameters:
                    - name: "obj"
                      value:
                        sapientType: "THIS"
                        valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
                        uuid: "targetClassObject"
                        fixed: true
                  valueType: "org.springframework.core.style.ToStringCreator"
                  uuid: "toStringCreator"
                  fixed: true
                methodParameters:
                - name: "fieldName"
                  value:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "name"
                    valueType: "java.lang.String"
                    fixed: true
                - name: "value"
                  value:
                    sapientType: "MOCK"
                    valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                    uuid: "name"
                methodName: "append"
              valueType: "org.springframework.core.style.ToStringCreator"
              uuid: "toStringCreator2"
            methodParameters:
            - name: "fieldName"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "value"
                valueType: "java.lang.String"
                fixed: true
            - name: "value"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "java.lang.Object"
                  parameters: []
                valueType: "java.lang.Object"
                uuid: "value"
            methodName: "append"
          valueType: "org.springframework.core.style.ToStringCreator"
          uuid: "toStringCreator3"
        methodParameters:
        - name: "fieldName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "origin"
            valueType: "java.lang.String"
            uuid: "uniqueUuid25"
            fixed: true
        - name: "value"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
        methodName: "append"
      valueType: "org.springframework.core.style.ToStringCreator"
      uuid: "toStringCreator4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "origin"
      valueType: "java.lang.String"
      uuid: "uniqueUuid24"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin"
    - sapientType: "BASIC"
      content: !<regular>
        value: "result1"
      valueType: "java.lang.String"
      uuid: "string"
- method:
    name: "compareTo"
    sourceCodeSignature: "int compareTo(ConfigurationProperty other)"
    returnType: "int"
    parameters:
    - name: "other"
      type: "org.springframework.boot.context.properties.source.ConfigurationProperty"
    instructionFingerprint: "DF737BE6876CCE69D428DC7E2B6EA780"
  paths:
  - pathId: "path1"
    testPathName: "compareToTest"
    constructorSignature: "<init>(org.springframework.boot.context.properties.source.ConfigurationPropertyName,java.lang.Object,org.springframework.boot.origin.Origin)\
      \ : void"
    modelFingerprint: "97BD96224F771F62B889FA74DF650438"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "E1E9394420E2F261F1DF9BCA9AD0BB9F"
      valueUuid: "target"
    - type: "INPUT"
      name: "other"
      modelFingerprint: "0DA018236E1A9A0E2954B3F020C1B001"
      valueUuid: "other"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F400797EED7914A2CF42637724C47F90"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid27):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "848EEAA70B541E9EA3CD719CF5FEDB77"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:value,message:uniqueUuid28):void2"
        staticAccess: true
    - type: "FIELD"
      name: "name"
      modelFingerprint: "4BC3FC82705C07A229D785B253DD8E9D"
      valueUuid: "name"
      methodExercised:
        expression: "compareTo(other:configurationPropertyName2):int1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D59799CAFC96C0482BA7B23AC5F38441"
      valueUuid: "int1"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "configurationPropertyName2"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "other-value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "other-origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "other"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid27"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "value"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Value must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid28"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName2"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int1"
- method:
    name: "of"
    sourceCodeSignature: "ConfigurationProperty of(ConfigurationPropertyName name,\
      \ OriginTrackedValue value)"
    returnType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
    parameters:
    - name: "name"
      type: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    - name: "value"
      type: "org.springframework.boot.origin.OriginTrackedValue"
    instructionFingerprint: "4DFD5740E18D857CE5B672B206A1E38A"
  paths:
  - pathId: "path1"
    testPathName: "ofWhenValueIsNull"
    modelFingerprint: "DC9AE4B5198528B0E03052D1FD8E1059"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "value"
      modelFingerprint: "1115CF75516EA046AF9690172F93564A"
      valueUuid: "value"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "AF7DE2B64986230ACFA5A65E259E5AB7"
      valueUuid: "configurationProperty"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.origin.OriginTrackedValue"
      uuid: "value"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
      fixed: true
    branches:
    - lineNumber: 126
      expression: "value == null"
      range: "(126,7)-(126,19)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "ofWhenValueIsNotNull"
    modelFingerprint: "6719F464561DC1ECBFB479E4696E65D0"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "value"
      modelFingerprint: "C47187D095E52631706381AECB8CB928"
      valueUuid: "value"
    - type: "LOCAL_VARIABLE"
      name: "value"
      modelFingerprint: "52CF78D004B0D23852F79BBD99F0CAC1"
      valueUuid: "value"
      methodExercised:
        expression: "getValue():value2"
    - type: "LOCAL_VARIABLE"
      name: "value"
      modelFingerprint: "4493DEC33F63FD9A9A32FD930A7EE50E"
      valueUuid: "value"
      methodExercised:
        expression: "getOrigin():origin"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "6B3E2F800EF54F12F4F1664D3F634B2E"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid29):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "3BCDC837497296E39570DCE49F60F27D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:value2,message:uniqueUuid30):void2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "DB881C727EA9B4F4951242CB65902286"
      valueUuid: "configurationProperty"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.origin.OriginTrackedValue"
        method: "of"
        methodParameters:
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "value2"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
      valueType: "org.springframework.boot.origin.OriginTrackedValue"
      uuid: "value"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.origin.OriginTrackedValue"
        method: "of"
        methodParameters:
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "value2"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
      valueType: "org.springframework.boot.origin.OriginTrackedValue"
      uuid: "value"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "value2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.origin.OriginTrackedValue"
        method: "of"
        methodParameters:
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "value2"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
      valueType: "org.springframework.boot.origin.OriginTrackedValue"
      uuid: "value"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid29"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "value2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Value must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid30"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "value2"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
      fixed: true
    branches:
    - lineNumber: 126
      expression: "value == null"
      range: "(126,7)-(126,19)"
      evaluatedAs: false
- method:
    name: "of"
    sourceCodeSignature: "ConfigurationProperty of(ConfigurationPropertySource source,\
      \ ConfigurationPropertyName name, Object value, Origin origin)"
    returnType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
    parameters:
    - name: "source"
      type: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
    - name: "name"
      type: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    - name: "value"
      type: "java.lang.Object"
    - name: "origin"
      type: "org.springframework.boot.origin.Origin"
    instructionFingerprint: "CAEE267DC02567EE64BF4B88558D7AFE"
  paths:
  - pathId: "path1"
    testPathName: "of1WhenValueIsNull"
    modelFingerprint: "1F6045C0F85DBA39EBBC8C41290061F2"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "source"
      modelFingerprint: "AAA5FCC6D93084C5F1B83297096123D8"
      valueUuid: "source"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "value"
      modelFingerprint: "B36561C3D5F2A03C9B07DC331FC6EDA1"
      valueUuid: "value"
    - type: "INPUT"
      name: "origin"
      modelFingerprint: "4175C201C6B5D2B45C2780FB3372E738"
      valueUuid: "origin"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "AF7DE2B64986230ACFA5A65E259E5AB7"
      valueUuid: "configurationProperty"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "source"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "value"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
      fixed: true
    branches:
    - lineNumber: 134
      expression: "value == null"
      range: "(134,7)-(134,19)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "of1WhenValueIsNotNull"
    modelFingerprint: "09982FE8F66E25B8A0C14F6D30696F85"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "source"
      modelFingerprint: "AAA5FCC6D93084C5F1B83297096123D8"
      valueUuid: "source"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "value"
      modelFingerprint: "EB88C1798DFE893966CC3D4502A52694"
      valueUuid: "value"
    - type: "INPUT"
      name: "origin"
      modelFingerprint: "4175C201C6B5D2B45C2780FB3372E738"
      valueUuid: "origin"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "6B3E2F800EF54F12F4F1664D3F634B2E"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid31):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "848EEAA70B541E9EA3CD719CF5FEDB77"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:value,message:uniqueUuid32):void2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C32E6200DE3AA7111CDC420DBA6A49E0"
      valueUuid: "configurationProperty"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "source"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "value"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid31"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "value"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Value must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid32"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "source"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "source"
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
      fixed: true
    branches:
    - lineNumber: 134
      expression: "value == null"
      range: "(134,7)-(134,19)"
      evaluatedAs: false
