---
modelFingerprint: "2D41D1B7D7A0CF70B1495BFF25B821A7"
targetClass:
  fullClassName: "org.springframework.boot.context.properties.source.ConfigurationPropertyState"
methods:
- method:
    name: "search"
    sourceCodeSignature: "<T> ConfigurationPropertyState search(Iterable<T> source,\
      \ Predicate<T> predicate)"
    returnType: "org.springframework.boot.context.properties.source.ConfigurationPropertyState"
    parameters:
    - name: "source"
      type: "java.lang.Iterable"
    - name: "predicate"
      type: "java.util.function.Predicate"
    instructionFingerprint: "15BE33C472B9C4B7425E811BA42FE78F"
  paths:
  - pathId: "path1"
    testPathName: "searchWhenPredicateTestItem"
    modelFingerprint: "E361DD8A69CE403516E08EDDC8494E10"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "source"
      modelFingerprint: "5B8D1D614A7AB2F4F65D9BFA3097462D"
      valueUuid: "source"
    - type: "INPUT"
      name: "predicate"
      modelFingerprint: "EC1D923566895EAE7F4B1066C1372D4E"
      valueUuid: "predicate"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "7DFD8234B4EDF8ACDC125487271D50A6"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:source,message:uniqueUuid1):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "001C0239CF7C2D26A30518484CAEE33C"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:predicate,message:uniqueUuid2):void2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "F70B23A88E73F652E8EDDA5F974C1AB9"
      valueUuid: "Enum-org.springframework.boot.context.properties.source.ConfigurationPropertyState-PRESENT"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.Predicate.test(java.lang.Object)\
        \ : boolean"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
          valueType: "java.lang.Object"
          uuid: "object"
          collectionUuid: "source"
      valueType: "java.lang.Iterable"
      genericValueType: "java.lang.Object"
      uuid: "source"
    - sapientType: "MOCK"
      valueType: "java.util.function.Predicate"
      uuid: "predicate"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
          valueType: "java.lang.Object"
          uuid: "object"
          collectionUuid: "source"
      valueType: "java.lang.Iterable"
      genericValueType: "java.lang.Object"
      uuid: "source"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Source must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "java.util.function.Predicate"
      uuid: "predicate"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Predicate must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "PRESENT"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyState"
      uuid: "Enum-org.springframework.boot.context.properties.source.ConfigurationPropertyState-PRESENT"
      fixed: true
    branches:
    - lineNumber: 61
      expression: "for-each(source)"
      range: "(61,17)-(61,22)"
      evaluatedAs: true
    - lineNumber: 62
      expression: "predicate.test(item)"
      range: "(62,8)-(62,27)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "searchWhenPredicateNotTestItem"
    modelFingerprint: "E915DCA1B7D785EA301117B33DE5BF8B"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "source"
      modelFingerprint: "5B8D1D614A7AB2F4F65D9BFA3097462D"
      valueUuid: "source"
    - type: "INPUT"
      name: "predicate"
      modelFingerprint: "EC1D923566895EAE7F4B1066C1372D4E"
      valueUuid: "predicate"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "7DFD8234B4EDF8ACDC125487271D50A6"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:source,message:uniqueUuid3):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "001C0239CF7C2D26A30518484CAEE33C"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:predicate,message:uniqueUuid4):void2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A08CD4C85BE33FA7AC835E3B5C40D3AA"
      valueUuid: "Enum-org.springframework.boot.context.properties.source.ConfigurationPropertyState-ABSENT"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.Predicate.test(java.lang.Object)\
        \ : boolean"
    allValues:
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
          valueType: "java.lang.Object"
          uuid: "object"
          collectionUuid: "source"
      valueType: "java.lang.Iterable"
      genericValueType: "java.lang.Object"
      uuid: "source"
    - sapientType: "MOCK"
      valueType: "java.util.function.Predicate"
      uuid: "predicate"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
          valueType: "java.lang.Object"
          uuid: "object"
          collectionUuid: "source"
      valueType: "java.lang.Iterable"
      genericValueType: "java.lang.Object"
      uuid: "source"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Source must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "java.util.function.Predicate"
      uuid: "predicate"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Predicate must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "ABSENT"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyState"
      uuid: "Enum-org.springframework.boot.context.properties.source.ConfigurationPropertyState-ABSENT"
      fixed: true
    branches:
    - lineNumber: 61
      expression: "for-each(source)"
      range: "(61,17)-(61,22)"
      evaluatedAs: true
    - lineNumber: 62
      expression: "predicate.test(item)"
      range: "(62,8)-(62,27)"
      evaluatedAs: false
