---
modelFingerprint: "AA0846197B445B112D447ADF5583D117"
targetClass:
  fullClassName: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
methods:
- method:
    name: "getCaching"
    sourceCodeSignature: "ConfigurationPropertyCaching getCaching()"
    returnType: "org.springframework.boot.context.properties.source.ConfigurationPropertyCaching"
    instructionFingerprint: "8DB73C6035A93EDE6E8313B92910B201"
  paths:
  - pathId: "path1"
    testPathName: "getCachingTest"
    constructorSignature: "<init>(org.springframework.core.env.EnumerablePropertySource<?>,org.springframework.boot.context.properties.source.PropertyMapper[])\
      \ : void"
    modelFingerprint: "EBF76180950A47C3C452097FD8B757D9"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6C1725CBA6AFAF2D31155A7EF3509E66"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "67F0F1CBAAC1A13488369545F28C9602"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:propertySource,message:uniqueUuid1):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "22341A279BA87BBAE48FD72643F2E113"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "isTrue(expression:uniqueUuid2,message:uniqueUuid3):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "mapSource"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "490B57FB68206C6401CD6524000C96E2"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getName():name"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "4C4DE9EEF19CB6779EE781B3C8AD262E"
      valueUuid: "softReferenceConfigurationPropertyCache"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.BiPredicate.or(java.util.function.BiPredicate<org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.source.ConfigurationPropertyName>)\
        \ : java.util.function.BiPredicate<java.lang.Object,java.lang.Object>"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
        parameters:
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MapPropertySource"
            uuid: "propertySource"
        - name: "mappers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper"
                1:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper2"
            valueType: "org.springframework.boot.context.properties.source.PropertyMapper[]"
            uuid: "mappers"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PropertySource must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Mappers must contain at least one item"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemEnvironment"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
        parameters:
        - name: "neverExpire"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "uniqueUuid4"
            fixed: true
      valueType: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
      genericValueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
      uuid: "softReferenceConfigurationPropertyCache"
      fixed: true
- method:
    name: "getConfigurationProperty"
    sourceCodeSignature: "ConfigurationProperty getConfigurationProperty(ConfigurationPropertyName\
      \ name)"
    returnType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
    parameters:
    - name: "name"
      type: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    instructionFingerprint: "06EB778D292D4290BFE2A912FA205B39"
  paths:
  - pathId: "path1"
    testPathName: "getConfigurationPropertyWhenNameIsNull"
    constructorSignature: "<init>(org.springframework.core.env.EnumerablePropertySource<?>,org.springframework.boot.context.properties.source.PropertyMapper[])\
      \ : void"
    modelFingerprint: "E66E77D701716DB47694542805CC309F"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6C1725CBA6AFAF2D31155A7EF3509E66"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "B4BBCA6358391A4D4ED455D707A0B704"
      valueUuid: "name"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "67F0F1CBAAC1A13488369545F28C9602"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:propertySource,message:uniqueUuid5):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "22341A279BA87BBAE48FD72643F2E113"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "isTrue(expression:uniqueUuid6,message:uniqueUuid7):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "mapSource"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "490B57FB68206C6401CD6524000C96E2"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getName():name2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "AF7DE2B64986230ACFA5A65E259E5AB7"
      valueUuid: "configurationProperty"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.BiPredicate.or(java.util.function.BiPredicate<org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.source.ConfigurationPropertyName>)\
        \ : java.util.function.BiPredicate<java.lang.Object,java.lang.Object>"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
        parameters:
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MapPropertySource"
            uuid: "propertySource"
        - name: "mappers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper"
                1:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper2"
            valueType: "org.springframework.boot.context.properties.source.PropertyMapper[]"
            uuid: "mappers"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
      uuid: "target"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PropertySource must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid6"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Mappers must contain at least one item"
      valueType: "java.lang.String"
      uuid: "uniqueUuid7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemEnvironment"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
      fixed: true
    branches:
    - lineNumber: 97
      expression: "name == null"
      range: "(97,7)-(97,18)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "getConfigurationPropertyWhenConfigurationPropertyIsNotNull"
    constructorSignature: "<init>(org.springframework.core.env.EnumerablePropertySource<?>,org.springframework.boot.context.properties.source.PropertyMapper[])\
      \ : void"
    modelFingerprint: "EEA88C2279ED1BB36A011E719FBBC19D"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6C1725CBA6AFAF2D31155A7EF3509E66"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "67F0F1CBAAC1A13488369545F28C9602"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:propertySource,message:uniqueUuid8):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "22341A279BA87BBAE48FD72643F2E113"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "isTrue(expression:uniqueUuid9,message:uniqueUuid10):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "mapSource"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "490B57FB68206C6401CD6524000C96E2"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getName():name2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "LOCAL_VARIABLE"
      name: "mapper"
      modelFingerprint: "69610772C07A32DA3A4EF36DFA716B63"
      valueUuid: "propertyMapper"
      methodExercised:
        expression: "map(configurationPropertyName:name):list"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "29D0B74C0FE4A8DA6B500EFC01A4A1D3"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getProperty(name:object3):object4"
    - type: "STATIC"
      name: "PropertySourceOrigin.class"
      modelFingerprint: "540EB21914B4757DBE2232FB79B001DD"
      valueUuid: "PropertySourceOrigin.class"
      methodExercised:
        expression: "get(propertySource:propertySource,name:object3):origin"
        staticAccess: true
    - type: "STATIC"
      name: "ConfigurationProperty.class"
      modelFingerprint: "06322F2D6689D9C0783A6EFCC78B3E78"
      valueUuid: "ConfigurationProperty.class"
      methodExercised:
        expression: "of(source:targetClassObject,name:name,value:object4,origin:origin):configurationProperty"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "88BB7180F05BA5E7BFB6995FFC0A819F"
      valueUuid: "configurationProperty"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.BiPredicate.or(java.util.function.BiPredicate<org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.source.ConfigurationPropertyName>)\
        \ : java.util.function.BiPredicate<java.lang.Object,java.lang.Object>"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
        parameters:
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MapPropertySource"
            uuid: "propertySource"
        - name: "mappers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper"
                1:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper2"
            valueType: "org.springframework.boot.context.properties.source.PropertyMapper[]"
            uuid: "mappers"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PropertySource must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid8"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid9"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Mappers must contain at least one item"
      valueType: "java.lang.String"
      uuid: "uniqueUuid10"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemEnvironment"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "return_of_mapItem1"
          valueType: "java.lang.String"
          uuid: "object3"
          collectionUuid: "list"
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_mapItem1"
      valueType: "java.lang.String"
      uuid: "object3"
      collectionUuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.PropertySourceOrigin"
      uuid: "PropertySourceOrigin.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_mapItem1"
      valueType: "java.lang.String"
      uuid: "object3"
      collectionUuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "ConfigurationProperty.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySource"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
    branches:
    - lineNumber: 97
      expression: "name == null"
      range: "(97,7)-(97,18)"
      evaluatedAs: false
    - lineNumber: 78
      expression: "name == null"
      range: "(78,7)-(78,18)"
      evaluatedAs: false
      internalMethodName: "getConfigurationProperty"
    - lineNumber: 81
      expression: "for-each(this.mappers)"
      range: "(81,32)-(81,43)"
      evaluatedAs: true
      internalMethodName: "getConfigurationProperty"
    - lineNumber: 83
      expression: "for-each(mapper.map(name))"
      range: "(83,29)-(83,44)"
      evaluatedAs: true
      internalMethodName: "getConfigurationProperty"
    - lineNumber: 85
      expression: "value != null"
      range: "(85,10)-(85,22)"
      evaluatedAs: true
      internalMethodName: "getConfigurationProperty"
    - lineNumber: 101
      expression: "configurationProperty != null"
      range: "(101,7)-(101,35)"
      evaluatedAs: true
  - pathId: "path6"
    testPathName: "getConfigurationPropertyWhenValueIsNullAndConfigurationPropertyIsNullAndGetMappingsGetMappedNameIsEmpty"
    constructorSignature: "<init>(org.springframework.core.env.EnumerablePropertySource<?>,org.springframework.boot.context.properties.source.PropertyMapper[])\
      \ : void"
    modelFingerprint: "6532CC7AF8BB89D5B154A54CB3B33632"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6C1725CBA6AFAF2D31155A7EF3509E66"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "67F0F1CBAAC1A13488369545F28C9602"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:propertySource,message:uniqueUuid11):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "22341A279BA87BBAE48FD72643F2E113"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "isTrue(expression:uniqueUuid12,message:uniqueUuid13):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "mapSource"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "490B57FB68206C6401CD6524000C96E2"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getName():name2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "LOCAL_VARIABLE"
      name: "mapper"
      modelFingerprint: "69610772C07A32DA3A4EF36DFA716B63"
      valueUuid: "propertyMapper"
      methodExercised:
        expression: "map(configurationPropertyName:name):list"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "7BE5F6973847FE99F824C97AF768FA7B"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getProperty(name:object3):object4"
    - type: "FIELD"
      name: "cache"
      modelFingerprint: "9AE0C5A78235A084C465A001D095207E"
      valueUuid: "softReferenceConfigurationPropertyCache"
      methodExercised:
        expression: "get(factory:uniqueUuid14,refreshAction:uniqueUuid15):object5"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "AF7DE2B64986230ACFA5A65E259E5AB7"
      valueUuid: "configurationProperty2"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.BiPredicate.or(java.util.function.BiPredicate<org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.source.ConfigurationPropertyName>)\
        \ : java.util.function.BiPredicate<java.lang.Object,java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
        parameters:
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MapPropertySource"
            uuid: "propertySource"
        - name: "mappers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper"
                1:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper2"
            valueType: "org.springframework.boot.context.properties.source.PropertyMapper[]"
            uuid: "mappers"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PropertySource must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid11"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid12"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Mappers must contain at least one item"
      valueType: "java.lang.String"
      uuid: "uniqueUuid13"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemEnvironment"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "return_of_mapItem1"
          valueType: "java.lang.String"
          uuid: "object3"
          collectionUuid: "list"
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_mapItem1"
      valueType: "java.lang.String"
      uuid: "object3"
      collectionUuid: "list"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
        parameters:
        - name: "neverExpire"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "uniqueUuid18"
            fixed: true
      valueType: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
      genericValueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
      uuid: "softReferenceConfigurationPropertyCache"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
            parameters:
            - name: "neverExpire"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: true
                valueType: "boolean"
                fixed: true
          valueType: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
          genericValueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
          uuid: "softReferenceConfigurationPropertyCache"
          fixed: true
        methodParameters:
        - name: "factory"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            uuid: "uniqueUuid16"
        - name: "refreshAction"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.UnaryOperator"
            uuid: "uniqueUuid17"
        methodName: "get"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
      uuid: "object5"
      explicitCastNeeded: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      uuid: "uniqueUuid14"
    - sapientType: "ANY"
      valueType: "java.util.function.UnaryOperator"
      uuid: "uniqueUuid15"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty2"
      fixed: true
    branches:
    - lineNumber: 97
      expression: "name == null"
      range: "(97,7)-(97,18)"
      evaluatedAs: false
    - lineNumber: 78
      expression: "name == null"
      range: "(78,7)-(78,18)"
      evaluatedAs: false
      internalMethodName: "getConfigurationProperty"
    - lineNumber: 81
      expression: "for-each(this.mappers)"
      range: "(81,32)-(81,43)"
      evaluatedAs: true
      internalMethodName: "getConfigurationProperty"
    - lineNumber: 83
      expression: "for-each(mapper.map(name))"
      range: "(83,29)-(83,44)"
      evaluatedAs: true
      internalMethodName: "getConfigurationProperty"
    - lineNumber: 85
      expression: "value != null"
      range: "(85,10)-(85,22)"
      evaluatedAs: false
      internalMethodName: "getConfigurationProperty"
    - lineNumber: 101
      expression: "configurationProperty != null"
      range: "(101,7)-(101,35)"
      evaluatedAs: false
    - lineNumber: 104
      expression: "for-each(getMappings().getMapped(name))"
      range: "(104,27)-(104,55)"
      evaluatedAs: false
  - pathId: "path3"
    testPathName: "getConfigurationPropertyWhenValueIsNotNull"
    constructorSignature: "<init>(org.springframework.core.env.EnumerablePropertySource<?>,org.springframework.boot.context.properties.source.PropertyMapper[])\
      \ : void"
    modelFingerprint: "B1E79A2E19071082B58E9EA9517B26D7"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6C1725CBA6AFAF2D31155A7EF3509E66"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "67F0F1CBAAC1A13488369545F28C9602"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:propertySource,message:uniqueUuid19):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "22341A279BA87BBAE48FD72643F2E113"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "isTrue(expression:uniqueUuid20,message:uniqueUuid21):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "mapSource"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "490B57FB68206C6401CD6524000C96E2"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getName():name2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "LOCAL_VARIABLE"
      name: "mapper"
      modelFingerprint: "69610772C07A32DA3A4EF36DFA716B63"
      valueUuid: "propertyMapper"
      methodExercised:
        expression: "map(configurationPropertyName:name):list"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "29D0B74C0FE4A8DA6B500EFC01A4A1D3"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getProperty(name:object3):object4"
    - type: "STATIC"
      name: "PropertySourceOrigin.class"
      modelFingerprint: "540EB21914B4757DBE2232FB79B001DD"
      valueUuid: "PropertySourceOrigin.class"
      methodExercised:
        expression: "get(propertySource:propertySource,name:object3):origin"
        staticAccess: true
    - type: "STATIC"
      name: "ConfigurationProperty.class"
      modelFingerprint: "0171BB97032F2447F7110618F2621ED6"
      valueUuid: "ConfigurationProperty.class"
      methodExercised:
        expression: "of(source:targetClassObject,name:name,value:object4,origin:origin):configurationProperty"
        staticAccess: true
    - type: "FIELD"
      name: "cache"
      modelFingerprint: "9AE0C5A78235A084C465A001D095207E"
      valueUuid: "softReferenceConfigurationPropertyCache"
      methodExercised:
        expression: "get(factory:uniqueUuid22,refreshAction:uniqueUuid23):object5"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "09408CF234E9848EFC968E4FACB797B7"
      methodExercised:
        expression: "getPropertySource():enumerablePropertySource"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "CC644BBDBE7EEA803325C50E09D583A8"
      valueUuid: "enumerablePropertySource"
      methodExercised:
        expression: "getProperty(name:object6):object7"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "D38D86B3D509CF6864B7264D2DC56BEA"
      methodExercised:
        expression: "getPropertySource():enumerablePropertySource2"
    - type: "STATIC"
      name: "PropertySourceOrigin.class"
      modelFingerprint: "4A96E2A75C1CF32BD47D1624BC02BE00"
      valueUuid: "PropertySourceOrigin.class"
      methodExercised:
        expression: "get(propertySource:enumerablePropertySource2,name:object6):origin2"
        staticAccess: true
    - type: "STATIC"
      name: "ConfigurationProperty.class"
      modelFingerprint: "31A414B340543FCE9BDDF1BA3393C67D"
      valueUuid: "ConfigurationProperty.class"
      methodExercised:
        expression: "of(source:targetClassObject,name:name,value:object7,origin:origin2):configurationProperty2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "88BB7180F05BA5E7BFB6995FFC0A819F"
      valueUuid: "configurationProperty2"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.BiPredicate.or(java.util.function.BiPredicate<org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.source.ConfigurationPropertyName>)\
        \ : java.util.function.BiPredicate<java.lang.Object,java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
        parameters:
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MapPropertySource"
            uuid: "propertySource"
        - name: "mappers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper"
                1:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper2"
            valueType: "org.springframework.boot.context.properties.source.PropertyMapper[]"
            uuid: "mappers"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PropertySource must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid19"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid20"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Mappers must contain at least one item"
      valueType: "java.lang.String"
      uuid: "uniqueUuid21"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemEnvironment"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "return_of_mapItem1"
          valueType: "java.lang.String"
          uuid: "object3"
          collectionUuid: "list"
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_mapItem1"
      valueType: "java.lang.String"
      uuid: "object3"
      collectionUuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.PropertySourceOrigin"
      uuid: "PropertySourceOrigin.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_mapItem1"
      valueType: "java.lang.String"
      uuid: "object3"
      collectionUuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "ConfigurationProperty.class"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
      fixed: true
    - sapientType: "THIS"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
        parameters:
        - name: "neverExpire"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "uniqueUuid26"
            fixed: true
      valueType: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
      genericValueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
      uuid: "softReferenceConfigurationPropertyCache"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
            parameters:
            - name: "neverExpire"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: true
                valueType: "boolean"
                fixed: true
          valueType: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
          genericValueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
          uuid: "softReferenceConfigurationPropertyCache"
          fixed: true
        methodParameters:
        - name: "factory"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            uuid: "uniqueUuid24"
        - name: "refreshAction"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.UnaryOperator"
            uuid: "uniqueUuid25"
        methodName: "get"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
      uuid: "object5"
      explicitCastNeeded: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      uuid: "uniqueUuid22"
    - sapientType: "ANY"
      valueType: "java.util.function.UnaryOperator"
      uuid: "uniqueUuid23"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object7"
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "object6"
      collectionUuid: "set"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.PropertySourceOrigin"
      uuid: "PropertySourceOrigin.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "object6"
      collectionUuid: "set"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "ConfigurationProperty.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty2"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty2"
    branches:
    - lineNumber: 97
      expression: "name == null"
      range: "(97,7)-(97,18)"
      evaluatedAs: false
    - lineNumber: 78
      expression: "name == null"
      range: "(78,7)-(78,18)"
      evaluatedAs: false
      internalMethodName: "getConfigurationProperty"
    - lineNumber: 81
      expression: "for-each(this.mappers)"
      range: "(81,32)-(81,43)"
      evaluatedAs: true
      internalMethodName: "getConfigurationProperty"
    - lineNumber: 83
      expression: "for-each(mapper.map(name))"
      range: "(83,29)-(83,44)"
      evaluatedAs: true
      internalMethodName: "getConfigurationProperty"
    - lineNumber: 85
      expression: "value != null"
      range: "(85,10)-(85,22)"
      evaluatedAs: true
      internalMethodName: "getConfigurationProperty"
    - lineNumber: 101
      expression: "configurationProperty != null"
      range: "(101,7)-(101,35)"
      evaluatedAs: false
    - lineNumber: 104
      expression: "for-each(getMappings().getMapped(name))"
      range: "(104,27)-(104,55)"
      evaluatedAs: true
    - lineNumber: 106
      expression: "value != null"
      range: "(106,8)-(106,20)"
      evaluatedAs: true
  - pathId: "path4"
    testPathName: "getConfigurationPropertyWhenValueIsNull"
    constructorSignature: "<init>(org.springframework.core.env.EnumerablePropertySource<?>,org.springframework.boot.context.properties.source.PropertyMapper[])\
      \ : void"
    modelFingerprint: "34DFC0AAA2038DCC2BA865F76B543A04"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6C1725CBA6AFAF2D31155A7EF3509E66"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "67F0F1CBAAC1A13488369545F28C9602"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:propertySource,message:uniqueUuid27):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "22341A279BA87BBAE48FD72643F2E113"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "isTrue(expression:uniqueUuid28,message:uniqueUuid29):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "mapSource"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "490B57FB68206C6401CD6524000C96E2"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getName():name2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "LOCAL_VARIABLE"
      name: "mapper"
      modelFingerprint: "69610772C07A32DA3A4EF36DFA716B63"
      valueUuid: "propertyMapper"
      methodExercised:
        expression: "map(configurationPropertyName:name):list"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "29D0B74C0FE4A8DA6B500EFC01A4A1D3"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getProperty(name:object3):object4"
    - type: "STATIC"
      name: "PropertySourceOrigin.class"
      modelFingerprint: "540EB21914B4757DBE2232FB79B001DD"
      valueUuid: "PropertySourceOrigin.class"
      methodExercised:
        expression: "get(propertySource:propertySource,name:object3):origin"
        staticAccess: true
    - type: "STATIC"
      name: "ConfigurationProperty.class"
      modelFingerprint: "0171BB97032F2447F7110618F2621ED6"
      valueUuid: "ConfigurationProperty.class"
      methodExercised:
        expression: "of(source:targetClassObject,name:name,value:object4,origin:origin):configurationProperty"
        staticAccess: true
    - type: "FIELD"
      name: "cache"
      modelFingerprint: "9AE0C5A78235A084C465A001D095207E"
      valueUuid: "softReferenceConfigurationPropertyCache"
      methodExercised:
        expression: "get(factory:uniqueUuid30,refreshAction:uniqueUuid31):object5"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "09408CF234E9848EFC968E4FACB797B7"
      methodExercised:
        expression: "getPropertySource():enumerablePropertySource"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "2212CDE6FB21EF9D7DC5F4E1B9854143"
      valueUuid: "enumerablePropertySource"
      methodExercised:
        expression: "getProperty(name:object6):object7"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "AF7DE2B64986230ACFA5A65E259E5AB7"
      valueUuid: "configurationProperty2"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.BiPredicate.or(java.util.function.BiPredicate<org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.source.ConfigurationPropertyName>)\
        \ : java.util.function.BiPredicate<java.lang.Object,java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
        parameters:
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MapPropertySource"
            uuid: "propertySource"
        - name: "mappers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper"
                1:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper2"
            valueType: "org.springframework.boot.context.properties.source.PropertyMapper[]"
            uuid: "mappers"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PropertySource must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid27"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid28"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Mappers must contain at least one item"
      valueType: "java.lang.String"
      uuid: "uniqueUuid29"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemEnvironment"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "return_of_mapItem1"
          valueType: "java.lang.String"
          uuid: "object3"
          collectionUuid: "list"
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_mapItem1"
      valueType: "java.lang.String"
      uuid: "object3"
      collectionUuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.PropertySourceOrigin"
      uuid: "PropertySourceOrigin.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_mapItem1"
      valueType: "java.lang.String"
      uuid: "object3"
      collectionUuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "ConfigurationProperty.class"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
      fixed: true
    - sapientType: "THIS"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySource"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
        parameters:
        - name: "neverExpire"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "uniqueUuid34"
            fixed: true
      valueType: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
      genericValueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
      uuid: "softReferenceConfigurationPropertyCache"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
            parameters:
            - name: "neverExpire"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: true
                valueType: "boolean"
                fixed: true
          valueType: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
          genericValueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
          uuid: "softReferenceConfigurationPropertyCache"
          fixed: true
        methodParameters:
        - name: "factory"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            uuid: "uniqueUuid32"
        - name: "refreshAction"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.UnaryOperator"
            uuid: "uniqueUuid33"
        methodName: "get"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
      uuid: "object5"
      explicitCastNeeded: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      uuid: "uniqueUuid30"
    - sapientType: "ANY"
      valueType: "java.util.function.UnaryOperator"
      uuid: "uniqueUuid31"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object7"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "object6"
      collectionUuid: "set"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty2"
      fixed: true
    branches:
    - lineNumber: 97
      expression: "name == null"
      range: "(97,7)-(97,18)"
      evaluatedAs: false
    - lineNumber: 78
      expression: "name == null"
      range: "(78,7)-(78,18)"
      evaluatedAs: false
      internalMethodName: "getConfigurationProperty"
    - lineNumber: 81
      expression: "for-each(this.mappers)"
      range: "(81,32)-(81,43)"
      evaluatedAs: true
      internalMethodName: "getConfigurationProperty"
    - lineNumber: 83
      expression: "for-each(mapper.map(name))"
      range: "(83,29)-(83,44)"
      evaluatedAs: true
      internalMethodName: "getConfigurationProperty"
    - lineNumber: 85
      expression: "value != null"
      range: "(85,10)-(85,22)"
      evaluatedAs: true
      internalMethodName: "getConfigurationProperty"
    - lineNumber: 101
      expression: "configurationProperty != null"
      range: "(101,7)-(101,35)"
      evaluatedAs: false
    - lineNumber: 104
      expression: "for-each(getMappings().getMapped(name))"
      range: "(104,27)-(104,55)"
      evaluatedAs: true
    - lineNumber: 106
      expression: "value != null"
      range: "(106,8)-(106,20)"
      evaluatedAs: false
  - pathId: "path9"
    testPathName: "getConfigurationPropertyWhenGetMappingsGetMappedNameIsNotEmptyAndValueIsNotNull"
    constructorSignature: "<init>(org.springframework.core.env.EnumerablePropertySource<?>,org.springframework.boot.context.properties.source.PropertyMapper[])\
      \ : void"
    modelFingerprint: "7835E0633C11A96D326ADC07CF75DAE1"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6C1725CBA6AFAF2D31155A7EF3509E66"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "67F0F1CBAAC1A13488369545F28C9602"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:propertySource,message:uniqueUuid35):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "22341A279BA87BBAE48FD72643F2E113"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "isTrue(expression:uniqueUuid36,message:uniqueUuid37):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "mapSource"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "490B57FB68206C6401CD6524000C96E2"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getName():name2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "LOCAL_VARIABLE"
      name: "mapper"
      modelFingerprint: "69610772C07A32DA3A4EF36DFA716B63"
      valueUuid: "propertyMapper"
      methodExercised:
        expression: "map(configurationPropertyName:name):list"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "29D0B74C0FE4A8DA6B500EFC01A4A1D3"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getProperty(name:object3):object4"
    - type: "STATIC"
      name: "PropertySourceOrigin.class"
      modelFingerprint: "540EB21914B4757DBE2232FB79B001DD"
      valueUuid: "PropertySourceOrigin.class"
      methodExercised:
        expression: "get(propertySource:propertySource,name:object3):origin"
        staticAccess: true
    - type: "STATIC"
      name: "ConfigurationProperty.class"
      modelFingerprint: "06322F2D6689D9C0783A6EFCC78B3E78"
      valueUuid: "ConfigurationProperty.class"
      methodExercised:
        expression: "of(source:targetClassObject,name:name,value:object4,origin:origin):configurationProperty"
        staticAccess: true
    - type: "FIELD"
      name: "cache"
      modelFingerprint: "9AE0C5A78235A084C465A001D095207E"
      valueUuid: "softReferenceConfigurationPropertyCache"
      methodExercised:
        expression: "get(factory:uniqueUuid38,refreshAction:uniqueUuid39):object5"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "09408CF234E9848EFC968E4FACB797B7"
      methodExercised:
        expression: "getPropertySource():enumerablePropertySource"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "CC644BBDBE7EEA803325C50E09D583A8"
      valueUuid: "enumerablePropertySource"
      methodExercised:
        expression: "getProperty(name:object6):object7"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "D38D86B3D509CF6864B7264D2DC56BEA"
      methodExercised:
        expression: "getPropertySource():enumerablePropertySource2"
    - type: "STATIC"
      name: "PropertySourceOrigin.class"
      modelFingerprint: "4A96E2A75C1CF32BD47D1624BC02BE00"
      valueUuid: "PropertySourceOrigin.class"
      methodExercised:
        expression: "get(propertySource:enumerablePropertySource2,name:object6):origin2"
        staticAccess: true
    - type: "STATIC"
      name: "ConfigurationProperty.class"
      modelFingerprint: "31A414B340543FCE9BDDF1BA3393C67D"
      valueUuid: "ConfigurationProperty.class"
      methodExercised:
        expression: "of(source:targetClassObject,name:name,value:object7,origin:origin2):configurationProperty3"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "88BB7180F05BA5E7BFB6995FFC0A819F"
      valueUuid: "configurationProperty3"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.BiPredicate.or(java.util.function.BiPredicate<org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.source.ConfigurationPropertyName>)\
        \ : java.util.function.BiPredicate<java.lang.Object,java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
        parameters:
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MapPropertySource"
            uuid: "propertySource"
        - name: "mappers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper"
                1:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper2"
            valueType: "org.springframework.boot.context.properties.source.PropertyMapper[]"
            uuid: "mappers"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PropertySource must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid35"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid36"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Mappers must contain at least one item"
      valueType: "java.lang.String"
      uuid: "uniqueUuid37"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemEnvironment"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "return_of_mapItem1"
          valueType: "java.lang.String"
          uuid: "object3"
          collectionUuid: "list"
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_mapItem1"
      valueType: "java.lang.String"
      uuid: "object3"
      collectionUuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.PropertySourceOrigin"
      uuid: "PropertySourceOrigin.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_mapItem1"
      valueType: "java.lang.String"
      uuid: "object3"
      collectionUuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "ConfigurationProperty.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
        parameters:
        - name: "neverExpire"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "uniqueUuid42"
            fixed: true
      valueType: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
      genericValueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
      uuid: "softReferenceConfigurationPropertyCache"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
            parameters:
            - name: "neverExpire"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: true
                valueType: "boolean"
                fixed: true
          valueType: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
          genericValueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
          uuid: "softReferenceConfigurationPropertyCache"
          fixed: true
        methodParameters:
        - name: "factory"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            uuid: "uniqueUuid40"
        - name: "refreshAction"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.UnaryOperator"
            uuid: "uniqueUuid41"
        methodName: "get"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
      uuid: "object5"
      explicitCastNeeded: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      uuid: "uniqueUuid38"
    - sapientType: "ANY"
      valueType: "java.util.function.UnaryOperator"
      uuid: "uniqueUuid39"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object7"
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "object6"
      collectionUuid: "set"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.PropertySourceOrigin"
      uuid: "PropertySourceOrigin.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "object6"
      collectionUuid: "set"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "ConfigurationProperty.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty3"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty3"
    branches:
    - lineNumber: 97
      expression: "name == null"
      range: "(97,7)-(97,18)"
      evaluatedAs: false
    - lineNumber: 78
      expression: "name == null"
      range: "(78,7)-(78,18)"
      evaluatedAs: false
      internalMethodName: "getConfigurationProperty"
    - lineNumber: 81
      expression: "for-each(this.mappers)"
      range: "(81,32)-(81,43)"
      evaluatedAs: true
      internalMethodName: "getConfigurationProperty"
    - lineNumber: 83
      expression: "for-each(mapper.map(name))"
      range: "(83,29)-(83,44)"
      evaluatedAs: true
      internalMethodName: "getConfigurationProperty"
    - lineNumber: 85
      expression: "value != null"
      range: "(85,10)-(85,22)"
      evaluatedAs: true
      internalMethodName: "getConfigurationProperty"
    - lineNumber: 91
      expression: "branch expression (line 91)"
      range: "(91,1)-(91,200)"
      evaluatedAs: true
      internalMethodName: "getConfigurationProperty"
    - lineNumber: 101
      expression: "configurationProperty != null"
      range: "(101,7)-(101,35)"
      evaluatedAs: false
    - lineNumber: 104
      expression: "for-each(getMappings().getMapped(name))"
      range: "(104,27)-(104,55)"
      evaluatedAs: true
    - lineNumber: 106
      expression: "value != null"
      range: "(106,8)-(106,20)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 13
      id: 1
      catchExceptions:
      - "java.lang.Exception"
  - pathId: "path10"
    testPathName: "getConfigurationPropertyWhenGetMappingsGetMappedNameIsNotEmptyAndValueIsNull"
    constructorSignature: "<init>(org.springframework.core.env.EnumerablePropertySource<?>,org.springframework.boot.context.properties.source.PropertyMapper[])\
      \ : void"
    modelFingerprint: "2B8358BB57D65356D6885A1BAA02120B"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6C1725CBA6AFAF2D31155A7EF3509E66"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "67F0F1CBAAC1A13488369545F28C9602"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:propertySource,message:uniqueUuid43):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "22341A279BA87BBAE48FD72643F2E113"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "isTrue(expression:uniqueUuid44,message:uniqueUuid45):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "mapSource"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "490B57FB68206C6401CD6524000C96E2"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getName():name2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "LOCAL_VARIABLE"
      name: "mapper"
      modelFingerprint: "69610772C07A32DA3A4EF36DFA716B63"
      valueUuid: "propertyMapper"
      methodExercised:
        expression: "map(configurationPropertyName:name):list"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "29D0B74C0FE4A8DA6B500EFC01A4A1D3"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getProperty(name:object3):object4"
    - type: "STATIC"
      name: "PropertySourceOrigin.class"
      modelFingerprint: "540EB21914B4757DBE2232FB79B001DD"
      valueUuid: "PropertySourceOrigin.class"
      methodExercised:
        expression: "get(propertySource:propertySource,name:object3):origin"
        staticAccess: true
    - type: "STATIC"
      name: "ConfigurationProperty.class"
      modelFingerprint: "06322F2D6689D9C0783A6EFCC78B3E78"
      valueUuid: "ConfigurationProperty.class"
      methodExercised:
        expression: "of(source:targetClassObject,name:name,value:object4,origin:origin):configurationProperty"
        staticAccess: true
    - type: "FIELD"
      name: "cache"
      modelFingerprint: "9AE0C5A78235A084C465A001D095207E"
      valueUuid: "softReferenceConfigurationPropertyCache"
      methodExercised:
        expression: "get(factory:uniqueUuid46,refreshAction:uniqueUuid47):object5"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "09408CF234E9848EFC968E4FACB797B7"
      methodExercised:
        expression: "getPropertySource():enumerablePropertySource"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "2212CDE6FB21EF9D7DC5F4E1B9854143"
      valueUuid: "enumerablePropertySource"
      methodExercised:
        expression: "getProperty(name:object6):object7"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "AF7DE2B64986230ACFA5A65E259E5AB7"
      valueUuid: "configurationProperty3"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.BiPredicate.or(java.util.function.BiPredicate<org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.source.ConfigurationPropertyName>)\
        \ : java.util.function.BiPredicate<java.lang.Object,java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
        parameters:
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MapPropertySource"
            uuid: "propertySource"
        - name: "mappers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper"
                1:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper2"
            valueType: "org.springframework.boot.context.properties.source.PropertyMapper[]"
            uuid: "mappers"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PropertySource must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid43"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid44"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Mappers must contain at least one item"
      valueType: "java.lang.String"
      uuid: "uniqueUuid45"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemEnvironment"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "return_of_mapItem1"
          valueType: "java.lang.String"
          uuid: "object3"
          collectionUuid: "list"
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_mapItem1"
      valueType: "java.lang.String"
      uuid: "object3"
      collectionUuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.PropertySourceOrigin"
      uuid: "PropertySourceOrigin.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_mapItem1"
      valueType: "java.lang.String"
      uuid: "object3"
      collectionUuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "ConfigurationProperty.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySource"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
        parameters:
        - name: "neverExpire"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "uniqueUuid50"
            fixed: true
      valueType: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
      genericValueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
      uuid: "softReferenceConfigurationPropertyCache"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
            parameters:
            - name: "neverExpire"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: true
                valueType: "boolean"
                fixed: true
          valueType: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
          genericValueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
          uuid: "softReferenceConfigurationPropertyCache"
          fixed: true
        methodParameters:
        - name: "factory"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            uuid: "uniqueUuid48"
        - name: "refreshAction"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.UnaryOperator"
            uuid: "uniqueUuid49"
        methodName: "get"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
      uuid: "object5"
      explicitCastNeeded: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      uuid: "uniqueUuid46"
    - sapientType: "ANY"
      valueType: "java.util.function.UnaryOperator"
      uuid: "uniqueUuid47"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object7"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "object6"
      collectionUuid: "set"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty3"
      fixed: true
    branches:
    - lineNumber: 97
      expression: "name == null"
      range: "(97,7)-(97,18)"
      evaluatedAs: false
    - lineNumber: 78
      expression: "name == null"
      range: "(78,7)-(78,18)"
      evaluatedAs: false
      internalMethodName: "getConfigurationProperty"
    - lineNumber: 81
      expression: "for-each(this.mappers)"
      range: "(81,32)-(81,43)"
      evaluatedAs: true
      internalMethodName: "getConfigurationProperty"
    - lineNumber: 83
      expression: "for-each(mapper.map(name))"
      range: "(83,29)-(83,44)"
      evaluatedAs: true
      internalMethodName: "getConfigurationProperty"
    - lineNumber: 85
      expression: "value != null"
      range: "(85,10)-(85,22)"
      evaluatedAs: true
      internalMethodName: "getConfigurationProperty"
    - lineNumber: 91
      expression: "branch expression (line 91)"
      range: "(91,1)-(91,200)"
      evaluatedAs: true
      internalMethodName: "getConfigurationProperty"
    - lineNumber: 101
      expression: "configurationProperty != null"
      range: "(101,7)-(101,35)"
      evaluatedAs: false
    - lineNumber: 104
      expression: "for-each(getMappings().getMapped(name))"
      range: "(104,27)-(104,55)"
      evaluatedAs: true
    - lineNumber: 106
      expression: "value != null"
      range: "(106,8)-(106,20)"
      evaluatedAs: false
    catchBlockExercised:
      idExternalInstruction: 13
      id: 1
      catchExceptions:
      - "java.lang.Exception"
- method:
    name: "stream"
    sourceCodeSignature: "Stream<ConfigurationPropertyName> stream()"
    returnType: "java.util.stream.Stream"
    genericReturnType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    instructionFingerprint: "64FC7CD33B2908CD7B3F3575328D700F"
  paths:
  - pathId: "path3"
    testPathName: "streamWhenIsImmutablePropertySourceNot"
    constructorSignature: "<init>(org.springframework.core.env.EnumerablePropertySource<?>,org.springframework.boot.context.properties.source.PropertyMapper[])\
      \ : void"
    modelFingerprint: "B6CB78AF37E2ABB7318559673BA0FA10"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6C1725CBA6AFAF2D31155A7EF3509E66"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "67F0F1CBAAC1A13488369545F28C9602"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:propertySource,message:uniqueUuid51):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "22341A279BA87BBAE48FD72643F2E113"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "isTrue(expression:uniqueUuid52,message:uniqueUuid53):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "mapSource"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "490B57FB68206C6401CD6524000C96E2"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getName():name"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "09408CF234E9848EFC968E4FACB797B7"
      methodExercised:
        expression: "getPropertySource():enumerablePropertySource"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "21DF9AF340194FF3E592F831BCAC5002"
      valueUuid: "enumerablePropertySource"
      methodExercised:
        expression: "getName():name2"
    - type: "FIELD"
      name: "cache"
      modelFingerprint: "9AE0C5A78235A084C465A001D095207E"
      valueUuid: "softReferenceConfigurationPropertyCache"
      methodExercised:
        expression: "get(factory:uniqueUuid54,refreshAction:uniqueUuid55):object3"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "09408CF234E9848EFC968E4FACB797B7"
      methodExercised:
        expression: "getPropertySource():enumerablePropertySource2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "408B05A9B728182CE8F1D549FC270C30"
      valueUuid: "enumerablePropertySource2"
      methodExercised:
        expression: "getPropertyNames():stringArray"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2407304D9E1344DFDE04F69B75EC29CA"
      valueUuid: "stream2"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.BiPredicate.or(java.util.function.BiPredicate<org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.source.ConfigurationPropertyName>)\
        \ : java.util.function.BiPredicate<java.lang.Object,java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
        parameters:
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MapPropertySource"
            uuid: "propertySource"
        - name: "mappers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper"
                1:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper2"
            valueType: "org.springframework.boot.context.properties.source.PropertyMapper[]"
            uuid: "mappers"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PropertySource must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid51"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid52"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Mappers must contain at least one item"
      valueType: "java.lang.String"
      uuid: "uniqueUuid53"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemEnvironment"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
        parameters:
        - name: "neverExpire"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "uniqueUuid58"
            fixed: true
      valueType: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
      genericValueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
      uuid: "softReferenceConfigurationPropertyCache"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
            parameters:
            - name: "neverExpire"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: true
                valueType: "boolean"
                fixed: true
          valueType: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
          genericValueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
          uuid: "softReferenceConfigurationPropertyCache"
          fixed: true
        methodParameters:
        - name: "factory"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            uuid: "uniqueUuid56"
        - name: "refreshAction"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.UnaryOperator"
            uuid: "uniqueUuid57"
        methodName: "get"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
      uuid: "object3"
      explicitCastNeeded: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      uuid: "uniqueUuid54"
    - sapientType: "ANY"
      valueType: "java.util.function.UnaryOperator"
      uuid: "uniqueUuid55"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource2"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "java.util.stream.Stream"
      uuid: "stream2"
      collectionUuid: "configurationPropertyNameArray-collection"
    branches:
    - lineNumber: 172
      expression: "source instanceof OriginLookup"
      range: "(172,7)-(172,36)"
      evaluatedAs: false
      internalMethodName: "isImmutablePropertySource"
    - lineNumber: 175
      expression: "StandardEnvironment.SYSTEM_ENVIRONMENT_PROPERTY_SOURCE_NAME.equals(source.getName())"
      range: "(175,7)-(175,90)"
      evaluatedAs: false
      internalMethodName: "isImmutablePropertySource"
    - lineNumber: 144
      expression: "!isImmutablePropertySource()"
      range: "(144,7)-(144,34)"
      evaluatedAs: true
      internalMethodName: "getConfigurationPropertyNames"
  - pathId: "path2"
    testPathName: "streamWhenSourceGetSourceNotEqualsSystemGetenvAndIsImmutablePropertySourceNot"
    constructorSignature: "<init>(org.springframework.core.env.EnumerablePropertySource<?>,org.springframework.boot.context.properties.source.PropertyMapper[])\
      \ : void"
    modelFingerprint: "CB33E0D812A2DF44C12191C036B4DD99"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6C1725CBA6AFAF2D31155A7EF3509E66"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "67F0F1CBAAC1A13488369545F28C9602"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:propertySource,message:uniqueUuid59):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "22341A279BA87BBAE48FD72643F2E113"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "isTrue(expression:uniqueUuid60,message:uniqueUuid61):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "mapSource"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "490B57FB68206C6401CD6524000C96E2"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getName():name"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "09408CF234E9848EFC968E4FACB797B7"
      methodExercised:
        expression: "getPropertySource():enumerablePropertySource"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "93211585E4A107C54EFB091E058E5D40"
      valueUuid: "enumerablePropertySource"
      methodExercised:
        expression: "getName():name2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "37653524DEFC9EB034C81014740E85CF"
      valueUuid: "enumerablePropertySource"
      methodExercised:
        expression: "getSource():source2"
    - type: "FIELD"
      name: "cache"
      modelFingerprint: "9AE0C5A78235A084C465A001D095207E"
      valueUuid: "softReferenceConfigurationPropertyCache"
      methodExercised:
        expression: "get(factory:uniqueUuid62,refreshAction:uniqueUuid63):object4"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "09408CF234E9848EFC968E4FACB797B7"
      methodExercised:
        expression: "getPropertySource():enumerablePropertySource2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "408B05A9B728182CE8F1D549FC270C30"
      valueUuid: "enumerablePropertySource2"
      methodExercised:
        expression: "getPropertyNames():stringArray"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2407304D9E1344DFDE04F69B75EC29CA"
      valueUuid: "stream2"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.BiPredicate.or(java.util.function.BiPredicate<org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.source.ConfigurationPropertyName>)\
        \ : java.util.function.BiPredicate<java.lang.Object,java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
        parameters:
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MapPropertySource"
            uuid: "propertySource"
        - name: "mappers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper"
                1:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper2"
            valueType: "org.springframework.boot.context.properties.source.PropertyMapper[]"
            uuid: "mappers"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PropertySource must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid59"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid60"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Mappers must contain at least one item"
      valueType: "java.lang.String"
      uuid: "uniqueUuid61"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemEnvironment"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemEnvironment"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "source2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
        parameters:
        - name: "neverExpire"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "uniqueUuid66"
            fixed: true
      valueType: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
      genericValueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
      uuid: "softReferenceConfigurationPropertyCache"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
            parameters:
            - name: "neverExpire"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: true
                valueType: "boolean"
                fixed: true
          valueType: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
          genericValueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
          uuid: "softReferenceConfigurationPropertyCache"
          fixed: true
        methodParameters:
        - name: "factory"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            uuid: "uniqueUuid64"
        - name: "refreshAction"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.UnaryOperator"
            uuid: "uniqueUuid65"
        methodName: "get"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
      uuid: "object4"
      explicitCastNeeded: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      uuid: "uniqueUuid62"
    - sapientType: "ANY"
      valueType: "java.util.function.UnaryOperator"
      uuid: "uniqueUuid63"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource2"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "java.util.stream.Stream"
      uuid: "stream2"
      collectionUuid: "configurationPropertyNameArray-collection"
    branches:
    - lineNumber: 172
      expression: "source instanceof OriginLookup"
      range: "(172,7)-(172,36)"
      evaluatedAs: false
      internalMethodName: "isImmutablePropertySource"
    - lineNumber: 175
      expression: "StandardEnvironment.SYSTEM_ENVIRONMENT_PROPERTY_SOURCE_NAME.equals(source.getName())"
      range: "(175,7)-(175,90)"
      evaluatedAs: true
      internalMethodName: "isImmutablePropertySource"
    - lineNumber: 176
      expression: "source.getSource() == System.getenv()"
      range: "(176,11)-(176,47)"
      evaluatedAs: false
      internalMethodName: "isImmutablePropertySource"
    - lineNumber: 144
      expression: "!isImmutablePropertySource()"
      range: "(144,7)-(144,34)"
      evaluatedAs: true
      internalMethodName: "getConfigurationPropertyNames"
  - pathId: "path1"
    testPathName: "streamWhenConfigurationPropertyNamesIsNull"
    constructorSignature: "<init>(org.springframework.core.env.EnumerablePropertySource<?>,org.springframework.boot.context.properties.source.PropertyMapper[])\
      \ : void"
    modelFingerprint: "92D5E0B440F5A08969F1902D3DA2208B"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6C1725CBA6AFAF2D31155A7EF3509E66"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "67F0F1CBAAC1A13488369545F28C9602"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:propertySource,message:uniqueUuid67):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "22341A279BA87BBAE48FD72643F2E113"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "isTrue(expression:uniqueUuid68,message:uniqueUuid69):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "mapSource"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "490B57FB68206C6401CD6524000C96E2"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getName():name"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "09408CF234E9848EFC968E4FACB797B7"
      methodExercised:
        expression: "getPropertySource():enumerablePropertySource"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "93211585E4A107C54EFB091E058E5D40"
      valueUuid: "enumerablePropertySource"
      methodExercised:
        expression: "getName():name2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "367466F708DCE48FD886929D98D77543"
      valueUuid: "enumerablePropertySource"
      methodExercised:
        expression: "getSource():map2"
    - type: "FIELD"
      name: "cache"
      modelFingerprint: "9AE0C5A78235A084C465A001D095207E"
      valueUuid: "softReferenceConfigurationPropertyCache"
      methodExercised:
        expression: "get(factory:uniqueUuid106,refreshAction:uniqueUuid107):object4"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "09408CF234E9848EFC968E4FACB797B7"
      methodExercised:
        expression: "getPropertySource():enumerablePropertySource2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "408B05A9B728182CE8F1D549FC270C30"
      valueUuid: "enumerablePropertySource2"
      methodExercised:
        expression: "getPropertyNames():stringArray"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2407304D9E1344DFDE04F69B75EC29CA"
      valueUuid: "stream2"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.BiPredicate.or(java.util.function.BiPredicate<org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.source.ConfigurationPropertyName>)\
        \ : java.util.function.BiPredicate<java.lang.Object,java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
        parameters:
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MapPropertySource"
            uuid: "propertySource"
        - name: "mappers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper"
                1:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper2"
            valueType: "org.springframework.boot.context.properties.source.PropertyMapper[]"
            uuid: "mappers"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PropertySource must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid67"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid68"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Mappers must contain at least one item"
      valueType: "java.lang.String"
      uuid: "uniqueUuid69"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemEnvironment"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemEnvironment"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "PATH"
              valueType: "java.lang.String"
              uuid: "uniqueUuid71"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "/usr/bin:/bin:/usr/sbin:/sbin"
              valueType: "java.lang.String"
              uuid: "uniqueUuid72"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid70"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "__CFBundleIdentifier"
              valueType: "java.lang.String"
              uuid: "uniqueUuid74"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "com.jetbrains.intellij.ce"
              valueType: "java.lang.String"
              uuid: "uniqueUuid75"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid73"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "SSH_AUTH_SOCK"
              valueType: "java.lang.String"
              uuid: "uniqueUuid77"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "/private/tmp/com.apple.launchd.3aGiD7YEVS/Listeners"
              valueType: "java.lang.String"
              uuid: "uniqueUuid78"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid76"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "XPC_FLAGS"
              valueType: "java.lang.String"
              uuid: "uniqueUuid80"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "0x0"
              valueType: "java.lang.String"
              uuid: "uniqueUuid81"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid79"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "SHELL"
              valueType: "java.lang.String"
              uuid: "uniqueUuid83"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "/bin/zsh"
              valueType: "java.lang.String"
              uuid: "uniqueUuid84"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid82"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "__CF_USER_TEXT_ENCODING"
              valueType: "java.lang.String"
              uuid: "uniqueUuid86"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "0x1F5:0x0:0x0"
              valueType: "java.lang.String"
              uuid: "uniqueUuid87"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid85"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "LOGNAME"
              valueType: "java.lang.String"
              uuid: "uniqueUuid89"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "bhuvan"
              valueType: "java.lang.String"
              uuid: "uniqueUuid90"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid88"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "XPC_SERVICE_NAME"
              valueType: "java.lang.String"
              uuid: "uniqueUuid92"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "application.com.jetbrains.intellij.ce.7960374.7961073"
              valueType: "java.lang.String"
              uuid: "uniqueUuid93"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid91"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "USER"
              valueType: "java.lang.String"
              uuid: "uniqueUuid95"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "bhuvan"
              valueType: "java.lang.String"
              uuid: "uniqueUuid96"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid94"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "HOME"
              valueType: "java.lang.String"
              uuid: "uniqueUuid98"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "/Users/bhuvan"
              valueType: "java.lang.String"
              uuid: "uniqueUuid99"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid97"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "TMPDIR"
              valueType: "java.lang.String"
              uuid: "uniqueUuid101"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "/var/folders/23/6wlpx0js4c9b9z51m_1txb780000gn/T/"
              valueType: "java.lang.String"
              uuid: "uniqueUuid102"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid100"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "COMMAND_MODE"
              valueType: "java.lang.String"
              uuid: "uniqueUuid104"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "unix2003"
              valueType: "java.lang.String"
              uuid: "uniqueUuid105"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid103"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
        parameters:
        - name: "neverExpire"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "uniqueUuid110"
            fixed: true
      valueType: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
      genericValueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
      uuid: "softReferenceConfigurationPropertyCache"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
            parameters:
            - name: "neverExpire"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: true
                valueType: "boolean"
                fixed: true
          valueType: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
          genericValueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
          uuid: "softReferenceConfigurationPropertyCache"
          fixed: true
        methodParameters:
        - name: "factory"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            uuid: "uniqueUuid108"
        - name: "refreshAction"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.UnaryOperator"
            uuid: "uniqueUuid109"
        methodName: "get"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
      uuid: "object4"
      explicitCastNeeded: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      uuid: "uniqueUuid106"
    - sapientType: "ANY"
      valueType: "java.util.function.UnaryOperator"
      uuid: "uniqueUuid107"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource2"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "java.util.stream.Stream"
      uuid: "stream2"
      collectionUuid: "configurationPropertyNameArray-collection"
    branches:
    - lineNumber: 172
      expression: "source instanceof OriginLookup"
      range: "(172,7)-(172,36)"
      evaluatedAs: false
      internalMethodName: "isImmutablePropertySource"
    - lineNumber: 175
      expression: "StandardEnvironment.SYSTEM_ENVIRONMENT_PROPERTY_SOURCE_NAME.equals(source.getName())"
      range: "(175,7)-(175,90)"
      evaluatedAs: true
      internalMethodName: "isImmutablePropertySource"
    - lineNumber: 176
      expression: "source.getSource() == System.getenv()"
      range: "(176,11)-(176,47)"
      evaluatedAs: true
      internalMethodName: "isImmutablePropertySource"
    - lineNumber: 144
      expression: "!isImmutablePropertySource()"
      range: "(144,7)-(144,34)"
      evaluatedAs: false
      internalMethodName: "getConfigurationPropertyNames"
    - lineNumber: 148
      expression: "configurationPropertyNames == null"
      range: "(148,7)-(148,40)"
      evaluatedAs: true
      internalMethodName: "getConfigurationPropertyNames"
- method:
    name: "iterator"
    sourceCodeSignature: "Iterator<ConfigurationPropertyName> iterator()"
    returnType: "java.util.Iterator"
    genericReturnType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    instructionFingerprint: "A19F8AEC874381621B2B2D839A24D1EA"
  paths:
  - pathId: "path3"
    testPathName: "iteratorWhenIsImmutablePropertySourceNot"
    constructorSignature: "<init>(org.springframework.core.env.EnumerablePropertySource<?>,org.springframework.boot.context.properties.source.PropertyMapper[])\
      \ : void"
    modelFingerprint: "E73A68264F85B8806E11FC2F9591C4A7"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6C1725CBA6AFAF2D31155A7EF3509E66"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "67F0F1CBAAC1A13488369545F28C9602"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:propertySource,message:uniqueUuid111):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "22341A279BA87BBAE48FD72643F2E113"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "isTrue(expression:uniqueUuid112,message:uniqueUuid113):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "mapSource"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "490B57FB68206C6401CD6524000C96E2"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getName():name"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "09408CF234E9848EFC968E4FACB797B7"
      methodExercised:
        expression: "getPropertySource():enumerablePropertySource"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "21DF9AF340194FF3E592F831BCAC5002"
      valueUuid: "enumerablePropertySource"
      methodExercised:
        expression: "getName():name2"
    - type: "FIELD"
      name: "cache"
      modelFingerprint: "9AE0C5A78235A084C465A001D095207E"
      valueUuid: "softReferenceConfigurationPropertyCache"
      methodExercised:
        expression: "get(factory:uniqueUuid114,refreshAction:uniqueUuid115):object3"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "09408CF234E9848EFC968E4FACB797B7"
      methodExercised:
        expression: "getPropertySource():enumerablePropertySource2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "408B05A9B728182CE8F1D549FC270C30"
      valueUuid: "enumerablePropertySource2"
      methodExercised:
        expression: "getPropertyNames():stringArray"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "ABC4D9679B3E7DB7AF4BCB042670F9B4"
      valueUuid: "springIterableConfigurationPropertySource.ConfigurationPropertyNamesIteratorNotNull"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.BiPredicate.or(java.util.function.BiPredicate<org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.source.ConfigurationPropertyName>)\
        \ : java.util.function.BiPredicate<java.lang.Object,java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
        parameters:
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MapPropertySource"
            uuid: "propertySource"
        - name: "mappers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper"
                1:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper2"
            valueType: "org.springframework.boot.context.properties.source.PropertyMapper[]"
            uuid: "mappers"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PropertySource must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid111"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid112"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Mappers must contain at least one item"
      valueType: "java.lang.String"
      uuid: "uniqueUuid113"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemEnvironment"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
        parameters:
        - name: "neverExpire"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "uniqueUuid118"
            fixed: true
      valueType: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
      genericValueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
      uuid: "softReferenceConfigurationPropertyCache"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
            parameters:
            - name: "neverExpire"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: true
                valueType: "boolean"
                fixed: true
          valueType: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
          genericValueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
          uuid: "softReferenceConfigurationPropertyCache"
          fixed: true
        methodParameters:
        - name: "factory"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            uuid: "uniqueUuid116"
        - name: "refreshAction"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.UnaryOperator"
            uuid: "uniqueUuid117"
        methodName: "get"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
      uuid: "object3"
      explicitCastNeeded: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      uuid: "uniqueUuid114"
    - sapientType: "ANY"
      valueType: "java.util.function.UnaryOperator"
      uuid: "uniqueUuid115"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource2"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "NOT_NULL"
      valueType: "java.util.Iterator"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "springIterableConfigurationPropertySource.ConfigurationPropertyNamesIteratorNotNull"
      fixed: true
    branches:
    - lineNumber: 172
      expression: "source instanceof OriginLookup"
      range: "(172,7)-(172,36)"
      evaluatedAs: false
      internalMethodName: "isImmutablePropertySource"
    - lineNumber: 175
      expression: "StandardEnvironment.SYSTEM_ENVIRONMENT_PROPERTY_SOURCE_NAME.equals(source.getName())"
      range: "(175,7)-(175,90)"
      evaluatedAs: false
      internalMethodName: "isImmutablePropertySource"
    - lineNumber: 144
      expression: "!isImmutablePropertySource()"
      range: "(144,7)-(144,34)"
      evaluatedAs: true
      internalMethodName: "getConfigurationPropertyNames"
  - pathId: "path2"
    testPathName: "iteratorWhenSourceGetSourceNotEqualsSystemGetenvAndIsImmutablePropertySourceNot"
    constructorSignature: "<init>(org.springframework.core.env.EnumerablePropertySource<?>,org.springframework.boot.context.properties.source.PropertyMapper[])\
      \ : void"
    modelFingerprint: "5E75E740E88914F3224232970DC9F228"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6C1725CBA6AFAF2D31155A7EF3509E66"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "67F0F1CBAAC1A13488369545F28C9602"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:propertySource,message:uniqueUuid119):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "22341A279BA87BBAE48FD72643F2E113"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "isTrue(expression:uniqueUuid120,message:uniqueUuid121):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "mapSource"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "490B57FB68206C6401CD6524000C96E2"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getName():name"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "09408CF234E9848EFC968E4FACB797B7"
      methodExercised:
        expression: "getPropertySource():enumerablePropertySource"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "93211585E4A107C54EFB091E058E5D40"
      valueUuid: "enumerablePropertySource"
      methodExercised:
        expression: "getName():name2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "37653524DEFC9EB034C81014740E85CF"
      valueUuid: "enumerablePropertySource"
      methodExercised:
        expression: "getSource():source2"
    - type: "FIELD"
      name: "cache"
      modelFingerprint: "9AE0C5A78235A084C465A001D095207E"
      valueUuid: "softReferenceConfigurationPropertyCache"
      methodExercised:
        expression: "get(factory:uniqueUuid122,refreshAction:uniqueUuid123):object4"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "09408CF234E9848EFC968E4FACB797B7"
      methodExercised:
        expression: "getPropertySource():enumerablePropertySource2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "408B05A9B728182CE8F1D549FC270C30"
      valueUuid: "enumerablePropertySource2"
      methodExercised:
        expression: "getPropertyNames():stringArray"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "ABC4D9679B3E7DB7AF4BCB042670F9B4"
      valueUuid: "springIterableConfigurationPropertySource.ConfigurationPropertyNamesIteratorNotNull"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.BiPredicate.or(java.util.function.BiPredicate<org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.source.ConfigurationPropertyName>)\
        \ : java.util.function.BiPredicate<java.lang.Object,java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
        parameters:
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MapPropertySource"
            uuid: "propertySource"
        - name: "mappers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper"
                1:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper2"
            valueType: "org.springframework.boot.context.properties.source.PropertyMapper[]"
            uuid: "mappers"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PropertySource must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid119"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid120"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Mappers must contain at least one item"
      valueType: "java.lang.String"
      uuid: "uniqueUuid121"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemEnvironment"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemEnvironment"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "source2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
        parameters:
        - name: "neverExpire"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "uniqueUuid126"
            fixed: true
      valueType: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
      genericValueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
      uuid: "softReferenceConfigurationPropertyCache"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
            parameters:
            - name: "neverExpire"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: true
                valueType: "boolean"
                fixed: true
          valueType: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
          genericValueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
          uuid: "softReferenceConfigurationPropertyCache"
          fixed: true
        methodParameters:
        - name: "factory"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            uuid: "uniqueUuid124"
        - name: "refreshAction"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.UnaryOperator"
            uuid: "uniqueUuid125"
        methodName: "get"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
      uuid: "object4"
      explicitCastNeeded: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      uuid: "uniqueUuid122"
    - sapientType: "ANY"
      valueType: "java.util.function.UnaryOperator"
      uuid: "uniqueUuid123"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource2"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "NOT_NULL"
      valueType: "java.util.Iterator"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "springIterableConfigurationPropertySource.ConfigurationPropertyNamesIteratorNotNull"
      fixed: true
    branches:
    - lineNumber: 172
      expression: "source instanceof OriginLookup"
      range: "(172,7)-(172,36)"
      evaluatedAs: false
      internalMethodName: "isImmutablePropertySource"
    - lineNumber: 175
      expression: "StandardEnvironment.SYSTEM_ENVIRONMENT_PROPERTY_SOURCE_NAME.equals(source.getName())"
      range: "(175,7)-(175,90)"
      evaluatedAs: true
      internalMethodName: "isImmutablePropertySource"
    - lineNumber: 176
      expression: "source.getSource() == System.getenv()"
      range: "(176,11)-(176,47)"
      evaluatedAs: false
      internalMethodName: "isImmutablePropertySource"
    - lineNumber: 144
      expression: "!isImmutablePropertySource()"
      range: "(144,7)-(144,34)"
      evaluatedAs: true
      internalMethodName: "getConfigurationPropertyNames"
  - pathId: "path1"
    testPathName: "iteratorWhenConfigurationPropertyNamesIsNull"
    constructorSignature: "<init>(org.springframework.core.env.EnumerablePropertySource<?>,org.springframework.boot.context.properties.source.PropertyMapper[])\
      \ : void"
    modelFingerprint: "EA921EA1D146D2A90F917CDEF1B1EC25"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6C1725CBA6AFAF2D31155A7EF3509E66"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "67F0F1CBAAC1A13488369545F28C9602"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:propertySource,message:uniqueUuid127):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "22341A279BA87BBAE48FD72643F2E113"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "isTrue(expression:uniqueUuid128,message:uniqueUuid129):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "mapSource"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "490B57FB68206C6401CD6524000C96E2"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getName():name"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "09408CF234E9848EFC968E4FACB797B7"
      methodExercised:
        expression: "getPropertySource():enumerablePropertySource"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "93211585E4A107C54EFB091E058E5D40"
      valueUuid: "enumerablePropertySource"
      methodExercised:
        expression: "getName():name2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "367466F708DCE48FD886929D98D77543"
      valueUuid: "enumerablePropertySource"
      methodExercised:
        expression: "getSource():map2"
    - type: "FIELD"
      name: "cache"
      modelFingerprint: "9AE0C5A78235A084C465A001D095207E"
      valueUuid: "softReferenceConfigurationPropertyCache"
      methodExercised:
        expression: "get(factory:uniqueUuid166,refreshAction:uniqueUuid167):object4"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "09408CF234E9848EFC968E4FACB797B7"
      methodExercised:
        expression: "getPropertySource():enumerablePropertySource2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "408B05A9B728182CE8F1D549FC270C30"
      valueUuid: "enumerablePropertySource2"
      methodExercised:
        expression: "getPropertyNames():stringArray"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "ABC4D9679B3E7DB7AF4BCB042670F9B4"
      valueUuid: "springIterableConfigurationPropertySource.ConfigurationPropertyNamesIteratorNotNull"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.BiPredicate.or(java.util.function.BiPredicate<org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.source.ConfigurationPropertyName>)\
        \ : java.util.function.BiPredicate<java.lang.Object,java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
        parameters:
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MapPropertySource"
            uuid: "propertySource"
        - name: "mappers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper"
                1:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper2"
            valueType: "org.springframework.boot.context.properties.source.PropertyMapper[]"
            uuid: "mappers"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PropertySource must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid127"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid128"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Mappers must contain at least one item"
      valueType: "java.lang.String"
      uuid: "uniqueUuid129"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemEnvironment"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemEnvironment"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "PATH"
              valueType: "java.lang.String"
              uuid: "uniqueUuid131"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "/usr/bin:/bin:/usr/sbin:/sbin"
              valueType: "java.lang.String"
              uuid: "uniqueUuid132"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid130"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "__CFBundleIdentifier"
              valueType: "java.lang.String"
              uuid: "uniqueUuid134"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "com.jetbrains.intellij.ce"
              valueType: "java.lang.String"
              uuid: "uniqueUuid135"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid133"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "SSH_AUTH_SOCK"
              valueType: "java.lang.String"
              uuid: "uniqueUuid137"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "/private/tmp/com.apple.launchd.3aGiD7YEVS/Listeners"
              valueType: "java.lang.String"
              uuid: "uniqueUuid138"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid136"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "XPC_FLAGS"
              valueType: "java.lang.String"
              uuid: "uniqueUuid140"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "0x0"
              valueType: "java.lang.String"
              uuid: "uniqueUuid141"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid139"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "SHELL"
              valueType: "java.lang.String"
              uuid: "uniqueUuid143"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "/bin/zsh"
              valueType: "java.lang.String"
              uuid: "uniqueUuid144"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid142"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "__CF_USER_TEXT_ENCODING"
              valueType: "java.lang.String"
              uuid: "uniqueUuid146"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "0x1F5:0x0:0x0"
              valueType: "java.lang.String"
              uuid: "uniqueUuid147"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid145"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "LOGNAME"
              valueType: "java.lang.String"
              uuid: "uniqueUuid149"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "bhuvan"
              valueType: "java.lang.String"
              uuid: "uniqueUuid150"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid148"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "XPC_SERVICE_NAME"
              valueType: "java.lang.String"
              uuid: "uniqueUuid152"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "application.com.jetbrains.intellij.ce.7960374.7961073"
              valueType: "java.lang.String"
              uuid: "uniqueUuid153"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid151"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "USER"
              valueType: "java.lang.String"
              uuid: "uniqueUuid155"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "bhuvan"
              valueType: "java.lang.String"
              uuid: "uniqueUuid156"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid154"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "HOME"
              valueType: "java.lang.String"
              uuid: "uniqueUuid158"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "/Users/bhuvan"
              valueType: "java.lang.String"
              uuid: "uniqueUuid159"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid157"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "TMPDIR"
              valueType: "java.lang.String"
              uuid: "uniqueUuid161"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "/var/folders/23/6wlpx0js4c9b9z51m_1txb780000gn/T/"
              valueType: "java.lang.String"
              uuid: "uniqueUuid162"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid160"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "COMMAND_MODE"
              valueType: "java.lang.String"
              uuid: "uniqueUuid164"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "unix2003"
              valueType: "java.lang.String"
              uuid: "uniqueUuid165"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid163"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
        parameters:
        - name: "neverExpire"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "uniqueUuid170"
            fixed: true
      valueType: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
      genericValueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
      uuid: "softReferenceConfigurationPropertyCache"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
            parameters:
            - name: "neverExpire"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: true
                valueType: "boolean"
                fixed: true
          valueType: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
          genericValueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
          uuid: "softReferenceConfigurationPropertyCache"
          fixed: true
        methodParameters:
        - name: "factory"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            uuid: "uniqueUuid168"
        - name: "refreshAction"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.UnaryOperator"
            uuid: "uniqueUuid169"
        methodName: "get"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
      uuid: "object4"
      explicitCastNeeded: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      uuid: "uniqueUuid166"
    - sapientType: "ANY"
      valueType: "java.util.function.UnaryOperator"
      uuid: "uniqueUuid167"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource2"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "NOT_NULL"
      valueType: "java.util.Iterator"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "springIterableConfigurationPropertySource.ConfigurationPropertyNamesIteratorNotNull"
      fixed: true
    branches:
    - lineNumber: 172
      expression: "source instanceof OriginLookup"
      range: "(172,7)-(172,36)"
      evaluatedAs: false
      internalMethodName: "isImmutablePropertySource"
    - lineNumber: 175
      expression: "StandardEnvironment.SYSTEM_ENVIRONMENT_PROPERTY_SOURCE_NAME.equals(source.getName())"
      range: "(175,7)-(175,90)"
      evaluatedAs: true
      internalMethodName: "isImmutablePropertySource"
    - lineNumber: 176
      expression: "source.getSource() == System.getenv()"
      range: "(176,11)-(176,47)"
      evaluatedAs: true
      internalMethodName: "isImmutablePropertySource"
    - lineNumber: 144
      expression: "!isImmutablePropertySource()"
      range: "(144,7)-(144,34)"
      evaluatedAs: false
      internalMethodName: "getConfigurationPropertyNames"
    - lineNumber: 148
      expression: "configurationPropertyNames == null"
      range: "(148,7)-(148,40)"
      evaluatedAs: true
      internalMethodName: "getConfigurationPropertyNames"
- method:
    name: "containsDescendantOf"
    sourceCodeSignature: "ConfigurationPropertyState containsDescendantOf(ConfigurationPropertyName\
      \ name)"
    returnType: "org.springframework.boot.context.properties.source.ConfigurationPropertyState"
    parameters:
    - name: "name"
      type: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    instructionFingerprint: "8DB5F6D0213D397BCE0040909F97964D"
  paths:
  - pathId: "path1"
    testPathName: "containsDescendantOfWhenThisAncestorOfCheckEqualsPropertyMapperDEFAULT_ANCESTOR_OF_CHECK"
    constructorSignature: "<init>(org.springframework.core.env.EnumerablePropertySource<?>,org.springframework.boot.context.properties.source.PropertyMapper[])\
      \ : void"
    modelFingerprint: "D912CEADA0C9ED871748DF18AFD89507"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6C1725CBA6AFAF2D31155A7EF3509E66"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "67F0F1CBAAC1A13488369545F28C9602"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:propertySource,message:uniqueUuid171):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "22341A279BA87BBAE48FD72643F2E113"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "isTrue(expression:uniqueUuid172,message:uniqueUuid173):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "mapSource"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "490B57FB68206C6401CD6524000C96E2"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getName():name2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "FIELD"
      name: "cache"
      modelFingerprint: "9AE0C5A78235A084C465A001D095207E"
      valueUuid: "softReferenceConfigurationPropertyCache"
      methodExercised:
        expression: "get(factory:uniqueUuid174,refreshAction:uniqueUuid175):object4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "0DED34E20CAAA8BB167861240C930D80"
      valueUuid: "configurationPropertyState"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.BiPredicate.or(java.util.function.BiPredicate<org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.source.ConfigurationPropertyName>)\
        \ : java.util.function.BiPredicate<java.lang.Object,java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
        parameters:
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MapPropertySource"
            uuid: "propertySource"
        - name: "mappers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper"
                1:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper2"
            valueType: "org.springframework.boot.context.properties.source.PropertyMapper[]"
            uuid: "mappers"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PropertySource must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid171"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid172"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Mappers must contain at least one item"
      valueType: "java.lang.String"
      uuid: "uniqueUuid173"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemEnvironment"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
        parameters:
        - name: "neverExpire"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "uniqueUuid178"
            fixed: true
      valueType: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
      genericValueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
      uuid: "softReferenceConfigurationPropertyCache"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
            parameters:
            - name: "neverExpire"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: true
                valueType: "boolean"
                fixed: true
          valueType: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
          genericValueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
          uuid: "softReferenceConfigurationPropertyCache"
          fixed: true
        methodParameters:
        - name: "factory"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            uuid: "uniqueUuid176"
        - name: "refreshAction"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.UnaryOperator"
            uuid: "uniqueUuid177"
        methodName: "get"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
      uuid: "object4"
      explicitCastNeeded: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      uuid: "uniqueUuid174"
    - sapientType: "ANY"
      valueType: "java.util.function.UnaryOperator"
      uuid: "uniqueUuid175"
    - sapientType: "ENUM"
      content: !<regular>
        value: "PRESENT"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyState"
      uuid: "configurationPropertyState"
    branches:
    - lineNumber: 101
      expression: "underlyingSource instanceof Random"
      range: "(101,7)-(101,40)"
      evaluatedAs: false
      internalMethodName: "containsDescendantOf"
    - lineNumber: 104
      expression: "underlyingSource instanceof PropertySource<?> underlyingPropertySource"
      range: "(104,7)-(104,76)"
      evaluatedAs: false
      internalMethodName: "containsDescendantOf"
    - lineNumber: 128
      expression: "result != ConfigurationPropertyState.UNKNOWN"
      range: "(128,7)-(128,50)"
      evaluatedAs: false
    - lineNumber: 131
      expression: "this.ancestorOfCheck == PropertyMapper.DEFAULT_ANCESTOR_OF_CHECK"
      range: "(131,7)-(131,70)"
      evaluatedAs: true
  - pathId: "path7"
    testPathName: "containsDescendantOfWhenCandidatesIsEmpty"
    constructorSignature: "<init>(org.springframework.core.env.EnumerablePropertySource<?>,org.springframework.boot.context.properties.source.PropertyMapper[])\
      \ : void"
    modelFingerprint: "390DBF6A333B0C72185832F7D78A2AE7"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6C1725CBA6AFAF2D31155A7EF3509E66"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "67F0F1CBAAC1A13488369545F28C9602"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:propertySource,message:uniqueUuid179):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "22341A279BA87BBAE48FD72643F2E113"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "isTrue(expression:uniqueUuid180,message:uniqueUuid181):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "mapSource"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "490B57FB68206C6401CD6524000C96E2"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getName():name2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "09408CF234E9848EFC968E4FACB797B7"
      methodExercised:
        expression: "getPropertySource():enumerablePropertySource"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "21DF9AF340194FF3E592F831BCAC5002"
      valueUuid: "enumerablePropertySource"
      methodExercised:
        expression: "getName():name3"
    - type: "FIELD"
      name: "cache"
      modelFingerprint: "9AE0C5A78235A084C465A001D095207E"
      valueUuid: "softReferenceConfigurationPropertyCache"
      methodExercised:
        expression: "get(factory:uniqueUuid182,refreshAction:uniqueUuid183):object4"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "09408CF234E9848EFC968E4FACB797B7"
      methodExercised:
        expression: "getPropertySource():enumerablePropertySource2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "408B05A9B728182CE8F1D549FC270C30"
      valueUuid: "enumerablePropertySource2"
      methodExercised:
        expression: "getPropertyNames():stringArray"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A08CD4C85BE33FA7AC835E3B5C40D3AA"
      valueUuid: "Enum-org.springframework.boot.context.properties.source.ConfigurationPropertyState-ABSENT"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.BiPredicate.or(java.util.function.BiPredicate<org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.source.ConfigurationPropertyName>)\
        \ : java.util.function.BiPredicate<java.lang.Object,java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
        parameters:
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MapPropertySource"
            uuid: "propertySource"
        - name: "mappers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper"
                1:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper2"
            valueType: "org.springframework.boot.context.properties.source.PropertyMapper[]"
            uuid: "mappers"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PropertySource must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid179"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid180"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Mappers must contain at least one item"
      valueType: "java.lang.String"
      uuid: "uniqueUuid181"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemEnvironment"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "name3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
        parameters:
        - name: "neverExpire"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "uniqueUuid186"
            fixed: true
      valueType: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
      genericValueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
      uuid: "softReferenceConfigurationPropertyCache"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
            parameters:
            - name: "neverExpire"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: true
                valueType: "boolean"
                fixed: true
          valueType: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
          genericValueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
          uuid: "softReferenceConfigurationPropertyCache"
          fixed: true
        methodParameters:
        - name: "factory"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            uuid: "uniqueUuid184"
        - name: "refreshAction"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.UnaryOperator"
            uuid: "uniqueUuid185"
        methodName: "get"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
      uuid: "object4"
      explicitCastNeeded: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      uuid: "uniqueUuid182"
    - sapientType: "ANY"
      valueType: "java.util.function.UnaryOperator"
      uuid: "uniqueUuid183"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource2"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "ENUM"
      content: !<regular>
        value: "ABSENT"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyState"
      uuid: "Enum-org.springframework.boot.context.properties.source.ConfigurationPropertyState-ABSENT"
      fixed: true
    branches:
    - lineNumber: 101
      expression: "underlyingSource instanceof Random"
      range: "(101,7)-(101,40)"
      evaluatedAs: false
      internalMethodName: "containsDescendantOf"
    - lineNumber: 104
      expression: "underlyingSource instanceof PropertySource<?> underlyingPropertySource"
      range: "(104,7)-(104,76)"
      evaluatedAs: false
      internalMethodName: "containsDescendantOf"
    - lineNumber: 128
      expression: "result != ConfigurationPropertyState.UNKNOWN"
      range: "(128,7)-(128,50)"
      evaluatedAs: false
    - lineNumber: 131
      expression: "this.ancestorOfCheck == PropertyMapper.DEFAULT_ANCESTOR_OF_CHECK"
      range: "(131,7)-(131,70)"
      evaluatedAs: false
    - lineNumber: 172
      expression: "source instanceof OriginLookup"
      range: "(172,7)-(172,36)"
      evaluatedAs: false
      internalMethodName: "isImmutablePropertySource"
    - lineNumber: 175
      expression: "StandardEnvironment.SYSTEM_ENVIRONMENT_PROPERTY_SOURCE_NAME.equals(source.getName())"
      range: "(175,7)-(175,90)"
      evaluatedAs: false
      internalMethodName: "isImmutablePropertySource"
    - lineNumber: 144
      expression: "!isImmutablePropertySource()"
      range: "(144,7)-(144,34)"
      evaluatedAs: true
      internalMethodName: "getConfigurationPropertyNames"
    - lineNumber: 135
      expression: "for-each(candidates)"
      range: "(135,46)-(135,55)"
      evaluatedAs: false
  - pathId: "path6"
    testPathName: "containsDescendantOfWhenIsImmutablePropertySourceNotAndCandidatesIsEmpty"
    constructorSignature: "<init>(org.springframework.core.env.EnumerablePropertySource<?>,org.springframework.boot.context.properties.source.PropertyMapper[])\
      \ : void"
    modelFingerprint: "50ED22E522D3F0E5EB751FE533F824AE"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6C1725CBA6AFAF2D31155A7EF3509E66"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "67F0F1CBAAC1A13488369545F28C9602"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:propertySource,message:uniqueUuid187):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "22341A279BA87BBAE48FD72643F2E113"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "isTrue(expression:uniqueUuid188,message:uniqueUuid189):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "mapSource"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "490B57FB68206C6401CD6524000C96E2"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getName():name2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "09408CF234E9848EFC968E4FACB797B7"
      methodExercised:
        expression: "getPropertySource():enumerablePropertySource"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "93211585E4A107C54EFB091E058E5D40"
      valueUuid: "enumerablePropertySource"
      methodExercised:
        expression: "getName():name3"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "37653524DEFC9EB034C81014740E85CF"
      valueUuid: "enumerablePropertySource"
      methodExercised:
        expression: "getSource():source2"
    - type: "FIELD"
      name: "cache"
      modelFingerprint: "9AE0C5A78235A084C465A001D095207E"
      valueUuid: "softReferenceConfigurationPropertyCache"
      methodExercised:
        expression: "get(factory:uniqueUuid190,refreshAction:uniqueUuid191):object5"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "09408CF234E9848EFC968E4FACB797B7"
      methodExercised:
        expression: "getPropertySource():enumerablePropertySource2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "408B05A9B728182CE8F1D549FC270C30"
      valueUuid: "enumerablePropertySource2"
      methodExercised:
        expression: "getPropertyNames():stringArray"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A08CD4C85BE33FA7AC835E3B5C40D3AA"
      valueUuid: "Enum-org.springframework.boot.context.properties.source.ConfigurationPropertyState-ABSENT"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.BiPredicate.or(java.util.function.BiPredicate<org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.source.ConfigurationPropertyName>)\
        \ : java.util.function.BiPredicate<java.lang.Object,java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
        parameters:
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MapPropertySource"
            uuid: "propertySource"
        - name: "mappers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper"
                1:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper2"
            valueType: "org.springframework.boot.context.properties.source.PropertyMapper[]"
            uuid: "mappers"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PropertySource must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid187"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid188"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Mappers must contain at least one item"
      valueType: "java.lang.String"
      uuid: "uniqueUuid189"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemEnvironment"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemEnvironment"
      valueType: "java.lang.String"
      uuid: "name3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "source2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
        parameters:
        - name: "neverExpire"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "uniqueUuid194"
            fixed: true
      valueType: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
      genericValueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
      uuid: "softReferenceConfigurationPropertyCache"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
            parameters:
            - name: "neverExpire"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: true
                valueType: "boolean"
                fixed: true
          valueType: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
          genericValueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
          uuid: "softReferenceConfigurationPropertyCache"
          fixed: true
        methodParameters:
        - name: "factory"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            uuid: "uniqueUuid192"
        - name: "refreshAction"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.UnaryOperator"
            uuid: "uniqueUuid193"
        methodName: "get"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
      uuid: "object5"
      explicitCastNeeded: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      uuid: "uniqueUuid190"
    - sapientType: "ANY"
      valueType: "java.util.function.UnaryOperator"
      uuid: "uniqueUuid191"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource2"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "ENUM"
      content: !<regular>
        value: "ABSENT"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyState"
      uuid: "Enum-org.springframework.boot.context.properties.source.ConfigurationPropertyState-ABSENT"
      fixed: true
    branches:
    - lineNumber: 101
      expression: "underlyingSource instanceof Random"
      range: "(101,7)-(101,40)"
      evaluatedAs: false
      internalMethodName: "containsDescendantOf"
    - lineNumber: 104
      expression: "underlyingSource instanceof PropertySource<?> underlyingPropertySource"
      range: "(104,7)-(104,76)"
      evaluatedAs: false
      internalMethodName: "containsDescendantOf"
    - lineNumber: 128
      expression: "result != ConfigurationPropertyState.UNKNOWN"
      range: "(128,7)-(128,50)"
      evaluatedAs: false
    - lineNumber: 131
      expression: "this.ancestorOfCheck == PropertyMapper.DEFAULT_ANCESTOR_OF_CHECK"
      range: "(131,7)-(131,70)"
      evaluatedAs: false
    - lineNumber: 172
      expression: "source instanceof OriginLookup"
      range: "(172,7)-(172,36)"
      evaluatedAs: false
      internalMethodName: "isImmutablePropertySource"
    - lineNumber: 175
      expression: "StandardEnvironment.SYSTEM_ENVIRONMENT_PROPERTY_SOURCE_NAME.equals(source.getName())"
      range: "(175,7)-(175,90)"
      evaluatedAs: true
      internalMethodName: "isImmutablePropertySource"
    - lineNumber: 176
      expression: "source.getSource() == System.getenv()"
      range: "(176,11)-(176,47)"
      evaluatedAs: false
      internalMethodName: "isImmutablePropertySource"
    - lineNumber: 144
      expression: "!isImmutablePropertySource()"
      range: "(144,7)-(144,34)"
      evaluatedAs: true
      internalMethodName: "getConfigurationPropertyNames"
    - lineNumber: 135
      expression: "for-each(candidates)"
      range: "(135,46)-(135,55)"
      evaluatedAs: false
  - pathId: "path2"
    testPathName: "containsDescendantOfWhenThisAncestorOfCheckTestNameCandidate"
    constructorSignature: "<init>(org.springframework.core.env.EnumerablePropertySource<?>,org.springframework.boot.context.properties.source.PropertyMapper[])\
      \ : void"
    modelFingerprint: "7B937757D64CEBFCAB8440309C5B08EB"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6C1725CBA6AFAF2D31155A7EF3509E66"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "67F0F1CBAAC1A13488369545F28C9602"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:propertySource,message:uniqueUuid195):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "22341A279BA87BBAE48FD72643F2E113"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "isTrue(expression:uniqueUuid196,message:uniqueUuid197):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "mapSource"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "490B57FB68206C6401CD6524000C96E2"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getName():name2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "09408CF234E9848EFC968E4FACB797B7"
      methodExercised:
        expression: "getPropertySource():enumerablePropertySource"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "93211585E4A107C54EFB091E058E5D40"
      valueUuid: "enumerablePropertySource"
      methodExercised:
        expression: "getName():name3"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "367466F708DCE48FD886929D98D77543"
      valueUuid: "enumerablePropertySource"
      methodExercised:
        expression: "getSource():map2"
    - type: "FIELD"
      name: "cache"
      modelFingerprint: "9AE0C5A78235A084C465A001D095207E"
      valueUuid: "softReferenceConfigurationPropertyCache"
      methodExercised:
        expression: "get(factory:uniqueUuid234,refreshAction:uniqueUuid235):object5"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "09408CF234E9848EFC968E4FACB797B7"
      methodExercised:
        expression: "getPropertySource():enumerablePropertySource2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "408B05A9B728182CE8F1D549FC270C30"
      valueUuid: "enumerablePropertySource2"
      methodExercised:
        expression: "getPropertyNames():stringArray"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "F70B23A88E73F652E8EDDA5F974C1AB9"
      valueUuid: "Enum-org.springframework.boot.context.properties.source.ConfigurationPropertyState-PRESENT"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.BiPredicate.or(java.util.function.BiPredicate<org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.source.ConfigurationPropertyName>)\
        \ : java.util.function.BiPredicate<java.lang.Object,java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
        parameters:
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MapPropertySource"
            uuid: "propertySource"
        - name: "mappers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper"
                1:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper2"
            valueType: "org.springframework.boot.context.properties.source.PropertyMapper[]"
            uuid: "mappers"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PropertySource must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid195"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid196"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Mappers must contain at least one item"
      valueType: "java.lang.String"
      uuid: "uniqueUuid197"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemEnvironment"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemEnvironment"
      valueType: "java.lang.String"
      uuid: "name3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "PATH"
              valueType: "java.lang.String"
              uuid: "uniqueUuid199"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "/usr/bin:/bin:/usr/sbin:/sbin"
              valueType: "java.lang.String"
              uuid: "uniqueUuid200"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid198"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "__CFBundleIdentifier"
              valueType: "java.lang.String"
              uuid: "uniqueUuid202"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "com.jetbrains.intellij.ce"
              valueType: "java.lang.String"
              uuid: "uniqueUuid203"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid201"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "SSH_AUTH_SOCK"
              valueType: "java.lang.String"
              uuid: "uniqueUuid205"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "/private/tmp/com.apple.launchd.3aGiD7YEVS/Listeners"
              valueType: "java.lang.String"
              uuid: "uniqueUuid206"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid204"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "XPC_FLAGS"
              valueType: "java.lang.String"
              uuid: "uniqueUuid208"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "0x0"
              valueType: "java.lang.String"
              uuid: "uniqueUuid209"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid207"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "SHELL"
              valueType: "java.lang.String"
              uuid: "uniqueUuid211"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "/bin/zsh"
              valueType: "java.lang.String"
              uuid: "uniqueUuid212"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid210"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "__CF_USER_TEXT_ENCODING"
              valueType: "java.lang.String"
              uuid: "uniqueUuid214"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "0x1F5:0x0:0x0"
              valueType: "java.lang.String"
              uuid: "uniqueUuid215"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid213"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "LOGNAME"
              valueType: "java.lang.String"
              uuid: "uniqueUuid217"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "bhuvan"
              valueType: "java.lang.String"
              uuid: "uniqueUuid218"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid216"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "XPC_SERVICE_NAME"
              valueType: "java.lang.String"
              uuid: "uniqueUuid220"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "application.com.jetbrains.intellij.ce.7960374.7961073"
              valueType: "java.lang.String"
              uuid: "uniqueUuid221"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid219"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "USER"
              valueType: "java.lang.String"
              uuid: "uniqueUuid223"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "bhuvan"
              valueType: "java.lang.String"
              uuid: "uniqueUuid224"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid222"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "HOME"
              valueType: "java.lang.String"
              uuid: "uniqueUuid226"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "/Users/bhuvan"
              valueType: "java.lang.String"
              uuid: "uniqueUuid227"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid225"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "TMPDIR"
              valueType: "java.lang.String"
              uuid: "uniqueUuid229"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "/var/folders/23/6wlpx0js4c9b9z51m_1txb780000gn/T/"
              valueType: "java.lang.String"
              uuid: "uniqueUuid230"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid228"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "COMMAND_MODE"
              valueType: "java.lang.String"
              uuid: "uniqueUuid232"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "unix2003"
              valueType: "java.lang.String"
              uuid: "uniqueUuid233"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid231"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
        parameters:
        - name: "neverExpire"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "uniqueUuid238"
            fixed: true
      valueType: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
      genericValueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
      uuid: "softReferenceConfigurationPropertyCache"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
            parameters:
            - name: "neverExpire"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: true
                valueType: "boolean"
                fixed: true
          valueType: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
          genericValueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
          uuid: "softReferenceConfigurationPropertyCache"
          fixed: true
        methodParameters:
        - name: "factory"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            uuid: "uniqueUuid236"
        - name: "refreshAction"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.UnaryOperator"
            uuid: "uniqueUuid237"
        methodName: "get"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
      uuid: "object5"
      explicitCastNeeded: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      uuid: "uniqueUuid234"
    - sapientType: "ANY"
      valueType: "java.util.function.UnaryOperator"
      uuid: "uniqueUuid235"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource2"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "ENUM"
      content: !<regular>
        value: "PRESENT"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyState"
      uuid: "Enum-org.springframework.boot.context.properties.source.ConfigurationPropertyState-PRESENT"
      fixed: true
    branches:
    - lineNumber: 101
      expression: "underlyingSource instanceof Random"
      range: "(101,7)-(101,40)"
      evaluatedAs: false
      internalMethodName: "containsDescendantOf"
    - lineNumber: 104
      expression: "underlyingSource instanceof PropertySource<?> underlyingPropertySource"
      range: "(104,7)-(104,76)"
      evaluatedAs: false
      internalMethodName: "containsDescendantOf"
    - lineNumber: 128
      expression: "result != ConfigurationPropertyState.UNKNOWN"
      range: "(128,7)-(128,50)"
      evaluatedAs: false
    - lineNumber: 131
      expression: "this.ancestorOfCheck == PropertyMapper.DEFAULT_ANCESTOR_OF_CHECK"
      range: "(131,7)-(131,70)"
      evaluatedAs: false
    - lineNumber: 172
      expression: "source instanceof OriginLookup"
      range: "(172,7)-(172,36)"
      evaluatedAs: false
      internalMethodName: "isImmutablePropertySource"
    - lineNumber: 175
      expression: "StandardEnvironment.SYSTEM_ENVIRONMENT_PROPERTY_SOURCE_NAME.equals(source.getName())"
      range: "(175,7)-(175,90)"
      evaluatedAs: true
      internalMethodName: "isImmutablePropertySource"
    - lineNumber: 176
      expression: "source.getSource() == System.getenv()"
      range: "(176,11)-(176,47)"
      evaluatedAs: true
      internalMethodName: "isImmutablePropertySource"
    - lineNumber: 144
      expression: "!isImmutablePropertySource()"
      range: "(144,7)-(144,34)"
      evaluatedAs: false
      internalMethodName: "getConfigurationPropertyNames"
    - lineNumber: 148
      expression: "configurationPropertyNames == null"
      range: "(148,7)-(148,40)"
      evaluatedAs: true
      internalMethodName: "getConfigurationPropertyNames"
    - lineNumber: 135
      expression: "for-each(candidates)"
      range: "(135,46)-(135,55)"
      evaluatedAs: true
    - lineNumber: 136
      expression: "candidate != null"
      range: "(136,8)-(136,24)"
      evaluatedAs: true
    - lineNumber: 136
      expression: "this.ancestorOfCheck.test(name, candidate)"
      range: "(136,29)-(136,70)"
      evaluatedAs: true
  - pathId: "path3"
    testPathName: "containsDescendantOfWhenThisAncestorOfCheckNotTestNameCandidate"
    constructorSignature: "<init>(org.springframework.core.env.EnumerablePropertySource<?>,org.springframework.boot.context.properties.source.PropertyMapper[])\
      \ : void"
    modelFingerprint: "99E524716D5EDFA53CD5BB52CAE7DB77"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6C1725CBA6AFAF2D31155A7EF3509E66"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "67F0F1CBAAC1A13488369545F28C9602"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:propertySource,message:uniqueUuid239):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "22341A279BA87BBAE48FD72643F2E113"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "isTrue(expression:uniqueUuid240,message:uniqueUuid241):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "mapSource"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "490B57FB68206C6401CD6524000C96E2"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getName():name2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "09408CF234E9848EFC968E4FACB797B7"
      methodExercised:
        expression: "getPropertySource():enumerablePropertySource"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "93211585E4A107C54EFB091E058E5D40"
      valueUuid: "enumerablePropertySource"
      methodExercised:
        expression: "getName():name3"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "367466F708DCE48FD886929D98D77543"
      valueUuid: "enumerablePropertySource"
      methodExercised:
        expression: "getSource():map2"
    - type: "FIELD"
      name: "cache"
      modelFingerprint: "9AE0C5A78235A084C465A001D095207E"
      valueUuid: "softReferenceConfigurationPropertyCache"
      methodExercised:
        expression: "get(factory:uniqueUuid278,refreshAction:uniqueUuid279):object5"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "09408CF234E9848EFC968E4FACB797B7"
      methodExercised:
        expression: "getPropertySource():enumerablePropertySource2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "408B05A9B728182CE8F1D549FC270C30"
      valueUuid: "enumerablePropertySource2"
      methodExercised:
        expression: "getPropertyNames():stringArray"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A08CD4C85BE33FA7AC835E3B5C40D3AA"
      valueUuid: "Enum-org.springframework.boot.context.properties.source.ConfigurationPropertyState-ABSENT"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.BiPredicate.or(java.util.function.BiPredicate<org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.source.ConfigurationPropertyName>)\
        \ : java.util.function.BiPredicate<java.lang.Object,java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
        parameters:
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MapPropertySource"
            uuid: "propertySource"
        - name: "mappers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper"
                1:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper2"
            valueType: "org.springframework.boot.context.properties.source.PropertyMapper[]"
            uuid: "mappers"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PropertySource must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid239"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid240"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Mappers must contain at least one item"
      valueType: "java.lang.String"
      uuid: "uniqueUuid241"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemEnvironment"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemEnvironment"
      valueType: "java.lang.String"
      uuid: "name3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "PATH"
              valueType: "java.lang.String"
              uuid: "uniqueUuid243"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "/usr/bin:/bin:/usr/sbin:/sbin"
              valueType: "java.lang.String"
              uuid: "uniqueUuid244"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid242"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "__CFBundleIdentifier"
              valueType: "java.lang.String"
              uuid: "uniqueUuid246"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "com.jetbrains.intellij.ce"
              valueType: "java.lang.String"
              uuid: "uniqueUuid247"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid245"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "SSH_AUTH_SOCK"
              valueType: "java.lang.String"
              uuid: "uniqueUuid249"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "/private/tmp/com.apple.launchd.3aGiD7YEVS/Listeners"
              valueType: "java.lang.String"
              uuid: "uniqueUuid250"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid248"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "XPC_FLAGS"
              valueType: "java.lang.String"
              uuid: "uniqueUuid252"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "0x0"
              valueType: "java.lang.String"
              uuid: "uniqueUuid253"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid251"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "SHELL"
              valueType: "java.lang.String"
              uuid: "uniqueUuid255"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "/bin/zsh"
              valueType: "java.lang.String"
              uuid: "uniqueUuid256"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid254"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "__CF_USER_TEXT_ENCODING"
              valueType: "java.lang.String"
              uuid: "uniqueUuid258"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "0x1F5:0x0:0x0"
              valueType: "java.lang.String"
              uuid: "uniqueUuid259"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid257"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "LOGNAME"
              valueType: "java.lang.String"
              uuid: "uniqueUuid261"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "bhuvan"
              valueType: "java.lang.String"
              uuid: "uniqueUuid262"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid260"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "XPC_SERVICE_NAME"
              valueType: "java.lang.String"
              uuid: "uniqueUuid264"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "application.com.jetbrains.intellij.ce.7960374.7961073"
              valueType: "java.lang.String"
              uuid: "uniqueUuid265"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid263"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "USER"
              valueType: "java.lang.String"
              uuid: "uniqueUuid267"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "bhuvan"
              valueType: "java.lang.String"
              uuid: "uniqueUuid268"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid266"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "HOME"
              valueType: "java.lang.String"
              uuid: "uniqueUuid270"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "/Users/bhuvan"
              valueType: "java.lang.String"
              uuid: "uniqueUuid271"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid269"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "TMPDIR"
              valueType: "java.lang.String"
              uuid: "uniqueUuid273"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "/var/folders/23/6wlpx0js4c9b9z51m_1txb780000gn/T/"
              valueType: "java.lang.String"
              uuid: "uniqueUuid274"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid272"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "COMMAND_MODE"
              valueType: "java.lang.String"
              uuid: "uniqueUuid276"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "unix2003"
              valueType: "java.lang.String"
              uuid: "uniqueUuid277"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid275"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
        parameters:
        - name: "neverExpire"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "uniqueUuid282"
            fixed: true
      valueType: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
      genericValueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
      uuid: "softReferenceConfigurationPropertyCache"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
            parameters:
            - name: "neverExpire"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: true
                valueType: "boolean"
                fixed: true
          valueType: "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache"
          genericValueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
          uuid: "softReferenceConfigurationPropertyCache"
          fixed: true
        methodParameters:
        - name: "factory"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            uuid: "uniqueUuid280"
        - name: "refreshAction"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.UnaryOperator"
            uuid: "uniqueUuid281"
        methodName: "get"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource$Mappings"
      uuid: "object5"
      explicitCastNeeded: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      uuid: "uniqueUuid278"
    - sapientType: "ANY"
      valueType: "java.util.function.UnaryOperator"
      uuid: "uniqueUuid279"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.EnumerablePropertySource"
      genericValueType: "?"
      uuid: "enumerablePropertySource2"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "ENUM"
      content: !<regular>
        value: "ABSENT"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyState"
      uuid: "Enum-org.springframework.boot.context.properties.source.ConfigurationPropertyState-ABSENT"
      fixed: true
    branches:
    - lineNumber: 101
      expression: "underlyingSource instanceof Random"
      range: "(101,7)-(101,40)"
      evaluatedAs: false
      internalMethodName: "containsDescendantOf"
    - lineNumber: 104
      expression: "underlyingSource instanceof PropertySource<?> underlyingPropertySource"
      range: "(104,7)-(104,76)"
      evaluatedAs: false
      internalMethodName: "containsDescendantOf"
    - lineNumber: 128
      expression: "result != ConfigurationPropertyState.UNKNOWN"
      range: "(128,7)-(128,50)"
      evaluatedAs: false
    - lineNumber: 131
      expression: "this.ancestorOfCheck == PropertyMapper.DEFAULT_ANCESTOR_OF_CHECK"
      range: "(131,7)-(131,70)"
      evaluatedAs: false
    - lineNumber: 172
      expression: "source instanceof OriginLookup"
      range: "(172,7)-(172,36)"
      evaluatedAs: false
      internalMethodName: "isImmutablePropertySource"
    - lineNumber: 175
      expression: "StandardEnvironment.SYSTEM_ENVIRONMENT_PROPERTY_SOURCE_NAME.equals(source.getName())"
      range: "(175,7)-(175,90)"
      evaluatedAs: true
      internalMethodName: "isImmutablePropertySource"
    - lineNumber: 176
      expression: "source.getSource() == System.getenv()"
      range: "(176,11)-(176,47)"
      evaluatedAs: true
      internalMethodName: "isImmutablePropertySource"
    - lineNumber: 144
      expression: "!isImmutablePropertySource()"
      range: "(144,7)-(144,34)"
      evaluatedAs: false
      internalMethodName: "getConfigurationPropertyNames"
    - lineNumber: 148
      expression: "configurationPropertyNames == null"
      range: "(148,7)-(148,40)"
      evaluatedAs: true
      internalMethodName: "getConfigurationPropertyNames"
    - lineNumber: 135
      expression: "for-each(candidates)"
      range: "(135,46)-(135,55)"
      evaluatedAs: true
    - lineNumber: 136
      expression: "candidate != null"
      range: "(136,8)-(136,24)"
      evaluatedAs: true
    - lineNumber: 136
      expression: "this.ancestorOfCheck.test(name, candidate)"
      range: "(136,29)-(136,70)"
      evaluatedAs: false
- method:
    name: "getPropertySource"
    sourceCodeSignature: "EnumerablePropertySource<?> getPropertySource()"
    returnType: "org.springframework.core.env.EnumerablePropertySource"
    genericReturnType: "?"
    instructionFingerprint: "D536F0590EAD52A1CDC0D333070F86C3"
  paths:
  - pathId: "path1"
    testPathName: "getPropertySource1Test"
    constructorSignature: "<init>(org.springframework.core.env.EnumerablePropertySource<?>,org.springframework.boot.context.properties.source.PropertyMapper[])\
      \ : void"
    modelFingerprint: "BA7D9270FE342774F7EB2BA1EED63499"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6C1725CBA6AFAF2D31155A7EF3509E66"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "67F0F1CBAAC1A13488369545F28C9602"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:propertySource,message:uniqueUuid283):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "22341A279BA87BBAE48FD72643F2E113"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "isTrue(expression:uniqueUuid284,message:uniqueUuid285):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "mapSource"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B0CAB8AD7420B69BE5204FB1F80527A8"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "getAncestorOfCheck():biPredicate2"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "490B57FB68206C6401CD6524000C96E2"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getName():name"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "FE90704102D609F704E885B83AC68025"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():map"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68679DCF9CBFFCE64F2E2477F717221D"
      valueUuid: "propertySource"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.BiPredicate.or(java.util.function.BiPredicate<org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.source.ConfigurationPropertyName>)\
        \ : java.util.function.BiPredicate<java.lang.Object,java.lang.Object>"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
        parameters:
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MapPropertySource"
            uuid: "propertySource"
        - name: "mappers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper"
                1:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper2"
            valueType: "org.springframework.boot.context.properties.source.PropertyMapper[]"
            uuid: "mappers"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "PropertySource must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid283"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid284"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Mappers must contain at least one item"
      valueType: "java.lang.String"
      uuid: "uniqueUuid285"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiPredicate"
      uuid: "biPredicate2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemEnvironment"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MapPropertySource"
      uuid: "propertySource"
