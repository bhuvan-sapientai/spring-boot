---
modelFingerprint: "4677243807F53322F63B4657FD262187"
targetClass:
  fullClassName: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesCaching"
methods:
- method:
    name: "enable"
    sourceCodeSignature: "void enable()"
    returnType: "void"
    instructionFingerprint: "2682978AEB8880CD433FF0C36667ABDA"
  paths:
  - pathId: "path1"
    testPathName: "enableWhenCachingIsNotNull"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>)\
      \ : void"
    modelFingerprint: "C9F699078CE2D58BC8522E008E7CFFFA"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BC28C4AADA6ED42A44B44FE5A6D16B95"
      valueUuid: "target"
    - type: "STATIC"
      name: "CachingConfigurationPropertySource.class"
      modelFingerprint: "5B7E49EE0D4B1E9B0EA610C6332FCFAD"
      valueUuid: "CachingConfigurationPropertySource.class"
      methodExercised:
        expression: "find(source:object):configurationPropertyCaching"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "action.accept(caching);"
      lineNumber: 61
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: action - Method: accept"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesCaching"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesCaching"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.CachingConfigurationPropertySource"
      uuid: "CachingConfigurationPropertySource.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyCaching"
      uuid: "configurationPropertyCaching"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 57
      expression: "this.sources != null"
      range: "(57,7)-(57,26)"
      evaluatedAs: true
      internalMethodName: "forEach"
    - lineNumber: 58
      expression: "for-each(this.sources)"
      range: "(58,46)-(58,57)"
      evaluatedAs: true
      internalMethodName: "forEach"
    - lineNumber: 60
      expression: "caching != null"
      range: "(60,9)-(60,23)"
      evaluatedAs: true
      internalMethodName: "forEach"
- method:
    name: "disable"
    sourceCodeSignature: "void disable()"
    returnType: "void"
    instructionFingerprint: "6D08EDC444F2811353826A7C418E397E"
  paths:
  - pathId: "path1"
    testPathName: "disableWhenCachingIsNotNull"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>)\
      \ : void"
    modelFingerprint: "C9F699078CE2D58BC8522E008E7CFFFA"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BC28C4AADA6ED42A44B44FE5A6D16B95"
      valueUuid: "target"
    - type: "STATIC"
      name: "CachingConfigurationPropertySource.class"
      modelFingerprint: "5B7E49EE0D4B1E9B0EA610C6332FCFAD"
      valueUuid: "CachingConfigurationPropertySource.class"
      methodExercised:
        expression: "find(source:object):configurationPropertyCaching"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "action.accept(caching);"
      lineNumber: 61
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: action - Method: accept"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesCaching"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesCaching"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.CachingConfigurationPropertySource"
      uuid: "CachingConfigurationPropertySource.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyCaching"
      uuid: "configurationPropertyCaching"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 57
      expression: "this.sources != null"
      range: "(57,7)-(57,26)"
      evaluatedAs: true
      internalMethodName: "forEach"
    - lineNumber: 58
      expression: "for-each(this.sources)"
      range: "(58,46)-(58,57)"
      evaluatedAs: true
      internalMethodName: "forEach"
    - lineNumber: 60
      expression: "caching != null"
      range: "(60,9)-(60,23)"
      evaluatedAs: true
      internalMethodName: "forEach"
- method:
    name: "setTimeToLive"
    sourceCodeSignature: "void setTimeToLive(Duration timeToLive)"
    returnType: "void"
    parameters:
    - name: "timeToLive"
      type: "java.time.Duration"
    instructionFingerprint: "D9D82422B67DA2CD813D1ADD31561722"
  paths:
  - pathId: "path1"
    testPathName: "setTimeToLiveWhenCachingIsNotNull"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>)\
      \ : void"
    modelFingerprint: "909F7383C1291C7BF86D9D31239EA935"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BC28C4AADA6ED42A44B44FE5A6D16B95"
      valueUuid: "target"
    - type: "INPUT"
      name: "timeToLive"
      modelFingerprint: "21B05FB2C68D183C9B12EA37A35C13F4"
      valueUuid: "timeToLive"
    - type: "STATIC"
      name: "CachingConfigurationPropertySource.class"
      modelFingerprint: "5B7E49EE0D4B1E9B0EA610C6332FCFAD"
      valueUuid: "CachingConfigurationPropertySource.class"
      methodExercised:
        expression: "find(source:object):configurationPropertyCaching"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "action.accept(caching);"
      lineNumber: 61
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: action - Method: accept"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesCaching"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesCaching"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "timeToLive-days"
      valueType: "java.time.Duration"
      uuid: "timeToLive"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.CachingConfigurationPropertySource"
      uuid: "CachingConfigurationPropertySource.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyCaching"
      uuid: "configurationPropertyCaching"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 57
      expression: "this.sources != null"
      range: "(57,7)-(57,26)"
      evaluatedAs: true
      internalMethodName: "forEach"
    - lineNumber: 58
      expression: "for-each(this.sources)"
      range: "(58,46)-(58,57)"
      evaluatedAs: true
      internalMethodName: "forEach"
    - lineNumber: 60
      expression: "caching != null"
      range: "(60,9)-(60,23)"
      evaluatedAs: true
      internalMethodName: "forEach"
- method:
    name: "clear"
    sourceCodeSignature: "void clear()"
    returnType: "void"
    instructionFingerprint: "6D5C27131BB5173E05612F67E22B8630"
  paths:
  - pathId: "path1"
    testPathName: "clearWhenCachingIsNotNull"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>)\
      \ : void"
    modelFingerprint: "C9F699078CE2D58BC8522E008E7CFFFA"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BC28C4AADA6ED42A44B44FE5A6D16B95"
      valueUuid: "target"
    - type: "STATIC"
      name: "CachingConfigurationPropertySource.class"
      modelFingerprint: "5B7E49EE0D4B1E9B0EA610C6332FCFAD"
      valueUuid: "CachingConfigurationPropertySource.class"
      methodExercised:
        expression: "find(source:object):configurationPropertyCaching"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "action.accept(caching);"
      lineNumber: 61
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: action - Method: accept"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesCaching"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesCaching"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.CachingConfigurationPropertySource"
      uuid: "CachingConfigurationPropertySource.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyCaching"
      uuid: "configurationPropertyCaching"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 57
      expression: "this.sources != null"
      range: "(57,7)-(57,26)"
      evaluatedAs: true
      internalMethodName: "forEach"
    - lineNumber: 58
      expression: "for-each(this.sources)"
      range: "(58,46)-(58,57)"
      evaluatedAs: true
      internalMethodName: "forEach"
    - lineNumber: 60
      expression: "caching != null"
      range: "(60,9)-(60,23)"
      evaluatedAs: true
      internalMethodName: "forEach"
