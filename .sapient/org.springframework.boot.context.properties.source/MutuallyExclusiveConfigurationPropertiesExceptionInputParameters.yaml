---
modelFingerprint: "A45A1784F9C5EDBCF5438E2E3D550C84"
targetClass:
  fullClassName: "org.springframework.boot.context.properties.source.MutuallyExclusiveConfigurationPropertiesException"
methods:
- method:
    name: "getConfiguredNames"
    sourceCodeSignature: "Set<String> getConfiguredNames()"
    returnType: "java.util.Set"
    genericReturnType: "java.lang.String"
    instructionFingerprint: "9636592D2245BC35783E71C3B56B1F3F"
  paths:
  - pathId: "path1"
    testPathName: "getConfiguredNamesTest"
    constructorSignature: "<init>(java.util.Collection<java.lang.String>,java.util.Collection<java.lang.String>)\
      \ : void"
    modelFingerprint: "053CB9F80FF3065B3C15BFE4B6B5A206"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    calledSomeStaticInternalMethod: true
- method:
    name: "getMutuallyExclusiveNames"
    sourceCodeSignature: "Set<String> getMutuallyExclusiveNames()"
    returnType: "java.util.Set"
    genericReturnType: "java.lang.String"
    instructionFingerprint: "762E9231D321F12656B479F0C774F5D1"
  paths:
  - pathId: "path1"
    testPathName: "getMutuallyExclusiveNamesTest"
    constructorSignature: "<init>(java.util.Collection<java.lang.String>,java.util.Collection<java.lang.String>)\
      \ : void"
    modelFingerprint: "053CB9F80FF3065B3C15BFE4B6B5A206"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    calledSomeStaticInternalMethod: true
- method:
    name: "throwIfMultipleNonNullValuesIn"
    sourceCodeSignature: "void throwIfMultipleNonNullValuesIn(Consumer<Map<String,\
      \ Object>> entries)"
    returnType: "void"
    parameters:
    - name: "entries"
      type: "java.util.function.Consumer"
    instructionFingerprint: "0F048E3679B4F4C9677F469A36F65ADE"
  paths:
  - pathId: "path3"
    testPathName: "throwIfMultipleNonNullValuesInWhenConfiguredNamesSizeNotGreaterThan1"
    modelFingerprint: "79ADEA402AFDD8322EE4FE0A8EB83370"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "entries"
      modelFingerprint: "0F53D4047EBA37B01A14072E4324468B"
      valueUuid: "entries"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.Consumer.accept(java.util.Map<java.lang.String,java.lang.Object>)\
        \ : void"
    allValues:
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "entries"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 106
      expression: "configuredNames.size() > 1"
      range: "(106,7)-(106,32)"
      evaluatedAs: false
  - pathId: "path1"
    testPathName: "throwIfMultipleNonNullValuesInWhenCollectionIsNotNullThrowsMutuallyExclusiveConfigurationPropertiesException"
    modelFingerprint: "82AC5A5F700554EDFAED1FBDB725E433"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "entries"
      modelFingerprint: "0F53D4047EBA37B01A14072E4324468B"
      valueUuid: "entries"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "DC3520F08E3A8BB8D0B890010C441557"
      valueUuid: "mutuallyExclusiveConfigurationPropertiesException"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.Consumer.accept(java.util.Map<java.lang.String,java.lang.Object>)\
        \ : void"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "entries"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.MutuallyExclusiveConfigurationPropertiesException"
        parameters:
        - name: "configuredNames"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values:
              - sapientType: "BASIC"
                content: !<regular>
                  value: "configuredNamesItem1"
                valueType: "java.lang.String"
                uuid: "objectItem0"
              - sapientType: "BASIC"
                content: !<regular>
                  value: "configuredNamesItem2"
                valueType: "java.lang.String"
                uuid: "objectItem1"
            valueType: "java.util.LinkedHashSet"
            genericValueType: "java.lang.String"
            uuid: "object"
            collectionUuid: "list2"
        - name: "mutuallyExclusiveNames"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Set"
            genericValueType: "java.lang.String"
            uuid: "set2"
            collectionUuid: "linkedHashMap"
      valueType: "org.springframework.boot.context.properties.source.MutuallyExclusiveConfigurationPropertiesException"
      uuid: "mutuallyExclusiveConfigurationPropertiesException"
      fixed: true
    branches:
    - lineNumber: 106
      expression: "configuredNames.size() > 1"
      range: "(106,7)-(106,32)"
      evaluatedAs: true
    - lineNumber: 80
      expression: "collection != null"
      range: "(80,11)-(80,28)"
      evaluatedAs: true
      internalMethodName: "asSet"
    calledSomeStaticInternalMethod: true
  - pathId: "path2"
    testPathName: "throwIfMultipleNonNullValuesInWhenCollectionIsNullThrowsMutuallyExclusiveConfigurationPropertiesException"
    modelFingerprint: "4B3964F9CBFAD9938C49CE50C8B2F0E5"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "entries"
      modelFingerprint: "0F53D4047EBA37B01A14072E4324468B"
      valueUuid: "entries"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "1997674657CB8B7C9140627F2E275BAB"
      valueUuid: "mutuallyExclusiveConfigurationPropertiesException"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.Consumer.accept(java.util.Map<java.lang.String,java.lang.Object>)\
        \ : void"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "entries"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.MutuallyExclusiveConfigurationPropertiesException"
        parameters:
        - name: "configuredNames"
          value:
            sapientType: "NULL"
            valueType: "java.util.LinkedHashSet"
            genericValueType: "java.lang.String"
            uuid: "object"
            collectionUuid: "list2"
        - name: "mutuallyExclusiveNames"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Set"
            genericValueType: "java.lang.String"
            uuid: "set2"
            collectionUuid: "linkedHashMap"
      valueType: "org.springframework.boot.context.properties.source.MutuallyExclusiveConfigurationPropertiesException"
      uuid: "mutuallyExclusiveConfigurationPropertiesException"
      fixed: true
    branches:
    - lineNumber: 106
      expression: "configuredNames.size() > 1"
      range: "(106,7)-(106,32)"
      evaluatedAs: true
    - lineNumber: 80
      expression: "collection != null"
      range: "(80,11)-(80,28)"
      evaluatedAs: false
      internalMethodName: "asSet"
    calledSomeStaticInternalMethod: true
