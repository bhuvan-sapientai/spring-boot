---
modelFingerprint: "8C056984E9B0A7743C7D43DA929D7FFA"
targetClass:
  fullClassName: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
methods:
- method:
    name: "isUsingSources"
    sourceCodeSignature: "boolean isUsingSources(Iterable<PropertySource<?>> sources)"
    returnType: "boolean"
    parameters:
    - name: "sources"
      type: "java.lang.Iterable"
    instructionFingerprint: "0561389946EDF54148C7B05BBB18A9DC"
  paths:
  - pathId: "path1"
    testPathName: "isUsingSourcesWhenThisSourcesEqualsSources"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.core.env.PropertySource<?>>)\
      \ : void"
    modelFingerprint: "245F35210232AEFB3D9F2C645398669E"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "ED0FE66F76BF8294B0E2040BDD498CC0"
      valueUuid: "target"
    - type: "INPUT"
      name: "sources"
      modelFingerprint: "56D8F9F12003588046D170D00AEDADE2"
      valueUuid: "sources2"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "ED96FC34EA082CD87049AD41D3812AD2"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources2,message:uniqueUuid1):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8383DF6F1D02800B0E90FD4143032B37"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.core.env.PropertySource<?>"
            uuid: "sources2"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.core.env.PropertySource<?>"
      uuid: "sources2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.core.env.PropertySource<?>"
      uuid: "sources2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 54
      expression: "this.sources == sources"
      range: "(54,10)-(54,32)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "isUsingSourcesWhenThisSourcesNotEqualsSources"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.core.env.PropertySource<?>>)\
      \ : void"
    modelFingerprint: "C290893A364D26B7947CDC0FB0A04BCE"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "ED0FE66F76BF8294B0E2040BDD498CC0"
      valueUuid: "target"
    - type: "INPUT"
      name: "sources"
      modelFingerprint: "56D8F9F12003588046D170D00AEDADE2"
      valueUuid: "sources"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "ED96FC34EA082CD87049AD41D3812AD2"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources2,message:uniqueUuid2):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.core.env.PropertySource<?>"
            uuid: "sources2"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.core.env.PropertySource<?>"
      uuid: "sources"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.core.env.PropertySource<?>"
      uuid: "sources2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 54
      expression: "this.sources == sources"
      range: "(54,10)-(54,32)"
      evaluatedAs: false
- method:
    name: "iterator"
    sourceCodeSignature: "Iterator<ConfigurationPropertySource> iterator()"
    returnType: "java.util.Iterator"
    genericReturnType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
    instructionFingerprint: "CBF4850B6BCA87D3580BBF0DE20041F4"
  paths:
  - pathId: "path1"
    testPathName: "iteratorTest"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.core.env.PropertySource<?>>)\
      \ : void"
    modelFingerprint: "7DECFFA2B6D92CA2E97F52921C6C3724"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "A67633DED64891EDF26A27570BCB0656"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "DA9F847A0CE6719F42020B44D7CCE034"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid1):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "13BBEE3EDA6611DC003E08F9FADF6B77"
      valueUuid: "springConfigurationPropertySources.SourcesIteratorNotNull"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.core.env.PropertySource<?>"
            uuid: "sources"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.core.env.PropertySource<?>"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "NOT_NULL"
      valueType: "java.util.Iterator"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "springConfigurationPropertySources.SourcesIteratorNotNull"
      fixed: true
