---
modelFingerprint: "237F6901144466CA0F4B119F08EA4A3B"
targetClass:
  fullClassName: "org.springframework.boot.context.properties.source.ConfigurationPropertyNameAliases"
methods:
- method:
    name: "addAliases"
    sourceCodeSignature: "void addAliases(String name, String... aliases)"
    returnType: "void"
    parameters:
    - name: "name"
      type: "java.lang.String"
    - name: "aliases"
      type: "java.lang.String[]"
    instructionFingerprint: "97D29D74B224FCBD0F504338320602AC"
  paths:
  - pathId: "path1"
    testPathName: "addAliasesTest"
    constructorSignature: "<init>(java.lang.String,java.lang.String[]) : void"
    modelFingerprint: "8538DC8F676B65AAD177EB217F604DD4"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "5C1EE7505E0D939A043BC8713828B456"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "5457EABD11A78BB96BC94745F9A71C63"
      valueUuid: "name2"
    - type: "INPUT"
      name: "aliases"
      modelFingerprint: "5BCF1876DDC44E801387426E04582A98"
      valueUuid: "aliases2"
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "D72E6315542EE07C003F660CE9458659"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "notNull(object:name2,message:uniqueUuid1):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "C3D68E64CD01F9D6147DBE44EF54D4D0"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "notNull(object:aliases2,message:uniqueUuid2):void2"
        staticAccess: true
    - type: "STATIC"
      name: "ConfigurationPropertyName.class"
      modelFingerprint: "0F4479724811191FBB285D88555902CB"
      valueUuid: "ConfigurationPropertyName.class"
      methodExercised:
        expression: "of(name:name2):configurationPropertyName"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9953DA1573C69D46F3201FA269E1A390"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:configurationPropertyName,message:uniqueUuid3):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "98A67CD915CF10EDCE320785A7014EC5"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:objectArray,message:uniqueUuid4):void4"
        staticAccess: true
    - type: "FIELD"
      name: "aliases"
      modelFingerprint: "ECD5BFF0D0E0DBE5449FE9AA4042E1B6"
      valueUuid: "linkedMultiValueMap"
      methodExercised:
        expression: "addAll(key:configurationPropertyName,values:list2):void5"
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "D72E6315542EE07C003F660CE9458659"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "notNull(object:name2,message:uniqueUuid5):void6"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "C3D68E64CD01F9D6147DBE44EF54D4D0"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "notNull(object:aliases2,message:uniqueUuid6):void7"
        staticAccess: true
    - type: "STATIC"
      name: "ConfigurationPropertyName.class"
      modelFingerprint: "0F4479724811191FBB285D88555902CB"
      valueUuid: "ConfigurationPropertyName.class"
      methodExercised:
        expression: "of(name:name2):configurationPropertyName2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9953DA1573C69D46F3201FA269E1A390"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:configurationPropertyName2,message:uniqueUuid7):void8"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "98A67CD915CF10EDCE320785A7014EC5"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:objectArray2,message:uniqueUuid8):void9"
        staticAccess: true
    - type: "FIELD"
      name: "aliases"
      modelFingerprint: "ECD5BFF0D0E0DBE5449FE9AA4042E1B6"
      valueUuid: "linkedMultiValueMap"
      methodExercised:
        expression: "addAll(key:configurationPropertyName2,values:list4):void10"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyNameAliases"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "name2"
        - name: "aliases"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "aliases2"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyNameAliases"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "aliases2"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "aliases2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Aliases must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "ConfigurationPropertyName.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName[]"
      uuid: "objectArray"
      collectionUuid: "list"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Aliases must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.MultiValueMap"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "linkedMultiValueMap"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "list2"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "aliases2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Aliases must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "ConfigurationPropertyName.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName[]"
      uuid: "objectArray2"
      collectionUuid: "list3"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Aliases must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.MultiValueMap"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "linkedMultiValueMap"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "list4"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "addAliases"
    sourceCodeSignature: "void addAliases(ConfigurationPropertyName name, ConfigurationPropertyName...\
      \ aliases)"
    returnType: "void"
    parameters:
    - name: "name"
      type: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    - name: "aliases"
      type: "org.springframework.boot.context.properties.source.ConfigurationPropertyName[]"
    instructionFingerprint: "C8CD7DEA07E244B071C609DF83E26F1B"
  paths:
  - pathId: "path1"
    testPathName: "addAliases1Test"
    constructorSignature: "<init>(java.lang.String,java.lang.String[]) : void"
    modelFingerprint: "4D05DB244A6B8D2D3750DC6492D168E7"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "5C1EE7505E0D939A043BC8713828B456"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "F4F7572117AAD444C21BB380D67503D2"
      valueUuid: "configurationPropertyName"
    - type: "INPUT"
      name: "aliases"
      modelFingerprint: "15C0E9A85DFCFB699DC04205F945D36A"
      valueUuid: "objectArray"
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "D72E6315542EE07C003F660CE9458659"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "notNull(object:name2,message:uniqueUuid1):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "C3D68E64CD01F9D6147DBE44EF54D4D0"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "notNull(object:aliases2,message:uniqueUuid2):void2"
        staticAccess: true
    - type: "STATIC"
      name: "ConfigurationPropertyName.class"
      modelFingerprint: "0F4479724811191FBB285D88555902CB"
      valueUuid: "ConfigurationPropertyName.class"
      methodExercised:
        expression: "of(name:name2):configurationPropertyName"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9953DA1573C69D46F3201FA269E1A390"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:configurationPropertyName,message:uniqueUuid3):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "98A67CD915CF10EDCE320785A7014EC5"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:objectArray,message:uniqueUuid4):void4"
        staticAccess: true
    - type: "FIELD"
      name: "aliases"
      modelFingerprint: "ECD5BFF0D0E0DBE5449FE9AA4042E1B6"
      valueUuid: "linkedMultiValueMap"
      methodExercised:
        expression: "addAll(key:configurationPropertyName,values:list2):void5"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9953DA1573C69D46F3201FA269E1A390"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:configurationPropertyName,message:uniqueUuid5):void6"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "98A67CD915CF10EDCE320785A7014EC5"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:objectArray,message:uniqueUuid6):void7"
        staticAccess: true
    - type: "FIELD"
      name: "aliases"
      modelFingerprint: "ECD5BFF0D0E0DBE5449FE9AA4042E1B6"
      valueUuid: "linkedMultiValueMap"
      methodExercised:
        expression: "addAll(key:configurationPropertyName,values:list3):void8"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyNameAliases"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "name2"
        - name: "aliases"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "aliases2"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyNameAliases"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName[]"
      uuid: "objectArray"
      collectionUuid: "list"
      explicitCastNeeded: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "aliases2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Aliases must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "ConfigurationPropertyName.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName[]"
      uuid: "objectArray"
      collectionUuid: "list"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Aliases must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.MultiValueMap"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "linkedMultiValueMap"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName[]"
      uuid: "objectArray"
      collectionUuid: "list"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Aliases must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.MultiValueMap"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "linkedMultiValueMap"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "list3"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "getAliases"
    sourceCodeSignature: "List<ConfigurationPropertyName> getAliases(ConfigurationPropertyName\
      \ name)"
    returnType: "java.util.List"
    genericReturnType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    parameters:
    - name: "name"
      type: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    instructionFingerprint: "D1E5BBDD38E15F1B7F4AFC1E832E63C6"
  paths:
  - pathId: "path1"
    testPathName: "getAliasesTest"
    constructorSignature: "<init>(java.lang.String,java.lang.String[]) : void"
    modelFingerprint: "017DB79C39D55E24595558CE0C2D0378"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "5C1EE7505E0D939A043BC8713828B456"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "D72E6315542EE07C003F660CE9458659"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "notNull(object:name2,message:uniqueUuid1):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "C3D68E64CD01F9D6147DBE44EF54D4D0"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "notNull(object:aliases,message:uniqueUuid2):void2"
        staticAccess: true
    - type: "STATIC"
      name: "ConfigurationPropertyName.class"
      modelFingerprint: "0F4479724811191FBB285D88555902CB"
      valueUuid: "ConfigurationPropertyName.class"
      methodExercised:
        expression: "of(name:name2):configurationPropertyName"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9953DA1573C69D46F3201FA269E1A390"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:configurationPropertyName,message:uniqueUuid3):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "98A67CD915CF10EDCE320785A7014EC5"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:objectArray,message:uniqueUuid4):void4"
        staticAccess: true
    - type: "FIELD"
      name: "aliases"
      modelFingerprint: "ECD5BFF0D0E0DBE5449FE9AA4042E1B6"
      valueUuid: "linkedMultiValueMap"
      methodExercised:
        expression: "addAll(key:configurationPropertyName,values:list2):void5"
    - type: "FIELD"
      name: "aliases"
      modelFingerprint: "3C0412BF9607F710AE725122D8C748D9"
      valueUuid: "linkedMultiValueMap"
      methodExercised:
        expression: "getOrDefault(key:name,defaultValue:list3):object"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2735C41F3FD359DA7E8D3F0016E80A67"
      valueUuid: "object"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyNameAliases"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "name2"
        - name: "aliases"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "aliases"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyNameAliases"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "aliases"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Aliases must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "ConfigurationPropertyName.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName[]"
      uuid: "objectArray"
      collectionUuid: "list"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Aliases must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.MultiValueMap"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "linkedMultiValueMap"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.MultiValueMap"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "linkedMultiValueMap"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      uuid: "list3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      uuid: "object"
      explicitCastNeeded: true
- method:
    name: "getNameForAlias"
    sourceCodeSignature: "ConfigurationPropertyName getNameForAlias(ConfigurationPropertyName\
      \ alias)"
    returnType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    parameters:
    - name: "alias"
      type: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    instructionFingerprint: "55D5A22661979E56ADD590F8BE026CE3"
  paths:
  - pathId: "path1"
    testPathName: "getNameForAliasWhenDefaultBranch"
    constructorSignature: "<init>(java.lang.String,java.lang.String[]) : void"
    modelFingerprint: "24A37E63DC6972D52A623252E490F958"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "5C1EE7505E0D939A043BC8713828B456"
      valueUuid: "target"
    - type: "INPUT"
      name: "alias"
      modelFingerprint: "B124C3DF7DE5EC16E411BFC295598ECD"
      valueUuid: "alias"
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "D72E6315542EE07C003F660CE9458659"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid1):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "C3D68E64CD01F9D6147DBE44EF54D4D0"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "notNull(object:aliases,message:uniqueUuid2):void2"
        staticAccess: true
    - type: "STATIC"
      name: "ConfigurationPropertyName.class"
      modelFingerprint: "0F4479724811191FBB285D88555902CB"
      valueUuid: "ConfigurationPropertyName.class"
      methodExercised:
        expression: "of(name:name):configurationPropertyName"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9953DA1573C69D46F3201FA269E1A390"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:configurationPropertyName,message:uniqueUuid3):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "98A67CD915CF10EDCE320785A7014EC5"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:objectArray,message:uniqueUuid4):void4"
        staticAccess: true
    - type: "FIELD"
      name: "aliases"
      modelFingerprint: "ECD5BFF0D0E0DBE5449FE9AA4042E1B6"
      valueUuid: "linkedMultiValueMap"
      methodExercised:
        expression: "addAll(key:configurationPropertyName,values:list2):void5"
    - type: "FIELD"
      name: "aliases"
      modelFingerprint: "378E7937DD5D41ADFEAC8D0233294E75"
      valueUuid: "linkedMultiValueMap"
      methodExercised:
        expression: "entrySet():set"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "FEDEFED7CC6C18FD7B8B6D2A713792D9"
      valueUuid: "map.EntryKey"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyNameAliases"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "name"
        - name: "aliases"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "aliases"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyNameAliases"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "alias"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "aliases"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Aliases must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "ConfigurationPropertyName.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName[]"
      uuid: "objectArray"
      collectionUuid: "list"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Aliases must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.MultiValueMap"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "linkedMultiValueMap"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.MultiValueMap"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "linkedMultiValueMap"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashSet"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "map.EntryKey"
              explicitCastNeeded: true
            value:
              sapientType: "COLLECTION"
              content: !<collection>
                collectionClass: "java.util.ArrayList"
                parameters: []
                values:
                - sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                  uuid: "alias"
              valueType: "java.util.List"
              uuid: "object"
              explicitCastNeeded: true
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.Object,java.lang.Object"
          uuid: "map.Entry"
          collectionUuid: "set"
      valueType: "java.util.Set"
      genericValueType: "java.util.Map$Entry<java.lang.Object,java.lang.Object>"
      uuid: "set"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "map.EntryKey"
      explicitCastNeeded: true
    branches:
    - lineNumber: 72
      expression: "branch expression (line 72)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "getNameForAliasWhenDefaultBranch2"
    constructorSignature: "<init>(java.lang.String,java.lang.String[]) : void"
    modelFingerprint: "815F5DF628A339F71687753D2DE6F6B4"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "5C1EE7505E0D939A043BC8713828B456"
      valueUuid: "target"
    - type: "INPUT"
      name: "alias"
      modelFingerprint: "B124C3DF7DE5EC16E411BFC295598ECD"
      valueUuid: "alias"
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "D72E6315542EE07C003F660CE9458659"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid1):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "C3D68E64CD01F9D6147DBE44EF54D4D0"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "notNull(object:aliases,message:uniqueUuid2):void2"
        staticAccess: true
    - type: "STATIC"
      name: "ConfigurationPropertyName.class"
      modelFingerprint: "0F4479724811191FBB285D88555902CB"
      valueUuid: "ConfigurationPropertyName.class"
      methodExercised:
        expression: "of(name:name):configurationPropertyName"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9953DA1573C69D46F3201FA269E1A390"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:configurationPropertyName,message:uniqueUuid3):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "98A67CD915CF10EDCE320785A7014EC5"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:objectArray,message:uniqueUuid4):void4"
        staticAccess: true
    - type: "FIELD"
      name: "aliases"
      modelFingerprint: "ECD5BFF0D0E0DBE5449FE9AA4042E1B6"
      valueUuid: "linkedMultiValueMap"
      methodExercised:
        expression: "addAll(key:configurationPropertyName,values:list2):void5"
    - type: "FIELD"
      name: "aliases"
      modelFingerprint: "F374BDDB8046195D6CC4E9380F723978"
      valueUuid: "linkedMultiValueMap"
      methodExercised:
        expression: "entrySet():set"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "F0D12BD287E30B1D76172A1481685831"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyNameAliases"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "name"
        - name: "aliases"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "aliases"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyNameAliases"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "alias"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "aliases"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Aliases must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "ConfigurationPropertyName.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName[]"
      uuid: "objectArray"
      collectionUuid: "list"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Aliases must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.MultiValueMap"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "linkedMultiValueMap"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.MultiValueMap"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "linkedMultiValueMap"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashSet"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "map.EntryKey"
            value:
              sapientType: "COLLECTION"
              content: !<collection>
                parameters: []
                values: []
              valueType: "java.util.List"
              uuid: "object"
              explicitCastNeeded: true
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.Object,java.lang.Object"
          uuid: "map.Entry"
          collectionUuid: "set"
      valueType: "java.util.Set"
      genericValueType: "java.util.Map$Entry<java.lang.Object,java.lang.Object>"
      uuid: "set"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "expectedResult"
      explicitCastNeeded: true
    branches:
    - lineNumber: 72
      expression: "branch expression (line 72)"
      evaluatedAs: false
- method:
    name: "iterator"
    sourceCodeSignature: "Iterator<ConfigurationPropertyName> iterator()"
    returnType: "java.util.Iterator"
    genericReturnType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    instructionFingerprint: "F4A7268D4F6B31E5E0EA64AA46D1EC05"
  paths:
  - pathId: "path1"
    testPathName: "iteratorTest"
    constructorSignature: "<init>(java.lang.String,java.lang.String[]) : void"
    modelFingerprint: "F512C96F799BD74CD84AABCD239AC4B4"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "5C1EE7505E0D939A043BC8713828B456"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "D72E6315542EE07C003F660CE9458659"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid1):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "C3D68E64CD01F9D6147DBE44EF54D4D0"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "notNull(object:aliases,message:uniqueUuid2):void2"
        staticAccess: true
    - type: "STATIC"
      name: "ConfigurationPropertyName.class"
      modelFingerprint: "0F4479724811191FBB285D88555902CB"
      valueUuid: "ConfigurationPropertyName.class"
      methodExercised:
        expression: "of(name:name):configurationPropertyName"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9953DA1573C69D46F3201FA269E1A390"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:configurationPropertyName,message:uniqueUuid3):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "98A67CD915CF10EDCE320785A7014EC5"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:objectArray,message:uniqueUuid4):void4"
        staticAccess: true
    - type: "FIELD"
      name: "aliases"
      modelFingerprint: "ECD5BFF0D0E0DBE5449FE9AA4042E1B6"
      valueUuid: "linkedMultiValueMap"
      methodExercised:
        expression: "addAll(key:configurationPropertyName,values:list2):void5"
    - type: "FIELD"
      name: "aliases"
      modelFingerprint: "76BB72BE200D2E837395C5A743781ED2"
      valueUuid: "linkedMultiValueMap"
      methodExercised:
        expression: "keySet():set"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3991A3A85B37223957028DC27A05A451"
      valueUuid: "iteratorNotNull"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyNameAliases"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "name"
        - name: "aliases"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "aliases"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyNameAliases"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "aliases"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Aliases must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "ConfigurationPropertyName.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName[]"
      uuid: "objectArray"
      collectionUuid: "list"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Aliases must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.MultiValueMap"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "linkedMultiValueMap"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.MultiValueMap"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "linkedMultiValueMap"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      uuid: "set"
    - sapientType: "NOT_NULL"
      valueType: "java.util.Iterator"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "iteratorNotNull"
      fixed: true
      collectionUuid: "set"
