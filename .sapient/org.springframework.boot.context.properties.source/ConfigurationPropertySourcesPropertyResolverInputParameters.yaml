---
modelFingerprint: "05E231F40374A1328933894C30929482"
methods:
- method:
    name: "containsProperty"
    returnType: "boolean"
    signature: "containsProperty(java.lang.String) : boolean"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "6D98DBEA1335BCBFB2BE4FCA953260E4"
    parametersTypes:
    - "java.lang.String"
  paths:
  - pathId: "path6"
    pathIdForUser: "path1"
    testPathName: "containsPropertyWhenThisDefaultResolverNotContainsPropertyKey"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "1A257C549AC52870570AFE4D92415EC7"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "e3973812-d04c-3348-971a-c748be410432"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "defaultResolver"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path7"
    pathIdForUser: "path2"
    testPathName: "containsPropertyWhenAttachedIsNullAndThisDefaultResolverNotContainsPropertyKey"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "3665B0AF5961CD74E7152196525F5337"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "9F1FD6D8072931A40FC242BE5BAEA32D"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "F63A57333D96D68BCE798F5575203736"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "example_key"
        suggestedContent: !<regular>
          value: "example_key"
        valueType: "java.lang.String"
        uuid: "containsProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "BFDF200709CBCAABE18C750A8E39EE1C"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "NULL"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "BF78B02BB4C1574547814AB3B749260E"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.defaultResolver"
        name: "containsProperty"
        parameters:
        - name: "propertySource"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "example_key"
            suggestedContent: !<regular>
              value: "example_key"
            valueType: "java.lang.String"
            uuid: "containsProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "containsProperty(String): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          valueType: "boolean"
          uuid: "containsProperty_boolean1"
          fixed: true
          equalsMethodPresent: true
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3A21543F56248AC92654D6E439128AED"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: false
        valueType: "boolean"
        uuid: "containsProperty_boolean1"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "3330932b-5c8c-39b9-a6c0-b88cb5f4ebae"
    deleted: false
    disabled: false
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "defaultResolver"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path5"
    pathIdForUser: "path3"
    testPathName: "containsPropertyWhenSpringSourceNotIsUsingSourcesThisPropertySourcesAndAttachedIsNullAndThisDefaultResolverNotContainsP"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "0E42855394B37565C8A057AEEA288091"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "e560b0f2-d2a3-333e-91d1-ecb3dfe514b4"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "defaultResolver"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path1"
    pathIdForUser: "path4"
    testPathName: "containsPropertyWhenAttachedFindConfigurationPropertyNameIsNotNull"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "6D03A018A8B0F2E08D64FD76FEA12F85"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "containsProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "containsProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "containsProperty_configurationPropertyName1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "550F01464922440C2833A20D02293E6E"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 1
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "configurationProperty"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "containsProperty_configurationPropertyName1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "containsProperty_configurationProperty1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "753659628F1B3F179A2EF0629F555437"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: true
        valueType: "boolean"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "c0e9bb19-8da4-3906-bbef-9c8c866ea231"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path2"
    pathIdForUser: "path5"
    testPathName: "containsPropertyWhenAttachedFindConfigurationPropertyNameIsNull"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "6B74A8BD56E67AA2EE15DC03763FA8C6"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "containsProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "containsProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "containsProperty_configurationPropertyName1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "8E406A6028AD840881AFC313D5BD36CD"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 1
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "configurationProperty"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "containsProperty_configurationPropertyName1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValue:
          sapientType: "NULL"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "containsProperty_configurationProperty1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3A21543F56248AC92654D6E439128AED"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: false
        valueType: "boolean"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "5d86fb9f-75bd-3848-9b65-f3a24d29b0d0"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path3"
    pathIdForUser: "path6"
    testPathName: "containsPropertyWhenThisDefaultResolverContainsPropertyKey"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "29F84C3F95E57B4154E24826B87785B7"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "containsProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "EC3E7B65C53A9FA458FD333C8632BBA3"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "containsProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "NULL"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "containsProperty_configurationPropertyName1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "BAFAB6A7360B37818493642B7948289E"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.defaultResolver"
        name: "containsProperty"
        parameters:
        - name: "propertySource"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "containsProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "containsProperty(String): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          valueType: "boolean"
          uuid: "containsProperty_boolean1"
          fixed: true
          equalsMethodPresent: true
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "753659628F1B3F179A2EF0629F555437"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: true
        valueType: "boolean"
        uuid: "containsProperty_boolean1"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "c519a802-bafd-336d-abd2-40264828dd8d"
    deleted: false
    disabled: false
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "defaultResolver"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path4"
    pathIdForUser: "path7"
    testPathName: "containsPropertyWhenNameIsNullAndThisDefaultResolverNotContainsPropertyKey"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "65E7F787381FFF455832D44CFFE2A32F"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "73120fef-9f43-3b35-96c8-da1d1e63e112"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "defaultResolver"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path8"
    pathIdForUser: "path8"
    testPathName: "containsPropertyWhenCaughtExceptionAndThisDefaultResolverContainsPropertyKey"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "C195B084014562A41534C14C544D7C8B"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "9F1FD6D8072931A40FC242BE5BAEA32D"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "70C2DFBA19C87FA107AD934EEE089843"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "<String>"
        suggestedContent: !<regular>
          value: "<String>"
        valueType: "java.lang.String"
        uuid: "containsProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "AE218CB33D7B12E7806EB9CB7DA7BE17"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "4A5098EEAFB39F3A1263B799E19E1747"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "D2E3B88A6CD8FBA92688E97FF40C80E7"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "C99870070590518CB429CABDD2BCEC87"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.defaultResolver"
        name: "containsProperty"
        parameters:
        - name: "propertySource"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "<String>"
            suggestedContent: !<regular>
              value: "<String>"
            valueType: "java.lang.String"
            uuid: "containsProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "containsProperty(String): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          valueType: "boolean"
          uuid: "containsProperty_boolean1"
          fixed: true
          equalsMethodPresent: true
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "753659628F1B3F179A2EF0629F555437"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: true
        valueType: "boolean"
        uuid: "containsProperty_boolean1"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "abf2f751-2d8d-328b-b876-1d028f927b94"
    deleted: false
    disabled: false
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "defaultResolver"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path9"
    pathIdForUser: "path9"
    testPathName: "containsPropertyWhenCaughtExceptionAndThisDefaultResolverNotContainsPropertyKey"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "C195B084014562A41534C14C544D7C8B"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "9F1FD6D8072931A40FC242BE5BAEA32D"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "70C2DFBA19C87FA107AD934EEE089843"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "<String>"
        suggestedContent: !<regular>
          value: "<String>"
        valueType: "java.lang.String"
        uuid: "containsProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "AE218CB33D7B12E7806EB9CB7DA7BE17"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "4A5098EEAFB39F3A1263B799E19E1747"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "D2E3B88A6CD8FBA92688E97FF40C80E7"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "C99870070590518CB429CABDD2BCEC87"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.defaultResolver"
        name: "containsProperty"
        parameters:
        - name: "propertySource"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "<String>"
            suggestedContent: !<regular>
              value: "<String>"
            valueType: "java.lang.String"
            uuid: "containsProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "containsProperty(String): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          valueType: "boolean"
          uuid: "containsProperty_boolean1"
          fixed: true
          equalsMethodPresent: true
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "753659628F1B3F179A2EF0629F555437"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: true
        valueType: "boolean"
        uuid: "containsProperty_boolean1"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "73c17d9a-4743-3423-a4c5-31860de55d0d"
    deleted: false
    disabled: false
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "defaultResolver"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "getProperty"
    returnType: "java.lang.String"
    signature: "getProperty(java.lang.String) : java.lang.String"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "5390A2F13C4EE9CBF8244F733C09041A"
    parametersTypes:
    - "java.lang.String"
  paths:
  - pathId: "path9"
    pathIdForUser: "path1"
    testPathName: "getPropertyWhenValueNotInstanceOfString"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "946BDFBD823C32143D887E997ED9C645"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "eed95331-3cf3-3d8e-bb82-f774f7d5f4ae"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path10"
    pathIdForUser: "path2"
    testPathName: "getPropertyWhenResolveNestedPlaceholdersAndValueNotInstanceOfString"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "164F39074976856CAA40FF0D5763C563"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "getProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "F8BBE02E8C3C2D24101ADC5CF4687CD9"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "NULL"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "4FDE6615A190A20C2B0B5FEA2868F669"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "targetValueType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolveNestedPlaceholders"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getProperty(String,Class,boolean): Object"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "FDA819B76477372752D7C803680FE592"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.ClassUtils"
        uuid: "org.springframework.util.ClassUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isAssignableValue(Class,Object): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "convertValueIfNecessary_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "DefaultConversionService"
      modelFingerprint: "3275AD9651EBD15FDFE750E757F3F025"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.core.convert.support.DefaultConversionService"
        uuid: "org.springframework.core.convert.support.DefaultConversionService"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.core.convert.support.DefaultConversionService"
        name: "getSharedInstance"
        parameters: []
        signature: "getSharedInstance(): ConversionService"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.core.convert.ConversionService"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "convertValueIfNecessary_conversionService1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "conversionServiceToUse"
      modelFingerprint: "802D93717AAB85B52CA7FFB301718397"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.core.convert.ConversionService"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.core.convert.ConversionService"
        uuid: "convertValueIfNecessary_conversionService1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "conversionServiceToUse"
        name: "convert"
        parameters:
        - name: "arg0"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "arg1"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "convert(Object,Class): Object"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: "return_of_convert1"
          valueType: "java.lang.String"
          uuid: "convertValueIfNecessary_object1"
          fixed: false
          equalsMethodPresent: true
          explicitCastNeeded: true
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "return_of_convert1"
        valueType: "java.lang.String"
        uuid: "convertValueIfNecessary_object1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: true
      staticReadMethodForField: false
      filledByUser: false
    uuid: "dc9fbe4a-8d57-3691-ae58-7bae70fbc30d"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path1"
    pathIdForUser: "path3"
    testPathName: "getPropertyWhenValueIsNull"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "925DE2D9F76B4BF11D5512D8818B2AAC"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "d6236397-4e1a-36e6-ac2d-794b7507b136"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path6"
    pathIdForUser: "path4"
    testPathName: "getPropertyWhenConfigurationPropertyIsNullAndValueIsNull"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "584725F80BE85E3A249AF2D6AC443DC7"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "118D8B3E0A4DB554818B6B590CC6B8D8"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "79EA2B023DCC5B9BA37FDDA7E3289664"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "testKey"
        suggestedContent: !<regular>
          value: "testKey"
        valueType: "java.lang.String"
        uuid: "getProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "A7774BDCC4DE207EC3F70BEBE9C8F6FA"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "4A5098EEAFB39F3A1263B799E19E1747"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "486DC2BBC3CD892D3FD1E12319507B56"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "E373BB98D64CE1A1EB6CB1A7425B5F13"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "testKey"
            suggestedContent: !<regular>
              value: "testKey"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "findPropertyValue_configurationPropertyName1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "A9BE7AE290D4ED442B904EA4D84AAACB"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "configurationProperty"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationPropertyName1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValue:
          sapientType: "NULL"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "findPropertyValue_configurationProperty1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8EDA3F2AE365AC99A4FDAA03D44C0B66"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "NULL"
        valueType: "java.lang.String"
        uuid: "getProperty_object1"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: true
      staticReadMethodForField: false
      filledByUser: false
    uuid: "97ce597c-91ee-34da-bc91-30b57e73d393"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path8"
    pathIdForUser: "path5"
    testPathName: "getPropertyWhenValueIsNotNullAndResolveNestedPlaceholdersAndValueNotInstanceOfString"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "638924B5CFDE7270721ACC94C7F2FA41"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "84ecefbc-817e-39f1-acfc-76e69cdf57d9"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path11"
    pathIdForUser: "path6"
    testPathName: "getPropertyWhenCaughtExceptionAndValueIsNull"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "EDD1E935E9A6805339CC8ACB9C278CFA"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 4
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "9F1FD6D8072931A40FC242BE5BAEA32D"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "70C2DFBA19C87FA107AD934EEE089843"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "<String>"
        suggestedContent: !<regular>
          value: "<String>"
        valueType: "java.lang.String"
        uuid: "getProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "AE218CB33D7B12E7806EB9CB7DA7BE17"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "4A5098EEAFB39F3A1263B799E19E1747"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "D2E3B88A6CD8FBA92688E97FF40C80E7"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "4E3BB5FD87F8C3453B2049BA026E119D"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "<String>"
            suggestedContent: !<regular>
              value: "<String>"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "targetValueType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolveNestedPlaceholders"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getProperty(String,Class,boolean): Object"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.String"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: true
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "0104802FDCEA5B06FEF48DC06EB498E5"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.ClassUtils"
        uuid: "org.springframework.util.ClassUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.String"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: true
        signature: "isAssignableValue(Class,String): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "convertValueIfNecessary_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3142F7F6A5176235630B0861A5AD9E0"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "java.lang.Object"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.Object"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.String"
        uuid: "findPropertyValue_object1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: true
      staticReadMethodForField: false
      filledByUser: false
    uuid: "fef8509b-1159-33de-baa3-53aa2b22b647"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path7"
    pathIdForUser: "path7"
    testPathName: "getPropertyWhenNameIsNullAndValueIsNotNullAndResolveNestedPlaceholdersAndValueNotInstanceOfString"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "11CA893A0407E2E9332191C46153F37C"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "c753add7-ebf7-38fa-ae6c-f011cb71cf4a"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path4"
    pathIdForUser: "path8"
    testPathName: "getPropertyWhenValueInstanceOfString"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "C6ADF6D2A6FBA1E409290E80B3B294EA"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "getProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "findPropertyValue_configurationPropertyName1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "1DFE62E4C87144816BEC9C5663CD1BF5"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "configurationProperty"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationPropertyName1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "A"
                suggestedContent: !<regular>
                  value: "A"
                valueType: "java.lang.String"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "BASIC"
                suggestedContent: !<regular>
                  value: "A"
                valueType: "java.lang.String"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "findPropertyValue_configurationProperty1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "F49EAD8F10BC8F35A6BD3D5DD1577E5C"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "A"
              suggestedContent: !<regular>
                value: "A"
              valueType: "java.lang.String"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: "A"
              valueType: "java.lang.String"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        uuid: "findPropertyValue_configurationProperty1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: "A"
          suggestedContent: !<regular>
            value: "A"
          valueType: "java.lang.String"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "474E81A0A863FCA8651F3C92C7DF10C7"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "resolveRequiredPlaceholders"
        parameters:
        - name: "text"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            suggestedContent: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
        signature: "resolveRequiredPlaceholders(String): String throws java.lang.IllegalArgumentException"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: "return_of_resolveRequiredPlaceholders1"
          valueType: "java.lang.String"
          uuid: "resolveNestedPlaceholders_string1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "F552B8B224C902BE0B365093AE464DC9"
      index: 10
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.ClassUtils"
        uuid: "org.springframework.util.ClassUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_resolveRequiredPlaceholders1"
            valueType: "java.lang.String"
            uuid: "resolveNestedPlaceholders_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isAssignableValue(Class,String): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "convertValueIfNecessary_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "DefaultConversionService"
      modelFingerprint: "3275AD9651EBD15FDFE750E757F3F025"
      index: 11
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.core.convert.support.DefaultConversionService"
        uuid: "org.springframework.core.convert.support.DefaultConversionService"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.core.convert.support.DefaultConversionService"
        name: "getSharedInstance"
        parameters: []
        signature: "getSharedInstance(): ConversionService"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.core.convert.ConversionService"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "convertValueIfNecessary_conversionService1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "conversionServiceToUse"
      modelFingerprint: "19ABE58EBDAD11EFBFB160CB1C9A5251"
      index: 12
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.core.convert.ConversionService"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.core.convert.ConversionService"
        uuid: "convertValueIfNecessary_conversionService1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "conversionServiceToUse"
        name: "convert"
        parameters:
        - name: "arg0"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_resolveRequiredPlaceholders1"
            valueType: "java.lang.String"
            uuid: "resolveNestedPlaceholders_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "arg1"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "convert(String,Class): Object"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: "return_of_convert1"
          valueType: "java.lang.String"
          uuid: "convertValueIfNecessary_object1"
          fixed: false
          equalsMethodPresent: true
          explicitCastNeeded: true
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 13
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "return_of_convert1"
        valueType: "java.lang.String"
        uuid: "convertValueIfNecessary_object1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: true
      staticReadMethodForField: false
      filledByUser: false
    uuid: "7ac2ea26-3a82-3f8b-9802-1c527554ec2d"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path2"
    pathIdForUser: "path9"
    testPathName: "getPropertyWhenResolveNestedPlaceholdersAndValueInstanceOfString"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "900F8E74AEE8F421AC800D953CD41389"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "getProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "findPropertyValue_configurationPropertyName1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "10E497047B78CECC1A70DA049A50864F"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "configurationProperty"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationPropertyName1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: ""
                suggestedContent: !<regular>
                  value: ""
                valueType: "java.lang.String"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: true
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "BASIC"
                suggestedContent: !<regular>
                  value: ""
                valueType: "java.lang.String"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: true
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "findPropertyValue_configurationProperty1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "7C568A072D65BA8DDCFDF25E430E2D74"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: ""
              suggestedContent: !<regular>
                value: ""
              valueType: "java.lang.String"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: true
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: ""
              valueType: "java.lang.String"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: true
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        uuid: "findPropertyValue_configurationProperty1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: ""
          suggestedContent: !<regular>
            value: ""
          valueType: "java.lang.String"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: true
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "1E73209821A833D8019F970A1FCBCDC4"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.ClassUtils"
        uuid: "org.springframework.util.ClassUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            suggestedContent: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isAssignableValue(Class,String): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "convertValueIfNecessary_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 10
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: ""
        suggestedContent: !<regular>
          value: ""
        valueType: "java.lang.String"
        uuid: "findPropertyValue_object1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "06cfd8ef-1ec6-33fa-954d-f1efeb038665"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path3"
    pathIdForUser: "path10"
    testPathName: "getPropertyWhenValueIsNotNullAndResolveNestedPlaceholdersAndValueInstanceOfString"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "4AA9B2BE82DE7F07BBA6493E4FEFA4F0"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "20eae185-a80e-301f-9fc4-a7ca5e9fc596"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path5"
    pathIdForUser: "path11"
    testPathName: "getPropertyWhenConfigurationPropertyIsNotNullAndValueIsNotNullAndResolveNestedPlaceholdersAndValueNotInstanceOfString"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "9600B26116B6914AA185A2C98637E6DC"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "88327613-4690-302d-a67c-16f55cbddd1b"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path13"
    pathIdForUser: "path12"
    testPathName: "getPropertyWhenCaughtExceptionAndValueIsNotNullAndResolveNestedPlaceholdersAndValueInstanceOfString"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "7611F7A00EED797A9E0FB05D320E3004"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 4
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "9F1FD6D8072931A40FC242BE5BAEA32D"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "70C2DFBA19C87FA107AD934EEE089843"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "<String>"
        suggestedContent: !<regular>
          value: "<String>"
        valueType: "java.lang.String"
        uuid: "getProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "AE218CB33D7B12E7806EB9CB7DA7BE17"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "4A5098EEAFB39F3A1263B799E19E1747"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "D2E3B88A6CD8FBA92688E97FF40C80E7"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "ACB4EB3764D61BAC557276E9E2F6D2C1"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "<String>"
            suggestedContent: !<regular>
              value: "<String>"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "targetValueType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolveNestedPlaceholders"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getProperty(String,Class,boolean): Object"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "0161D63160E7C157115354A8163CFB69"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.ClassUtils"
        uuid: "org.springframework.util.ClassUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isAssignableValue(Class,Object): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "convertValueIfNecessary_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "DefaultConversionService"
      modelFingerprint: "50764345630ECA806DAC64673F46C14F"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.core.convert.support.DefaultConversionService"
        uuid: "org.springframework.core.convert.support.DefaultConversionService"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.core.convert.support.DefaultConversionService"
        name: "getSharedInstance"
        parameters: []
        signature: "getSharedInstance(): ConversionService"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.core.convert.ConversionService"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "convertValueIfNecessary_conversionService1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "conversionServiceToUse"
      modelFingerprint: "DB519E284A13A8B773CB994D1D3CAE12"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.core.convert.ConversionService"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.core.convert.ConversionService"
        uuid: "convertValueIfNecessary_conversionService1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "conversionServiceToUse"
        name: "convert"
        parameters:
        - name: "arg0"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "arg1"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "convert(Object,Class): Object"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: "return_of_convert1"
          valueType: "java.lang.String"
          uuid: "convertValueIfNecessary_object1"
          fixed: false
          equalsMethodPresent: true
          explicitCastNeeded: true
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "22D37754E63B33AD8E28239DAFAEC722"
      index: 10
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "return_of_convert1"
        valueType: "java.lang.String"
        uuid: "convertValueIfNecessary_object1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: true
      staticReadMethodForField: false
      filledByUser: false
    uuid: "e158282f-b41d-3367-94af-49d38b7ba1ea"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path12"
    pathIdForUser: "path13"
    testPathName: "getPropertyWhenConfigurationPropertyIsNotNullAndCaughtExceptionAndValueIsNotNullAndResolveNestedPlaceholdersAndValueIns"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "DD511178B14247CB62F108CF037EDDCA"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 4
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "9F1FD6D8072931A40FC242BE5BAEA32D"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "70C2DFBA19C87FA107AD934EEE089843"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "<String>"
        suggestedContent: !<regular>
          value: "<String>"
        valueType: "java.lang.String"
        uuid: "getProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "AE218CB33D7B12E7806EB9CB7DA7BE17"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "4A5098EEAFB39F3A1263B799E19E1747"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "D2E3B88A6CD8FBA92688E97FF40C80E7"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "ACB4EB3764D61BAC557276E9E2F6D2C1"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "<String>"
            suggestedContent: !<regular>
              value: "<String>"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "targetValueType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolveNestedPlaceholders"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getProperty(String,Class,boolean): Object"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "0161D63160E7C157115354A8163CFB69"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.ClassUtils"
        uuid: "org.springframework.util.ClassUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isAssignableValue(Class,Object): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "convertValueIfNecessary_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "DefaultConversionService"
      modelFingerprint: "3275AD9651EBD15FDFE750E757F3F025"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.core.convert.support.DefaultConversionService"
        uuid: "org.springframework.core.convert.support.DefaultConversionService"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.core.convert.support.DefaultConversionService"
        name: "getSharedInstance"
        parameters: []
        signature: "getSharedInstance(): ConversionService"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.core.convert.ConversionService"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "convertValueIfNecessary_conversionService1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "conversionServiceToUse"
      modelFingerprint: "8B67DEFCD53FC2537DD3B8EB1D3EF2B6"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.core.convert.ConversionService"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.core.convert.ConversionService"
        uuid: "convertValueIfNecessary_conversionService1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "conversionServiceToUse"
        name: "convert"
        parameters:
        - name: "arg0"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "arg1"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "convert(Object,Class): Object"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: "return_of_convert1"
          valueType: "java.lang.String"
          uuid: "convertValueIfNecessary_object1"
          fixed: false
          equalsMethodPresent: true
          explicitCastNeeded: true
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 10
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "return_of_convert1"
        valueType: "java.lang.String"
        uuid: "convertValueIfNecessary_object1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: true
      staticReadMethodForField: false
      filledByUser: false
    uuid: "6cf580f6-244b-31c9-a85d-34146976b29d"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "getProperty"
    returnType: "java.lang.Object"
    signature: "getProperty(java.lang.String,java.lang.Class<java.lang.Object>) :\
      \ java.lang.Object"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "CB7BCB03CAACC541866A076743DCCB4B"
    parametersTypes:
    - "java.lang.String"
    - "java.lang.Class"
  paths:
  - pathId: "path10"
    pathIdForUser: "path1"
    testPathName: "getProperty3WhenValueNotInstanceOfString"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "067C859AACD44B8E7808FB48EE46E027"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "9b903dd4-d395-399a-bee2-31eb782c2b55"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path11"
    pathIdForUser: "path2"
    testPathName: "getProperty3WhenResolveNestedPlaceholdersAndValueNotInstanceOfString"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "7B8F1E7119A957D591554BD8C0A33866"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "getProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "targetValueType"
      modelFingerprint: "B1F38FCDE1091BB1509E59E765A25F3F"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "CLASS"
        content: !<regular>
          value: "java.lang.Object"
        valueType: "java.lang.Class"
        genericValueType: "java.lang.Object"
        uuid: "getProperty_class1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "F8BBE02E8C3C2D24101ADC5CF4687CD9"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "NULL"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "4FDE6615A190A20C2B0B5FEA2868F669"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "targetValueType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolveNestedPlaceholders"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getProperty(String,Class,boolean): Object"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "8A72DB73BD244704CE5F9833D01CF901"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.ClassUtils"
        uuid: "org.springframework.util.ClassUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            uuid: "getProperty_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isAssignableValue(Class,Object): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "convertValueIfNecessary_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "DefaultConversionService"
      modelFingerprint: "3275AD9651EBD15FDFE750E757F3F025"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.core.convert.support.DefaultConversionService"
        uuid: "org.springframework.core.convert.support.DefaultConversionService"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.core.convert.support.DefaultConversionService"
        name: "getSharedInstance"
        parameters: []
        signature: "getSharedInstance(): ConversionService"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.core.convert.ConversionService"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "convertValueIfNecessary_conversionService1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "conversionServiceToUse"
      modelFingerprint: "8ABCA1997F80603D2604DEF378C32B22"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.core.convert.ConversionService"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.core.convert.ConversionService"
        uuid: "convertValueIfNecessary_conversionService1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "conversionServiceToUse"
        name: "convert"
        parameters:
        - name: "arg0"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "arg1"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            uuid: "getProperty_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "convert(Object,Class): Object"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "convertValueIfNecessary_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7C973EAEEC332BFEC09E51528D07A6CE"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "java.lang.Object"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.Object"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.Object"
        uuid: "convertValueIfNecessary_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "0e3d4019-4e90-37a0-b32d-8bb73f4ba120"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path1"
    pathIdForUser: "path3"
    testPathName: "getProperty3WhenValueIsNull"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "BE178071A51765D294855EEC278B93E0"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "128c6277-cbe0-3004-a881-91c6cd2caa00"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path7"
    pathIdForUser: "path4"
    testPathName: "getProperty3WhenConfigurationPropertyIsNullAndValueIsNull"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "8DD0211B927E5C26477E87C71B2D4C67"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "getProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "targetValueType"
      modelFingerprint: "B1F38FCDE1091BB1509E59E765A25F3F"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "CLASS"
        content: !<regular>
          value: "java.lang.Object"
        valueType: "java.lang.Class"
        genericValueType: "java.lang.Object"
        uuid: "getProperty_class1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "findPropertyValue_configurationPropertyName1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "8E406A6028AD840881AFC313D5BD36CD"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "configurationProperty"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationPropertyName1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValue:
          sapientType: "NULL"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "findPropertyValue_configurationProperty1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7FF3E62C4C26664215CB4A88EF6B4C11"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "NULL"
        valueType: "java.lang.Object"
        uuid: "getProperty_object1"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "b983baf7-66fa-34cb-8458-6a130f93c4ea"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path9"
    pathIdForUser: "path5"
    testPathName: "getProperty3WhenValueIsNotNullAndResolveNestedPlaceholdersAndValueNotInstanceOfString"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "7A854E37B1A93F2EBB22670A31C88E68"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "69fc8f43-3c7c-378d-a3a0-e8c71225d661"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path12"
    pathIdForUser: "path6"
    testPathName: "getProperty3WhenCaughtExceptionAndValueIsNull"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "7EA9477E5EAA92531217111FCA1D4F4B"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 4
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "9F1FD6D8072931A40FC242BE5BAEA32D"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "70C2DFBA19C87FA107AD934EEE089843"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "<String>"
        suggestedContent: !<regular>
          value: "<String>"
        valueType: "java.lang.String"
        uuid: "getProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "targetValueType"
      modelFingerprint: "4BE5268FF8769F8EC1785171F7A99B18"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "NULL"
        valueType: "java.lang.Class"
        genericValueType: "java.lang.Object"
        uuid: "getProperty_class1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "AE218CB33D7B12E7806EB9CB7DA7BE17"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "4A5098EEAFB39F3A1263B799E19E1747"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "D2E3B88A6CD8FBA92688E97FF40C80E7"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "ACB4EB3764D61BAC557276E9E2F6D2C1"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "<String>"
            suggestedContent: !<regular>
              value: "<String>"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "targetValueType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolveNestedPlaceholders"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getProperty(String,Class,boolean): Object"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "EDA2651BB29D8448EA5A2C6E4F135F6E"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "java.lang.Object"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.Object"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.Object"
        uuid: "findPropertyValue_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "ddfae7d5-b8dd-383e-80db-fe19b964c210"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path8"
    pathIdForUser: "path7"
    testPathName: "getProperty3WhenNameIsNullAndValueIsNotNullAndResolveNestedPlaceholdersAndValueNotInstanceOfString"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "BE51FEAAF57C324B5BBF51742E3555B1"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "a1633900-7ebc-398a-8baf-0d31a8aafca2"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path5"
    pathIdForUser: "path8"
    testPathName: "getProperty3WhenValueInstanceOfString"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "CC006B2B3D788E51BF88547FCD980FC3"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "getProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "targetValueType"
      modelFingerprint: "B1F38FCDE1091BB1509E59E765A25F3F"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "CLASS"
        content: !<regular>
          value: "java.lang.Object"
        valueType: "java.lang.Class"
        genericValueType: "java.lang.Object"
        uuid: "getProperty_class1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "findPropertyValue_configurationPropertyName1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "1DFE62E4C87144816BEC9C5663CD1BF5"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "configurationProperty"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationPropertyName1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "A"
                suggestedContent: !<regular>
                  value: "A"
                valueType: "java.lang.String"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "BASIC"
                suggestedContent: !<regular>
                  value: "A"
                valueType: "java.lang.String"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "findPropertyValue_configurationProperty1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "F49EAD8F10BC8F35A6BD3D5DD1577E5C"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "A"
              suggestedContent: !<regular>
                value: "A"
              valueType: "java.lang.String"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: "A"
              valueType: "java.lang.String"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        uuid: "findPropertyValue_configurationProperty1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: "A"
          suggestedContent: !<regular>
            value: "A"
          valueType: "java.lang.String"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "474E81A0A863FCA8651F3C92C7DF10C7"
      index: 10
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "resolveRequiredPlaceholders"
        parameters:
        - name: "text"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            suggestedContent: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
        signature: "resolveRequiredPlaceholders(String): String throws java.lang.IllegalArgumentException"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: "return_of_resolveRequiredPlaceholders1"
          valueType: "java.lang.String"
          uuid: "resolveNestedPlaceholders_string1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "1468918BDA9B353F2664B339C15817B0"
      index: 11
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.ClassUtils"
        uuid: "org.springframework.util.ClassUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            uuid: "getProperty_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_resolveRequiredPlaceholders1"
            valueType: "java.lang.String"
            uuid: "resolveNestedPlaceholders_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isAssignableValue(Class,String): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "convertValueIfNecessary_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "DefaultConversionService"
      modelFingerprint: "3275AD9651EBD15FDFE750E757F3F025"
      index: 12
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.core.convert.support.DefaultConversionService"
        uuid: "org.springframework.core.convert.support.DefaultConversionService"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.core.convert.support.DefaultConversionService"
        name: "getSharedInstance"
        parameters: []
        signature: "getSharedInstance(): ConversionService"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.core.convert.ConversionService"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "convertValueIfNecessary_conversionService1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "conversionServiceToUse"
      modelFingerprint: "6C81C5637A1AA152A1168E36F0C3A141"
      index: 13
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.core.convert.ConversionService"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.core.convert.ConversionService"
        uuid: "convertValueIfNecessary_conversionService1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "conversionServiceToUse"
        name: "convert"
        parameters:
        - name: "arg0"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_resolveRequiredPlaceholders1"
            valueType: "java.lang.String"
            uuid: "resolveNestedPlaceholders_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "arg1"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            uuid: "getProperty_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "convert(String,Class): Object"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "convertValueIfNecessary_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7C973EAEEC332BFEC09E51528D07A6CE"
      index: 14
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "java.lang.Object"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.Object"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.Object"
        uuid: "convertValueIfNecessary_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "0106ccab-fbad-3458-85c9-aba9a897ea6d"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path2"
    pathIdForUser: "path9"
    testPathName: "getProperty3WhenResolveNestedPlaceholdersAndValueInstanceOfString"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "F39A45AEBCC55B033DC1C4E1EEF96743"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "getProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "targetValueType"
      modelFingerprint: "4BE5268FF8769F8EC1785171F7A99B18"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "NULL"
        valueType: "java.lang.Class"
        genericValueType: "java.lang.Object"
        uuid: "getProperty_class1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "findPropertyValue_configurationPropertyName1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "10E497047B78CECC1A70DA049A50864F"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "configurationProperty"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationPropertyName1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: ""
                suggestedContent: !<regular>
                  value: ""
                valueType: "java.lang.String"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: true
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "BASIC"
                suggestedContent: !<regular>
                  value: ""
                valueType: "java.lang.String"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: true
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "findPropertyValue_configurationProperty1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "7C568A072D65BA8DDCFDF25E430E2D74"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: ""
              suggestedContent: !<regular>
                value: ""
              valueType: "java.lang.String"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: true
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: ""
              valueType: "java.lang.String"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: true
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        uuid: "findPropertyValue_configurationProperty1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: ""
          suggestedContent: !<regular>
            value: ""
          valueType: "java.lang.String"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: true
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 10
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: ""
        suggestedContent: !<regular>
          value: ""
        valueType: "java.lang.String"
        uuid: "findPropertyValue_object1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "4be18f0e-fc19-36f7-bd30-a24284232024"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path4"
    pathIdForUser: "path10"
    testPathName: "getProperty3WhenValueIsNotNullAndResolveNestedPlaceholdersAndValueInstanceOfString"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "6349297187119C9E95D93489E19C54EF"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "c174a089-698b-3311-98bf-1631d8b7b176"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path3"
    pathIdForUser: "path11"
    testPathName: "getProperty3WhenConfigurationPropertyIsNotNullAndValueIsNotNullAndResolveNestedPlaceholdersAndValueInstanceOfString"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "81BBFF41F32D9D27E1BFBD4B8771643F"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "getProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "targetValueType"
      modelFingerprint: "B1F38FCDE1091BB1509E59E765A25F3F"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "CLASS"
        content: !<regular>
          value: "java.lang.Object"
        valueType: "java.lang.Class"
        genericValueType: "java.lang.Object"
        uuid: "getProperty_class1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "findPropertyValue_configurationPropertyName1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "10E497047B78CECC1A70DA049A50864F"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "configurationProperty"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationPropertyName1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: ""
                suggestedContent: !<regular>
                  value: ""
                valueType: "java.lang.String"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: true
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "BASIC"
                suggestedContent: !<regular>
                  value: ""
                valueType: "java.lang.String"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: true
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "findPropertyValue_configurationProperty1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "7C568A072D65BA8DDCFDF25E430E2D74"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: ""
              suggestedContent: !<regular>
                value: ""
              valueType: "java.lang.String"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: true
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: ""
              valueType: "java.lang.String"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: true
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        uuid: "findPropertyValue_configurationProperty1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: ""
          suggestedContent: !<regular>
            value: ""
          valueType: "java.lang.String"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: true
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "E52AF07887088A0175EE9520D625F721"
      index: 10
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.ClassUtils"
        uuid: "org.springframework.util.ClassUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            uuid: "getProperty_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            suggestedContent: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isAssignableValue(Class,String): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "convertValueIfNecessary_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 11
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: ""
        suggestedContent: !<regular>
          value: ""
        valueType: "java.lang.String"
        uuid: "findPropertyValue_object1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "04a859b7-4ac2-370b-adbd-713d08e1fe8b"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path6"
    pathIdForUser: "path12"
    testPathName: "getProperty3WhenConfigurationPropertyIsNotNullAndValueIsNotNullAndResolveNestedPlaceholdersAndValueNotInstanceOfString"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "E851D64312F92A0D52A1F8BB42F7CA2A"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "8c764453-be1c-336e-82c7-9c014864928c"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path15"
    pathIdForUser: "path13"
    testPathName: "getProperty3WhenCaughtExceptionAndValueIsNotNullAndResolveNestedPlaceholdersAndValueInstanceOfString"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "ECFEF991FBC5ECA33895F5AD85BBA540"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 4
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "9F1FD6D8072931A40FC242BE5BAEA32D"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "7A9D0147D321A684D65C31B1329516FA"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "exampleKey"
        suggestedContent: !<regular>
          value: "exampleKey"
        valueType: "java.lang.String"
        uuid: "getProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "targetValueType"
      modelFingerprint: "B1F38FCDE1091BB1509E59E765A25F3F"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "CLASS"
        content: !<regular>
          value: "java.lang.Object"
        valueType: "java.lang.Class"
        genericValueType: "java.lang.Object"
        uuid: "getProperty_class1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "AE218CB33D7B12E7806EB9CB7DA7BE17"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "4A5098EEAFB39F3A1263B799E19E1747"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "D2E3B88A6CD8FBA92688E97FF40C80E7"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "7A4D1C5DEEB9352964426058BAECAF84"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "exampleKey"
            suggestedContent: !<regular>
              value: "exampleKey"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "targetValueType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolveNestedPlaceholders"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getProperty(String,Class,boolean): Object"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "85A3A1B1BCB39AA9D4D45774420C4DCB"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.ClassUtils"
        uuid: "org.springframework.util.ClassUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            uuid: "getProperty_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isAssignableValue(Class,Object): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "convertValueIfNecessary_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "DefaultConversionService"
      modelFingerprint: "50764345630ECA806DAC64673F46C14F"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.core.convert.support.DefaultConversionService"
        uuid: "org.springframework.core.convert.support.DefaultConversionService"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.core.convert.support.DefaultConversionService"
        name: "getSharedInstance"
        parameters: []
        signature: "getSharedInstance(): ConversionService"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.core.convert.ConversionService"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "convertValueIfNecessary_conversionService1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "conversionServiceToUse"
      modelFingerprint: "8BF1BA658DB3C3FB4E4FD3BBA7730C67"
      index: 10
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.core.convert.ConversionService"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.core.convert.ConversionService"
        uuid: "convertValueIfNecessary_conversionService1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "conversionServiceToUse"
        name: "convert"
        parameters:
        - name: "arg0"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "arg1"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            uuid: "getProperty_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "convert(Object,Class): Object"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "convertValueIfNecessary_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "EDA2651BB29D8448EA5A2C6E4F135F6E"
      index: 11
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "java.lang.Object"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.Object"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.Object"
        uuid: "convertValueIfNecessary_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "4eb45dcf-3e0f-3715-976d-c80efad0c4ce"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path13"
    pathIdForUser: "path14"
    testPathName: "getProperty3WhenConfigurationPropertyIsNotNullAndCaughtExceptionAndValueIsNotNullAndResolveNestedPlaceholdersAndValueIn"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "60297CA00D98B477669FD1E35B19CD8C"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 4
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "9F1FD6D8072931A40FC242BE5BAEA32D"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "7A9D0147D321A684D65C31B1329516FA"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "exampleKey"
        suggestedContent: !<regular>
          value: "exampleKey"
        valueType: "java.lang.String"
        uuid: "getProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "targetValueType"
      modelFingerprint: "09F014E3653247C783FC4902361EF4F0"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "NULL"
        content: !<regular>
          value: "java.lang.String"
        suggestedContent: !<regular>
          value: "java.lang.String"
        valueType: "java.lang.Class"
        genericValueType: "java.lang.Object"
        uuid: "getProperty_class1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "AE218CB33D7B12E7806EB9CB7DA7BE17"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "4A5098EEAFB39F3A1263B799E19E1747"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "D2E3B88A6CD8FBA92688E97FF40C80E7"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "7A4D1C5DEEB9352964426058BAECAF84"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "exampleKey"
            suggestedContent: !<regular>
              value: "exampleKey"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "targetValueType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolveNestedPlaceholders"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getProperty(String,Class,boolean): Object"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "EDA2651BB29D8448EA5A2C6E4F135F6E"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "java.lang.Object"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.Object"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.Object"
        uuid: "findPropertyValue_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "3381bc01-cc6f-3fb1-acc6-49d9032189b6"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path14"
    pathIdForUser: "path15"
    testPathName: "getProperty3WhenCaughtExceptionAndValueIsNotNullAndResolveNestedPlaceholdersAndValueInstanceOfString2"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "C159A9CE2646F2AD30570040C3B7A31A"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 4
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "9F1FD6D8072931A40FC242BE5BAEA32D"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "7A9D0147D321A684D65C31B1329516FA"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "exampleKey"
        suggestedContent: !<regular>
          value: "exampleKey"
        valueType: "java.lang.String"
        uuid: "getProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "targetValueType"
      modelFingerprint: "2127EF976C39C9C090D04F3E79011563"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "CLASS"
        content: !<regular>
          value: "java.lang.String"
        suggestedContent: !<regular>
          value: "java.lang.String"
        valueType: "java.lang.Class"
        genericValueType: "java.lang.Object"
        uuid: "getProperty_class1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "AE218CB33D7B12E7806EB9CB7DA7BE17"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "4A5098EEAFB39F3A1263B799E19E1747"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "D2E3B88A6CD8FBA92688E97FF40C80E7"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "7A4D1C5DEEB9352964426058BAECAF84"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "exampleKey"
            suggestedContent: !<regular>
              value: "exampleKey"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "targetValueType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolveNestedPlaceholders"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getProperty(String,Class,boolean): Object"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "2CE391786D606DAAA9CE256BB1AF2728"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.ClassUtils"
        uuid: "org.springframework.util.ClassUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            suggestedContent: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            uuid: "getProperty_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isAssignableValue(Class,Object): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "convertValueIfNecessary_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "DefaultConversionService"
      modelFingerprint: "3275AD9651EBD15FDFE750E757F3F025"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.core.convert.support.DefaultConversionService"
        uuid: "org.springframework.core.convert.support.DefaultConversionService"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.core.convert.support.DefaultConversionService"
        name: "getSharedInstance"
        parameters: []
        signature: "getSharedInstance(): ConversionService"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.core.convert.ConversionService"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "convertValueIfNecessary_conversionService1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "conversionServiceToUse"
      modelFingerprint: "74757C6D7152D92B0676B5CCF4C3AF17"
      index: 10
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.core.convert.ConversionService"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.core.convert.ConversionService"
        uuid: "convertValueIfNecessary_conversionService1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "conversionServiceToUse"
        name: "convert"
        parameters:
        - name: "arg0"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "arg1"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            suggestedContent: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            uuid: "getProperty_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "convert(Object,Class): Object"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "convertValueIfNecessary_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7C973EAEEC332BFEC09E51528D07A6CE"
      index: 11
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "java.lang.Object"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.Object"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.Object"
        uuid: "convertValueIfNecessary_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "137c4932-6bf0-3306-98f3-1a13f6dae120"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "getPropertyAsRawString"
    returnType: "java.lang.String"
    signature: "getPropertyAsRawString(java.lang.String) : java.lang.String"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "BD7FED0A6B98D6A08AFE5CBF14630AA7"
    parametersTypes:
    - "java.lang.String"
  paths:
  - pathId: "path7"
    pathIdForUser: "path1"
    testPathName: "getPropertyAsRawStringWhenNotResolveNestedPlaceholders"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "7B5B648FF1B5EBFFE25B004FA98A8C50"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "a42de2ba-769c-359f-bf5c-c8a2fe180f34"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path8"
    pathIdForUser: "path2"
    testPathName: "getPropertyAsRawStringWhenValueIsNotNullAndNotResolveNestedPlaceholders"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "32DA3D7C0714875371C224D567F2BA03"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "getPropertyAsRawString_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "F8BBE02E8C3C2D24101ADC5CF4687CD9"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "NULL"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "4FDE6615A190A20C2B0B5FEA2868F669"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getPropertyAsRawString_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "targetValueType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolveNestedPlaceholders"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getProperty(String,Class,boolean): Object"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "FDA819B76477372752D7C803680FE592"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.ClassUtils"
        uuid: "org.springframework.util.ClassUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isAssignableValue(Class,Object): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "convertValueIfNecessary_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "DefaultConversionService"
      modelFingerprint: "3275AD9651EBD15FDFE750E757F3F025"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.core.convert.support.DefaultConversionService"
        uuid: "org.springframework.core.convert.support.DefaultConversionService"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.core.convert.support.DefaultConversionService"
        name: "getSharedInstance"
        parameters: []
        signature: "getSharedInstance(): ConversionService"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.core.convert.ConversionService"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "convertValueIfNecessary_conversionService1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "conversionServiceToUse"
      modelFingerprint: "802D93717AAB85B52CA7FFB301718397"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.core.convert.ConversionService"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.core.convert.ConversionService"
        uuid: "convertValueIfNecessary_conversionService1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "conversionServiceToUse"
        name: "convert"
        parameters:
        - name: "arg0"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "arg1"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "convert(Object,Class): Object"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: "return_of_convert1"
          valueType: "java.lang.String"
          uuid: "convertValueIfNecessary_object1"
          fixed: false
          equalsMethodPresent: true
          explicitCastNeeded: true
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "return_of_convert1"
        valueType: "java.lang.String"
        uuid: "convertValueIfNecessary_object1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: true
      staticReadMethodForField: false
      filledByUser: false
    uuid: "96526e58-f2a4-39cb-ae25-d7d769ae4d92"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path6"
    pathIdForUser: "path3"
    testPathName: "getPropertyAsRawStringWhenAttachedIsNullAndValueIsNotNullAndNotResolveNestedPlaceholders"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "8C2B145FD840010314753E130D1564C2"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "f8f008d4-ff79-3725-aed6-f4b72b969c6c"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path1"
    pathIdForUser: "path4"
    testPathName: "getPropertyAsRawStringWhenValueIsNull"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "3998920C10F729C16E316F374626655C"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "4dbe4a50-c98e-38a6-b826-24ba1dc568b5"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path4"
    pathIdForUser: "path5"
    testPathName: "getPropertyAsRawStringWhenConfigurationPropertyIsNullAndValueIsNull"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "66721482D49B21CDF3DAF33EF6BFEDF2"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "getPropertyAsRawString_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getPropertyAsRawString_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "findPropertyValue_configurationPropertyName1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "8E406A6028AD840881AFC313D5BD36CD"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "configurationProperty"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationPropertyName1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValue:
          sapientType: "NULL"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "findPropertyValue_configurationProperty1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8EDA3F2AE365AC99A4FDAA03D44C0B66"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "NULL"
        valueType: "java.lang.String"
        uuid: "getProperty_object1"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: true
      staticReadMethodForField: false
      filledByUser: false
    uuid: "8178a25c-3642-3433-86f1-fb6c4cc7e472"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path5"
    pathIdForUser: "path6"
    testPathName: "getPropertyAsRawStringWhenNameIsNullAndValueIsNotNullAndNotResolveNestedPlaceholders"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "C93C5E6C3F94552710B69621D7D862F8"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "87e91093-d355-3304-9567-78dfec2c8cc2"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path3"
    pathIdForUser: "path7"
    testPathName: "getPropertyAsRawStringWhenConfigurationPropertyIsNotNullAndValueIsNotNullAndNotResolveNestedPlaceholders"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "46558E5F5BE7DD5F0BB51F426326165B"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "118D8B3E0A4DB554818B6B590CC6B8D8"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "79EA2B023DCC5B9BA37FDDA7E3289664"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "testKey"
        suggestedContent: !<regular>
          value: "testKey"
        valueType: "java.lang.String"
        uuid: "getPropertyAsRawString_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "A7774BDCC4DE207EC3F70BEBE9C8F6FA"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "4A5098EEAFB39F3A1263B799E19E1747"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "486DC2BBC3CD892D3FD1E12319507B56"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "F7D1E2C128EDA75DC25AE0280A1AC9C5"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "testKey"
            suggestedContent: !<regular>
              value: "testKey"
            valueType: "java.lang.String"
            uuid: "getPropertyAsRawString_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            method: "of"
            methodParameters:
            - name: "name"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "findPropertyValue_configurationPropertyName1-name1"
                suggestedContent: !<regular>
                  value: "findPropertyValue_configurationPropertyName1-name1"
                valueType: "java.lang.String"
                uuid: "findPropertyValue_configurationPropertyName1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            method: "of"
            methodParameters:
            - name: "name"
              value:
                sapientType: "UNKNOWN"
                suggestedContent: !<unknown_object>
                  target: "java.lang.CharSequence"
                  onlyPojoFunctions: false
                  builderPattern: false
                valueType: "java.lang.CharSequence"
                uuid: "findPropertyValue_configurationPropertyName1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "findPropertyValue_configurationPropertyName1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "48FD21E1A76B85F9A0E01EA9ED3ECA5A"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "configurationProperty"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              method: "of"
              methodParameters:
              - name: "name"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "findPropertyValue_configurationPropertyName1-name1"
                  suggestedContent: !<regular>
                    value: "findPropertyValue_configurationPropertyName1-name1"
                  valueType: "java.lang.String"
                  uuid: "findPropertyValue_configurationPropertyName1-name"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            suggestedContent: !<static_method_return>
              target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              method: "of"
              methodParameters:
              - name: "name"
                value:
                  sapientType: "UNKNOWN"
                  suggestedContent: !<unknown_object>
                    target: "java.lang.CharSequence"
                    onlyPojoFunctions: false
                    builderPattern: false
                  valueType: "java.lang.CharSequence"
                  uuid: "findPropertyValue_configurationPropertyName1-name"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationPropertyName1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "BASIC"
                content: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                suggestedContent: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                valueType: "java.lang.String"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: true
                explicitCastNeeded: true
            - name: "origin"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "BASIC"
                suggestedContent: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                valueType: "java.lang.String"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: true
                explicitCastNeeded: true
            - name: "origin"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "findPropertyValue_configurationProperty1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "B445864E51A5C3EA44601FE77A541D59"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.ClassUtils"
        uuid: "org.springframework.util.ClassUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.String"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: true
        signature: "isAssignableValue(Class,String): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "convertValueIfNecessary_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "02AA854785AC711C5EE7AD8E31D6DBCE"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<new>
          target: "java.lang.Object"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.Object"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.String"
        uuid: "findPropertyValue_object1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: true
      staticReadMethodForField: false
      filledByUser: false
    uuid: "58557aca-035b-3c54-bf85-8473a7b90a3e"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path2"
    pathIdForUser: "path8"
    testPathName: "getPropertyAsRawStringWhenConfigurationPropertyIsNotNullAndValueIsNotNullAndNotResolveNestedPlaceholders2"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "A1CC98896D2EF7328E53A6334433CC94"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "getPropertyAsRawString_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getPropertyAsRawString_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "findPropertyValue_configurationPropertyName1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "10E497047B78CECC1A70DA049A50864F"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "configurationProperty"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationPropertyName1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "value1"
                valueType: "java.lang.String"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: true
                explicitCastNeeded: true
            - name: "origin"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "BASIC"
                valueType: "java.lang.String"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: true
                explicitCastNeeded: true
            - name: "origin"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "findPropertyValue_configurationProperty1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "7C568A072D65BA8DDCFDF25E430E2D74"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "value1"
              valueType: "java.lang.String"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: true
              explicitCastNeeded: true
          - name: "origin"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "BASIC"
              valueType: "java.lang.String"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: true
              explicitCastNeeded: true
          - name: "origin"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        uuid: "findPropertyValue_configurationProperty1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: "value1"
          valueType: "java.lang.String"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: true
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "1E73209821A833D8019F970A1FCBCDC4"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.ClassUtils"
        uuid: "org.springframework.util.ClassUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "value1"
            valueType: "java.lang.String"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: true
        signature: "isAssignableValue(Class,String): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "convertValueIfNecessary_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 10
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "value1"
        valueType: "java.lang.String"
        uuid: "findPropertyValue_object1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: true
      staticReadMethodForField: false
      filledByUser: false
    uuid: "9089bea0-bf63-3a30-b81e-574541a28fec"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path9"
    pathIdForUser: "path9"
    testPathName: "getPropertyAsRawStringWhenCaughtExceptionAndValueIsNull"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "BC919A81B7946C1FA1E8D0AF5A1AFF1F"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 4
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "9F1FD6D8072931A40FC242BE5BAEA32D"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "70C2DFBA19C87FA107AD934EEE089843"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "<String>"
        suggestedContent: !<regular>
          value: "<String>"
        valueType: "java.lang.String"
        uuid: "getPropertyAsRawString_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "AE218CB33D7B12E7806EB9CB7DA7BE17"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "4A5098EEAFB39F3A1263B799E19E1747"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "D2E3B88A6CD8FBA92688E97FF40C80E7"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "4E3BB5FD87F8C3453B2049BA026E119D"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "<String>"
            suggestedContent: !<regular>
              value: "<String>"
            valueType: "java.lang.String"
            uuid: "getPropertyAsRawString_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "targetValueType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolveNestedPlaceholders"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getProperty(String,Class,boolean): Object"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.String"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: true
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "0104802FDCEA5B06FEF48DC06EB498E5"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.ClassUtils"
        uuid: "org.springframework.util.ClassUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.String"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: true
        signature: "isAssignableValue(Class,String): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "convertValueIfNecessary_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3142F7F6A5176235630B0861A5AD9E0"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "java.lang.Object"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.Object"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.String"
        uuid: "findPropertyValue_object1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: true
      staticReadMethodForField: false
      filledByUser: false
    uuid: "5c4e4df6-d7b5-3443-ba18-431e3022d0dc"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path11"
    pathIdForUser: "path10"
    testPathName: "getPropertyAsRawStringWhenCaughtExceptionAndValueIsNotNullAndNotResolveNestedPlaceholders"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "EC4B676BB0CDA47E070EE25924210AD2"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 4
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "9F1FD6D8072931A40FC242BE5BAEA32D"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "70C2DFBA19C87FA107AD934EEE089843"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "<String>"
        suggestedContent: !<regular>
          value: "<String>"
        valueType: "java.lang.String"
        uuid: "getPropertyAsRawString_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "AE218CB33D7B12E7806EB9CB7DA7BE17"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "4A5098EEAFB39F3A1263B799E19E1747"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "D2E3B88A6CD8FBA92688E97FF40C80E7"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "ACB4EB3764D61BAC557276E9E2F6D2C1"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "<String>"
            suggestedContent: !<regular>
              value: "<String>"
            valueType: "java.lang.String"
            uuid: "getPropertyAsRawString_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "targetValueType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolveNestedPlaceholders"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getProperty(String,Class,boolean): Object"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "0161D63160E7C157115354A8163CFB69"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.ClassUtils"
        uuid: "org.springframework.util.ClassUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isAssignableValue(Class,Object): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "convertValueIfNecessary_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "DefaultConversionService"
      modelFingerprint: "50764345630ECA806DAC64673F46C14F"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.core.convert.support.DefaultConversionService"
        uuid: "org.springframework.core.convert.support.DefaultConversionService"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.core.convert.support.DefaultConversionService"
        name: "getSharedInstance"
        parameters: []
        signature: "getSharedInstance(): ConversionService"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.core.convert.ConversionService"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "convertValueIfNecessary_conversionService1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "conversionServiceToUse"
      modelFingerprint: "DB519E284A13A8B773CB994D1D3CAE12"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.core.convert.ConversionService"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.core.convert.ConversionService"
        uuid: "convertValueIfNecessary_conversionService1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "conversionServiceToUse"
        name: "convert"
        parameters:
        - name: "arg0"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "arg1"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "convert(Object,Class): Object"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: "return_of_convert1"
          valueType: "java.lang.String"
          uuid: "convertValueIfNecessary_object1"
          fixed: false
          equalsMethodPresent: true
          explicitCastNeeded: true
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "22D37754E63B33AD8E28239DAFAEC722"
      index: 10
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "return_of_convert1"
        valueType: "java.lang.String"
        uuid: "convertValueIfNecessary_object1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: true
      staticReadMethodForField: false
      filledByUser: false
    uuid: "4ab0aaa3-6bea-38fa-9c21-f244d7e9c6a0"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path10"
    pathIdForUser: "path11"
    testPathName: "getPropertyAsRawStringWhenConfigurationPropertyIsNotNullAndCaughtExceptionAndValueIsNotNullAndNotResolveNestedPlacehold"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "1C9501B0FF5EEE06E7F192513C5FC88A"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 4
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "9F1FD6D8072931A40FC242BE5BAEA32D"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "70C2DFBA19C87FA107AD934EEE089843"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "<String>"
        suggestedContent: !<regular>
          value: "<String>"
        valueType: "java.lang.String"
        uuid: "getPropertyAsRawString_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "AE218CB33D7B12E7806EB9CB7DA7BE17"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "4A5098EEAFB39F3A1263B799E19E1747"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "D2E3B88A6CD8FBA92688E97FF40C80E7"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "org.springframework.core.env.MutablePropertySources"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "ACB4EB3764D61BAC557276E9E2F6D2C1"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.springframework.core.env.MutablePropertySources"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "<String>"
            suggestedContent: !<regular>
              value: "<String>"
            valueType: "java.lang.String"
            uuid: "getPropertyAsRawString_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "targetValueType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolveNestedPlaceholders"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getProperty(String,Class,boolean): Object"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "0161D63160E7C157115354A8163CFB69"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.ClassUtils"
        uuid: "org.springframework.util.ClassUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isAssignableValue(Class,Object): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "convertValueIfNecessary_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "DefaultConversionService"
      modelFingerprint: "3275AD9651EBD15FDFE750E757F3F025"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.core.convert.support.DefaultConversionService"
        uuid: "org.springframework.core.convert.support.DefaultConversionService"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.core.convert.support.DefaultConversionService"
        name: "getSharedInstance"
        parameters: []
        signature: "getSharedInstance(): ConversionService"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.core.convert.ConversionService"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "convertValueIfNecessary_conversionService1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "conversionServiceToUse"
      modelFingerprint: "8B67DEFCD53FC2537DD3B8EB1D3EF2B6"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.core.convert.ConversionService"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.core.convert.ConversionService"
        uuid: "convertValueIfNecessary_conversionService1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "conversionServiceToUse"
        name: "convert"
        parameters:
        - name: "arg0"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "arg1"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "convert(Object,Class): Object"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: "return_of_convert1"
          valueType: "java.lang.String"
          uuid: "convertValueIfNecessary_object1"
          fixed: false
          equalsMethodPresent: true
          explicitCastNeeded: true
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 10
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "return_of_convert1"
        valueType: "java.lang.String"
        uuid: "convertValueIfNecessary_object1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: true
      staticReadMethodForField: false
      filledByUser: false
    uuid: "d8e95d18-a74a-3b58-b7a9-c72791ba3814"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.commons.logging.LogFactory.getLog(java.lang.Class)\
        \ : org.apache.commons.logging.Log"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
