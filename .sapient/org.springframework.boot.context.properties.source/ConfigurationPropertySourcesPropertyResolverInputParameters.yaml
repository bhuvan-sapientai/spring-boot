---
modelFingerprint: "A1EAD8FA116DFDA60DB4D2A78D38B82C"
methods:
- method:
    name: "containsProperty"
    signature: "containsProperty(java.lang.String) : boolean"
    sourceCodeSignature: "boolean containsProperty(String key)"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "055DAD302633BB00B51938497990868D"
  paths:
  - pathId: "path6"
    testPathName: "containsPropertyWhenThisDefaultResolverNotContainsPropertyKey"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "AF82C60322CDD93BCFC34D398B3F399A"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "e3973812-d04c-3348-971a-c748be410432"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "defaultResolver"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.containsProperty(key);"
      lineNumber: 55
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: containsProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path7"
    testPathName: "containsPropertyWhenAttachedIsNullAndThisDefaultResolverNotContainsPropertyKey"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "90D5CD4A56744397C2DBEEE9AF82FFC1"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      valueUuid: "containsProperty_string1"
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "F8BBE02E8C3C2D24101ADC5CF4687CD9"
      index: 3
      valueUuid: "uuid2"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValueUuid: "getAttached_propertySource1"
        access: 8
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "03C7B22A6427FEF40A0B64EEB95338E7"
      index: 4
      valueUuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
      methodExercised:
        target: "this.defaultResolver"
        name: "containsProperty"
        parameters:
        - name: "key"
          valueUuid: "containsProperty_string1"
        signature: "containsProperty(String): boolean"
        returnValueUuid: "containsProperty_boolean1"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3A21543F56248AC92654D6E439128AED"
      index: 5
      valueUuid: "containsProperty_boolean1"
    uuid: "3330932b-5c8c-39b9-a6c0-b88cb5f4ebae"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "defaultResolver"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.containsProperty(key);"
      lineNumber: 55
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: containsProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "containsProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "uuid2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
      uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "containsProperty_boolean1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "containsProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "containsProperty_boolean1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path5"
    testPathName: "containsPropertyWhenSpringSourceNotIsUsingSourcesThisPropertySourcesAndAttachedIsNullAndThisDefaultResolverNotContainsP"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "85BE277BE5E644477B5AC3F10B1E1745"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "e560b0f2-d2a3-333e-91d1-ecb3dfe514b4"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "defaultResolver"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.containsProperty(key);"
      lineNumber: 55
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: containsProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path1"
    testPathName: "containsPropertyWhenAttachedFindConfigurationPropertyNameIsNotNull"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "48BD367D749CD5580921502B7A369B76"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      valueUuid: "containsProperty_string1"
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      valueUuid: "uuid4"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValueUuid: "getAttached_propertySource1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValueUuid: "getAttached_object1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      valueUuid: "getAttached_object1"
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValueUuid: "getAttached_boolean2"
        access: 0
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      valueUuid: "uuid6"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          valueUuid: "containsProperty_string1"
        - name: "returnNullIfInvalid"
          valueUuid: "uuid5"
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValueUuid: "containsProperty_configurationPropertyName1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "AF72D614FE2A59DDF7C61E108203A3AB"
      index: 7
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "name"
          valueUuid: "containsProperty_configurationPropertyName1"
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValueUuid: "containsProperty_configurationProperty1"
        access: 0
    - type: "RESULT"
      name: "result"
      modelFingerprint: "753659628F1B3F179A2EF0629F555437"
      index: 8
      valueUuid: "uuid7"
    uuid: "c0e9bb19-8da4-3906-bbef-9c8c866ea231"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "containsProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "uuid4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getAttached_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uuid6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "containsProperty_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "containsProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid5"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "containsProperty_configurationProperty1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "containsProperty_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid7"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "containsPropertyWhenAttachedFindConfigurationPropertyNameIsNull"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "A1A6B54B1E6455851C1AEA30476EB08F"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      valueUuid: "containsProperty_string1"
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      valueUuid: "uuid8"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValueUuid: "getAttached_propertySource1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValueUuid: "getAttached_object1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      valueUuid: "getAttached_object1"
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValueUuid: "getAttached_boolean2"
        access: 0
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      valueUuid: "uuid10"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          valueUuid: "containsProperty_string1"
        - name: "returnNullIfInvalid"
          valueUuid: "uuid9"
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValueUuid: "containsProperty_configurationPropertyName1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "D71B7699BBC49B2644208DD9984142F7"
      index: 7
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "name"
          valueUuid: "containsProperty_configurationPropertyName1"
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValueUuid: "containsProperty_configurationProperty1"
        access: 0
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3A21543F56248AC92654D6E439128AED"
      index: 8
      valueUuid: "uuid11"
    uuid: "5d86fb9f-75bd-3848-9b65-f3a24d29b0d0"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "containsProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "uuid8"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getAttached_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uuid10"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "containsProperty_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "containsProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid9"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "containsProperty_configurationProperty1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "containsProperty_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid11"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path3"
    testPathName: "containsPropertyWhenThisDefaultResolverContainsPropertyKey"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "083991C514F5AD88C0B87102DE6B12D7"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      valueUuid: "containsProperty_string1"
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      valueUuid: "uuid12"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValueUuid: "getAttached_propertySource1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValueUuid: "getAttached_object1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      valueUuid: "getAttached_object1"
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValueUuid: "getAttached_boolean2"
        access: 0
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "EC3E7B65C53A9FA458FD333C8632BBA3"
      index: 6
      valueUuid: "uuid14"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          valueUuid: "containsProperty_string1"
        - name: "returnNullIfInvalid"
          valueUuid: "uuid13"
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValueUuid: "containsProperty_configurationPropertyName1"
        access: 8
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "F4FDE4578A3BDE7CC434B0C55FA5E193"
      index: 7
      valueUuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
      methodExercised:
        target: "this.defaultResolver"
        name: "containsProperty"
        parameters:
        - name: "key"
          valueUuid: "containsProperty_string1"
        signature: "containsProperty(String): boolean"
        returnValueUuid: "containsProperty_boolean1"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "753659628F1B3F179A2EF0629F555437"
      index: 8
      valueUuid: "containsProperty_boolean1"
    uuid: "c519a802-bafd-336d-abd2-40264828dd8d"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "defaultResolver"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.containsProperty(key);"
      lineNumber: 55
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: containsProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "containsProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "uuid12"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getAttached_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uuid14"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "containsProperty_configurationPropertyName1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "containsProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid13"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
      uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "containsProperty_boolean1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "containsProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "containsProperty_boolean1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path4"
    testPathName: "containsPropertyWhenNameIsNullAndThisDefaultResolverNotContainsPropertyKey"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "79908E6FDD2D1B9F7670CFF98BB2479F"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "73120fef-9f43-3b35-96c8-da1d1e63e112"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "defaultResolver"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.containsProperty(key);"
      lineNumber: 55
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: containsProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path8"
    testPathName: "containsPropertyWhenCaughtExceptionAndThisDefaultResolverContainsPropertyKey"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "FF6749C8E1677C83F24B5A0A67BE7970"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      valueUuid: "containsProperty_string1"
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      valueUuid: "uuid18"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValueUuid: "getAttached_propertySource1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValueUuid: "getAttached_object1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      valueUuid: "getAttached_object1"
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValueUuid: "getAttached_boolean2"
        access: 0
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      valueUuid: "uuid20"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          valueUuid: "containsProperty_string1"
        - name: "returnNullIfInvalid"
          valueUuid: "uuid19"
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValueUuid: "containsProperty_configurationPropertyName1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "AF72D614FE2A59DDF7C61E108203A3AB"
      index: 7
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "name"
          valueUuid: "containsProperty_configurationPropertyName1"
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValueUuid: "containsProperty_configurationProperty1"
        access: 0
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "F4FDE4578A3BDE7CC434B0C55FA5E193"
      index: 8
      valueUuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
      methodExercised:
        target: "this.defaultResolver"
        name: "containsProperty"
        parameters:
        - name: "key"
          valueUuid: "containsProperty_string1"
        signature: "containsProperty(String): boolean"
        returnValueUuid: "containsProperty_boolean1"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "753659628F1B3F179A2EF0629F555437"
      index: 9
      valueUuid: "containsProperty_boolean1"
    uuid: "abf2f751-2d8d-328b-b876-1d028f927b94"
    deleted: false
    disabled: false
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "defaultResolver"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.containsProperty(key);"
      lineNumber: 55
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: containsProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "containsProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "uuid18"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getAttached_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uuid20"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "containsProperty_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "containsProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid19"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "containsProperty_configurationProperty1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "containsProperty_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
      uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "containsProperty_boolean1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "containsProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "containsProperty_boolean1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path9"
    testPathName: "containsPropertyWhenCaughtExceptionAndThisDefaultResolverNotContainsPropertyKey"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "6500793B97F3D82C04797F19E6B2C618"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      valueUuid: "containsProperty_string1"
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      valueUuid: "uuid21"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValueUuid: "getAttached_propertySource1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValueUuid: "getAttached_object1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      valueUuid: "getAttached_object1"
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValueUuid: "getAttached_boolean2"
        access: 0
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      valueUuid: "uuid23"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          valueUuid: "containsProperty_string1"
        - name: "returnNullIfInvalid"
          valueUuid: "uuid22"
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValueUuid: "containsProperty_configurationPropertyName1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "AF72D614FE2A59DDF7C61E108203A3AB"
      index: 7
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "name"
          valueUuid: "containsProperty_configurationPropertyName1"
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValueUuid: "containsProperty_configurationProperty1"
        access: 0
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "03C7B22A6427FEF40A0B64EEB95338E7"
      index: 8
      valueUuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
      methodExercised:
        target: "this.defaultResolver"
        name: "containsProperty"
        parameters:
        - name: "key"
          valueUuid: "containsProperty_string1"
        signature: "containsProperty(String): boolean"
        returnValueUuid: "containsProperty_boolean1"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3A21543F56248AC92654D6E439128AED"
      index: 9
      valueUuid: "containsProperty_boolean1"
    uuid: "73c17d9a-4743-3423-a4c5-31860de55d0d"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "defaultResolver"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.containsProperty(key);"
      lineNumber: 55
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: containsProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "containsProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "uuid21"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getAttached_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uuid23"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "containsProperty_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "containsProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid22"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "containsProperty_configurationProperty1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "containsProperty_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
      uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "containsProperty_boolean1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "containsProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "containsProperty_boolean1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "getProperty"
    signature: "getProperty(java.lang.String) : java.lang.String"
    sourceCodeSignature: "String getProperty(String key)"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "234ABB419CFA6DE53627E0E25FFF7B47"
  paths:
  - pathId: "path9"
    testPathName: "getPropertyWhenValueNotInstanceOfString"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "888A3B1712ED99D21B3CE01292686B7A"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "eed95331-3cf3-3d8e-bb82-f774f7d5f4ae"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path10"
    testPathName: "getPropertyWhenResolveNestedPlaceholdersAndValueNotInstanceOfString"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "C3CD5C927124F1A3C351C76D252BFF3C"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      valueUuid: "getProperty_string1"
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "F8BBE02E8C3C2D24101ADC5CF4687CD9"
      index: 3
      valueUuid: "uuid31"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValueUuid: "getAttached_propertySource1"
        access: 8
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "C190D236DC7E4569C9758F16110C64CB"
      index: 4
      valueUuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          valueUuid: "getProperty_string1"
        - name: "targetValueType"
          valueUuid: "uuid32"
        - name: "resolveNestedPlaceholders"
          valueUuid: "uuid33"
        signature: "getProperty(String,Class,boolean): Object"
        returnValueUuid: "findPropertyValue_object1"
        access: 1
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "F2620829253A8C2B5E882FFED1770FB9"
      index: 5
      valueUuid: "uuid35"
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          valueUuid: "uuid34"
        - name: "value"
          valueUuid: "findPropertyValue_object1"
        signature: "isAssignableValue(Class,Object): boolean"
        returnValueUuid: "convertValueIfNecessary_boolean1"
        access: 9
    - type: "STATIC"
      name: "DefaultConversionService"
      modelFingerprint: "7F5AE245D41FD0CC9CB0F9EFFB899CBB"
      index: 6
      valueUuid: "uuid36"
      methodExercised:
        target: "org.springframework.core.convert.support.DefaultConversionService"
        name: "getSharedInstance"
        parameters: []
        signature: "getSharedInstance(): ConversionService"
        returnValueUuid: "convertValueIfNecessary_conversionService1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "conversionServiceToUse"
      modelFingerprint: "51A5E2E611C5E08DCDD8A0A51760F18B"
      index: 7
      valueUuid: "convertValueIfNecessary_conversionService1"
      methodExercised:
        target: "conversionServiceToUse"
        name: "convert"
        parameters:
        - name: "source"
          valueUuid: "findPropertyValue_object1"
        - name: "targetType"
          valueUuid: "uuid37"
        signature: "convert(Object,Class): Object"
        returnValueUuid: "convertValueIfNecessary_object1"
        access: 1025
    - type: "RESULT"
      name: "result"
      modelFingerprint: "795515C54CB62B36F79A5D375B088A2A"
      index: 8
      valueUuid: "convertValueIfNecessary_object1"
    uuid: "dc9fbe4a-8d57-3691-ae58-7bae70fbc30d"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "uuid31"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
      uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uuid32"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid33"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "uuid35"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "convertValueIfNecessary_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.String"
      uuid: "uuid34"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.support.DefaultConversionService"
      uuid: "uuid36"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionService"
      uuid: "convertValueIfNecessary_conversionService1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionService"
      uuid: "convertValueIfNecessary_conversionService1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_convert1"
      valueType: "java.lang.String"
      uuid: "convertValueIfNecessary_object1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.String"
      uuid: "uuid37"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_convert1"
      valueType: "java.lang.String"
      uuid: "convertValueIfNecessary_object1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: true
  - pathId: "path1"
    testPathName: "getPropertyWhenValueIsNull"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "14FDB8DB97EEC7BFF381C5ABA40D16F6"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "d6236397-4e1a-36e6-ac2d-794b7507b136"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path6"
    testPathName: "getPropertyWhenConfigurationPropertyIsNullAndValueIsNull"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "C3EDF375EA4CCA66058CDF0109060D94"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      valueUuid: "getProperty_string1"
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      valueUuid: "uuid41"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValueUuid: "getAttached_propertySource1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValueUuid: "getAttached_object1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      valueUuid: "getAttached_object1"
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValueUuid: "getAttached_boolean2"
        access: 0
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      valueUuid: "uuid43"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          valueUuid: "getProperty_string1"
        - name: "returnNullIfInvalid"
          valueUuid: "uuid42"
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValueUuid: "findPropertyValue_configurationPropertyName1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "D71B7699BBC49B2644208DD9984142F7"
      index: 7
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "name"
          valueUuid: "findPropertyValue_configurationPropertyName1"
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValueUuid: "findPropertyValue_configurationProperty1"
        access: 0
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8EDA3F2AE365AC99A4FDAA03D44C0B66"
      index: 8
      valueUuid: "getProperty_object1"
    uuid: "97ce597c-91ee-34da-bc91-30b57e73d393"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "uuid41"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getAttached_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uuid43"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid42"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "findPropertyValue_configurationProperty1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "getProperty_object1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: true
  - pathId: "path8"
    testPathName: "getPropertyWhenValueIsNotNullAndResolveNestedPlaceholdersAndValueNotInstanceOfString"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "434CF90D67A0CC30547222A1C8A91023"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "84ecefbc-817e-39f1-acfc-76e69cdf57d9"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path11"
    testPathName: "getPropertyWhenCaughtExceptionAndValueIsNull"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "D09D39A028814FA007723F1F320901A1"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 4
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      valueUuid: "getProperty_string1"
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      valueUuid: "uuid51"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValueUuid: "getAttached_propertySource1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValueUuid: "getAttached_object1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      valueUuid: "getAttached_object1"
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValueUuid: "getAttached_boolean2"
        access: 0
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      valueUuid: "uuid53"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          valueUuid: "getProperty_string1"
        - name: "returnNullIfInvalid"
          valueUuid: "uuid52"
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValueUuid: "findPropertyValue_configurationPropertyName1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "91628CF59B9449022DBF2D9A27708068"
      index: 7
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "name"
          valueUuid: "findPropertyValue_configurationPropertyName1"
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValueUuid: "findPropertyValue_configurationProperty1"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "732C60509BD501F8FFD4AE2CE30DDB2D"
      index: 8
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "findPropertyValue_configurationProperty1"
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValueUuid: "findPropertyValue_object1"
        access: 1
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "C5C5A84F61540F499FBA49CA5496C716"
      index: 9
      valueUuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          valueUuid: "getProperty_string1"
        - name: "targetValueType"
          valueUuid: "uuid54"
        - name: "resolveNestedPlaceholders"
          valueUuid: "uuid55"
        signature: "getProperty(String,Class,boolean): Object"
        returnValueUuid: "findPropertyValue_object2"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8EDA3F2AE365AC99A4FDAA03D44C0B66"
      index: 10
      valueUuid: "getProperty_object1"
    uuid: "fef8509b-1159-33de-baa3-53aa2b22b647"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "uuid51"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getAttached_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uuid53"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid52"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationProperty1-name"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "findPropertyValue_configurationProperty1-origin"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "findPropertyValue_configurationProperty1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationProperty1-name"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "findPropertyValue_configurationProperty1-origin"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "findPropertyValue_configurationProperty1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
      uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "findPropertyValue_object2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uuid54"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid55"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "getProperty_object1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: true
  - pathId: "path7"
    testPathName: "getPropertyWhenNameIsNullAndValueIsNotNullAndResolveNestedPlaceholdersAndValueNotInstanceOfString"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "E1974193195D3C30282D1E5097FC7A55"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "c753add7-ebf7-38fa-ae6c-f011cb71cf4a"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path4"
    testPathName: "getPropertyWhenValueInstanceOfString"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "D3CAEFF7FC5F98D0F7F7ADF4AE9D5D07"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      valueUuid: "getProperty_string1"
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      valueUuid: "uuid65"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValueUuid: "getAttached_propertySource1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValueUuid: "getAttached_object1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      valueUuid: "getAttached_object1"
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValueUuid: "getAttached_boolean2"
        access: 0
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      valueUuid: "uuid67"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          valueUuid: "getProperty_string1"
        - name: "returnNullIfInvalid"
          valueUuid: "uuid66"
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValueUuid: "findPropertyValue_configurationPropertyName1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "BF28454268A262DACD69C67D311ED376"
      index: 7
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "name"
          valueUuid: "findPropertyValue_configurationPropertyName1"
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValueUuid: "findPropertyValue_configurationProperty1"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "F49EAD8F10BC8F35A6BD3D5DD1577E5C"
      index: 8
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "findPropertyValue_configurationProperty1"
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValueUuid: "findPropertyValue_object1"
        access: 1
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "474E81A0A863FCA8651F3C92C7DF10C7"
      index: 9
      methodExercised:
        target: "target"
        name: "resolveRequiredPlaceholders"
        parameters:
        - name: "text"
          valueUuid: "findPropertyValue_object1"
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
        signature: "resolveRequiredPlaceholders(String): String throws java.lang.IllegalArgumentException"
        returnValueUuid: "resolveNestedPlaceholders_string1"
        access: 1
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "E07612358CD8AA95D9240A5C5742B20E"
      index: 10
      valueUuid: "uuid69"
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          valueUuid: "uuid68"
        - name: "value"
          valueUuid: "resolveNestedPlaceholders_string1"
        signature: "isAssignableValue(Class,String): boolean"
        returnValueUuid: "convertValueIfNecessary_boolean1"
        access: 9
    - type: "STATIC"
      name: "DefaultConversionService"
      modelFingerprint: "7F5AE245D41FD0CC9CB0F9EFFB899CBB"
      index: 11
      valueUuid: "uuid70"
      methodExercised:
        target: "org.springframework.core.convert.support.DefaultConversionService"
        name: "getSharedInstance"
        parameters: []
        signature: "getSharedInstance(): ConversionService"
        returnValueUuid: "convertValueIfNecessary_conversionService1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "conversionServiceToUse"
      modelFingerprint: "0AEC686A023F27C8F7CCAABB7B290648"
      index: 12
      valueUuid: "convertValueIfNecessary_conversionService1"
      methodExercised:
        target: "conversionServiceToUse"
        name: "convert"
        parameters:
        - name: "source"
          valueUuid: "resolveNestedPlaceholders_string1"
        - name: "targetType"
          valueUuid: "uuid71"
        signature: "convert(String,Class): Object"
        returnValueUuid: "convertValueIfNecessary_object1"
        access: 1025
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C38D23A0CBE6F734228AF9298A8A7FEA"
      index: 13
      valueUuid: "convertValueIfNecessary_object1"
    uuid: "7ac2ea26-3a82-3f8b-9802-1c527554ec2d"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "uuid65"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getAttached_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uuid67"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid66"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationProperty1-name"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "findPropertyValue_configurationProperty1-origin"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "findPropertyValue_configurationProperty1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationProperty1-name"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "findPropertyValue_configurationProperty1-origin"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "findPropertyValue_configurationProperty1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_resolveRequiredPlaceholders1"
      valueType: "java.lang.String"
      uuid: "resolveNestedPlaceholders_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "uuid69"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "convertValueIfNecessary_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.String"
      uuid: "uuid68"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_resolveRequiredPlaceholders1"
      valueType: "java.lang.String"
      uuid: "resolveNestedPlaceholders_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.support.DefaultConversionService"
      uuid: "uuid70"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionService"
      uuid: "convertValueIfNecessary_conversionService1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionService"
      uuid: "convertValueIfNecessary_conversionService1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "convertValueIfNecessary_object1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_resolveRequiredPlaceholders1"
      valueType: "java.lang.String"
      uuid: "resolveNestedPlaceholders_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.String"
      uuid: "uuid71"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "convertValueIfNecessary_object1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: true
  - pathId: "path2"
    testPathName: "getPropertyWhenResolveNestedPlaceholdersAndValueInstanceOfString"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "D83547983DDCC0C5893551F892C38BFD"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      valueUuid: "getProperty_string1"
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      valueUuid: "uuid72"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValueUuid: "getAttached_propertySource1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValueUuid: "getAttached_object1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      valueUuid: "getAttached_object1"
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValueUuid: "getAttached_boolean2"
        access: 0
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      valueUuid: "uuid74"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          valueUuid: "getProperty_string1"
        - name: "returnNullIfInvalid"
          valueUuid: "uuid73"
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValueUuid: "findPropertyValue_configurationPropertyName1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "F3DD3AABD9C4C2B595EE147E291091AE"
      index: 7
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "name"
          valueUuid: "findPropertyValue_configurationPropertyName1"
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValueUuid: "findPropertyValue_configurationProperty1"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "7C568A072D65BA8DDCFDF25E430E2D74"
      index: 8
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "findPropertyValue_configurationProperty1"
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValueUuid: "findPropertyValue_object1"
        access: 1
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "42095BA0498D4150013ADA3B58446212"
      index: 9
      valueUuid: "uuid76"
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          valueUuid: "uuid75"
        - name: "value"
          valueUuid: "findPropertyValue_object1"
        signature: "isAssignableValue(Class,String): boolean"
        returnValueUuid: "convertValueIfNecessary_boolean1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 10
      valueUuid: "findPropertyValue_object1"
    uuid: "06cfd8ef-1ec6-33fa-954d-f1efeb038665"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "uuid72"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getAttached_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uuid74"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid73"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationProperty1-name"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: true
            explicitCastNeeded: false
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "findPropertyValue_configurationProperty1-origin"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "findPropertyValue_configurationProperty1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationProperty1-name"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: true
            explicitCastNeeded: false
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "findPropertyValue_configurationProperty1-origin"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "findPropertyValue_configurationProperty1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "uuid76"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "convertValueIfNecessary_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.String"
      uuid: "uuid75"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path3"
    testPathName: "getPropertyWhenValueIsNotNullAndResolveNestedPlaceholdersAndValueInstanceOfString"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "FAE564A83C74894273A22A9D23BF3997"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "20eae185-a80e-301f-9fc4-a7ca5e9fc596"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path5"
    testPathName: "getPropertyWhenConfigurationPropertyIsNotNullAndValueIsNotNullAndResolveNestedPlaceholdersAndValueNotInstanceOfString"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "60DF7CD90577DC8A7D6B507B4C59779A"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "88327613-4690-302d-a67c-16f55cbddd1b"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path14"
    testPathName: "getPropertyWhenCaughtExceptionAndValueIsNotNullAndResolveNestedPlaceholdersAndValueInstanceOfString"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "50FD6E4E6D071F61110A064A4297D774"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 4
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      valueUuid: "getProperty_string1"
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      valueUuid: "uuid91"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValueUuid: "getAttached_propertySource1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValueUuid: "getAttached_object1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      valueUuid: "getAttached_object1"
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValueUuid: "getAttached_boolean2"
        access: 0
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      valueUuid: "uuid93"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          valueUuid: "getProperty_string1"
        - name: "returnNullIfInvalid"
          valueUuid: "uuid92"
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValueUuid: "findPropertyValue_configurationPropertyName1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "91628CF59B9449022DBF2D9A27708068"
      index: 7
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "name"
          valueUuid: "findPropertyValue_configurationPropertyName1"
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValueUuid: "findPropertyValue_configurationProperty1"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "732C60509BD501F8FFD4AE2CE30DDB2D"
      index: 8
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "findPropertyValue_configurationProperty1"
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValueUuid: "findPropertyValue_object1"
        access: 1
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "B5783F66C0A372980EEA4889DB2068E7"
      index: 9
      valueUuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          valueUuid: "getProperty_string1"
        - name: "targetValueType"
          valueUuid: "uuid94"
        - name: "resolveNestedPlaceholders"
          valueUuid: "uuid95"
        signature: "getProperty(String,Class,boolean): Object"
        returnValueUuid: "findPropertyValue_object2"
        access: 1
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "474E81A0A863FCA8651F3C92C7DF10C7"
      index: 10
      methodExercised:
        target: "target"
        name: "resolveRequiredPlaceholders"
        parameters:
        - name: "text"
          valueUuid: "findPropertyValue_object2"
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
        signature: "resolveRequiredPlaceholders(String): String throws java.lang.IllegalArgumentException"
        returnValueUuid: "resolveNestedPlaceholders_string1"
        access: 1
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "E07612358CD8AA95D9240A5C5742B20E"
      index: 11
      valueUuid: "uuid97"
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          valueUuid: "uuid96"
        - name: "value"
          valueUuid: "resolveNestedPlaceholders_string1"
        signature: "isAssignableValue(Class,String): boolean"
        returnValueUuid: "convertValueIfNecessary_boolean1"
        access: 9
    - type: "STATIC"
      name: "DefaultConversionService"
      modelFingerprint: "7F5AE245D41FD0CC9CB0F9EFFB899CBB"
      index: 12
      valueUuid: "uuid98"
      methodExercised:
        target: "org.springframework.core.convert.support.DefaultConversionService"
        name: "getSharedInstance"
        parameters: []
        signature: "getSharedInstance(): ConversionService"
        returnValueUuid: "convertValueIfNecessary_conversionService1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "conversionServiceToUse"
      modelFingerprint: "0AEC686A023F27C8F7CCAABB7B290648"
      index: 13
      valueUuid: "convertValueIfNecessary_conversionService1"
      methodExercised:
        target: "conversionServiceToUse"
        name: "convert"
        parameters:
        - name: "source"
          valueUuid: "resolveNestedPlaceholders_string1"
        - name: "targetType"
          valueUuid: "uuid99"
        signature: "convert(String,Class): Object"
        returnValueUuid: "convertValueIfNecessary_object1"
        access: 1025
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C38D23A0CBE6F734228AF9298A8A7FEA"
      index: 14
      valueUuid: "convertValueIfNecessary_object1"
    uuid: "e158282f-b41d-3367-94af-49d38b7ba1ea"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "uuid91"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getAttached_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uuid93"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid92"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationProperty1-name"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "findPropertyValue_configurationProperty1-origin"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "findPropertyValue_configurationProperty1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationProperty1-name"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "findPropertyValue_configurationProperty1-origin"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "findPropertyValue_configurationProperty1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
      uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "findPropertyValue_object2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uuid94"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid95"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_resolveRequiredPlaceholders1"
      valueType: "java.lang.String"
      uuid: "resolveNestedPlaceholders_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "findPropertyValue_object2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "uuid97"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "convertValueIfNecessary_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.String"
      uuid: "uuid96"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_resolveRequiredPlaceholders1"
      valueType: "java.lang.String"
      uuid: "resolveNestedPlaceholders_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.support.DefaultConversionService"
      uuid: "uuid98"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionService"
      uuid: "convertValueIfNecessary_conversionService1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionService"
      uuid: "convertValueIfNecessary_conversionService1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_convert1"
      valueType: "java.lang.String"
      uuid: "convertValueIfNecessary_object1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_resolveRequiredPlaceholders1"
      valueType: "java.lang.String"
      uuid: "resolveNestedPlaceholders_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.String"
      uuid: "uuid99"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_convert1"
      valueType: "java.lang.String"
      uuid: "convertValueIfNecessary_object1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: true
  - pathId: "path12"
    testPathName: "getPropertyWhenConfigurationPropertyIsNotNullAndCaughtExceptionAndValueIsNotNullAndResolveNestedPlaceholdersAndValueIns"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "17CC5E20918D54E7710C6124A0CF685C"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 4
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      valueUuid: "getProperty_string1"
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      valueUuid: "uuid100"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValueUuid: "getAttached_propertySource1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValueUuid: "getAttached_object1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      valueUuid: "getAttached_object1"
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValueUuid: "getAttached_boolean2"
        access: 0
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      valueUuid: "uuid102"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          valueUuid: "getProperty_string1"
        - name: "returnNullIfInvalid"
          valueUuid: "uuid101"
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValueUuid: "findPropertyValue_configurationPropertyName1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "91628CF59B9449022DBF2D9A27708068"
      index: 7
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "name"
          valueUuid: "findPropertyValue_configurationPropertyName1"
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValueUuid: "findPropertyValue_configurationProperty1"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "732C60509BD501F8FFD4AE2CE30DDB2D"
      index: 8
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "findPropertyValue_configurationProperty1"
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValueUuid: "findPropertyValue_object1"
        access: 1
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "9E907428E8496B66EF47C11C51870265"
      index: 9
      valueUuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          valueUuid: "getProperty_string1"
        - name: "targetValueType"
          valueUuid: "uuid103"
        - name: "resolveNestedPlaceholders"
          valueUuid: "uuid104"
        signature: "getProperty(String,Class,boolean): Object"
        returnValueUuid: "findPropertyValue_object2"
        access: 1
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "42095BA0498D4150013ADA3B58446212"
      index: 10
      valueUuid: "uuid106"
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          valueUuid: "uuid105"
        - name: "value"
          valueUuid: "findPropertyValue_object2"
        signature: "isAssignableValue(Class,String): boolean"
        returnValueUuid: "convertValueIfNecessary_boolean1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 11
      valueUuid: "findPropertyValue_object2"
    uuid: "6cf580f6-244b-31c9-a85d-34146976b29d"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "uuid100"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getAttached_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uuid102"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid101"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationProperty1-name"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "findPropertyValue_configurationProperty1-origin"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "findPropertyValue_configurationProperty1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationProperty1-name"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "findPropertyValue_configurationProperty1-origin"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "findPropertyValue_configurationProperty1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
      uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "findPropertyValue_object2"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uuid103"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid104"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "uuid106"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "convertValueIfNecessary_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.String"
      uuid: "uuid105"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "findPropertyValue_object2"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "findPropertyValue_object2"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path13"
    testPathName: "getPropertyWhenCaughtExceptionAndValueIsNotNullAndResolveNestedPlaceholdersAndValueInstanceOfString2"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "543BEAEFF0D4E79E607CAA7E49B477A6"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 4
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: true
    inputParameters: []
    uuid: "0db83024-4843-3dac-87fe-7876e1b03c8b"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path15"
    testPathName: "getPropertyWhenCaughtExceptionAndValueIsNotNullAndResolveNestedPlaceholdersAndValueNotInstanceOfString"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "AE875A824417A0E2AF06749B3358DD18"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 4
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: true
    inputParameters: []
    uuid: "2ae324e1-94ad-33a0-b2f3-cdae02f6b86c"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path16"
    testPathName: "getPropertyWhenConfigurationPropertyIsNullAndCaughtExceptionAndValueIsNotNullAndResolveNestedPlaceholdersAndValueNotIns"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "8113A842CDB45FE8E5E93AD486D92F00"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 4
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      valueUuid: "getProperty_string1"
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      valueUuid: "uuid125"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValueUuid: "getAttached_propertySource1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValueUuid: "getAttached_object1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      valueUuid: "getAttached_object1"
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValueUuid: "getAttached_boolean2"
        access: 0
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      valueUuid: "uuid127"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          valueUuid: "getProperty_string1"
        - name: "returnNullIfInvalid"
          valueUuid: "uuid126"
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValueUuid: "findPropertyValue_configurationPropertyName1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "D71B7699BBC49B2644208DD9984142F7"
      index: 7
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "name"
          valueUuid: "findPropertyValue_configurationPropertyName1"
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValueUuid: "findPropertyValue_configurationProperty1"
        access: 0
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "C190D236DC7E4569C9758F16110C64CB"
      index: 8
      valueUuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          valueUuid: "getProperty_string1"
        - name: "targetValueType"
          valueUuid: "uuid128"
        - name: "resolveNestedPlaceholders"
          valueUuid: "uuid129"
        signature: "getProperty(String,Class,boolean): Object"
        returnValueUuid: "findPropertyValue_object1"
        access: 1
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "F2620829253A8C2B5E882FFED1770FB9"
      index: 9
      valueUuid: "uuid131"
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          valueUuid: "uuid130"
        - name: "value"
          valueUuid: "findPropertyValue_object1"
        signature: "isAssignableValue(Class,Object): boolean"
        returnValueUuid: "convertValueIfNecessary_boolean1"
        access: 9
    - type: "STATIC"
      name: "DefaultConversionService"
      modelFingerprint: "7F5AE245D41FD0CC9CB0F9EFFB899CBB"
      index: 10
      valueUuid: "uuid132"
      methodExercised:
        target: "org.springframework.core.convert.support.DefaultConversionService"
        name: "getSharedInstance"
        parameters: []
        signature: "getSharedInstance(): ConversionService"
        returnValueUuid: "convertValueIfNecessary_conversionService1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "conversionServiceToUse"
      modelFingerprint: "51A5E2E611C5E08DCDD8A0A51760F18B"
      index: 11
      valueUuid: "convertValueIfNecessary_conversionService1"
      methodExercised:
        target: "conversionServiceToUse"
        name: "convert"
        parameters:
        - name: "source"
          valueUuid: "findPropertyValue_object1"
        - name: "targetType"
          valueUuid: "uuid133"
        signature: "convert(Object,Class): Object"
        returnValueUuid: "convertValueIfNecessary_object1"
        access: 1025
    - type: "RESULT"
      name: "result"
      modelFingerprint: "795515C54CB62B36F79A5D375B088A2A"
      index: 12
      valueUuid: "convertValueIfNecessary_object1"
    uuid: "d071d10f-388d-3270-b158-d9f291bc308a"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "uuid125"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getAttached_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uuid127"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid126"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "findPropertyValue_configurationProperty1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
      uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uuid128"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid129"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "uuid131"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "convertValueIfNecessary_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.String"
      uuid: "uuid130"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.support.DefaultConversionService"
      uuid: "uuid132"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionService"
      uuid: "convertValueIfNecessary_conversionService1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionService"
      uuid: "convertValueIfNecessary_conversionService1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_convert1"
      valueType: "java.lang.String"
      uuid: "convertValueIfNecessary_object1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.String"
      uuid: "uuid133"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_convert1"
      valueType: "java.lang.String"
      uuid: "convertValueIfNecessary_object1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: true
- method:
    name: "getProperty"
    signature: "getProperty(java.lang.String,java.lang.Class<java.lang.Object>) :\
      \ java.lang.Object"
    sourceCodeSignature: "T getProperty(String key, Class<T> targetValueType)"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "A6A2419BACD8E0CA2E27D5937D3AD45F"
  paths:
  - pathId: "path10"
    testPathName: "getProperty3WhenValueNotInstanceOfString"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "812BED6D22F75D047B068ACB7BA20C35"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "9b903dd4-d395-399a-bee2-31eb782c2b55"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path11"
    testPathName: "getProperty3WhenResolveNestedPlaceholdersAndValueNotInstanceOfString"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "F14A6F12756009361BD9F09B74E002DD"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      valueUuid: "getProperty_string1"
    - type: "INPUT"
      name: "targetValueType"
      modelFingerprint: "B1F38FCDE1091BB1509E59E765A25F3F"
      index: 3
      valueUuid: "getProperty_class1"
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "F8BBE02E8C3C2D24101ADC5CF4687CD9"
      index: 4
      valueUuid: "uuid139"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValueUuid: "getAttached_propertySource1"
        access: 8
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "C190D236DC7E4569C9758F16110C64CB"
      index: 5
      valueUuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          valueUuid: "getProperty_string1"
        - name: "targetValueType"
          valueUuid: "uuid140"
        - name: "resolveNestedPlaceholders"
          valueUuid: "uuid141"
        signature: "getProperty(String,Class,boolean): Object"
        returnValueUuid: "findPropertyValue_object1"
        access: 1
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "8A72DB73BD244704CE5F9833D01CF901"
      index: 6
      valueUuid: "uuid142"
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          valueUuid: "getProperty_class1"
        - name: "value"
          valueUuid: "findPropertyValue_object1"
        signature: "isAssignableValue(Class,Object): boolean"
        returnValueUuid: "convertValueIfNecessary_boolean1"
        access: 9
    - type: "STATIC"
      name: "DefaultConversionService"
      modelFingerprint: "7F5AE245D41FD0CC9CB0F9EFFB899CBB"
      index: 7
      valueUuid: "uuid143"
      methodExercised:
        target: "org.springframework.core.convert.support.DefaultConversionService"
        name: "getSharedInstance"
        parameters: []
        signature: "getSharedInstance(): ConversionService"
        returnValueUuid: "convertValueIfNecessary_conversionService1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "conversionServiceToUse"
      modelFingerprint: "8E9A9C424B00E012F33324F26B6986EC"
      index: 8
      valueUuid: "convertValueIfNecessary_conversionService1"
      methodExercised:
        target: "conversionServiceToUse"
        name: "convert"
        parameters:
        - name: "source"
          valueUuid: "findPropertyValue_object1"
        - name: "targetType"
          valueUuid: "getProperty_class1"
        signature: "convert(Object,Class): Object"
        returnValueUuid: "convertValueIfNecessary_object1"
        access: 1025
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7C973EAEEC332BFEC09E51528D07A6CE"
      index: 9
      valueUuid: "convertValueIfNecessary_object1"
    uuid: "0e3d4019-4e90-37a0-b32d-8bb73f4ba120"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "getProperty_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "uuid139"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
      uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uuid140"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid141"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "uuid142"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "convertValueIfNecessary_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "getProperty_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.support.DefaultConversionService"
      uuid: "uuid143"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionService"
      uuid: "convertValueIfNecessary_conversionService1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionService"
      uuid: "convertValueIfNecessary_conversionService1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "convertValueIfNecessary_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "getProperty_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "convertValueIfNecessary_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path1"
    testPathName: "getProperty3WhenValueIsNull"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "2C3FC3FDCAE06E1BDE3F0782BFFFB15D"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "128c6277-cbe0-3004-a881-91c6cd2caa00"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path7"
    testPathName: "getProperty3WhenConfigurationPropertyIsNullAndValueIsNull"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "FF9C270E5D012DE5FA9DCD3B5DDE6988"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      valueUuid: "getProperty_string1"
    - type: "INPUT"
      name: "targetValueType"
      modelFingerprint: "B1F38FCDE1091BB1509E59E765A25F3F"
      index: 3
      valueUuid: "getProperty_class1"
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 4
      valueUuid: "uuid147"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValueUuid: "getAttached_propertySource1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 5
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValueUuid: "getAttached_object1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 6
      valueUuid: "getAttached_object1"
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValueUuid: "getAttached_boolean2"
        access: 0
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 7
      valueUuid: "uuid149"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          valueUuid: "getProperty_string1"
        - name: "returnNullIfInvalid"
          valueUuid: "uuid148"
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValueUuid: "findPropertyValue_configurationPropertyName1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "D71B7699BBC49B2644208DD9984142F7"
      index: 8
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "name"
          valueUuid: "findPropertyValue_configurationPropertyName1"
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValueUuid: "findPropertyValue_configurationProperty1"
        access: 0
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7FF3E62C4C26664215CB4A88EF6B4C11"
      index: 9
      valueUuid: "getProperty_object1"
    uuid: "b983baf7-66fa-34cb-8458-6a130f93c4ea"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "getProperty_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "uuid147"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getAttached_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uuid149"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid148"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "findPropertyValue_configurationProperty1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "getProperty_object1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path9"
    testPathName: "getProperty3WhenValueIsNotNullAndResolveNestedPlaceholdersAndValueNotInstanceOfString"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "D455B8839A6E0D0646CF192310B7BBA8"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "69fc8f43-3c7c-378d-a3a0-e8c71225d661"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path12"
    testPathName: "getProperty3WhenCaughtExceptionAndValueIsNull"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "E8082948B7142807BA925562015D9D48"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 4
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      valueUuid: "getProperty_string1"
    - type: "INPUT"
      name: "targetValueType"
      modelFingerprint: "B1F38FCDE1091BB1509E59E765A25F3F"
      index: 3
      valueUuid: "getProperty_class1"
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 4
      valueUuid: "uuid155"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValueUuid: "getAttached_propertySource1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 5
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValueUuid: "getAttached_object1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 6
      valueUuid: "getAttached_object1"
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValueUuid: "getAttached_boolean2"
        access: 0
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 7
      valueUuid: "uuid157"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          valueUuid: "getProperty_string1"
        - name: "returnNullIfInvalid"
          valueUuid: "uuid156"
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValueUuid: "findPropertyValue_configurationPropertyName1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "91628CF59B9449022DBF2D9A27708068"
      index: 8
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "name"
          valueUuid: "findPropertyValue_configurationPropertyName1"
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValueUuid: "findPropertyValue_configurationProperty1"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "732C60509BD501F8FFD4AE2CE30DDB2D"
      index: 9
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "findPropertyValue_configurationProperty1"
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValueUuid: "findPropertyValue_object1"
        access: 1
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "C5C5A84F61540F499FBA49CA5496C716"
      index: 10
      valueUuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          valueUuid: "getProperty_string1"
        - name: "targetValueType"
          valueUuid: "uuid158"
        - name: "resolveNestedPlaceholders"
          valueUuid: "uuid159"
        signature: "getProperty(String,Class,boolean): Object"
        returnValueUuid: "findPropertyValue_object2"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7FF3E62C4C26664215CB4A88EF6B4C11"
      index: 11
      valueUuid: "getProperty_object1"
    uuid: "ddfae7d5-b8dd-383e-80db-fe19b964c210"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "getProperty_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "uuid155"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getAttached_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uuid157"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid156"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationProperty1-name"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "findPropertyValue_configurationProperty1-origin"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "findPropertyValue_configurationProperty1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationProperty1-name"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "findPropertyValue_configurationProperty1-origin"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "findPropertyValue_configurationProperty1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
      uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "findPropertyValue_object2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uuid158"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid159"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "getProperty_object1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path8"
    testPathName: "getProperty3WhenNameIsNullAndValueIsNotNullAndResolveNestedPlaceholdersAndValueNotInstanceOfString"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "8FFF06557B5E96D73D9173038C4D8D38"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "a1633900-7ebc-398a-8baf-0d31a8aafca2"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path5"
    testPathName: "getProperty3WhenValueInstanceOfString"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "15C0DFBFD6BD2F1EE98EF19E26FBB16C"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      valueUuid: "getProperty_string1"
    - type: "INPUT"
      name: "targetValueType"
      modelFingerprint: "B1F38FCDE1091BB1509E59E765A25F3F"
      index: 3
      valueUuid: "getProperty_class1"
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 4
      valueUuid: "uuid167"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValueUuid: "getAttached_propertySource1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 5
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValueUuid: "getAttached_object1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 6
      valueUuid: "getAttached_object1"
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValueUuid: "getAttached_boolean2"
        access: 0
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 7
      valueUuid: "uuid169"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          valueUuid: "getProperty_string1"
        - name: "returnNullIfInvalid"
          valueUuid: "uuid168"
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValueUuid: "findPropertyValue_configurationPropertyName1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "BF28454268A262DACD69C67D311ED376"
      index: 8
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "name"
          valueUuid: "findPropertyValue_configurationPropertyName1"
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValueUuid: "findPropertyValue_configurationProperty1"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "F49EAD8F10BC8F35A6BD3D5DD1577E5C"
      index: 9
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "findPropertyValue_configurationProperty1"
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValueUuid: "findPropertyValue_object1"
        access: 1
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "474E81A0A863FCA8651F3C92C7DF10C7"
      index: 10
      methodExercised:
        target: "target"
        name: "resolveRequiredPlaceholders"
        parameters:
        - name: "text"
          valueUuid: "findPropertyValue_object1"
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
        signature: "resolveRequiredPlaceholders(String): String throws java.lang.IllegalArgumentException"
        returnValueUuid: "resolveNestedPlaceholders_string1"
        access: 1
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "1468918BDA9B353F2664B339C15817B0"
      index: 11
      valueUuid: "uuid170"
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          valueUuid: "getProperty_class1"
        - name: "value"
          valueUuid: "resolveNestedPlaceholders_string1"
        signature: "isAssignableValue(Class,String): boolean"
        returnValueUuid: "convertValueIfNecessary_boolean1"
        access: 9
    - type: "STATIC"
      name: "DefaultConversionService"
      modelFingerprint: "7F5AE245D41FD0CC9CB0F9EFFB899CBB"
      index: 12
      valueUuid: "uuid171"
      methodExercised:
        target: "org.springframework.core.convert.support.DefaultConversionService"
        name: "getSharedInstance"
        parameters: []
        signature: "getSharedInstance(): ConversionService"
        returnValueUuid: "convertValueIfNecessary_conversionService1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "conversionServiceToUse"
      modelFingerprint: "4DDAA1E347D0E495595AB3B79A23C285"
      index: 13
      valueUuid: "convertValueIfNecessary_conversionService1"
      methodExercised:
        target: "conversionServiceToUse"
        name: "convert"
        parameters:
        - name: "source"
          valueUuid: "resolveNestedPlaceholders_string1"
        - name: "targetType"
          valueUuid: "getProperty_class1"
        signature: "convert(String,Class): Object"
        returnValueUuid: "convertValueIfNecessary_object1"
        access: 1025
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7C973EAEEC332BFEC09E51528D07A6CE"
      index: 14
      valueUuid: "convertValueIfNecessary_object1"
    uuid: "0106ccab-fbad-3458-85c9-aba9a897ea6d"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "getProperty_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "uuid167"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getAttached_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uuid169"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid168"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationProperty1-name"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "findPropertyValue_configurationProperty1-origin"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "findPropertyValue_configurationProperty1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationProperty1-name"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "findPropertyValue_configurationProperty1-origin"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "findPropertyValue_configurationProperty1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_resolveRequiredPlaceholders1"
      valueType: "java.lang.String"
      uuid: "resolveNestedPlaceholders_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "uuid170"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "convertValueIfNecessary_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "getProperty_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_resolveRequiredPlaceholders1"
      valueType: "java.lang.String"
      uuid: "resolveNestedPlaceholders_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.support.DefaultConversionService"
      uuid: "uuid171"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionService"
      uuid: "convertValueIfNecessary_conversionService1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionService"
      uuid: "convertValueIfNecessary_conversionService1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "convertValueIfNecessary_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_resolveRequiredPlaceholders1"
      valueType: "java.lang.String"
      uuid: "resolveNestedPlaceholders_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "getProperty_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "convertValueIfNecessary_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "getProperty3WhenResolveNestedPlaceholdersAndValueInstanceOfString"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "98728C5CA7788D14064EA77B66512B27"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      valueUuid: "getProperty_string1"
    - type: "INPUT"
      name: "targetValueType"
      modelFingerprint: "4BE5268FF8769F8EC1785171F7A99B18"
      index: 3
      valueUuid: "getProperty_class1"
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 4
      valueUuid: "uuid172"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValueUuid: "getAttached_propertySource1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 5
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValueUuid: "getAttached_object1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 6
      valueUuid: "getAttached_object1"
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValueUuid: "getAttached_boolean2"
        access: 0
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 7
      valueUuid: "uuid174"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          valueUuid: "getProperty_string1"
        - name: "returnNullIfInvalid"
          valueUuid: "uuid173"
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValueUuid: "findPropertyValue_configurationPropertyName1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "F3DD3AABD9C4C2B595EE147E291091AE"
      index: 8
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "name"
          valueUuid: "findPropertyValue_configurationPropertyName1"
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValueUuid: "findPropertyValue_configurationProperty1"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "7C568A072D65BA8DDCFDF25E430E2D74"
      index: 9
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "findPropertyValue_configurationProperty1"
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValueUuid: "findPropertyValue_object1"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 10
      valueUuid: "findPropertyValue_object1"
    uuid: "4be18f0e-fc19-36f7-bd30-a24284232024"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "getProperty_class1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "uuid172"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getAttached_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uuid174"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid173"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationProperty1-name"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: true
            explicitCastNeeded: false
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "findPropertyValue_configurationProperty1-origin"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "findPropertyValue_configurationProperty1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationProperty1-name"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: true
            explicitCastNeeded: false
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "findPropertyValue_configurationProperty1-origin"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "findPropertyValue_configurationProperty1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path4"
    testPathName: "getProperty3WhenValueIsNotNullAndResolveNestedPlaceholdersAndValueInstanceOfString"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "CB535BB76BAE4B9111909C9A7824AF39"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "c174a089-698b-3311-98bf-1631d8b7b176"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path3"
    testPathName: "getProperty3WhenConfigurationPropertyIsNotNullAndValueIsNotNullAndResolveNestedPlaceholdersAndValueInstanceOfString"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "FA9733945736E1A1EDF9B476CBE7CDD1"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      valueUuid: "getProperty_string1"
    - type: "INPUT"
      name: "targetValueType"
      modelFingerprint: "B1F38FCDE1091BB1509E59E765A25F3F"
      index: 3
      valueUuid: "getProperty_class1"
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 4
      valueUuid: "uuid180"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValueUuid: "getAttached_propertySource1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 5
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValueUuid: "getAttached_object1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 6
      valueUuid: "getAttached_object1"
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValueUuid: "getAttached_boolean2"
        access: 0
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 7
      valueUuid: "uuid182"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          valueUuid: "getProperty_string1"
        - name: "returnNullIfInvalid"
          valueUuid: "uuid181"
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValueUuid: "findPropertyValue_configurationPropertyName1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "F3DD3AABD9C4C2B595EE147E291091AE"
      index: 8
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "name"
          valueUuid: "findPropertyValue_configurationPropertyName1"
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValueUuid: "findPropertyValue_configurationProperty1"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "7C568A072D65BA8DDCFDF25E430E2D74"
      index: 9
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "findPropertyValue_configurationProperty1"
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValueUuid: "findPropertyValue_object1"
        access: 1
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "E52AF07887088A0175EE9520D625F721"
      index: 10
      valueUuid: "uuid183"
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          valueUuid: "getProperty_class1"
        - name: "value"
          valueUuid: "findPropertyValue_object1"
        signature: "isAssignableValue(Class,String): boolean"
        returnValueUuid: "convertValueIfNecessary_boolean1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 11
      valueUuid: "findPropertyValue_object1"
    uuid: "04a859b7-4ac2-370b-adbd-713d08e1fe8b"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "getProperty_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "uuid180"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getAttached_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uuid182"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid181"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationProperty1-name"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: true
            explicitCastNeeded: false
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "findPropertyValue_configurationProperty1-origin"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "findPropertyValue_configurationProperty1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationProperty1-name"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: true
            explicitCastNeeded: false
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "findPropertyValue_configurationProperty1-origin"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "findPropertyValue_configurationProperty1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "uuid183"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "convertValueIfNecessary_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "getProperty_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path6"
    testPathName: "getProperty3WhenConfigurationPropertyIsNotNullAndValueIsNotNullAndResolveNestedPlaceholdersAndValueNotInstanceOfString"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "877F2BA247128E263784DE7C68AF7B95"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "8c764453-be1c-336e-82c7-9c014864928c"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path15"
    testPathName: "getProperty3WhenCaughtExceptionAndValueIsNotNullAndResolveNestedPlaceholdersAndValueInstanceOfString"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "8874BB8778C7BD78CFCCB80B589DB733"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 4
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      valueUuid: "getProperty_string1"
    - type: "INPUT"
      name: "targetValueType"
      modelFingerprint: "B1F38FCDE1091BB1509E59E765A25F3F"
      index: 3
      valueUuid: "getProperty_class1"
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 4
      valueUuid: "uuid189"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValueUuid: "getAttached_propertySource1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 5
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValueUuid: "getAttached_object1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 6
      valueUuid: "getAttached_object1"
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValueUuid: "getAttached_boolean2"
        access: 0
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 7
      valueUuid: "uuid191"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          valueUuid: "getProperty_string1"
        - name: "returnNullIfInvalid"
          valueUuid: "uuid190"
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValueUuid: "findPropertyValue_configurationPropertyName1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "91628CF59B9449022DBF2D9A27708068"
      index: 8
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "name"
          valueUuid: "findPropertyValue_configurationPropertyName1"
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValueUuid: "findPropertyValue_configurationProperty1"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "732C60509BD501F8FFD4AE2CE30DDB2D"
      index: 9
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "findPropertyValue_configurationProperty1"
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValueUuid: "findPropertyValue_object1"
        access: 1
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "68455E475EC344268D69528353CBCB12"
      index: 10
      valueUuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          valueUuid: "getProperty_string1"
        - name: "targetValueType"
          valueUuid: "uuid192"
        - name: "resolveNestedPlaceholders"
          valueUuid: "uuid193"
        signature: "getProperty(String,Class,boolean): Object"
        returnValueUuid: "findPropertyValue_object2"
        access: 1
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "1468918BDA9B353F2664B339C15817B0"
      index: 11
      valueUuid: "uuid194"
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          valueUuid: "getProperty_class1"
        - name: "value"
          valueUuid: "findPropertyValue_object2"
        signature: "isAssignableValue(Class,String): boolean"
        returnValueUuid: "convertValueIfNecessary_boolean1"
        access: 9
    - type: "STATIC"
      name: "DefaultConversionService"
      modelFingerprint: "7F5AE245D41FD0CC9CB0F9EFFB899CBB"
      index: 12
      valueUuid: "uuid195"
      methodExercised:
        target: "org.springframework.core.convert.support.DefaultConversionService"
        name: "getSharedInstance"
        parameters: []
        signature: "getSharedInstance(): ConversionService"
        returnValueUuid: "convertValueIfNecessary_conversionService1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "conversionServiceToUse"
      modelFingerprint: "4DDAA1E347D0E495595AB3B79A23C285"
      index: 13
      valueUuid: "convertValueIfNecessary_conversionService1"
      methodExercised:
        target: "conversionServiceToUse"
        name: "convert"
        parameters:
        - name: "source"
          valueUuid: "findPropertyValue_object2"
        - name: "targetType"
          valueUuid: "getProperty_class1"
        signature: "convert(String,Class): Object"
        returnValueUuid: "convertValueIfNecessary_object1"
        access: 1025
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7C973EAEEC332BFEC09E51528D07A6CE"
      index: 14
      valueUuid: "convertValueIfNecessary_object1"
    uuid: "4eb45dcf-3e0f-3715-976d-c80efad0c4ce"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "getProperty_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "uuid189"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getAttached_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uuid191"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid190"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationProperty1-name"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "findPropertyValue_configurationProperty1-origin"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "findPropertyValue_configurationProperty1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationProperty1-name"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "findPropertyValue_configurationProperty1-origin"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "findPropertyValue_configurationProperty1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
      uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "findPropertyValue_object2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uuid192"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid193"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "uuid194"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "convertValueIfNecessary_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "getProperty_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "findPropertyValue_object2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.support.DefaultConversionService"
      uuid: "uuid195"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionService"
      uuid: "convertValueIfNecessary_conversionService1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionService"
      uuid: "convertValueIfNecessary_conversionService1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "convertValueIfNecessary_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "findPropertyValue_object2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "getProperty_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "convertValueIfNecessary_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path13"
    testPathName: "getProperty3WhenConfigurationPropertyIsNotNullAndCaughtExceptionAndValueIsNotNullAndResolveNestedPlaceholdersAndValueIn"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "E310161BA2B0BCEB18E5DF26326F2AA7"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 4
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      valueUuid: "getProperty_string1"
    - type: "INPUT"
      name: "targetValueType"
      modelFingerprint: "4BE5268FF8769F8EC1785171F7A99B18"
      index: 3
      valueUuid: "getProperty_class1"
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 4
      valueUuid: "uuid196"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValueUuid: "getAttached_propertySource1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 5
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValueUuid: "getAttached_object1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 6
      valueUuid: "getAttached_object1"
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValueUuid: "getAttached_boolean2"
        access: 0
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 7
      valueUuid: "uuid198"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          valueUuid: "getProperty_string1"
        - name: "returnNullIfInvalid"
          valueUuid: "uuid197"
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValueUuid: "findPropertyValue_configurationPropertyName1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "91628CF59B9449022DBF2D9A27708068"
      index: 8
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "name"
          valueUuid: "findPropertyValue_configurationPropertyName1"
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValueUuid: "findPropertyValue_configurationProperty1"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "732C60509BD501F8FFD4AE2CE30DDB2D"
      index: 9
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "findPropertyValue_configurationProperty1"
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValueUuid: "findPropertyValue_object1"
        access: 1
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "9E907428E8496B66EF47C11C51870265"
      index: 10
      valueUuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          valueUuid: "getProperty_string1"
        - name: "targetValueType"
          valueUuid: "uuid199"
        - name: "resolveNestedPlaceholders"
          valueUuid: "uuid200"
        signature: "getProperty(String,Class,boolean): Object"
        returnValueUuid: "findPropertyValue_object2"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 11
      valueUuid: "findPropertyValue_object2"
    uuid: "3381bc01-cc6f-3fb1-acc6-49d9032189b6"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "getProperty_class1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "uuid196"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getAttached_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uuid198"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid197"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationProperty1-name"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "findPropertyValue_configurationProperty1-origin"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "findPropertyValue_configurationProperty1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationProperty1-name"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "findPropertyValue_configurationProperty1-origin"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "findPropertyValue_configurationProperty1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
      uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "findPropertyValue_object2"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uuid199"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid200"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "findPropertyValue_object2"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path14"
    testPathName: "getProperty3WhenCaughtExceptionAndValueIsNotNullAndResolveNestedPlaceholdersAndValueInstanceOfString2"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "2695A8BCE03C13C467DABA420980D26E"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 4
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      valueUuid: "getProperty_string1"
    - type: "INPUT"
      name: "targetValueType"
      modelFingerprint: "B1F38FCDE1091BB1509E59E765A25F3F"
      index: 3
      valueUuid: "getProperty_class1"
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 4
      valueUuid: "uuid201"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValueUuid: "getAttached_propertySource1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 5
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValueUuid: "getAttached_object1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 6
      valueUuid: "getAttached_object1"
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValueUuid: "getAttached_boolean2"
        access: 0
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 7
      valueUuid: "uuid203"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          valueUuid: "getProperty_string1"
        - name: "returnNullIfInvalid"
          valueUuid: "uuid202"
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValueUuid: "findPropertyValue_configurationPropertyName1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "91628CF59B9449022DBF2D9A27708068"
      index: 8
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "name"
          valueUuid: "findPropertyValue_configurationPropertyName1"
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValueUuid: "findPropertyValue_configurationProperty1"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "732C60509BD501F8FFD4AE2CE30DDB2D"
      index: 9
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "findPropertyValue_configurationProperty1"
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValueUuid: "findPropertyValue_object1"
        access: 1
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "9E907428E8496B66EF47C11C51870265"
      index: 10
      valueUuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          valueUuid: "getProperty_string1"
        - name: "targetValueType"
          valueUuid: "uuid204"
        - name: "resolveNestedPlaceholders"
          valueUuid: "uuid205"
        signature: "getProperty(String,Class,boolean): Object"
        returnValueUuid: "findPropertyValue_object2"
        access: 1
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "E52AF07887088A0175EE9520D625F721"
      index: 11
      valueUuid: "uuid206"
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          valueUuid: "getProperty_class1"
        - name: "value"
          valueUuid: "findPropertyValue_object2"
        signature: "isAssignableValue(Class,String): boolean"
        returnValueUuid: "convertValueIfNecessary_boolean1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 12
      valueUuid: "findPropertyValue_object2"
    uuid: "137c4932-6bf0-3306-98f3-1a13f6dae120"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "getProperty_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "uuid201"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getAttached_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uuid203"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid202"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationProperty1-name"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "findPropertyValue_configurationProperty1-origin"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "findPropertyValue_configurationProperty1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationProperty1-name"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "findPropertyValue_configurationProperty1-origin"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "findPropertyValue_configurationProperty1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
      uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "findPropertyValue_object2"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uuid204"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid205"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "uuid206"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "convertValueIfNecessary_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "getProperty_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "findPropertyValue_object2"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "findPropertyValue_object2"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "getPropertyAsRawString"
    signature: "getPropertyAsRawString(java.lang.String) : java.lang.String"
    sourceCodeSignature: "String getPropertyAsRawString(String key)"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "28AE2C9D1C5D8999EF6C33F11C027021"
  paths:
  - pathId: "path7"
    testPathName: "getPropertyAsRawStringWhenNotResolveNestedPlaceholders"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "E25CE433FFAB5D684AAC71811BABD0DE"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "a42de2ba-769c-359f-bf5c-c8a2fe180f34"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path8"
    testPathName: "getPropertyAsRawStringWhenValueIsNotNullAndNotResolveNestedPlaceholders"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "2349D4232E153783C833131A5EA780E9"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      valueUuid: "getPropertyAsRawString_string1"
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "F8BBE02E8C3C2D24101ADC5CF4687CD9"
      index: 3
      valueUuid: "uuid214"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValueUuid: "getAttached_propertySource1"
        access: 8
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "C190D236DC7E4569C9758F16110C64CB"
      index: 4
      valueUuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          valueUuid: "getPropertyAsRawString_string1"
        - name: "targetValueType"
          valueUuid: "uuid215"
        - name: "resolveNestedPlaceholders"
          valueUuid: "uuid216"
        signature: "getProperty(String,Class,boolean): Object"
        returnValueUuid: "findPropertyValue_object1"
        access: 1
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "F2620829253A8C2B5E882FFED1770FB9"
      index: 5
      valueUuid: "uuid218"
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          valueUuid: "uuid217"
        - name: "value"
          valueUuid: "findPropertyValue_object1"
        signature: "isAssignableValue(Class,Object): boolean"
        returnValueUuid: "convertValueIfNecessary_boolean1"
        access: 9
    - type: "STATIC"
      name: "DefaultConversionService"
      modelFingerprint: "7F5AE245D41FD0CC9CB0F9EFFB899CBB"
      index: 6
      valueUuid: "uuid219"
      methodExercised:
        target: "org.springframework.core.convert.support.DefaultConversionService"
        name: "getSharedInstance"
        parameters: []
        signature: "getSharedInstance(): ConversionService"
        returnValueUuid: "convertValueIfNecessary_conversionService1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "conversionServiceToUse"
      modelFingerprint: "51A5E2E611C5E08DCDD8A0A51760F18B"
      index: 7
      valueUuid: "convertValueIfNecessary_conversionService1"
      methodExercised:
        target: "conversionServiceToUse"
        name: "convert"
        parameters:
        - name: "source"
          valueUuid: "findPropertyValue_object1"
        - name: "targetType"
          valueUuid: "uuid220"
        signature: "convert(Object,Class): Object"
        returnValueUuid: "convertValueIfNecessary_object1"
        access: 1025
    - type: "RESULT"
      name: "result"
      modelFingerprint: "795515C54CB62B36F79A5D375B088A2A"
      index: 8
      valueUuid: "convertValueIfNecessary_object1"
    uuid: "96526e58-f2a4-39cb-ae25-d7d769ae4d92"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getPropertyAsRawString_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "uuid214"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
      uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getPropertyAsRawString_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uuid215"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid216"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "uuid218"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "convertValueIfNecessary_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.String"
      uuid: "uuid217"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.support.DefaultConversionService"
      uuid: "uuid219"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionService"
      uuid: "convertValueIfNecessary_conversionService1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionService"
      uuid: "convertValueIfNecessary_conversionService1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_convert1"
      valueType: "java.lang.String"
      uuid: "convertValueIfNecessary_object1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.String"
      uuid: "uuid220"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_convert1"
      valueType: "java.lang.String"
      uuid: "convertValueIfNecessary_object1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: true
  - pathId: "path6"
    testPathName: "getPropertyAsRawStringWhenAttachedIsNullAndValueIsNotNullAndNotResolveNestedPlaceholders"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "E57CB0EDD33540101748B02D411B4A3C"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "f8f008d4-ff79-3725-aed6-f4b72b969c6c"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path1"
    testPathName: "getPropertyAsRawStringWhenValueIsNull"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "5E0DBA2D2F4A50D694AD42F87AF0DB62"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "4dbe4a50-c98e-38a6-b826-24ba1dc568b5"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path4"
    testPathName: "getPropertyAsRawStringWhenConfigurationPropertyIsNullAndValueIsNull"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "2545220A503387C2FE78AD185ACD26F0"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      valueUuid: "getPropertyAsRawString_string1"
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      valueUuid: "uuid231"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValueUuid: "getAttached_propertySource1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValueUuid: "getAttached_object1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      valueUuid: "getAttached_object1"
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValueUuid: "getAttached_boolean2"
        access: 0
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      valueUuid: "uuid233"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          valueUuid: "getPropertyAsRawString_string1"
        - name: "returnNullIfInvalid"
          valueUuid: "uuid232"
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValueUuid: "findPropertyValue_configurationPropertyName1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "D71B7699BBC49B2644208DD9984142F7"
      index: 7
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "name"
          valueUuid: "findPropertyValue_configurationPropertyName1"
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValueUuid: "findPropertyValue_configurationProperty1"
        access: 0
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8EDA3F2AE365AC99A4FDAA03D44C0B66"
      index: 8
      valueUuid: "getProperty_object1"
    uuid: "8178a25c-3642-3433-86f1-fb6c4cc7e472"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getPropertyAsRawString_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "uuid231"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getAttached_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uuid233"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getPropertyAsRawString_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid232"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "findPropertyValue_configurationProperty1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "getProperty_object1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: true
  - pathId: "path5"
    testPathName: "getPropertyAsRawStringWhenNameIsNullAndValueIsNotNullAndNotResolveNestedPlaceholders"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "C09E92E16E77C8B7A71791F4A1CF7585"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "87e91093-d355-3304-9567-78dfec2c8cc2"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path3"
    testPathName: "getPropertyAsRawStringWhenConfigurationPropertyIsNotNullAndValueIsNotNullAndNotResolveNestedPlaceholders"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "D38295CFD446909940F4226955764F9F"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      valueUuid: "getPropertyAsRawString_string1"
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      valueUuid: "uuid243"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValueUuid: "getAttached_propertySource1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValueUuid: "getAttached_object1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      valueUuid: "getAttached_object1"
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValueUuid: "getAttached_boolean2"
        access: 0
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      valueUuid: "uuid245"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          valueUuid: "getPropertyAsRawString_string1"
        - name: "returnNullIfInvalid"
          valueUuid: "uuid244"
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValueUuid: "findPropertyValue_configurationPropertyName1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "91628CF59B9449022DBF2D9A27708068"
      index: 7
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "name"
          valueUuid: "findPropertyValue_configurationPropertyName1"
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValueUuid: "findPropertyValue_configurationProperty1"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "732C60509BD501F8FFD4AE2CE30DDB2D"
      index: 8
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "findPropertyValue_configurationProperty1"
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValueUuid: "findPropertyValue_object1"
        access: 1
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "F2620829253A8C2B5E882FFED1770FB9"
      index: 9
      valueUuid: "uuid247"
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          valueUuid: "uuid246"
        - name: "value"
          valueUuid: "findPropertyValue_object1"
        signature: "isAssignableValue(Class,Object): boolean"
        returnValueUuid: "convertValueIfNecessary_boolean1"
        access: 9
    - type: "STATIC"
      name: "DefaultConversionService"
      modelFingerprint: "7F5AE245D41FD0CC9CB0F9EFFB899CBB"
      index: 10
      valueUuid: "uuid248"
      methodExercised:
        target: "org.springframework.core.convert.support.DefaultConversionService"
        name: "getSharedInstance"
        parameters: []
        signature: "getSharedInstance(): ConversionService"
        returnValueUuid: "convertValueIfNecessary_conversionService1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "conversionServiceToUse"
      modelFingerprint: "51A5E2E611C5E08DCDD8A0A51760F18B"
      index: 11
      valueUuid: "convertValueIfNecessary_conversionService1"
      methodExercised:
        target: "conversionServiceToUse"
        name: "convert"
        parameters:
        - name: "source"
          valueUuid: "findPropertyValue_object1"
        - name: "targetType"
          valueUuid: "uuid249"
        signature: "convert(Object,Class): Object"
        returnValueUuid: "convertValueIfNecessary_object1"
        access: 1025
    - type: "RESULT"
      name: "result"
      modelFingerprint: "795515C54CB62B36F79A5D375B088A2A"
      index: 12
      valueUuid: "convertValueIfNecessary_object1"
    uuid: "58557aca-035b-3c54-bf85-8473a7b90a3e"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getPropertyAsRawString_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "uuid243"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getAttached_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uuid245"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getPropertyAsRawString_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid244"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationProperty1-name"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "findPropertyValue_configurationProperty1-origin"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "findPropertyValue_configurationProperty1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationProperty1-name"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "findPropertyValue_configurationProperty1-origin"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "findPropertyValue_configurationProperty1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "uuid247"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "convertValueIfNecessary_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.String"
      uuid: "uuid246"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.support.DefaultConversionService"
      uuid: "uuid248"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionService"
      uuid: "convertValueIfNecessary_conversionService1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionService"
      uuid: "convertValueIfNecessary_conversionService1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "convertValueIfNecessary_object1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.String"
      uuid: "uuid249"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "convertValueIfNecessary_object1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: true
  - pathId: "path2"
    testPathName: "getPropertyAsRawStringWhenConfigurationPropertyIsNotNullAndValueIsNotNullAndNotResolveNestedPlaceholders2"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "54E1883D1F8D3F5AC698F1176554A248"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      valueUuid: "getPropertyAsRawString_string1"
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      valueUuid: "uuid250"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValueUuid: "getAttached_propertySource1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValueUuid: "getAttached_object1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      valueUuid: "getAttached_object1"
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValueUuid: "getAttached_boolean2"
        access: 0
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      valueUuid: "uuid252"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          valueUuid: "getPropertyAsRawString_string1"
        - name: "returnNullIfInvalid"
          valueUuid: "uuid251"
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValueUuid: "findPropertyValue_configurationPropertyName1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "F3DD3AABD9C4C2B595EE147E291091AE"
      index: 7
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "name"
          valueUuid: "findPropertyValue_configurationPropertyName1"
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValueUuid: "findPropertyValue_configurationProperty1"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "7C568A072D65BA8DDCFDF25E430E2D74"
      index: 8
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "findPropertyValue_configurationProperty1"
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValueUuid: "findPropertyValue_object1"
        access: 1
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "42095BA0498D4150013ADA3B58446212"
      index: 9
      valueUuid: "uuid254"
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          valueUuid: "uuid253"
        - name: "value"
          valueUuid: "findPropertyValue_object1"
        signature: "isAssignableValue(Class,String): boolean"
        returnValueUuid: "convertValueIfNecessary_boolean1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 10
      valueUuid: "findPropertyValue_object1"
    uuid: "9089bea0-bf63-3a30-b81e-574541a28fec"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getPropertyAsRawString_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "uuid250"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getAttached_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uuid252"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getPropertyAsRawString_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid251"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationProperty1-name"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "value1"
            valueType: "java.lang.String"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: true
            explicitCastNeeded: true
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "findPropertyValue_configurationProperty1-origin"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "findPropertyValue_configurationProperty1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationProperty1-name"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "value1"
            valueType: "java.lang.String"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: true
            explicitCastNeeded: true
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "findPropertyValue_configurationProperty1-origin"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "findPropertyValue_configurationProperty1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "value1"
      valueType: "java.lang.String"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "uuid254"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "convertValueIfNecessary_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.String"
      uuid: "uuid253"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "value1"
      valueType: "java.lang.String"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "value1"
      valueType: "java.lang.String"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: true
  - pathId: "path9"
    testPathName: "getPropertyAsRawStringWhenCaughtExceptionAndValueIsNull"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "64D4431C7C11893DAF2315496FFAE5E0"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 4
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      valueUuid: "getPropertyAsRawString_string1"
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      valueUuid: "uuid255"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValueUuid: "getAttached_propertySource1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValueUuid: "getAttached_object1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      valueUuid: "getAttached_object1"
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValueUuid: "getAttached_boolean2"
        access: 0
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      valueUuid: "uuid257"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          valueUuid: "getPropertyAsRawString_string1"
        - name: "returnNullIfInvalid"
          valueUuid: "uuid256"
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValueUuid: "findPropertyValue_configurationPropertyName1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "91628CF59B9449022DBF2D9A27708068"
      index: 7
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "name"
          valueUuid: "findPropertyValue_configurationPropertyName1"
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValueUuid: "findPropertyValue_configurationProperty1"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "732C60509BD501F8FFD4AE2CE30DDB2D"
      index: 8
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "findPropertyValue_configurationProperty1"
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValueUuid: "findPropertyValue_object1"
        access: 1
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "C5C5A84F61540F499FBA49CA5496C716"
      index: 9
      valueUuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          valueUuid: "getPropertyAsRawString_string1"
        - name: "targetValueType"
          valueUuid: "uuid258"
        - name: "resolveNestedPlaceholders"
          valueUuid: "uuid259"
        signature: "getProperty(String,Class,boolean): Object"
        returnValueUuid: "findPropertyValue_object2"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8EDA3F2AE365AC99A4FDAA03D44C0B66"
      index: 10
      valueUuid: "getProperty_object1"
    uuid: "5c4e4df6-d7b5-3443-ba18-431e3022d0dc"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getPropertyAsRawString_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "uuid255"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getAttached_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uuid257"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getPropertyAsRawString_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid256"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationProperty1-name"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "findPropertyValue_configurationProperty1-origin"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "findPropertyValue_configurationProperty1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationProperty1-name"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "findPropertyValue_configurationProperty1-origin"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "findPropertyValue_configurationProperty1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
      uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "findPropertyValue_object2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getPropertyAsRawString_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uuid258"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid259"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "getProperty_object1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: true
  - pathId: "path11"
    testPathName: "getPropertyAsRawStringWhenCaughtExceptionAndValueIsNotNullAndNotResolveNestedPlaceholders"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "DBAEFEA55B01BBA1E6B803611FF4903F"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 4
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      valueUuid: "getPropertyAsRawString_string1"
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      valueUuid: "uuid260"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValueUuid: "getAttached_propertySource1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValueUuid: "getAttached_object1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      valueUuid: "getAttached_object1"
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValueUuid: "getAttached_boolean2"
        access: 0
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      valueUuid: "uuid262"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          valueUuid: "getPropertyAsRawString_string1"
        - name: "returnNullIfInvalid"
          valueUuid: "uuid261"
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValueUuid: "findPropertyValue_configurationPropertyName1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "91628CF59B9449022DBF2D9A27708068"
      index: 7
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "name"
          valueUuid: "findPropertyValue_configurationPropertyName1"
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValueUuid: "findPropertyValue_configurationProperty1"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "732C60509BD501F8FFD4AE2CE30DDB2D"
      index: 8
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "findPropertyValue_configurationProperty1"
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValueUuid: "findPropertyValue_object1"
        access: 1
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "C190D236DC7E4569C9758F16110C64CB"
      index: 9
      valueUuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          valueUuid: "getPropertyAsRawString_string1"
        - name: "targetValueType"
          valueUuid: "uuid263"
        - name: "resolveNestedPlaceholders"
          valueUuid: "uuid264"
        signature: "getProperty(String,Class,boolean): Object"
        returnValueUuid: "findPropertyValue_object2"
        access: 1
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "F2620829253A8C2B5E882FFED1770FB9"
      index: 10
      valueUuid: "uuid266"
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          valueUuid: "uuid265"
        - name: "value"
          valueUuid: "findPropertyValue_object2"
        signature: "isAssignableValue(Class,Object): boolean"
        returnValueUuid: "convertValueIfNecessary_boolean1"
        access: 9
    - type: "STATIC"
      name: "DefaultConversionService"
      modelFingerprint: "7F5AE245D41FD0CC9CB0F9EFFB899CBB"
      index: 11
      valueUuid: "uuid267"
      methodExercised:
        target: "org.springframework.core.convert.support.DefaultConversionService"
        name: "getSharedInstance"
        parameters: []
        signature: "getSharedInstance(): ConversionService"
        returnValueUuid: "convertValueIfNecessary_conversionService1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "conversionServiceToUse"
      modelFingerprint: "51A5E2E611C5E08DCDD8A0A51760F18B"
      index: 12
      valueUuid: "convertValueIfNecessary_conversionService1"
      methodExercised:
        target: "conversionServiceToUse"
        name: "convert"
        parameters:
        - name: "source"
          valueUuid: "findPropertyValue_object2"
        - name: "targetType"
          valueUuid: "uuid268"
        signature: "convert(Object,Class): Object"
        returnValueUuid: "convertValueIfNecessary_object1"
        access: 1025
    - type: "RESULT"
      name: "result"
      modelFingerprint: "795515C54CB62B36F79A5D375B088A2A"
      index: 13
      valueUuid: "convertValueIfNecessary_object1"
    uuid: "4ab0aaa3-6bea-38fa-9c21-f244d7e9c6a0"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getPropertyAsRawString_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "uuid260"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getAttached_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uuid262"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getPropertyAsRawString_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid261"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationProperty1-name"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "findPropertyValue_configurationProperty1-origin"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "findPropertyValue_configurationProperty1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationProperty1-name"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "findPropertyValue_configurationProperty1-origin"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "findPropertyValue_configurationProperty1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
      uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "findPropertyValue_object2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getPropertyAsRawString_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uuid263"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid264"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "uuid266"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "convertValueIfNecessary_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.String"
      uuid: "uuid265"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "findPropertyValue_object2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.support.DefaultConversionService"
      uuid: "uuid267"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionService"
      uuid: "convertValueIfNecessary_conversionService1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionService"
      uuid: "convertValueIfNecessary_conversionService1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_convert1"
      valueType: "java.lang.String"
      uuid: "convertValueIfNecessary_object1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "findPropertyValue_object2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.String"
      uuid: "uuid268"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_convert1"
      valueType: "java.lang.String"
      uuid: "convertValueIfNecessary_object1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: true
  - pathId: "path10"
    testPathName: "getPropertyAsRawStringWhenConfigurationPropertyIsNotNullAndCaughtExceptionAndValueIsNotNullAndNotResolveNestedPlacehold"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "A23D3EA07DE14EEBA41510A3A8469011"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 4
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      valueUuid: "getPropertyAsRawString_string1"
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      valueUuid: "uuid269"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValueUuid: "getAttached_propertySource1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValueUuid: "getAttached_object1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      valueUuid: "getAttached_object1"
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValueUuid: "getAttached_boolean2"
        access: 0
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      valueUuid: "uuid271"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          valueUuid: "getPropertyAsRawString_string1"
        - name: "returnNullIfInvalid"
          valueUuid: "uuid270"
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValueUuid: "findPropertyValue_configurationPropertyName1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "91628CF59B9449022DBF2D9A27708068"
      index: 7
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "name"
          valueUuid: "findPropertyValue_configurationPropertyName1"
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValueUuid: "findPropertyValue_configurationProperty1"
        access: 0
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "732C60509BD501F8FFD4AE2CE30DDB2D"
      index: 8
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "findPropertyValue_configurationProperty1"
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValueUuid: "findPropertyValue_object1"
        access: 1
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "9E907428E8496B66EF47C11C51870265"
      index: 9
      valueUuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          valueUuid: "getPropertyAsRawString_string1"
        - name: "targetValueType"
          valueUuid: "uuid272"
        - name: "resolveNestedPlaceholders"
          valueUuid: "uuid273"
        signature: "getProperty(String,Class,boolean): Object"
        returnValueUuid: "findPropertyValue_object2"
        access: 1
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "42095BA0498D4150013ADA3B58446212"
      index: 10
      valueUuid: "uuid275"
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          valueUuid: "uuid274"
        - name: "value"
          valueUuid: "findPropertyValue_object2"
        signature: "isAssignableValue(Class,String): boolean"
        returnValueUuid: "convertValueIfNecessary_boolean1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 11
      valueUuid: "findPropertyValue_object2"
    uuid: "d8e95d18-a74a-3b58-b7a9-c72791ba3814"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getPropertyAsRawString_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "uuid269"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getAttached_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uuid271"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getPropertyAsRawString_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid270"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationProperty1-name"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "findPropertyValue_configurationProperty1-origin"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "findPropertyValue_configurationProperty1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationProperty1-name"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "findPropertyValue_configurationProperty1-origin"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "findPropertyValue_configurationProperty1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
      uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "findPropertyValue_object2"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getPropertyAsRawString_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uuid272"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid273"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "uuid275"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "convertValueIfNecessary_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.String"
      uuid: "uuid274"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "findPropertyValue_object2"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "findPropertyValue_object2"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: true
  - pathId: "path12"
    testPathName: "getPropertyAsRawStringWhenConfigurationPropertyIsNullAndCaughtExceptionAndValueIsNotNullAndNotResolveNestedPlaceholders"
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    modelFingerprint: "B99EEF20569C92BE321A79CB8E86A561"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 4
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      valueUuid: "getPropertyAsRawString_string1"
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      valueUuid: "uuid276"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValueUuid: "getAttached_propertySource1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValueUuid: "getAttached_object1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      valueUuid: "getAttached_object1"
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          valueUuid: "<init>_mutablePropertySources1"
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValueUuid: "getAttached_boolean2"
        access: 0
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      valueUuid: "uuid278"
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          valueUuid: "getPropertyAsRawString_string1"
        - name: "returnNullIfInvalid"
          valueUuid: "uuid277"
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValueUuid: "findPropertyValue_configurationPropertyName1"
        access: 8
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "D71B7699BBC49B2644208DD9984142F7"
      index: 7
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "getAttached_propertySource1"
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "name"
          valueUuid: "findPropertyValue_configurationPropertyName1"
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValueUuid: "findPropertyValue_configurationProperty1"
        access: 0
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "C190D236DC7E4569C9758F16110C64CB"
      index: 8
      valueUuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          valueUuid: "getPropertyAsRawString_string1"
        - name: "targetValueType"
          valueUuid: "uuid279"
        - name: "resolveNestedPlaceholders"
          valueUuid: "uuid280"
        signature: "getProperty(String,Class,boolean): Object"
        returnValueUuid: "findPropertyValue_object1"
        access: 1
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "F2620829253A8C2B5E882FFED1770FB9"
      index: 9
      valueUuid: "uuid282"
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          valueUuid: "uuid281"
        - name: "value"
          valueUuid: "findPropertyValue_object1"
        signature: "isAssignableValue(Class,Object): boolean"
        returnValueUuid: "convertValueIfNecessary_boolean1"
        access: 9
    - type: "STATIC"
      name: "DefaultConversionService"
      modelFingerprint: "7F5AE245D41FD0CC9CB0F9EFFB899CBB"
      index: 10
      valueUuid: "uuid283"
      methodExercised:
        target: "org.springframework.core.convert.support.DefaultConversionService"
        name: "getSharedInstance"
        parameters: []
        signature: "getSharedInstance(): ConversionService"
        returnValueUuid: "convertValueIfNecessary_conversionService1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "conversionServiceToUse"
      modelFingerprint: "51A5E2E611C5E08DCDD8A0A51760F18B"
      index: 11
      valueUuid: "convertValueIfNecessary_conversionService1"
      methodExercised:
        target: "conversionServiceToUse"
        name: "convert"
        parameters:
        - name: "source"
          valueUuid: "findPropertyValue_object1"
        - name: "targetType"
          valueUuid: "uuid284"
        signature: "convert(Object,Class): Object"
        returnValueUuid: "convertValueIfNecessary_object1"
        access: 1025
    - type: "RESULT"
      name: "result"
      modelFingerprint: "795515C54CB62B36F79A5D375B088A2A"
      index: 12
      valueUuid: "convertValueIfNecessary_object1"
    uuid: "acf7beb5-251a-3524-99f1-c4f065269f55"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getPropertyAsRawString_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "uuid276"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
      uuid: "getAttached_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getAttached_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "<init>_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "uuid278"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getPropertyAsRawString_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid277"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
      uuid: "getAttached_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "findPropertyValue_configurationProperty1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "findPropertyValue_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
      uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "getPropertyAsRawString_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uuid279"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid280"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "uuid282"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "convertValueIfNecessary_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.String"
      uuid: "uuid281"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.support.DefaultConversionService"
      uuid: "uuid283"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionService"
      uuid: "convertValueIfNecessary_conversionService1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionService"
      uuid: "convertValueIfNecessary_conversionService1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_convert1"
      valueType: "java.lang.String"
      uuid: "convertValueIfNecessary_object1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "findPropertyValue_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.String"
      uuid: "uuid284"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_convert1"
      valueType: "java.lang.String"
      uuid: "convertValueIfNecessary_object1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: true
