---
modelFingerprint: "F8B8635330E918EEBAA2DD00CF6DF14C"
methods:
- method:
    name: "containsProperty"
    returnType: "boolean"
    signature: "containsProperty(java.lang.String) : boolean"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "6D98DBEA1335BCBFB2BE4FCA953260E4"
    parametersTypes:
    - "java.lang.String"
  paths:
  - pathId: "path6"
    pathIdForUser: "path1"
    testPathName: "containsPropertyWhenThisDefaultResolverNotContainsPropertyKey"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "1A257C549AC52870570AFE4D92415EC7"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "e3973812-d04c-3348-971a-c748be410432"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "defaultResolver"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.containsProperty(key);"
      lineNumber: 55
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: containsProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path7"
    pathIdForUser: "path2"
    testPathName: "containsPropertyWhenAttachedIsNullAndThisDefaultResolverNotContainsPropertyKey"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "10F1623C58A961C81C84E23AAFA743E9"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "containsProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "F8BBE02E8C3C2D24101ADC5CF4687CD9"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "NULL"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "FD790F4558AE4FCE6B7DD99D467A0331"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.defaultResolver"
        name: "containsProperty"
        parameters:
        - name: "propertySource"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "containsProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "containsProperty(String): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          valueType: "boolean"
          uuid: "containsProperty_boolean1"
          fixed: true
          equalsMethodPresent: true
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3A21543F56248AC92654D6E439128AED"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: false
        valueType: "boolean"
        uuid: "containsProperty_boolean1"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "3330932b-5c8c-39b9-a6c0-b88cb5f4ebae"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "defaultResolver"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.containsProperty(key);"
      lineNumber: 55
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: containsProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
  - pathId: "path5"
    pathIdForUser: "path3"
    testPathName: "containsPropertyWhenSpringSourceNotIsUsingSourcesThisPropertySourcesAndAttachedIsNullAndThisDefaultResolverNotContainsP"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "0E42855394B37565C8A057AEEA288091"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "e560b0f2-d2a3-333e-91d1-ecb3dfe514b4"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "defaultResolver"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.containsProperty(key);"
      lineNumber: 55
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: containsProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path1"
    pathIdForUser: "path4"
    testPathName: "containsPropertyWhenAttachedFindConfigurationPropertyNameIsNotNull"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "6D03A018A8B0F2E08D64FD76FEA12F85"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "containsProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "containsProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "containsProperty_configurationPropertyName1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "550F01464922440C2833A20D02293E6E"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 1
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "configurationProperty"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "containsProperty_configurationPropertyName1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "containsProperty_configurationProperty1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "753659628F1B3F179A2EF0629F555437"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: true
        valueType: "boolean"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "c0e9bb19-8da4-3906-bbef-9c8c866ea231"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path2"
    pathIdForUser: "path5"
    testPathName: "containsPropertyWhenAttachedFindConfigurationPropertyNameIsNull"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "6B74A8BD56E67AA2EE15DC03763FA8C6"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "containsProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "containsProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "containsProperty_configurationPropertyName1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "8E406A6028AD840881AFC313D5BD36CD"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 1
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "configurationProperty"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "containsProperty_configurationPropertyName1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValue:
          sapientType: "NULL"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "containsProperty_configurationProperty1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3A21543F56248AC92654D6E439128AED"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: false
        valueType: "boolean"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "5d86fb9f-75bd-3848-9b65-f3a24d29b0d0"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path3"
    pathIdForUser: "path6"
    testPathName: "containsPropertyWhenThisDefaultResolverContainsPropertyKey"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "29F84C3F95E57B4154E24826B87785B7"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "containsProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "EC3E7B65C53A9FA458FD333C8632BBA3"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "containsProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "NULL"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "containsProperty_configurationPropertyName1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "BAFAB6A7360B37818493642B7948289E"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.defaultResolver"
        name: "containsProperty"
        parameters:
        - name: "propertySource"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "containsProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "containsProperty(String): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          valueType: "boolean"
          uuid: "containsProperty_boolean1"
          fixed: true
          equalsMethodPresent: true
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "753659628F1B3F179A2EF0629F555437"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: true
        valueType: "boolean"
        uuid: "containsProperty_boolean1"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "c519a802-bafd-336d-abd2-40264828dd8d"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "defaultResolver"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.containsProperty(key);"
      lineNumber: 55
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: containsProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
  - pathId: "path4"
    pathIdForUser: "path7"
    testPathName: "containsPropertyWhenNameIsNullAndThisDefaultResolverNotContainsPropertyKey"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "65E7F787381FFF455832D44CFFE2A32F"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "73120fef-9f43-3b35-96c8-da1d1e63e112"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "defaultResolver"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.containsProperty(key);"
      lineNumber: 55
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: containsProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path8"
    pathIdForUser: "path8"
    testPathName: "containsPropertyWhenCaughtExceptionAndThisDefaultResolverContainsPropertyKey"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "3501E0BA2F0B699FD8D518C1B380C473"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "containsProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "containsProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "containsProperty_configurationPropertyName1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "550F01464922440C2833A20D02293E6E"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 1
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "configurationProperty"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "containsProperty_configurationPropertyName1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "containsProperty_configurationProperty1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "BAFAB6A7360B37818493642B7948289E"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.defaultResolver"
        name: "containsProperty"
        parameters:
        - name: "propertySource"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "containsProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "containsProperty(String): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          valueType: "boolean"
          uuid: "containsProperty_boolean1"
          fixed: true
          equalsMethodPresent: true
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "753659628F1B3F179A2EF0629F555437"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: true
        valueType: "boolean"
        uuid: "containsProperty_boolean1"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "abf2f751-2d8d-328b-b876-1d028f927b94"
    deleted: false
    disabled: false
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "defaultResolver"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.containsProperty(key);"
      lineNumber: 55
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: containsProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path9"
    pathIdForUser: "path9"
    testPathName: "containsPropertyWhenCaughtExceptionAndThisDefaultResolverNotContainsPropertyKey"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "7F03915ABAFE9E8B4063FD8CDBECF57F"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "containsProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "containsProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "containsProperty_configurationPropertyName1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "550F01464922440C2833A20D02293E6E"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 1
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "configurationProperty"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "containsProperty_configurationPropertyName1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "containsProperty_configurationProperty1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "FD790F4558AE4FCE6B7DD99D467A0331"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.defaultResolver"
        name: "containsProperty"
        parameters:
        - name: "propertySource"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "containsProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "containsProperty(String): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          valueType: "boolean"
          uuid: "containsProperty_boolean1"
          fixed: true
          equalsMethodPresent: true
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3A21543F56248AC92654D6E439128AED"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: false
        valueType: "boolean"
        uuid: "containsProperty_boolean1"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "73c17d9a-4743-3423-a4c5-31860de55d0d"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "defaultResolver"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.containsProperty(key);"
      lineNumber: 55
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: containsProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
- method:
    name: "getProperty"
    returnType: "java.lang.String"
    signature: "getProperty(java.lang.String) : java.lang.String"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "5390A2F13C4EE9CBF8244F733C09041A"
    parametersTypes:
    - "java.lang.String"
  paths:
  - pathId: "path9"
    pathIdForUser: "path1"
    testPathName: "getPropertyWhenValueNotInstanceOfString"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "047900AEE067BB0A72A87E1AE9840754"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "eed95331-3cf3-3d8e-bb82-f774f7d5f4ae"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path10"
    pathIdForUser: "path2"
    testPathName: "getPropertyWhenResolveNestedPlaceholdersAndValueNotInstanceOfString"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "96999A348165BABE48DF049C24301C39"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "getProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "F8BBE02E8C3C2D24101ADC5CF4687CD9"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "NULL"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "C190D236DC7E4569C9758F16110C64CB"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "targetValueType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolveNestedPlaceholders"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getProperty(String,Class,boolean): Object"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "F2620829253A8C2B5E882FFED1770FB9"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.ClassUtils"
        uuid: "org.springframework.util.ClassUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isAssignableValue(Class,Object): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "convertValueIfNecessary_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "DefaultConversionService"
      modelFingerprint: "7F5AE245D41FD0CC9CB0F9EFFB899CBB"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.core.convert.support.DefaultConversionService"
        uuid: "org.springframework.core.convert.support.DefaultConversionService"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.core.convert.support.DefaultConversionService"
        name: "getSharedInstance"
        parameters: []
        signature: "getSharedInstance(): ConversionService"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "convertValueIfNecessary_conversionService1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "conversionServiceToUse"
      modelFingerprint: "911836AEC472DB806EDDEF133BDC2D3D"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.core.convert.ConversionService"
        uuid: "convertValueIfNecessary_conversionService1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "conversionServiceToUse"
        name: "convert"
        parameters:
        - name: "arg0"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "arg1"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "convert(Object,Class): Object"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: "return_of_convert1"
          suggestedContent: !<method_return_from_value>
            target: "java.lang.Object"
            localVariableValue:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.convert.ConversionService"
              uuid: "convertValueIfNecessary_conversionService1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
            methodParameters:
            - name: "arg0"
              value:
                sapientType: "UNKNOWN"
                suggestedContent: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                valueType: "java.lang.Object"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "arg1"
              value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "java.lang.String"
                valueType: "java.lang.Class"
                genericValueType: "java.lang.String"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
            methodName: "convert"
          valueType: "java.lang.String"
          uuid: "convertValueIfNecessary_object1"
          fixed: false
          equalsMethodPresent: true
          explicitCastNeeded: true
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "376A6723B4DDD0B95034EFCBB6F43238"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "return_of_convert1"
        suggestedContent: !<method_return_from_value>
          target: "java.lang.Object"
          localVariableValue:
            sapientType: "UNKNOWN"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "convertValueIfNecessary_conversionService1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          methodParameters:
          - name: "arg0"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.lang.Object"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "arg1"
            value:
              sapientType: "CLASS"
              content: !<regular>
                value: "java.lang.String"
              valueType: "java.lang.Class"
              genericValueType: "java.lang.String"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          methodName: "convert"
        valueType: "java.lang.String"
        uuid: "convertValueIfNecessary_object1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: true
      staticReadMethodForField: false
      filledByUser: false
    uuid: "dc9fbe4a-8d57-3691-ae58-7bae70fbc30d"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
  - pathId: "path1"
    pathIdForUser: "path3"
    testPathName: "getPropertyWhenValueIsNull"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "C7153996F437495A05F5042620D3ECEA"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "d6236397-4e1a-36e6-ac2d-794b7507b136"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path6"
    pathIdForUser: "path4"
    testPathName: "getPropertyWhenConfigurationPropertyIsNullAndValueIsNull"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "78D88FF57E6565CA00F461EFAB4D3374"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "getProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "findPropertyValue_configurationPropertyName1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "8E406A6028AD840881AFC313D5BD36CD"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "configurationProperty"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationPropertyName1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValue:
          sapientType: "NULL"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "findPropertyValue_configurationProperty1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8EDA3F2AE365AC99A4FDAA03D44C0B66"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "NULL"
        valueType: "java.lang.String"
        uuid: "getProperty_object1"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: true
      staticReadMethodForField: false
      filledByUser: false
    uuid: "97ce597c-91ee-34da-bc91-30b57e73d393"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path8"
    pathIdForUser: "path5"
    testPathName: "getPropertyWhenValueIsNotNullAndResolveNestedPlaceholdersAndValueNotInstanceOfString"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "2A846C870E67F950AF6B3D2F9BA0210D"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "84ecefbc-817e-39f1-acfc-76e69cdf57d9"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path11"
    pathIdForUser: "path6"
    testPathName: "getPropertyWhenCaughtExceptionAndValueIsNull"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "81E2789801A055FC09B4154B7F882FC5"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 4
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "getProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "findPropertyValue_configurationPropertyName1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "EBE12C5BCB8EBB2512515437B95035FD"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "configurationProperty"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationPropertyName1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                suggestedContent: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                valueType: "java.lang.Object"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "UNKNOWN"
                suggestedContent: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                valueType: "java.lang.Object"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "findPropertyValue_configurationProperty1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "732C60509BD501F8FFD4AE2CE30DDB2D"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.lang.Object"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.lang.Object"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        uuid: "findPropertyValue_configurationProperty1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "C5C5A84F61540F499FBA49CA5496C716"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "targetValueType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolveNestedPlaceholders"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getProperty(String,Class,boolean): Object"
        returnValue:
          sapientType: "NULL"
          valueType: "java.lang.Object"
          uuid: "findPropertyValue_object2"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8EDA3F2AE365AC99A4FDAA03D44C0B66"
      index: 10
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "NULL"
        valueType: "java.lang.String"
        uuid: "getProperty_object1"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: true
      staticReadMethodForField: false
      filledByUser: false
    uuid: "fef8509b-1159-33de-baa3-53aa2b22b647"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
  - pathId: "path7"
    pathIdForUser: "path7"
    testPathName: "getPropertyWhenNameIsNullAndValueIsNotNullAndResolveNestedPlaceholdersAndValueNotInstanceOfString"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "2488AA28B61BB2CA1F114AC7CB68411D"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "c753add7-ebf7-38fa-ae6c-f011cb71cf4a"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path4"
    pathIdForUser: "path8"
    testPathName: "getPropertyWhenValueInstanceOfString"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "D2DE95D5BE453C7E24EB21FEC5B8C5DA"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "getProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "findPropertyValue_configurationPropertyName1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "1DFE62E4C87144816BEC9C5663CD1BF5"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "configurationProperty"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationPropertyName1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "A"
                suggestedContent: !<regular>
                  value: "A"
                valueType: "java.lang.String"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "BASIC"
                suggestedContent: !<regular>
                  value: "A"
                valueType: "java.lang.String"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "findPropertyValue_configurationProperty1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "F49EAD8F10BC8F35A6BD3D5DD1577E5C"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "A"
              suggestedContent: !<regular>
                value: "A"
              valueType: "java.lang.String"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: "A"
              valueType: "java.lang.String"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        uuid: "findPropertyValue_configurationProperty1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: "A"
          suggestedContent: !<regular>
            value: "A"
          valueType: "java.lang.String"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "474E81A0A863FCA8651F3C92C7DF10C7"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "resolveRequiredPlaceholders"
        parameters:
        - name: "text"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            suggestedContent: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
        signature: "resolveRequiredPlaceholders(String): String throws java.lang.IllegalArgumentException"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: "return_of_resolveRequiredPlaceholders1"
          valueType: "java.lang.String"
          uuid: "resolveNestedPlaceholders_string1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "E07612358CD8AA95D9240A5C5742B20E"
      index: 10
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.ClassUtils"
        uuid: "org.springframework.util.ClassUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_resolveRequiredPlaceholders1"
            valueType: "java.lang.String"
            uuid: "resolveNestedPlaceholders_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isAssignableValue(Class,String): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "convertValueIfNecessary_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "DefaultConversionService"
      modelFingerprint: "7F5AE245D41FD0CC9CB0F9EFFB899CBB"
      index: 11
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.core.convert.support.DefaultConversionService"
        uuid: "org.springframework.core.convert.support.DefaultConversionService"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.core.convert.support.DefaultConversionService"
        name: "getSharedInstance"
        parameters: []
        signature: "getSharedInstance(): ConversionService"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "convertValueIfNecessary_conversionService1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "conversionServiceToUse"
      modelFingerprint: "25F5FBB008A2F783E8463FAB6051B3DC"
      index: 12
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.core.convert.ConversionService"
        uuid: "convertValueIfNecessary_conversionService1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "conversionServiceToUse"
        name: "convert"
        parameters:
        - name: "arg0"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_resolveRequiredPlaceholders1"
            valueType: "java.lang.String"
            uuid: "resolveNestedPlaceholders_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "arg1"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "convert(String,Class): Object"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: "return_of_convert1"
          suggestedContent: !<regular>
            value: "return_of_convert1"
          valueType: "java.lang.String"
          uuid: "convertValueIfNecessary_object1"
          fixed: false
          equalsMethodPresent: true
          explicitCastNeeded: true
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "88E3E78CA3F3BD231B348655D9FF550C"
      index: 13
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "return_of_convert1"
        suggestedContent: !<regular>
          value: "return_of_convert1"
        valueType: "java.lang.String"
        uuid: "convertValueIfNecessary_object1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: true
      staticReadMethodForField: false
      filledByUser: false
    uuid: "7ac2ea26-3a82-3f8b-9802-1c527554ec2d"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path2"
    pathIdForUser: "path9"
    testPathName: "getPropertyWhenResolveNestedPlaceholdersAndValueInstanceOfString"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "7A81B9285263CC2282403E524BFC9471"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "getProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "findPropertyValue_configurationPropertyName1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "10E497047B78CECC1A70DA049A50864F"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "configurationProperty"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationPropertyName1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: ""
                suggestedContent: !<regular>
                  value: ""
                valueType: "java.lang.String"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: true
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "BASIC"
                suggestedContent: !<regular>
                  value: ""
                valueType: "java.lang.String"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: true
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "findPropertyValue_configurationProperty1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "7C568A072D65BA8DDCFDF25E430E2D74"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: ""
              suggestedContent: !<regular>
                value: ""
              valueType: "java.lang.String"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: true
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: ""
              valueType: "java.lang.String"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: true
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        uuid: "findPropertyValue_configurationProperty1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: ""
          suggestedContent: !<regular>
            value: ""
          valueType: "java.lang.String"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: true
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "42095BA0498D4150013ADA3B58446212"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.ClassUtils"
        uuid: "org.springframework.util.ClassUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            suggestedContent: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isAssignableValue(Class,String): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "convertValueIfNecessary_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 10
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: ""
        suggestedContent: !<regular>
          value: ""
        valueType: "java.lang.String"
        uuid: "findPropertyValue_object1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "06cfd8ef-1ec6-33fa-954d-f1efeb038665"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path3"
    pathIdForUser: "path10"
    testPathName: "getPropertyWhenValueIsNotNullAndResolveNestedPlaceholdersAndValueInstanceOfString"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "A6BA0C8EF83F1B08322EC0F8E31EFAE7"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "20eae185-a80e-301f-9fc4-a7ca5e9fc596"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path5"
    pathIdForUser: "path11"
    testPathName: "getPropertyWhenConfigurationPropertyIsNotNullAndValueIsNotNullAndResolveNestedPlaceholdersAndValueNotInstanceOfString"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "DD2C36A7DFA0C86E6F58C5033B850EE4"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "88327613-4690-302d-a67c-16f55cbddd1b"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path14"
    pathIdForUser: "path12"
    testPathName: "getPropertyWhenCaughtExceptionAndValueIsNotNullAndResolveNestedPlaceholdersAndValueInstanceOfString"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "147719FECF756B394778D07FB5568AAF"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 4
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "getProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "findPropertyValue_configurationPropertyName1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "EBE12C5BCB8EBB2512515437B95035FD"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "configurationProperty"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationPropertyName1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                suggestedContent: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                valueType: "java.lang.Object"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "UNKNOWN"
                suggestedContent: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                valueType: "java.lang.Object"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "findPropertyValue_configurationProperty1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "732C60509BD501F8FFD4AE2CE30DDB2D"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.lang.Object"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.lang.Object"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        uuid: "findPropertyValue_configurationProperty1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "B5783F66C0A372980EEA4889DB2068E7"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "targetValueType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolveNestedPlaceholders"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getProperty(String,Class,boolean): Object"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: "A"
          suggestedContent: !<regular>
            value: "A"
          valueType: "java.lang.String"
          uuid: "findPropertyValue_object2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "474E81A0A863FCA8651F3C92C7DF10C7"
      index: 10
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "resolveRequiredPlaceholders"
        parameters:
        - name: "text"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            suggestedContent: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "findPropertyValue_object2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
        signature: "resolveRequiredPlaceholders(String): String throws java.lang.IllegalArgumentException"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: "return_of_resolveRequiredPlaceholders1"
          valueType: "java.lang.String"
          uuid: "resolveNestedPlaceholders_string1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "E07612358CD8AA95D9240A5C5742B20E"
      index: 11
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.ClassUtils"
        uuid: "org.springframework.util.ClassUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_resolveRequiredPlaceholders1"
            valueType: "java.lang.String"
            uuid: "resolveNestedPlaceholders_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isAssignableValue(Class,String): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "convertValueIfNecessary_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "DefaultConversionService"
      modelFingerprint: "7F5AE245D41FD0CC9CB0F9EFFB899CBB"
      index: 12
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.core.convert.support.DefaultConversionService"
        uuid: "org.springframework.core.convert.support.DefaultConversionService"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.core.convert.support.DefaultConversionService"
        name: "getSharedInstance"
        parameters: []
        signature: "getSharedInstance(): ConversionService"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "convertValueIfNecessary_conversionService1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "conversionServiceToUse"
      modelFingerprint: "25F5FBB008A2F783E8463FAB6051B3DC"
      index: 13
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.core.convert.ConversionService"
        uuid: "convertValueIfNecessary_conversionService1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "conversionServiceToUse"
        name: "convert"
        parameters:
        - name: "arg0"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_resolveRequiredPlaceholders1"
            valueType: "java.lang.String"
            uuid: "resolveNestedPlaceholders_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "arg1"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "convert(String,Class): Object"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: "return_of_convert1"
          suggestedContent: !<method_return_from_value>
            target: "java.lang.Object"
            localVariableValue:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.convert.ConversionService"
              uuid: "convertValueIfNecessary_conversionService1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
            methodParameters:
            - name: "arg0"
              value:
                sapientType: "BASIC"
                valueType: "java.lang.String"
                uuid: "resolveNestedPlaceholders_string1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "arg1"
              value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "java.lang.String"
                valueType: "java.lang.Class"
                genericValueType: "java.lang.String"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
            methodName: "convert"
          valueType: "java.lang.String"
          uuid: "convertValueIfNecessary_object1"
          fixed: false
          equalsMethodPresent: true
          explicitCastNeeded: true
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "88E3E78CA3F3BD231B348655D9FF550C"
      index: 14
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "return_of_convert1"
        suggestedContent: !<method_return_from_value>
          target: "java.lang.Object"
          localVariableValue:
            sapientType: "UNKNOWN"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "convertValueIfNecessary_conversionService1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          methodParameters:
          - name: "arg0"
            value:
              sapientType: "BASIC"
              valueType: "java.lang.String"
              uuid: "resolveNestedPlaceholders_string1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "arg1"
            value:
              sapientType: "CLASS"
              content: !<regular>
                value: "java.lang.String"
              valueType: "java.lang.Class"
              genericValueType: "java.lang.String"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          methodName: "convert"
        valueType: "java.lang.String"
        uuid: "convertValueIfNecessary_object1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: true
      staticReadMethodForField: false
      filledByUser: false
    uuid: "e158282f-b41d-3367-94af-49d38b7ba1ea"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
  - pathId: "path12"
    pathIdForUser: "path13"
    testPathName: "getPropertyWhenConfigurationPropertyIsNotNullAndCaughtExceptionAndValueIsNotNullAndResolveNestedPlaceholdersAndValueIns"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "FC53D146005E69B9E601DB121BA03E38"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 4
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "getProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "findPropertyValue_configurationPropertyName1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "EBE12C5BCB8EBB2512515437B95035FD"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "configurationProperty"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationPropertyName1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                suggestedContent: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                valueType: "java.lang.Object"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "UNKNOWN"
                suggestedContent: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                valueType: "java.lang.Object"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "findPropertyValue_configurationProperty1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "732C60509BD501F8FFD4AE2CE30DDB2D"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.lang.Object"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.lang.Object"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        uuid: "findPropertyValue_configurationProperty1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "9E907428E8496B66EF47C11C51870265"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "targetValueType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolveNestedPlaceholders"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getProperty(String,Class,boolean): Object"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: ""
          suggestedContent: !<regular>
            value: ""
          valueType: "java.lang.String"
          uuid: "findPropertyValue_object2"
          fixed: false
          equalsMethodPresent: true
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "42095BA0498D4150013ADA3B58446212"
      index: 10
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.ClassUtils"
        uuid: "org.springframework.util.ClassUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            suggestedContent: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "findPropertyValue_object2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isAssignableValue(Class,String): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "convertValueIfNecessary_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 11
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: ""
        suggestedContent: !<regular>
          value: ""
        valueType: "java.lang.String"
        uuid: "findPropertyValue_object2"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "6cf580f6-244b-31c9-a85d-34146976b29d"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
  - pathId: "path13"
    pathIdForUser: "path14"
    testPathName: "getPropertyWhenCaughtExceptionAndValueIsNotNullAndResolveNestedPlaceholdersAndValueInstanceOfString2"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "857E09458FAD4D97CA9ABD4E950DBFD5"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 4
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: true
    inputParameters: []
    uuid: "0db83024-4843-3dac-87fe-7876e1b03c8b"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path15"
    pathIdForUser: "path15"
    testPathName: "getPropertyWhenCaughtExceptionAndValueIsNotNullAndResolveNestedPlaceholdersAndValueNotInstanceOfString"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "4B4BB7D087DE57C298C4CC0616240546"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 4
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: true
    inputParameters: []
    uuid: "2ae324e1-94ad-33a0-b2f3-cdae02f6b86c"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path16"
    pathIdForUser: "path16"
    testPathName: "getPropertyWhenConfigurationPropertyIsNullAndCaughtExceptionAndValueIsNotNullAndResolveNestedPlaceholdersAndValueNotIns"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "16B2E8147CABAD11130C38B1F48963E6"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 4
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "getProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "findPropertyValue_configurationPropertyName1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "8E406A6028AD840881AFC313D5BD36CD"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "configurationProperty"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationPropertyName1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValue:
          sapientType: "NULL"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "findPropertyValue_configurationProperty1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "C190D236DC7E4569C9758F16110C64CB"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "targetValueType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolveNestedPlaceholders"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getProperty(String,Class,boolean): Object"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "F2620829253A8C2B5E882FFED1770FB9"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.ClassUtils"
        uuid: "org.springframework.util.ClassUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isAssignableValue(Class,Object): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "convertValueIfNecessary_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "DefaultConversionService"
      modelFingerprint: "7F5AE245D41FD0CC9CB0F9EFFB899CBB"
      index: 10
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.core.convert.support.DefaultConversionService"
        uuid: "org.springframework.core.convert.support.DefaultConversionService"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.core.convert.support.DefaultConversionService"
        name: "getSharedInstance"
        parameters: []
        signature: "getSharedInstance(): ConversionService"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "convertValueIfNecessary_conversionService1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "conversionServiceToUse"
      modelFingerprint: "911836AEC472DB806EDDEF133BDC2D3D"
      index: 11
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.core.convert.ConversionService"
        uuid: "convertValueIfNecessary_conversionService1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "conversionServiceToUse"
        name: "convert"
        parameters:
        - name: "arg0"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "arg1"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "convert(Object,Class): Object"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: "return_of_convert1"
          suggestedContent: !<method_return_from_value>
            target: "java.lang.Object"
            localVariableValue:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.convert.ConversionService"
              uuid: "convertValueIfNecessary_conversionService1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
            methodParameters:
            - name: "arg0"
              value:
                sapientType: "UNKNOWN"
                suggestedContent: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                valueType: "java.lang.Object"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "arg1"
              value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "java.lang.String"
                valueType: "java.lang.Class"
                genericValueType: "java.lang.String"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
            methodName: "convert"
          valueType: "java.lang.String"
          uuid: "convertValueIfNecessary_object1"
          fixed: false
          equalsMethodPresent: true
          explicitCastNeeded: true
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "376A6723B4DDD0B95034EFCBB6F43238"
      index: 12
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "return_of_convert1"
        suggestedContent: !<method_return_from_value>
          target: "java.lang.Object"
          localVariableValue:
            sapientType: "UNKNOWN"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "convertValueIfNecessary_conversionService1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          methodParameters:
          - name: "arg0"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.lang.Object"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "arg1"
            value:
              sapientType: "CLASS"
              content: !<regular>
                value: "java.lang.String"
              valueType: "java.lang.Class"
              genericValueType: "java.lang.String"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          methodName: "convert"
        valueType: "java.lang.String"
        uuid: "convertValueIfNecessary_object1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: true
      staticReadMethodForField: false
      filledByUser: false
    uuid: "d071d10f-388d-3270-b158-d9f291bc308a"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
- method:
    name: "getProperty"
    returnType: "java.lang.Object"
    signature: "getProperty(java.lang.String,java.lang.Class<java.lang.Object>) :\
      \ java.lang.Object"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "CB7BCB03CAACC541866A076743DCCB4B"
    parametersTypes:
    - "java.lang.String"
    - "java.lang.Class"
  paths:
  - pathId: "path10"
    pathIdForUser: "path1"
    testPathName: "getProperty3WhenValueNotInstanceOfString"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "0D660848E87F62185CE412F1D6966A3B"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "9b903dd4-d395-399a-bee2-31eb782c2b55"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path11"
    pathIdForUser: "path2"
    testPathName: "getProperty3WhenResolveNestedPlaceholdersAndValueNotInstanceOfString"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "79D0DA0FFA46391148D596B819127519"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "getProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "targetValueType"
      modelFingerprint: "B1F38FCDE1091BB1509E59E765A25F3F"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "CLASS"
        content: !<regular>
          value: "java.lang.Object"
        valueType: "java.lang.Class"
        genericValueType: "java.lang.Object"
        uuid: "getProperty_class1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "F8BBE02E8C3C2D24101ADC5CF4687CD9"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "NULL"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "C190D236DC7E4569C9758F16110C64CB"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "targetValueType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolveNestedPlaceholders"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getProperty(String,Class,boolean): Object"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "8A72DB73BD244704CE5F9833D01CF901"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.ClassUtils"
        uuid: "org.springframework.util.ClassUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            uuid: "getProperty_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isAssignableValue(Class,Object): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "convertValueIfNecessary_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "DefaultConversionService"
      modelFingerprint: "7F5AE245D41FD0CC9CB0F9EFFB899CBB"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.core.convert.support.DefaultConversionService"
        uuid: "org.springframework.core.convert.support.DefaultConversionService"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.core.convert.support.DefaultConversionService"
        name: "getSharedInstance"
        parameters: []
        signature: "getSharedInstance(): ConversionService"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "convertValueIfNecessary_conversionService1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "conversionServiceToUse"
      modelFingerprint: "AC534E4FC97748D80FFB1907D637607B"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.core.convert.ConversionService"
        uuid: "convertValueIfNecessary_conversionService1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "conversionServiceToUse"
        name: "convert"
        parameters:
        - name: "arg0"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "arg1"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            uuid: "getProperty_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "convert(Object,Class): Object"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "convertValueIfNecessary_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7C973EAEEC332BFEC09E51528D07A6CE"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "java.lang.Object"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.Object"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.Object"
        uuid: "convertValueIfNecessary_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "0e3d4019-4e90-37a0-b32d-8bb73f4ba120"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
  - pathId: "path1"
    pathIdForUser: "path3"
    testPathName: "getProperty3WhenValueIsNull"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "BE178071A51765D294855EEC278B93E0"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "128c6277-cbe0-3004-a881-91c6cd2caa00"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path7"
    pathIdForUser: "path4"
    testPathName: "getProperty3WhenConfigurationPropertyIsNullAndValueIsNull"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "8DD0211B927E5C26477E87C71B2D4C67"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "getProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "targetValueType"
      modelFingerprint: "B1F38FCDE1091BB1509E59E765A25F3F"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "CLASS"
        content: !<regular>
          value: "java.lang.Object"
        valueType: "java.lang.Class"
        genericValueType: "java.lang.Object"
        uuid: "getProperty_class1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "findPropertyValue_configurationPropertyName1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "8E406A6028AD840881AFC313D5BD36CD"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "configurationProperty"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationPropertyName1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValue:
          sapientType: "NULL"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "findPropertyValue_configurationProperty1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7FF3E62C4C26664215CB4A88EF6B4C11"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "NULL"
        valueType: "java.lang.Object"
        uuid: "getProperty_object1"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "b983baf7-66fa-34cb-8458-6a130f93c4ea"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path9"
    pathIdForUser: "path5"
    testPathName: "getProperty3WhenValueIsNotNullAndResolveNestedPlaceholdersAndValueNotInstanceOfString"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "C2A23591F7E023FAB2D99598A7D4EE73"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "69fc8f43-3c7c-378d-a3a0-e8c71225d661"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path12"
    pathIdForUser: "path6"
    testPathName: "getProperty3WhenCaughtExceptionAndValueIsNull"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "180CD7F45D206F105EEC9F4AD3A5380C"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 4
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "getProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "targetValueType"
      modelFingerprint: "B1F38FCDE1091BB1509E59E765A25F3F"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "CLASS"
        content: !<regular>
          value: "java.lang.Object"
        valueType: "java.lang.Class"
        genericValueType: "java.lang.Object"
        uuid: "getProperty_class1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "findPropertyValue_configurationPropertyName1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "EBE12C5BCB8EBB2512515437B95035FD"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "configurationProperty"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationPropertyName1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                suggestedContent: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                valueType: "java.lang.Object"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "UNKNOWN"
                suggestedContent: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                valueType: "java.lang.Object"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "findPropertyValue_configurationProperty1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "732C60509BD501F8FFD4AE2CE30DDB2D"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.lang.Object"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.lang.Object"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        uuid: "findPropertyValue_configurationProperty1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "C5C5A84F61540F499FBA49CA5496C716"
      index: 10
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "targetValueType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolveNestedPlaceholders"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getProperty(String,Class,boolean): Object"
        returnValue:
          sapientType: "NULL"
          valueType: "java.lang.Object"
          uuid: "findPropertyValue_object2"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7FF3E62C4C26664215CB4A88EF6B4C11"
      index: 11
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "NULL"
        valueType: "java.lang.Object"
        uuid: "getProperty_object1"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "ddfae7d5-b8dd-383e-80db-fe19b964c210"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
  - pathId: "path8"
    pathIdForUser: "path7"
    testPathName: "getProperty3WhenNameIsNullAndValueIsNotNullAndResolveNestedPlaceholdersAndValueNotInstanceOfString"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "111BDAAF889F1705CFEF4BF13AEB8043"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "a1633900-7ebc-398a-8baf-0d31a8aafca2"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path5"
    pathIdForUser: "path8"
    testPathName: "getProperty3WhenValueInstanceOfString"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "0ABA1BCA4CAA6129BDB559B2CB5AAB88"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "getProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "targetValueType"
      modelFingerprint: "B1F38FCDE1091BB1509E59E765A25F3F"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "CLASS"
        content: !<regular>
          value: "java.lang.Object"
        valueType: "java.lang.Class"
        genericValueType: "java.lang.Object"
        uuid: "getProperty_class1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "findPropertyValue_configurationPropertyName1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "1DFE62E4C87144816BEC9C5663CD1BF5"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "configurationProperty"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationPropertyName1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "A"
                suggestedContent: !<regular>
                  value: "A"
                valueType: "java.lang.String"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "BASIC"
                suggestedContent: !<regular>
                  value: "A"
                valueType: "java.lang.String"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "findPropertyValue_configurationProperty1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "F49EAD8F10BC8F35A6BD3D5DD1577E5C"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "A"
              suggestedContent: !<regular>
                value: "A"
              valueType: "java.lang.String"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: "A"
              valueType: "java.lang.String"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        uuid: "findPropertyValue_configurationProperty1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: "A"
          suggestedContent: !<regular>
            value: "A"
          valueType: "java.lang.String"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "474E81A0A863FCA8651F3C92C7DF10C7"
      index: 10
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "resolveRequiredPlaceholders"
        parameters:
        - name: "text"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            suggestedContent: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
        signature: "resolveRequiredPlaceholders(String): String throws java.lang.IllegalArgumentException"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: "return_of_resolveRequiredPlaceholders1"
          valueType: "java.lang.String"
          uuid: "resolveNestedPlaceholders_string1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "1468918BDA9B353F2664B339C15817B0"
      index: 11
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.ClassUtils"
        uuid: "org.springframework.util.ClassUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            uuid: "getProperty_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_resolveRequiredPlaceholders1"
            valueType: "java.lang.String"
            uuid: "resolveNestedPlaceholders_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isAssignableValue(Class,String): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "convertValueIfNecessary_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "DefaultConversionService"
      modelFingerprint: "7F5AE245D41FD0CC9CB0F9EFFB899CBB"
      index: 12
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.core.convert.support.DefaultConversionService"
        uuid: "org.springframework.core.convert.support.DefaultConversionService"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.core.convert.support.DefaultConversionService"
        name: "getSharedInstance"
        parameters: []
        signature: "getSharedInstance(): ConversionService"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "convertValueIfNecessary_conversionService1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "conversionServiceToUse"
      modelFingerprint: "6C186903755FA5D46A879B7C5F0D59EC"
      index: 13
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.core.convert.ConversionService"
        uuid: "convertValueIfNecessary_conversionService1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "conversionServiceToUse"
        name: "convert"
        parameters:
        - name: "arg0"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_resolveRequiredPlaceholders1"
            valueType: "java.lang.String"
            uuid: "resolveNestedPlaceholders_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "arg1"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            uuid: "getProperty_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "convert(String,Class): Object"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "convertValueIfNecessary_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7C973EAEEC332BFEC09E51528D07A6CE"
      index: 14
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "java.lang.Object"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.Object"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.Object"
        uuid: "convertValueIfNecessary_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "0106ccab-fbad-3458-85c9-aba9a897ea6d"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path2"
    pathIdForUser: "path9"
    testPathName: "getProperty3WhenResolveNestedPlaceholdersAndValueInstanceOfString"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "F39A45AEBCC55B033DC1C4E1EEF96743"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "getProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "targetValueType"
      modelFingerprint: "4BE5268FF8769F8EC1785171F7A99B18"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "NULL"
        valueType: "java.lang.Class"
        genericValueType: "java.lang.Object"
        uuid: "getProperty_class1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "findPropertyValue_configurationPropertyName1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "10E497047B78CECC1A70DA049A50864F"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "configurationProperty"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationPropertyName1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: ""
                suggestedContent: !<regular>
                  value: ""
                valueType: "java.lang.String"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: true
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "BASIC"
                suggestedContent: !<regular>
                  value: ""
                valueType: "java.lang.String"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: true
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "findPropertyValue_configurationProperty1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "7C568A072D65BA8DDCFDF25E430E2D74"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: ""
              suggestedContent: !<regular>
                value: ""
              valueType: "java.lang.String"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: true
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: ""
              valueType: "java.lang.String"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: true
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        uuid: "findPropertyValue_configurationProperty1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: ""
          suggestedContent: !<regular>
            value: ""
          valueType: "java.lang.String"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: true
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 10
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: ""
        suggestedContent: !<regular>
          value: ""
        valueType: "java.lang.String"
        uuid: "findPropertyValue_object1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "4be18f0e-fc19-36f7-bd30-a24284232024"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path4"
    pathIdForUser: "path10"
    testPathName: "getProperty3WhenValueIsNotNullAndResolveNestedPlaceholdersAndValueInstanceOfString"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "73E5E78D714B9CFBC7D21592A1636A2B"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "c174a089-698b-3311-98bf-1631d8b7b176"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path3"
    pathIdForUser: "path11"
    testPathName: "getProperty3WhenConfigurationPropertyIsNotNullAndValueIsNotNullAndResolveNestedPlaceholdersAndValueInstanceOfString"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "81BBFF41F32D9D27E1BFBD4B8771643F"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "getProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "targetValueType"
      modelFingerprint: "B1F38FCDE1091BB1509E59E765A25F3F"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "CLASS"
        content: !<regular>
          value: "java.lang.Object"
        valueType: "java.lang.Class"
        genericValueType: "java.lang.Object"
        uuid: "getProperty_class1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "findPropertyValue_configurationPropertyName1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "10E497047B78CECC1A70DA049A50864F"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "configurationProperty"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationPropertyName1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: ""
                suggestedContent: !<regular>
                  value: ""
                valueType: "java.lang.String"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: true
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "BASIC"
                suggestedContent: !<regular>
                  value: ""
                valueType: "java.lang.String"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: true
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "findPropertyValue_configurationProperty1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "7C568A072D65BA8DDCFDF25E430E2D74"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: ""
              suggestedContent: !<regular>
                value: ""
              valueType: "java.lang.String"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: true
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: ""
              valueType: "java.lang.String"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: true
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        uuid: "findPropertyValue_configurationProperty1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: ""
          suggestedContent: !<regular>
            value: ""
          valueType: "java.lang.String"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: true
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "E52AF07887088A0175EE9520D625F721"
      index: 10
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.ClassUtils"
        uuid: "org.springframework.util.ClassUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            uuid: "getProperty_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            suggestedContent: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isAssignableValue(Class,String): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "convertValueIfNecessary_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 11
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: ""
        suggestedContent: !<regular>
          value: ""
        valueType: "java.lang.String"
        uuid: "findPropertyValue_object1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "04a859b7-4ac2-370b-adbd-713d08e1fe8b"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path6"
    pathIdForUser: "path12"
    testPathName: "getProperty3WhenConfigurationPropertyIsNotNullAndValueIsNotNullAndResolveNestedPlaceholdersAndValueNotInstanceOfString"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "CCAFED6F1BA858B9EA3CCCF6264357D6"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "8c764453-be1c-336e-82c7-9c014864928c"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path15"
    pathIdForUser: "path13"
    testPathName: "getProperty3WhenCaughtExceptionAndValueIsNotNullAndResolveNestedPlaceholdersAndValueInstanceOfString"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "91AB5641B02D545F5B37A218810EF767"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 4
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "getProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "targetValueType"
      modelFingerprint: "B1F38FCDE1091BB1509E59E765A25F3F"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "CLASS"
        content: !<regular>
          value: "java.lang.Object"
        valueType: "java.lang.Class"
        genericValueType: "java.lang.Object"
        uuid: "getProperty_class1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "findPropertyValue_configurationPropertyName1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "EBE12C5BCB8EBB2512515437B95035FD"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "configurationProperty"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationPropertyName1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                suggestedContent: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                valueType: "java.lang.Object"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "UNKNOWN"
                suggestedContent: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                valueType: "java.lang.Object"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "findPropertyValue_configurationProperty1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "732C60509BD501F8FFD4AE2CE30DDB2D"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.lang.Object"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.lang.Object"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        uuid: "findPropertyValue_configurationProperty1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "68455E475EC344268D69528353CBCB12"
      index: 10
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "targetValueType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolveNestedPlaceholders"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getProperty(String,Class,boolean): Object"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: ""
          suggestedContent: !<regular>
            value: ""
          valueType: "java.lang.String"
          uuid: "findPropertyValue_object2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "1468918BDA9B353F2664B339C15817B0"
      index: 11
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.ClassUtils"
        uuid: "org.springframework.util.ClassUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            uuid: "getProperty_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            suggestedContent: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "findPropertyValue_object2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isAssignableValue(Class,String): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "convertValueIfNecessary_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "DefaultConversionService"
      modelFingerprint: "7F5AE245D41FD0CC9CB0F9EFFB899CBB"
      index: 12
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.core.convert.support.DefaultConversionService"
        uuid: "org.springframework.core.convert.support.DefaultConversionService"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.core.convert.support.DefaultConversionService"
        name: "getSharedInstance"
        parameters: []
        signature: "getSharedInstance(): ConversionService"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "convertValueIfNecessary_conversionService1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "conversionServiceToUse"
      modelFingerprint: "6C186903755FA5D46A879B7C5F0D59EC"
      index: 13
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.core.convert.ConversionService"
        uuid: "convertValueIfNecessary_conversionService1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "conversionServiceToUse"
        name: "convert"
        parameters:
        - name: "arg0"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            suggestedContent: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "findPropertyValue_object2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "arg1"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            uuid: "getProperty_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "convert(String,Class): Object"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "convertValueIfNecessary_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7C973EAEEC332BFEC09E51528D07A6CE"
      index: 14
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "java.lang.Object"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.Object"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.Object"
        uuid: "convertValueIfNecessary_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "4eb45dcf-3e0f-3715-976d-c80efad0c4ce"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
  - pathId: "path13"
    pathIdForUser: "path14"
    testPathName: "getProperty3WhenConfigurationPropertyIsNotNullAndCaughtExceptionAndValueIsNotNullAndResolveNestedPlaceholdersAndValueIn"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "1DCEEDFC7668F3A01AD1DF87FC2133E5"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 4
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "getProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "targetValueType"
      modelFingerprint: "4BE5268FF8769F8EC1785171F7A99B18"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "NULL"
        valueType: "java.lang.Class"
        genericValueType: "java.lang.Object"
        uuid: "getProperty_class1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "findPropertyValue_configurationPropertyName1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "EBE12C5BCB8EBB2512515437B95035FD"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "configurationProperty"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationPropertyName1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                suggestedContent: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                valueType: "java.lang.Object"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "UNKNOWN"
                suggestedContent: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                valueType: "java.lang.Object"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "findPropertyValue_configurationProperty1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "732C60509BD501F8FFD4AE2CE30DDB2D"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.lang.Object"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.lang.Object"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        uuid: "findPropertyValue_configurationProperty1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "9E907428E8496B66EF47C11C51870265"
      index: 10
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "targetValueType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolveNestedPlaceholders"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getProperty(String,Class,boolean): Object"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: ""
          suggestedContent: !<regular>
            value: ""
          valueType: "java.lang.String"
          uuid: "findPropertyValue_object2"
          fixed: false
          equalsMethodPresent: true
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 11
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: ""
        suggestedContent: !<regular>
          value: ""
        valueType: "java.lang.String"
        uuid: "findPropertyValue_object2"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "3381bc01-cc6f-3fb1-acc6-49d9032189b6"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
  - pathId: "path14"
    pathIdForUser: "path15"
    testPathName: "getProperty3WhenCaughtExceptionAndValueIsNotNullAndResolveNestedPlaceholdersAndValueInstanceOfString2"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "3D680F83AC39F57D68F612A8D1457674"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 4
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "getProperty_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "targetValueType"
      modelFingerprint: "B1F38FCDE1091BB1509E59E765A25F3F"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "CLASS"
        content: !<regular>
          value: "java.lang.Object"
        valueType: "java.lang.Class"
        genericValueType: "java.lang.Object"
        uuid: "getProperty_class1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "findPropertyValue_configurationPropertyName1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "EBE12C5BCB8EBB2512515437B95035FD"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "configurationProperty"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationPropertyName1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                suggestedContent: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                valueType: "java.lang.Object"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "UNKNOWN"
                suggestedContent: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                valueType: "java.lang.Object"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "findPropertyValue_configurationProperty1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "732C60509BD501F8FFD4AE2CE30DDB2D"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.lang.Object"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.lang.Object"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        uuid: "findPropertyValue_configurationProperty1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "9E907428E8496B66EF47C11C51870265"
      index: 10
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getProperty_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "targetValueType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolveNestedPlaceholders"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getProperty(String,Class,boolean): Object"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: ""
          suggestedContent: !<regular>
            value: ""
          valueType: "java.lang.String"
          uuid: "findPropertyValue_object2"
          fixed: false
          equalsMethodPresent: true
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "E52AF07887088A0175EE9520D625F721"
      index: 11
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.ClassUtils"
        uuid: "org.springframework.util.ClassUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            uuid: "getProperty_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            suggestedContent: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "findPropertyValue_object2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isAssignableValue(Class,String): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "convertValueIfNecessary_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 12
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: ""
        suggestedContent: !<regular>
          value: ""
        valueType: "java.lang.String"
        uuid: "findPropertyValue_object2"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "137c4932-6bf0-3306-98f3-1a13f6dae120"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
- method:
    name: "getPropertyAsRawString"
    returnType: "java.lang.String"
    signature: "getPropertyAsRawString(java.lang.String) : java.lang.String"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "BD7FED0A6B98D6A08AFE5CBF14630AA7"
    parametersTypes:
    - "java.lang.String"
  paths:
  - pathId: "path7"
    pathIdForUser: "path1"
    testPathName: "getPropertyAsRawStringWhenNotResolveNestedPlaceholders"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "3080747B08CB24BA435F27AFD03B8CE4"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "a42de2ba-769c-359f-bf5c-c8a2fe180f34"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path8"
    pathIdForUser: "path2"
    testPathName: "getPropertyAsRawStringWhenValueIsNotNullAndNotResolveNestedPlaceholders"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "827EAF310D3C0B467F5D886E0CD09870"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "getPropertyAsRawString_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "F8BBE02E8C3C2D24101ADC5CF4687CD9"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "NULL"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "C190D236DC7E4569C9758F16110C64CB"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getPropertyAsRawString_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "targetValueType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolveNestedPlaceholders"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getProperty(String,Class,boolean): Object"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "F2620829253A8C2B5E882FFED1770FB9"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.ClassUtils"
        uuid: "org.springframework.util.ClassUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isAssignableValue(Class,Object): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "convertValueIfNecessary_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "DefaultConversionService"
      modelFingerprint: "7F5AE245D41FD0CC9CB0F9EFFB899CBB"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.core.convert.support.DefaultConversionService"
        uuid: "org.springframework.core.convert.support.DefaultConversionService"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.core.convert.support.DefaultConversionService"
        name: "getSharedInstance"
        parameters: []
        signature: "getSharedInstance(): ConversionService"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "convertValueIfNecessary_conversionService1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "conversionServiceToUse"
      modelFingerprint: "911836AEC472DB806EDDEF133BDC2D3D"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.core.convert.ConversionService"
        uuid: "convertValueIfNecessary_conversionService1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "conversionServiceToUse"
        name: "convert"
        parameters:
        - name: "arg0"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "arg1"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "convert(Object,Class): Object"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: "return_of_convert1"
          suggestedContent: !<method_return_from_value>
            target: "java.lang.Object"
            localVariableValue:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.convert.ConversionService"
              uuid: "convertValueIfNecessary_conversionService1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
            methodParameters:
            - name: "arg0"
              value:
                sapientType: "UNKNOWN"
                suggestedContent: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                valueType: "java.lang.Object"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "arg1"
              value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "java.lang.String"
                valueType: "java.lang.Class"
                genericValueType: "java.lang.String"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
            methodName: "convert"
          valueType: "java.lang.String"
          uuid: "convertValueIfNecessary_object1"
          fixed: false
          equalsMethodPresent: true
          explicitCastNeeded: true
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "376A6723B4DDD0B95034EFCBB6F43238"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "return_of_convert1"
        suggestedContent: !<method_return_from_value>
          target: "java.lang.Object"
          localVariableValue:
            sapientType: "UNKNOWN"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "convertValueIfNecessary_conversionService1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          methodParameters:
          - name: "arg0"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.lang.Object"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "arg1"
            value:
              sapientType: "CLASS"
              content: !<regular>
                value: "java.lang.String"
              valueType: "java.lang.Class"
              genericValueType: "java.lang.String"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          methodName: "convert"
        valueType: "java.lang.String"
        uuid: "convertValueIfNecessary_object1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: true
      staticReadMethodForField: false
      filledByUser: false
    uuid: "96526e58-f2a4-39cb-ae25-d7d769ae4d92"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
  - pathId: "path6"
    pathIdForUser: "path3"
    testPathName: "getPropertyAsRawStringWhenAttachedIsNullAndValueIsNotNullAndNotResolveNestedPlaceholders"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "502FBCA5A5B923C89BFF1A25A75C2E3C"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "f8f008d4-ff79-3725-aed6-f4b72b969c6c"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path1"
    pathIdForUser: "path4"
    testPathName: "getPropertyAsRawStringWhenValueIsNull"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "C5201BDE3BC2CAE8599667B2149C7EA6"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "4dbe4a50-c98e-38a6-b826-24ba1dc568b5"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path4"
    pathIdForUser: "path5"
    testPathName: "getPropertyAsRawStringWhenConfigurationPropertyIsNullAndValueIsNull"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "9B35DC0B844CDCD40797E5DA5D09C957"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "getPropertyAsRawString_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getPropertyAsRawString_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "findPropertyValue_configurationPropertyName1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "8E406A6028AD840881AFC313D5BD36CD"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "configurationProperty"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationPropertyName1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValue:
          sapientType: "NULL"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "findPropertyValue_configurationProperty1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8EDA3F2AE365AC99A4FDAA03D44C0B66"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "NULL"
        valueType: "java.lang.String"
        uuid: "getProperty_object1"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: true
      staticReadMethodForField: false
      filledByUser: false
    uuid: "8178a25c-3642-3433-86f1-fb6c4cc7e472"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path5"
    pathIdForUser: "path6"
    testPathName: "getPropertyAsRawStringWhenNameIsNullAndValueIsNotNullAndNotResolveNestedPlaceholders"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "5FA5EC7F5775200468004D30586DB46D"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "87e91093-d355-3304-9567-78dfec2c8cc2"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path3"
    pathIdForUser: "path7"
    testPathName: "getPropertyAsRawStringWhenConfigurationPropertyIsNotNullAndValueIsNotNullAndNotResolveNestedPlaceholders"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "BCC9942ADD1BE59E4301AEB08A114F08"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "getPropertyAsRawString_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getPropertyAsRawString_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "findPropertyValue_configurationPropertyName1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "EBE12C5BCB8EBB2512515437B95035FD"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "configurationProperty"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationPropertyName1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                suggestedContent: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                valueType: "java.lang.Object"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "UNKNOWN"
                suggestedContent: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                valueType: "java.lang.Object"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "findPropertyValue_configurationProperty1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "732C60509BD501F8FFD4AE2CE30DDB2D"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.lang.Object"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.lang.Object"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        uuid: "findPropertyValue_configurationProperty1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "F2620829253A8C2B5E882FFED1770FB9"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.ClassUtils"
        uuid: "org.springframework.util.ClassUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isAssignableValue(Class,Object): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "convertValueIfNecessary_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "DefaultConversionService"
      modelFingerprint: "7F5AE245D41FD0CC9CB0F9EFFB899CBB"
      index: 10
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.core.convert.support.DefaultConversionService"
        uuid: "org.springframework.core.convert.support.DefaultConversionService"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.core.convert.support.DefaultConversionService"
        name: "getSharedInstance"
        parameters: []
        signature: "getSharedInstance(): ConversionService"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "convertValueIfNecessary_conversionService1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "conversionServiceToUse"
      modelFingerprint: "911836AEC472DB806EDDEF133BDC2D3D"
      index: 11
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.core.convert.ConversionService"
        uuid: "convertValueIfNecessary_conversionService1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "conversionServiceToUse"
        name: "convert"
        parameters:
        - name: "arg0"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "arg1"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "convert(Object,Class): Object"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: "return_of_convert1"
          suggestedContent: !<regular>
            value: "return_of_convert1"
          valueType: "java.lang.String"
          uuid: "convertValueIfNecessary_object1"
          fixed: false
          equalsMethodPresent: true
          explicitCastNeeded: true
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "376A6723B4DDD0B95034EFCBB6F43238"
      index: 12
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "return_of_convert1"
        suggestedContent: !<regular>
          value: "return_of_convert1"
        valueType: "java.lang.String"
        uuid: "convertValueIfNecessary_object1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: true
      staticReadMethodForField: false
      filledByUser: false
    uuid: "58557aca-035b-3c54-bf85-8473a7b90a3e"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path2"
    pathIdForUser: "path8"
    testPathName: "getPropertyAsRawStringWhenConfigurationPropertyIsNotNullAndValueIsNotNullAndNotResolveNestedPlaceholders2"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "56BCA7D3D1A34F2E304C5C3221C34A18"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "getPropertyAsRawString_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getPropertyAsRawString_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "findPropertyValue_configurationPropertyName1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "10E497047B78CECC1A70DA049A50864F"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "configurationProperty"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationPropertyName1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "value1"
                valueType: "java.lang.String"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: true
                explicitCastNeeded: true
            - name: "origin"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "BASIC"
                valueType: "java.lang.String"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: true
                explicitCastNeeded: true
            - name: "origin"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "findPropertyValue_configurationProperty1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "7C568A072D65BA8DDCFDF25E430E2D74"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "value1"
              valueType: "java.lang.String"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: true
              explicitCastNeeded: true
          - name: "origin"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "BASIC"
              valueType: "java.lang.String"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: true
              explicitCastNeeded: true
          - name: "origin"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        uuid: "findPropertyValue_configurationProperty1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: "value1"
          valueType: "java.lang.String"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: true
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "42095BA0498D4150013ADA3B58446212"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.ClassUtils"
        uuid: "org.springframework.util.ClassUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "value1"
            valueType: "java.lang.String"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: true
        signature: "isAssignableValue(Class,String): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "convertValueIfNecessary_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 10
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "value1"
        valueType: "java.lang.String"
        uuid: "findPropertyValue_object1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: true
      staticReadMethodForField: false
      filledByUser: false
    uuid: "9089bea0-bf63-3a30-b81e-574541a28fec"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path9"
    pathIdForUser: "path9"
    testPathName: "getPropertyAsRawStringWhenCaughtExceptionAndValueIsNull"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "341660A27E1C9C359E0FDC8D9059E462"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 4
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "getPropertyAsRawString_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getPropertyAsRawString_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "findPropertyValue_configurationPropertyName1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "EBE12C5BCB8EBB2512515437B95035FD"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "configurationProperty"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationPropertyName1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                suggestedContent: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                valueType: "java.lang.Object"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "UNKNOWN"
                suggestedContent: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                valueType: "java.lang.Object"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "findPropertyValue_configurationProperty1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "732C60509BD501F8FFD4AE2CE30DDB2D"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.lang.Object"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.lang.Object"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        uuid: "findPropertyValue_configurationProperty1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "C5C5A84F61540F499FBA49CA5496C716"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getPropertyAsRawString_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "targetValueType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolveNestedPlaceholders"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getProperty(String,Class,boolean): Object"
        returnValue:
          sapientType: "NULL"
          valueType: "java.lang.Object"
          uuid: "findPropertyValue_object2"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8EDA3F2AE365AC99A4FDAA03D44C0B66"
      index: 10
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "NULL"
        valueType: "java.lang.String"
        uuid: "getProperty_object1"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: true
      staticReadMethodForField: false
      filledByUser: false
    uuid: "5c4e4df6-d7b5-3443-ba18-431e3022d0dc"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
  - pathId: "path11"
    pathIdForUser: "path10"
    testPathName: "getPropertyAsRawStringWhenCaughtExceptionAndValueIsNotNullAndNotResolveNestedPlaceholders"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "BCE6AD3CE830C2C8AD328738E66EEEFB"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 4
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "getPropertyAsRawString_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getPropertyAsRawString_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "findPropertyValue_configurationPropertyName1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "EBE12C5BCB8EBB2512515437B95035FD"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "configurationProperty"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationPropertyName1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                suggestedContent: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                valueType: "java.lang.Object"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "UNKNOWN"
                suggestedContent: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                valueType: "java.lang.Object"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "findPropertyValue_configurationProperty1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "732C60509BD501F8FFD4AE2CE30DDB2D"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.lang.Object"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.lang.Object"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        uuid: "findPropertyValue_configurationProperty1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "C190D236DC7E4569C9758F16110C64CB"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getPropertyAsRawString_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "targetValueType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolveNestedPlaceholders"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getProperty(String,Class,boolean): Object"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "findPropertyValue_object2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "F2620829253A8C2B5E882FFED1770FB9"
      index: 10
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.ClassUtils"
        uuid: "org.springframework.util.ClassUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isAssignableValue(Class,Object): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "convertValueIfNecessary_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "DefaultConversionService"
      modelFingerprint: "7F5AE245D41FD0CC9CB0F9EFFB899CBB"
      index: 11
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.core.convert.support.DefaultConversionService"
        uuid: "org.springframework.core.convert.support.DefaultConversionService"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.core.convert.support.DefaultConversionService"
        name: "getSharedInstance"
        parameters: []
        signature: "getSharedInstance(): ConversionService"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "convertValueIfNecessary_conversionService1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "conversionServiceToUse"
      modelFingerprint: "911836AEC472DB806EDDEF133BDC2D3D"
      index: 12
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.core.convert.ConversionService"
        uuid: "convertValueIfNecessary_conversionService1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "conversionServiceToUse"
        name: "convert"
        parameters:
        - name: "arg0"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "arg1"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "convert(Object,Class): Object"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: "return_of_convert1"
          suggestedContent: !<method_return_from_value>
            target: "java.lang.Object"
            localVariableValue:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.convert.ConversionService"
              uuid: "convertValueIfNecessary_conversionService1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
            methodParameters:
            - name: "arg0"
              value:
                sapientType: "UNKNOWN"
                suggestedContent: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                valueType: "java.lang.Object"
                uuid: "findPropertyValue_object2"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "arg1"
              value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "java.lang.String"
                valueType: "java.lang.Class"
                genericValueType: "java.lang.String"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
            methodName: "convert"
          valueType: "java.lang.String"
          uuid: "convertValueIfNecessary_object1"
          fixed: false
          equalsMethodPresent: true
          explicitCastNeeded: true
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "376A6723B4DDD0B95034EFCBB6F43238"
      index: 13
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "return_of_convert1"
        suggestedContent: !<method_return_from_value>
          target: "java.lang.Object"
          localVariableValue:
            sapientType: "UNKNOWN"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "convertValueIfNecessary_conversionService1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          methodParameters:
          - name: "arg0"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.lang.Object"
              uuid: "findPropertyValue_object2"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "arg1"
            value:
              sapientType: "CLASS"
              content: !<regular>
                value: "java.lang.String"
              valueType: "java.lang.Class"
              genericValueType: "java.lang.String"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          methodName: "convert"
        valueType: "java.lang.String"
        uuid: "convertValueIfNecessary_object1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: true
      staticReadMethodForField: false
      filledByUser: false
    uuid: "4ab0aaa3-6bea-38fa-9c21-f244d7e9c6a0"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
  - pathId: "path10"
    pathIdForUser: "path11"
    testPathName: "getPropertyAsRawStringWhenConfigurationPropertyIsNotNullAndCaughtExceptionAndValueIsNotNullAndNotResolveNestedPlacehold"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "4DBF1B61F3473794DEFA0F55EDE23D59"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 4
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "getPropertyAsRawString_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getPropertyAsRawString_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "findPropertyValue_configurationPropertyName1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "EBE12C5BCB8EBB2512515437B95035FD"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "configurationProperty"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationPropertyName1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                suggestedContent: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                valueType: "java.lang.Object"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            parameters:
            - name: "name"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                uuid: "findPropertyValue_configurationProperty1-name"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "value"
              value:
                sapientType: "UNKNOWN"
                suggestedContent: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                valueType: "java.lang.Object"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "origin"
              value:
                sapientType: "UNKNOWN"
                valueType: "org.springframework.boot.origin.Origin"
                uuid: "findPropertyValue_configurationProperty1-origin"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "findPropertyValue_configurationProperty1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "configurationProperty"
      modelFingerprint: "732C60509BD501F8FFD4AE2CE30DDB2D"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.lang.Object"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          parameters:
          - name: "name"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              uuid: "findPropertyValue_configurationProperty1-name"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "value"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.lang.Object"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "origin"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.origin.Origin"
              uuid: "findPropertyValue_configurationProperty1-origin"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        uuid: "findPropertyValue_configurationProperty1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "configurationProperty"
        name: "getValue"
        parameters: []
        signature: "getValue(): Object"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "9E907428E8496B66EF47C11C51870265"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getPropertyAsRawString_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "targetValueType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolveNestedPlaceholders"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getProperty(String,Class,boolean): Object"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: "return_of_getProperty1"
          valueType: "java.lang.String"
          uuid: "findPropertyValue_object2"
          fixed: false
          equalsMethodPresent: true
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "42095BA0498D4150013ADA3B58446212"
      index: 10
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.ClassUtils"
        uuid: "org.springframework.util.ClassUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getProperty1"
            valueType: "java.lang.String"
            uuid: "findPropertyValue_object2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: true
        signature: "isAssignableValue(Class,String): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "convertValueIfNecessary_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 11
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "return_of_getProperty1"
        valueType: "java.lang.String"
        uuid: "findPropertyValue_object2"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: true
      staticReadMethodForField: false
      filledByUser: false
    uuid: "d8e95d18-a74a-3b58-b7a9-c72791ba3814"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
  - pathId: "path12"
    pathIdForUser: "path12"
    testPathName: "getPropertyAsRawStringWhenConfigurationPropertyIsNullAndCaughtExceptionAndValueIsNotNullAndNotResolveNestedPlaceholders"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.springframework.core.env.MutablePropertySources)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "87B406DFDDEFEE39F1A751985CDE8977"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 4
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "62D0B8C0E3F698F5965C16F12E4452A6"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "23A886133DA0141E522DC74D3398EA06"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "key1"
        valueType: "java.lang.String"
        uuid: "getPropertyAsRawString_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertySources"
      modelFingerprint: "86FBFD7D606C62DB516DBFDBD9B81CF3"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
        name: "getAttached"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getAttached(MutablePropertySources): PropertySource"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          uuid: "getAttached_propertySource1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "5509703B1090CC629DC3B9CF4DE4B4D7"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          uuid: "getAttached_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "springSource"
      modelFingerprint: "9B451E66109EB5F5A957981808CC2B12"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources"
        uuid: "getAttached_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "springSource"
        name: "isUsingSources"
        parameters:
        - name: "sources"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.MutablePropertySources"
            uuid: "<init>_mutablePropertySources1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isUsingSources(MutablePropertySources): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "getAttached_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ConfigurationPropertyName"
      modelFingerprint: "244491BDF0ED7D755E912CF4F6C65CDD"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        uuid: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        name: "of"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getPropertyAsRawString_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "returnNullIfInvalid"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "of(String,boolean): ConfigurationPropertyName"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
          uuid: "findPropertyValue_configurationPropertyName1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "attached"
      modelFingerprint: "8E406A6028AD840881AFC313D5BD36CD"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      idsTryCatchBlockSurrounding:
      - 40002
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource"
        uuid: "getAttached_propertySource1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "attached"
        name: "findConfigurationProperty"
        parameters:
        - name: "configurationProperty"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "findPropertyValue_configurationPropertyName1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findConfigurationProperty(ConfigurationPropertyName): ConfigurationProperty"
        returnValue:
          sapientType: "NULL"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
          uuid: "findPropertyValue_configurationProperty1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "defaultResolver"
      modelFingerprint: "C190D236DC7E4569C9758F16110C64CB"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
          parameters:
          - name: "propertySources"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.env.MutablePropertySources"
              uuid: "<init>_mutablePropertySources1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver"
        uuid: "<init>_configurationPropertySourcesPropertyResolver.DefaultResolver1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.defaultResolver"
        name: "getProperty"
        parameters:
        - name: "key"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "key1"
            valueType: "java.lang.String"
            uuid: "getPropertyAsRawString_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "targetValueType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolveNestedPlaceholders"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getProperty(String,Class,boolean): Object"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "findPropertyValue_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "F2620829253A8C2B5E882FFED1770FB9"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.ClassUtils"
        uuid: "org.springframework.util.ClassUtils"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isAssignableValue"
        parameters:
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "isAssignableValue(Class,Object): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "convertValueIfNecessary_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "DefaultConversionService"
      modelFingerprint: "7F5AE245D41FD0CC9CB0F9EFFB899CBB"
      index: 10
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.core.convert.support.DefaultConversionService"
        uuid: "org.springframework.core.convert.support.DefaultConversionService"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.core.convert.support.DefaultConversionService"
        name: "getSharedInstance"
        parameters: []
        signature: "getSharedInstance(): ConversionService"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "convertValueIfNecessary_conversionService1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "conversionServiceToUse"
      modelFingerprint: "911836AEC472DB806EDDEF133BDC2D3D"
      index: 11
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.core.convert.ConversionService"
        uuid: "convertValueIfNecessary_conversionService1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "conversionServiceToUse"
        name: "convert"
        parameters:
        - name: "arg0"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "findPropertyValue_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "arg1"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "convert(Object,Class): Object"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: "return_of_convert1"
          suggestedContent: !<method_return_from_value>
            target: "java.lang.Object"
            localVariableValue:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.core.convert.ConversionService"
              uuid: "convertValueIfNecessary_conversionService1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
            methodParameters:
            - name: "arg0"
              value:
                sapientType: "UNKNOWN"
                suggestedContent: !<new>
                  target: "java.lang.Object"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: false
                valueType: "java.lang.Object"
                uuid: "findPropertyValue_object1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            - name: "arg1"
              value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "java.lang.String"
                valueType: "java.lang.Class"
                genericValueType: "java.lang.String"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
            methodName: "convert"
          valueType: "java.lang.String"
          uuid: "convertValueIfNecessary_object1"
          fixed: false
          equalsMethodPresent: true
          explicitCastNeeded: true
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "376A6723B4DDD0B95034EFCBB6F43238"
      index: 12
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "return_of_convert1"
        suggestedContent: !<method_return_from_value>
          target: "java.lang.Object"
          localVariableValue:
            sapientType: "UNKNOWN"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "convertValueIfNecessary_conversionService1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          methodParameters:
          - name: "arg0"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.lang.Object"
              uuid: "findPropertyValue_object1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "arg1"
            value:
              sapientType: "CLASS"
              content: !<regular>
                value: "java.lang.String"
              valueType: "java.lang.Class"
              genericValueType: "java.lang.String"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          methodName: "convert"
        valueType: "java.lang.String"
        uuid: "convertValueIfNecessary_object1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: true
      staticReadMethodForField: false
      filledByUser: false
    uuid: "acf7beb5-251a-3524-99f1-c4f065269f55"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.defaultResolver.getProperty(key, Object.class, false);"
      lineNumber: 97
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: defaultResolver - Method: getProperty"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
