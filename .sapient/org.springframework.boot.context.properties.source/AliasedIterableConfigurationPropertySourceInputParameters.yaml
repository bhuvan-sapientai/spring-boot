---
modelFingerprint: "1317AEF200C8B8DC7AC18F8597EABB1B"
targetClass:
  fullClassName: "org.springframework.boot.context.properties.source.AliasedIterableConfigurationPropertySource"
methods:
- method:
    name: "stream"
    sourceCodeSignature: "Stream<ConfigurationPropertyName> stream()"
    returnType: "java.util.stream.Stream"
    genericReturnType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    instructionFingerprint: "874FCD71A0A981E2FFB5277947E0B482"
  paths:
  - pathId: "path1"
    testPathName: "streamTest"
    constructorSignature: "<init>(org.springframework.boot.context.properties.source.IterableConfigurationPropertySource,org.springframework.boot.context.properties.source.ConfigurationPropertyNameAliases)\
      \ : void"
    modelFingerprint: "B9EE033809F8FAAFF5E88547E2C610CF"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "50D2539986E53BBF96B7FB8E9F283EDE"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "3CFD9DF697674DB699F51FEF46E0D6E5"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:source,message:uniqueUuid1):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1BC41BD3200B33C9872975C1A6862A2E"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:aliases,message:uniqueUuid2):void2"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "73E6093B75BC00507D410B0D1E2A78C7"
      methodExercised:
        expression: "getSource():iterableConfigurationPropertySource"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "5B4C2C628307A1C10229BB5BDB1F7C5E"
      valueUuid: "iterableConfigurationPropertySource"
      methodExercised:
        expression: "stream():stream"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B55B1820CF1A5590EBC1A63BF03E1217"
      valueUuid: "stream2"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.stream.Stream.flatMap(java.util.function.Function)\
        \ : java.util.stream.Stream<org.springframework.boot.context.properties.source.ConfigurationPropertyName>"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.AliasedIterableConfigurationPropertySource"
        parameters:
        - name: "source"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
            uuid: "source"
        - name: "aliases"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyNameAliases"
            uuid: "aliases"
      valueType: "org.springframework.boot.context.properties.source.AliasedIterableConfigurationPropertySource"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "source"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Source must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyNameAliases"
      uuid: "aliases"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Aliases must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "iterableConfigurationPropertySource"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "iterableConfigurationPropertySource"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.util.stream.Stream"
        method: "empty"
        methodParameters: []
      valueType: "java.util.stream.Stream"
      uuid: "stream"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.util.stream.Stream"
        method: "empty"
        methodParameters: []
      valueType: "java.util.stream.Stream"
      uuid: "stream2"
- method:
    name: "getSource"
    sourceCodeSignature: "IterableConfigurationPropertySource getSource()"
    returnType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
    instructionFingerprint: "3EC400BDAF5814B52DCD3AD800B2BE43"
  paths:
  - pathId: "path1"
    testPathName: "getSource1Test"
    constructorSignature: "<init>(org.springframework.boot.context.properties.source.IterableConfigurationPropertySource,org.springframework.boot.context.properties.source.ConfigurationPropertyNameAliases)\
      \ : void"
    modelFingerprint: "0329C1C4A01404D90A9BA553887AB6AC"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "50D2539986E53BBF96B7FB8E9F283EDE"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "3CFD9DF697674DB699F51FEF46E0D6E5"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:source,message:uniqueUuid3):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1BC41BD3200B33C9872975C1A6862A2E"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:aliases,message:uniqueUuid4):void2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "1E9862F51E12F3DCF416FA740B143D04"
      valueUuid: "source"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.AliasedIterableConfigurationPropertySource"
        parameters:
        - name: "source"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
            uuid: "source"
        - name: "aliases"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyNameAliases"
            uuid: "aliases"
      valueType: "org.springframework.boot.context.properties.source.AliasedIterableConfigurationPropertySource"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "source"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Source must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyNameAliases"
      uuid: "aliases"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Aliases must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.IterableConfigurationPropertySource"
      uuid: "source"
