---
modelFingerprint: "8F272228A5C26953E015C6FE035D7613"
targetClass:
  fullClassName: "org.springframework.boot.context.properties.source.MapConfigurationPropertySource"
methods:
- method:
    name: "putAll"
    sourceCodeSignature: "void putAll(Map<?, ?> map)"
    returnType: "void"
    parameters:
    - name: "map"
      type: "java.util.Map"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.UnsupportedOperationException"
    instructionFingerprint: "DD13F2FD79AB9DEC546909B2D96D0730"
  paths:
  - pathId: "path1"
    testPathName: "putAllTest"
    constructorSignature: "<init>(java.util.Map<?,?>) : void"
    modelFingerprint: "3C5D363C22BFBF3C5B8F66114C159B47"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B354F10D8D35214EBE83C895ED6C3362"
      valueUuid: "target"
    - type: "INPUT"
      name: "map"
      modelFingerprint: "4E95D86AE8560E6E2E31460735A27EB7"
      valueUuid: "map2"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "41EE8C5D3418746E975B552C0820DEF1"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:map2,message:uniqueUuid3):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "41EE8C5D3418746E975B552C0820DEF1"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:map2,message:uniqueUuid5):void3"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.MapConfigurationPropertySource"
        parameters:
        - name: "map"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashMap"
              parameters: []
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "MOCK"
                    valueType: "java.lang.Object"
                    uuid: "object"
                    collectionUuid: "map2"
                    nameForMock: "object"
                  value:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.lang.Object"
                      parameters: []
                    valueType: "java.lang.Object"
                    uuid: "object2"
                    collectionUuid: "map2"
                valueType: "java.util.Map$Entry"
            valueType: "java.util.Map"
            genericValueType: "?,?"
            uuid: "map2"
      valueType: "org.springframework.boot.context.properties.source.MapConfigurationPropertySource"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "MOCK"
              valueType: "java.lang.Object"
              uuid: "object"
              collectionUuid: "map2"
              nameForMock: "object"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object2"
              collectionUuid: "map2"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid4"
      valueType: "java.util.Map"
      genericValueType: "?,?"
      uuid: "map2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "MOCK"
              valueType: "java.lang.Object"
              uuid: "object"
              collectionUuid: "map2"
              nameForMock: "object"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object2"
              collectionUuid: "map2"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid4"
      valueType: "java.util.Map"
      genericValueType: "?,?"
      uuid: "map2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Map must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "MOCK"
              valueType: "java.lang.Object"
              uuid: "object"
              collectionUuid: "map2"
              nameForMock: "object"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object2"
              collectionUuid: "map2"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid4"
      valueType: "java.util.Map"
      genericValueType: "?,?"
      uuid: "map2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Map must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
  - pathId: "path2"
    testPathName: "putAllWhenCaughtUnsupportedOperationExceptionThrowsIllegalArgumentException"
    constructorSignature: "<init>(java.util.Map<?,?>) : void"
    modelFingerprint: "9ECC4FC378DE2553577426CBEE0AD068"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B354F10D8D35214EBE83C895ED6C3362"
      valueUuid: "target"
    - type: "INPUT"
      name: "map"
      modelFingerprint: "4E95D86AE8560E6E2E31460735A27EB7"
      valueUuid: "map2"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "41EE8C5D3418746E975B552C0820DEF1"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:map2,message:uniqueUuid8):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "41EE8C5D3418746E975B552C0820DEF1"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:map2,message:uniqueUuid10):void3"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "690285C3A545B250C32FC4A302DFAB8B"
      valueUuid: "illegalArgumentException"
    disabled: true
    failureReason:
      reason: "DEPENDENCY_TO_THROW_EXCEPTION_NOT_FOUND"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.MapConfigurationPropertySource"
        parameters:
        - name: "map"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashMap"
              parameters: []
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "MOCK"
                    valueType: "java.lang.Object"
                    uuid: "object"
                    collectionUuid: "map2"
                    nameForMock: "object"
                  value:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.lang.Object"
                      parameters: []
                    valueType: "java.lang.Object"
                    uuid: "object2"
                    collectionUuid: "map2"
                valueType: "java.util.Map$Entry"
            valueType: "java.util.Map"
            genericValueType: "?,?"
            uuid: "map2"
      valueType: "org.springframework.boot.context.properties.source.MapConfigurationPropertySource"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "MOCK"
              valueType: "java.lang.Object"
              uuid: "object"
              collectionUuid: "map2"
              nameForMock: "object"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object2"
              collectionUuid: "map2"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid9"
      valueType: "java.util.Map"
      genericValueType: "?,?"
      uuid: "map2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "MOCK"
              valueType: "java.lang.Object"
              uuid: "object"
              collectionUuid: "map2"
              nameForMock: "object"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object2"
              collectionUuid: "map2"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid9"
      valueType: "java.util.Map"
      genericValueType: "?,?"
      uuid: "map2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Map must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "MOCK"
              valueType: "java.lang.Object"
              uuid: "object"
              collectionUuid: "map2"
              nameForMock: "object"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object2"
              collectionUuid: "map2"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid9"
      valueType: "java.util.Map"
      genericValueType: "?,?"
      uuid: "map2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Map must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid10"
      fixed: true
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalArgumentException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Security restricted maps are not supported"
            valueType: "java.lang.String"
            uuid: "uniqueUuid11"
            fixed: true
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.UnsupportedOperationException"
              parameters: []
            valueType: "java.lang.UnsupportedOperationException"
            uuid: "unsupportedOperationException"
      valueType: "java.lang.IllegalArgumentException"
      uuid: "illegalArgumentException"
      fixed: true
    branches:
    - lineNumber: 106
      expression: "catch-exception (UnsupportedOperationException)"
      range: "(106,3)-(106,41)"
      evaluatedAs: true
      internalMethodName: "assertNotReadOnlySystemAttributesMap"
    catchBlockExercised:
      idExternalInstruction: 9
      id: 1
      catchExceptions:
      - "java.lang.UnsupportedOperationException"
- method:
    name: "put"
    sourceCodeSignature: "void put(Object name, Object value)"
    returnType: "void"
    parameters:
    - name: "name"
      type: "java.lang.Object"
    - name: "value"
      type: "java.lang.Object"
    instructionFingerprint: "089E175CA04CCBBFEBD4F4A716A987D3"
  paths:
  - pathId: "path1"
    testPathName: "putWhenNameIsNotNull"
    constructorSignature: "<init>(java.util.Map<?,?>) : void"
    modelFingerprint: "9F1BCD43D2479C986F0049D455D9B0C4"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B354F10D8D35214EBE83C895ED6C3362"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "F2FF8C8081B183F95F3BBF7D29151238"
      valueUuid: "object"
    - type: "INPUT"
      name: "value"
      modelFingerprint: "B778E190381B2780AFCA9ED1BAD5E6FF"
      valueUuid: "object2"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "41EE8C5D3418746E975B552C0820DEF1"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:map,message:uniqueUuid13):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.MapConfigurationPropertySource"
        parameters:
        - name: "map"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashMap"
              parameters: []
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "MOCK"
                    valueType: "java.lang.Object"
                    uuid: "object"
                    collectionUuid: "map"
                    nameForMock: "object"
                  value:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.lang.Object"
                      parameters: []
                    valueType: "java.lang.Object"
                    uuid: "object2"
                    collectionUuid: "map"
                valueType: "java.util.Map$Entry"
            valueType: "java.util.Map"
            genericValueType: "?,?"
            uuid: "map"
      valueType: "org.springframework.boot.context.properties.source.MapConfigurationPropertySource"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "java.lang.Object"
      uuid: "object"
      collectionUuid: "map"
      nameForMock: "object"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object2"
      collectionUuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "MOCK"
              valueType: "java.lang.Object"
              uuid: "object"
              collectionUuid: "map"
              nameForMock: "object"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object2"
              collectionUuid: "map"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid12"
      valueType: "java.util.Map"
      genericValueType: "?,?"
      uuid: "map"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Map must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid13"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 79
      expression: "name != null"
      range: "(79,20)-(79,31)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "putWhenNameIsNull"
    constructorSignature: "<init>(java.util.Map<?,?>) : void"
    modelFingerprint: "10094929FF4373FD8C61D4CDA3C26816"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "86024A680B0E65CA7CD9FA2F28DF0444"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "BFF051B64A8AFD80758BB71AEDA004C4"
      valueUuid: "object"
    - type: "INPUT"
      name: "value"
      modelFingerprint: "B778E190381B2780AFCA9ED1BAD5E6FF"
      valueUuid: "object2"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "544CD560375E99300890DB4A6684F3E1"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:map,message:uniqueUuid15):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.MapConfigurationPropertySource"
        parameters:
        - name: "map"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashMap"
              parameters: []
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "NULL"
                    valueType: "java.lang.Object"
                    uuid: "object"
                    fixed: true
                    collectionUuid: "map"
                    nameForMock: "object"
                  value:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.lang.Object"
                      parameters: []
                    valueType: "java.lang.Object"
                    uuid: "object2"
                    collectionUuid: "map"
                valueType: "java.util.Map$Entry"
            valueType: "java.util.Map"
            genericValueType: "?,?"
            uuid: "map"
      valueType: "org.springframework.boot.context.properties.source.MapConfigurationPropertySource"
      uuid: "target"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object"
      fixed: true
      collectionUuid: "map"
      nameForMock: "object"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object2"
      collectionUuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "NULL"
              valueType: "java.lang.Object"
              uuid: "object"
              fixed: true
              collectionUuid: "map"
              nameForMock: "object"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object2"
              collectionUuid: "map"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid14"
      valueType: "java.util.Map"
      genericValueType: "?,?"
      uuid: "map"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Map must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid15"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 79
      expression: "name != null"
      range: "(79,20)-(79,31)"
      evaluatedAs: false
- method:
    name: "getUnderlyingSource"
    sourceCodeSignature: "Object getUnderlyingSource()"
    returnType: "java.lang.Object"
    instructionFingerprint: "659CC13FF08E6FC56DFEAE55BFD299AD"
  paths:
  - pathId: "path1"
    testPathName: "getUnderlyingSourceTest"
    constructorSignature: "<init>(java.util.Map<?,?>) : void"
    modelFingerprint: "06F16244A33B367CFFABCC877228E551"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B354F10D8D35214EBE83C895ED6C3362"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "41EE8C5D3418746E975B552C0820DEF1"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:map,message:uniqueUuid17):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "FFC804E1A205FC16F8F1A06795F96A54"
      valueUuid: "linkedHashMap"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.MapConfigurationPropertySource"
        parameters:
        - name: "map"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashMap"
              parameters: []
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "MOCK"
                    valueType: "java.lang.Object"
                    uuid: "object"
                    collectionUuid: "map"
                    nameForMock: "object"
                  value:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.lang.Object"
                      parameters: []
                    valueType: "java.lang.Object"
                    uuid: "object2"
                    collectionUuid: "map"
                valueType: "java.util.Map$Entry"
            valueType: "java.util.Map"
            genericValueType: "?,?"
            uuid: "map"
      valueType: "org.springframework.boot.context.properties.source.MapConfigurationPropertySource"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "MOCK"
              valueType: "java.lang.Object"
              uuid: "object"
              collectionUuid: "map"
              nameForMock: "object"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object2"
              collectionUuid: "map"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid16"
      valueType: "java.util.Map"
      genericValueType: "?,?"
      uuid: "map"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Map must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid17"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.LinkedHashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "object"
              valueType: "java.lang.String"
              uuid: "string"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object2"
              collectionUuid: "map"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.Object"
          uuid: "uniqueUuid18"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "linkedHashMap"
- method:
    name: "getConfigurationProperty"
    sourceCodeSignature: "ConfigurationProperty getConfigurationProperty(ConfigurationPropertyName\
      \ name)"
    returnType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
    parameters:
    - name: "name"
      type: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    instructionFingerprint: "8AE802297251846DE0C1ADD2BAEE7047"
  paths:
  - pathId: "path1"
    testPathName: "getConfigurationPropertyTest"
    constructorSignature: "<init>(java.util.Map<?,?>) : void"
    modelFingerprint: "0EBA4C74413762828841DE7C56FEF445"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B354F10D8D35214EBE83C895ED6C3362"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "41EE8C5D3418746E975B552C0820DEF1"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:map,message:uniqueUuid20):void"
        staticAccess: true
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "09EFE93F9AF827119304A7AFAE3FCA3A"
      valueUuid: "springIterableConfigurationPropertySource"
      methodExercised:
        expression: "getConfigurationProperty(name:name):configurationProperty"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "88B045005625BEC57B214871DE716CCA"
      valueUuid: "configurationProperty"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return this.delegate.getConfigurationProperty(name);"
      lineNumber: 89
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: delegate - Method: getConfigurationProperty"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.MapConfigurationPropertySource"
        parameters:
        - name: "map"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashMap"
              parameters: []
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "MOCK"
                    valueType: "java.lang.Object"
                    uuid: "object"
                    collectionUuid: "map"
                    nameForMock: "object"
                  value:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.lang.Object"
                      parameters: []
                    valueType: "java.lang.Object"
                    uuid: "object2"
                    collectionUuid: "map"
                valueType: "java.util.Map$Entry"
            valueType: "java.util.Map"
            genericValueType: "?,?"
            uuid: "map"
      valueType: "org.springframework.boot.context.properties.source.MapConfigurationPropertySource"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "MOCK"
              valueType: "java.lang.Object"
              uuid: "object"
              collectionUuid: "map"
              nameForMock: "object"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object2"
              collectionUuid: "map"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid19"
      valueType: "java.util.Map"
      genericValueType: "?,?"
      uuid: "map"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Map must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid20"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
        parameters:
        - name: "propertySource"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.core.env.MapPropertySource"
              parameters:
              - name: "name"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "source"
                  valueType: "java.lang.String"
                  fixed: true
              - name: "source"
                value:
                  sapientType: "COLLECTION"
                  content: !<collection>
                    collectionClass: "java.util.LinkedHashMap"
                    parameters: []
                    values:
                    - sapientType: "PAIR"
                      content: !<pair>
                        key:
                          sapientType: "BASIC"
                          content: !<regular>
                            value: "object"
                          valueType: "java.lang.String"
                          uuid: "string"
                        value:
                          sapientType: "OBJECT"
                          content: !<new>
                            target: "java.lang.Object"
                            parameters: []
                          valueType: "java.lang.Object"
                          uuid: "object2"
                          collectionUuid: "map"
                      valueType: "java.util.Map$Entry"
                      genericValueType: "java.lang.String,java.lang.Object"
                  valueType: "java.util.Map"
                  genericValueType: "java.lang.String,java.lang.Object"
                  uuid: "linkedHashMap"
            valueType: "org.springframework.core.env.MapPropertySource"
            uuid: "mapPropertySource"
            fixed: true
        - name: "mappers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "OBJECT"
                  content: !<static_field_return>
                    target: "org.springframework.boot.context.properties.source.DefaultPropertyMapper"
                    fieldName: "INSTANCE"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper"
            valueType: "org.springframework.boot.context.properties.source.PropertyMapper[]"
            uuid: "propertyMapperArray"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
      uuid: "springIterableConfigurationPropertySource"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
            parameters:
            - name: "propertySource"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.core.env.MapPropertySource"
                  parameters:
                  - name: "name"
                    value:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: "source"
                      valueType: "java.lang.String"
                      fixed: true
                  - name: "source"
                    value:
                      sapientType: "COLLECTION"
                      content: !<collection>
                        collectionClass: "java.util.LinkedHashMap"
                        parameters: []
                        values:
                        - sapientType: "PAIR"
                          content: !<pair>
                            key:
                              sapientType: "BASIC"
                              content: !<regular>
                                value: "object"
                              valueType: "java.lang.String"
                              uuid: "string"
                            value:
                              sapientType: "OBJECT"
                              content: !<new>
                                target: "java.lang.Object"
                                parameters: []
                              valueType: "java.lang.Object"
                              uuid: "object2"
                              collectionUuid: "map"
                          valueType: "java.util.Map$Entry"
                          genericValueType: "java.lang.String,java.lang.Object"
                      valueType: "java.util.Map"
                      genericValueType: "java.lang.String,java.lang.Object"
                      uuid: "linkedHashMap"
                valueType: "org.springframework.core.env.MapPropertySource"
                uuid: "mapPropertySource"
                fixed: true
            - name: "mappers"
              value:
                sapientType: "ARRAY"
                content: !<array>
                  values:
                    0:
                      sapientType: "OBJECT"
                      content: !<static_field_return>
                        target: "org.springframework.boot.context.properties.source.DefaultPropertyMapper"
                        fieldName: "INSTANCE"
                      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                      uuid: "propertyMapper"
                valueType: "org.springframework.boot.context.properties.source.PropertyMapper[]"
                uuid: "propertyMapperArray"
          valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
          uuid: "springIterableConfigurationPropertySource"
          fixed: true
        methodParameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
        methodName: "getConfigurationProperty"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
            parameters:
            - name: "propertySource"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.core.env.MapPropertySource"
                  parameters:
                  - name: "name"
                    value:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: "source"
                      valueType: "java.lang.String"
                      fixed: true
                  - name: "source"
                    value:
                      sapientType: "COLLECTION"
                      content: !<collection>
                        collectionClass: "java.util.LinkedHashMap"
                        parameters: []
                        values:
                        - sapientType: "PAIR"
                          content: !<pair>
                            key:
                              sapientType: "BASIC"
                              content: !<regular>
                                value: "object"
                              valueType: "java.lang.String"
                              uuid: "string"
                            value:
                              sapientType: "OBJECT"
                              content: !<new>
                                target: "java.lang.Object"
                                parameters: []
                              valueType: "java.lang.Object"
                              uuid: "object2"
                              collectionUuid: "map"
                          valueType: "java.util.Map$Entry"
                          genericValueType: "java.lang.String,java.lang.Object"
                      valueType: "java.util.Map"
                      genericValueType: "java.lang.String,java.lang.Object"
                      uuid: "linkedHashMap"
                valueType: "org.springframework.core.env.MapPropertySource"
                uuid: "mapPropertySource"
                fixed: true
            - name: "mappers"
              value:
                sapientType: "ARRAY"
                content: !<array>
                  values:
                    0:
                      sapientType: "OBJECT"
                      content: !<static_field_return>
                        target: "org.springframework.boot.context.properties.source.DefaultPropertyMapper"
                        fieldName: "INSTANCE"
                      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                      uuid: "propertyMapper"
                valueType: "org.springframework.boot.context.properties.source.PropertyMapper[]"
                uuid: "propertyMapperArray"
          valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
          uuid: "springIterableConfigurationPropertySource"
          fixed: true
        methodParameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
        methodName: "getConfigurationProperty"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
- method:
    name: "iterator"
    sourceCodeSignature: "Iterator<ConfigurationPropertyName> iterator()"
    returnType: "java.util.Iterator"
    genericReturnType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    instructionFingerprint: "8B5B67408833F89935869E877F0FED9D"
  paths:
  - pathId: "path1"
    testPathName: "iteratorTest"
    constructorSignature: "<init>(java.util.Map<?,?>) : void"
    modelFingerprint: "7335F56DDD1202F03546F09BE818D851"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B354F10D8D35214EBE83C895ED6C3362"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "41EE8C5D3418746E975B552C0820DEF1"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:map,message:uniqueUuid22):void"
        staticAccess: true
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "11E6CE93EBDD8956ED45D034585D8E8F"
      valueUuid: "springIterableConfigurationPropertySource"
      methodExercised:
        expression: "iterator():iterator"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "335BF70EBD229697840B57ABB14C784C"
      valueUuid: "iterator"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.MapConfigurationPropertySource"
        parameters:
        - name: "map"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashMap"
              parameters: []
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "MOCK"
                    valueType: "java.lang.Object"
                    uuid: "object"
                    collectionUuid: "map"
                    nameForMock: "object"
                  value:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.lang.Object"
                      parameters: []
                    valueType: "java.lang.Object"
                    uuid: "object2"
                    collectionUuid: "map"
                valueType: "java.util.Map$Entry"
            valueType: "java.util.Map"
            genericValueType: "?,?"
            uuid: "map"
      valueType: "org.springframework.boot.context.properties.source.MapConfigurationPropertySource"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "MOCK"
              valueType: "java.lang.Object"
              uuid: "object"
              collectionUuid: "map"
              nameForMock: "object"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object2"
              collectionUuid: "map"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid21"
      valueType: "java.util.Map"
      genericValueType: "?,?"
      uuid: "map"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Map must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid22"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
        parameters:
        - name: "propertySource"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.core.env.MapPropertySource"
              parameters:
              - name: "name"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "source"
                  valueType: "java.lang.String"
                  fixed: true
              - name: "source"
                value:
                  sapientType: "COLLECTION"
                  content: !<collection>
                    collectionClass: "java.util.LinkedHashMap"
                    parameters: []
                    values:
                    - sapientType: "PAIR"
                      content: !<pair>
                        key:
                          sapientType: "BASIC"
                          content: !<regular>
                            value: "object"
                          valueType: "java.lang.String"
                          uuid: "string"
                        value:
                          sapientType: "OBJECT"
                          content: !<new>
                            target: "java.lang.Object"
                            parameters: []
                          valueType: "java.lang.Object"
                          uuid: "object2"
                          collectionUuid: "map"
                      valueType: "java.util.Map$Entry"
                      genericValueType: "java.lang.String,java.lang.Object"
                  valueType: "java.util.Map"
                  genericValueType: "java.lang.String,java.lang.Object"
                  uuid: "linkedHashMap"
            valueType: "org.springframework.core.env.MapPropertySource"
            uuid: "mapPropertySource"
            fixed: true
        - name: "mappers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "OBJECT"
                  content: !<static_field_return>
                    target: "org.springframework.boot.context.properties.source.DefaultPropertyMapper"
                    fieldName: "INSTANCE"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper"
            valueType: "org.springframework.boot.context.properties.source.PropertyMapper[]"
            uuid: "propertyMapperArray"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
      uuid: "springIterableConfigurationPropertySource"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.util.Iterator"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
            parameters:
            - name: "propertySource"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.core.env.MapPropertySource"
                  parameters:
                  - name: "name"
                    value:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: "source"
                      valueType: "java.lang.String"
                      fixed: true
                  - name: "source"
                    value:
                      sapientType: "COLLECTION"
                      content: !<collection>
                        collectionClass: "java.util.LinkedHashMap"
                        parameters: []
                        values:
                        - sapientType: "PAIR"
                          content: !<pair>
                            key:
                              sapientType: "BASIC"
                              content: !<regular>
                                value: "object"
                              valueType: "java.lang.String"
                              uuid: "string"
                            value:
                              sapientType: "OBJECT"
                              content: !<new>
                                target: "java.lang.Object"
                                parameters: []
                              valueType: "java.lang.Object"
                              uuid: "object2"
                              collectionUuid: "map"
                          valueType: "java.util.Map$Entry"
                          genericValueType: "java.lang.String,java.lang.Object"
                      valueType: "java.util.Map"
                      genericValueType: "java.lang.String,java.lang.Object"
                      uuid: "linkedHashMap"
                valueType: "org.springframework.core.env.MapPropertySource"
                uuid: "mapPropertySource"
                fixed: true
            - name: "mappers"
              value:
                sapientType: "ARRAY"
                content: !<array>
                  values:
                    0:
                      sapientType: "OBJECT"
                      content: !<static_field_return>
                        target: "org.springframework.boot.context.properties.source.DefaultPropertyMapper"
                        fieldName: "INSTANCE"
                      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                      uuid: "propertyMapper"
                valueType: "org.springframework.boot.context.properties.source.PropertyMapper[]"
                uuid: "propertyMapperArray"
          valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
          uuid: "springIterableConfigurationPropertySource"
          fixed: true
        methodParameters: []
        methodName: "iterator"
      valueType: "java.util.Iterator"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "iterator"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.util.Iterator"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
            parameters:
            - name: "propertySource"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.core.env.MapPropertySource"
                  parameters:
                  - name: "name"
                    value:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: "source"
                      valueType: "java.lang.String"
                      fixed: true
                  - name: "source"
                    value:
                      sapientType: "COLLECTION"
                      content: !<collection>
                        collectionClass: "java.util.LinkedHashMap"
                        parameters: []
                        values:
                        - sapientType: "PAIR"
                          content: !<pair>
                            key:
                              sapientType: "BASIC"
                              content: !<regular>
                                value: "object"
                              valueType: "java.lang.String"
                              uuid: "string"
                            value:
                              sapientType: "OBJECT"
                              content: !<new>
                                target: "java.lang.Object"
                                parameters: []
                              valueType: "java.lang.Object"
                              uuid: "object2"
                              collectionUuid: "map"
                          valueType: "java.util.Map$Entry"
                          genericValueType: "java.lang.String,java.lang.Object"
                      valueType: "java.util.Map"
                      genericValueType: "java.lang.String,java.lang.Object"
                      uuid: "linkedHashMap"
                valueType: "org.springframework.core.env.MapPropertySource"
                uuid: "mapPropertySource"
                fixed: true
            - name: "mappers"
              value:
                sapientType: "ARRAY"
                content: !<array>
                  values:
                    0:
                      sapientType: "OBJECT"
                      content: !<static_field_return>
                        target: "org.springframework.boot.context.properties.source.DefaultPropertyMapper"
                        fieldName: "INSTANCE"
                      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                      uuid: "propertyMapper"
                valueType: "org.springframework.boot.context.properties.source.PropertyMapper[]"
                uuid: "propertyMapperArray"
          valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
          uuid: "springIterableConfigurationPropertySource"
          fixed: true
        methodParameters: []
        methodName: "iterator"
      valueType: "java.util.Iterator"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "iterator"
- method:
    name: "stream"
    sourceCodeSignature: "Stream<ConfigurationPropertyName> stream()"
    returnType: "java.util.stream.Stream"
    genericReturnType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    instructionFingerprint: "8125C697900D810245D5E7AAF16EF340"
  paths:
  - pathId: "path1"
    testPathName: "streamTest"
    constructorSignature: "<init>(java.util.Map<?,?>) : void"
    modelFingerprint: "4AA65FFBCF0F9FDCB653195130FDB2B6"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B354F10D8D35214EBE83C895ED6C3362"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "41EE8C5D3418746E975B552C0820DEF1"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:map,message:uniqueUuid24):void"
        staticAccess: true
    - type: "FIELD"
      name: "delegate"
      modelFingerprint: "19BDFCA533B5634842A685036DD56027"
      valueUuid: "springIterableConfigurationPropertySource"
      methodExercised:
        expression: "stream():stream"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "14A4032847F641001948124D2EB07F93"
      valueUuid: "stream"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.MapConfigurationPropertySource"
        parameters:
        - name: "map"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashMap"
              parameters: []
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "MOCK"
                    valueType: "java.lang.Object"
                    uuid: "object"
                    collectionUuid: "map"
                    nameForMock: "object"
                  value:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.lang.Object"
                      parameters: []
                    valueType: "java.lang.Object"
                    uuid: "object2"
                    collectionUuid: "map"
                valueType: "java.util.Map$Entry"
            valueType: "java.util.Map"
            genericValueType: "?,?"
            uuid: "map"
      valueType: "org.springframework.boot.context.properties.source.MapConfigurationPropertySource"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "MOCK"
              valueType: "java.lang.Object"
              uuid: "object"
              collectionUuid: "map"
              nameForMock: "object"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object2"
              collectionUuid: "map"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid23"
      valueType: "java.util.Map"
      genericValueType: "?,?"
      uuid: "map"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Map must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid24"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
        parameters:
        - name: "propertySource"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.core.env.MapPropertySource"
              parameters:
              - name: "name"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "source"
                  valueType: "java.lang.String"
                  fixed: true
              - name: "source"
                value:
                  sapientType: "COLLECTION"
                  content: !<collection>
                    collectionClass: "java.util.LinkedHashMap"
                    parameters: []
                    values:
                    - sapientType: "PAIR"
                      content: !<pair>
                        key:
                          sapientType: "BASIC"
                          content: !<regular>
                            value: "object"
                          valueType: "java.lang.String"
                          uuid: "string"
                        value:
                          sapientType: "OBJECT"
                          content: !<new>
                            target: "java.lang.Object"
                            parameters: []
                          valueType: "java.lang.Object"
                          uuid: "object2"
                          collectionUuid: "map"
                      valueType: "java.util.Map$Entry"
                      genericValueType: "java.lang.String,java.lang.Object"
                  valueType: "java.util.Map"
                  genericValueType: "java.lang.String,java.lang.Object"
                  uuid: "linkedHashMap"
            valueType: "org.springframework.core.env.MapPropertySource"
            uuid: "mapPropertySource"
            fixed: true
        - name: "mappers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "OBJECT"
                  content: !<static_field_return>
                    target: "org.springframework.boot.context.properties.source.DefaultPropertyMapper"
                    fieldName: "INSTANCE"
                  valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                  uuid: "propertyMapper"
            valueType: "org.springframework.boot.context.properties.source.PropertyMapper[]"
            uuid: "propertyMapperArray"
      valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
      uuid: "springIterableConfigurationPropertySource"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.util.stream.Stream"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
            parameters:
            - name: "propertySource"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.core.env.MapPropertySource"
                  parameters:
                  - name: "name"
                    value:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: "source"
                      valueType: "java.lang.String"
                      fixed: true
                  - name: "source"
                    value:
                      sapientType: "COLLECTION"
                      content: !<collection>
                        collectionClass: "java.util.LinkedHashMap"
                        parameters: []
                        values:
                        - sapientType: "PAIR"
                          content: !<pair>
                            key:
                              sapientType: "BASIC"
                              content: !<regular>
                                value: "object"
                              valueType: "java.lang.String"
                              uuid: "string"
                            value:
                              sapientType: "OBJECT"
                              content: !<new>
                                target: "java.lang.Object"
                                parameters: []
                              valueType: "java.lang.Object"
                              uuid: "object2"
                              collectionUuid: "map"
                          valueType: "java.util.Map$Entry"
                          genericValueType: "java.lang.String,java.lang.Object"
                      valueType: "java.util.Map"
                      genericValueType: "java.lang.String,java.lang.Object"
                      uuid: "linkedHashMap"
                valueType: "org.springframework.core.env.MapPropertySource"
                uuid: "mapPropertySource"
                fixed: true
            - name: "mappers"
              value:
                sapientType: "ARRAY"
                content: !<array>
                  values:
                    0:
                      sapientType: "OBJECT"
                      content: !<static_field_return>
                        target: "org.springframework.boot.context.properties.source.DefaultPropertyMapper"
                        fieldName: "INSTANCE"
                      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                      uuid: "propertyMapper"
                valueType: "org.springframework.boot.context.properties.source.PropertyMapper[]"
                uuid: "propertyMapperArray"
          valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
          uuid: "springIterableConfigurationPropertySource"
          fixed: true
        methodParameters: []
        methodName: "stream"
      valueType: "java.util.stream.Stream"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "stream"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.util.stream.Stream"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
            parameters:
            - name: "propertySource"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.core.env.MapPropertySource"
                  parameters:
                  - name: "name"
                    value:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: "source"
                      valueType: "java.lang.String"
                      fixed: true
                  - name: "source"
                    value:
                      sapientType: "COLLECTION"
                      content: !<collection>
                        collectionClass: "java.util.LinkedHashMap"
                        parameters: []
                        values:
                        - sapientType: "PAIR"
                          content: !<pair>
                            key:
                              sapientType: "BASIC"
                              content: !<regular>
                                value: "object"
                              valueType: "java.lang.String"
                              uuid: "string"
                            value:
                              sapientType: "OBJECT"
                              content: !<new>
                                target: "java.lang.Object"
                                parameters: []
                              valueType: "java.lang.Object"
                              uuid: "object2"
                              collectionUuid: "map"
                          valueType: "java.util.Map$Entry"
                          genericValueType: "java.lang.String,java.lang.Object"
                      valueType: "java.util.Map"
                      genericValueType: "java.lang.String,java.lang.Object"
                      uuid: "linkedHashMap"
                valueType: "org.springframework.core.env.MapPropertySource"
                uuid: "mapPropertySource"
                fixed: true
            - name: "mappers"
              value:
                sapientType: "ARRAY"
                content: !<array>
                  values:
                    0:
                      sapientType: "OBJECT"
                      content: !<static_field_return>
                        target: "org.springframework.boot.context.properties.source.DefaultPropertyMapper"
                        fieldName: "INSTANCE"
                      valueType: "org.springframework.boot.context.properties.source.PropertyMapper"
                      uuid: "propertyMapper"
                valueType: "org.springframework.boot.context.properties.source.PropertyMapper[]"
                uuid: "propertyMapperArray"
          valueType: "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource"
          uuid: "springIterableConfigurationPropertySource"
          fixed: true
        methodParameters: []
        methodName: "stream"
      valueType: "java.util.stream.Stream"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "stream"
