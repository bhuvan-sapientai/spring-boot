---
modelFingerprint: "BE4B16F5371BD13321FE156162624253"
targetClass:
  fullClassName: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
methods:
- method:
    name: "isEmpty"
    sourceCodeSignature: "boolean isEmpty()"
    returnType: "boolean"
    instructionFingerprint: "952F04D5A35DE004C135663D3CB3DD82"
  paths:
  - pathId: "path1"
    testPathName: "isEmptyWhenThisElementsGetSizeEquals0"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "3571C95B509619666F6D975926660A49"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid1):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8383DF6F1D02800B0E90FD4143032B37"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.getSize()\
        \ : int"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 80
      expression: "this.elements.getSize() == 0"
      range: "(80,10)-(80,37)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "isEmptyWhenThisElementsGetSizeNotEquals0"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "9CFEC386E63C7A6A71F83FA041E38BA5"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid2):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.getSize()\
        \ : int"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 80
      expression: "this.elements.getSize() == 0"
      range: "(80,10)-(80,37)"
      evaluatedAs: false
- method:
    name: "isLastElementIndexed"
    sourceCodeSignature: "boolean isLastElementIndexed()"
    returnType: "boolean"
    instructionFingerprint: "4D984C8E5C520C8B45D4181676F9AE15"
  paths:
  - pathId: "path1"
    testPathName: "isLastElementIndexedWhenIsIndexedSizeMinus1"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "5D4867BB4838D34EC17B61F7D9B6F294"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid3):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "1C3E59E1144479082C7A20D008B36EDF"
      methodExercised:
        expression: "isIndexed(elementIndex:int3):boolean2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8383DF6F1D02800B0E90FD4143032B37"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.getSize()\
        \ : int"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int3"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 89
      expression: "size > 0"
      range: "(89,11)-(89,18)"
      evaluatedAs: true
    - lineNumber: 89
      expression: "isIndexed(size - 1)"
      range: "(89,23)-(89,41)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "isLastElementIndexedWhenIsIndexedNotSizeMinus1"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "6CBB0AE50CBCF46D9333F35A8C7C5253"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid4):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "CA33122A3B41DC1E69F8AB1ECF68BA28"
      methodExercised:
        expression: "isIndexed(elementIndex:int3):boolean2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.getSize()\
        \ : int"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int3"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 89
      expression: "size > 0"
      range: "(89,11)-(89,18)"
      evaluatedAs: true
    - lineNumber: 89
      expression: "isIndexed(size - 1)"
      range: "(89,23)-(89,41)"
      evaluatedAs: false
- method:
    name: "hasIndexedElement"
    sourceCodeSignature: "boolean hasIndexedElement()"
    returnType: "boolean"
    instructionFingerprint: "7459FE067B3E095B177E4E1388936D36"
  paths:
  - pathId: "path1"
    testPathName: "hasIndexedElementWhenIsIndexedI"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "ABEA2978782F85FF4C72BF4D744C5726"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid5):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "DD44A10B1C9BA7DCF9AD143FD1689B90"
      methodExercised:
        expression: "isIndexed(elementIndex:int2):boolean2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8383DF6F1D02800B0E90FD4143032B37"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.getSize()\
        \ : int"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 98
      expression: "i < getNumberOfElements()"
      range: "(98,19)-(98,43)"
      evaluatedAs: true
    - lineNumber: 99
      expression: "isIndexed(i)"
      range: "(99,8)-(99,19)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "hasIndexedElementWhenIsIndexedNotI"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "C3436FBF381C7AFC857434B4FE19E430"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid6):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "9C06BA46B06C4A91968193F692BB9469"
      methodExercised:
        expression: "isIndexed(elementIndex:int2):boolean2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.getSize()\
        \ : int"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid6"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 98
      expression: "i < getNumberOfElements()"
      range: "(98,19)-(98,43)"
      evaluatedAs: true
    - lineNumber: 99
      expression: "isIndexed(i)"
      range: "(99,8)-(99,19)"
      evaluatedAs: false
- method:
    name: "isIndexed"
    sourceCodeSignature: "boolean isIndexed(int elementIndex)"
    returnType: "boolean"
    parameters:
    - name: "elementIndex"
      type: "int"
    instructionFingerprint: "5ABEC211C6A9BF986B09305801D07629"
  paths:
  - pathId: "path1"
    testPathName: "isIndexedWhenThisElementsGetTypeElementIndexIsIndexed"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "42F3A3E64B02D680B65271E7C5061CCC"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "INPUT"
      name: "elementIndex"
      modelFingerprint: "523215E3371AD5E10CA54A184C7FDBF7"
      valueUuid: "elementIndex"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid7):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "008FA075564487DD49423319C7795C5E"
      valueUuid: "boolean2"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.getType(int)\
        \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName$ElementType"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "elementIndex"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid7"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
      fixed: true
    branches:
    - lineNumber: 112
      expression: "this.elements.getType(elementIndex).isIndexed()"
      range: "(112,10)-(112,56)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "isIndexedWhenThisElementsGetTypeElementIndexNotIsIndexed"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "E3D6BE86CBA87DE0926E8ED77EAD5A33"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "INPUT"
      name: "elementIndex"
      modelFingerprint: "523215E3371AD5E10CA54A184C7FDBF7"
      valueUuid: "elementIndex"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid8):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C532B70D233E59BD0B9DC9C634733651"
      valueUuid: "boolean2"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.getType(int)\
        \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName$ElementType"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "elementIndex"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid8"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
      fixed: true
    branches:
    - lineNumber: 112
      expression: "this.elements.getType(elementIndex).isIndexed()"
      range: "(112,10)-(112,56)"
      evaluatedAs: false
- method:
    name: "isNumericIndex"
    sourceCodeSignature: "boolean isNumericIndex(int elementIndex)"
    returnType: "boolean"
    parameters:
    - name: "elementIndex"
      type: "int"
    instructionFingerprint: "8F50ECF6F6C0606DECE9E77C9C290679"
  paths:
  - pathId: "path1"
    testPathName: "isNumericIndexWhenThisElementsGetTypeElementIndexEqualsElementTypeNUMERICALLY_INDEXED"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "0CD5C882B31CBC851E569D71AB20072B"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "INPUT"
      name: "elementIndex"
      modelFingerprint: "523215E3371AD5E10CA54A184C7FDBF7"
      valueUuid: "elementIndex"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid9):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8383DF6F1D02800B0E90FD4143032B37"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.getType(int)\
        \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName$ElementType"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "elementIndex"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid9"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 121
      expression: "this.elements.getType(elementIndex) == ElementType.NUMERICALLY_INDEXED"
      range: "(121,10)-(121,79)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "isNumericIndexWhenThisElementsGetTypeElementIndexNotEqualsElementTypeNUMERICALLY_INDEXED"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "0D05D2CFE177CC68BD8D3CE1D3B97ABC"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "INPUT"
      name: "elementIndex"
      modelFingerprint: "523215E3371AD5E10CA54A184C7FDBF7"
      valueUuid: "elementIndex"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid10):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.getType(int)\
        \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName$ElementType"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "elementIndex"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid10"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 121
      expression: "this.elements.getType(elementIndex) == ElementType.NUMERICALLY_INDEXED"
      range: "(121,10)-(121,79)"
      evaluatedAs: false
- method:
    name: "getLastElement"
    sourceCodeSignature: "String getLastElement(Form form)"
    returnType: "java.lang.String"
    parameters:
    - name: "form"
      type: "org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form"
    instructionFingerprint: "3552462083128DFE122C552692486F1B"
  paths:
  - pathId: "path1"
    testPathName: "getLastElementWhenSizeNotEquals0"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "2F6C868AEFF4B3BC63CB0CDD476DB05A"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "INPUT"
      name: "form"
      modelFingerprint: "14FB528E1C2A3476EBDB3BC3FE456445"
      valueUuid: "form"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid11):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "D05D697CE2F32616E99A85993E261F2B"
      methodExercised:
        expression: "getElement(elementIndex:int3,form:form):string"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D446A609419428DDEAA49A58091F3986"
      valueUuid: "string"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.getSize()\
        \ : int"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "ENUM"
      content: !<regular>
        value: "ORIGINAL"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form"
      uuid: "form"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid11"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getElement1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int3"
    - sapientType: "ENUM"
      content: !<regular>
        value: "ORIGINAL"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form"
      uuid: "form"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getElement1"
      valueType: "java.lang.String"
      uuid: "string"
    branches:
    - lineNumber: 131
      expression: "size != 0"
      range: "(131,11)-(131,19)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "getLastElementWhenSizeEquals0"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "8AB0E439D16A42D159058B7127D8C10E"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "INPUT"
      name: "form"
      modelFingerprint: "14FB528E1C2A3476EBDB3BC3FE456445"
      valueUuid: "form"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid12):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "205DECE22B55DDF8BC2B1D5DABA76697"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.getSize()\
        \ : int"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "ENUM"
      content: !<regular>
        value: "ORIGINAL"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form"
      uuid: "form"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid12"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 131
      expression: "size != 0"
      range: "(131,11)-(131,19)"
      evaluatedAs: false
- method:
    name: "getElement"
    sourceCodeSignature: "String getElement(int elementIndex, Form form)"
    returnType: "java.lang.String"
    parameters:
    - name: "elementIndex"
      type: "int"
    - name: "form"
      type: "org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form"
    instructionFingerprint: "98068412C8C8CB89F6C96089E61B2A99"
  paths:
  - pathId: "path1"
    testPathName: "getElementWhenTypeIsIndexed"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "D355021656AB8E57B8E78D17FA17B8F1"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "INPUT"
      name: "elementIndex"
      modelFingerprint: "523215E3371AD5E10CA54A184C7FDBF7"
      valueUuid: "elementIndex"
    - type: "INPUT"
      name: "form"
      modelFingerprint: "14FB528E1C2A3476EBDB3BC3FE456445"
      valueUuid: "form"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid13):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "EB527607183F0C94B97E004A9D65446F"
      valueUuid: "string"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.get(int)\
        \ : java.lang.CharSequence"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "elementIndex"
    - sapientType: "ENUM"
      content: !<regular>
        value: "ORIGINAL"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form"
      uuid: "form"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid13"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "charSequence"
      valueType: "java.lang.String"
      uuid: "string"
    branches:
    - lineNumber: 143
      expression: "type.isIndexed()"
      range: "(143,7)-(143,22)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "getElementWhenTypeNotEqualsElementTypeNON_UNIFORM"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "1237FFEAF3DAB4C563AAB81C75D676D6"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "INPUT"
      name: "elementIndex"
      modelFingerprint: "523215E3371AD5E10CA54A184C7FDBF7"
      valueUuid: "elementIndex"
    - type: "INPUT"
      name: "form"
      modelFingerprint: "0D3460CA476F5C8707D0240FFEEAED4F"
      valueUuid: "form"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid14):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "EB527607183F0C94B97E004A9D65446F"
      valueUuid: "string"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.get(int)\
        \ : java.lang.CharSequence"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "elementIndex"
    - sapientType: "ENUM"
      content: !<regular>
        value: "ORIGINAL"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form"
      uuid: "form"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid14"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "charSequence"
      valueType: "java.lang.String"
      uuid: "string"
    branches:
    - lineNumber: 143
      expression: "type.isIndexed()"
      range: "(143,7)-(143,22)"
      evaluatedAs: false
    - lineNumber: 146
      expression: "form == Form.ORIGINAL"
      range: "(146,7)-(146,27)"
      evaluatedAs: true
    - lineNumber: 147
      expression: "type != ElementType.NON_UNIFORM"
      range: "(147,8)-(147,38)"
      evaluatedAs: true
  - pathId: "path5"
    testPathName: "getElementWhenTypeEqualsElementTypeDASHED"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "87D6F92161E1413F6D60A7CEA978A9BB"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "INPUT"
      name: "elementIndex"
      modelFingerprint: "523215E3371AD5E10CA54A184C7FDBF7"
      valueUuid: "elementIndex"
    - type: "INPUT"
      name: "form"
      modelFingerprint: "180686F03E079C228F409ECB96D39D1B"
      valueUuid: "form"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid15):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "EB527607183F0C94B97E004A9D65446F"
      valueUuid: "string"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.get(int)\
        \ : java.lang.CharSequence"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "elementIndex"
    - sapientType: "ENUM"
      content: !<regular>
        value: "DASHED"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form"
      uuid: "form"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid15"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "charSequence"
      valueType: "java.lang.String"
      uuid: "string"
    branches:
    - lineNumber: 143
      expression: "type.isIndexed()"
      range: "(143,7)-(143,22)"
      evaluatedAs: false
    - lineNumber: 146
      expression: "form == Form.ORIGINAL"
      range: "(146,7)-(146,27)"
      evaluatedAs: false
    - lineNumber: 152
      expression: "form == Form.DASHED"
      range: "(152,7)-(152,25)"
      evaluatedAs: true
    - lineNumber: 153
      expression: "type == ElementType.UNIFORM"
      range: "(153,8)-(153,34)"
      evaluatedAs: false
    - lineNumber: 153
      expression: "type == ElementType.DASHED"
      range: "(153,39)-(153,64)"
      evaluatedAs: true
  - pathId: "path9"
    testPathName: "getElementWhenTypeEqualsElementTypeUNIFORM"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "BECC51FC9EE9C66EE72D82162E78D145"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "INPUT"
      name: "elementIndex"
      modelFingerprint: "523215E3371AD5E10CA54A184C7FDBF7"
      valueUuid: "elementIndex"
    - type: "INPUT"
      name: "form"
      modelFingerprint: "37A3A899B7CCA39FBC382325750FF1BC"
      valueUuid: "form"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid16):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "EB527607183F0C94B97E004A9D65446F"
      valueUuid: "string2"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.get(int)\
        \ : java.lang.CharSequence"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "elementIndex"
    - sapientType: "ENUM"
      content: !<regular>
        value: "UNIFORM"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form"
      uuid: "form"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid16"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "charSequence"
      valueType: "java.lang.String"
      uuid: "string2"
    branches:
    - lineNumber: 143
      expression: "type.isIndexed()"
      range: "(143,7)-(143,22)"
      evaluatedAs: false
    - lineNumber: 146
      expression: "form == Form.ORIGINAL"
      range: "(146,7)-(146,27)"
      evaluatedAs: false
    - lineNumber: 152
      expression: "form == Form.DASHED"
      range: "(152,7)-(152,25)"
      evaluatedAs: false
    - lineNumber: 159
      expression: "uniformElement == null"
      range: "(159,7)-(159,28)"
      evaluatedAs: true
    - lineNumber: 160
      expression: "type != ElementType.UNIFORM"
      range: "(160,22)-(160,48)"
      evaluatedAs: false
  - pathId: "path3"
    testPathName: "getElementWhenFilterTestChI"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "4B08C6BEDED4BF6C4588F4A7B47243C8"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "INPUT"
      name: "elementIndex"
      modelFingerprint: "523215E3371AD5E10CA54A184C7FDBF7"
      valueUuid: "elementIndex"
    - type: "INPUT"
      name: "form"
      modelFingerprint: "0D3460CA476F5C8707D0240FFEEAED4F"
      valueUuid: "form"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid17):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "9B4065C5CE011B07DF9107230BF1A794"
      valueUuid: "string"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.get(int)\
        \ : java.lang.CharSequence"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "elementIndex"
    - sapientType: "ENUM"
      content: !<regular>
        value: "ORIGINAL"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form"
      uuid: "form"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid17"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string"
    branches:
    - lineNumber: 143
      expression: "type.isIndexed()"
      range: "(143,7)-(143,22)"
      evaluatedAs: false
    - lineNumber: 146
      expression: "form == Form.ORIGINAL"
      range: "(146,7)-(146,27)"
      evaluatedAs: true
    - lineNumber: 147
      expression: "type != ElementType.NON_UNIFORM"
      range: "(147,8)-(147,38)"
      evaluatedAs: false
    - lineNumber: 181
      expression: "i < element.length()"
      range: "(181,19)-(181,38)"
      evaluatedAs: true
      internalMethodName: "convertElement"
    - lineNumber: 182
      expression: "lowercase"
      range: "(182,14)-(182,22)"
      evaluatedAs: false
      internalMethodName: "convertElement"
    - lineNumber: 183
      expression: "filter.test(ch, i)"
      range: "(183,8)-(183,25)"
      evaluatedAs: true
      internalMethodName: "convertElement"
  - pathId: "path6"
    testPathName: "getElementWhenLowercaseAndFilterTestChI"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "9D181FCD6C64E4624DCE43A717058A8A"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "INPUT"
      name: "elementIndex"
      modelFingerprint: "523215E3371AD5E10CA54A184C7FDBF7"
      valueUuid: "elementIndex"
    - type: "INPUT"
      name: "form"
      modelFingerprint: "180686F03E079C228F409ECB96D39D1B"
      valueUuid: "form"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid18):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "47D6A312F52E05DC77A48202A66714F0"
      valueUuid: "string"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.get(int)\
        \ : java.lang.CharSequence"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "elementIndex"
    - sapientType: "ENUM"
      content: !<regular>
        value: "DASHED"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form"
      uuid: "form"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid18"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "a"
      valueType: "java.lang.String"
      uuid: "string"
    branches:
    - lineNumber: 143
      expression: "type.isIndexed()"
      range: "(143,7)-(143,22)"
      evaluatedAs: false
    - lineNumber: 146
      expression: "form == Form.ORIGINAL"
      range: "(146,7)-(146,27)"
      evaluatedAs: false
    - lineNumber: 152
      expression: "form == Form.DASHED"
      range: "(152,7)-(152,25)"
      evaluatedAs: true
    - lineNumber: 153
      expression: "type == ElementType.UNIFORM"
      range: "(153,8)-(153,34)"
      evaluatedAs: false
    - lineNumber: 153
      expression: "type == ElementType.DASHED"
      range: "(153,39)-(153,64)"
      evaluatedAs: false
    - lineNumber: 181
      expression: "i < element.length()"
      range: "(181,19)-(181,38)"
      evaluatedAs: true
      internalMethodName: "convertElement"
    - lineNumber: 182
      expression: "lowercase"
      range: "(182,14)-(182,22)"
      evaluatedAs: true
      internalMethodName: "convertElement"
    - lineNumber: 183
      expression: "filter.test(ch, i)"
      range: "(183,8)-(183,25)"
      evaluatedAs: true
      internalMethodName: "convertElement"
  - pathId: "path8"
    testPathName: "getElementWhenILessThanElementLengthAndLowercaseAndFilterTestChI"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "A1C454288F6E77CACC08999F1409031C"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "INPUT"
      name: "elementIndex"
      modelFingerprint: "523215E3371AD5E10CA54A184C7FDBF7"
      valueUuid: "elementIndex"
    - type: "INPUT"
      name: "form"
      modelFingerprint: "37A3A899B7CCA39FBC382325750FF1BC"
      valueUuid: "form"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid19):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D446A609419428DDEAA49A58091F3986"
      valueUuid: "string2"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.get(int)\
        \ : java.lang.CharSequence"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "elementIndex"
    - sapientType: "ENUM"
      content: !<regular>
        value: "UNIFORM"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form"
      uuid: "form"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid19"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    branches:
    - lineNumber: 143
      expression: "type.isIndexed()"
      range: "(143,7)-(143,22)"
      evaluatedAs: false
    - lineNumber: 146
      expression: "form == Form.ORIGINAL"
      range: "(146,7)-(146,27)"
      evaluatedAs: false
    - lineNumber: 152
      expression: "form == Form.DASHED"
      range: "(152,7)-(152,25)"
      evaluatedAs: false
    - lineNumber: 159
      expression: "uniformElement == null"
      range: "(159,7)-(159,28)"
      evaluatedAs: true
    - lineNumber: 160
      expression: "type != ElementType.UNIFORM"
      range: "(160,22)-(160,48)"
      evaluatedAs: true
    - lineNumber: 181
      expression: "i < element.length()"
      range: "(181,19)-(181,38)"
      evaluatedAs: true
      internalMethodName: "convertElement"
    - lineNumber: 182
      expression: "lowercase"
      range: "(182,14)-(182,22)"
      evaluatedAs: true
      internalMethodName: "convertElement"
    - lineNumber: 183
      expression: "filter.test(ch, i)"
      range: "(183,8)-(183,25)"
      evaluatedAs: true
      internalMethodName: "convertElement"
- method:
    name: "getNumberOfElements"
    sourceCodeSignature: "int getNumberOfElements()"
    returnType: "int"
    instructionFingerprint: "84F110BB8D85C1E462FC61A9D97431ED"
  paths:
  - pathId: "path1"
    testPathName: "getNumberOfElementsTest"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "5612E8FC7303FC28E2F15A70BD0A7FD1"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid20):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D59799CAFC96C0482BA7B23AC5F38441"
      valueUuid: "int2"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.getSize()\
        \ : int"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid20"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int2"
- method:
    name: "append"
    sourceCodeSignature: "ConfigurationPropertyName append(String suffix)"
    returnType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    parameters:
    - name: "suffix"
      type: "java.lang.String"
    instructionFingerprint: "F8253BE24F75D91734AA78A4B33AB5F2"
  paths:
  - pathId: "path1"
    testPathName: "appendWhenStringUtilsNotHasLengthSuffix"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "FE982D3CF0FA80CF6290C7CE69688E3A"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "INPUT"
      name: "suffix"
      modelFingerprint: "88EA8275AAA8628886649F426E7A608F"
      valueUuid: "suffix"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid21):void"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "DD9F0D4C1858580EBB7B38DD7EAE0873"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasLength(str:suffix):boolean2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "72E5AA3F26BBB89E295F113097B1C6E5"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "suffix"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid21"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "suffix"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "targetClassObject"
      fixed: true
    branches:
    - lineNumber: 205
      expression: "!StringUtils.hasLength(suffix)"
      range: "(205,7)-(205,36)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "appendWhenNameIsNull"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "AA1A1B5788756D470D9D382452F71376"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "INPUT"
      name: "suffix"
      modelFingerprint: "D07F44B8D3695B454B21A86EC0D72A72"
      valueUuid: "suffix"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid22):void"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "0014CDC602C0957A586F7102E928A998"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasLength(str:suffix):boolean2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "353865FAF1ADDF210A6974D217E867EA"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "isTrue(expression:uniqueUuid23,message:uniqueUuid24):void2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8E474CDB82A9E301C5759A44D3FF6AD4"
      valueUuid: "configurationPropertyName3"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.append(org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements)\
        \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "suffix"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid22"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "suffix"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid23"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid24"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        parameters:
        - name: "elements"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements"
            uuid: "configurationPropertyName.Elements3"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
      fixed: true
    branches:
    - lineNumber: 205
      expression: "!StringUtils.hasLength(suffix)"
      range: "(205,7)-(205,36)"
      evaluatedAs: false
    - lineNumber: 614
      expression: "name == null"
      range: "(614,7)-(614,18)"
      evaluatedAs: true
      internalMethodName: "elementsOf"
    calledSomeStaticInternalMethod: true
  - pathId: "path3"
    testPathName: "appendWhenNameIsEmpty"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "70AC754DF37657C0608DF17725229645"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "INPUT"
      name: "suffix"
      modelFingerprint: "88EA8275AAA8628886649F426E7A608F"
      valueUuid: "suffix"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid25):void"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "0E949B2409DDA8D5A1F729F99FCE9F6C"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasLength(str:suffix):boolean2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8E474CDB82A9E301C5759A44D3FF6AD4"
      valueUuid: "configurationPropertyName3"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.append(org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements)\
        \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "suffix"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid25"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "suffix"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        parameters:
        - name: "elements"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements"
            uuid: "configurationPropertyName.Elements2"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
      fixed: true
    branches:
    - lineNumber: 205
      expression: "!StringUtils.hasLength(suffix)"
      range: "(205,7)-(205,36)"
      evaluatedAs: false
    - lineNumber: 614
      expression: "name == null"
      range: "(614,7)-(614,18)"
      evaluatedAs: false
      internalMethodName: "elementsOf"
    - lineNumber: 618
      expression: "name.isEmpty()"
      range: "(618,7)-(618,20)"
      evaluatedAs: true
      internalMethodName: "elementsOf"
    calledSomeStaticInternalMethod: true
  - pathId: "path4"
    testPathName: "appendWhenNotReturnNullIfInvalidThrowsInvalidConfigurationPropertyNameException"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "6AFA9F3E24210EB3B7BFD108910CBFE9"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "INPUT"
      name: "suffix"
      modelFingerprint: "88EA8275AAA8628886649F426E7A608F"
      valueUuid: "suffix"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "720583ED70780E45573A7F66624FCBA7"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid26):void"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "B32E90F565EE11AE5F1E61E16EDDF970"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasLength(str:suffix):boolean2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "CCBF446348DE09B00F9676FDB3195B9F"
      valueUuid: "invalidConfigurationPropertyNameException"
    disabled: true
    failureReason:
      reason: "PROVER_COULD_NOT_SOLVE_THE_PROBLEM"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "name1"
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "suffix1"
      valueType: "java.lang.String"
      uuid: "suffix"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid26"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "suffix1"
      valueType: "java.lang.String"
      uuid: "suffix"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.InvalidConfigurationPropertyNameException"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "suffix1"
            valueType: "java.lang.String"
            uuid: "suffix"
        - name: "invalidCharacters"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values:
              - sapientType: "BASIC"
                content: !<regular>
                  value: "."
                valueType: "java.lang.Character"
                fixed: true
            valueType: "java.util.List"
            genericValueType: "java.lang.Character"
            uuid: "list"
      valueType: "org.springframework.boot.context.properties.source.InvalidConfigurationPropertyNameException"
      uuid: "invalidConfigurationPropertyNameException"
      fixed: true
    branches:
    - lineNumber: 205
      expression: "!StringUtils.hasLength(suffix)"
      range: "(205,7)-(205,36)"
      evaluatedAs: false
    - lineNumber: 614
      expression: "name == null"
      range: "(614,7)-(614,18)"
      evaluatedAs: false
      internalMethodName: "elementsOf"
    - lineNumber: 618
      expression: "name.isEmpty()"
      range: "(618,7)-(618,20)"
      evaluatedAs: false
      internalMethodName: "elementsOf"
    - lineNumber: 621
      expression: "name.charAt(0) == '.'"
      range: "(621,7)-(621,27)"
      evaluatedAs: false
      internalMethodName: "elementsOf"
    - lineNumber: 621
      expression: "name.charAt(name.length() - 1) == '.'"
      range: "(621,32)-(621,68)"
      evaluatedAs: true
      internalMethodName: "elementsOf"
    - lineNumber: 622
      expression: "returnNullIfInvalid"
      range: "(622,8)-(622,26)"
      evaluatedAs: false
      internalMethodName: "elementsOf"
    calledSomeStaticInternalMethod: true
  - pathId: "path7"
    testPathName: "appendWhenElementsGetTypeINotEqualsElementTypeNON_UNIFORM"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "EA83430912563FBB2EC0A028FB5FDB2E"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "INPUT"
      name: "suffix"
      modelFingerprint: "9AA852FA36175798CE63647B13134CC6"
      valueUuid: "suffix"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid27):void"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "31B3B5C844489511EBB38E45FE56DAB6"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasLength(str:suffix):boolean2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8E474CDB82A9E301C5759A44D3FF6AD4"
      valueUuid: "configurationPropertyName3"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "KQ"
      valueType: "java.lang.String"
      uuid: "suffix"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid27"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "KQ"
      valueType: "java.lang.String"
      uuid: "suffix"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        parameters:
        - name: "elements"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements"
            uuid: "configurationPropertyName.Elements3"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
      fixed: true
    branches:
    - lineNumber: 205
      expression: "!StringUtils.hasLength(suffix)"
      range: "(205,7)-(205,36)"
      evaluatedAs: false
    - lineNumber: 614
      expression: "name == null"
      range: "(614,7)-(614,18)"
      evaluatedAs: false
      internalMethodName: "elementsOf"
    - lineNumber: 618
      expression: "name.isEmpty()"
      range: "(618,7)-(618,20)"
      evaluatedAs: false
      internalMethodName: "elementsOf"
    - lineNumber: 621
      expression: "name.charAt(0) == '.'"
      range: "(621,7)-(621,27)"
      evaluatedAs: false
      internalMethodName: "elementsOf"
    - lineNumber: 621
      expression: "name.charAt(name.length() - 1) == '.'"
      range: "(621,32)-(621,68)"
      evaluatedAs: false
      internalMethodName: "elementsOf"
    - lineNumber: 628
      expression: "i < elements.getSize()"
      range: "(628,19)-(628,40)"
      evaluatedAs: true
      internalMethodName: "elementsOf"
    - lineNumber: 629
      expression: "elements.getType(i) == ElementType.NON_UNIFORM"
      range: "(629,8)-(629,53)"
      evaluatedAs: false
      internalMethodName: "elementsOf"
    calledSomeStaticInternalMethod: true
  - pathId: "path5"
    testPathName: "appendWhenElementsParserNotIsValidCharChCharIndexThrowsInvalidConfigurationPropertyNameException"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "B3888F2FE19B050A88888223CAE54072"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "INPUT"
      name: "suffix"
      modelFingerprint: "450243F6D9178ABB55AE6FBCA4F529A9"
      valueUuid: "suffix"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid28):void"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "D99A7A0EF92102E84DF5DC26F60CE7C7"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasLength(str:suffix):boolean2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "6A4FD7DAD38ED71F18D47C326EBEF5F9"
      valueUuid: "invalidConfigurationPropertyNameException"
    disabled: false
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "DE"
      valueType: "java.lang.String"
      uuid: "suffix"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid28"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "DE"
      valueType: "java.lang.String"
      uuid: "suffix"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.InvalidConfigurationPropertyNameException"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "DE"
            valueType: "java.lang.String"
            uuid: "suffix"
        - name: "invalidCharacters"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "BASIC"
                content: !<regular>
                  value: "A"
                valueType: "java.lang.Character"
                uuid: "character"
            valueType: "java.util.List"
            genericValueType: "java.lang.Character"
            uuid: "arrayList"
      valueType: "org.springframework.boot.context.properties.source.InvalidConfigurationPropertyNameException"
      uuid: "invalidConfigurationPropertyNameException"
      fixed: true
    branches:
    - lineNumber: 205
      expression: "!StringUtils.hasLength(suffix)"
      range: "(205,7)-(205,36)"
      evaluatedAs: false
    - lineNumber: 614
      expression: "name == null"
      range: "(614,7)-(614,18)"
      evaluatedAs: false
      internalMethodName: "elementsOf"
    - lineNumber: 618
      expression: "name.isEmpty()"
      range: "(618,7)-(618,20)"
      evaluatedAs: false
      internalMethodName: "elementsOf"
    - lineNumber: 621
      expression: "name.charAt(0) == '.'"
      range: "(621,7)-(621,27)"
      evaluatedAs: false
      internalMethodName: "elementsOf"
    - lineNumber: 621
      expression: "name.charAt(name.length() - 1) == '.'"
      range: "(621,32)-(621,68)"
      evaluatedAs: false
      internalMethodName: "elementsOf"
    - lineNumber: 628
      expression: "i < elements.getSize()"
      range: "(628,19)-(628,40)"
      evaluatedAs: true
      internalMethodName: "elementsOf"
    - lineNumber: 629
      expression: "elements.getType(i) == ElementType.NON_UNIFORM"
      range: "(629,8)-(629,53)"
      evaluatedAs: true
      internalMethodName: "elementsOf"
    - lineNumber: 630
      expression: "returnNullIfInvalid"
      range: "(630,9)-(630,27)"
      evaluatedAs: false
      internalMethodName: "elementsOf"
    - lineNumber: 641
      expression: "charIndex < elements.getLength(index)"
      range: "(641,27)-(641,63)"
      evaluatedAs: true
      internalMethodName: "getInvalidChars"
    - lineNumber: 643
      expression: "!ElementsParser.isValidChar(ch, charIndex)"
      range: "(643,8)-(643,49)"
      evaluatedAs: true
      internalMethodName: "getInvalidChars"
    calledSomeStaticInternalMethod: true
- method:
    name: "append"
    sourceCodeSignature: "ConfigurationPropertyName append(ConfigurationPropertyName\
      \ suffix)"
    returnType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    parameters:
    - name: "suffix"
      type: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    instructionFingerprint: "D8FDD7A04665333000A7DE8E0AFD8A3C"
  paths:
  - pathId: "path1"
    testPathName: "append1WhenSuffixIsNull"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "586F1F7320D6C52677251AF25D373F97"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "INPUT"
      name: "suffix"
      modelFingerprint: "A20D5E499AD06D3F8D4DD07E3C806793"
      valueUuid: "suffix"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid29):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "72E5AA3F26BBB89E295F113097B1C6E5"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "suffix"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid29"
      fixed: true
    - sapientType: "THIS"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "targetClassObject"
      fixed: true
    branches:
    - lineNumber: 219
      expression: "suffix == null"
      range: "(219,7)-(219,20)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "append1WhenSuffixIsNotNull"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "13C905D0B0CBC928A5CBD4F840A1B3F9"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "INPUT"
      name: "suffix"
      modelFingerprint: "05F10F2C73F119C71384C10FF3C84D53"
      valueUuid: "suffix"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid30):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8E474CDB82A9E301C5759A44D3FF6AD4"
      valueUuid: "configurationPropertyName3"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.append(org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements)\
        \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "of"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "suffix-name1"
            valueType: "java.lang.String"
            uuid: "suffix-name"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "suffix"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid30"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        parameters:
        - name: "elements"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements"
            uuid: "configurationPropertyName.Elements3"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
      fixed: true
    branches:
    - lineNumber: 219
      expression: "suffix == null"
      range: "(219,7)-(219,20)"
      evaluatedAs: false
- method:
    name: "getParent"
    sourceCodeSignature: "ConfigurationPropertyName getParent()"
    returnType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    instructionFingerprint: "DCA4BEE5E289B319AE5D05A611569E07"
  paths:
  - pathId: "path1"
    testPathName: "getParentWhenNumberOfElementsLessThanOrEqualsTo1"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "62A9A53BBC15E9E8AADC5C17C6EC2D3E"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid31):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2B76FC787DCD19078DCD761887BF5C4F"
      valueUuid: "configurationPropertyName"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.getSize()\
        \ : int"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid31"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fieldName: "EMPTY"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
      fixed: true
    branches:
    - lineNumber: 232
      expression: "numberOfElements <= 1"
      range: "(232,11)-(232,31)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "getParentWhenNumberOfElementsGreaterThan1"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "45A071C380C9054EC781BCE6F00589A7"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid32):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "5EC60E345D99680AE36BF1161850559D"
      methodExercised:
        expression: "chop(size:int3):configurationPropertyName3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "FEDEFED7CC6C18FD7B8B6D2A713792D9"
      valueUuid: "configurationPropertyName3"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.getSize()\
        \ : int"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid32"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
    branches:
    - lineNumber: 232
      expression: "numberOfElements <= 1"
      range: "(232,11)-(232,31)"
      evaluatedAs: false
- method:
    name: "chop"
    sourceCodeSignature: "ConfigurationPropertyName chop(int size)"
    returnType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    parameters:
    - name: "size"
      type: "int"
    instructionFingerprint: "B682E2442A9B823E9F920F615111C0D5"
  paths:
  - pathId: "path1"
    testPathName: "chopWhenSizeGreaterThanOrEqualsToGetNumberOfElements"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "C4C055DC8C1F32A87F29287AA40A0C45"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "INPUT"
      name: "size"
      modelFingerprint: "5B9F58FF39931F2D0F564FB6D2527728"
      valueUuid: "size"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid33):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "72E5AA3F26BBB89E295F113097B1C6E5"
      valueUuid: "targetClassObject"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.getSize()\
        \ : int"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "size"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid33"
      fixed: true
    - sapientType: "THIS"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "targetClassObject"
      fixed: true
    branches:
    - lineNumber: 243
      expression: "size >= getNumberOfElements()"
      range: "(243,7)-(243,35)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "chopWhenSizeLessThanGetNumberOfElements"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "85382CB627F99276E918432AE862E0F3"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "INPUT"
      name: "size"
      modelFingerprint: "5B9F58FF39931F2D0F564FB6D2527728"
      valueUuid: "size"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid34):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8E474CDB82A9E301C5759A44D3FF6AD4"
      valueUuid: "configurationPropertyName3"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.getSize()\
        \ : int"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "size"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid34"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        parameters:
        - name: "elements"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements"
            uuid: "configurationPropertyName.Elements2"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
      fixed: true
    branches:
    - lineNumber: 243
      expression: "size >= getNumberOfElements()"
      range: "(243,7)-(243,35)"
      evaluatedAs: false
- method:
    name: "subName"
    sourceCodeSignature: "ConfigurationPropertyName subName(int offset)"
    returnType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    parameters:
    - name: "offset"
      type: "int"
    instructionFingerprint: "978BCB189B7DDFDEDF4E365ADF9227D0"
  paths:
  - pathId: "path1"
    testPathName: "subNameWhenOffsetEquals0"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "B6D846942BCF8A20A70B7B72DAC52179"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "INPUT"
      name: "offset"
      modelFingerprint: "156D2214B4678C20F1C3961F31FEEDA3"
      valueUuid: "offset"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid35):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "72E5AA3F26BBB89E295F113097B1C6E5"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "offset"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid35"
      fixed: true
    - sapientType: "THIS"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "targetClassObject"
      fixed: true
    branches:
    - lineNumber: 258
      expression: "offset == 0"
      range: "(258,7)-(258,17)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "subNameWhenOffsetEqualsGetNumberOfElements"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "EDB7F5A4A63F57DC1EE0757CCB605D5C"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "INPUT"
      name: "offset"
      modelFingerprint: "6A439DA9D470B5D1ADB650D3E4B6AD5B"
      valueUuid: "offset"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid36):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2B76FC787DCD19078DCD761887BF5C4F"
      valueUuid: "configurationPropertyName"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.getSize()\
        \ : int"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "offset"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid36"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fieldName: "EMPTY"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
      fixed: true
    branches:
    - lineNumber: 258
      expression: "offset == 0"
      range: "(258,7)-(258,17)"
      evaluatedAs: false
    - lineNumber: 261
      expression: "offset == getNumberOfElements()"
      range: "(261,7)-(261,37)"
      evaluatedAs: true
  - pathId: "path3"
    testPathName: "subNameWhenOffsetGreaterThanGetNumberOfElementsThrowsIndexOutOfBoundsException"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "738D94B6952D3E642518211C14848B1A"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "INPUT"
      name: "offset"
      modelFingerprint: "0180C5B1A83800498CE7EAD434C7E24B"
      valueUuid: "offset"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid37):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "74FD4F5B2AD783347F074B426E33E4F3"
      valueUuid: "indexOutOfBoundsException"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.getSize()\
        \ : int"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 2
      valueType: "int"
      uuid: "offset"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid37"
      fixed: true
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IndexOutOfBoundsException"
        parameters:
        - name: "s"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Offset: 2, NumberOfElements: 2"
            valueType: "java.lang.String"
            uuid: "string"
      valueType: "java.lang.IndexOutOfBoundsException"
      uuid: "indexOutOfBoundsException"
      fixed: true
    branches:
    - lineNumber: 258
      expression: "offset == 0"
      range: "(258,7)-(258,17)"
      evaluatedAs: false
    - lineNumber: 261
      expression: "offset == getNumberOfElements()"
      range: "(261,7)-(261,37)"
      evaluatedAs: false
    - lineNumber: 264
      expression: "offset < 0"
      range: "(264,7)-(264,16)"
      evaluatedAs: false
    - lineNumber: 264
      expression: "offset > getNumberOfElements()"
      range: "(264,21)-(264,50)"
      evaluatedAs: true
  - pathId: "path4"
    testPathName: "subNameWhenOffsetNotGreaterThanGetNumberOfElements"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "9E479E88553C74242C38ABC9AAAC52E3"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "INPUT"
      name: "offset"
      modelFingerprint: "6A439DA9D470B5D1ADB650D3E4B6AD5B"
      valueUuid: "offset"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid38):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8E474CDB82A9E301C5759A44D3FF6AD4"
      valueUuid: "configurationPropertyName3"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.getSize()\
        \ : int"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "offset"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid38"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        parameters:
        - name: "elements"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements"
            uuid: "configurationPropertyName.Elements2"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
      fixed: true
    branches:
    - lineNumber: 258
      expression: "offset == 0"
      range: "(258,7)-(258,17)"
      evaluatedAs: false
    - lineNumber: 261
      expression: "offset == getNumberOfElements()"
      range: "(261,7)-(261,37)"
      evaluatedAs: false
    - lineNumber: 264
      expression: "offset < 0"
      range: "(264,7)-(264,16)"
      evaluatedAs: false
    - lineNumber: 264
      expression: "offset > getNumberOfElements()"
      range: "(264,21)-(264,50)"
      evaluatedAs: false
- method:
    name: "isParentOf"
    sourceCodeSignature: "boolean isParentOf(ConfigurationPropertyName name)"
    returnType: "boolean"
    parameters:
    - name: "name"
      type: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    instructionFingerprint: "1A89B536D2825DB40704801CCB6F8D6E"
  paths:
  - pathId: "path1"
    testPathName: "isParentOfWhenGetNumberOfElementsNotEqualsNameGetNumberOfElementsMinus1"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "35CC340595986D7F8C50DD2BE28E079C"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name2,message:uniqueUuid39):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F400797EED7914A2CF42637724C47F90"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid40):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "FD040474A6FB5B7C06D7925EB31E60E3"
      valueUuid: "name"
      methodExercised:
        expression: "getNumberOfElements():int3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.getSize()\
        \ : int"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name2"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid39"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid40"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int3"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 277
      expression: "getNumberOfElements() != name.getNumberOfElements() - 1"
      range: "(277,7)-(277,61)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "isParentOfWhenIsAncestorOfName"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "238CF6A585E1BB832D21471D38D90B4E"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name2,message:uniqueUuid41):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F400797EED7914A2CF42637724C47F90"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid42):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "D5E9C9AA8E92DE7F8ABA0E2A44EFB5B1"
      valueUuid: "name"
      methodExercised:
        expression: "getNumberOfElements():int3"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "BE91FB46FAAF85FFF551DDC620B0A4BC"
      methodExercised:
        expression: "isAncestorOf(name:name):boolean2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8383DF6F1D02800B0E90FD4143032B37"
      valueUuid: "boolean2"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.getSize()\
        \ : int"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name2"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid41"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid42"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int3"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
      fixed: true
    branches:
    - lineNumber: 277
      expression: "getNumberOfElements() != name.getNumberOfElements() - 1"
      range: "(277,7)-(277,61)"
      evaluatedAs: false
    - lineNumber: 280
      expression: "isAncestorOf(name)"
      range: "(280,10)-(280,27)"
      evaluatedAs: true
  - pathId: "path3"
    testPathName: "isParentOfWhenIsAncestorOfNotName"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "91C9C922E9EE852018B489A22CCFE464"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name2,message:uniqueUuid43):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F400797EED7914A2CF42637724C47F90"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid44):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "D5E9C9AA8E92DE7F8ABA0E2A44EFB5B1"
      valueUuid: "name"
      methodExercised:
        expression: "getNumberOfElements():int3"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "2780C02852C9B970B2CA292C1A51B490"
      methodExercised:
        expression: "isAncestorOf(name:name):boolean2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "boolean2"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.getSize()\
        \ : int"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name2"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid43"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid44"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int3"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
      fixed: true
    branches:
    - lineNumber: 277
      expression: "getNumberOfElements() != name.getNumberOfElements() - 1"
      range: "(277,7)-(277,61)"
      evaluatedAs: false
    - lineNumber: 280
      expression: "isAncestorOf(name)"
      range: "(280,10)-(280,27)"
      evaluatedAs: false
- method:
    name: "isAncestorOf"
    sourceCodeSignature: "boolean isAncestorOf(ConfigurationPropertyName name)"
    returnType: "boolean"
    parameters:
    - name: "name"
      type: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    instructionFingerprint: "18F585C41C65D20FA13182C8577A0C2B"
  paths:
  - pathId: "path1"
    testPathName: "isAncestorOfWhenGetNumberOfElementsGreaterThanOrEqualsToNameGetNumberOfElements"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "27FD2F8FC13332ECB6C93365ACB6A5C7"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name2,message:uniqueUuid45):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F400797EED7914A2CF42637724C47F90"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid46):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "FD040474A6FB5B7C06D7925EB31E60E3"
      valueUuid: "name"
      methodExercised:
        expression: "getNumberOfElements():int3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.getSize()\
        \ : int"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name2"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid45"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid46"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int3"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 291
      expression: "getNumberOfElements() >= name.getNumberOfElements()"
      range: "(291,7)-(291,57)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "isAncestorOfWhenIGreaterThanOrEqualsTo0ThrowsNullPointerException"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "3511D4F401E4597FB30AB41EA649A953"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name2,message:uniqueUuid47):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F400797EED7914A2CF42637724C47F90"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid48):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "D5E9C9AA8E92DE7F8ABA0E2A44EFB5B1"
      valueUuid: "name"
      methodExercised:
        expression: "getNumberOfElements():int3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "085DC12750BAC37E63C370C4A90AE3FA"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.getSize()\
        \ : int"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name2"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid47"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid48"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int3"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.NullPointerException"
        parameters: []
      valueType: "java.lang.NullPointerException"
      uuid: "expectedResult"
    branches:
    - lineNumber: 291
      expression: "getNumberOfElements() >= name.getNumberOfElements()"
      range: "(291,7)-(291,57)"
      evaluatedAs: false
    - lineNumber: 364
      expression: "i >= 0"
      range: "(364,45)-(364,50)"
      evaluatedAs: true
      internalMethodName: "elementsEqual"
  - pathId: "path3"
    testPathName: "isAncestorOfWhenILessThan0"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "9D90A32B87AA4752D9784AF4DB69DE73"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name2,message:uniqueUuid49):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F400797EED7914A2CF42637724C47F90"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid50):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "D5E9C9AA8E92DE7F8ABA0E2A44EFB5B1"
      valueUuid: "name"
      methodExercised:
        expression: "getNumberOfElements():int3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8383DF6F1D02800B0E90FD4143032B37"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.getSize()\
        \ : int"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name2"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid49"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid50"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int3"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 291
      expression: "getNumberOfElements() >= name.getNumberOfElements()"
      range: "(291,7)-(291,57)"
      evaluatedAs: false
    - lineNumber: 364
      expression: "i >= 0"
      range: "(364,45)-(364,50)"
      evaluatedAs: false
      internalMethodName: "elementsEqual"
- method:
    name: "compareTo"
    sourceCodeSignature: "int compareTo(ConfigurationPropertyName other)"
    returnType: "int"
    parameters:
    - name: "other"
      type: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.ArrayIndexOutOfBoundsException"
    instructionFingerprint: "0CED7325844E269418FDFD4088A991BB"
  paths:
  - pathId: "path2"
    testPathName: "compareToWhenI2NotLessThanL2"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "D07E59D90F5B0C2176900CDE37931110"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "INPUT"
      name: "other"
      modelFingerprint: "24EA2DF24918CAA94C92E475FDDFC24E"
      valueUuid: "other"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid51):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "n1"
      modelFingerprint: "6AEF3D550C401C2A7DEAF71DA7B21164"
      valueUuid: "targetClassObject"
      methodExercised:
        expression: "getNumberOfElements():int2"
    - type: "LOCAL_VARIABLE"
      name: "n2"
      modelFingerprint: "FD040474A6FB5B7C06D7925EB31E60E3"
      valueUuid: "other"
      methodExercised:
        expression: "getNumberOfElements():int3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "99AA433F19FD72FDCF2C9959BA104AF4"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "other"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid51"
      fixed: true
    - sapientType: "THIS"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "other"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int3"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 307
      expression: "i1 < l1"
      range: "(307,10)-(307,16)"
      evaluatedAs: false
      internalMethodName: "compare"
    - lineNumber: 307
      expression: "i2 < l2"
      range: "(307,21)-(307,27)"
      evaluatedAs: false
      internalMethodName: "compare"
  - pathId: "path1"
    testPathName: "compareToWhenI1NotLessThanL1AndI2LessThanL2ThrowsNullPointerException"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "C060DA8B491DDAAE0F86CC9B2A52EBFE"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "INPUT"
      name: "other"
      modelFingerprint: "24EA2DF24918CAA94C92E475FDDFC24E"
      valueUuid: "other"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid52):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "n1"
      modelFingerprint: "6AEF3D550C401C2A7DEAF71DA7B21164"
      valueUuid: "targetClassObject"
      methodExercised:
        expression: "getNumberOfElements():int2"
    - type: "LOCAL_VARIABLE"
      name: "n2"
      modelFingerprint: "D5E9C9AA8E92DE7F8ABA0E2A44EFB5B1"
      valueUuid: "other"
      methodExercised:
        expression: "getNumberOfElements():int3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "085DC12750BAC37E63C370C4A90AE3FA"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "EXTERNAL_FIELD_WITHOUT_ACCESS"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "other"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid52"
      fixed: true
    - sapientType: "THIS"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "other"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int3"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.NullPointerException"
        parameters: []
      valueType: "java.lang.NullPointerException"
      uuid: "expectedResult"
    branches:
    - lineNumber: 307
      expression: "i1 < l1"
      range: "(307,10)-(307,16)"
      evaluatedAs: false
      internalMethodName: "compare"
    - lineNumber: 307
      expression: "i2 < l2"
      range: "(307,21)-(307,27)"
      evaluatedAs: true
      internalMethodName: "compare"
    - lineNumber: 309
      expression: "i1 < l1"
      range: "(309,26)-(309,32)"
      evaluatedAs: false
      internalMethodName: "compare"
    - lineNumber: 310
      expression: "i2 < l2"
      range: "(310,26)-(310,32)"
      evaluatedAs: true
      internalMethodName: "compare"
  - pathId: "path4"
    testPathName: "compareToWhenResultNotEquals0"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "F93D404E3C38AFB66EA5618273994AAE"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "INPUT"
      name: "other"
      modelFingerprint: "24EA2DF24918CAA94C92E475FDDFC24E"
      valueUuid: "other"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid53):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "n1"
      modelFingerprint: "ED0A0AF65A216FB48203315BF20EBFF6"
      valueUuid: "targetClassObject"
      methodExercised:
        expression: "getNumberOfElements():int2"
    - type: "LOCAL_VARIABLE"
      name: "n2"
      modelFingerprint: "FD040474A6FB5B7C06D7925EB31E60E3"
      valueUuid: "other"
      methodExercised:
        expression: "getNumberOfElements():int3"
    - type: "LOCAL_VARIABLE"
      name: "n1"
      modelFingerprint: "8E3374B965027C60F5422C67075AD78A"
      valueUuid: "targetClassObject"
      methodExercised:
        expression: "getElement(elementIndex:int4,form:Enum-org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form-UNIFORM):string"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "CF1F5D4123F6E66B21425B46488E3BA4"
      valueUuid: "int7"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.getType(int)\
        \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName$ElementType"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "other"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid53"
      fixed: true
    - sapientType: "THIS"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "other"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int3"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "string"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int4"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "UNIFORM"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form"
      uuid: "Enum-org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form-UNIFORM"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: -1
      valueType: "int"
      uuid: "int7"
      fixed: true
    branches:
    - lineNumber: 307
      expression: "i1 < l1"
      range: "(307,10)-(307,16)"
      evaluatedAs: true
      internalMethodName: "compare"
    - lineNumber: 309
      expression: "i1 < l1"
      range: "(309,26)-(309,32)"
      evaluatedAs: true
      internalMethodName: "compare"
    - lineNumber: 310
      expression: "i2 < l2"
      range: "(310,26)-(310,32)"
      evaluatedAs: false
      internalMethodName: "compare"
    - lineNumber: 311
      expression: "i1 < l1"
      range: "(311,18)-(311,24)"
      evaluatedAs: true
      internalMethodName: "compare"
    - lineNumber: 312
      expression: "i2 < l2"
      range: "(312,18)-(312,24)"
      evaluatedAs: false
      internalMethodName: "compare"
    - lineNumber: 326
      expression: "e1 == null"
      range: "(326,7)-(326,16)"
      evaluatedAs: true
      internalMethodName: "compare"
    - lineNumber: 314
      expression: "result != 0"
      range: "(314,9)-(314,19)"
      evaluatedAs: true
      internalMethodName: "compare"
  - pathId: "path6"
    testPathName: "compareToWhenCaughtArrayIndexOutOfBoundsExceptionThrowsRuntimeException"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "15A4BC1981143D4407A6E27857960BDA"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "INPUT"
      name: "other"
      modelFingerprint: "24EA2DF24918CAA94C92E475FDDFC24E"
      valueUuid: "other"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid54):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "n1"
      modelFingerprint: "ED0A0AF65A216FB48203315BF20EBFF6"
      valueUuid: "targetClassObject"
      methodExercised:
        expression: "getNumberOfElements():int2"
    - type: "LOCAL_VARIABLE"
      name: "n2"
      modelFingerprint: "FD040474A6FB5B7C06D7925EB31E60E3"
      valueUuid: "other"
      methodExercised:
        expression: "getNumberOfElements():int3"
    - type: "LOCAL_VARIABLE"
      name: "n1"
      modelFingerprint: "8E3374B965027C60F5422C67075AD78A"
      valueUuid: "targetClassObject"
      methodExercised:
        expression: "getElement(elementIndex:int4,form:Enum-org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form-UNIFORM):string"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "BF8C8A772331E959B4DA5AD9623D175A"
      valueUuid: "runtimeException"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.getType(int)\
        \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName$ElementType"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "other"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid54"
      fixed: true
    - sapientType: "THIS"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "other"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int3"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "string"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int4"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "UNIFORM"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form"
      uuid: "Enum-org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form-UNIFORM"
      fixed: true
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.RuntimeException"
        parameters:
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.ArrayIndexOutOfBoundsException"
              parameters: []
            valueType: "java.lang.ArrayIndexOutOfBoundsException"
            uuid: "arrayIndexOutOfBoundsException"
      valueType: "java.lang.RuntimeException"
      uuid: "runtimeException"
      fixed: true
    branches:
    - lineNumber: 307
      expression: "i1 < l1"
      range: "(307,10)-(307,16)"
      evaluatedAs: true
      internalMethodName: "compare"
    - lineNumber: 309
      expression: "i1 < l1"
      range: "(309,26)-(309,32)"
      evaluatedAs: true
      internalMethodName: "compare"
    - lineNumber: 310
      expression: "i2 < l2"
      range: "(310,26)-(310,32)"
      evaluatedAs: false
      internalMethodName: "compare"
    - lineNumber: 311
      expression: "i1 < l1"
      range: "(311,18)-(311,24)"
      evaluatedAs: true
      internalMethodName: "compare"
    - lineNumber: 312
      expression: "i2 < l2"
      range: "(312,18)-(312,24)"
      evaluatedAs: false
      internalMethodName: "compare"
    - lineNumber: 326
      expression: "e1 == null"
      range: "(326,7)-(326,16)"
      evaluatedAs: true
      internalMethodName: "compare"
    - lineNumber: 314
      expression: "result != 0"
      range: "(314,9)-(314,19)"
      evaluatedAs: true
      internalMethodName: "compare"
    - lineNumber: 318
      expression: "catch-exception (ArrayIndexOutOfBoundsException)"
      range: "(318,4)-(318,43)"
      evaluatedAs: true
      internalMethodName: "compare"
    catchBlockExercised:
      idExternalInstruction: 5
      id: 1
      catchExceptions:
      - "java.lang.ArrayIndexOutOfBoundsException"
  - pathId: "path5"
    testPathName: "compareToWhenE2IsNullAndResultNotEquals0"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "FF649C568CBC14F7AD61F1704501286A"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "INPUT"
      name: "other"
      modelFingerprint: "24EA2DF24918CAA94C92E475FDDFC24E"
      valueUuid: "other"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid55):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "n1"
      modelFingerprint: "ED0A0AF65A216FB48203315BF20EBFF6"
      valueUuid: "targetClassObject"
      methodExercised:
        expression: "getNumberOfElements():int2"
    - type: "LOCAL_VARIABLE"
      name: "n2"
      modelFingerprint: "FD040474A6FB5B7C06D7925EB31E60E3"
      valueUuid: "other"
      methodExercised:
        expression: "getNumberOfElements():int3"
    - type: "LOCAL_VARIABLE"
      name: "n1"
      modelFingerprint: "BA10A183CD7CA59C5AE9E3CB3871F13A"
      valueUuid: "targetClassObject"
      methodExercised:
        expression: "getElement(elementIndex:int4,form:Enum-org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form-UNIFORM):string"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B82821A36FAFC461A4BA4C050EF71A78"
      valueUuid: "int7"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.getType(int)\
        \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName$ElementType"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "other"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid55"
      fixed: true
    - sapientType: "THIS"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "other"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int3"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getElement1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int4"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "UNIFORM"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form"
      uuid: "Enum-org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form-UNIFORM"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int7"
      fixed: true
    branches:
    - lineNumber: 307
      expression: "i1 < l1"
      range: "(307,10)-(307,16)"
      evaluatedAs: true
      internalMethodName: "compare"
    - lineNumber: 309
      expression: "i1 < l1"
      range: "(309,26)-(309,32)"
      evaluatedAs: true
      internalMethodName: "compare"
    - lineNumber: 310
      expression: "i2 < l2"
      range: "(310,26)-(310,32)"
      evaluatedAs: false
      internalMethodName: "compare"
    - lineNumber: 311
      expression: "i1 < l1"
      range: "(311,18)-(311,24)"
      evaluatedAs: true
      internalMethodName: "compare"
    - lineNumber: 312
      expression: "i2 < l2"
      range: "(312,18)-(312,24)"
      evaluatedAs: false
      internalMethodName: "compare"
    - lineNumber: 326
      expression: "e1 == null"
      range: "(326,7)-(326,16)"
      evaluatedAs: false
      internalMethodName: "compare"
    - lineNumber: 329
      expression: "e2 == null"
      range: "(329,7)-(329,16)"
      evaluatedAs: true
      internalMethodName: "compare"
    - lineNumber: 314
      expression: "result != 0"
      range: "(314,9)-(314,19)"
      evaluatedAs: true
      internalMethodName: "compare"
- method:
    name: "equals"
    sourceCodeSignature: "boolean equals(Object obj)"
    returnType: "boolean"
    parameters:
    - name: "obj"
      type: "java.lang.Object"
    instructionFingerprint: "EA6E240F598338291805CD69DBC14505"
  paths:
  - pathId: "path1"
    testPathName: "equalsWhenObjEqualsThis"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "7A3D679E06B58A3C41E61EFB9E359558"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    branches:
    - lineNumber: 346
      expression: "obj == this"
      range: "(346,7)-(346,17)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "equalsWhenObjGetClassNotEqualsGetClass"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "6E0ED2B5DDFE99C8E205FC36455B8E28"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    branches:
    - lineNumber: 346
      expression: "obj == this"
      range: "(346,7)-(346,17)"
      evaluatedAs: false
    - lineNumber: 349
      expression: "obj == null"
      range: "(349,7)-(349,17)"
      evaluatedAs: false
    - lineNumber: 349
      expression: "obj.getClass() != getClass()"
      range: "(349,22)-(349,49)"
      evaluatedAs: true
  - pathId: "path3"
    testPathName: "equalsWhenGetNumberOfElementsNotEqualsOtherGetNumberOfElements"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "0F28C7ECE0FD003EAC0506E116CB56D9"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.getSize()\
        \ : int"
    allValues: []
    branches:
    - lineNumber: 346
      expression: "obj == this"
      range: "(346,7)-(346,17)"
      evaluatedAs: false
    - lineNumber: 349
      expression: "obj == null"
      range: "(349,7)-(349,17)"
      evaluatedAs: false
    - lineNumber: 349
      expression: "obj.getClass() != getClass()"
      range: "(349,22)-(349,49)"
      evaluatedAs: false
    - lineNumber: 353
      expression: "getNumberOfElements() != other.getNumberOfElements()"
      range: "(353,7)-(353,58)"
      evaluatedAs: true
  - pathId: "path4"
    testPathName: "equalsWhenThisElementsCanShortcutWithSourceElementTypeUNIFORMThrowsNullPointerException"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "917A72FDF52FDBAF968760343DDC64F9"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.getSize()\
        \ : int"
    allValues: []
    branches:
    - lineNumber: 346
      expression: "obj == this"
      range: "(346,7)-(346,17)"
      evaluatedAs: false
    - lineNumber: 349
      expression: "obj == null"
      range: "(349,7)-(349,17)"
      evaluatedAs: false
    - lineNumber: 349
      expression: "obj.getClass() != getClass()"
      range: "(349,22)-(349,49)"
      evaluatedAs: false
    - lineNumber: 353
      expression: "getNumberOfElements() != other.getNumberOfElements()"
      range: "(353,7)-(353,58)"
      evaluatedAs: false
    - lineNumber: 356
      expression: "this.elements.canShortcutWithSource(ElementType.UNIFORM)"
      range: "(356,7)-(356,62)"
      evaluatedAs: true
  - pathId: "path5"
    testPathName: "equalsWhenIGreaterThanOrEqualsTo0ThrowsNullPointerException"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "CF1D051C4883616CD739556B8AD10575"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.getSize()\
        \ : int"
    allValues: []
    branches:
    - lineNumber: 346
      expression: "obj == this"
      range: "(346,7)-(346,17)"
      evaluatedAs: false
    - lineNumber: 349
      expression: "obj == null"
      range: "(349,7)-(349,17)"
      evaluatedAs: false
    - lineNumber: 349
      expression: "obj.getClass() != getClass()"
      range: "(349,22)-(349,49)"
      evaluatedAs: false
    - lineNumber: 353
      expression: "getNumberOfElements() != other.getNumberOfElements()"
      range: "(353,7)-(353,58)"
      evaluatedAs: false
    - lineNumber: 356
      expression: "this.elements.canShortcutWithSource(ElementType.UNIFORM)"
      range: "(356,7)-(356,62)"
      evaluatedAs: false
    - lineNumber: 364
      expression: "i >= 0"
      range: "(364,45)-(364,50)"
      evaluatedAs: true
      internalMethodName: "elementsEqual"
  - pathId: "path6"
    testPathName: "equalsWhenILessThan0"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "B51A96D52C3B9AF6D3AF1399E215332B"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.getSize()\
        \ : int"
    allValues: []
    branches:
    - lineNumber: 346
      expression: "obj == this"
      range: "(346,7)-(346,17)"
      evaluatedAs: false
    - lineNumber: 349
      expression: "obj == null"
      range: "(349,7)-(349,17)"
      evaluatedAs: false
    - lineNumber: 349
      expression: "obj.getClass() != getClass()"
      range: "(349,22)-(349,49)"
      evaluatedAs: false
    - lineNumber: 353
      expression: "getNumberOfElements() != other.getNumberOfElements()"
      range: "(353,7)-(353,58)"
      evaluatedAs: false
    - lineNumber: 356
      expression: "this.elements.canShortcutWithSource(ElementType.UNIFORM)"
      range: "(356,7)-(356,62)"
      evaluatedAs: false
    - lineNumber: 364
      expression: "i >= 0"
      range: "(364,45)-(364,50)"
      evaluatedAs: false
      internalMethodName: "elementsEqual"
- method:
    name: "toString"
    sourceCodeSignature: "String toString()"
    returnType: "java.lang.String"
    instructionFingerprint: "987D433E700AEADF29A139175E1D3DE0"
  paths:
  - pathId: "path1"
    testPathName: "toStringWhenThisElementsCanShortcutWithSourceElementTypeUNIFORMElementTypeDASHED"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "2C19C3A044C0983723DFC9BEA767CA7F"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid62):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "EB527607183F0C94B97E004A9D65446F"
      valueUuid: "string"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.canShortcutWithSource(org.springframework.boot.context.properties.source.ConfigurationPropertyName$ElementType,org.springframework.boot.context.properties.source.ConfigurationPropertyName$ElementType)\
        \ : boolean"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid62"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "charSequence"
      valueType: "java.lang.String"
      uuid: "string"
    branches:
    - lineNumber: 532
      expression: "this.string == null"
      range: "(532,7)-(532,25)"
      evaluatedAs: true
    - lineNumber: 539
      expression: "this.elements.canShortcutWithSource(ElementType.UNIFORM, ElementType.DASHED)"
      range: "(539,7)-(539,82)"
      evaluatedAs: true
      internalMethodName: "buildToString"
  - pathId: "path2"
    testPathName: "toStringWhenIndexed"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "2757BE83275885CCF3A6640E4B7C47AE"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid63):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "DD44A10B1C9BA7DCF9AD143FD1689B90"
      methodExercised:
        expression: "isIndexed(elementIndex:int4):boolean3"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "C28D75D8AEF8EBA6B70C7F49D5BA46BB"
      methodExercised:
        expression: "getElement(elementIndex:int4,form:Enum-org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form-ORIGINAL):string"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "155438ACBFE878D842FF7EE602D57A86"
      valueUuid: "string2"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.canShortcutWithSource(org.springframework.boot.context.properties.source.ConfigurationPropertyName$ElementType,org.springframework.boot.context.properties.source.ConfigurationPropertyName$ElementType)\
        \ : boolean"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid63"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int4"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "ORIGINAL"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form"
      uuid: "Enum-org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form-ORIGINAL"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "[]"
      valueType: "java.lang.String"
      uuid: "string2"
    branches:
    - lineNumber: 532
      expression: "this.string == null"
      range: "(532,7)-(532,25)"
      evaluatedAs: true
    - lineNumber: 539
      expression: "this.elements.canShortcutWithSource(ElementType.UNIFORM, ElementType.DASHED)"
      range: "(539,7)-(539,82)"
      evaluatedAs: false
      internalMethodName: "buildToString"
    - lineNumber: 544
      expression: "i < elements"
      range: "(544,19)-(544,30)"
      evaluatedAs: true
      internalMethodName: "buildToString"
    - lineNumber: 546
      expression: "!result.isEmpty()"
      range: "(546,8)-(546,24)"
      evaluatedAs: false
      internalMethodName: "buildToString"
    - lineNumber: 549
      expression: "indexed"
      range: "(549,8)-(549,14)"
      evaluatedAs: true
      internalMethodName: "buildToString"
  - pathId: "path3"
    testPathName: "toStringWhenNotIndexed"
    constructorSignature: "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)\
      \ : org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    modelFingerprint: "30A73C8C3E2534F17C259A82BEC5B653"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "6321DCCCD991A7DE890A993FF2CF6245"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid64):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "9C06BA46B06C4A91968193F692BB9469"
      methodExercised:
        expression: "isIndexed(elementIndex:int4):boolean3"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "0D469F7B98036AA7614741BE5ACD7109"
      methodExercised:
        expression: "getElement(elementIndex:int4,form:Enum-org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form-DASHED):string"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D446A609419428DDEAA49A58091F3986"
      valueUuid: "string2"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.canShortcutWithSource(org.springframework.boot.context.properties.source.ConfigurationPropertyName$ElementType,org.springframework.boot.context.properties.source.ConfigurationPropertyName$ElementType)\
        \ : boolean"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "adapt"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "name"
        - name: "separator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "separator"
        - name: "elementValueProcessor"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "elementValueProcessor"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid64"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int4"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "DASHED"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form"
      uuid: "Enum-org.springframework.boot.context.properties.source.ConfigurationPropertyName$Form-DASHED"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    branches:
    - lineNumber: 532
      expression: "this.string == null"
      range: "(532,7)-(532,25)"
      evaluatedAs: true
    - lineNumber: 539
      expression: "this.elements.canShortcutWithSource(ElementType.UNIFORM, ElementType.DASHED)"
      range: "(539,7)-(539,82)"
      evaluatedAs: false
      internalMethodName: "buildToString"
    - lineNumber: 544
      expression: "i < elements"
      range: "(544,19)-(544,30)"
      evaluatedAs: true
      internalMethodName: "buildToString"
    - lineNumber: 546
      expression: "!result.isEmpty()"
      range: "(546,8)-(546,24)"
      evaluatedAs: false
      internalMethodName: "buildToString"
    - lineNumber: 549
      expression: "indexed"
      range: "(549,8)-(549,14)"
      evaluatedAs: false
      internalMethodName: "buildToString"
- method:
    name: "isValid"
    sourceCodeSignature: "boolean isValid(CharSequence name)"
    returnType: "boolean"
    parameters:
    - name: "name"
      type: "java.lang.CharSequence"
    instructionFingerprint: "FCE409E5B8DE4158A5FCC0344CFF8AF7"
  paths:
  - pathId: "path1"
    testPathName: "isValidWhenOfNameTrueIsNotNull"
    modelFingerprint: "4A66F96F0935951CBAC769E03C98CB5E"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "name"
      modelFingerprint: "4971817354E2D8670CF810B82EEBD80B"
      valueUuid: "name"
    - type: "STATIC"
      name: "ConfigurationPropertyName.class"
      modelFingerprint: "70619F1A305C46D87D90FFD6F1BC5C6C"
      valueUuid: "ConfigurationPropertyName.class"
      methodExercised:
        expression: "of(name:name,returnNullIfInvalid:uniqueUuid65):configurationPropertyName3"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8383DF6F1D02800B0E90FD4143032B37"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "ConfigurationPropertyName.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid65"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 568
      expression: "of(name, true) != null"
      range: "(568,10)-(568,31)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "isValidWhenOfNameTrueIsNull"
    modelFingerprint: "ECC7342BF94DF7910065669695AAFECC"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "name"
      modelFingerprint: "4971817354E2D8670CF810B82EEBD80B"
      valueUuid: "name"
    - type: "STATIC"
      name: "ConfigurationPropertyName.class"
      modelFingerprint: "7C44D05B421E73F280F729B23215E9C7"
      valueUuid: "ConfigurationPropertyName.class"
      methodExercised:
        expression: "of(name:name,returnNullIfInvalid:uniqueUuid66):configurationPropertyName3"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "ConfigurationPropertyName.class"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid66"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 568
      expression: "of(name, true) != null"
      range: "(568,10)-(568,31)"
      evaluatedAs: false
- method:
    name: "of"
    sourceCodeSignature: "ConfigurationPropertyName of(CharSequence name)"
    returnType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    parameters:
    - name: "name"
      type: "java.lang.CharSequence"
    instructionFingerprint: "9CA017F99EC61018D5C86E5523963179"
  paths:
  - pathId: "path1"
    testPathName: "ofTest"
    modelFingerprint: "DC0240D37A4148CD0B0F2892E45B14E0"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "name"
      modelFingerprint: "4971817354E2D8670CF810B82EEBD80B"
      valueUuid: "name"
    - type: "STATIC"
      name: "ConfigurationPropertyName.class"
      modelFingerprint: "B6329693A6753B67270A6E4D21694169"
      valueUuid: "ConfigurationPropertyName.class"
      methodExercised:
        expression: "of(name:name,returnNullIfInvalid:uniqueUuid67):configurationPropertyName3"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "FEDEFED7CC6C18FD7B8B6D2A713792D9"
      valueUuid: "configurationPropertyName3"
    disabled: false
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "ConfigurationPropertyName.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid67"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
- method:
    name: "ofIfValid"
    sourceCodeSignature: "ConfigurationPropertyName ofIfValid(CharSequence name)"
    returnType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    parameters:
    - name: "name"
      type: "java.lang.CharSequence"
    instructionFingerprint: "DA2FAD1E48F86E9FE64DFECCE2019E62"
  paths:
  - pathId: "path1"
    testPathName: "ofIfValidTest"
    modelFingerprint: "49AC2A97FF8342E078E3FA451C2BB327"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "name"
      modelFingerprint: "4971817354E2D8670CF810B82EEBD80B"
      valueUuid: "name"
    - type: "STATIC"
      name: "ConfigurationPropertyName.class"
      modelFingerprint: "70619F1A305C46D87D90FFD6F1BC5C6C"
      valueUuid: "ConfigurationPropertyName.class"
      methodExercised:
        expression: "of(name:name,returnNullIfInvalid:uniqueUuid68):configurationPropertyName3"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "FEDEFED7CC6C18FD7B8B6D2A713792D9"
      valueUuid: "configurationPropertyName3"
    disabled: false
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "ConfigurationPropertyName.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid68"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
- method:
    name: "of"
    sourceCodeSignature: "ConfigurationPropertyName of(CharSequence name, boolean\
      \ returnNullIfInvalid)"
    returnType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    parameters:
    - name: "name"
      type: "java.lang.CharSequence"
    - name: "returnNullIfInvalid"
      type: "boolean"
    instructionFingerprint: "75648993647FF414D8DE50F250AFC873"
  paths:
  - pathId: "path1"
    testPathName: "of1WhenElementsIsNull"
    modelFingerprint: "9B44A7352EEAE4D3A1FCBDCE0A24B36C"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "name"
      modelFingerprint: "7E8BE63A0553396C74948F21D49DFB65"
      valueUuid: "name"
    - type: "INPUT"
      name: "returnNullIfInvalid"
      modelFingerprint: "9715D5B2B445DAE29BBA7C0A4D640E0B"
      valueUuid: "returnNullIfInvalid"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "407EB4C94C191CA569A3C92230CCAA47"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "isTrue(expression:returnNullIfInvalid,message:uniqueUuid69):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C1EC58397F653B2DAFB5F5C86C9132CC"
      valueUuid: "configurationPropertyName3"
    disabled: false
    allValues:
    - sapientType: "NULL"
      valueType: "java.lang.CharSequence"
      uuid: "name"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "returnNullIfInvalid"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "returnNullIfInvalid"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid69"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
      fixed: true
    branches:
    - lineNumber: 614
      expression: "name == null"
      range: "(614,7)-(614,18)"
      evaluatedAs: true
      internalMethodName: "elementsOf"
    - lineNumber: 602
      expression: "elements != null"
      range: "(602,11)-(602,26)"
      evaluatedAs: false
    calledSomeStaticInternalMethod: true
  - pathId: "path2"
    testPathName: "of1WhenElementsIsNotNull"
    modelFingerprint: "A3F6F410EF2D9E5C1C3B06BBFD41E022"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "name"
      modelFingerprint: "63F0AEB18588FDD50129913BF544F767"
      valueUuid: "name"
    - type: "INPUT"
      name: "returnNullIfInvalid"
      modelFingerprint: "F1C18F2A67CE0752C398F578B3E8520B"
      valueUuid: "returnNullIfInvalid"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "4F43DFCB3444F534F8C1C206D2F5DFBE"
      valueUuid: "configurationPropertyName3"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements.getSize()\
        \ : int"
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
      explicitCastForOverloadedMethods: "java.lang.CharSequence"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "returnNullIfInvalid"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        parameters:
        - name: "elements"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements"
            uuid: "configurationPropertyName.Elements"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
      fixed: true
    branches:
    - lineNumber: 614
      expression: "name == null"
      range: "(614,7)-(614,18)"
      evaluatedAs: false
      internalMethodName: "elementsOf"
    - lineNumber: 618
      expression: "name.isEmpty()"
      range: "(618,7)-(618,20)"
      evaluatedAs: true
      internalMethodName: "elementsOf"
    - lineNumber: 602
      expression: "elements != null"
      range: "(602,11)-(602,26)"
      evaluatedAs: true
    calledSomeStaticInternalMethod: true
  - pathId: "path5"
    testPathName: "of1WhenNotReturnNullIfInvalidThrowsInvalidConfigurationPropertyNameException"
    modelFingerprint: "1BC17B6C6B5064F9068806B63EA00FA8"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "name"
      modelFingerprint: "63F0AEB18588FDD50129913BF544F767"
      valueUuid: "name"
    - type: "INPUT"
      name: "returnNullIfInvalid"
      modelFingerprint: "F1C18F2A67CE0752C398F578B3E8520B"
      valueUuid: "returnNullIfInvalid"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "CCBF446348DE09B00F9676FDB3195B9F"
      valueUuid: "invalidConfigurationPropertyNameException"
    disabled: true
    failureReason:
      reason: "PROVER_COULD_NOT_SOLVE_THE_PROBLEM"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "name"
      explicitCastForOverloadedMethods: "java.lang.CharSequence"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "returnNullIfInvalid"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.InvalidConfigurationPropertyNameException"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "name1"
            valueType: "java.lang.String"
            uuid: "name"
        - name: "invalidCharacters"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values:
              - sapientType: "BASIC"
                content: !<regular>
                  value: "."
                valueType: "java.lang.Character"
                fixed: true
            valueType: "java.util.List"
            genericValueType: "java.lang.Character"
            uuid: "list"
      valueType: "org.springframework.boot.context.properties.source.InvalidConfigurationPropertyNameException"
      uuid: "invalidConfigurationPropertyNameException"
      fixed: true
    branches:
    - lineNumber: 614
      expression: "name == null"
      range: "(614,7)-(614,18)"
      evaluatedAs: false
      internalMethodName: "elementsOf"
    - lineNumber: 618
      expression: "name.isEmpty()"
      range: "(618,7)-(618,20)"
      evaluatedAs: false
      internalMethodName: "elementsOf"
    - lineNumber: 621
      expression: "name.charAt(0) == '.'"
      range: "(621,7)-(621,27)"
      evaluatedAs: false
      internalMethodName: "elementsOf"
    - lineNumber: 621
      expression: "name.charAt(name.length() - 1) == '.'"
      range: "(621,32)-(621,68)"
      evaluatedAs: true
      internalMethodName: "elementsOf"
    - lineNumber: 622
      expression: "returnNullIfInvalid"
      range: "(622,8)-(622,26)"
      evaluatedAs: false
      internalMethodName: "elementsOf"
    calledSomeStaticInternalMethod: true
  - pathId: "path4"
    testPathName: "of1WhenReturnNullIfInvalidAndElementsIsNull"
    modelFingerprint: "5BD5BA499773E1E497BC5936814E6B21"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "name"
      modelFingerprint: "EA3839D442BB8742D3E448C1D3AF8A44"
      valueUuid: "name"
    - type: "INPUT"
      name: "returnNullIfInvalid"
      modelFingerprint: "291AA410B9751E45204465192CD8ABFE"
      valueUuid: "returnNullIfInvalid"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C1EC58397F653B2DAFB5F5C86C9132CC"
      valueUuid: "configurationPropertyName3"
    disabled: false
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "example."
      valueType: "java.lang.String"
      uuid: "name"
      explicitCastForOverloadedMethods: "java.lang.CharSequence"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "returnNullIfInvalid"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
      fixed: true
    branches:
    - lineNumber: 614
      expression: "name == null"
      range: "(614,7)-(614,18)"
      evaluatedAs: false
      internalMethodName: "elementsOf"
    - lineNumber: 618
      expression: "name.isEmpty()"
      range: "(618,7)-(618,20)"
      evaluatedAs: false
      internalMethodName: "elementsOf"
    - lineNumber: 621
      expression: "name.charAt(0) == '.'"
      range: "(621,7)-(621,27)"
      evaluatedAs: false
      internalMethodName: "elementsOf"
    - lineNumber: 621
      expression: "name.charAt(name.length() - 1) == '.'"
      range: "(621,32)-(621,68)"
      evaluatedAs: true
      internalMethodName: "elementsOf"
    - lineNumber: 622
      expression: "returnNullIfInvalid"
      range: "(622,8)-(622,26)"
      evaluatedAs: true
      internalMethodName: "elementsOf"
    - lineNumber: 602
      expression: "elements != null"
      range: "(602,11)-(602,26)"
      evaluatedAs: false
    calledSomeStaticInternalMethod: true
  - pathId: "path9"
    testPathName: "of1WhenElementsGetTypeINotEqualsElementTypeNON_UNIFORMAndElementsIsNotNull"
    modelFingerprint: "5581B28217A1606DEBDBD38A4ABCC532"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "name"
      modelFingerprint: "5582293D40A1D60D76644EC24CD7C672"
      valueUuid: "name"
    - type: "INPUT"
      name: "returnNullIfInvalid"
      modelFingerprint: "F1C18F2A67CE0752C398F578B3E8520B"
      valueUuid: "returnNullIfInvalid"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8E474CDB82A9E301C5759A44D3FF6AD4"
      valueUuid: "configurationPropertyName3"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "J"
      valueType: "java.lang.String"
      uuid: "name"
      explicitCastForOverloadedMethods: "java.lang.CharSequence"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "returnNullIfInvalid"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        parameters:
        - name: "elements"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements"
            uuid: "configurationPropertyName.Elements2"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
      fixed: true
    branches:
    - lineNumber: 614
      expression: "name == null"
      range: "(614,7)-(614,18)"
      evaluatedAs: false
      internalMethodName: "elementsOf"
    - lineNumber: 618
      expression: "name.isEmpty()"
      range: "(618,7)-(618,20)"
      evaluatedAs: false
      internalMethodName: "elementsOf"
    - lineNumber: 621
      expression: "name.charAt(0) == '.'"
      range: "(621,7)-(621,27)"
      evaluatedAs: false
      internalMethodName: "elementsOf"
    - lineNumber: 621
      expression: "name.charAt(name.length() - 1) == '.'"
      range: "(621,32)-(621,68)"
      evaluatedAs: false
      internalMethodName: "elementsOf"
    - lineNumber: 628
      expression: "i < elements.getSize()"
      range: "(628,19)-(628,40)"
      evaluatedAs: true
      internalMethodName: "elementsOf"
    - lineNumber: 629
      expression: "elements.getType(i) == ElementType.NON_UNIFORM"
      range: "(629,8)-(629,53)"
      evaluatedAs: false
      internalMethodName: "elementsOf"
    - lineNumber: 602
      expression: "elements != null"
      range: "(602,11)-(602,26)"
      evaluatedAs: true
    calledSomeStaticInternalMethod: true
  - pathId: "path6"
    testPathName: "of1WhenElementsGetTypeIEqualsElementTypeNON_UNIFORMAndReturnNullIfInvalidAndElementsIsNull"
    modelFingerprint: "D46A877A07B99CE324678C1777C0CFD6"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "name"
      modelFingerprint: "254BA6550EE9E2F72806050150F8FCCA"
      valueUuid: "name"
    - type: "INPUT"
      name: "returnNullIfInvalid"
      modelFingerprint: "291AA410B9751E45204465192CD8ABFE"
      valueUuid: "returnNullIfInvalid"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C1EC58397F653B2DAFB5F5C86C9132CC"
      valueUuid: "configurationPropertyName3"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "Elements elements = new ElementsParser(name, '.', parserCapacity).parse();"
      lineNumber: 627
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type ConfigurationPropertyName.ElementsParser - Method:\
        \ parse"
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "exampleName"
      valueType: "java.lang.String"
      uuid: "name"
      explicitCastForOverloadedMethods: "java.lang.CharSequence"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "returnNullIfInvalid"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
      fixed: true
    branches:
    - lineNumber: 614
      expression: "name == null"
      range: "(614,7)-(614,18)"
      evaluatedAs: false
      internalMethodName: "elementsOf"
    - lineNumber: 618
      expression: "name.isEmpty()"
      range: "(618,7)-(618,20)"
      evaluatedAs: false
      internalMethodName: "elementsOf"
    - lineNumber: 621
      expression: "name.charAt(0) == '.'"
      range: "(621,7)-(621,27)"
      evaluatedAs: false
      internalMethodName: "elementsOf"
    - lineNumber: 621
      expression: "name.charAt(name.length() - 1) == '.'"
      range: "(621,32)-(621,68)"
      evaluatedAs: false
      internalMethodName: "elementsOf"
    - lineNumber: 628
      expression: "i < elements.getSize()"
      range: "(628,19)-(628,40)"
      evaluatedAs: true
      internalMethodName: "elementsOf"
    - lineNumber: 629
      expression: "elements.getType(i) == ElementType.NON_UNIFORM"
      range: "(629,8)-(629,53)"
      evaluatedAs: true
      internalMethodName: "elementsOf"
    - lineNumber: 630
      expression: "returnNullIfInvalid"
      range: "(630,9)-(630,27)"
      evaluatedAs: true
      internalMethodName: "elementsOf"
    - lineNumber: 602
      expression: "elements != null"
      range: "(602,11)-(602,26)"
      evaluatedAs: false
    calledSomeStaticInternalMethod: true
  - pathId: "path7"
    testPathName: "of1WhenElementsParserNotIsValidCharChCharIndexThrowsInvalidConfigurationPropertyNameException"
    modelFingerprint: "857D25B16F206894FCEDBAE7D558B488"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "name"
      modelFingerprint: "254BA6550EE9E2F72806050150F8FCCA"
      valueUuid: "name"
    - type: "INPUT"
      name: "returnNullIfInvalid"
      modelFingerprint: "16FE24ADA9CB136E6964B93B48F6150D"
      valueUuid: "returnNullIfInvalid"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "49E65E8FE0922A63EEA74CAD7D38FBD5"
      valueUuid: "invalidConfigurationPropertyNameException"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "Elements elements = new ElementsParser(name, '.', parserCapacity).parse();"
      lineNumber: 627
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type ConfigurationPropertyName.ElementsParser - Method:\
        \ parse"
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "exampleName"
      valueType: "java.lang.String"
      uuid: "name"
      explicitCastForOverloadedMethods: "java.lang.CharSequence"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "returnNullIfInvalid"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.InvalidConfigurationPropertyNameException"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "exampleName"
            valueType: "java.lang.String"
            uuid: "name"
            explicitCastForOverloadedMethods: "java.lang.CharSequence"
        - name: "invalidCharacters"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "BASIC"
                content: !<regular>
                  value: "A"
                valueType: "java.lang.Character"
                uuid: "character"
            valueType: "java.util.List"
            genericValueType: "java.lang.Character"
            uuid: "arrayList"
      valueType: "org.springframework.boot.context.properties.source.InvalidConfigurationPropertyNameException"
      uuid: "invalidConfigurationPropertyNameException"
      fixed: true
    branches:
    - lineNumber: 614
      expression: "name == null"
      range: "(614,7)-(614,18)"
      evaluatedAs: false
      internalMethodName: "elementsOf"
    - lineNumber: 618
      expression: "name.isEmpty()"
      range: "(618,7)-(618,20)"
      evaluatedAs: false
      internalMethodName: "elementsOf"
    - lineNumber: 621
      expression: "name.charAt(0) == '.'"
      range: "(621,7)-(621,27)"
      evaluatedAs: false
      internalMethodName: "elementsOf"
    - lineNumber: 621
      expression: "name.charAt(name.length() - 1) == '.'"
      range: "(621,32)-(621,68)"
      evaluatedAs: false
      internalMethodName: "elementsOf"
    - lineNumber: 628
      expression: "i < elements.getSize()"
      range: "(628,19)-(628,40)"
      evaluatedAs: true
      internalMethodName: "elementsOf"
    - lineNumber: 629
      expression: "elements.getType(i) == ElementType.NON_UNIFORM"
      range: "(629,8)-(629,53)"
      evaluatedAs: true
      internalMethodName: "elementsOf"
    - lineNumber: 630
      expression: "returnNullIfInvalid"
      range: "(630,9)-(630,27)"
      evaluatedAs: false
      internalMethodName: "elementsOf"
    - lineNumber: 641
      expression: "charIndex < elements.getLength(index)"
      range: "(641,27)-(641,63)"
      evaluatedAs: true
      internalMethodName: "getInvalidChars"
    - lineNumber: 643
      expression: "!ElementsParser.isValidChar(ch, charIndex)"
      range: "(643,8)-(643,49)"
      evaluatedAs: true
      internalMethodName: "getInvalidChars"
    calledSomeStaticInternalMethod: true
- method:
    name: "adapt"
    sourceCodeSignature: "ConfigurationPropertyName adapt(CharSequence name, char\
      \ separator)"
    returnType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    parameters:
    - name: "name"
      type: "java.lang.CharSequence"
    - name: "separator"
      type: "char"
    instructionFingerprint: "AC15A16EA63215342C7D36225C0F50EE"
  paths:
  - pathId: "path1"
    testPathName: "adaptTest"
    modelFingerprint: "E9D36DF4DF79042099B023415CB7C9D6"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "name"
      modelFingerprint: "4971817354E2D8670CF810B82EEBD80B"
      valueUuid: "name"
    - type: "INPUT"
      name: "separator"
      modelFingerprint: "8EC7F41D6CD20D542BDC920BA24A4219"
      valueUuid: "separator"
    - type: "STATIC"
      name: "ConfigurationPropertyName.class"
      modelFingerprint: "ECDECD507F7B8972BA24FE7544366673"
      valueUuid: "ConfigurationPropertyName.class"
      methodExercised:
        expression: "adapt(name:name,separator:separator,elementValueProcessor:uniqueUuid70):configurationPropertyName3"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "FEDEFED7CC6C18FD7B8B6D2A713792D9"
      valueUuid: "configurationPropertyName3"
    disabled: false
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "char"
      uuid: "separator"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "ConfigurationPropertyName.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "char"
      uuid: "separator"
    - sapientType: "NULL"
      valueType: "java.util.function.Function"
      uuid: "uniqueUuid70"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
- method:
    name: "adapt"
    sourceCodeSignature: "ConfigurationPropertyName adapt(CharSequence name, char\
      \ separator, Function<CharSequence, CharSequence> elementValueProcessor)"
    returnType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    parameters:
    - name: "name"
      type: "java.lang.CharSequence"
    - name: "separator"
      type: "char"
    - name: "elementValueProcessor"
      type: "java.util.function.Function"
    instructionFingerprint: "EC8B8A00F66C34246F07A7217BB5F42A"
  paths:
  - pathId: "path1"
    testPathName: "adapt1WhenNameIsEmpty"
    modelFingerprint: "F2D8CE4FCB070B88FB25D80690978335"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "name"
      modelFingerprint: "63F0AEB18588FDD50129913BF544F767"
      valueUuid: "name"
    - type: "INPUT"
      name: "separator"
      modelFingerprint: "8EC7F41D6CD20D542BDC920BA24A4219"
      valueUuid: "separator"
    - type: "INPUT"
      name: "elementValueProcessor"
      modelFingerprint: "F17CEAD072F59CAC787D68162EC68722"
      valueUuid: "elementValueProcessor"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "86E5484D2DC8BEE92F870578D0763011"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid71):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2B76FC787DCD19078DCD761887BF5C4F"
      valueUuid: "configurationPropertyName"
    disabled: false
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "char"
      uuid: "separator"
    - sapientType: "MOCK"
      valueType: "java.util.function.Function"
      uuid: "elementValueProcessor"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid71"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fieldName: "EMPTY"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
      fixed: true
    branches:
    - lineNumber: 677
      expression: "name.isEmpty()"
      range: "(677,7)-(677,20)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "adapt1WhenElementsGetSizeEquals0"
    modelFingerprint: "3F381B8F239F440E9DB7B063E9F028A0"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "name"
      modelFingerprint: "5EC9153806E3BAD5D8C7DECC2BA5EC60"
      valueUuid: "name"
    - type: "INPUT"
      name: "separator"
      modelFingerprint: "8EC7F41D6CD20D542BDC920BA24A4219"
      valueUuid: "separator"
    - type: "INPUT"
      name: "elementValueProcessor"
      modelFingerprint: "F17CEAD072F59CAC787D68162EC68722"
      valueUuid: "elementValueProcessor"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "49586823591C9EA778F39043B5133FE5"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid72):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2B76FC787DCD19078DCD761887BF5C4F"
      valueUuid: "configurationPropertyName"
    disabled: false
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "char"
      uuid: "separator"
    - sapientType: "MOCK"
      valueType: "java.util.function.Function"
      uuid: "elementValueProcessor"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid72"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        fieldName: "EMPTY"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
      fixed: true
    branches:
    - lineNumber: 677
      expression: "name.isEmpty()"
      range: "(677,7)-(677,20)"
      evaluatedAs: false
    - lineNumber: 681
      expression: "elements.getSize() == 0"
      range: "(681,7)-(681,29)"
      evaluatedAs: true
  - pathId: "path3"
    testPathName: "adapt1WhenElementsGetSizeNotEquals0"
    modelFingerprint: "3FBE7596E88C758F576BAF8EC54AC8AA"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "name"
      modelFingerprint: "5EC9153806E3BAD5D8C7DECC2BA5EC60"
      valueUuid: "name"
    - type: "INPUT"
      name: "separator"
      modelFingerprint: "8EC7F41D6CD20D542BDC920BA24A4219"
      valueUuid: "separator"
    - type: "INPUT"
      name: "elementValueProcessor"
      modelFingerprint: "F17CEAD072F59CAC787D68162EC68722"
      valueUuid: "elementValueProcessor"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "49586823591C9EA778F39043B5133FE5"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid73):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8E474CDB82A9E301C5759A44D3FF6AD4"
      valueUuid: "configurationPropertyName3"
    disabled: false
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "char"
      uuid: "separator"
    - sapientType: "MOCK"
      valueType: "java.util.function.Function"
      uuid: "elementValueProcessor"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid73"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        parameters:
        - name: "elements"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements"
            uuid: "configurationPropertyName.Elements2"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName3"
      fixed: true
    branches:
    - lineNumber: 677
      expression: "name.isEmpty()"
      range: "(677,7)-(677,20)"
      evaluatedAs: false
    - lineNumber: 681
      expression: "elements.getSize() == 0"
      range: "(681,7)-(681,29)"
      evaluatedAs: false
