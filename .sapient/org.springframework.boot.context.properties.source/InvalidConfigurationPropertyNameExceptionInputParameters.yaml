---
modelFingerprint: "215619198E00F12BCB69AA3FD5534FF5"
targetClass:
  fullClassName: "org.springframework.boot.context.properties.source.InvalidConfigurationPropertyNameException"
methods:
- method:
    name: "getInvalidCharacters"
    sourceCodeSignature: "List<Character> getInvalidCharacters()"
    returnType: "java.util.List"
    genericReturnType: "java.lang.Character"
    instructionFingerprint: "5D501A6F8D573D8C19B73F3A5D878987"
  paths:
  - pathId: "path1"
    testPathName: "getInvalidCharactersTest"
    constructorSignature: "<init>(java.lang.CharSequence,java.util.List<java.lang.Character>)\
      \ : void"
    modelFingerprint: "F1B8CEF69799ACF70D5B89FB9EBF79AC"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "CLASS_TYPE_COULD_NOT_BE_MOCKED_AND_NEEDS_TO_STRING"
    allValues: []
- method:
    name: "getName"
    sourceCodeSignature: "CharSequence getName()"
    returnType: "java.lang.CharSequence"
    instructionFingerprint: "937AAD62BAF42E7EB58F615332875F07"
  paths:
  - pathId: "path1"
    testPathName: "getNameTest"
    constructorSignature: "<init>(java.lang.CharSequence,java.util.List<java.lang.Character>)\
      \ : void"
    modelFingerprint: "7FD5DE9D3732CCAC6297C88ECA00361E"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "CLASS_TYPE_COULD_NOT_BE_MOCKED_AND_NEEDS_TO_STRING"
    allValues: []
- method:
    name: "throwIfHasInvalidChars"
    sourceCodeSignature: "void throwIfHasInvalidChars(CharSequence name, List<Character>\
      \ invalidCharacters)"
    returnType: "void"
    parameters:
    - name: "name"
      type: "java.lang.CharSequence"
    - name: "invalidCharacters"
      type: "java.util.List"
    instructionFingerprint: "4FE5337F88B3F16C969C5961013E93BF"
  paths:
  - pathId: "path1"
    testPathName: "throwIfHasInvalidCharsWhenInvalidCharactersNotIsEmptyThrowsInvalidConfigurationPropertyNameException"
    modelFingerprint: "90C24EAC210F4216A506612B7138804F"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "name"
      modelFingerprint: "3EF4689ADE980D3A9A760139479F649D"
      valueUuid: "name"
    - type: "INPUT"
      name: "invalidCharacters"
      modelFingerprint: "C005624BC1CA5311B6A581783CF1F2AE"
      valueUuid: "invalidCharacters"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "F1C4C91D96E47E7E19F347EAFFC49763"
      valueUuid: "invalidConfigurationPropertyNameException"
    disabled: false
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "name"
      nameForMock: "name"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "A"
          valueType: "java.lang.Character"
          uuid: "invalidCharactersItem0"
      valueType: "java.util.List"
      genericValueType: "java.lang.Character"
      uuid: "invalidCharacters"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.InvalidConfigurationPropertyNameException"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "name1"
            valueType: "java.lang.String"
            uuid: "name"
            nameForMock: "name"
        - name: "invalidCharacters"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "BASIC"
                content: !<regular>
                  value: "A"
                valueType: "java.lang.Character"
                uuid: "invalidCharactersItem0"
            valueType: "java.util.List"
            genericValueType: "java.lang.Character"
            uuid: "invalidCharacters"
      valueType: "org.springframework.boot.context.properties.source.InvalidConfigurationPropertyNameException"
      uuid: "invalidConfigurationPropertyNameException"
      fixed: true
    branches:
    - lineNumber: 48
      expression: "!invalidCharacters.isEmpty()"
      range: "(48,7)-(48,34)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "throwIfHasInvalidCharsWhenInvalidCharactersIsEmpty"
    modelFingerprint: "22603B8F2224F86A955026B7ACCFBCDC"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "name"
      modelFingerprint: "4971817354E2D8670CF810B82EEBD80B"
      valueUuid: "name"
    - type: "INPUT"
      name: "invalidCharacters"
      modelFingerprint: "9222478DD2B27DA5638E61AFEC0B36FA"
      valueUuid: "invalidCharacters"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.Character"
      uuid: "invalidCharacters"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 48
      expression: "!invalidCharacters.isEmpty()"
      range: "(48,7)-(48,34)"
      evaluatedAs: false
