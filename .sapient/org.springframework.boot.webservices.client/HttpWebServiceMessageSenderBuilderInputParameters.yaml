---
modelFingerprint: "E615F5D844365FF90AB8F466520F6436"
targetClass:
  fullClassName: "org.springframework.boot.webservices.client.HttpWebServiceMessageSenderBuilder"
methods:
- method:
    name: "setConnectTimeout"
    sourceCodeSignature: "HttpWebServiceMessageSenderBuilder setConnectTimeout(Duration\
      \ connectTimeout)"
    returnType: "org.springframework.boot.webservices.client.HttpWebServiceMessageSenderBuilder"
    parameters:
    - name: "connectTimeout"
      type: "java.time.Duration"
    instructionFingerprint: "E007E209789E904631A581AA70CC238A"
  paths:
  - pathId: "path1"
    testPathName: "setConnectTimeoutTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "4561497BCF05D65209C1B6B70D9E2831"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "connectTimeout"
      modelFingerprint: "82643A0E952D68E3A298A3509907B05F"
      valueUuid: "connectTimeout"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "1810289E1E14AC38DFB389E6199A9467"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.webservices.client.HttpWebServiceMessageSenderBuilder"
        parameters: []
      valueType: "org.springframework.boot.webservices.client.HttpWebServiceMessageSenderBuilder"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "connectTimeout-days"
      valueType: "java.time.Duration"
      uuid: "connectTimeout"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.webservices.client.HttpWebServiceMessageSenderBuilder"
      uuid: "targetClassObject"
      fixed: true
- method:
    name: "setReadTimeout"
    sourceCodeSignature: "HttpWebServiceMessageSenderBuilder setReadTimeout(Duration\
      \ readTimeout)"
    returnType: "org.springframework.boot.webservices.client.HttpWebServiceMessageSenderBuilder"
    parameters:
    - name: "readTimeout"
      type: "java.time.Duration"
    instructionFingerprint: "FD4FD449FDD805651B6D629DA6079FB7"
  paths:
  - pathId: "path1"
    testPathName: "setReadTimeoutTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "41D87E385441CA229B806F20D837AF93"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "readTimeout"
      modelFingerprint: "7D35425266A37454729850071E0251DD"
      valueUuid: "readTimeout"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "1810289E1E14AC38DFB389E6199A9467"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.webservices.client.HttpWebServiceMessageSenderBuilder"
        parameters: []
      valueType: "org.springframework.boot.webservices.client.HttpWebServiceMessageSenderBuilder"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "readTimeout-days"
      valueType: "java.time.Duration"
      uuid: "readTimeout"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.webservices.client.HttpWebServiceMessageSenderBuilder"
      uuid: "targetClassObject"
      fixed: true
- method:
    name: "sslBundle"
    sourceCodeSignature: "HttpWebServiceMessageSenderBuilder sslBundle(SslBundle sslBundle)"
    returnType: "org.springframework.boot.webservices.client.HttpWebServiceMessageSenderBuilder"
    parameters:
    - name: "sslBundle"
      type: "org.springframework.boot.ssl.SslBundle"
    instructionFingerprint: "7B7BB5E37989A7628CCDAB4CB6839DDC"
  paths:
  - pathId: "path1"
    testPathName: "sslBundleTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "8844B7FCA29353F899E75A04E2B609CB"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "sslBundle"
      modelFingerprint: "342B5E5262471CA8C6BA381A510A52AA"
      valueUuid: "sslBundle"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "1810289E1E14AC38DFB389E6199A9467"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.webservices.client.HttpWebServiceMessageSenderBuilder"
        parameters: []
      valueType: "org.springframework.boot.webservices.client.HttpWebServiceMessageSenderBuilder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.webservices.client.HttpWebServiceMessageSenderBuilder"
      uuid: "targetClassObject"
      fixed: true
- method:
    name: "requestFactory"
    sourceCodeSignature: "HttpWebServiceMessageSenderBuilder requestFactory(Supplier<ClientHttpRequestFactory>\
      \ requestFactorySupplier)"
    returnType: "org.springframework.boot.webservices.client.HttpWebServiceMessageSenderBuilder"
    parameters:
    - name: "requestFactorySupplier"
      type: "java.util.function.Supplier"
    instructionFingerprint: "85344ABE9F59E065242B9B3724DB945C"
  paths:
  - pathId: "path1"
    testPathName: "requestFactoryTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "4438D56CCD1CD0F43DDEDEA9457EF79D"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "requestFactorySupplier"
      modelFingerprint: "799E9DE7C2F3B1E68FDDFDBB6D10EF68"
      valueUuid: "requestFactorySupplier"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "E74908D8343891BADB897397D2742AB2"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:requestFactorySupplier,message:uniqueUuid1):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "1810289E1E14AC38DFB389E6199A9467"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.webservices.client.HttpWebServiceMessageSenderBuilder"
        parameters: []
      valueType: "org.springframework.boot.webservices.client.HttpWebServiceMessageSenderBuilder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "requestFactorySupplier"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "requestFactorySupplier"
    - sapientType: "BASIC"
      content: !<regular>
        value: "RequestFactorySupplier must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "THIS"
      valueType: "org.springframework.boot.webservices.client.HttpWebServiceMessageSenderBuilder"
      uuid: "targetClassObject"
      fixed: true
- method:
    name: "requestFactory"
    sourceCodeSignature: "HttpWebServiceMessageSenderBuilder requestFactory(Function<ClientHttpRequestFactorySettings,\
      \ ClientHttpRequestFactory> requestFactoryFunction)"
    returnType: "org.springframework.boot.webservices.client.HttpWebServiceMessageSenderBuilder"
    parameters:
    - name: "requestFactoryFunction"
      type: "java.util.function.Function"
    instructionFingerprint: "C2D035E6151EFC3F8B8A2FBBA196A3EA"
  paths:
  - pathId: "path1"
    testPathName: "requestFactory1Test"
    constructorSignature: "<init>() : void"
    modelFingerprint: "D4141978FEF335A706D100756B843F08"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "requestFactoryFunction"
      modelFingerprint: "603010A9B0EF831EE0648C64860256FF"
      valueUuid: "requestFactoryFunction"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "C9B1C392710BFB354F4DA21379F39A27"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:requestFactoryFunction,message:uniqueUuid2):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "1810289E1E14AC38DFB389E6199A9467"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.webservices.client.HttpWebServiceMessageSenderBuilder"
        parameters: []
      valueType: "org.springframework.boot.webservices.client.HttpWebServiceMessageSenderBuilder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "java.util.function.Function"
      uuid: "requestFactoryFunction"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "java.util.function.Function"
      uuid: "requestFactoryFunction"
    - sapientType: "BASIC"
      content: !<regular>
        value: "RequestFactoryFunction must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "THIS"
      valueType: "org.springframework.boot.webservices.client.HttpWebServiceMessageSenderBuilder"
      uuid: "targetClassObject"
      fixed: true
- method:
    name: "build"
    sourceCodeSignature: "WebServiceMessageSender build()"
    returnType: "org.springframework.ws.transport.WebServiceMessageSender"
    instructionFingerprint: "2A82B00AA5F9920409F21CAFC55AF22D"
  paths:
  - pathId: "path1"
    testPathName: "buildWhenThisRequestFactoryIsNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "2B37ECE42F428ED70A497230F95F8F6D"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "STATIC"
      name: "ClientHttpRequestFactories.class.real"
      modelFingerprint: "3174E68A6E10227B77D3ECCF407AE279"
      valueUuid: "ClientHttpRequestFactories.class.real"
      methodExercised:
        expression: "get(settings:clientHttpRequestFactorySettings):clientHttpRequestFactory"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C3E0347EB3559EE1054E1A9EBB779246"
      valueUuid: "clientHttpRequestMessageSender"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.webservices.client.HttpWebServiceMessageSenderBuilder"
        parameters: []
      valueType: "org.springframework.boot.webservices.client.HttpWebServiceMessageSenderBuilder"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactories"
      uuid: "ClientHttpRequestFactories.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.client.ClientHttpRequestFactories"
        method: "get"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
              parameters:
              - name: "connectTimeout"
                value:
                  sapientType: "NULL"
                  valueType: "java.time.Duration"
                  uuid: "fieldDuration"
              - name: "readTimeout"
                value:
                  sapientType: "NULL"
                  valueType: "java.time.Duration"
                  uuid: "fieldDuration2"
              - name: "sslBundle"
                value:
                  sapientType: "NULL"
                  valueType: "org.springframework.boot.ssl.SslBundle"
                  uuid: "fieldSslBundle"
            valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
            uuid: "clientHttpRequestFactorySettings"
            fixed: true
      valueType: "org.springframework.http.client.ClientHttpRequestFactory"
      uuid: "clientHttpRequestFactory"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "clientHttpRequestFactorySettings"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.ws.transport.http.ClientHttpRequestMessageSender"
        parameters:
        - name: "requestFactory"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.springframework.boot.web.client.ClientHttpRequestFactories"
              method: "get"
              methodParameters:
              - value:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
                    parameters:
                    - name: "connectTimeout"
                      value:
                        sapientType: "NULL"
                        valueType: "java.time.Duration"
                        uuid: "fieldDuration"
                    - name: "readTimeout"
                      value:
                        sapientType: "NULL"
                        valueType: "java.time.Duration"
                        uuid: "fieldDuration2"
                    - name: "sslBundle"
                      value:
                        sapientType: "NULL"
                        valueType: "org.springframework.boot.ssl.SslBundle"
                        uuid: "fieldSslBundle"
                  valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
                  uuid: "clientHttpRequestFactorySettings"
                  fixed: true
            valueType: "org.springframework.http.client.ClientHttpRequestFactory"
            uuid: "clientHttpRequestFactory"
      valueType: "org.springframework.ws.transport.http.ClientHttpRequestMessageSender"
      uuid: "clientHttpRequestMessageSender"
      fixed: true
    branches:
    - lineNumber: 117
      expression: "this.requestFactory != null"
      range: "(117,11)-(117,37)"
      evaluatedAs: false
      internalMethodName: "getRequestFactory"
