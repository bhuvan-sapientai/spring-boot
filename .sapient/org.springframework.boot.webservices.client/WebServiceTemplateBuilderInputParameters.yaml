---
modelFingerprint: "F980446EBF29A2CC331D0DFC1DF8A5F6"
targetClass:
  fullClassName: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
methods:
- method:
    name: "detectHttpMessageSender"
    sourceCodeSignature: "WebServiceTemplateBuilder detectHttpMessageSender(boolean\
      \ detectHttpMessageSender)"
    returnType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
    parameters:
    - name: "detectHttpMessageSender"
      type: "boolean"
    instructionFingerprint: "146861631867A261B1CBB52642C97E12"
  paths:
  - pathId: "path1"
    testPathName: "detectHttpMessageSenderTest"
    constructorSignature: "<init>(org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[])\
      \ : void"
    modelFingerprint: "9D02CD935784A4BB261A7B08C3EF503B"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "996D2ECD4C659835F45BACDE89DC1D60"
      valueUuid: "target"
    - type: "INPUT"
      name: "detectHttpMessageSender"
      modelFingerprint: "90BBCE98669851E251457A37120B6867"
      valueUuid: "detectHttpMessageSender"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A4CC70E149752AAE3BEEA75844C6FD3A"
      valueUuid: "webServiceTemplateBuilder2NotNull"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
        parameters:
        - name: "customizers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[]"
            uuid: "customizers"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "detectHttpMessageSender"
    - sapientType: "NOT_NULL"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "webServiceTemplateBuilder2NotNull"
      fixed: true
- method:
    name: "messageSenders"
    sourceCodeSignature: "WebServiceTemplateBuilder messageSenders(WebServiceMessageSender...\
      \ messageSenders)"
    returnType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
    parameters:
    - name: "messageSenders"
      type: "org.springframework.ws.transport.WebServiceMessageSender[]"
    instructionFingerprint: "F694C4F5D659229CF6DD827EC1FE62E9"
  paths:
  - pathId: "path1"
    testPathName: "messageSendersTest"
    constructorSignature: "<init>(org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[])\
      \ : void"
    modelFingerprint: "C38791262D0B801D9873934C96F088B7"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "996D2ECD4C659835F45BACDE89DC1D60"
      valueUuid: "target"
    - type: "INPUT"
      name: "messageSenders"
      modelFingerprint: "38DD3CCB6F362989898E61546BBA1E70"
      valueUuid: "messageSenders"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "3617D1863CBF901A68EF540C32DBFFF4"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:messageSenders,message:uniqueUuid1):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "796F33F4C2ECA215DDA399866862C5B0"
      methodExercised:
        expression: "messageSenders(messageSenders:list2):webServiceTemplateBuilder2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "012040D4B0563E116650E900FE43C1F1"
      valueUuid: "webServiceTemplateBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
        parameters:
        - name: "customizers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[]"
            uuid: "customizers"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.ws.transport.WebServiceMessageSender[]"
      uuid: "messageSenders"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.ws.transport.WebServiceMessageSender[]"
      uuid: "messageSenders"
    - sapientType: "BASIC"
      content: !<regular>
        value: "MessageSenders must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "webServiceTemplateBuilder2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.ws.transport.WebServiceMessageSender"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "webServiceTemplateBuilder2"
- method:
    name: "messageSenders"
    sourceCodeSignature: "WebServiceTemplateBuilder messageSenders(Collection<? extends\
      \ WebServiceMessageSender> messageSenders)"
    returnType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
    parameters:
    - name: "messageSenders"
      type: "java.util.Collection"
    instructionFingerprint: "C2B661533D0AE871FC4E21A9FFCD9323"
  paths:
  - pathId: "path1"
    testPathName: "messageSenders1Test"
    constructorSignature: "<init>(org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[])\
      \ : void"
    modelFingerprint: "31C832777E1DDC75EB2F061AC29341C5"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "996D2ECD4C659835F45BACDE89DC1D60"
      valueUuid: "target"
    - type: "INPUT"
      name: "messageSenders"
      modelFingerprint: "65CF809BB26B054831180FF77A742DED"
      valueUuid: "messageSenders"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "12B82BE6526CFD3FE8F9230B7A51794A"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:messageSenders,message:uniqueUuid2):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "43B50148CEF8DD3C22394498576E20C9"
      valueUuid: "webServiceTemplateBuilder2"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.customizers, this.messageSenders.set(messageSenders), this.marshaller,\
        \ this.unmarshaller,"
      lineNumber: 153
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: messageSenders - Method: set"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
        parameters:
        - name: "customizers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[]"
            uuid: "customizers"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "? extends org.springframework.ws.transport.WebServiceMessageSender"
      uuid: "messageSenders"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "? extends org.springframework.ws.transport.WebServiceMessageSender"
      uuid: "messageSenders"
    - sapientType: "BASIC"
      content: !<regular>
        value: "MessageSenders must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
        parameters:
        - name: "detectHttpMessageSender"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "int1"
            fixed: true
        - name: "interceptors"
          value:
            sapientType: "NULL"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.ws.client.support.interceptor.ClientInterceptor"
            uuid: "uniqueUuid3"
        - name: "internalCustomizers"
          value:
            sapientType: "NULL"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer"
            uuid: "uniqueUuid4"
        - name: "customizers"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer"
            uuid: "set"
        - name: "messageSenders"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder$WebServiceMessageSenders"
            uuid: "webServiceTemplateBuilder.WebServiceMessageSenders2"
        - name: "marshaller"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.oxm.Marshaller"
            uuid: "uniqueUuid5"
        - name: "unmarshaller"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.oxm.Unmarshaller"
            uuid: "uniqueUuid6"
        - name: "destinationProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.ws.client.support.destination.DestinationProvider"
            uuid: "uniqueUuid7"
        - name: "transformerFactoryClass"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            genericValueType: "? extends javax.xml.transform.TransformerFactory"
            uuid: "uniqueUuid8"
        - name: "messageFactory"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.ws.WebServiceMessageFactory"
            uuid: "uniqueUuid9"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "webServiceTemplateBuilder2"
      fixed: true
- method:
    name: "additionalMessageSenders"
    sourceCodeSignature: "WebServiceTemplateBuilder additionalMessageSenders(WebServiceMessageSender...\
      \ messageSenders)"
    returnType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
    parameters:
    - name: "messageSenders"
      type: "org.springframework.ws.transport.WebServiceMessageSender[]"
    instructionFingerprint: "2A09F6FC2F666BB1BC407AA11716AA58"
  paths:
  - pathId: "path1"
    testPathName: "additionalMessageSendersTest"
    constructorSignature: "<init>(org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[])\
      \ : void"
    modelFingerprint: "DA8D49BB6B4BD06A3B5A80B45B15932E"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "996D2ECD4C659835F45BACDE89DC1D60"
      valueUuid: "target"
    - type: "INPUT"
      name: "messageSenders"
      modelFingerprint: "38DD3CCB6F362989898E61546BBA1E70"
      valueUuid: "messageSenders"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "3617D1863CBF901A68EF540C32DBFFF4"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:messageSenders,message:uniqueUuid10):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "345D7F5F707EDCF66BE8F8B743941BBC"
      methodExercised:
        expression: "additionalMessageSenders(messageSenders:list2):webServiceTemplateBuilder2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "012040D4B0563E116650E900FE43C1F1"
      valueUuid: "webServiceTemplateBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
        parameters:
        - name: "customizers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[]"
            uuid: "customizers"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.ws.transport.WebServiceMessageSender[]"
      uuid: "messageSenders"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.ws.transport.WebServiceMessageSender[]"
      uuid: "messageSenders"
    - sapientType: "BASIC"
      content: !<regular>
        value: "MessageSenders must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid10"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "webServiceTemplateBuilder2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.ws.transport.WebServiceMessageSender"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "webServiceTemplateBuilder2"
- method:
    name: "additionalMessageSenders"
    sourceCodeSignature: "WebServiceTemplateBuilder additionalMessageSenders(Collection<?\
      \ extends WebServiceMessageSender> messageSenders)"
    returnType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
    parameters:
    - name: "messageSenders"
      type: "java.util.Collection"
    instructionFingerprint: "0DF3AD8A73839DFB62BD57A249F76499"
  paths:
  - pathId: "path1"
    testPathName: "additionalMessageSenders1Test"
    constructorSignature: "<init>(org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[])\
      \ : void"
    modelFingerprint: "31C832777E1DDC75EB2F061AC29341C5"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "996D2ECD4C659835F45BACDE89DC1D60"
      valueUuid: "target"
    - type: "INPUT"
      name: "messageSenders"
      modelFingerprint: "65CF809BB26B054831180FF77A742DED"
      valueUuid: "messageSenders"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "12B82BE6526CFD3FE8F9230B7A51794A"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:messageSenders,message:uniqueUuid11):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "43B50148CEF8DD3C22394498576E20C9"
      valueUuid: "webServiceTemplateBuilder2"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.customizers, this.messageSenders.add(messageSenders), this.marshaller,\
        \ this.unmarshaller,"
      lineNumber: 180
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: messageSenders - Method: add"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
        parameters:
        - name: "customizers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[]"
            uuid: "customizers"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "? extends org.springframework.ws.transport.WebServiceMessageSender"
      uuid: "messageSenders"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "? extends org.springframework.ws.transport.WebServiceMessageSender"
      uuid: "messageSenders"
    - sapientType: "BASIC"
      content: !<regular>
        value: "MessageSenders must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid11"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
        parameters:
        - name: "detectHttpMessageSender"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "int1"
            fixed: true
        - name: "interceptors"
          value:
            sapientType: "NULL"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.ws.client.support.interceptor.ClientInterceptor"
            uuid: "uniqueUuid12"
        - name: "internalCustomizers"
          value:
            sapientType: "NULL"
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer"
            uuid: "uniqueUuid13"
        - name: "customizers"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Set"
            genericValueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer"
            uuid: "set"
        - name: "messageSenders"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder$WebServiceMessageSenders"
            uuid: "webServiceTemplateBuilder.WebServiceMessageSenders"
        - name: "marshaller"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.oxm.Marshaller"
            uuid: "uniqueUuid14"
        - name: "unmarshaller"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.oxm.Unmarshaller"
            uuid: "uniqueUuid15"
        - name: "destinationProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.ws.client.support.destination.DestinationProvider"
            uuid: "uniqueUuid16"
        - name: "transformerFactoryClass"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            genericValueType: "? extends javax.xml.transform.TransformerFactory"
            uuid: "uniqueUuid17"
        - name: "messageFactory"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.ws.WebServiceMessageFactory"
            uuid: "uniqueUuid18"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "webServiceTemplateBuilder2"
      fixed: true
- method:
    name: "interceptors"
    sourceCodeSignature: "WebServiceTemplateBuilder interceptors(ClientInterceptor...\
      \ interceptors)"
    returnType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
    parameters:
    - name: "interceptors"
      type: "org.springframework.ws.client.support.interceptor.ClientInterceptor[]"
    instructionFingerprint: "617A39CEA8E735073843BA1DAF22FC53"
  paths:
  - pathId: "path1"
    testPathName: "interceptorsTest"
    constructorSignature: "<init>(org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[])\
      \ : void"
    modelFingerprint: "57B3BAC9D3BAFEDC50E61D4C46BC2DAB"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "996D2ECD4C659835F45BACDE89DC1D60"
      valueUuid: "target"
    - type: "INPUT"
      name: "interceptors"
      modelFingerprint: "708377AB6BCCE772BE35612D86C4552F"
      valueUuid: "interceptors"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "0D0D003EEC42F510A3A13F08AFE0E987"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:interceptors,message:uniqueUuid19):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "F2F7AE53BD7463F5A65FA65DE77175C7"
      methodExercised:
        expression: "interceptors(interceptors:list2):webServiceTemplateBuilder2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "012040D4B0563E116650E900FE43C1F1"
      valueUuid: "webServiceTemplateBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
        parameters:
        - name: "customizers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[]"
            uuid: "customizers"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.ws.client.support.interceptor.ClientInterceptor[]"
      uuid: "interceptors"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.ws.client.support.interceptor.ClientInterceptor[]"
      uuid: "interceptors"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Interceptors must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid19"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "webServiceTemplateBuilder2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.ws.client.support.interceptor.ClientInterceptor"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "webServiceTemplateBuilder2"
- method:
    name: "interceptors"
    sourceCodeSignature: "WebServiceTemplateBuilder interceptors(Collection<? extends\
      \ ClientInterceptor> interceptors)"
    returnType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
    parameters:
    - name: "interceptors"
      type: "java.util.Collection"
    instructionFingerprint: "3753F60D3FFF176C7A9F3CC6500D5679"
  paths:
  - pathId: "path1"
    testPathName: "interceptors1Test"
    constructorSignature: "<init>(org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[])\
      \ : void"
    modelFingerprint: "68A480D38575774DAA6A59C8F20EC220"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "996D2ECD4C659835F45BACDE89DC1D60"
      valueUuid: "target"
    - type: "INPUT"
      name: "interceptors"
      modelFingerprint: "601C66C19E2514847545EF47696BC8D2"
      valueUuid: "interceptors"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "95B89223853912482AD53AAE0D173AEA"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:interceptors,message:uniqueUuid20):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "30CC4553200A6E5DEF0C1637A333A574"
      valueUuid: "webServiceTemplateBuilder2NotNull"
    disabled: false
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_INTERNAL_METHOD_RECURSIVE_CALL"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
        parameters:
        - name: "customizers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[]"
            uuid: "customizers"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "? extends org.springframework.ws.client.support.interceptor.ClientInterceptor"
      uuid: "interceptors"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "? extends org.springframework.ws.client.support.interceptor.ClientInterceptor"
      uuid: "interceptors"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Interceptors must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid20"
      fixed: true
    - sapientType: "NOT_NULL"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "webServiceTemplateBuilder2NotNull"
      fixed: true
    calledSomeStaticInternalMethod: true
- method:
    name: "additionalInterceptors"
    sourceCodeSignature: "WebServiceTemplateBuilder additionalInterceptors(ClientInterceptor...\
      \ interceptors)"
    returnType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
    parameters:
    - name: "interceptors"
      type: "org.springframework.ws.client.support.interceptor.ClientInterceptor[]"
    instructionFingerprint: "6020B713ABEA041D14AEB082ECC2B4BE"
  paths:
  - pathId: "path1"
    testPathName: "additionalInterceptorsTest"
    constructorSignature: "<init>(org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[])\
      \ : void"
    modelFingerprint: "229123FDD87B67951F3B942A6745BD96"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "996D2ECD4C659835F45BACDE89DC1D60"
      valueUuid: "target"
    - type: "INPUT"
      name: "interceptors"
      modelFingerprint: "708377AB6BCCE772BE35612D86C4552F"
      valueUuid: "interceptors"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "0D0D003EEC42F510A3A13F08AFE0E987"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:interceptors,message:uniqueUuid21):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "7ACA02AEB594E04DCDB0AA82B623CFC6"
      methodExercised:
        expression: "additionalInterceptors(interceptors:list2):webServiceTemplateBuilder2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "012040D4B0563E116650E900FE43C1F1"
      valueUuid: "webServiceTemplateBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
        parameters:
        - name: "customizers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[]"
            uuid: "customizers"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.ws.client.support.interceptor.ClientInterceptor[]"
      uuid: "interceptors"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.ws.client.support.interceptor.ClientInterceptor[]"
      uuid: "interceptors"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Interceptors must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid21"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "webServiceTemplateBuilder2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.ws.client.support.interceptor.ClientInterceptor"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "webServiceTemplateBuilder2"
- method:
    name: "additionalInterceptors"
    sourceCodeSignature: "WebServiceTemplateBuilder additionalInterceptors(Collection<?\
      \ extends ClientInterceptor> interceptors)"
    returnType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
    parameters:
    - name: "interceptors"
      type: "java.util.Collection"
    instructionFingerprint: "FCCC4560C0BD668ABDB5577B3F2649C3"
  paths:
  - pathId: "path1"
    testPathName: "additionalInterceptors1Test"
    constructorSignature: "<init>(org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[])\
      \ : void"
    modelFingerprint: "69F0A7C1C04197E43D15A3E86908F78D"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "996D2ECD4C659835F45BACDE89DC1D60"
      valueUuid: "target"
    - type: "INPUT"
      name: "interceptors"
      modelFingerprint: "601C66C19E2514847545EF47696BC8D2"
      valueUuid: "interceptors"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "95B89223853912482AD53AAE0D173AEA"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:interceptors,message:uniqueUuid22):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "30CC4553200A6E5DEF0C1637A333A574"
      valueUuid: "webServiceTemplateBuilder2NotNull"
    disabled: false
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_INTERNAL_METHOD_RECURSIVE_CALL"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
        parameters:
        - name: "customizers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[]"
            uuid: "customizers"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "? extends org.springframework.ws.client.support.interceptor.ClientInterceptor"
      uuid: "interceptors"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "? extends org.springframework.ws.client.support.interceptor.ClientInterceptor"
      uuid: "interceptors"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Interceptors must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid22"
      fixed: true
    - sapientType: "NOT_NULL"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "webServiceTemplateBuilder2NotNull"
      fixed: true
    calledSomeStaticInternalMethod: true
- method:
    name: "customizers"
    sourceCodeSignature: "WebServiceTemplateBuilder customizers(WebServiceTemplateCustomizer...\
      \ customizers)"
    returnType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
    parameters:
    - name: "customizers"
      type: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[]"
    instructionFingerprint: "5B75D911469B0193030CE53B92EB335A"
  paths:
  - pathId: "path1"
    testPathName: "customizersTest"
    constructorSignature: "<init>(org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[])\
      \ : void"
    modelFingerprint: "6014287243F3FF53E0799697B1E4262C"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "996D2ECD4C659835F45BACDE89DC1D60"
      valueUuid: "target"
    - type: "INPUT"
      name: "customizers"
      modelFingerprint: "A7BE31B2F6EC4E880EC34CBC016203FC"
      valueUuid: "customizers"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "6936CF9D5D36CEBA21AA4145726B64A2"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:customizers,message:uniqueUuid23):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "EE5CEA3835F3FDB89992E630D0CDA70F"
      methodExercised:
        expression: "customizers(customizers:list2):webServiceTemplateBuilder2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "012040D4B0563E116650E900FE43C1F1"
      valueUuid: "webServiceTemplateBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
        parameters:
        - name: "customizers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[]"
            uuid: "customizers2"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[]"
      uuid: "customizers"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[]"
      uuid: "customizers"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Customizers must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid23"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "webServiceTemplateBuilder2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "webServiceTemplateBuilder2"
- method:
    name: "customizers"
    sourceCodeSignature: "WebServiceTemplateBuilder customizers(Collection<? extends\
      \ WebServiceTemplateCustomizer> customizers)"
    returnType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
    parameters:
    - name: "customizers"
      type: "java.util.Collection"
    instructionFingerprint: "25A003FF20EF26504E0583F13C1C5D8E"
  paths:
  - pathId: "path1"
    testPathName: "customizers1Test"
    constructorSignature: "<init>(org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[])\
      \ : void"
    modelFingerprint: "F5C02D5349230F07F582F59098D37775"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "996D2ECD4C659835F45BACDE89DC1D60"
      valueUuid: "target"
    - type: "INPUT"
      name: "customizers"
      modelFingerprint: "E1F4DD8E9017F4BD237E8A297346F311"
      valueUuid: "customizers"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F8BD9EB3A13E7A56AEFE15C13158882A"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:customizers,message:uniqueUuid24):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B790CFA3C9A90F433160379E1CF3A9CA"
      valueUuid: "webServiceTemplateBuilder2NotNull"
    disabled: false
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_INTERNAL_METHOD_RECURSIVE_CALL"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
        parameters:
        - name: "customizers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[]"
            uuid: "customizers2"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "? extends org.springframework.boot.webservices.client.WebServiceTemplateCustomizer"
      uuid: "customizers"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "? extends org.springframework.boot.webservices.client.WebServiceTemplateCustomizer"
      uuid: "customizers"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Customizers must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid24"
      fixed: true
    - sapientType: "NOT_NULL"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "webServiceTemplateBuilder2NotNull"
      fixed: true
    calledSomeStaticInternalMethod: true
- method:
    name: "additionalCustomizers"
    sourceCodeSignature: "WebServiceTemplateBuilder additionalCustomizers(WebServiceTemplateCustomizer...\
      \ customizers)"
    returnType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
    parameters:
    - name: "customizers"
      type: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[]"
    instructionFingerprint: "5829710C0CB5D89BB6FA549299CDA717"
  paths:
  - pathId: "path1"
    testPathName: "additionalCustomizersTest"
    constructorSignature: "<init>(org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[])\
      \ : void"
    modelFingerprint: "D3702E99B01001CFD68B557A6787EBE1"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "996D2ECD4C659835F45BACDE89DC1D60"
      valueUuid: "target"
    - type: "INPUT"
      name: "customizers"
      modelFingerprint: "A7BE31B2F6EC4E880EC34CBC016203FC"
      valueUuid: "customizers"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "6936CF9D5D36CEBA21AA4145726B64A2"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:customizers,message:uniqueUuid25):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "57996BD93A332488EB0059C6919FF81B"
      methodExercised:
        expression: "additionalCustomizers(customizers:list2):webServiceTemplateBuilder2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "012040D4B0563E116650E900FE43C1F1"
      valueUuid: "webServiceTemplateBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
        parameters:
        - name: "customizers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[]"
            uuid: "customizers2"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[]"
      uuid: "customizers"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[]"
      uuid: "customizers"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Customizers must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid25"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "webServiceTemplateBuilder2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "webServiceTemplateBuilder2"
- method:
    name: "additionalCustomizers"
    sourceCodeSignature: "WebServiceTemplateBuilder additionalCustomizers(Collection<?\
      \ extends WebServiceTemplateCustomizer> customizers)"
    returnType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
    parameters:
    - name: "customizers"
      type: "java.util.Collection"
    instructionFingerprint: "69B2A7236C683899929C5E6216682A1C"
  paths:
  - pathId: "path1"
    testPathName: "additionalCustomizers1Test"
    constructorSignature: "<init>(org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[])\
      \ : void"
    modelFingerprint: "5E83E26E76711E34C30C0FD8E294FD38"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "996D2ECD4C659835F45BACDE89DC1D60"
      valueUuid: "target"
    - type: "INPUT"
      name: "customizers"
      modelFingerprint: "E1F4DD8E9017F4BD237E8A297346F311"
      valueUuid: "customizers"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F8BD9EB3A13E7A56AEFE15C13158882A"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:customizers,message:uniqueUuid26):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B790CFA3C9A90F433160379E1CF3A9CA"
      valueUuid: "webServiceTemplateBuilder2NotNull"
    disabled: false
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_INTERNAL_METHOD_RECURSIVE_CALL"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
        parameters:
        - name: "customizers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[]"
            uuid: "customizers2"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "? extends org.springframework.boot.webservices.client.WebServiceTemplateCustomizer"
      uuid: "customizers"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "? extends org.springframework.boot.webservices.client.WebServiceTemplateCustomizer"
      uuid: "customizers"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Customizers must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid26"
      fixed: true
    - sapientType: "NOT_NULL"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "webServiceTemplateBuilder2NotNull"
      fixed: true
    calledSomeStaticInternalMethod: true
- method:
    name: "setCheckConnectionForFault"
    sourceCodeSignature: "WebServiceTemplateBuilder setCheckConnectionForFault(boolean\
      \ checkConnectionForFault)"
    returnType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
    parameters:
    - name: "checkConnectionForFault"
      type: "boolean"
    instructionFingerprint: "9949B59F0CCEF490EBB1F626EB5EFD9B"
  paths:
  - pathId: "path1"
    testPathName: "setCheckConnectionForFaultTest"
    constructorSignature: "<init>(org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[])\
      \ : void"
    modelFingerprint: "7346EE0A7BF5686E278F932A6AE9A77D"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "996D2ECD4C659835F45BACDE89DC1D60"
      valueUuid: "target"
    - type: "INPUT"
      name: "checkConnectionForFault"
      modelFingerprint: "2C4A37AED0C57C2C60981062C6D8DF24"
      valueUuid: "checkConnectionForFault"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "FEDE401E0973BEECA6DECEDB96187668"
      valueUuid: "webServiceTemplateBuilder2NotNull"
    disabled: false
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
        parameters:
        - name: "customizers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[]"
            uuid: "customizers"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "checkConnectionForFault"
    - sapientType: "NOT_NULL"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "webServiceTemplateBuilder2NotNull"
      fixed: true
- method:
    name: "setCheckConnectionForError"
    sourceCodeSignature: "WebServiceTemplateBuilder setCheckConnectionForError(boolean\
      \ checkConnectionForError)"
    returnType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
    parameters:
    - name: "checkConnectionForError"
      type: "boolean"
    instructionFingerprint: "2B22DA10D3FDE0204CECE5DB7D0001AE"
  paths:
  - pathId: "path1"
    testPathName: "setCheckConnectionForErrorTest"
    constructorSignature: "<init>(org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[])\
      \ : void"
    modelFingerprint: "FEE6D8D1ED7C6F3207A2859102E4B2AD"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "996D2ECD4C659835F45BACDE89DC1D60"
      valueUuid: "target"
    - type: "INPUT"
      name: "checkConnectionForError"
      modelFingerprint: "1218842C3F9BA7AE5E9C8660C95453E3"
      valueUuid: "checkConnectionForError"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "FEDE401E0973BEECA6DECEDB96187668"
      valueUuid: "webServiceTemplateBuilder2NotNull"
    disabled: false
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
        parameters:
        - name: "customizers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[]"
            uuid: "customizers"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "checkConnectionForError"
    - sapientType: "NOT_NULL"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "webServiceTemplateBuilder2NotNull"
      fixed: true
- method:
    name: "setWebServiceMessageFactory"
    sourceCodeSignature: "WebServiceTemplateBuilder setWebServiceMessageFactory(WebServiceMessageFactory\
      \ messageFactory)"
    returnType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
    parameters:
    - name: "messageFactory"
      type: "org.springframework.ws.WebServiceMessageFactory"
    instructionFingerprint: "2D1EFA1648B90BC7BCC57C9B140F5236"
  paths:
  - pathId: "path1"
    testPathName: "setWebServiceMessageFactoryTest"
    constructorSignature: "<init>(org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[])\
      \ : void"
    modelFingerprint: "C9542AA98CDE26A6A297056C8B90B572"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "996D2ECD4C659835F45BACDE89DC1D60"
      valueUuid: "target"
    - type: "INPUT"
      name: "messageFactory"
      modelFingerprint: "C7CE61B4A5339F0B86E961A23E886458"
      valueUuid: "messageFactory"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5D8EC0C2149ACC38D13BF9A85D9AF022"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:messageFactory,message:uniqueUuid27):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E5904BEEDF80E2919F6E98BA4622F5B7"
      valueUuid: "webServiceTemplateBuilder2NotNull"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
        parameters:
        - name: "customizers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[]"
            uuid: "customizers"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.ws.WebServiceMessageFactory"
      uuid: "messageFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.ws.WebServiceMessageFactory"
      uuid: "messageFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "MessageFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid27"
      fixed: true
    - sapientType: "NOT_NULL"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "webServiceTemplateBuilder2NotNull"
      fixed: true
- method:
    name: "setUnmarshaller"
    sourceCodeSignature: "WebServiceTemplateBuilder setUnmarshaller(Unmarshaller unmarshaller)"
    returnType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
    parameters:
    - name: "unmarshaller"
      type: "org.springframework.oxm.Unmarshaller"
    instructionFingerprint: "A50D0A6CCAE88087A07A2B09E1DBA68F"
  paths:
  - pathId: "path1"
    testPathName: "setUnmarshallerTest"
    constructorSignature: "<init>(org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[])\
      \ : void"
    modelFingerprint: "096E19E95B2418D10436875C08FDC8E3"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "996D2ECD4C659835F45BACDE89DC1D60"
      valueUuid: "target"
    - type: "INPUT"
      name: "unmarshaller"
      modelFingerprint: "D5CE400646F74A3E87284E84ADA65264"
      valueUuid: "unmarshaller"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "6769D6576FFBBD66D17E00033B3704E6"
      valueUuid: "webServiceTemplateBuilder2NotNull"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
        parameters:
        - name: "customizers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[]"
            uuid: "customizers"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.oxm.Unmarshaller"
      uuid: "unmarshaller"
    - sapientType: "NOT_NULL"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "webServiceTemplateBuilder2NotNull"
      fixed: true
- method:
    name: "setMarshaller"
    sourceCodeSignature: "WebServiceTemplateBuilder setMarshaller(Marshaller marshaller)"
    returnType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
    parameters:
    - name: "marshaller"
      type: "org.springframework.oxm.Marshaller"
    instructionFingerprint: "A47ADE15A33DBADF27A396EA2AB998CC"
  paths:
  - pathId: "path1"
    testPathName: "setMarshallerTest"
    constructorSignature: "<init>(org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[])\
      \ : void"
    modelFingerprint: "0EF9D174726871DB1F268A02DC0DBBD0"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "996D2ECD4C659835F45BACDE89DC1D60"
      valueUuid: "target"
    - type: "INPUT"
      name: "marshaller"
      modelFingerprint: "6FE348E1A5FDF4621599296FDB40AC0B"
      valueUuid: "marshaller"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "78B13FE4DC7C7C4AC6BCFFAEA56B339B"
      valueUuid: "webServiceTemplateBuilder2NotNull"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
        parameters:
        - name: "customizers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[]"
            uuid: "customizers"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.oxm.Marshaller"
      uuid: "marshaller"
    - sapientType: "NOT_NULL"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "webServiceTemplateBuilder2NotNull"
      fixed: true
- method:
    name: "setFaultMessageResolver"
    sourceCodeSignature: "WebServiceTemplateBuilder setFaultMessageResolver(FaultMessageResolver\
      \ faultMessageResolver)"
    returnType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
    parameters:
    - name: "faultMessageResolver"
      type: "org.springframework.ws.client.core.FaultMessageResolver"
    instructionFingerprint: "09F929DB4671D98769E55B0FF06ABB57"
  paths:
  - pathId: "path1"
    testPathName: "setFaultMessageResolverTest"
    constructorSignature: "<init>(org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[])\
      \ : void"
    modelFingerprint: "8E8A79D117AD9CA1DDB75AEDB4D76357"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "996D2ECD4C659835F45BACDE89DC1D60"
      valueUuid: "target"
    - type: "INPUT"
      name: "faultMessageResolver"
      modelFingerprint: "F2D5041206DA33AAE26E81383D5613A5"
      valueUuid: "faultMessageResolver"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "FEDE401E0973BEECA6DECEDB96187668"
      valueUuid: "webServiceTemplateBuilder2NotNull"
    disabled: false
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
        parameters:
        - name: "customizers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[]"
            uuid: "customizers"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.ws.client.core.FaultMessageResolver"
      uuid: "faultMessageResolver"
    - sapientType: "NOT_NULL"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "webServiceTemplateBuilder2NotNull"
      fixed: true
- method:
    name: "setTransformerFactoryClass"
    sourceCodeSignature: "WebServiceTemplateBuilder setTransformerFactoryClass(Class<?\
      \ extends TransformerFactory> transformerFactoryClass)"
    returnType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
    parameters:
    - name: "transformerFactoryClass"
      type: "java.lang.Class"
    instructionFingerprint: "9861BAB5566ADB9DE4F03D34CA1231A8"
  paths:
  - pathId: "path1"
    testPathName: "setTransformerFactoryClassTest"
    constructorSignature: "<init>(org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[])\
      \ : void"
    modelFingerprint: "B45E0FE2F5E95120EAE789BBA3C925F2"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "996D2ECD4C659835F45BACDE89DC1D60"
      valueUuid: "target"
    - type: "INPUT"
      name: "transformerFactoryClass"
      modelFingerprint: "4B07E777CF9713423099A1990AEC4690"
      valueUuid: "transformerFactoryClass"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2083B50DEAEABBE4412B5EFB14A0A117"
      valueUuid: "webServiceTemplateBuilder2NotNull"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
        parameters:
        - name: "customizers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[]"
            uuid: "customizers"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "target"
    - sapientType: "CLASS"
      content: !<regular>
        value: "? extends javax.xml.transform.TransformerFactory"
      valueType: "java.lang.Class"
      genericValueType: "? extends javax.xml.transform.TransformerFactory"
      uuid: "transformerFactoryClass"
    - sapientType: "NOT_NULL"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "webServiceTemplateBuilder2NotNull"
      fixed: true
- method:
    name: "setDefaultUri"
    sourceCodeSignature: "WebServiceTemplateBuilder setDefaultUri(String defaultUri)"
    returnType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
    parameters:
    - name: "defaultUri"
      type: "java.lang.String"
    instructionFingerprint: "B7F943A0447FCEE092F09CA2A489D94C"
  paths:
  - pathId: "path1"
    testPathName: "setDefaultUriTest"
    constructorSignature: "<init>(org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[])\
      \ : void"
    modelFingerprint: "A08ECA6E417C4ABE6A5E2D8D8D612183"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "996D2ECD4C659835F45BACDE89DC1D60"
      valueUuid: "target"
    - type: "INPUT"
      name: "defaultUri"
      modelFingerprint: "32D441E33CC0A852EEC875D4CD6864E7"
      valueUuid: "defaultUri"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "FE76C31863467C019B60FB24C8AD1E57"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "hasText(text:defaultUri,message:uniqueUuid28):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "7F9FB1B76629B8C5DB430E6D8282AF94"
      methodExercised:
        expression: "setDestinationProvider(destinationProvider:uniqueUuid29):webServiceTemplateBuilder2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "012040D4B0563E116650E900FE43C1F1"
      valueUuid: "webServiceTemplateBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
        parameters:
        - name: "customizers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[]"
            uuid: "customizers"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "defaultUri"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "defaultUri"
    - sapientType: "BASIC"
      content: !<regular>
        value: "DefaultUri must not be empty"
      valueType: "java.lang.String"
      uuid: "uniqueUuid28"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "webServiceTemplateBuilder2"
    - sapientType: "ANY"
      valueType: "org.springframework.ws.client.support.destination.DestinationProvider"
      uuid: "uniqueUuid29"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "webServiceTemplateBuilder2"
- method:
    name: "setDestinationProvider"
    sourceCodeSignature: "WebServiceTemplateBuilder setDestinationProvider(DestinationProvider\
      \ destinationProvider)"
    returnType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
    parameters:
    - name: "destinationProvider"
      type: "org.springframework.ws.client.support.destination.DestinationProvider"
    instructionFingerprint: "B6149B1693EDA04D37E7E8781E543BDD"
  paths:
  - pathId: "path1"
    testPathName: "setDestinationProviderTest"
    constructorSignature: "<init>(org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[])\
      \ : void"
    modelFingerprint: "2678F7EC58C750B8391EA0880077D6C0"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "996D2ECD4C659835F45BACDE89DC1D60"
      valueUuid: "target"
    - type: "INPUT"
      name: "destinationProvider"
      modelFingerprint: "4494D3998AAEBCAF40977965F340CDA9"
      valueUuid: "destinationProvider"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "357C1DC1F239F4541C53A300B36590B0"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:destinationProvider,message:uniqueUuid30):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C235FF4A17A2041927F5ADBDCAB14326"
      valueUuid: "webServiceTemplateBuilder2NotNull"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
        parameters:
        - name: "customizers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[]"
            uuid: "customizers"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.ws.client.support.destination.DestinationProvider"
      uuid: "destinationProvider"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.ws.client.support.destination.DestinationProvider"
      uuid: "destinationProvider"
    - sapientType: "BASIC"
      content: !<regular>
        value: "DestinationProvider must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid30"
      fixed: true
    - sapientType: "NOT_NULL"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "webServiceTemplateBuilder2NotNull"
      fixed: true
- method:
    name: "build"
    sourceCodeSignature: "WebServiceTemplate build()"
    returnType: "org.springframework.ws.client.core.WebServiceTemplate"
    instructionFingerprint: "49AD96D205391BB61677661F61C8E1D0"
  paths:
  - pathId: "path1"
    testPathName: "buildTest"
    constructorSignature: "<init>(org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[])\
      \ : void"
    modelFingerprint: "6C26CB3D3B83D9C4E719A896C1EA8585"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "996D2ECD4C659835F45BACDE89DC1D60"
      valueUuid: "target"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "3C19DA017D8D8985646DB251B3B7EEDF"
      methodExercised:
        expression: "configure(webServiceTemplate:webServiceTemplate):webServiceTemplate2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "627A5499A09D6C5EE24E41755DD31478"
      valueUuid: "webServiceTemplate2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
        parameters:
        - name: "customizers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[]"
            uuid: "customizers"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.ws.client.core.WebServiceTemplate"
      uuid: "webServiceTemplate2"
    - sapientType: "ANY"
      valueType: "org.springframework.ws.client.core.WebServiceTemplate"
      uuid: "webServiceTemplate"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.ws.client.core.WebServiceTemplate"
      uuid: "webServiceTemplate2"
- method:
    name: "build"
    sourceCodeSignature: "<T extends WebServiceTemplate> T build(Class<T> webServiceTemplateClass)"
    returnType: "org.springframework.ws.client.core.WebServiceTemplate"
    parameters:
    - name: "webServiceTemplateClass"
      type: "java.lang.Class"
    instructionFingerprint: "0BF92795D5BE8C4CEDF84F2D244748CE"
  paths:
  - pathId: "path1"
    testPathName: "build1Test"
    constructorSignature: "<init>(org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[])\
      \ : void"
    modelFingerprint: "4E51FCE8FBF4D639328DFEDEF8730044"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "996D2ECD4C659835F45BACDE89DC1D60"
      valueUuid: "target"
    - type: "INPUT"
      name: "webServiceTemplateClass"
      modelFingerprint: "BFF5ACB9D0F9893AD57AB6DC7A9BC071"
      valueUuid: "webServiceTemplateClass"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "31C0191D38978AFB86D4389EB1378AA1"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:webServiceTemplateClass,message:uniqueUuid31):void"
        staticAccess: true
    - type: "STATIC"
      name: "BeanUtils.class"
      modelFingerprint: "9CAC4B5B43A0AC822C5E74997B993872"
      valueUuid: "BeanUtils.class"
      methodExercised:
        expression: "instantiateClass(clazz:webServiceTemplateClass):webServiceTemplate"
        throwsExceptions:
        - "org.springframework.beans.BeanInstantiationException"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "B3EEF56D18CA2A6F6BBC00E2BD5EDDB6"
      methodExercised:
        expression: "configure(webServiceTemplate:webServiceTemplate):webServiceTemplate2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "627A5499A09D6C5EE24E41755DD31478"
      valueUuid: "webServiceTemplate2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
        parameters:
        - name: "customizers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[]"
            uuid: "customizers"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "target"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.ws.client.core.WebServiceTemplate"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.ws.client.core.WebServiceTemplate"
      uuid: "webServiceTemplateClass"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.ws.client.core.WebServiceTemplate"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.ws.client.core.WebServiceTemplate"
      uuid: "webServiceTemplateClass"
    - sapientType: "BASIC"
      content: !<regular>
        value: "WebServiceTemplateClass must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid31"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.BeanUtils"
      uuid: "BeanUtils.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.ws.client.core.WebServiceTemplate"
      uuid: "webServiceTemplate"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.ws.client.core.WebServiceTemplate"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.ws.client.core.WebServiceTemplate"
      uuid: "webServiceTemplateClass"
    - sapientType: "MOCK"
      valueType: "org.springframework.ws.client.core.WebServiceTemplate"
      uuid: "webServiceTemplate2"
    - sapientType: "MOCK"
      valueType: "org.springframework.ws.client.core.WebServiceTemplate"
      uuid: "webServiceTemplate"
    - sapientType: "MOCK"
      valueType: "org.springframework.ws.client.core.WebServiceTemplate"
      uuid: "webServiceTemplate2"
- method:
    name: "configure"
    sourceCodeSignature: "<T extends WebServiceTemplate> T configure(T webServiceTemplate)"
    returnType: "org.springframework.ws.client.core.WebServiceTemplate"
    parameters:
    - name: "webServiceTemplate"
      type: "org.springframework.ws.client.core.WebServiceTemplate"
    instructionFingerprint: "DA5D6AB29C15EA81DDBE417D6F82AF8F"
  paths:
  - pathId: "path4"
    testPathName: "configureWhenCollectionUtilsIsEmptyCustomizersAndCollectionUtilsIsEmptyThisInterceptors"
    constructorSignature: "<init>(org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[])\
      \ : void"
    modelFingerprint: "A70F0AC10F0DA5A7F0756A38AE666A8D"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "996D2ECD4C659835F45BACDE89DC1D60"
      valueUuid: "target"
    - type: "INPUT"
      name: "webServiceTemplate"
      modelFingerprint: "E7C918199CB4053AF789BEB01FEA7E18"
      valueUuid: "webServiceTemplate"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "802E8376E09A06CAB055E45209F7594D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:webServiceTemplate,message:uniqueUuid32):void"
        staticAccess: true
    - type: "STATIC"
      name: "CollectionUtils.class"
      modelFingerprint: "1724775219AC15474B4DA7D482A4B59C"
      valueUuid: "CollectionUtils.class"
      methodExercised:
        expression: "isEmpty(collection:set2):boolean2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "webServiceTemplate"
      modelFingerprint: "A70A600DCA0399E93B378D5DDD7EB7EF"
      valueUuid: "webServiceTemplate"
      methodExercised:
        expression: "setMessageSenders(messageSenders:objectArray):void2"
    - type: "STATIC"
      name: "PropertyMapper.class"
      modelFingerprint: "B1B41702847FC8B31AB887927AD81CC1"
      valueUuid: "PropertyMapper.class"
      methodExercised:
        expression: "get():propertyMapper"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "44331629620EEBF77844433E7BB802E9"
      valueUuid: "propertyMapper"
      methodExercised:
        expression: "alwaysApplyingWhenNonNull():propertyMapper2"
    - type: "STATIC"
      name: "CollectionUtils.class"
      modelFingerprint: "26685A33CEE4E5FE886083691758B48D"
      valueUuid: "CollectionUtils.class"
      methodExercised:
        expression: "isEmpty(collection:uniqueUuid33):boolean3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "map"
      modelFingerprint: "6759282935D1B5F7213A88DD8BC2BCE1"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "from(value:uniqueUuid34):propertyMapper.Source"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "7F471C9EE842352039FDFCB21D31C037"
      valueUuid: "propertyMapper.Source"
      methodExercised:
        expression: "to(consumer:uniqueUuid35):void3"
    - type: "LOCAL_VARIABLE"
      name: "map"
      modelFingerprint: "1B63967DE52D0B72303BD3D3AE0979C6"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "from(value:uniqueUuid36):propertyMapper.Source2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "62B0E4A21785C7FA240C20E59D250087"
      valueUuid: "propertyMapper.Source2"
      methodExercised:
        expression: "to(consumer:uniqueUuid38):void4"
    - type: "LOCAL_VARIABLE"
      name: "map"
      modelFingerprint: "269C0179F870F9DB97CC59589E9DE61C"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "from(value:uniqueUuid40):propertyMapper.Source3"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "CE1513582395056BCA05EF75D22D9DD3"
      valueUuid: "propertyMapper.Source3"
      methodExercised:
        expression: "to(consumer:uniqueUuid42):void5"
    - type: "LOCAL_VARIABLE"
      name: "map"
      modelFingerprint: "36C8359F424D469401ADBDF52040214F"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "from(value:uniqueUuid44):propertyMapper.Source4"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "5DAE73D9D05CBB5158035CFABDD33747"
      valueUuid: "propertyMapper.Source4"
      methodExercised:
        expression: "to(consumer:uniqueUuid46):void6"
    - type: "LOCAL_VARIABLE"
      name: "map"
      modelFingerprint: "72C850997C1013400193BB998D044EDF"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "from(value:uniqueUuid48):propertyMapper.Source5"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B771D9031DC1CA1C9F7EA1FC4703E9DF"
      valueUuid: "propertyMapper.Source5"
      methodExercised:
        expression: "to(consumer:uniqueUuid50):void7"
    - type: "STATIC"
      name: "CollectionUtils.class.real"
      modelFingerprint: "6893F4574B66A99D9CFCCBC9878C4918"
      valueUuid: "CollectionUtils.class.real"
      methodExercised:
        expression: "isEmpty(collection:uniqueUuid52):boolean4"
        staticAccess: true
    - type: "STATIC"
      name: "CollectionUtils.class"
      modelFingerprint: "A4F0E3A14D214170F5F8676ED1A975A8"
      valueUuid: "CollectionUtils.class"
      methodExercised:
        expression: "isEmpty(collection:set):boolean5"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A173825DC37E8474E6BE89E3F5111C86"
      valueUuid: "webServiceTemplate"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "if (this.messageSenders.isOnlyAdditional() && this.detectHttpMessageSender)\
        \ {"
      lineNumber: 483
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: messageSenders - Method: isOnlyAdditional"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
        parameters:
        - name: "customizers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[]"
            uuid: "customizers"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.ws.client.core.WebServiceTemplate"
        parameters:
        - name: "messageFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.ws.WebServiceMessageFactory"
            uuid: "webServiceTemplate-messageFactory"
        propertiesMap:
          messageSenders:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.ws.transport.WebServiceMessageSender[]"
            uuid: "objectArray"
            collectionUuid: "set3"
      valueType: "org.springframework.ws.client.core.WebServiceTemplate"
      uuid: "webServiceTemplate"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.ws.client.core.WebServiceTemplate"
        parameters:
        - name: "messageFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.ws.WebServiceMessageFactory"
            uuid: "webServiceTemplate-messageFactory"
        propertiesMap:
          messageSenders:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.ws.transport.WebServiceMessageSender[]"
            uuid: "objectArray"
            collectionUuid: "set3"
      valueType: "org.springframework.ws.client.core.WebServiceTemplate"
      uuid: "webServiceTemplate"
    - sapientType: "BASIC"
      content: !<regular>
        value: "WebServiceTemplate must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid32"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.CollectionUtils"
      uuid: "CollectionUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "org.springframework.ws.transport.WebServiceMessageSender"
      uuid: "set2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.ws.client.core.WebServiceTemplate"
        parameters:
        - name: "messageFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.ws.WebServiceMessageFactory"
            uuid: "webServiceTemplate-messageFactory"
        propertiesMap:
          messageSenders:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.ws.transport.WebServiceMessageSender[]"
            uuid: "objectArray"
            collectionUuid: "set3"
      valueType: "org.springframework.ws.client.core.WebServiceTemplate"
      uuid: "webServiceTemplate"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.ws.transport.WebServiceMessageSender[]"
      uuid: "objectArray"
      collectionUuid: "set3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "PropertyMapper.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.CollectionUtils"
      uuid: "CollectionUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "NULL"
      valueType: "java.util.Set"
      genericValueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer"
      uuid: "uniqueUuid33"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source"
    - sapientType: "NULL"
      valueType: "org.springframework.oxm.Marshaller"
      uuid: "uniqueUuid34"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid35"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "org.springframework.oxm.Unmarshaller"
            uuid: "uniqueUuid39"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source2"
    - sapientType: "NULL"
      valueType: "org.springframework.oxm.Unmarshaller"
      uuid: "uniqueUuid36"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "org.springframework.oxm.Unmarshaller"
            uuid: "uniqueUuid39"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid38"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "org.springframework.ws.client.support.destination.DestinationProvider"
            uuid: "uniqueUuid43"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source3"
    - sapientType: "NULL"
      valueType: "org.springframework.ws.client.support.destination.DestinationProvider"
      uuid: "uniqueUuid40"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "org.springframework.ws.client.support.destination.DestinationProvider"
            uuid: "uniqueUuid43"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid42"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            genericValueType: "? extends javax.xml.transform.TransformerFactory"
            uuid: "uniqueUuid47"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source4"
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      genericValueType: "? extends javax.xml.transform.TransformerFactory"
      uuid: "uniqueUuid44"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            genericValueType: "? extends javax.xml.transform.TransformerFactory"
            uuid: "uniqueUuid47"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source4"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid46"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "org.springframework.ws.WebServiceMessageFactory"
            uuid: "uniqueUuid51"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source5"
    - sapientType: "NULL"
      valueType: "org.springframework.ws.WebServiceMessageFactory"
      uuid: "uniqueUuid48"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "org.springframework.ws.WebServiceMessageFactory"
            uuid: "uniqueUuid51"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source5"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid50"
    - sapientType: "REAL"
      valueType: "org.springframework.util.CollectionUtils"
      uuid: "CollectionUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "NULL"
      valueType: "java.util.Set"
      genericValueType: "org.springframework.ws.client.support.interceptor.ClientInterceptor"
      uuid: "uniqueUuid52"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.CollectionUtils"
      uuid: "CollectionUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean5"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer"
      uuid: "set"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.ws.client.core.WebServiceTemplate"
        parameters:
        - name: "messageFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.ws.WebServiceMessageFactory"
            uuid: "webServiceTemplate-messageFactory"
        propertiesMap:
          messageSenders:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.ws.transport.WebServiceMessageSender[]"
            uuid: "objectArray"
            collectionUuid: "set3"
      valueType: "org.springframework.ws.client.core.WebServiceTemplate"
      uuid: "webServiceTemplate"
    branches:
    - lineNumber: 483
      expression: "this.messageSenders.isOnlyAdditional()"
      range: "(483,7)-(483,44)"
      evaluatedAs: false
      internalMethodName: "configureMessageSenders"
    - lineNumber: 488
      expression: "!CollectionUtils.isEmpty(this.messageSenders.getMessageSenders())"
      range: "(488,12)-(488,76)"
      evaluatedAs: true
      internalMethodName: "configureMessageSenders"
    - lineNumber: 475
      expression: "!CollectionUtils.isEmpty(customizers)"
      range: "(475,7)-(475,43)"
      evaluatedAs: false
      internalMethodName: "applyCustomizers"
    - lineNumber: 462
      expression: "!CollectionUtils.isEmpty(this.interceptors)"
      range: "(462,7)-(462,49)"
      evaluatedAs: false
  - pathId: "path1"
    testPathName: "configureWhenCustomizersIsNotEmpty"
    constructorSignature: "<init>(org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[])\
      \ : void"
    modelFingerprint: "ED0A696B576E73E2532C30E526403C3B"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "95B34615EB1CC3AF0AF354154F7CA9D2"
      valueUuid: "target"
    - type: "INPUT"
      name: "webServiceTemplate"
      modelFingerprint: "E7C918199CB4053AF789BEB01FEA7E18"
      valueUuid: "webServiceTemplate"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "802E8376E09A06CAB055E45209F7594D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:webServiceTemplate,message:uniqueUuid53):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "1DF96233B12609E4C192C5E32C84A88F"
      valueUuid: "httpWebServiceMessageSenderBuilder"
      methodExercised:
        expression: "build():webServiceMessageSender"
    - type: "LOCAL_VARIABLE"
      name: "webServiceTemplate"
      modelFingerprint: "A70A600DCA0399E93B378D5DDD7EB7EF"
      valueUuid: "webServiceTemplate"
      methodExercised:
        expression: "setMessageSenders(messageSenders:objectArray):void2"
    - type: "STATIC"
      name: "PropertyMapper.class"
      modelFingerprint: "B1B41702847FC8B31AB887927AD81CC1"
      valueUuid: "PropertyMapper.class"
      methodExercised:
        expression: "get():propertyMapper"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "44331629620EEBF77844433E7BB802E9"
      valueUuid: "propertyMapper"
      methodExercised:
        expression: "alwaysApplyingWhenNonNull():propertyMapper2"
    - type: "STATIC"
      name: "CollectionUtils.class"
      modelFingerprint: "26685A33CEE4E5FE886083691758B48D"
      valueUuid: "CollectionUtils.class"
      methodExercised:
        expression: "isEmpty(collection:uniqueUuid54):boolean2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "map"
      modelFingerprint: "6759282935D1B5F7213A88DD8BC2BCE1"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "from(value:uniqueUuid55):propertyMapper.Source"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "7F471C9EE842352039FDFCB21D31C037"
      valueUuid: "propertyMapper.Source"
      methodExercised:
        expression: "to(consumer:uniqueUuid56):void3"
    - type: "LOCAL_VARIABLE"
      name: "map"
      modelFingerprint: "1B63967DE52D0B72303BD3D3AE0979C6"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "from(value:uniqueUuid57):propertyMapper.Source2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "62B0E4A21785C7FA240C20E59D250087"
      valueUuid: "propertyMapper.Source2"
      methodExercised:
        expression: "to(consumer:uniqueUuid59):void4"
    - type: "LOCAL_VARIABLE"
      name: "map"
      modelFingerprint: "269C0179F870F9DB97CC59589E9DE61C"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "from(value:uniqueUuid61):propertyMapper.Source3"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "CE1513582395056BCA05EF75D22D9DD3"
      valueUuid: "propertyMapper.Source3"
      methodExercised:
        expression: "to(consumer:uniqueUuid63):void5"
    - type: "LOCAL_VARIABLE"
      name: "map"
      modelFingerprint: "36C8359F424D469401ADBDF52040214F"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "from(value:uniqueUuid65):propertyMapper.Source4"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "5DAE73D9D05CBB5158035CFABDD33747"
      valueUuid: "propertyMapper.Source4"
      methodExercised:
        expression: "to(consumer:uniqueUuid67):void6"
    - type: "LOCAL_VARIABLE"
      name: "map"
      modelFingerprint: "72C850997C1013400193BB998D044EDF"
      valueUuid: "propertyMapper2"
      methodExercised:
        expression: "from(value:uniqueUuid69):propertyMapper.Source5"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B771D9031DC1CA1C9F7EA1FC4703E9DF"
      valueUuid: "propertyMapper.Source5"
      methodExercised:
        expression: "to(consumer:uniqueUuid71):void7"
    - type: "STATIC"
      name: "CollectionUtils.class.real"
      modelFingerprint: "6893F4574B66A99D9CFCCBC9878C4918"
      valueUuid: "CollectionUtils.class.real"
      methodExercised:
        expression: "isEmpty(collection:uniqueUuid73):boolean3"
        staticAccess: true
    - type: "STATIC"
      name: "CollectionUtils.class"
      modelFingerprint: "A03CA8674634B20748E0CF2A3F16124E"
      valueUuid: "CollectionUtils.class"
      methodExercised:
        expression: "isEmpty(collection:set):boolean4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "customizer"
      modelFingerprint: "93C134EBACD30ACFDD93B83651406330"
      valueUuid: "object"
      methodExercised:
        expression: "customize(webServiceTemplate:webServiceTemplate):void8"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A173825DC37E8474E6BE89E3F5111C86"
      valueUuid: "webServiceTemplate"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "if (this.messageSenders.isOnlyAdditional() && this.detectHttpMessageSender)\
        \ {"
      lineNumber: 483
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: messageSenders - Method: isOnlyAdditional"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
        parameters:
        - name: "customizers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer"
                  uuid: "listItem0"
            valueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer[]"
            uuid: "customizers"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateBuilder"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.ws.client.core.WebServiceTemplate"
        parameters:
        - name: "messageFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.ws.WebServiceMessageFactory"
            uuid: "webServiceTemplate-messageFactory"
        propertiesMap:
          messageSenders:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.ws.transport.WebServiceMessageSender[]"
            uuid: "objectArray"
            collectionUuid: "set4"
      valueType: "org.springframework.ws.client.core.WebServiceTemplate"
      uuid: "webServiceTemplate"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.ws.client.core.WebServiceTemplate"
        parameters:
        - name: "messageFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.ws.WebServiceMessageFactory"
            uuid: "webServiceTemplate-messageFactory"
        propertiesMap:
          messageSenders:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.ws.transport.WebServiceMessageSender[]"
            uuid: "objectArray"
            collectionUuid: "set4"
      valueType: "org.springframework.ws.client.core.WebServiceTemplate"
      uuid: "webServiceTemplate"
    - sapientType: "BASIC"
      content: !<regular>
        value: "WebServiceTemplate must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid53"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.webservices.client.HttpWebServiceMessageSenderBuilder"
        parameters: []
      valueType: "org.springframework.boot.webservices.client.HttpWebServiceMessageSenderBuilder"
      uuid: "httpWebServiceMessageSenderBuilder"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.ws.transport.WebServiceMessageSender"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.webservices.client.HttpWebServiceMessageSenderBuilder"
            parameters: []
          valueType: "org.springframework.boot.webservices.client.HttpWebServiceMessageSenderBuilder"
          uuid: "httpWebServiceMessageSenderBuilder"
          fixed: true
        methodParameters: []
        methodName: "build"
      valueType: "org.springframework.ws.transport.WebServiceMessageSender"
      uuid: "webServiceMessageSender"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.ws.client.core.WebServiceTemplate"
        parameters:
        - name: "messageFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.ws.WebServiceMessageFactory"
            uuid: "webServiceTemplate-messageFactory"
        propertiesMap:
          messageSenders:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.ws.transport.WebServiceMessageSender[]"
            uuid: "objectArray"
            collectionUuid: "set4"
      valueType: "org.springframework.ws.client.core.WebServiceTemplate"
      uuid: "webServiceTemplate"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.ws.transport.WebServiceMessageSender[]"
      uuid: "objectArray"
      collectionUuid: "set4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "PropertyMapper.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.CollectionUtils"
      uuid: "CollectionUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "NULL"
      valueType: "java.util.Set"
      genericValueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer"
      uuid: "uniqueUuid54"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source"
    - sapientType: "NULL"
      valueType: "org.springframework.oxm.Marshaller"
      uuid: "uniqueUuid55"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid56"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "org.springframework.oxm.Unmarshaller"
            uuid: "uniqueUuid60"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source2"
    - sapientType: "NULL"
      valueType: "org.springframework.oxm.Unmarshaller"
      uuid: "uniqueUuid57"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "org.springframework.oxm.Unmarshaller"
            uuid: "uniqueUuid60"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid59"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "org.springframework.ws.client.support.destination.DestinationProvider"
            uuid: "uniqueUuid64"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source3"
    - sapientType: "NULL"
      valueType: "org.springframework.ws.client.support.destination.DestinationProvider"
      uuid: "uniqueUuid61"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "org.springframework.ws.client.support.destination.DestinationProvider"
            uuid: "uniqueUuid64"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid63"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            genericValueType: "? extends javax.xml.transform.TransformerFactory"
            uuid: "uniqueUuid68"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source4"
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      genericValueType: "? extends javax.xml.transform.TransformerFactory"
      uuid: "uniqueUuid65"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "java.lang.Class"
            genericValueType: "? extends javax.xml.transform.TransformerFactory"
            uuid: "uniqueUuid68"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source4"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid67"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.PropertyMapper"
      uuid: "propertyMapper2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "org.springframework.ws.WebServiceMessageFactory"
            uuid: "uniqueUuid72"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source5"
    - sapientType: "NULL"
      valueType: "org.springframework.ws.WebServiceMessageFactory"
      uuid: "uniqueUuid69"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.PropertyMapper$Source"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.PropertyMapper"
          uuid: "propertyMapper2"
        methodParameters:
        - value:
            sapientType: "NULL"
            valueType: "org.springframework.ws.WebServiceMessageFactory"
            uuid: "uniqueUuid72"
        methodName: "from"
      valueType: "org.springframework.boot.context.properties.PropertyMapper$Source"
      uuid: "propertyMapper.Source5"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid71"
    - sapientType: "REAL"
      valueType: "org.springframework.util.CollectionUtils"
      uuid: "CollectionUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "NULL"
      valueType: "java.util.Set"
      genericValueType: "org.springframework.ws.client.support.interceptor.ClientInterceptor"
      uuid: "uniqueUuid73"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.CollectionUtils"
      uuid: "CollectionUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashSet"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer"
          uuid: "listItem0"
      valueType: "java.util.Set"
      genericValueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer"
      uuid: "set"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.webservices.client.WebServiceTemplateCustomizer"
      uuid: "object"
      collectionUuid: "set"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.ws.client.core.WebServiceTemplate"
        parameters:
        - name: "messageFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.ws.WebServiceMessageFactory"
            uuid: "webServiceTemplate-messageFactory"
        propertiesMap:
          messageSenders:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.ws.transport.WebServiceMessageSender[]"
            uuid: "objectArray"
            collectionUuid: "set4"
      valueType: "org.springframework.ws.client.core.WebServiceTemplate"
      uuid: "webServiceTemplate"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.ws.client.core.WebServiceTemplate"
        parameters:
        - name: "messageFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.ws.WebServiceMessageFactory"
            uuid: "webServiceTemplate-messageFactory"
        propertiesMap:
          messageSenders:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.ws.transport.WebServiceMessageSender[]"
            uuid: "objectArray"
            collectionUuid: "set4"
      valueType: "org.springframework.ws.client.core.WebServiceTemplate"
      uuid: "webServiceTemplate"
    branches:
    - lineNumber: 483
      expression: "this.messageSenders.isOnlyAdditional()"
      range: "(483,7)-(483,44)"
      evaluatedAs: true
      internalMethodName: "configureMessageSenders"
    - lineNumber: 483
      expression: "this.detectHttpMessageSender"
      range: "(483,49)-(483,76)"
      evaluatedAs: true
      internalMethodName: "configureMessageSenders"
    - lineNumber: 475
      expression: "!CollectionUtils.isEmpty(customizers)"
      range: "(475,7)-(475,43)"
      evaluatedAs: false
      internalMethodName: "applyCustomizers"
    - lineNumber: 462
      expression: "!CollectionUtils.isEmpty(this.interceptors)"
      range: "(462,7)-(462,49)"
      evaluatedAs: false
    - lineNumber: 476
      expression: "for-each(customizers)"
      range: "(476,51)-(476,61)"
      evaluatedAs: true
      internalMethodName: "applyCustomizers"
