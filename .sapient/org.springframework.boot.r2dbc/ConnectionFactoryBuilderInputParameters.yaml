---
modelFingerprint: "B9599099BEE239030327DD8717F0D415"
targetClass:
  fullClassName: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
methods:
- method:
    name: "withUrl"
    sourceCodeSignature: "ConnectionFactoryBuilder withUrl(String url)"
    returnType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
    parameters:
    - name: "url"
      type: "java.lang.String"
    instructionFingerprint: "EBDA15B79A5E420E57782401C07F95BB"
  paths:
  - pathId: "path1"
    testPathName: "withUrlTest"
    modelFingerprint: "DD4036D2A9747F76AFEB7A901724B3BC"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "url"
      modelFingerprint: "6BDB82BAD35CB3BF9DC73B63B959D944"
      valueUuid: "url"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "BB11ADC72E613AAA9F1095B135D980C9"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "hasText(text:url,messageSupplier:uniqueUuid1):void"
        staticAccess: true
    - type: "STATIC"
      name: "ConnectionFactoryOptions.class"
      modelFingerprint: "0C78B4C8A2FDC4D683C9535DACD346E5"
      valueUuid: "ConnectionFactoryOptions.class"
      methodExercised:
        expression: "parse(url:url):connectionFactoryOptions"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "40EC586F0052709BC5608A08F4533D92"
      valueUuid: "connectionFactoryOptions"
      methodExercised:
        expression: "mutate():connectionFactoryOptions.Builder"
    - type: "STATIC"
      name: "ConnectionFactoryBuilder.class"
      modelFingerprint: "B1FFEEEFF43DADE40684F141D408F79A"
      valueUuid: "ConnectionFactoryBuilder.class"
      methodExercised:
        expression: "withOptions(options:connectionFactoryOptions.Builder):connectionFactoryBuilder"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "45D26C8F07C93FBC303D61E6BB5D49DA"
      valueUuid: "connectionFactoryBuilder"
    disabled: false
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "url1"
      valueType: "java.lang.String"
      uuid: "url"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "url1"
      valueType: "java.lang.String"
      uuid: "url"
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uniqueUuid1"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
      uuid: "ConnectionFactoryOptions.class"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
      uuid: "connectionFactoryOptions"
    - sapientType: "BASIC"
      content: !<regular>
        value: "url1"
      valueType: "java.lang.String"
      uuid: "url"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
      uuid: "connectionFactoryOptions"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions$Builder"
      uuid: "connectionFactoryOptions.Builder"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "ConnectionFactoryBuilder.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "connectionFactoryBuilder"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions$Builder"
      uuid: "connectionFactoryOptions.Builder"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "connectionFactoryBuilder"
- method:
    name: "withOptions"
    sourceCodeSignature: "ConnectionFactoryBuilder withOptions(Builder options)"
    returnType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
    parameters:
    - name: "options"
      type: "io.r2dbc.spi.ConnectionFactoryOptions$Builder"
    instructionFingerprint: "55DEC10278B57631A1466C4B77901A3E"
  paths:
  - pathId: "path1"
    testPathName: "withOptionsTest"
    modelFingerprint: "9613D59B9D717602468F761C32BC5552"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "options"
      modelFingerprint: "23EC8CA35A16F44E9AFE0DBDD364AD73"
      valueUuid: "options"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "BB1520C6EF3B38912F26459B67A4DF7B"
      valueUuid: "connectionFactoryBuilder"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions$Builder"
      uuid: "options"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
        parameters:
        - name: "optionsBuilder"
          value:
            sapientType: "MOCK"
            valueType: "io.r2dbc.spi.ConnectionFactoryOptions$Builder"
            uuid: "options"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "connectionFactoryBuilder"
      fixed: true
- method:
    name: "derivedFrom"
    sourceCodeSignature: "ConnectionFactoryBuilder derivedFrom(ConnectionFactory connectionFactory)"
    returnType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
    parameters:
    - name: "connectionFactory"
      type: "io.r2dbc.spi.ConnectionFactory"
    instructionFingerprint: "FF099B26CAE417DDA07F75C6469F92B5"
  paths:
  - pathId: "path1"
    testPathName: "derivedFromWhenOptionsIsNullThrowsIllegalArgumentException"
    modelFingerprint: "4E1BFCD3905915554824CC3847CF3889"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "connectionFactory"
      modelFingerprint: "4520A34981E34AB1332C38BC1CA90B52"
      valueUuid: "connectionFactory"
    - type: "STATIC"
      name: "OptionsCapableConnectionFactory.class"
      modelFingerprint: "77B9D4D3152F6DBCF819BC5EBA1CC23A"
      valueUuid: "OptionsCapableConnectionFactory.class"
      methodExercised:
        expression: "unwrapFrom(connectionFactory:connectionFactory):optionsCapableConnectionFactory"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "optionsCapable"
      modelFingerprint: "DE521F90F7840F1C30F8ABE227FF1BBD"
      valueUuid: "optionsCapableConnectionFactory"
      methodExercised:
        expression: "getOptions():options"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A3C74C6C19DCDBFA0F6BB4230227E42B"
      valueUuid: "illegalArgumentException"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactory"
      uuid: "connectionFactory"
      nameForMock: "connectionFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.r2dbc.OptionsCapableConnectionFactory"
      uuid: "OptionsCapableConnectionFactory.class"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.r2dbc.OptionsCapableConnectionFactory"
        parameters:
        - name: "options"
          value:
            sapientType: "NULL"
            valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
            uuid: "options"
            fixed: true
        - name: "delegate"
          value:
            sapientType: "MOCK"
            valueType: "io.r2dbc.spi.ConnectionFactory"
            uuid: "optionsCapableConnectionFactory-delegate"
      valueType: "org.springframework.boot.r2dbc.OptionsCapableConnectionFactory"
      uuid: "optionsCapableConnectionFactory"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactory"
      uuid: "connectionFactory"
      nameForMock: "connectionFactory"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.r2dbc.OptionsCapableConnectionFactory"
        parameters:
        - name: "options"
          value:
            sapientType: "NULL"
            valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
            uuid: "options"
            fixed: true
        - name: "delegate"
          value:
            sapientType: "MOCK"
            valueType: "io.r2dbc.spi.ConnectionFactory"
            uuid: "optionsCapableConnectionFactory-delegate"
      valueType: "org.springframework.boot.r2dbc.OptionsCapableConnectionFactory"
      uuid: "optionsCapableConnectionFactory"
    - sapientType: "NULL"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
      uuid: "options"
      fixed: true
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalArgumentException"
        parameters:
        - name: "s"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "ConnectionFactoryOptions could not be extracted from connectionFactory"
            valueType: "java.lang.String"
            uuid: "string"
      valueType: "java.lang.IllegalArgumentException"
      uuid: "illegalArgumentException"
      fixed: true
    branches:
    - lineNumber: 115
      expression: "optionsCapable != null"
      range: "(115,7)-(115,28)"
      evaluatedAs: true
      internalMethodName: "extractOptionsIfPossible"
    - lineNumber: 106
      expression: "options == null"
      range: "(106,7)-(106,21)"
      evaluatedAs: true
    calledSomeStaticInternalMethod: true
  - pathId: "path2"
    testPathName: "derivedFromWhenOptionsIsNotNull"
    modelFingerprint: "EDB6690492E757FADC48AF10CA5E5977"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "connectionFactory"
      modelFingerprint: "4520A34981E34AB1332C38BC1CA90B52"
      valueUuid: "connectionFactory"
    - type: "STATIC"
      name: "OptionsCapableConnectionFactory.class"
      modelFingerprint: "63D466A195149379A9BE3BA1C0A2752C"
      valueUuid: "OptionsCapableConnectionFactory.class"
      methodExercised:
        expression: "unwrapFrom(connectionFactory:connectionFactory):optionsCapableConnectionFactory"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "optionsCapable"
      modelFingerprint: "F8D4261F6D9CAB3EB022AF6B8CBBE9E6"
      valueUuid: "optionsCapableConnectionFactory"
      methodExercised:
        expression: "getOptions():options"
    - type: "LOCAL_VARIABLE"
      name: "options"
      modelFingerprint: "40EC586F0052709BC5608A08F4533D92"
      valueUuid: "options"
      methodExercised:
        expression: "mutate():connectionFactoryOptions.Builder"
    - type: "STATIC"
      name: "ConnectionFactoryBuilder.class"
      modelFingerprint: "B1FFEEEFF43DADE40684F141D408F79A"
      valueUuid: "ConnectionFactoryBuilder.class"
      methodExercised:
        expression: "withOptions(options:connectionFactoryOptions.Builder):connectionFactoryBuilder"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "45D26C8F07C93FBC303D61E6BB5D49DA"
      valueUuid: "connectionFactoryBuilder"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactory"
      uuid: "connectionFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.r2dbc.OptionsCapableConnectionFactory"
      uuid: "OptionsCapableConnectionFactory.class"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.r2dbc.OptionsCapableConnectionFactory"
        parameters:
        - name: "options"
          value:
            sapientType: "MOCK"
            valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
            uuid: "options"
        - name: "delegate"
          value:
            sapientType: "MOCK"
            valueType: "io.r2dbc.spi.ConnectionFactory"
            uuid: "optionsCapableConnectionFactory-delegate"
      valueType: "org.springframework.boot.r2dbc.OptionsCapableConnectionFactory"
      uuid: "optionsCapableConnectionFactory"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactory"
      uuid: "connectionFactory"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.r2dbc.OptionsCapableConnectionFactory"
        parameters:
        - name: "options"
          value:
            sapientType: "MOCK"
            valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
            uuid: "options"
        - name: "delegate"
          value:
            sapientType: "MOCK"
            valueType: "io.r2dbc.spi.ConnectionFactory"
            uuid: "optionsCapableConnectionFactory-delegate"
      valueType: "org.springframework.boot.r2dbc.OptionsCapableConnectionFactory"
      uuid: "optionsCapableConnectionFactory"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
      uuid: "options"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
      uuid: "options"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions$Builder"
      uuid: "connectionFactoryOptions.Builder"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "ConnectionFactoryBuilder.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "connectionFactoryBuilder"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions$Builder"
      uuid: "connectionFactoryOptions.Builder"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "connectionFactoryBuilder"
    branches:
    - lineNumber: 115
      expression: "optionsCapable != null"
      range: "(115,7)-(115,28)"
      evaluatedAs: true
      internalMethodName: "extractOptionsIfPossible"
    - lineNumber: 106
      expression: "options == null"
      range: "(106,7)-(106,21)"
      evaluatedAs: false
    calledSomeStaticInternalMethod: true
  - pathId: "path3"
    testPathName: "derivedFromWhenOptionsCapableIsNullAndOptionsIsNullThrowsIllegalArgumentException"
    modelFingerprint: "2EA026319CF5004FA9915299C08C0D79"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "connectionFactory"
      modelFingerprint: "4520A34981E34AB1332C38BC1CA90B52"
      valueUuid: "connectionFactory"
    - type: "STATIC"
      name: "OptionsCapableConnectionFactory.class"
      modelFingerprint: "A7325588A1828FEF8A455DB411B2C518"
      valueUuid: "OptionsCapableConnectionFactory.class"
      methodExercised:
        expression: "unwrapFrom(connectionFactory:connectionFactory):optionsCapableConnectionFactory"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A3C74C6C19DCDBFA0F6BB4230227E42B"
      valueUuid: "illegalArgumentException"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactory"
      uuid: "connectionFactory"
      nameForMock: "connectionFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.r2dbc.OptionsCapableConnectionFactory"
      uuid: "OptionsCapableConnectionFactory.class"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.r2dbc.OptionsCapableConnectionFactory"
      uuid: "optionsCapableConnectionFactory"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactory"
      uuid: "connectionFactory"
      nameForMock: "connectionFactory"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalArgumentException"
        parameters:
        - name: "s"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "ConnectionFactoryOptions could not be extracted from connectionFactory"
            valueType: "java.lang.String"
            uuid: "string"
      valueType: "java.lang.IllegalArgumentException"
      uuid: "illegalArgumentException"
      fixed: true
    branches:
    - lineNumber: 115
      expression: "optionsCapable != null"
      range: "(115,7)-(115,28)"
      evaluatedAs: false
      internalMethodName: "extractOptionsIfPossible"
    - lineNumber: 106
      expression: "options == null"
      range: "(106,7)-(106,21)"
      evaluatedAs: true
    calledSomeStaticInternalMethod: true
- method:
    name: "configure"
    sourceCodeSignature: "ConnectionFactoryBuilder configure(Consumer<Builder> options)"
    returnType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
    parameters:
    - name: "options"
      type: "java.util.function.Consumer"
    instructionFingerprint: "548B7F7D144786C0B4B6C80E4BA255A6"
  paths:
  - pathId: "path1"
    testPathName: "configureTest"
    constructorSignature: "withUrl(java.lang.String) : org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
    modelFingerprint: "F2C0BD95B6310E4550DC864C96AA4E44"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "4824C0A5660A1082DC9F67D4E80E99BB"
      valueUuid: "target"
    - type: "INPUT"
      name: "options"
      modelFingerprint: "27661BB614D5C62DFDBD1BA7F8DCF67C"
      valueUuid: "options"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "BB11ADC72E613AAA9F1095B135D980C9"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "hasText(text:url,messageSupplier:uniqueUuid2):void"
        staticAccess: true
    - type: "STATIC"
      name: "ConnectionFactoryOptions.class"
      modelFingerprint: "0C78B4C8A2FDC4D683C9535DACD346E5"
      valueUuid: "ConnectionFactoryOptions.class"
      methodExercised:
        expression: "parse(url:url):connectionFactoryOptions"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "40EC586F0052709BC5608A08F4533D92"
      valueUuid: "connectionFactoryOptions"
      methodExercised:
        expression: "mutate():connectionFactoryOptions.Builder"
    - type: "STATIC"
      name: "ConnectionFactoryBuilder.class"
      modelFingerprint: "B1FFEEEFF43DADE40684F141D408F79A"
      valueUuid: "ConnectionFactoryBuilder.class"
      methodExercised:
        expression: "withOptions(options:connectionFactoryOptions.Builder):connectionFactoryBuilder"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "6B5E3D90416C6BB3C97952DDAE3EE6ED"
      valueUuid: "targetClassObject"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.Consumer.accept(io.r2dbc.spi.ConnectionFactoryOptions$Builder)\
        \ : void"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
        method: "withUrl"
        methodParameters:
        - name: "url"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "url1"
            valueType: "java.lang.String"
            uuid: "url"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "options"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "url1"
      valueType: "java.lang.String"
      uuid: "url"
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uniqueUuid2"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
      uuid: "ConnectionFactoryOptions.class"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
      uuid: "connectionFactoryOptions"
    - sapientType: "BASIC"
      content: !<regular>
        value: "url1"
      valueType: "java.lang.String"
      uuid: "url"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
      uuid: "connectionFactoryOptions"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions$Builder"
      uuid: "connectionFactoryOptions.Builder"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "ConnectionFactoryBuilder.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "connectionFactoryBuilder"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions$Builder"
      uuid: "connectionFactoryOptions.Builder"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "targetClassObject"
      fixed: true
- method:
    name: "username"
    sourceCodeSignature: "ConnectionFactoryBuilder username(String username)"
    returnType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
    parameters:
    - name: "username"
      type: "java.lang.String"
    instructionFingerprint: "FEB3AD1DEC3F4FD22A12316925814405"
  paths:
  - pathId: "path1"
    testPathName: "usernameTest"
    constructorSignature: "withUrl(java.lang.String) : org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
    modelFingerprint: "AF9D89B07882002AA510E5E78650892E"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "4824C0A5660A1082DC9F67D4E80E99BB"
      valueUuid: "target"
    - type: "INPUT"
      name: "username"
      modelFingerprint: "D7FF79CC3200ECE8901D684C8FEABFF0"
      valueUuid: "username"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "BB11ADC72E613AAA9F1095B135D980C9"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "hasText(text:url,messageSupplier:uniqueUuid3):void"
        staticAccess: true
    - type: "STATIC"
      name: "ConnectionFactoryOptions.class"
      modelFingerprint: "0C78B4C8A2FDC4D683C9535DACD346E5"
      valueUuid: "ConnectionFactoryOptions.class"
      methodExercised:
        expression: "parse(url:url):connectionFactoryOptions"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "40EC586F0052709BC5608A08F4533D92"
      valueUuid: "connectionFactoryOptions"
      methodExercised:
        expression: "mutate():connectionFactoryOptions.Builder"
    - type: "STATIC"
      name: "ConnectionFactoryBuilder.class"
      modelFingerprint: "B1FFEEEFF43DADE40684F141D408F79A"
      valueUuid: "ConnectionFactoryBuilder.class"
      methodExercised:
        expression: "withOptions(options:connectionFactoryOptions.Builder):connectionFactoryBuilder"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "6B5E3D90416C6BB3C97952DDAE3EE6ED"
      valueUuid: "targetClassObject"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "options.accept(this.optionsBuilder);"
      lineNumber: 127
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: options - Method: accept"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
        method: "withUrl"
        methodParameters:
        - name: "url"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "url1"
            valueType: "java.lang.String"
            uuid: "url"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "username1"
      valueType: "java.lang.String"
      uuid: "username"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "url1"
      valueType: "java.lang.String"
      uuid: "url"
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uniqueUuid3"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
      uuid: "ConnectionFactoryOptions.class"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
      uuid: "connectionFactoryOptions"
    - sapientType: "BASIC"
      content: !<regular>
        value: "url1"
      valueType: "java.lang.String"
      uuid: "url"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
      uuid: "connectionFactoryOptions"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions$Builder"
      uuid: "connectionFactoryOptions.Builder"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "ConnectionFactoryBuilder.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "connectionFactoryBuilder"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions$Builder"
      uuid: "connectionFactoryOptions.Builder"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "targetClassObject"
      fixed: true
- method:
    name: "password"
    sourceCodeSignature: "ConnectionFactoryBuilder password(CharSequence password)"
    returnType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
    parameters:
    - name: "password"
      type: "java.lang.CharSequence"
    instructionFingerprint: "0709D1D57E949F9FC21701885D9D39F5"
  paths:
  - pathId: "path1"
    testPathName: "passwordTest"
    constructorSignature: "withUrl(java.lang.String) : org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
    modelFingerprint: "56F4C7B478D7EF76BA76B1F4C8FF7AC6"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "4824C0A5660A1082DC9F67D4E80E99BB"
      valueUuid: "target"
    - type: "INPUT"
      name: "password"
      modelFingerprint: "44774C32A6511E5FD6885B7F81A1CC55"
      valueUuid: "password"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "BB11ADC72E613AAA9F1095B135D980C9"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "hasText(text:url,messageSupplier:uniqueUuid4):void"
        staticAccess: true
    - type: "STATIC"
      name: "ConnectionFactoryOptions.class"
      modelFingerprint: "0C78B4C8A2FDC4D683C9535DACD346E5"
      valueUuid: "ConnectionFactoryOptions.class"
      methodExercised:
        expression: "parse(url:url):connectionFactoryOptions"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "40EC586F0052709BC5608A08F4533D92"
      valueUuid: "connectionFactoryOptions"
      methodExercised:
        expression: "mutate():connectionFactoryOptions.Builder"
    - type: "STATIC"
      name: "ConnectionFactoryBuilder.class"
      modelFingerprint: "B1FFEEEFF43DADE40684F141D408F79A"
      valueUuid: "ConnectionFactoryBuilder.class"
      methodExercised:
        expression: "withOptions(options:connectionFactoryOptions.Builder):connectionFactoryBuilder"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "6B5E3D90416C6BB3C97952DDAE3EE6ED"
      valueUuid: "targetClassObject"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "options.accept(this.optionsBuilder);"
      lineNumber: 127
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: options - Method: accept"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
        method: "withUrl"
        methodParameters:
        - name: "url"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "url1"
            valueType: "java.lang.String"
            uuid: "url"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "password1"
      valueType: "java.lang.String"
      uuid: "password"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "url1"
      valueType: "java.lang.String"
      uuid: "url"
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uniqueUuid4"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
      uuid: "ConnectionFactoryOptions.class"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
      uuid: "connectionFactoryOptions"
    - sapientType: "BASIC"
      content: !<regular>
        value: "url1"
      valueType: "java.lang.String"
      uuid: "url"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
      uuid: "connectionFactoryOptions"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions$Builder"
      uuid: "connectionFactoryOptions.Builder"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "ConnectionFactoryBuilder.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "connectionFactoryBuilder"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions$Builder"
      uuid: "connectionFactoryOptions.Builder"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "targetClassObject"
      fixed: true
- method:
    name: "hostname"
    sourceCodeSignature: "ConnectionFactoryBuilder hostname(String host)"
    returnType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
    parameters:
    - name: "host"
      type: "java.lang.String"
    instructionFingerprint: "E3EEFCF4B11DF34FCB9BB7854F40D709"
  paths:
  - pathId: "path1"
    testPathName: "hostnameTest"
    constructorSignature: "withUrl(java.lang.String) : org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
    modelFingerprint: "6079100EBB7B89066F2B64366A082789"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "4824C0A5660A1082DC9F67D4E80E99BB"
      valueUuid: "target"
    - type: "INPUT"
      name: "host"
      modelFingerprint: "FB888023FD0B189D56EB37CA58DDFDF3"
      valueUuid: "host"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "BB11ADC72E613AAA9F1095B135D980C9"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "hasText(text:url,messageSupplier:uniqueUuid5):void"
        staticAccess: true
    - type: "STATIC"
      name: "ConnectionFactoryOptions.class"
      modelFingerprint: "0C78B4C8A2FDC4D683C9535DACD346E5"
      valueUuid: "ConnectionFactoryOptions.class"
      methodExercised:
        expression: "parse(url:url):connectionFactoryOptions"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "40EC586F0052709BC5608A08F4533D92"
      valueUuid: "connectionFactoryOptions"
      methodExercised:
        expression: "mutate():connectionFactoryOptions.Builder"
    - type: "STATIC"
      name: "ConnectionFactoryBuilder.class"
      modelFingerprint: "B1FFEEEFF43DADE40684F141D408F79A"
      valueUuid: "ConnectionFactoryBuilder.class"
      methodExercised:
        expression: "withOptions(options:connectionFactoryOptions.Builder):connectionFactoryBuilder"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "6B5E3D90416C6BB3C97952DDAE3EE6ED"
      valueUuid: "targetClassObject"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "options.accept(this.optionsBuilder);"
      lineNumber: 127
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: options - Method: accept"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
        method: "withUrl"
        methodParameters:
        - name: "url"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "url1"
            valueType: "java.lang.String"
            uuid: "url"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "host1"
      valueType: "java.lang.String"
      uuid: "host"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "url1"
      valueType: "java.lang.String"
      uuid: "url"
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uniqueUuid5"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
      uuid: "ConnectionFactoryOptions.class"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
      uuid: "connectionFactoryOptions"
    - sapientType: "BASIC"
      content: !<regular>
        value: "url1"
      valueType: "java.lang.String"
      uuid: "url"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
      uuid: "connectionFactoryOptions"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions$Builder"
      uuid: "connectionFactoryOptions.Builder"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "ConnectionFactoryBuilder.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "connectionFactoryBuilder"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions$Builder"
      uuid: "connectionFactoryOptions.Builder"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "targetClassObject"
      fixed: true
- method:
    name: "port"
    sourceCodeSignature: "ConnectionFactoryBuilder port(int port)"
    returnType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
    parameters:
    - name: "port"
      type: "int"
    instructionFingerprint: "6887229D5E293B859808606F37A8983E"
  paths:
  - pathId: "path1"
    testPathName: "portTest"
    constructorSignature: "withUrl(java.lang.String) : org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
    modelFingerprint: "1FAB7C9AABE50E65297465F41C8C253B"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "4824C0A5660A1082DC9F67D4E80E99BB"
      valueUuid: "target"
    - type: "INPUT"
      name: "port"
      modelFingerprint: "9CD470C15764C246C0D37998D1290354"
      valueUuid: "port"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "BB11ADC72E613AAA9F1095B135D980C9"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "hasText(text:url,messageSupplier:uniqueUuid6):void"
        staticAccess: true
    - type: "STATIC"
      name: "ConnectionFactoryOptions.class"
      modelFingerprint: "0C78B4C8A2FDC4D683C9535DACD346E5"
      valueUuid: "ConnectionFactoryOptions.class"
      methodExercised:
        expression: "parse(url:url):connectionFactoryOptions"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "40EC586F0052709BC5608A08F4533D92"
      valueUuid: "connectionFactoryOptions"
      methodExercised:
        expression: "mutate():connectionFactoryOptions.Builder"
    - type: "STATIC"
      name: "ConnectionFactoryBuilder.class"
      modelFingerprint: "B1FFEEEFF43DADE40684F141D408F79A"
      valueUuid: "ConnectionFactoryBuilder.class"
      methodExercised:
        expression: "withOptions(options:connectionFactoryOptions.Builder):connectionFactoryBuilder"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "E8994700BFB1D3BD79871DF773718F4A"
      methodExercised:
        expression: "configure(options:uniqueUuid7):connectionFactoryBuilder2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "45D26C8F07C93FBC303D61E6BB5D49DA"
      valueUuid: "connectionFactoryBuilder2"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
        method: "withUrl"
        methodParameters:
        - name: "url"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "url1"
            valueType: "java.lang.String"
            uuid: "url"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "port"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "url1"
      valueType: "java.lang.String"
      uuid: "url"
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uniqueUuid6"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
      uuid: "ConnectionFactoryOptions.class"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
      uuid: "connectionFactoryOptions"
    - sapientType: "BASIC"
      content: !<regular>
        value: "url1"
      valueType: "java.lang.String"
      uuid: "url"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
      uuid: "connectionFactoryOptions"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions$Builder"
      uuid: "connectionFactoryOptions.Builder"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "ConnectionFactoryBuilder.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "connectionFactoryBuilder"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions$Builder"
      uuid: "connectionFactoryOptions.Builder"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "connectionFactoryBuilder2"
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "connectionFactoryBuilder2"
- method:
    name: "database"
    sourceCodeSignature: "ConnectionFactoryBuilder database(String database)"
    returnType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
    parameters:
    - name: "database"
      type: "java.lang.String"
    instructionFingerprint: "DF83DD70B43B687A1FA35F07FC0D41AF"
  paths:
  - pathId: "path1"
    testPathName: "databaseTest"
    constructorSignature: "withUrl(java.lang.String) : org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
    modelFingerprint: "DA8B58EEB6E276277D4A6DDE01395CFE"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "4824C0A5660A1082DC9F67D4E80E99BB"
      valueUuid: "target"
    - type: "INPUT"
      name: "database"
      modelFingerprint: "9671EA31F1C76E36367223261D8CFE9B"
      valueUuid: "database"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "BB11ADC72E613AAA9F1095B135D980C9"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "hasText(text:url,messageSupplier:uniqueUuid8):void"
        staticAccess: true
    - type: "STATIC"
      name: "ConnectionFactoryOptions.class"
      modelFingerprint: "0C78B4C8A2FDC4D683C9535DACD346E5"
      valueUuid: "ConnectionFactoryOptions.class"
      methodExercised:
        expression: "parse(url:url):connectionFactoryOptions"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "40EC586F0052709BC5608A08F4533D92"
      valueUuid: "connectionFactoryOptions"
      methodExercised:
        expression: "mutate():connectionFactoryOptions.Builder"
    - type: "STATIC"
      name: "ConnectionFactoryBuilder.class"
      modelFingerprint: "B1FFEEEFF43DADE40684F141D408F79A"
      valueUuid: "ConnectionFactoryBuilder.class"
      methodExercised:
        expression: "withOptions(options:connectionFactoryOptions.Builder):connectionFactoryBuilder"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "E8994700BFB1D3BD79871DF773718F4A"
      methodExercised:
        expression: "configure(options:uniqueUuid9):connectionFactoryBuilder2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "45D26C8F07C93FBC303D61E6BB5D49DA"
      valueUuid: "connectionFactoryBuilder2"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
        method: "withUrl"
        methodParameters:
        - name: "url"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "url1"
            valueType: "java.lang.String"
            uuid: "url"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "database1"
      valueType: "java.lang.String"
      uuid: "database"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "url1"
      valueType: "java.lang.String"
      uuid: "url"
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uniqueUuid8"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
      uuid: "ConnectionFactoryOptions.class"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
      uuid: "connectionFactoryOptions"
    - sapientType: "BASIC"
      content: !<regular>
        value: "url1"
      valueType: "java.lang.String"
      uuid: "url"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
      uuid: "connectionFactoryOptions"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions$Builder"
      uuid: "connectionFactoryOptions.Builder"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "ConnectionFactoryBuilder.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "connectionFactoryBuilder"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions$Builder"
      uuid: "connectionFactoryOptions.Builder"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "connectionFactoryBuilder2"
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid9"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "connectionFactoryBuilder2"
- method:
    name: "decorator"
    sourceCodeSignature: "ConnectionFactoryBuilder decorator(ConnectionFactoryDecorator\
      \ decorator)"
    returnType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
    parameters:
    - name: "decorator"
      type: "org.springframework.boot.r2dbc.ConnectionFactoryDecorator"
    instructionFingerprint: "BF14BAD93855E868C9F9B84755FF7665"
  paths:
  - pathId: "path1"
    testPathName: "decoratorTest"
    constructorSignature: "withUrl(java.lang.String) : org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
    modelFingerprint: "BDBDF2667B13461321DBDC881C2A32C3"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "4824C0A5660A1082DC9F67D4E80E99BB"
      valueUuid: "target"
    - type: "INPUT"
      name: "decorator"
      modelFingerprint: "31C817A3079B76682F0EE9A10E69651E"
      valueUuid: "decorator"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "BB11ADC72E613AAA9F1095B135D980C9"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "hasText(text:url,messageSupplier:uniqueUuid10):void"
        staticAccess: true
    - type: "STATIC"
      name: "ConnectionFactoryOptions.class"
      modelFingerprint: "0C78B4C8A2FDC4D683C9535DACD346E5"
      valueUuid: "ConnectionFactoryOptions.class"
      methodExercised:
        expression: "parse(url:url):connectionFactoryOptions"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "40EC586F0052709BC5608A08F4533D92"
      valueUuid: "connectionFactoryOptions"
      methodExercised:
        expression: "mutate():connectionFactoryOptions.Builder"
    - type: "STATIC"
      name: "ConnectionFactoryBuilder.class"
      modelFingerprint: "B1FFEEEFF43DADE40684F141D408F79A"
      valueUuid: "ConnectionFactoryBuilder.class"
      methodExercised:
        expression: "withOptions(options:connectionFactoryOptions.Builder):connectionFactoryBuilder"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "6B5E3D90416C6BB3C97952DDAE3EE6ED"
      valueUuid: "targetClassObject"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
        method: "withUrl"
        methodParameters:
        - name: "url"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "url1"
            valueType: "java.lang.String"
            uuid: "url"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryDecorator"
      uuid: "decorator"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "url1"
      valueType: "java.lang.String"
      uuid: "url"
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uniqueUuid10"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
      uuid: "ConnectionFactoryOptions.class"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
      uuid: "connectionFactoryOptions"
    - sapientType: "BASIC"
      content: !<regular>
        value: "url1"
      valueType: "java.lang.String"
      uuid: "url"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
      uuid: "connectionFactoryOptions"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions$Builder"
      uuid: "connectionFactoryOptions.Builder"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "ConnectionFactoryBuilder.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "connectionFactoryBuilder"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions$Builder"
      uuid: "connectionFactoryOptions.Builder"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "targetClassObject"
      fixed: true
- method:
    name: "decorators"
    sourceCodeSignature: "ConnectionFactoryBuilder decorators(Iterable<ConnectionFactoryDecorator>\
      \ decorators)"
    returnType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
    parameters:
    - name: "decorators"
      type: "java.lang.Iterable"
    instructionFingerprint: "6EEACDF0390FC7FBAE65111A82CC38BF"
  paths:
  - pathId: "path1"
    testPathName: "decoratorsWhenDecoratorsIsNotEmpty"
    constructorSignature: "withUrl(java.lang.String) : org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
    modelFingerprint: "133605CA4B41ADD3E050B5264C9C5919"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "4824C0A5660A1082DC9F67D4E80E99BB"
      valueUuid: "target"
    - type: "INPUT"
      name: "decorators"
      modelFingerprint: "9FD1A6D22B0FB13D137688856955B41F"
      valueUuid: "decorators"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "BB11ADC72E613AAA9F1095B135D980C9"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "hasText(text:url,messageSupplier:uniqueUuid11):void"
        staticAccess: true
    - type: "STATIC"
      name: "ConnectionFactoryOptions.class"
      modelFingerprint: "0C78B4C8A2FDC4D683C9535DACD346E5"
      valueUuid: "ConnectionFactoryOptions.class"
      methodExercised:
        expression: "parse(url:url):connectionFactoryOptions"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "40EC586F0052709BC5608A08F4533D92"
      valueUuid: "connectionFactoryOptions"
      methodExercised:
        expression: "mutate():connectionFactoryOptions.Builder"
    - type: "STATIC"
      name: "ConnectionFactoryBuilder.class"
      modelFingerprint: "B1FFEEEFF43DADE40684F141D408F79A"
      valueUuid: "ConnectionFactoryBuilder.class"
      methodExercised:
        expression: "withOptions(options:connectionFactoryOptions.Builder):connectionFactoryBuilder"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "6B5E3D90416C6BB3C97952DDAE3EE6ED"
      valueUuid: "targetClassObject"
    disabled: true
    failureReason:
      reason: "ERROR_RECALCULATING_SUGGESTED_VALUES"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
        method: "withUrl"
        methodParameters:
        - name: "url"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "url1"
            valueType: "java.lang.String"
            uuid: "url"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.r2dbc.ConnectionFactoryDecorator"
          uuid: "object"
          collectionUuid: "decorators"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.r2dbc.ConnectionFactoryDecorator"
      uuid: "decorators"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "url1"
      valueType: "java.lang.String"
      uuid: "url"
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uniqueUuid11"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
      uuid: "ConnectionFactoryOptions.class"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
      uuid: "connectionFactoryOptions"
    - sapientType: "BASIC"
      content: !<regular>
        value: "url1"
      valueType: "java.lang.String"
      uuid: "url"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
      uuid: "connectionFactoryOptions"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions$Builder"
      uuid: "connectionFactoryOptions.Builder"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "ConnectionFactoryBuilder.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "connectionFactoryBuilder"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions$Builder"
      uuid: "connectionFactoryOptions.Builder"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "targetClassObject"
      fixed: true
    branches:
    - lineNumber: 194
      expression: "for-each(decorators)"
      range: "(194,47)-(194,56)"
      evaluatedAs: true
- method:
    name: "build"
    sourceCodeSignature: "ConnectionFactory build()"
    returnType: "io.r2dbc.spi.ConnectionFactory"
    instructionFingerprint: "DC8A4646C5827C95ADFCE316BAD91BE7"
  paths:
  - pathId: "path1"
    testPathName: "buildWhenThisDecoratorsIsNotEmpty"
    constructorSignature: "withUrl(java.lang.String) : org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
    modelFingerprint: "FC1BED6B24C203B287EA26A0902EB412"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "4824C0A5660A1082DC9F67D4E80E99BB"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "BB11ADC72E613AAA9F1095B135D980C9"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "hasText(text:url,messageSupplier:uniqueUuid12):void"
        staticAccess: true
    - type: "STATIC"
      name: "ConnectionFactoryOptions.class"
      modelFingerprint: "0C78B4C8A2FDC4D683C9535DACD346E5"
      valueUuid: "ConnectionFactoryOptions.class"
      methodExercised:
        expression: "parse(url:url):connectionFactoryOptions"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "40EC586F0052709BC5608A08F4533D92"
      valueUuid: "connectionFactoryOptions"
      methodExercised:
        expression: "mutate():connectionFactoryOptions.Builder"
    - type: "STATIC"
      name: "ConnectionFactoryBuilder.class"
      modelFingerprint: "B1FFEEEFF43DADE40684F141D408F79A"
      valueUuid: "ConnectionFactoryBuilder.class"
      methodExercised:
        expression: "withOptions(options:connectionFactoryOptions.Builder):connectionFactoryBuilder"
        staticAccess: true
    - type: "FIELD"
      name: "optionsBuilder"
      modelFingerprint: "504EDB2AA6571F495353B5678C412CD0"
      valueUuid: "fieldConnectionFactoryOptions.Builder"
      methodExercised:
        expression: "build():connectionFactoryOptions2"
    - type: "LOCAL_VARIABLE"
      name: "decorator"
      modelFingerprint: "A51F64E2BEA7ABE7ADFF1FB484038BE5"
      valueUuid: "object"
      methodExercised:
        expression: "decorate(delegate:connectionFactory):connectionFactory2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "268162E4B40F3D890D4A6490DBFE7644"
      valueUuid: "connectionFactory2"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "ConnectionFactory connectionFactory = optionsCapableWrapper.buildAndWrap(options);"
      lineNumber: 206
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: optionsCapableWrapper - Method: buildAndWrap"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
        method: "withUrl"
        methodParameters:
        - name: "url"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "url1"
            valueType: "java.lang.String"
            uuid: "url"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "url1"
      valueType: "java.lang.String"
      uuid: "url"
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uniqueUuid12"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
      uuid: "ConnectionFactoryOptions.class"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
      uuid: "connectionFactoryOptions"
    - sapientType: "BASIC"
      content: !<regular>
        value: "url1"
      valueType: "java.lang.String"
      uuid: "url"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
      uuid: "connectionFactoryOptions"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions$Builder"
      uuid: "connectionFactoryOptions.Builder"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "ConnectionFactoryBuilder.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "connectionFactoryBuilder"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions$Builder"
      uuid: "connectionFactoryOptions.Builder"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions$Builder"
      uuid: "fieldConnectionFactoryOptions.Builder"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
      uuid: "connectionFactoryOptions2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryDecorator"
      uuid: "object"
      collectionUuid: "fieldList"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactory"
      uuid: "connectionFactory2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "io.r2dbc.spi.ConnectionFactory"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder$PoolingAwareOptionsCapableWrapper"
            parameters: []
          valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder$PoolingAwareOptionsCapableWrapper"
          uuid: "connectionFactoryBuilder.PoolingAwareOptionsCapableWrapper"
          fixed: true
        methodParameters:
        - name: "options"
          value:
            sapientType: "MOCK"
            valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
            uuid: "connectionFactoryOptions2"
        methodName: "buildAndWrap"
      valueType: "io.r2dbc.spi.ConnectionFactory"
      uuid: "connectionFactory"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactory"
      uuid: "connectionFactory2"
    branches:
    - lineNumber: 207
      expression: "for-each(this.decorators)"
      range: "(207,47)-(207,61)"
      evaluatedAs: true
- method:
    name: "buildOptions"
    sourceCodeSignature: "ConnectionFactoryOptions buildOptions()"
    returnType: "io.r2dbc.spi.ConnectionFactoryOptions"
    instructionFingerprint: "00D89AA0C0E7776C7B4B55EB1B14D322"
  paths:
  - pathId: "path1"
    testPathName: "buildOptionsTest"
    constructorSignature: "withUrl(java.lang.String) : org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
    modelFingerprint: "9381DB8AD02EDC51A98A65AE4118BF3C"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "4824C0A5660A1082DC9F67D4E80E99BB"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "BB11ADC72E613AAA9F1095B135D980C9"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "hasText(text:url,messageSupplier:uniqueUuid13):void"
        staticAccess: true
    - type: "STATIC"
      name: "ConnectionFactoryOptions.class"
      modelFingerprint: "0C78B4C8A2FDC4D683C9535DACD346E5"
      valueUuid: "ConnectionFactoryOptions.class"
      methodExercised:
        expression: "parse(url:url):connectionFactoryOptions"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "40EC586F0052709BC5608A08F4533D92"
      valueUuid: "connectionFactoryOptions"
      methodExercised:
        expression: "mutate():connectionFactoryOptions.Builder"
    - type: "STATIC"
      name: "ConnectionFactoryBuilder.class"
      modelFingerprint: "B1FFEEEFF43DADE40684F141D408F79A"
      valueUuid: "ConnectionFactoryBuilder.class"
      methodExercised:
        expression: "withOptions(options:connectionFactoryOptions.Builder):connectionFactoryBuilder"
        staticAccess: true
    - type: "FIELD"
      name: "optionsBuilder"
      modelFingerprint: "504EDB2AA6571F495353B5678C412CD0"
      valueUuid: "fieldConnectionFactoryOptions.Builder"
      methodExercised:
        expression: "build():connectionFactoryOptions2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5B9C7F02B0C70F33A6B6CEE86F0676BE"
      valueUuid: "connectionFactoryOptions2"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
        method: "withUrl"
        methodParameters:
        - name: "url"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "url1"
            valueType: "java.lang.String"
            uuid: "url"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "url1"
      valueType: "java.lang.String"
      uuid: "url"
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uniqueUuid13"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
      uuid: "ConnectionFactoryOptions.class"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
      uuid: "connectionFactoryOptions"
    - sapientType: "BASIC"
      content: !<regular>
        value: "url1"
      valueType: "java.lang.String"
      uuid: "url"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
      uuid: "connectionFactoryOptions"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions$Builder"
      uuid: "connectionFactoryOptions.Builder"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "ConnectionFactoryBuilder.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.r2dbc.ConnectionFactoryBuilder"
      uuid: "connectionFactoryBuilder"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions$Builder"
      uuid: "connectionFactoryOptions.Builder"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions$Builder"
      uuid: "fieldConnectionFactoryOptions.Builder"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
      uuid: "connectionFactoryOptions2"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactoryOptions"
      uuid: "connectionFactoryOptions2"
