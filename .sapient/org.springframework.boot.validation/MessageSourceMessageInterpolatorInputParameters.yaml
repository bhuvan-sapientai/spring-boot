---
modelFingerprint: "35470FFC3FCB8E94EB9D5624FEC531EA"
targetClass:
  fullClassName: "org.springframework.boot.validation.MessageSourceMessageInterpolator"
methods:
- method:
    name: "interpolate"
    sourceCodeSignature: "String interpolate(String messageTemplate, Context context)"
    returnType: "java.lang.String"
    parameters:
    - name: "messageTemplate"
      type: "java.lang.String"
    - name: "context"
      type: "jakarta.validation.MessageInterpolator$Context"
    instructionFingerprint: "AF342708E76894B389A1AA5D3B832CD0"
  paths:
  - pathId: "path1"
    testPathName: "interpolateTest"
    constructorSignature: "<init>(org.springframework.context.MessageSource,jakarta.validation.MessageInterpolator)\
      \ : void"
    modelFingerprint: "8D0A3AE0B207CE75D3D4D74A503E2601"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "A4DBFD05D120B5128308C821C9C3BD3F"
      valueUuid: "target"
    - type: "INPUT"
      name: "messageTemplate"
      modelFingerprint: "954D754665378F7E03659E7DB0946539"
      valueUuid: "messageTemplate"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "01565A41A11CF2752ACE13EE375455AB"
      valueUuid: "context"
    - type: "STATIC"
      name: "LocaleContextHolder.class.real"
      modelFingerprint: "3E0A5A94697A55BD7DF202AAAE7BC2C0"
      valueUuid: "LocaleContextHolder.class.real"
      methodExercised:
        expression: "getLocale():locale"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "18DD46FF3765F1F1022C37E044708FF5"
      methodExercised:
        expression: "interpolate(messageTemplate:messageTemplate,context:context,locale:locale):string"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D446A609419428DDEAA49A58091F3986"
      valueUuid: "string"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.validation.MessageSourceMessageInterpolator"
        parameters:
        - name: "messageSource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.MessageSource"
            uuid: "messageSource"
        - name: "messageInterpolator"
          value:
            sapientType: "MOCK"
            valueType: "jakarta.validation.MessageInterpolator"
            uuid: "messageInterpolator"
      valueType: "org.springframework.boot.validation.MessageSourceMessageInterpolator"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "messageTemplate1"
      valueType: "java.lang.String"
      uuid: "messageTemplate"
    - sapientType: "MOCK"
      valueType: "jakarta.validation.MessageInterpolator$Context"
      uuid: "context"
    - sapientType: "REAL"
      valueType: "org.springframework.context.i18n.LocaleContextHolder"
      uuid: "LocaleContextHolder.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.context.i18n.LocaleContextHolder"
        method: "getLocale"
        methodParameters: []
      valueType: "java.util.Locale"
      uuid: "locale"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_interpolate1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "messageTemplate1"
      valueType: "java.lang.String"
      uuid: "messageTemplate"
    - sapientType: "MOCK"
      valueType: "jakarta.validation.MessageInterpolator$Context"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.context.i18n.LocaleContextHolder"
        method: "getLocale"
        methodParameters: []
      valueType: "java.util.Locale"
      uuid: "locale"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_interpolate1"
      valueType: "java.lang.String"
      uuid: "string"
- method:
    name: "interpolate"
    sourceCodeSignature: "String interpolate(String messageTemplate, Context context,\
      \ Locale locale)"
    returnType: "java.lang.String"
    parameters:
    - name: "messageTemplate"
      type: "java.lang.String"
    - name: "context"
      type: "jakarta.validation.MessageInterpolator$Context"
    - name: "locale"
      type: "java.util.Locale"
    instructionFingerprint: "3745685DA6588D5FCB43BE49A65C8866"
  paths:
  - pathId: "path2"
    testPathName: "interpolate1WhenParenthesesNotEquals0"
    constructorSignature: "<init>(org.springframework.context.MessageSource,jakarta.validation.MessageInterpolator)\
      \ : void"
    modelFingerprint: "AD67DB26AC6D8909012DD8CC6AA3FF78"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "95B2541FFB743DEC1E544AC70E8DDB67"
      valueUuid: "target"
    - type: "INPUT"
      name: "messageTemplate"
      modelFingerprint: "324EB36F090978DC5E0DCE4CC7B69AD6"
      valueUuid: "messageTemplate"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "01565A41A11CF2752ACE13EE375455AB"
      valueUuid: "context"
    - type: "INPUT"
      name: "locale"
      modelFingerprint: "5A54D85CEB69D87DB67C2DBD628A7B22"
      valueUuid: "locale"
    - type: "FIELD"
      name: "messageInterpolator"
      modelFingerprint: "1BEFA10932566C84B2FE0976708F1447"
      valueUuid: "messageInterpolator"
      methodExercised:
        expression: "interpolate(arg0:string,arg1:context,arg2:locale):string2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D446A609419428DDEAA49A58091F3986"
      valueUuid: "string2"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.StringBuilder.charAt(int) : char"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.validation.MessageSourceMessageInterpolator"
        parameters:
        - name: "messageSource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.MessageSource"
            uuid: "messageSource"
        - name: "messageInterpolator"
          value:
            sapientType: "MOCK"
            valueType: "jakarta.validation.MessageInterpolator"
            uuid: "messageInterpolator"
      valueType: "org.springframework.boot.validation.MessageSourceMessageInterpolator"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "messageTemplate"
    - sapientType: "MOCK"
      valueType: "jakarta.validation.MessageInterpolator$Context"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.util.Locale"
        parameters:
        - name: "language"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "language1"
            valueType: "java.lang.String"
            uuid: "locale-language"
      valueType: "java.util.Locale"
      uuid: "locale"
    - sapientType: "MOCK"
      valueType: "jakarta.validation.MessageInterpolator"
      uuid: "messageInterpolator"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_interpolate1"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "jakarta.validation.MessageInterpolator$Context"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.util.Locale"
        parameters:
        - name: "language"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "language1"
            valueType: "java.lang.String"
            uuid: "locale-language"
      valueType: "java.util.Locale"
      uuid: "locale"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_interpolate1"
      valueType: "java.lang.String"
      uuid: "string2"
    branches:
    - lineNumber: 81
      expression: "i < buf.length()"
      range: "(81,19)-(81,34)"
      evaluatedAs: true
      internalMethodName: "replaceParameters"
    - lineNumber: 82
      expression: "buf.charAt(i) == ESCAPE"
      range: "(82,8)-(82,30)"
      evaluatedAs: false
      internalMethodName: "replaceParameters"
    - lineNumber: 85
      expression: "buf.charAt(i) == PREFIX"
      range: "(85,13)-(85,35)"
      evaluatedAs: true
      internalMethodName: "replaceParameters"
    - lineNumber: 86
      expression: "startIndex == -1"
      range: "(86,9)-(86,24)"
      evaluatedAs: true
      internalMethodName: "replaceParameters"
    - lineNumber: 97
      expression: "parentheses == 0"
      range: "(97,8)-(97,23)"
      evaluatedAs: false
      internalMethodName: "replaceParameters"
  - pathId: "path3"
    testPathName: "interpolate1WhenIsUsingCodeAsDefaultMessageValueParameterAndValueIsNull"
    constructorSignature: "<init>(org.springframework.context.MessageSource,jakarta.validation.MessageInterpolator)\
      \ : void"
    modelFingerprint: "2FB0B37B12237207CAD42D48B7341F32"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "FD70CB402117CFC883EF186292C7A49E"
      valueUuid: "target"
    - type: "INPUT"
      name: "messageTemplate"
      modelFingerprint: "F2077CFBB2FD9D824E33D037E1A9951E"
      valueUuid: "messageTemplate"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "01565A41A11CF2752ACE13EE375455AB"
      valueUuid: "context"
    - type: "INPUT"
      name: "locale"
      modelFingerprint: "5A54D85CEB69D87DB67C2DBD628A7B22"
      valueUuid: "locale"
    - type: "FIELD"
      name: "messageSource"
      modelFingerprint: "9A42F4AF74C7DA79EAD7C938C07CB8F9"
      valueUuid: "messageSource"
      methodExercised:
        expression: "getMessage(code:string2,args:uniqueUuid1,defaultMessage:uniqueUuid2,locale:locale):string3"
    - type: "FIELD"
      name: "messageInterpolator"
      modelFingerprint: "C6745AE536CDDCCD88227716DD0AD85E"
      valueUuid: "messageInterpolator"
      methodExercised:
        expression: "interpolate(arg0:string5,arg1:context,arg2:locale):string6"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D446A609419428DDEAA49A58091F3986"
      valueUuid: "string6"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.StringBuilder.charAt(int) : char"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.validation.MessageSourceMessageInterpolator"
        parameters:
        - name: "messageSource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.MessageSource"
            uuid: "messageSource"
        - name: "messageInterpolator"
          value:
            sapientType: "MOCK"
            valueType: "jakarta.validation.MessageInterpolator"
            uuid: "messageInterpolator"
      valueType: "org.springframework.boot.validation.MessageSourceMessageInterpolator"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "C"
      valueType: "java.lang.String"
      uuid: "messageTemplate"
    - sapientType: "MOCK"
      valueType: "jakarta.validation.MessageInterpolator$Context"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.util.Locale"
        parameters:
        - name: "language"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "language1"
            valueType: "java.lang.String"
            uuid: "locale-language"
      valueType: "java.util.Locale"
      uuid: "locale"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.MessageSource"
      uuid: "messageSource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "D"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "D"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "NULL"
      uuid: "uniqueUuid1"
    - sapientType: "NULL"
      uuid: "uniqueUuid2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.util.Locale"
        parameters:
        - name: "language"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "language1"
            valueType: "java.lang.String"
            uuid: "locale-language"
      valueType: "java.util.Locale"
      uuid: "locale"
    - sapientType: "MOCK"
      valueType: "jakarta.validation.MessageInterpolator"
      uuid: "messageInterpolator"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_interpolate1"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "C"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "MOCK"
      valueType: "jakarta.validation.MessageInterpolator$Context"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.util.Locale"
        parameters:
        - name: "language"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "language1"
            valueType: "java.lang.String"
            uuid: "locale-language"
      valueType: "java.util.Locale"
      uuid: "locale"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_interpolate1"
      valueType: "java.lang.String"
      uuid: "string6"
    branches:
    - lineNumber: 81
      expression: "i < buf.length()"
      range: "(81,19)-(81,34)"
      evaluatedAs: true
      internalMethodName: "replaceParameters"
    - lineNumber: 82
      expression: "buf.charAt(i) == ESCAPE"
      range: "(82,8)-(82,30)"
      evaluatedAs: false
      internalMethodName: "replaceParameters"
    - lineNumber: 85
      expression: "buf.charAt(i) == PREFIX"
      range: "(85,13)-(85,35)"
      evaluatedAs: false
      internalMethodName: "replaceParameters"
    - lineNumber: 91
      expression: "buf.charAt(i) == SUFFIX"
      range: "(91,13)-(91,35)"
      evaluatedAs: true
      internalMethodName: "replaceParameters"
    - lineNumber: 92
      expression: "parentheses > 0"
      range: "(92,9)-(92,23)"
      evaluatedAs: false
      internalMethodName: "replaceParameters"
    - lineNumber: 97
      expression: "parentheses == 0"
      range: "(97,8)-(97,23)"
      evaluatedAs: true
      internalMethodName: "replaceParameters"
    - lineNumber: 97
      expression: "startIndex < endIndex"
      range: "(97,28)-(97,48)"
      evaluatedAs: true
      internalMethodName: "replaceParameters"
    - lineNumber: 99
      expression: "!visitedParameters.add(parameter)"
      range: "(99,9)-(99,41)"
      evaluatedAs: false
      internalMethodName: "replaceParameters"
    - lineNumber: 119
      expression: "value != null"
      range: "(119,11)-(119,23)"
      evaluatedAs: true
      internalMethodName: "replaceParameter"
    - lineNumber: 124
      expression: "value.equals(parameter)"
      range: "(124,10)-(124,32)"
      evaluatedAs: true
      internalMethodName: "isUsingCodeAsDefaultMessage"
    - lineNumber: 119
      expression: "!isUsingCodeAsDefaultMessage(value, parameter)"
      range: "(119,28)-(119,73)"
      evaluatedAs: false
      internalMethodName: "replaceParameter"
    - lineNumber: 104
      expression: "value != null"
      range: "(104,9)-(104,21)"
      evaluatedAs: false
      internalMethodName: "replaceParameters"
  - pathId: "path5"
    testPathName: "interpolate1WhenIsUsingCodeAsDefaultMessageNotValueParameterAndValueIsNull"
    constructorSignature: "<init>(org.springframework.context.MessageSource,jakarta.validation.MessageInterpolator)\
      \ : void"
    modelFingerprint: "AB4033BB0D387DF64996FD14C246FD23"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "FD70CB402117CFC883EF186292C7A49E"
      valueUuid: "target"
    - type: "INPUT"
      name: "messageTemplate"
      modelFingerprint: "1EF7D648C66EBF468223BC725CF06A28"
      valueUuid: "messageTemplate"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "01565A41A11CF2752ACE13EE375455AB"
      valueUuid: "context"
    - type: "INPUT"
      name: "locale"
      modelFingerprint: "5A54D85CEB69D87DB67C2DBD628A7B22"
      valueUuid: "locale"
    - type: "FIELD"
      name: "messageSource"
      modelFingerprint: "4739568CEC96BB5D25C678D20EEC1467"
      valueUuid: "messageSource"
      methodExercised:
        expression: "getMessage(code:string2,args:uniqueUuid3,defaultMessage:uniqueUuid4,locale:locale):string3"
    - type: "FIELD"
      name: "messageInterpolator"
      modelFingerprint: "C4E717E20F6516F16533B7FDBC96B62D"
      valueUuid: "messageInterpolator"
      methodExercised:
        expression: "interpolate(arg0:string5,arg1:context,arg2:locale):string6"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D446A609419428DDEAA49A58091F3986"
      valueUuid: "string6"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.StringBuilder.charAt(int) : char"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.validation.MessageSourceMessageInterpolator"
        parameters:
        - name: "messageSource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.MessageSource"
            uuid: "messageSource"
        - name: "messageInterpolator"
          value:
            sapientType: "MOCK"
            valueType: "jakarta.validation.MessageInterpolator"
            uuid: "messageInterpolator"
      valueType: "org.springframework.boot.validation.MessageSourceMessageInterpolator"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "CDEFGHIJKL"
      valueType: "java.lang.String"
      uuid: "messageTemplate"
    - sapientType: "MOCK"
      valueType: "jakarta.validation.MessageInterpolator$Context"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.util.Locale"
        parameters:
        - name: "language"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "language1"
            valueType: "java.lang.String"
            uuid: "locale-language"
      valueType: "java.util.Locale"
      uuid: "locale"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.MessageSource"
      uuid: "messageSource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "M"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "N"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "NULL"
      uuid: "uniqueUuid3"
    - sapientType: "NULL"
      uuid: "uniqueUuid4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.util.Locale"
        parameters:
        - name: "language"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "language1"
            valueType: "java.lang.String"
            uuid: "locale-language"
      valueType: "java.util.Locale"
      uuid: "locale"
    - sapientType: "MOCK"
      valueType: "jakarta.validation.MessageInterpolator"
      uuid: "messageInterpolator"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_interpolate1"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "CDEFGHIJKL"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "MOCK"
      valueType: "jakarta.validation.MessageInterpolator$Context"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.util.Locale"
        parameters:
        - name: "language"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "language1"
            valueType: "java.lang.String"
            uuid: "locale-language"
      valueType: "java.util.Locale"
      uuid: "locale"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_interpolate1"
      valueType: "java.lang.String"
      uuid: "string6"
    branches:
    - lineNumber: 81
      expression: "i < buf.length()"
      range: "(81,19)-(81,34)"
      evaluatedAs: true
      internalMethodName: "replaceParameters"
    - lineNumber: 82
      expression: "buf.charAt(i) == ESCAPE"
      range: "(82,8)-(82,30)"
      evaluatedAs: false
      internalMethodName: "replaceParameters"
    - lineNumber: 85
      expression: "buf.charAt(i) == PREFIX"
      range: "(85,13)-(85,35)"
      evaluatedAs: false
      internalMethodName: "replaceParameters"
    - lineNumber: 91
      expression: "buf.charAt(i) == SUFFIX"
      range: "(91,13)-(91,35)"
      evaluatedAs: true
      internalMethodName: "replaceParameters"
    - lineNumber: 92
      expression: "parentheses > 0"
      range: "(92,9)-(92,23)"
      evaluatedAs: false
      internalMethodName: "replaceParameters"
    - lineNumber: 97
      expression: "parentheses == 0"
      range: "(97,8)-(97,23)"
      evaluatedAs: true
      internalMethodName: "replaceParameters"
    - lineNumber: 97
      expression: "startIndex < endIndex"
      range: "(97,28)-(97,48)"
      evaluatedAs: true
      internalMethodName: "replaceParameters"
    - lineNumber: 99
      expression: "!visitedParameters.add(parameter)"
      range: "(99,9)-(99,41)"
      evaluatedAs: false
      internalMethodName: "replaceParameters"
    - lineNumber: 119
      expression: "value != null"
      range: "(119,11)-(119,23)"
      evaluatedAs: true
      internalMethodName: "replaceParameter"
    - lineNumber: 124
      expression: "value.equals(parameter)"
      range: "(124,10)-(124,32)"
      evaluatedAs: false
      internalMethodName: "isUsingCodeAsDefaultMessage"
    - lineNumber: 119
      expression: "!isUsingCodeAsDefaultMessage(value, parameter)"
      range: "(119,28)-(119,73)"
      evaluatedAs: true
      internalMethodName: "replaceParameter"
    - lineNumber: 104
      expression: "value != null"
      range: "(104,9)-(104,21)"
      evaluatedAs: false
      internalMethodName: "replaceParameters"
