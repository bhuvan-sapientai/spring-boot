---
modelFingerprint: "CB15846EEFC8A64800A379932C983915"
targetClass:
  fullClassName: "org.springframework.boot.validation.MessageInterpolatorFactory"
methods:
- method:
    name: "getObject"
    sourceCodeSignature: "MessageInterpolator getObject()"
    returnType: "jakarta.validation.MessageInterpolator"
    throwsExceptions:
    - "org.springframework.beans.BeansException"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "jakarta.validation.ValidationException"
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "E4F090B7D21FE82EE0E10CF386EDB920"
  paths:
  - pathId: "path1"
    testPathName: "getObjectWhenThisMessageSourceIsNotNull"
    constructorSignature: "<init>(org.springframework.context.MessageSource) : void"
    modelFingerprint: "0CF90F5FD3BBD94229C2D18F9C0B63CC"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "630D4122771A66A9C2D880F7D7CEDFF2"
      valueUuid: "target"
    - type: "STATIC"
      name: "Validation.class"
      modelFingerprint: "0B486C0CF5980B5EA8696C9749B7B036"
      valueUuid: "Validation.class"
      methodExercised:
        expression: "byDefaultProvider():genericBootstrap"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "C60A02623D933C4B5780326B2F408A53"
      valueUuid: "genericBootstrap"
      methodExercised:
        expression: "configure():configuration"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBB2AE7050F29D9E7D4284F6D63DD4A1"
      valueUuid: "configuration"
      methodExercised:
        expression: "getDefaultMessageInterpolator():messageInterpolator"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "FEFB20469CB6D5677C5BDCE4310EFC39"
      valueUuid: "messageSourceMessageInterpolator"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.validation.MessageInterpolatorFactory"
        parameters:
        - name: "messageSource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.MessageSource"
            uuid: "messageSource"
      valueType: "org.springframework.boot.validation.MessageInterpolatorFactory"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "jakarta.validation.Validation"
      uuid: "Validation.class"
    - sapientType: "MOCK"
      valueType: "jakarta.validation.bootstrap.GenericBootstrap"
      uuid: "genericBootstrap"
    - sapientType: "MOCK"
      valueType: "jakarta.validation.bootstrap.GenericBootstrap"
      uuid: "genericBootstrap"
    - sapientType: "MOCK"
      valueType: "jakarta.validation.Configuration"
      genericValueType: "?"
      uuid: "configuration"
    - sapientType: "MOCK"
      valueType: "jakarta.validation.Configuration"
      genericValueType: "?"
      uuid: "configuration"
    - sapientType: "MOCK"
      valueType: "jakarta.validation.MessageInterpolator"
      uuid: "messageInterpolator"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.validation.MessageSourceMessageInterpolator"
        parameters:
        - name: "messageSource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.MessageSource"
            uuid: "messageSource"
        - name: "messageInterpolator"
          value:
            sapientType: "MOCK"
            valueType: "jakarta.validation.MessageInterpolator"
            uuid: "messageInterpolator"
      valueType: "org.springframework.boot.validation.MessageSourceMessageInterpolator"
      uuid: "messageSourceMessageInterpolator"
      fixed: true
    branches:
    - lineNumber: 71
      expression: "this.messageSource != null"
      range: "(71,7)-(71,32)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "getObjectWhenThisMessageSourceIsNull"
    constructorSignature: "<init>(org.springframework.context.MessageSource) : void"
    modelFingerprint: "58C71CEE3B9B2DBF41BA8299A580E371"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "A06E66A29E3FBE9A40FCCA57245B9FB8"
      valueUuid: "target"
    - type: "STATIC"
      name: "Validation.class"
      modelFingerprint: "0B486C0CF5980B5EA8696C9749B7B036"
      valueUuid: "Validation.class"
      methodExercised:
        expression: "byDefaultProvider():genericBootstrap"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "C60A02623D933C4B5780326B2F408A53"
      valueUuid: "genericBootstrap"
      methodExercised:
        expression: "configure():configuration"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EBB2AE7050F29D9E7D4284F6D63DD4A1"
      valueUuid: "configuration"
      methodExercised:
        expression: "getDefaultMessageInterpolator():messageInterpolator"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7709D3E58C98273A4C728A57261C9C91"
      valueUuid: "messageInterpolator"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.validation.MessageInterpolatorFactory"
        parameters:
        - name: "messageSource"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.context.MessageSource"
            uuid: "messageSource"
            fixed: true
      valueType: "org.springframework.boot.validation.MessageInterpolatorFactory"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "jakarta.validation.Validation"
      uuid: "Validation.class"
    - sapientType: "MOCK"
      valueType: "jakarta.validation.bootstrap.GenericBootstrap"
      uuid: "genericBootstrap"
    - sapientType: "MOCK"
      valueType: "jakarta.validation.bootstrap.GenericBootstrap"
      uuid: "genericBootstrap"
    - sapientType: "MOCK"
      valueType: "jakarta.validation.Configuration"
      genericValueType: "?"
      uuid: "configuration"
    - sapientType: "MOCK"
      valueType: "jakarta.validation.Configuration"
      genericValueType: "?"
      uuid: "configuration"
    - sapientType: "MOCK"
      valueType: "jakarta.validation.MessageInterpolator"
      uuid: "messageInterpolator"
    - sapientType: "MOCK"
      valueType: "jakarta.validation.MessageInterpolator"
      uuid: "messageInterpolator"
    branches:
    - lineNumber: 71
      expression: "this.messageSource != null"
      range: "(71,7)-(71,32)"
      evaluatedAs: false
  - pathId: "path5"
    testPathName: "getObjectWhenFallbackIsNullThrowsValidationException"
    constructorSignature: "<init>(org.springframework.context.MessageSource) : void"
    modelFingerprint: "480760E81E33FD65709C84494C80AC53"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "630D4122771A66A9C2D880F7D7CEDFF2"
      valueUuid: "target"
    - type: "STATIC"
      name: "Validation.class.real"
      modelFingerprint: "08EB566EA9FE01A71AE0AC10B7B12709"
      valueUuid: "Validation.class.real"
      methodExercised:
        expression: "byDefaultProvider():genericBootstrap"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "13CE43754A5C47CD6BF890EAB56E75C4"
      valueUuid: "genericBootstrap"
      methodExercised:
        expression: "configure():configuration"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "98060C03D6D5BCA145E0789CD9242BEA"
      valueUuid: "configuration"
      methodExercised:
        expression: "getDefaultMessageInterpolator():messageInterpolator"
    - type: "STATIC"
      name: "ClassUtils.class"
      modelFingerprint: "6E2E7690B4686A3091C0191E55263E61"
      valueUuid: "ClassUtils.class"
      methodExercised:
        expression: "resolveClassName(className:object,classLoader:uniqueUuid1):class"
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
        staticAccess: true
    - type: "STATIC"
      name: "BeanUtils.class"
      modelFingerprint: "F14330019953E851E4411F0FB42D4012"
      valueUuid: "BeanUtils.class"
      methodExercised:
        expression: "instantiateClass(clazz:class):object2"
        throwsExceptions:
        - "org.springframework.beans.BeanInstantiationException"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "034250BAE708FA760AABACB4CB9BA832"
      valueUuid: "messageInterpolator"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.validation.MessageInterpolatorFactory"
        parameters:
        - name: "messageSource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.MessageSource"
            uuid: "messageSource"
      valueType: "org.springframework.boot.validation.MessageInterpolatorFactory"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "jakarta.validation.Validation"
      uuid: "Validation.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "jakarta.validation.Validation"
        method: "byDefaultProvider"
        methodParameters: []
      valueType: "jakarta.validation.bootstrap.GenericBootstrap"
      uuid: "genericBootstrap"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "jakarta.validation.Validation"
        method: "byDefaultProvider"
        methodParameters: []
      valueType: "jakarta.validation.bootstrap.GenericBootstrap"
      uuid: "genericBootstrap"
    - sapientType: "MOCK"
      valueType: "jakarta.validation.Configuration"
      genericValueType: "?"
      uuid: "configuration"
    - sapientType: "MOCK"
      valueType: "jakarta.validation.Configuration"
      genericValueType: "?"
      uuid: "configuration"
    - sapientType: "EXCEPTION"
      valueType: "jakarta.validation.ValidationException"
      uuid: "messageInterpolator"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.hibernate.validator.messageinterpolation.ParameterMessageInterpolator"
      valueType: "java.lang.String"
      uuid: "object"
      collectionUuid: "set"
    - sapientType: "NULL"
      uuid: "uniqueUuid1"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.BeanUtils"
      uuid: "BeanUtils.class"
    - sapientType: "NULL"
      valueType: "jakarta.validation.MessageInterpolator"
      uuid: "object2"
      fixed: true
      explicitCastNeeded: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "EXCEPTION"
      valueType: "jakarta.validation.ValidationException"
      uuid: "messageInterpolator"
    branches:
    - lineNumber: 81
      expression: "catch-exception (ValidationException)"
      range: "(81,3)-(81,31)"
      evaluatedAs: true
      internalMethodName: "getMessageInterpolator"
    - lineNumber: 91
      expression: "for-each(FALLBACKS)"
      range: "(91,26)-(91,34)"
      evaluatedAs: true
      internalMethodName: "getFallback"
    - lineNumber: 83
      expression: "fallback != null"
      range: "(83,8)-(83,23)"
      evaluatedAs: false
      internalMethodName: "getMessageInterpolator"
    catchBlockExercised:
      idExternalInstruction: 3
      id: 1
      catchExceptions:
      - "jakarta.validation.ValidationException"
  - pathId: "path3"
    testPathName: "getObjectWhenFallbackIsNotNullAndThisMessageSourceIsNotNull"
    constructorSignature: "<init>(org.springframework.context.MessageSource) : void"
    modelFingerprint: "5332F768291F8699C3AF4B9D8B6D376E"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "630D4122771A66A9C2D880F7D7CEDFF2"
      valueUuid: "target"
    - type: "STATIC"
      name: "Validation.class.real"
      modelFingerprint: "08EB566EA9FE01A71AE0AC10B7B12709"
      valueUuid: "Validation.class.real"
      methodExercised:
        expression: "byDefaultProvider():genericBootstrap"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "13CE43754A5C47CD6BF890EAB56E75C4"
      valueUuid: "genericBootstrap"
      methodExercised:
        expression: "configure():configuration"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "98060C03D6D5BCA145E0789CD9242BEA"
      valueUuid: "configuration"
      methodExercised:
        expression: "getDefaultMessageInterpolator():messageInterpolator"
    - type: "STATIC"
      name: "ClassUtils.class"
      modelFingerprint: "6E2E7690B4686A3091C0191E55263E61"
      valueUuid: "ClassUtils.class"
      methodExercised:
        expression: "resolveClassName(className:object,classLoader:uniqueUuid1):class"
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
        staticAccess: true
    - type: "STATIC"
      name: "BeanUtils.class"
      modelFingerprint: "67FD4E57A02B74EE3B711A67FC7F12DC"
      valueUuid: "BeanUtils.class"
      methodExercised:
        expression: "instantiateClass(clazz:class):object2"
        throwsExceptions:
        - "org.springframework.beans.BeanInstantiationException"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "FEFB20469CB6D5677C5BDCE4310EFC39"
      valueUuid: "messageSourceMessageInterpolator"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.validation.MessageInterpolatorFactory"
        parameters:
        - name: "messageSource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.MessageSource"
            uuid: "messageSource"
      valueType: "org.springframework.boot.validation.MessageInterpolatorFactory"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "jakarta.validation.Validation"
      uuid: "Validation.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "jakarta.validation.Validation"
        method: "byDefaultProvider"
        methodParameters: []
      valueType: "jakarta.validation.bootstrap.GenericBootstrap"
      uuid: "genericBootstrap"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "jakarta.validation.Validation"
        method: "byDefaultProvider"
        methodParameters: []
      valueType: "jakarta.validation.bootstrap.GenericBootstrap"
      uuid: "genericBootstrap"
    - sapientType: "MOCK"
      valueType: "jakarta.validation.Configuration"
      genericValueType: "?"
      uuid: "configuration"
    - sapientType: "MOCK"
      valueType: "jakarta.validation.Configuration"
      genericValueType: "?"
      uuid: "configuration"
    - sapientType: "EXCEPTION"
      valueType: "jakarta.validation.ValidationException"
      uuid: "messageInterpolator"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.hibernate.validator.messageinterpolation.ParameterMessageInterpolator"
      valueType: "java.lang.String"
      uuid: "object"
      collectionUuid: "set"
    - sapientType: "NULL"
      uuid: "uniqueUuid1"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.BeanUtils"
      uuid: "BeanUtils.class"
    - sapientType: "MOCK"
      valueType: "jakarta.validation.MessageInterpolator"
      uuid: "object2"
      explicitCastNeeded: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.validation.MessageSourceMessageInterpolator"
        parameters:
        - name: "messageSource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.MessageSource"
            uuid: "messageSource"
        - name: "messageInterpolator"
          value:
            sapientType: "MOCK"
            valueType: "jakarta.validation.MessageInterpolator"
            uuid: "object2"
            explicitCastNeeded: true
      valueType: "org.springframework.boot.validation.MessageSourceMessageInterpolator"
      uuid: "messageSourceMessageInterpolator"
      fixed: true
    branches:
    - lineNumber: 81
      expression: "catch-exception (ValidationException)"
      range: "(81,3)-(81,31)"
      evaluatedAs: true
      internalMethodName: "getMessageInterpolator"
    - lineNumber: 91
      expression: "for-each(FALLBACKS)"
      range: "(91,26)-(91,34)"
      evaluatedAs: true
      internalMethodName: "getFallback"
    - lineNumber: 83
      expression: "fallback != null"
      range: "(83,8)-(83,23)"
      evaluatedAs: true
      internalMethodName: "getMessageInterpolator"
    - lineNumber: 71
      expression: "this.messageSource != null"
      range: "(71,7)-(71,32)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 3
      id: 1
      catchExceptions:
      - "jakarta.validation.ValidationException"
  - pathId: "path4"
    testPathName: "getObjectWhenFallbackIsNotNullAndThisMessageSourceIsNull"
    constructorSignature: "<init>(org.springframework.context.MessageSource) : void"
    modelFingerprint: "025FAF719DD68BF8DF219065ABFAC187"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "A06E66A29E3FBE9A40FCCA57245B9FB8"
      valueUuid: "target"
    - type: "STATIC"
      name: "Validation.class.real"
      modelFingerprint: "08EB566EA9FE01A71AE0AC10B7B12709"
      valueUuid: "Validation.class.real"
      methodExercised:
        expression: "byDefaultProvider():genericBootstrap"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "13CE43754A5C47CD6BF890EAB56E75C4"
      valueUuid: "genericBootstrap"
      methodExercised:
        expression: "configure():configuration"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "98060C03D6D5BCA145E0789CD9242BEA"
      valueUuid: "configuration"
      methodExercised:
        expression: "getDefaultMessageInterpolator():messageInterpolator"
    - type: "STATIC"
      name: "ClassUtils.class"
      modelFingerprint: "6E2E7690B4686A3091C0191E55263E61"
      valueUuid: "ClassUtils.class"
      methodExercised:
        expression: "resolveClassName(className:object,classLoader:uniqueUuid1):class"
        throwsExceptions:
        - "java.lang.IllegalArgumentException"
        staticAccess: true
    - type: "STATIC"
      name: "BeanUtils.class"
      modelFingerprint: "67FD4E57A02B74EE3B711A67FC7F12DC"
      valueUuid: "BeanUtils.class"
      methodExercised:
        expression: "instantiateClass(clazz:class):object2"
        throwsExceptions:
        - "org.springframework.beans.BeanInstantiationException"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7709D3E58C98273A4C728A57261C9C91"
      valueUuid: "object2"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.validation.MessageInterpolatorFactory"
        parameters:
        - name: "messageSource"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.context.MessageSource"
            uuid: "messageSource"
            fixed: true
      valueType: "org.springframework.boot.validation.MessageInterpolatorFactory"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "jakarta.validation.Validation"
      uuid: "Validation.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "jakarta.validation.Validation"
        method: "byDefaultProvider"
        methodParameters: []
      valueType: "jakarta.validation.bootstrap.GenericBootstrap"
      uuid: "genericBootstrap"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "jakarta.validation.Validation"
        method: "byDefaultProvider"
        methodParameters: []
      valueType: "jakarta.validation.bootstrap.GenericBootstrap"
      uuid: "genericBootstrap"
    - sapientType: "MOCK"
      valueType: "jakarta.validation.Configuration"
      genericValueType: "?"
      uuid: "configuration"
    - sapientType: "MOCK"
      valueType: "jakarta.validation.Configuration"
      genericValueType: "?"
      uuid: "configuration"
    - sapientType: "EXCEPTION"
      valueType: "jakarta.validation.ValidationException"
      uuid: "messageInterpolator"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.hibernate.validator.messageinterpolation.ParameterMessageInterpolator"
      valueType: "java.lang.String"
      uuid: "object"
      collectionUuid: "set"
    - sapientType: "NULL"
      uuid: "uniqueUuid1"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.BeanUtils"
      uuid: "BeanUtils.class"
    - sapientType: "MOCK"
      valueType: "jakarta.validation.MessageInterpolator"
      uuid: "object2"
      explicitCastNeeded: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "jakarta.validation.MessageInterpolator"
      uuid: "object2"
      explicitCastNeeded: true
    branches:
    - lineNumber: 81
      expression: "catch-exception (ValidationException)"
      range: "(81,3)-(81,31)"
      evaluatedAs: true
      internalMethodName: "getMessageInterpolator"
    - lineNumber: 91
      expression: "for-each(FALLBACKS)"
      range: "(91,26)-(91,34)"
      evaluatedAs: true
      internalMethodName: "getFallback"
    - lineNumber: 83
      expression: "fallback != null"
      range: "(83,8)-(83,23)"
      evaluatedAs: true
      internalMethodName: "getMessageInterpolator"
    - lineNumber: 71
      expression: "this.messageSource != null"
      range: "(71,7)-(71,32)"
      evaluatedAs: false
    catchBlockExercised:
      idExternalInstruction: 3
      id: 1
      catchExceptions:
      - "jakarta.validation.ValidationException"
