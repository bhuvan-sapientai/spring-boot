---
modelFingerprint: "4A9E2D38A5EC1F80F8498DED48C0BC61"
targetClass:
  fullClassName: "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor"
methods:
- method:
    name: "setOrder"
    sourceCodeSignature: "void setOrder(int order)"
    returnType: "void"
    parameters:
    - name: "order"
      type: "int"
    instructionFingerprint: "F88C98C2D7593841680C2CA0FECB4028"
  paths:
  - pathId: "path1"
    testPathName: "setOrderTest"
    constructorSignature: "<init>(org.springframework.boot.logging.DeferredLogFactory)\
      \ : void"
    modelFingerprint: "17D30DEC69EB9E4D4975EE5A21829517"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "getOrder"
    sourceCodeSignature: "int getOrder()"
    returnType: "int"
    instructionFingerprint: "342D4E4F854A43E567A525BCBCDEA20C"
  paths:
  - pathId: "path1"
    testPathName: "getOrderTest"
    constructorSignature: "<init>(org.springframework.boot.logging.DeferredLogFactory)\
      \ : void"
    modelFingerprint: "D2DC77271F6D9EC243BBF7B835FB207D"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "postProcessEnvironment"
    sourceCodeSignature: "void postProcessEnvironment(ConfigurableEnvironment environment,\
      \ SpringApplication application)"
    returnType: "void"
    parameters:
    - name: "environment"
      type: "org.springframework.core.env.ConfigurableEnvironment"
    - name: "application"
      type: "org.springframework.boot.SpringApplication"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "449365EA3F803662C7C2B4047A688257"
  paths:
  - pathId: "path7"
    testPathName: "postProcessEnvironmentWhenMapIsNullAndPropertySourcesNotContainsCommandLinePropertySourceCOMMAND_LINE_PROPERTY_SOURCE_N2"
    constructorSignature: "<init>(org.springframework.boot.logging.DeferredLogFactory)\
      \ : void"
    modelFingerprint: "B0BF789A321C0DF798F2F00AC90BAF59"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "978995471A63D9FC87674EB6D3908572"
      valueUuid: "target"
    - type: "INPUT"
      name: "environment"
      modelFingerprint: "2AB40C7309B23844284816875A86BEFD"
      valueUuid: "environment"
    - type: "INPUT"
      name: "application"
      modelFingerprint: "86BFF8B99831ED759F640847C7C0F409"
      valueUuid: "application"
    - type: "LOCAL_VARIABLE"
      name: "logFactory"
      modelFingerprint: "CEA0E8FB88363399F3AF3D52993CAD68"
      valueUuid: "logFactory"
      methodExercised:
        expression: "getLog(destination:uniqueUuid3):log"
    - type: "STATIC"
      name: "JsonParserFactory.class"
      modelFingerprint: "2C1DB273C76C8BA271FA09F17251331F"
      valueUuid: "JsonParserFactory.class"
      methodExercised:
        expression: "getJsonParser():jsonParser"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "62435E42E542E2011059B8DA9FA14CFF"
      valueUuid: "environment"
      methodExercised:
        expression: "getProperty(key:uniqueUuid4,defaultValue:uniqueUuid5):string"
    - type: "LOCAL_VARIABLE"
      name: "parser"
      modelFingerprint: "B8C31B9AAA10FB7A8876090CDD5DEF14"
      valueUuid: "jsonParser"
      methodExercised:
        expression: "parseMap(json:string):map"
        throwsExceptions:
        - "org.springframework.boot.json.JsonParseException"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "82EA235039F6FEF096EB3277C053BA8C"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:uniqueUuid7):boolean2"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "8E762F0DA06B0C1207D4BF1FDF0FB152"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "collectionToCommaDelimitedString(coll:object):string3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "3646AE2E72C8E04288B13CB482464D54"
      valueUuid: "environment"
      methodExercised:
        expression: "getProperty(key:uniqueUuid8,defaultValue:uniqueUuid9):string8"
    - type: "LOCAL_VARIABLE"
      name: "parser"
      modelFingerprint: "1688729B4DD4C057AF667E85C3787297"
      valueUuid: "jsonParser"
      methodExercised:
        expression: "parseMap(json:string8):map3"
        throwsExceptions:
        - "org.springframework.boot.json.JsonParseException"
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "E97B1B215647A456976BAD20E92F84F8"
      valueUuid: "environment"
      methodExercised:
        expression: "getPropertySources():mutablePropertySources"
    - type: "LOCAL_VARIABLE"
      name: "propertySources"
      modelFingerprint: "F7EE789795E935910A9C3E780C0FA7DF"
      valueUuid: "mutablePropertySources"
      methodExercised:
        expression: "contains(name:uniqueUuid10):boolean10"
    - type: "LOCAL_VARIABLE"
      name: "propertySources"
      modelFingerprint: "CD526B56605FD445C7E5DE41A2E05C12"
      valueUuid: "mutablePropertySources"
      methodExercised:
        expression: "addFirst(propertySource:propertiesPropertySource):void2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.cloud.CloudPlatform.isActive(org.springframework.core.env.ConfigurableEnvironment)\
        \ : boolean"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor"
        parameters:
        - name: "logFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.DeferredLogFactory"
            uuid: "logFactory"
      valueType: "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "application"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.DeferredLogFactory"
      uuid: "logFactory"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "log"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParserFactory"
      uuid: "JsonParserFactory.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParser"
      uuid: "jsonParser"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "VCAP_APPLICATION"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "{}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParser"
      uuid: "jsonParser"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "A"
              valueType: "java.lang.String"
              uuid: "string2"
              collectionUuid: "map"
            value:
              sapientType: "COLLECTION"
              content: !<collection>
                collectionClass: "java.util.ArrayList"
                parameters: []
                values:
                - sapientType: "OBJECT"
                  content: !<new>
                    target: "java.lang.Object"
                    parameters: []
                  valueType: "java.lang.Object"
                  uuid: "object3"
                  collectionUuid: "object"
              valueType: "java.util.Collection"
              genericValueType: "java.lang.Object"
              uuid: "object"
              collectionUuid: "map"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid6"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "uniqueUuid7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
          valueType: "java.lang.Object"
          uuid: "object3"
          collectionUuid: "object"
      valueType: "java.util.Collection"
      genericValueType: "java.lang.Object"
      uuid: "object"
      collectionUuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string8"
    - sapientType: "BASIC"
      content: !<regular>
        value: "VCAP_SERVICES"
      valueType: "java.lang.String"
      uuid: "uniqueUuid8"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "{}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid9"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParser"
      uuid: "jsonParser"
    - sapientType: "NULL"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string8"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean10"
    - sapientType: "BASIC"
      content: !<regular>
        value: "commandLineArgs"
      valueType: "java.lang.String"
      uuid: "uniqueUuid10"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.core.env.PropertiesPropertySource"
      uuid: "propertiesPropertySource"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 123
      expression: "CloudPlatform.CLOUD_FOUNDRY.isActive(environment)"
      range: "(123,7)-(123,55)"
      evaluatedAs: true
    - lineNumber: 173
      expression: "map != null"
      range: "(173,7)-(173,17)"
      evaluatedAs: true
      internalMethodName: "extractPropertiesFromApplication"
    - lineNumber: 230
      expression: "!StringUtils.hasText(path)"
      range: "(230,7)-(230,32)"
      evaluatedAs: true
      internalMethodName: "getPropertyName"
    - lineNumber: 200
      expression: "value instanceof Map"
      range: "(200,8)-(200,27)"
      evaluatedAs: false
      internalMethodName: "lambda$flatten$0"
    - lineNumber: 204
      expression: "value instanceof Collection"
      range: "(204,13)-(204,39)"
      evaluatedAs: true
      internalMethodName: "lambda$flatten$0"
    - lineNumber: 209
      expression: "for-each(collection)"
      range: "(209,24)-(209,33)"
      evaluatedAs: true
      internalMethodName: "lambda$flatten$0"
    - lineNumber: 140
      expression: "for-each(other.stringPropertyNames())"
      range: "(140,21)-(140,47)"
      evaluatedAs: true
      internalMethodName: "addWithPrefix"
    - lineNumber: 179
      expression: "map != null"
      range: "(179,7)-(179,17)"
      evaluatedAs: false
      internalMethodName: "extractPropertiesFromServices"
    - lineNumber: 129
      expression: "propertySources.contains(CommandLinePropertySource.COMMAND_LINE_PROPERTY_SOURCE_NAME)"
      range: "(129,8)-(129,92)"
      evaluatedAs: false
  - pathId: "path10"
    testPathName: "postProcessEnvironmentWhenMapIsNullAndPropertySourcesNotContainsCommandLinePropertySourceCOMMAND_LINE_PROPERTY_SOURCE_N5"
    constructorSignature: "<init>(org.springframework.boot.logging.DeferredLogFactory)\
      \ : void"
    modelFingerprint: "202BE53430186757B0FB02CD31605D12"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "978995471A63D9FC87674EB6D3908572"
      valueUuid: "target"
    - type: "INPUT"
      name: "environment"
      modelFingerprint: "2AB40C7309B23844284816875A86BEFD"
      valueUuid: "environment"
    - type: "INPUT"
      name: "application"
      modelFingerprint: "86BFF8B99831ED759F640847C7C0F409"
      valueUuid: "application"
    - type: "LOCAL_VARIABLE"
      name: "logFactory"
      modelFingerprint: "CEA0E8FB88363399F3AF3D52993CAD68"
      valueUuid: "logFactory"
      methodExercised:
        expression: "getLog(destination:uniqueUuid12):log"
    - type: "STATIC"
      name: "JsonParserFactory.class"
      modelFingerprint: "2C1DB273C76C8BA271FA09F17251331F"
      valueUuid: "JsonParserFactory.class"
      methodExercised:
        expression: "getJsonParser():jsonParser"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "62435E42E542E2011059B8DA9FA14CFF"
      valueUuid: "environment"
      methodExercised:
        expression: "getProperty(key:uniqueUuid13,defaultValue:uniqueUuid14):string"
    - type: "LOCAL_VARIABLE"
      name: "parser"
      modelFingerprint: "BF228858FC6A62BDCD6879D25C20595A"
      valueUuid: "jsonParser"
      methodExercised:
        expression: "parseMap(json:string):map"
        throwsExceptions:
        - "org.springframework.boot.json.JsonParseException"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "82EA235039F6FEF096EB3277C053BA8C"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:uniqueUuid16):boolean2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "3646AE2E72C8E04288B13CB482464D54"
      valueUuid: "environment"
      methodExercised:
        expression: "getProperty(key:uniqueUuid17,defaultValue:uniqueUuid18):string3"
    - type: "LOCAL_VARIABLE"
      name: "parser"
      modelFingerprint: "1688729B4DD4C057AF667E85C3787297"
      valueUuid: "jsonParser"
      methodExercised:
        expression: "parseMap(json:string3):map2"
        throwsExceptions:
        - "org.springframework.boot.json.JsonParseException"
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "E97B1B215647A456976BAD20E92F84F8"
      valueUuid: "environment"
      methodExercised:
        expression: "getPropertySources():mutablePropertySources"
    - type: "LOCAL_VARIABLE"
      name: "propertySources"
      modelFingerprint: "F7EE789795E935910A9C3E780C0FA7DF"
      valueUuid: "mutablePropertySources"
      methodExercised:
        expression: "contains(name:uniqueUuid19):boolean8"
    - type: "LOCAL_VARIABLE"
      name: "propertySources"
      modelFingerprint: "68BB46E7D07E342FFD0C13468727B4AB"
      valueUuid: "mutablePropertySources"
      methodExercised:
        expression: "addFirst(propertySource:propertiesPropertySource):void2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.cloud.CloudPlatform.isActive(org.springframework.core.env.ConfigurableEnvironment)\
        \ : boolean"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor"
        parameters:
        - name: "logFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.DeferredLogFactory"
            uuid: "logFactory"
      valueType: "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "application"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.DeferredLogFactory"
      uuid: "logFactory"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "log"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor"
      uuid: "uniqueUuid12"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParserFactory"
      uuid: "JsonParserFactory.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParser"
      uuid: "jsonParser"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "VCAP_APPLICATION"
      valueType: "java.lang.String"
      uuid: "uniqueUuid13"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "{}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid14"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParser"
      uuid: "jsonParser"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "return_of_parseMapItem1Key1"
              valueType: "java.lang.String"
              uuid: "string2"
              collectionUuid: "map"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "return_of_parseMapItem1Value1"
              valueType: "java.lang.String"
              uuid: "object"
              collectionUuid: "map"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid15"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "uniqueUuid16"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "VCAP_SERVICES"
      valueType: "java.lang.String"
      uuid: "uniqueUuid17"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "{}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid18"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParser"
      uuid: "jsonParser"
    - sapientType: "NULL"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean8"
    - sapientType: "BASIC"
      content: !<regular>
        value: "commandLineArgs"
      valueType: "java.lang.String"
      uuid: "uniqueUuid19"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.core.env.PropertiesPropertySource"
      uuid: "propertiesPropertySource"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 123
      expression: "CloudPlatform.CLOUD_FOUNDRY.isActive(environment)"
      range: "(123,7)-(123,55)"
      evaluatedAs: true
    - lineNumber: 173
      expression: "map != null"
      range: "(173,7)-(173,17)"
      evaluatedAs: true
      internalMethodName: "extractPropertiesFromApplication"
    - lineNumber: 230
      expression: "!StringUtils.hasText(path)"
      range: "(230,7)-(230,32)"
      evaluatedAs: true
      internalMethodName: "getPropertyName"
    - lineNumber: 200
      expression: "value instanceof Map"
      range: "(200,8)-(200,27)"
      evaluatedAs: false
      internalMethodName: "lambda$flatten$0"
    - lineNumber: 204
      expression: "value instanceof Collection"
      range: "(204,13)-(204,39)"
      evaluatedAs: false
      internalMethodName: "lambda$flatten$0"
    - lineNumber: 214
      expression: "value instanceof String"
      range: "(214,13)-(214,35)"
      evaluatedAs: true
      internalMethodName: "lambda$flatten$0"
    - lineNumber: 140
      expression: "for-each(other.stringPropertyNames())"
      range: "(140,21)-(140,47)"
      evaluatedAs: false
      internalMethodName: "addWithPrefix"
    - lineNumber: 179
      expression: "map != null"
      range: "(179,7)-(179,17)"
      evaluatedAs: false
      internalMethodName: "extractPropertiesFromServices"
    - lineNumber: 129
      expression: "propertySources.contains(CommandLinePropertySource.COMMAND_LINE_PROPERTY_SOURCE_NAME)"
      range: "(129,8)-(129,92)"
      evaluatedAs: false
  - pathId: "path1"
    testPathName: "postProcessEnvironmentWhenPropertySourcesContainsCommandLinePropertySourceCOMMAND_LINE_PROPERTY_SOURCE_NAME"
    constructorSignature: "<init>(org.springframework.boot.logging.DeferredLogFactory)\
      \ : void"
    modelFingerprint: "985BC7C5A0C76FC3DEE7AD253A28AFD7"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "978995471A63D9FC87674EB6D3908572"
      valueUuid: "target"
    - type: "INPUT"
      name: "environment"
      modelFingerprint: "2AB40C7309B23844284816875A86BEFD"
      valueUuid: "environment"
    - type: "INPUT"
      name: "application"
      modelFingerprint: "86BFF8B99831ED759F640847C7C0F409"
      valueUuid: "application"
    - type: "LOCAL_VARIABLE"
      name: "logFactory"
      modelFingerprint: "CEA0E8FB88363399F3AF3D52993CAD68"
      valueUuid: "logFactory"
      methodExercised:
        expression: "getLog(destination:uniqueUuid21):log"
    - type: "STATIC"
      name: "JsonParserFactory.class"
      modelFingerprint: "2C1DB273C76C8BA271FA09F17251331F"
      valueUuid: "JsonParserFactory.class"
      methodExercised:
        expression: "getJsonParser():jsonParser"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "62435E42E542E2011059B8DA9FA14CFF"
      valueUuid: "environment"
      methodExercised:
        expression: "getProperty(key:uniqueUuid22,defaultValue:uniqueUuid23):string"
    - type: "LOCAL_VARIABLE"
      name: "parser"
      modelFingerprint: "551DF6D14228D0DDED0E86DA70CD211B"
      valueUuid: "jsonParser"
      methodExercised:
        expression: "parseMap(json:string):map"
        throwsExceptions:
        - "org.springframework.boot.json.JsonParseException"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "82EA235039F6FEF096EB3277C053BA8C"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:uniqueUuid25):boolean2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "3646AE2E72C8E04288B13CB482464D54"
      valueUuid: "environment"
      methodExercised:
        expression: "getProperty(key:uniqueUuid26,defaultValue:uniqueUuid27):string3"
    - type: "LOCAL_VARIABLE"
      name: "parser"
      modelFingerprint: "EEE539B30F40882C6BEB831144DA0CC2"
      valueUuid: "jsonParser"
      methodExercised:
        expression: "parseMap(json:string3):map2"
        throwsExceptions:
        - "org.springframework.boot.json.JsonParseException"
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "E97B1B215647A456976BAD20E92F84F8"
      valueUuid: "environment"
      methodExercised:
        expression: "getPropertySources():mutablePropertySources"
    - type: "LOCAL_VARIABLE"
      name: "propertySources"
      modelFingerprint: "FA162C7618E490ACCDE05C8F6B10ABAA"
      valueUuid: "mutablePropertySources"
      methodExercised:
        expression: "contains(name:uniqueUuid28):boolean10"
    - type: "LOCAL_VARIABLE"
      name: "propertySources"
      modelFingerprint: "AF0E3C61596E2795C28320F1783DBAF4"
      valueUuid: "mutablePropertySources"
      methodExercised:
        expression: "addAfter(relativePropertySourceName:uniqueUuid29,propertySource:propertiesPropertySource):void3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.cloud.CloudPlatform.isActive(org.springframework.core.env.ConfigurableEnvironment)\
        \ : boolean"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor"
        parameters:
        - name: "logFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.DeferredLogFactory"
            uuid: "logFactory"
      valueType: "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "application"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.DeferredLogFactory"
      uuid: "logFactory"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "log"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor"
      uuid: "uniqueUuid21"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParserFactory"
      uuid: "JsonParserFactory.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParser"
      uuid: "jsonParser"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "VCAP_APPLICATION"
      valueType: "java.lang.String"
      uuid: "uniqueUuid22"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "{}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid23"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParser"
      uuid: "jsonParser"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "return_of_parseMapItem1Key1"
              valueType: "java.lang.String"
              uuid: "string2"
              collectionUuid: "map"
            value:
              sapientType: "COLLECTION"
              content: !<collection>
                parameters: []
                values: []
              valueType: "java.util.Map"
              uuid: "object"
              collectionUuid: "map"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid24"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "uniqueUuid25"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "VCAP_SERVICES"
      valueType: "java.lang.String"
      uuid: "uniqueUuid26"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "{}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid27"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParser"
      uuid: "jsonParser"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: 0
              valueType: "java.lang.String"
              uuid: "object2Key"
            value:
              sapientType: "COLLECTION"
              content: !<collection>
                collectionClass: "java.util.ArrayList"
                parameters: []
                values:
                - sapientType: "COLLECTION"
                  content: !<collection>
                    collectionClass: "java.util.HashMap"
                    parameters: []
                    values:
                    - sapientType: "PAIR"
                      content: !<pair>
                        key:
                          sapientType: "BASIC"
                          content: !<regular>
                            value: "label"
                          valueType: "java.lang.String"
                          fixed: true
                        value:
                          sapientType: "BASIC"
                          content: !<regular>
                            value: "return_of_parseMapItem1ValueItem1Item1Value1"
                          valueType: "java.lang.String"
                          uuid: "object5"
                          collectionUuid: "object3"
                          explicitCastNeeded: true
                      valueType: "java.util.Map$Entry"
                    - sapientType: "PAIR"
                      content: !<pair>
                        key:
                          sapientType: "BASIC"
                          content: !<regular>
                            value: "name"
                          valueType: "java.lang.String"
                          fixed: true
                        value:
                          sapientType: "NULL"
                          valueType: "java.lang.String"
                          uuid: "object4"
                          fixed: true
                          collectionUuid: "object3"
                          explicitCastNeeded: true
                      valueType: "java.util.Map$Entry"
                  valueType: "java.util.Map"
                  uuid: "object3"
                  collectionUuid: "object2"
                  explicitCastNeeded: true
              valueType: "java.util.List"
              uuid: "object2"
              collectionUuid: "collection"
              explicitCastNeeded: true
          uuid: "map2-item0"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean10"
    - sapientType: "BASIC"
      content: !<regular>
        value: "commandLineArgs"
      valueType: "java.lang.String"
      uuid: "uniqueUuid28"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "commandLineArgs"
      valueType: "java.lang.String"
      uuid: "uniqueUuid29"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.core.env.PropertiesPropertySource"
      uuid: "propertiesPropertySource"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 123
      expression: "CloudPlatform.CLOUD_FOUNDRY.isActive(environment)"
      range: "(123,7)-(123,55)"
      evaluatedAs: true
    - lineNumber: 173
      expression: "map != null"
      range: "(173,7)-(173,17)"
      evaluatedAs: true
      internalMethodName: "extractPropertiesFromApplication"
    - lineNumber: 230
      expression: "!StringUtils.hasText(path)"
      range: "(230,7)-(230,32)"
      evaluatedAs: true
      internalMethodName: "getPropertyName"
    - lineNumber: 200
      expression: "value instanceof Map"
      range: "(200,8)-(200,27)"
      evaluatedAs: true
      internalMethodName: "lambda$flatten$0"
    - lineNumber: 140
      expression: "for-each(other.stringPropertyNames())"
      range: "(140,21)-(140,47)"
      evaluatedAs: false
      internalMethodName: "addWithPrefix"
    - lineNumber: 179
      expression: "map != null"
      range: "(179,7)-(179,17)"
      evaluatedAs: true
      internalMethodName: "extractPropertiesFromServices"
    - lineNumber: 180
      expression: "for-each(map.values())"
      range: "(180,27)-(180,38)"
      evaluatedAs: true
      internalMethodName: "extractPropertiesFromServices"
    - lineNumber: 183
      expression: "for-each(list)"
      range: "(183,26)-(183,29)"
      evaluatedAs: true
      internalMethodName: "extractPropertiesFromServices"
    - lineNumber: 187
      expression: "key == null"
      range: "(187,10)-(187,20)"
      evaluatedAs: true
      internalMethodName: "extractPropertiesFromServices"
    - lineNumber: 129
      expression: "propertySources.contains(CommandLinePropertySource.COMMAND_LINE_PROPERTY_SOURCE_NAME)"
      range: "(129,8)-(129,92)"
      evaluatedAs: true
  - pathId: "path11"
    testPathName: "postProcessEnvironmentWhenMapIsNullAndPropertySourcesNotContainsCommandLinePropertySourceCOMMAND_LINE_PROPERTY_SOURCE_N6"
    constructorSignature: "<init>(org.springframework.boot.logging.DeferredLogFactory)\
      \ : void"
    modelFingerprint: "D851D14A417035F0339434AFE517C11C"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "978995471A63D9FC87674EB6D3908572"
      valueUuid: "target"
    - type: "INPUT"
      name: "environment"
      modelFingerprint: "2AB40C7309B23844284816875A86BEFD"
      valueUuid: "environment"
    - type: "INPUT"
      name: "application"
      modelFingerprint: "86BFF8B99831ED759F640847C7C0F409"
      valueUuid: "application"
    - type: "LOCAL_VARIABLE"
      name: "logFactory"
      modelFingerprint: "CEA0E8FB88363399F3AF3D52993CAD68"
      valueUuid: "logFactory"
      methodExercised:
        expression: "getLog(destination:uniqueUuid31):log"
    - type: "STATIC"
      name: "JsonParserFactory.class"
      modelFingerprint: "2C1DB273C76C8BA271FA09F17251331F"
      valueUuid: "JsonParserFactory.class"
      methodExercised:
        expression: "getJsonParser():jsonParser"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "62435E42E542E2011059B8DA9FA14CFF"
      valueUuid: "environment"
      methodExercised:
        expression: "getProperty(key:uniqueUuid32,defaultValue:uniqueUuid33):string"
    - type: "LOCAL_VARIABLE"
      name: "parser"
      modelFingerprint: "E23269B29C59AFB35B501AF0E17AC45B"
      valueUuid: "jsonParser"
      methodExercised:
        expression: "parseMap(json:string):map"
        throwsExceptions:
        - "org.springframework.boot.json.JsonParseException"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "82EA235039F6FEF096EB3277C053BA8C"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:uniqueUuid35):boolean2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "3646AE2E72C8E04288B13CB482464D54"
      valueUuid: "environment"
      methodExercised:
        expression: "getProperty(key:uniqueUuid36,defaultValue:uniqueUuid37):string4"
    - type: "LOCAL_VARIABLE"
      name: "parser"
      modelFingerprint: "1688729B4DD4C057AF667E85C3787297"
      valueUuid: "jsonParser"
      methodExercised:
        expression: "parseMap(json:string4):map2"
        throwsExceptions:
        - "org.springframework.boot.json.JsonParseException"
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "E97B1B215647A456976BAD20E92F84F8"
      valueUuid: "environment"
      methodExercised:
        expression: "getPropertySources():mutablePropertySources"
    - type: "LOCAL_VARIABLE"
      name: "propertySources"
      modelFingerprint: "F7EE789795E935910A9C3E780C0FA7DF"
      valueUuid: "mutablePropertySources"
      methodExercised:
        expression: "contains(name:uniqueUuid38):boolean9"
    - type: "LOCAL_VARIABLE"
      name: "propertySources"
      modelFingerprint: "68BB46E7D07E342FFD0C13468727B4AB"
      valueUuid: "mutablePropertySources"
      methodExercised:
        expression: "addFirst(propertySource:propertiesPropertySource):void2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.cloud.CloudPlatform.isActive(org.springframework.core.env.ConfigurableEnvironment)\
        \ : boolean"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor"
        parameters:
        - name: "logFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.DeferredLogFactory"
            uuid: "logFactory"
      valueType: "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "application"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.DeferredLogFactory"
      uuid: "logFactory"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "log"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor"
      uuid: "uniqueUuid31"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParserFactory"
      uuid: "JsonParserFactory.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParser"
      uuid: "jsonParser"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "VCAP_APPLICATION"
      valueType: "java.lang.String"
      uuid: "uniqueUuid32"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "{}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid33"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParser"
      uuid: "jsonParser"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "return_of_parseMapItem1Key1"
              valueType: "java.lang.String"
              uuid: "string2"
              collectionUuid: "map"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: 2
              valueType: "java.lang.Number"
              uuid: "object"
              collectionUuid: "map"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid34"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "uniqueUuid35"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "VCAP_SERVICES"
      valueType: "java.lang.String"
      uuid: "uniqueUuid36"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "{}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid37"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParser"
      uuid: "jsonParser"
    - sapientType: "NULL"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean9"
    - sapientType: "BASIC"
      content: !<regular>
        value: "commandLineArgs"
      valueType: "java.lang.String"
      uuid: "uniqueUuid38"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.core.env.PropertiesPropertySource"
      uuid: "propertiesPropertySource"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 123
      expression: "CloudPlatform.CLOUD_FOUNDRY.isActive(environment)"
      range: "(123,7)-(123,55)"
      evaluatedAs: true
    - lineNumber: 173
      expression: "map != null"
      range: "(173,7)-(173,17)"
      evaluatedAs: true
      internalMethodName: "extractPropertiesFromApplication"
    - lineNumber: 230
      expression: "!StringUtils.hasText(path)"
      range: "(230,7)-(230,32)"
      evaluatedAs: true
      internalMethodName: "getPropertyName"
    - lineNumber: 200
      expression: "value instanceof Map"
      range: "(200,8)-(200,27)"
      evaluatedAs: false
      internalMethodName: "lambda$flatten$0"
    - lineNumber: 204
      expression: "value instanceof Collection"
      range: "(204,13)-(204,39)"
      evaluatedAs: false
      internalMethodName: "lambda$flatten$0"
    - lineNumber: 214
      expression: "value instanceof String"
      range: "(214,13)-(214,35)"
      evaluatedAs: false
      internalMethodName: "lambda$flatten$0"
    - lineNumber: 217
      expression: "value instanceof Number"
      range: "(217,13)-(217,35)"
      evaluatedAs: true
      internalMethodName: "lambda$flatten$0"
    - lineNumber: 140
      expression: "for-each(other.stringPropertyNames())"
      range: "(140,21)-(140,47)"
      evaluatedAs: false
      internalMethodName: "addWithPrefix"
    - lineNumber: 179
      expression: "map != null"
      range: "(179,7)-(179,17)"
      evaluatedAs: false
      internalMethodName: "extractPropertiesFromServices"
    - lineNumber: 129
      expression: "propertySources.contains(CommandLinePropertySource.COMMAND_LINE_PROPERTY_SOURCE_NAME)"
      range: "(129,8)-(129,92)"
      evaluatedAs: false
  - pathId: "path12"
    testPathName: "postProcessEnvironmentWhenMapIsNullAndPropertySourcesNotContainsCommandLinePropertySourceCOMMAND_LINE_PROPERTY_SOURCE_N7"
    constructorSignature: "<init>(org.springframework.boot.logging.DeferredLogFactory)\
      \ : void"
    modelFingerprint: "E9AE896D30F480324F973A778825FAA3"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "978995471A63D9FC87674EB6D3908572"
      valueUuid: "target"
    - type: "INPUT"
      name: "environment"
      modelFingerprint: "2AB40C7309B23844284816875A86BEFD"
      valueUuid: "environment"
    - type: "INPUT"
      name: "application"
      modelFingerprint: "86BFF8B99831ED759F640847C7C0F409"
      valueUuid: "application"
    - type: "LOCAL_VARIABLE"
      name: "logFactory"
      modelFingerprint: "CEA0E8FB88363399F3AF3D52993CAD68"
      valueUuid: "logFactory"
      methodExercised:
        expression: "getLog(destination:uniqueUuid40):log"
    - type: "STATIC"
      name: "JsonParserFactory.class"
      modelFingerprint: "2C1DB273C76C8BA271FA09F17251331F"
      valueUuid: "JsonParserFactory.class"
      methodExercised:
        expression: "getJsonParser():jsonParser"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "62435E42E542E2011059B8DA9FA14CFF"
      valueUuid: "environment"
      methodExercised:
        expression: "getProperty(key:uniqueUuid41,defaultValue:uniqueUuid42):string"
    - type: "LOCAL_VARIABLE"
      name: "parser"
      modelFingerprint: "8A349B5207725C1FE7EFB61F6A1F6282"
      valueUuid: "jsonParser"
      methodExercised:
        expression: "parseMap(json:string):map"
        throwsExceptions:
        - "org.springframework.boot.json.JsonParseException"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "82EA235039F6FEF096EB3277C053BA8C"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:uniqueUuid44):boolean2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "3646AE2E72C8E04288B13CB482464D54"
      valueUuid: "environment"
      methodExercised:
        expression: "getProperty(key:uniqueUuid45,defaultValue:uniqueUuid46):string4"
    - type: "LOCAL_VARIABLE"
      name: "parser"
      modelFingerprint: "1688729B4DD4C057AF667E85C3787297"
      valueUuid: "jsonParser"
      methodExercised:
        expression: "parseMap(json:string4):map2"
        throwsExceptions:
        - "org.springframework.boot.json.JsonParseException"
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "E97B1B215647A456976BAD20E92F84F8"
      valueUuid: "environment"
      methodExercised:
        expression: "getPropertySources():mutablePropertySources"
    - type: "LOCAL_VARIABLE"
      name: "propertySources"
      modelFingerprint: "F7EE789795E935910A9C3E780C0FA7DF"
      valueUuid: "mutablePropertySources"
      methodExercised:
        expression: "contains(name:uniqueUuid47):boolean10"
    - type: "LOCAL_VARIABLE"
      name: "propertySources"
      modelFingerprint: "68BB46E7D07E342FFD0C13468727B4AB"
      valueUuid: "mutablePropertySources"
      methodExercised:
        expression: "addFirst(propertySource:propertiesPropertySource):void2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.cloud.CloudPlatform.isActive(org.springframework.core.env.ConfigurableEnvironment)\
        \ : boolean"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor"
        parameters:
        - name: "logFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.DeferredLogFactory"
            uuid: "logFactory"
      valueType: "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "application"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.DeferredLogFactory"
      uuid: "logFactory"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "log"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor"
      uuid: "uniqueUuid40"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParserFactory"
      uuid: "JsonParserFactory.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParser"
      uuid: "jsonParser"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "VCAP_APPLICATION"
      valueType: "java.lang.String"
      uuid: "uniqueUuid41"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "{}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid42"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParser"
      uuid: "jsonParser"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "return_of_parseMapItem1Key1"
              valueType: "java.lang.String"
              uuid: "string2"
              collectionUuid: "map"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: false
              valueType: "java.lang.Boolean"
              uuid: "object"
              collectionUuid: "map"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid43"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "uniqueUuid44"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "VCAP_SERVICES"
      valueType: "java.lang.String"
      uuid: "uniqueUuid45"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "{}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid46"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParser"
      uuid: "jsonParser"
    - sapientType: "NULL"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean10"
    - sapientType: "BASIC"
      content: !<regular>
        value: "commandLineArgs"
      valueType: "java.lang.String"
      uuid: "uniqueUuid47"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.core.env.PropertiesPropertySource"
      uuid: "propertiesPropertySource"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 123
      expression: "CloudPlatform.CLOUD_FOUNDRY.isActive(environment)"
      range: "(123,7)-(123,55)"
      evaluatedAs: true
    - lineNumber: 173
      expression: "map != null"
      range: "(173,7)-(173,17)"
      evaluatedAs: true
      internalMethodName: "extractPropertiesFromApplication"
    - lineNumber: 230
      expression: "!StringUtils.hasText(path)"
      range: "(230,7)-(230,32)"
      evaluatedAs: true
      internalMethodName: "getPropertyName"
    - lineNumber: 200
      expression: "value instanceof Map"
      range: "(200,8)-(200,27)"
      evaluatedAs: false
      internalMethodName: "lambda$flatten$0"
    - lineNumber: 204
      expression: "value instanceof Collection"
      range: "(204,13)-(204,39)"
      evaluatedAs: false
      internalMethodName: "lambda$flatten$0"
    - lineNumber: 214
      expression: "value instanceof String"
      range: "(214,13)-(214,35)"
      evaluatedAs: false
      internalMethodName: "lambda$flatten$0"
    - lineNumber: 217
      expression: "value instanceof Number"
      range: "(217,13)-(217,35)"
      evaluatedAs: false
      internalMethodName: "lambda$flatten$0"
    - lineNumber: 220
      expression: "value instanceof Boolean"
      range: "(220,13)-(220,36)"
      evaluatedAs: true
      internalMethodName: "lambda$flatten$0"
    - lineNumber: 140
      expression: "for-each(other.stringPropertyNames())"
      range: "(140,21)-(140,47)"
      evaluatedAs: false
      internalMethodName: "addWithPrefix"
    - lineNumber: 179
      expression: "map != null"
      range: "(179,7)-(179,17)"
      evaluatedAs: false
      internalMethodName: "extractPropertiesFromServices"
    - lineNumber: 129
      expression: "propertySources.contains(CommandLinePropertySource.COMMAND_LINE_PROPERTY_SOURCE_NAME)"
      range: "(129,8)-(129,92)"
      evaluatedAs: false
  - pathId: "path13"
    testPathName: "postProcessEnvironmentWhenMapIsNullAndPropertySourcesNotContainsCommandLinePropertySourceCOMMAND_LINE_PROPERTY_SOURCE_N8"
    constructorSignature: "<init>(org.springframework.boot.logging.DeferredLogFactory)\
      \ : void"
    modelFingerprint: "A252B35D89EA34B956E991D305613657"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "978995471A63D9FC87674EB6D3908572"
      valueUuid: "target"
    - type: "INPUT"
      name: "environment"
      modelFingerprint: "2AB40C7309B23844284816875A86BEFD"
      valueUuid: "environment"
    - type: "INPUT"
      name: "application"
      modelFingerprint: "86BFF8B99831ED759F640847C7C0F409"
      valueUuid: "application"
    - type: "LOCAL_VARIABLE"
      name: "logFactory"
      modelFingerprint: "CEA0E8FB88363399F3AF3D52993CAD68"
      valueUuid: "logFactory"
      methodExercised:
        expression: "getLog(destination:uniqueUuid49):log"
    - type: "STATIC"
      name: "JsonParserFactory.class"
      modelFingerprint: "2C1DB273C76C8BA271FA09F17251331F"
      valueUuid: "JsonParserFactory.class"
      methodExercised:
        expression: "getJsonParser():jsonParser"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "62435E42E542E2011059B8DA9FA14CFF"
      valueUuid: "environment"
      methodExercised:
        expression: "getProperty(key:uniqueUuid50,defaultValue:uniqueUuid51):string"
    - type: "LOCAL_VARIABLE"
      name: "parser"
      modelFingerprint: "C81278A4DFEDDAC01506107573FB0FCB"
      valueUuid: "jsonParser"
      methodExercised:
        expression: "parseMap(json:string):map"
        throwsExceptions:
        - "org.springframework.boot.json.JsonParseException"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "82EA235039F6FEF096EB3277C053BA8C"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:uniqueUuid53):boolean2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "3646AE2E72C8E04288B13CB482464D54"
      valueUuid: "environment"
      methodExercised:
        expression: "getProperty(key:uniqueUuid54,defaultValue:uniqueUuid55):string3"
    - type: "LOCAL_VARIABLE"
      name: "parser"
      modelFingerprint: "1688729B4DD4C057AF667E85C3787297"
      valueUuid: "jsonParser"
      methodExercised:
        expression: "parseMap(json:string3):map2"
        throwsExceptions:
        - "org.springframework.boot.json.JsonParseException"
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "E97B1B215647A456976BAD20E92F84F8"
      valueUuid: "environment"
      methodExercised:
        expression: "getPropertySources():mutablePropertySources"
    - type: "LOCAL_VARIABLE"
      name: "propertySources"
      modelFingerprint: "F7EE789795E935910A9C3E780C0FA7DF"
      valueUuid: "mutablePropertySources"
      methodExercised:
        expression: "contains(name:uniqueUuid56):boolean10"
    - type: "LOCAL_VARIABLE"
      name: "propertySources"
      modelFingerprint: "68BB46E7D07E342FFD0C13468727B4AB"
      valueUuid: "mutablePropertySources"
      methodExercised:
        expression: "addFirst(propertySource:propertiesPropertySource):void2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.cloud.CloudPlatform.isActive(org.springframework.core.env.ConfigurableEnvironment)\
        \ : boolean"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor"
        parameters:
        - name: "logFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.DeferredLogFactory"
            uuid: "logFactory"
      valueType: "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "application"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.DeferredLogFactory"
      uuid: "logFactory"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "log"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor"
      uuid: "uniqueUuid49"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParserFactory"
      uuid: "JsonParserFactory.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParser"
      uuid: "jsonParser"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "VCAP_APPLICATION"
      valueType: "java.lang.String"
      uuid: "uniqueUuid50"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "{}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid51"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParser"
      uuid: "jsonParser"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "return_of_parseMapItem1Key1"
              valueType: "java.lang.String"
              uuid: "string2"
              collectionUuid: "map"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object"
              collectionUuid: "map"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid52"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "uniqueUuid53"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "VCAP_SERVICES"
      valueType: "java.lang.String"
      uuid: "uniqueUuid54"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "{}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid55"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParser"
      uuid: "jsonParser"
    - sapientType: "NULL"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean10"
    - sapientType: "BASIC"
      content: !<regular>
        value: "commandLineArgs"
      valueType: "java.lang.String"
      uuid: "uniqueUuid56"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.core.env.PropertiesPropertySource"
      uuid: "propertiesPropertySource"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 123
      expression: "CloudPlatform.CLOUD_FOUNDRY.isActive(environment)"
      range: "(123,7)-(123,55)"
      evaluatedAs: true
    - lineNumber: 173
      expression: "map != null"
      range: "(173,7)-(173,17)"
      evaluatedAs: true
      internalMethodName: "extractPropertiesFromApplication"
    - lineNumber: 230
      expression: "!StringUtils.hasText(path)"
      range: "(230,7)-(230,32)"
      evaluatedAs: true
      internalMethodName: "getPropertyName"
    - lineNumber: 200
      expression: "value instanceof Map"
      range: "(200,8)-(200,27)"
      evaluatedAs: false
      internalMethodName: "lambda$flatten$0"
    - lineNumber: 204
      expression: "value instanceof Collection"
      range: "(204,13)-(204,39)"
      evaluatedAs: false
      internalMethodName: "lambda$flatten$0"
    - lineNumber: 214
      expression: "value instanceof String"
      range: "(214,13)-(214,35)"
      evaluatedAs: false
      internalMethodName: "lambda$flatten$0"
    - lineNumber: 217
      expression: "value instanceof Number"
      range: "(217,13)-(217,35)"
      evaluatedAs: false
      internalMethodName: "lambda$flatten$0"
    - lineNumber: 220
      expression: "value instanceof Boolean"
      range: "(220,13)-(220,36)"
      evaluatedAs: false
      internalMethodName: "lambda$flatten$0"
    - lineNumber: 224
      expression: "value != null"
      range: "(224,27)-(224,39)"
      evaluatedAs: true
      internalMethodName: "lambda$flatten$0"
    - lineNumber: 140
      expression: "for-each(other.stringPropertyNames())"
      range: "(140,21)-(140,47)"
      evaluatedAs: false
      internalMethodName: "addWithPrefix"
    - lineNumber: 179
      expression: "map != null"
      range: "(179,7)-(179,17)"
      evaluatedAs: false
      internalMethodName: "extractPropertiesFromServices"
    - lineNumber: 129
      expression: "propertySources.contains(CommandLinePropertySource.COMMAND_LINE_PROPERTY_SOURCE_NAME)"
      range: "(129,8)-(129,92)"
      evaluatedAs: false
  - pathId: "path14"
    testPathName: "postProcessEnvironmentWhenMapIsNullAndPropertySourcesNotContainsCommandLinePropertySourceCOMMAND_LINE_PROPERTY_SOURCE_N9"
    constructorSignature: "<init>(org.springframework.boot.logging.DeferredLogFactory)\
      \ : void"
    modelFingerprint: "0C621A2C72241277AA3E816B1F159D4B"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "978995471A63D9FC87674EB6D3908572"
      valueUuid: "target"
    - type: "INPUT"
      name: "environment"
      modelFingerprint: "2AB40C7309B23844284816875A86BEFD"
      valueUuid: "environment"
    - type: "INPUT"
      name: "application"
      modelFingerprint: "86BFF8B99831ED759F640847C7C0F409"
      valueUuid: "application"
    - type: "LOCAL_VARIABLE"
      name: "logFactory"
      modelFingerprint: "CEA0E8FB88363399F3AF3D52993CAD68"
      valueUuid: "logFactory"
      methodExercised:
        expression: "getLog(destination:uniqueUuid58):log"
    - type: "STATIC"
      name: "JsonParserFactory.class"
      modelFingerprint: "2C1DB273C76C8BA271FA09F17251331F"
      valueUuid: "JsonParserFactory.class"
      methodExercised:
        expression: "getJsonParser():jsonParser"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "62435E42E542E2011059B8DA9FA14CFF"
      valueUuid: "environment"
      methodExercised:
        expression: "getProperty(key:uniqueUuid59,defaultValue:uniqueUuid60):string"
    - type: "LOCAL_VARIABLE"
      name: "parser"
      modelFingerprint: "5747473E66F8F7149336DA577D9134FE"
      valueUuid: "jsonParser"
      methodExercised:
        expression: "parseMap(json:string):map"
        throwsExceptions:
        - "org.springframework.boot.json.JsonParseException"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "82EA235039F6FEF096EB3277C053BA8C"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:uniqueUuid62):boolean2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "3646AE2E72C8E04288B13CB482464D54"
      valueUuid: "environment"
      methodExercised:
        expression: "getProperty(key:uniqueUuid63,defaultValue:uniqueUuid64):string3"
    - type: "LOCAL_VARIABLE"
      name: "parser"
      modelFingerprint: "1688729B4DD4C057AF667E85C3787297"
      valueUuid: "jsonParser"
      methodExercised:
        expression: "parseMap(json:string3):map2"
        throwsExceptions:
        - "org.springframework.boot.json.JsonParseException"
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "E97B1B215647A456976BAD20E92F84F8"
      valueUuid: "environment"
      methodExercised:
        expression: "getPropertySources():mutablePropertySources"
    - type: "LOCAL_VARIABLE"
      name: "propertySources"
      modelFingerprint: "F7EE789795E935910A9C3E780C0FA7DF"
      valueUuid: "mutablePropertySources"
      methodExercised:
        expression: "contains(name:uniqueUuid65):boolean10"
    - type: "LOCAL_VARIABLE"
      name: "propertySources"
      modelFingerprint: "68BB46E7D07E342FFD0C13468727B4AB"
      valueUuid: "mutablePropertySources"
      methodExercised:
        expression: "addFirst(propertySource:propertiesPropertySource):void2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.cloud.CloudPlatform.isActive(org.springframework.core.env.ConfigurableEnvironment)\
        \ : boolean"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor"
        parameters:
        - name: "logFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.DeferredLogFactory"
            uuid: "logFactory"
      valueType: "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "application"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.DeferredLogFactory"
      uuid: "logFactory"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "log"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor"
      uuid: "uniqueUuid58"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParserFactory"
      uuid: "JsonParserFactory.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParser"
      uuid: "jsonParser"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "VCAP_APPLICATION"
      valueType: "java.lang.String"
      uuid: "uniqueUuid59"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "{}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid60"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParser"
      uuid: "jsonParser"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "return_of_parseMapItem1Key1"
              valueType: "java.lang.String"
              uuid: "string2"
              collectionUuid: "map"
            value:
              sapientType: "NULL"
              valueType: "java.lang.Object"
              uuid: "object"
              fixed: true
              collectionUuid: "map"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid61"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "uniqueUuid62"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "VCAP_SERVICES"
      valueType: "java.lang.String"
      uuid: "uniqueUuid63"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "{}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid64"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParser"
      uuid: "jsonParser"
    - sapientType: "NULL"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean10"
    - sapientType: "BASIC"
      content: !<regular>
        value: "commandLineArgs"
      valueType: "java.lang.String"
      uuid: "uniqueUuid65"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.core.env.PropertiesPropertySource"
      uuid: "propertiesPropertySource"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 123
      expression: "CloudPlatform.CLOUD_FOUNDRY.isActive(environment)"
      range: "(123,7)-(123,55)"
      evaluatedAs: true
    - lineNumber: 173
      expression: "map != null"
      range: "(173,7)-(173,17)"
      evaluatedAs: true
      internalMethodName: "extractPropertiesFromApplication"
    - lineNumber: 230
      expression: "!StringUtils.hasText(path)"
      range: "(230,7)-(230,32)"
      evaluatedAs: true
      internalMethodName: "getPropertyName"
    - lineNumber: 200
      expression: "value instanceof Map"
      range: "(200,8)-(200,27)"
      evaluatedAs: false
      internalMethodName: "lambda$flatten$0"
    - lineNumber: 204
      expression: "value instanceof Collection"
      range: "(204,13)-(204,39)"
      evaluatedAs: false
      internalMethodName: "lambda$flatten$0"
    - lineNumber: 214
      expression: "value instanceof String"
      range: "(214,13)-(214,35)"
      evaluatedAs: false
      internalMethodName: "lambda$flatten$0"
    - lineNumber: 217
      expression: "value instanceof Number"
      range: "(217,13)-(217,35)"
      evaluatedAs: false
      internalMethodName: "lambda$flatten$0"
    - lineNumber: 220
      expression: "value instanceof Boolean"
      range: "(220,13)-(220,36)"
      evaluatedAs: false
      internalMethodName: "lambda$flatten$0"
    - lineNumber: 224
      expression: "value != null"
      range: "(224,27)-(224,39)"
      evaluatedAs: false
      internalMethodName: "lambda$flatten$0"
    - lineNumber: 140
      expression: "for-each(other.stringPropertyNames())"
      range: "(140,21)-(140,47)"
      evaluatedAs: false
      internalMethodName: "addWithPrefix"
    - lineNumber: 179
      expression: "map != null"
      range: "(179,7)-(179,17)"
      evaluatedAs: false
      internalMethodName: "extractPropertiesFromServices"
    - lineNumber: 129
      expression: "propertySources.contains(CommandLinePropertySource.COMMAND_LINE_PROPERTY_SOURCE_NAME)"
      range: "(129,8)-(129,92)"
      evaluatedAs: false
  - pathId: "path17"
    testPathName: "postProcessEnvironmentWhenMapIsNullAndPropertySourcesContainsCommandLinePropertySourceCOMMAND_LINE_PROPERTY_SOURCE_NAME"
    constructorSignature: "<init>(org.springframework.boot.logging.DeferredLogFactory)\
      \ : void"
    modelFingerprint: "FA4521AB8AB9E38A74F79A09E8A9AA85"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "978995471A63D9FC87674EB6D3908572"
      valueUuid: "target"
    - type: "INPUT"
      name: "environment"
      modelFingerprint: "2AB40C7309B23844284816875A86BEFD"
      valueUuid: "environment"
    - type: "INPUT"
      name: "application"
      modelFingerprint: "86BFF8B99831ED759F640847C7C0F409"
      valueUuid: "application"
    - type: "LOCAL_VARIABLE"
      name: "logFactory"
      modelFingerprint: "CEA0E8FB88363399F3AF3D52993CAD68"
      valueUuid: "logFactory"
      methodExercised:
        expression: "getLog(destination:uniqueUuid67):log"
    - type: "STATIC"
      name: "JsonParserFactory.class"
      modelFingerprint: "2C1DB273C76C8BA271FA09F17251331F"
      valueUuid: "JsonParserFactory.class"
      methodExercised:
        expression: "getJsonParser():jsonParser"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "62435E42E542E2011059B8DA9FA14CFF"
      valueUuid: "environment"
      methodExercised:
        expression: "getProperty(key:uniqueUuid68,defaultValue:uniqueUuid69):string"
    - type: "LOCAL_VARIABLE"
      name: "parser"
      modelFingerprint: "5747473E66F8F7149336DA577D9134FE"
      valueUuid: "jsonParser"
      methodExercised:
        expression: "parseMap(json:string):map"
        throwsExceptions:
        - "org.springframework.boot.json.JsonParseException"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "82EA235039F6FEF096EB3277C053BA8C"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:uniqueUuid71):boolean2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "3646AE2E72C8E04288B13CB482464D54"
      valueUuid: "environment"
      methodExercised:
        expression: "getProperty(key:uniqueUuid72,defaultValue:uniqueUuid73):string5"
    - type: "LOCAL_VARIABLE"
      name: "parser"
      modelFingerprint: "1688729B4DD4C057AF667E85C3787297"
      valueUuid: "jsonParser"
      methodExercised:
        expression: "parseMap(json:string5):map2"
        throwsExceptions:
        - "org.springframework.boot.json.JsonParseException"
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "E97B1B215647A456976BAD20E92F84F8"
      valueUuid: "environment"
      methodExercised:
        expression: "getPropertySources():mutablePropertySources"
    - type: "LOCAL_VARIABLE"
      name: "propertySources"
      modelFingerprint: "FA162C7618E490ACCDE05C8F6B10ABAA"
      valueUuid: "mutablePropertySources"
      methodExercised:
        expression: "contains(name:uniqueUuid74):boolean11"
    - type: "LOCAL_VARIABLE"
      name: "propertySources"
      modelFingerprint: "007890EE5206B8D32ACF68AB068068C3"
      valueUuid: "mutablePropertySources"
      methodExercised:
        expression: "addAfter(relativePropertySourceName:uniqueUuid75,propertySource:propertiesPropertySource):void3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.cloud.CloudPlatform.isActive(org.springframework.core.env.ConfigurableEnvironment)\
        \ : boolean"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor"
        parameters:
        - name: "logFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.DeferredLogFactory"
            uuid: "logFactory"
      valueType: "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "application"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.DeferredLogFactory"
      uuid: "logFactory"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "log"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor"
      uuid: "uniqueUuid67"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParserFactory"
      uuid: "JsonParserFactory.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParser"
      uuid: "jsonParser"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "VCAP_APPLICATION"
      valueType: "java.lang.String"
      uuid: "uniqueUuid68"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "{}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid69"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParser"
      uuid: "jsonParser"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: ""
              valueType: "java.lang.String"
              uuid: "string2"
              collectionUuid: "map"
            value:
              sapientType: "NULL"
              valueType: "java.lang.Object"
              uuid: "object"
              fixed: true
              collectionUuid: "map"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid70"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "uniqueUuid71"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "VCAP_SERVICES"
      valueType: "java.lang.String"
      uuid: "uniqueUuid72"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "{}"
      valueType: "java.lang.String"
      uuid: "uniqueUuid73"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParser"
      uuid: "jsonParser"
    - sapientType: "NULL"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean11"
    - sapientType: "BASIC"
      content: !<regular>
        value: "commandLineArgs"
      valueType: "java.lang.String"
      uuid: "uniqueUuid74"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "commandLineArgs"
      valueType: "java.lang.String"
      uuid: "uniqueUuid75"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.core.env.PropertiesPropertySource"
      uuid: "propertiesPropertySource"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 123
      expression: "CloudPlatform.CLOUD_FOUNDRY.isActive(environment)"
      range: "(123,7)-(123,55)"
      evaluatedAs: true
    - lineNumber: 173
      expression: "map != null"
      range: "(173,7)-(173,17)"
      evaluatedAs: true
      internalMethodName: "extractPropertiesFromApplication"
    - lineNumber: 230
      expression: "!StringUtils.hasText(path)"
      range: "(230,7)-(230,32)"
      evaluatedAs: true
      internalMethodName: "getPropertyName"
    - lineNumber: 200
      expression: "value instanceof Map"
      range: "(200,8)-(200,27)"
      evaluatedAs: false
      internalMethodName: "lambda$flatten$0"
    - lineNumber: 204
      expression: "value instanceof Collection"
      range: "(204,13)-(204,39)"
      evaluatedAs: false
      internalMethodName: "lambda$flatten$0"
    - lineNumber: 214
      expression: "value instanceof String"
      range: "(214,13)-(214,35)"
      evaluatedAs: false
      internalMethodName: "lambda$flatten$0"
    - lineNumber: 217
      expression: "value instanceof Number"
      range: "(217,13)-(217,35)"
      evaluatedAs: false
      internalMethodName: "lambda$flatten$0"
    - lineNumber: 220
      expression: "value instanceof Boolean"
      range: "(220,13)-(220,36)"
      evaluatedAs: false
      internalMethodName: "lambda$flatten$0"
    - lineNumber: 224
      expression: "value != null"
      range: "(224,27)-(224,39)"
      evaluatedAs: false
      internalMethodName: "lambda$flatten$0"
    - lineNumber: 153
      expression: "catch-exception (Exception)"
      range: "(153,3)-(153,21)"
      evaluatedAs: true
      internalMethodName: "getPropertiesFromApplication"
    - lineNumber: 140
      expression: "for-each(other.stringPropertyNames())"
      range: "(140,21)-(140,47)"
      evaluatedAs: true
      internalMethodName: "addWithPrefix"
    - lineNumber: 179
      expression: "map != null"
      range: "(179,7)-(179,17)"
      evaluatedAs: false
      internalMethodName: "extractPropertiesFromServices"
    - lineNumber: 129
      expression: "propertySources.contains(CommandLinePropertySource.COMMAND_LINE_PROPERTY_SOURCE_NAME)"
      range: "(129,8)-(129,92)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 23
      id: 1
      catchExceptions:
      - "java.lang.Exception"
