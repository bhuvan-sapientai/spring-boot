---
modelFingerprint: "D82BEFDC88339B44CE9A02206B4262E4"
targetClass:
  fullClassName: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
methods:
- method:
    name: "getWebServer"
    sourceCodeSignature: "WebServer getWebServer(ServletContextInitializer... initializers)"
    returnType: "org.springframework.boot.web.server.WebServer"
    parameters:
    - name: "initializers"
      type: "org.springframework.boot.web.servlet.ServletContextInitializer[]"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.io.IOException"
    instructionFingerprint: "AFF8E9CC8E1019330A99F88745AC089A"
  paths:
  - pathId: "path1"
    testPathName: "getWebServerWhenGetShutdownEqualsShutdownGRACEFUL"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "BED10B30D65A31AA3DE12DB3BC7559F7"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B462E58F7C14A5F647A8FD6F47E1D37A"
      valueUuid: "target"
    - type: "INPUT"
      name: "initializers"
      modelFingerprint: "E913114F17D6180B3869B590B6A735C6"
      valueUuid: "initializers"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "660067569B9E81496B4AE0FD78CE5F5B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid1):void3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "B36091AEE363DAF6D1F472EE8E29A384"
      valueUuid: "jettyEmbeddedWebAppContext"
      methodExercised:
        expression: "getContext():servletContextHandler.ServletScopedContext"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "151C9924E5C7EE0E92057416E5AF6B29"
      valueUuid: "servletContextHandler.ServletScopedContext"
      methodExercised:
        expression: "getServletContext():servletContextHandler.ServletContextApi"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "956D8F317D5F86EDAD3EB38FAF83DB62"
      valueUuid: "servletContextHandler.ServletContextApi"
      methodExercised:
        expression: "setExtendedListenerTypes(extended:uniqueUuid2):void4"
    - type: "LOCAL_VARIABLE"
      name: "httpConfiguration"
      modelFingerprint: "DC4143981881B87E3004D98BD009067F"
      valueUuid: "httpConfiguration"
      methodExercised:
        expression: "setSendServerVersion(sendServerVersion:uniqueUuid3):void5"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "465C4DC2AB9F4684891C4D36EA819FC3"
      valueUuid: "http2"
      methodExercised:
        expression: "isEnabled():enabled"
    - type: "LOCAL_VARIABLE"
      name: "connector"
      modelFingerprint: "283C3946EA1E6E6043D707005F215AFC"
      valueUuid: "serverConnector"
      methodExercised:
        expression: "setHost(host:string4):void6"
    - type: "LOCAL_VARIABLE"
      name: "connector"
      modelFingerprint: "24138EAAB8C789C6C0CEEB8FEF231245"
      valueUuid: "serverConnector"
      methodExercised:
        expression: "setPort(port:int11):void7"
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "11F8040226AA2CF2BFA9438E48DE8B0C"
      valueUuid: "server"
      methodExercised:
        expression: "setConnectors(connectors:connectorArray):void8"
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "439B889F3963B0F3B178CA8EA525F57A"
      valueUuid: "server"
      methodExercised:
        expression: "setStopTimeout(stopTimeout:uniqueUuid4):void9"
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "BA3D68B537BAB49B506C72D59764E2E9"
      valueUuid: "server"
      methodExercised:
        expression: "getMimeTypes():mimeTypes.Mutable"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "8370EFE8236316A743908779B1C47346"
      valueUuid: "mimeMappings5"
      methodExercised:
        expression: "iterator():iterator"
    - type: "LOCAL_VARIABLE"
      name: "mapping"
      modelFingerprint: "9BA342857D6A1D9590263D5CC1307A04"
      valueUuid: "object"
      methodExercised:
        expression: "getExtension():extension"
    - type: "LOCAL_VARIABLE"
      name: "mapping"
      modelFingerprint: "8675D0CC6F45368C2123764A1015918D"
      valueUuid: "object"
      methodExercised:
        expression: "getMimeType():mimeType"
    - type: "LOCAL_VARIABLE"
      name: "mimeTypes"
      modelFingerprint: "CE4B6E770BAA8A7F640AC259D87924A1"
      valueUuid: "mimeTypes.Mutable"
      methodExercised:
        expression: "addMimeMapping(extension:extension,type:mimeType):string7"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "F2BC8A97AFB641D7DC93BC32C2A9996F"
      valueUuid: "jettyEmbeddedWebAppContext"
      methodExercised:
        expression: "setServer(server:server):void10"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "DE550AE7C6AB3406EBC6880007F4EC7F"
      methodExercised:
        expression: "configureWebAppContext(context:jettyEmbeddedWebAppContext,initializers:initializers):void11"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "DFF8BCBE23C0F60E28B1C6278E0B8402"
      valueUuid: "compression"
      methodExercised:
        expression: "getEnabled():enabled2"
    - type: "STATIC"
      name: "JettyHandlerWrappers.class"
      modelFingerprint: "360537BDE54FFF9EFF4ECC6B4D75E80E"
      valueUuid: "JettyHandlerWrappers.class"
      methodExercised:
        expression: "createGzipHandlerWrapper(compression:compression):handler.Wrapper"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "wrapper"
      modelFingerprint: "600AD13C2D2207541F9F8421AB4E8EC1"
      valueUuid: "handler.Wrapper"
      methodExercised:
        expression: "setHandler(handler:jettyEmbeddedWebAppContext):void12"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "C451289A282A31CF244229D65F010B51"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:string8):boolean17"
        staticAccess: true
    - type: "STATIC"
      name: "JettyHandlerWrappers.class"
      modelFingerprint: "DB27E550B5CE238E7ED1152E47906669"
      valueUuid: "JettyHandlerWrappers.class"
      methodExercised:
        expression: "createServerHeaderHandlerWrapper(header:string8):handler.Wrapper2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "wrapper"
      modelFingerprint: "227934907780ADEEC245906719C0B49E"
      valueUuid: "handler.Wrapper2"
      methodExercised:
        expression: "setHandler(handler:handler.Wrapper):void13"
    - type: "STATIC"
      name: "CollectionUtils.class"
      modelFingerprint: "480D8B3E4A4E65279CDDF3561DEE5308"
      valueUuid: "CollectionUtils.class"
      methodExercised:
        expression: "isEmpty(collection:list):boolean18"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "32886EB6B1F287ED59C526CFC0EC357B"
      valueUuid: "server"
      methodExercised:
        expression: "setHandler(handler:handler.Wrapper3):void15"
    - type: "STATIC"
      name: "Ssl.class"
      modelFingerprint: "BB955C7AD5A7C21C536977E57745A4D0"
      valueUuid: "Ssl.class"
      methodExercised:
        expression: "isEnabled(ssl:ssl):boolean19"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "3709689234DD9DFE8A794E13877C6889"
      valueUuid: "ssl"
      methodExercised:
        expression: "getClientAuth():clientAuth"
    - type: "STATIC"
      name: "WebServerSslBundle.class"
      modelFingerprint: "D1767D56D737768EC2D5BFA9A32FEAD6"
      valueUuid: "WebServerSslBundle.class"
      methodExercised:
        expression: "get(ssl:fieldSsl,sslBundles:fieldSslBundles):sslBundle"
        throwsExceptions:
        - "org.springframework.boot.ssl.NoSuchSslBundleException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "680EB6F5770D9B029E5B7B0E54992F9E"
      valueUuid: "sslServerCustomizer"
      methodExercised:
        expression: "customize(server:server):void17"
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "C38E0E7F899C4B76C947EB49FF458E10"
      valueUuid: "server"
      methodExercised:
        expression: "getHandler():handler"
    - type: "LOCAL_VARIABLE"
      name: "statisticsHandler"
      modelFingerprint: "ABE57B92BA5A5D61EE74FD4B0AD7ACE0"
      valueUuid: "statisticsHandler"
      methodExercised:
        expression: "setHandler(handler:handler):void18"
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "C8147D22433BD4C6F86A4CC9FB3AF497"
      valueUuid: "server"
      methodExercised:
        expression: "setHandler(handler:statisticsHandler):void19"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "E2702A8EE251BBD899D5F8DA91FC8CB3"
      methodExercised:
        expression: "getJettyWebServer(server:server):jettyWebServer"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "6C8F792CE8792CFF54DFE181DBF8F6E8"
      valueUuid: "jettyWebServer"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "connector.setHost(address.getHostString());"
      lineNumber: 227
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: address - Method: getHostString"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/A"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "int"
            uuid: "port"
        propertiesMap:
          address:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.net.InetAddress"
              method: "getLoopbackAddress"
              methodParameters: []
            valueType: "java.net.InetAddress"
            uuid: "inetAddress"
          cookieSameSiteSuppliers:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.web.servlet.server.CookieSameSiteSupplier"
            uuid: "list"
          http2:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.server.Http2"
              parameters: []
              propertiesMap:
                enabled:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: true
                  valueType: "boolean"
                  uuid: "enabled"
            valueType: "org.springframework.boot.web.server.Http2"
            uuid: "http2"
          compression:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.server.Compression"
              parameters: []
              propertiesMap:
                enabled:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: true
                  valueType: "boolean"
                  uuid: "enabled2"
            valueType: "org.springframework.boot.web.server.Compression"
            uuid: "compression"
          ssl:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.server.Ssl"
              parameters: []
              propertiesMap:
                clientAuth:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "NONE"
                  valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
                  uuid: "clientAuth"
            valueType: "org.springframework.boot.web.server.Ssl"
            uuid: "ssl"
          mimeMappings:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings5"
          serverHeader:
            sapientType: "BASIC"
            content: !<regular>
              value: "H"
            valueType: "java.lang.String"
            uuid: "string8"
          shutdown:
            sapientType: "ENUM"
            content: !<regular>
              value: "GRACEFUL"
            valueType: "org.springframework.boot.web.server.Shutdown"
            uuid: "shutdown"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.servlet.ServletContextInitializer[]"
      uuid: "initializers"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyEmbeddedWebAppContext"
      uuid: "jettyEmbeddedWebAppContext"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.eclipse.jetty.ee10.servlet.ServletContextHandler$ServletScopedContext"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.web.embedded.jetty.JettyEmbeddedWebAppContext"
            parameters: []
          valueType: "org.springframework.boot.web.embedded.jetty.JettyEmbeddedWebAppContext"
          uuid: "jettyEmbeddedWebAppContext"
          fixed: true
        methodParameters: []
        methodName: "getContext"
      valueType: "org.eclipse.jetty.ee10.servlet.ServletContextHandler$ServletScopedContext"
      uuid: "servletContextHandler.ServletScopedContext"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.eclipse.jetty.ee10.servlet.ServletContextHandler$ServletScopedContext"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.web.embedded.jetty.JettyEmbeddedWebAppContext"
            parameters: []
          valueType: "org.springframework.boot.web.embedded.jetty.JettyEmbeddedWebAppContext"
          uuid: "jettyEmbeddedWebAppContext"
          fixed: true
        methodParameters: []
        methodName: "getContext"
      valueType: "org.eclipse.jetty.ee10.servlet.ServletContextHandler$ServletScopedContext"
      uuid: "servletContextHandler.ServletScopedContext"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.eclipse.jetty.ee10.servlet.ServletContextHandler$ServletContextApi"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.eclipse.jetty.ee10.servlet.ServletContextHandler$ServletScopedContext"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.boot.web.embedded.jetty.JettyEmbeddedWebAppContext"
                parameters: []
              valueType: "org.springframework.boot.web.embedded.jetty.JettyEmbeddedWebAppContext"
              uuid: "jettyEmbeddedWebAppContext"
              fixed: true
            methodParameters: []
            methodName: "getContext"
          valueType: "org.eclipse.jetty.ee10.servlet.ServletContextHandler$ServletScopedContext"
          uuid: "servletContextHandler.ServletScopedContext"
        methodParameters: []
        methodName: "getServletContext"
      valueType: "org.eclipse.jetty.ee10.servlet.ServletContextHandler$ServletContextApi"
      uuid: "servletContextHandler.ServletContextApi"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.eclipse.jetty.ee10.servlet.ServletContextHandler$ServletContextApi"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.eclipse.jetty.ee10.servlet.ServletContextHandler$ServletScopedContext"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.boot.web.embedded.jetty.JettyEmbeddedWebAppContext"
                parameters: []
              valueType: "org.springframework.boot.web.embedded.jetty.JettyEmbeddedWebAppContext"
              uuid: "jettyEmbeddedWebAppContext"
              fixed: true
            methodParameters: []
            methodName: "getContext"
          valueType: "org.eclipse.jetty.ee10.servlet.ServletContextHandler$ServletScopedContext"
          uuid: "servletContextHandler.ServletScopedContext"
        methodParameters: []
        methodName: "getServletContext"
      valueType: "org.eclipse.jetty.ee10.servlet.ServletContextHandler$ServletContextApi"
      uuid: "servletContextHandler.ServletContextApi"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.eclipse.jetty.server.HttpConfiguration"
        parameters: []
      valueType: "org.eclipse.jetty.server.HttpConfiguration"
      uuid: "httpConfiguration"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Http2"
        parameters: []
        propertiesMap:
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "enabled"
      valueType: "org.springframework.boot.web.server.Http2"
      uuid: "http2"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "enabled"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.eclipse.jetty.server.ServerConnector"
        parameters:
        - name: "server"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.eclipse.jetty.server.Server"
              parameters:
              - name: "pool"
                value:
                  sapientType: "NULL"
                  valueType: "org.eclipse.jetty.util.thread.ThreadPool"
                  uuid: "fieldThreadPool"
            valueType: "org.eclipse.jetty.server.Server"
            uuid: "server"
            fixed: true
        - name: "acceptors"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: -1
            valueType: "int"
            uuid: "int7"
            fixed: true
        - name: "selectors"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: -1
            valueType: "int"
            uuid: "int8"
            fixed: true
        - name: "factories"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.eclipse.jetty.server.HttpConnectionFactory"
                    parameters:
                    - name: "config"
                      value:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.eclipse.jetty.server.HttpConfiguration"
                          parameters: []
                        valueType: "org.eclipse.jetty.server.HttpConfiguration"
                        uuid: "httpConfiguration"
                        fixed: true
                  valueType: "org.eclipse.jetty.server.HttpConnectionFactory"
                  uuid: "httpConnectionFactory"
                  fixed: true
                1:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.eclipse.jetty.http2.server.HTTP2CServerConnectionFactory"
                    parameters:
                    - name: "httpConfiguration"
                      value:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.eclipse.jetty.server.HttpConfiguration"
                          parameters: []
                        valueType: "org.eclipse.jetty.server.HttpConfiguration"
                        uuid: "httpConfiguration"
                        fixed: true
                  valueType: "org.eclipse.jetty.http2.server.HTTP2CServerConnectionFactory"
                  uuid: "hTTP2CServerConnectionFactory"
                  fixed: true
            valueType: "org.eclipse.jetty.server.ConnectionFactory[]"
            uuid: "objectArray"
            collectionUuid: "arrayList8"
      valueType: "org.eclipse.jetty.server.ServerConnector"
      uuid: "serverConnector"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "host1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.eclipse.jetty.server.ServerConnector"
        parameters:
        - name: "server"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.eclipse.jetty.server.Server"
              parameters:
              - name: "pool"
                value:
                  sapientType: "NULL"
                  valueType: "org.eclipse.jetty.util.thread.ThreadPool"
                  uuid: "fieldThreadPool"
            valueType: "org.eclipse.jetty.server.Server"
            uuid: "server"
            fixed: true
        - name: "acceptors"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: -1
            valueType: "int"
            uuid: "int7"
            fixed: true
        - name: "selectors"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: -1
            valueType: "int"
            uuid: "int8"
            fixed: true
        - name: "factories"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.eclipse.jetty.server.HttpConnectionFactory"
                    parameters:
                    - name: "config"
                      value:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.eclipse.jetty.server.HttpConfiguration"
                          parameters: []
                        valueType: "org.eclipse.jetty.server.HttpConfiguration"
                        uuid: "httpConfiguration"
                        fixed: true
                  valueType: "org.eclipse.jetty.server.HttpConnectionFactory"
                  uuid: "httpConnectionFactory"
                  fixed: true
                1:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.eclipse.jetty.http2.server.HTTP2CServerConnectionFactory"
                    parameters:
                    - name: "httpConfiguration"
                      value:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.eclipse.jetty.server.HttpConfiguration"
                          parameters: []
                        valueType: "org.eclipse.jetty.server.HttpConfiguration"
                        uuid: "httpConfiguration"
                        fixed: true
                  valueType: "org.eclipse.jetty.http2.server.HTTP2CServerConnectionFactory"
                  uuid: "hTTP2CServerConnectionFactory"
                  fixed: true
            valueType: "org.eclipse.jetty.server.ConnectionFactory[]"
            uuid: "objectArray"
            collectionUuid: "arrayList8"
      valueType: "org.eclipse.jetty.server.ServerConnector"
      uuid: "serverConnector"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int11"
    - sapientType: "ANY"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.eclipse.jetty.server.ServerConnector"
              parameters:
              - name: "server"
                value:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.eclipse.jetty.server.Server"
                    parameters:
                    - name: "pool"
                      value:
                        sapientType: "NULL"
                        valueType: "org.eclipse.jetty.util.thread.ThreadPool"
                        uuid: "fieldThreadPool"
                  valueType: "org.eclipse.jetty.server.Server"
                  uuid: "server"
                  fixed: true
              - name: "acceptors"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -1
                  valueType: "int"
                  uuid: "int7"
                  fixed: true
              - name: "selectors"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -1
                  valueType: "int"
                  uuid: "int8"
                  fixed: true
              - name: "factories"
                value:
                  sapientType: "ARRAY"
                  content: !<array>
                    values:
                      0:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.eclipse.jetty.server.HttpConnectionFactory"
                          parameters:
                          - name: "config"
                            value:
                              sapientType: "OBJECT"
                              content: !<new>
                                target: "org.eclipse.jetty.server.HttpConfiguration"
                                parameters: []
                              valueType: "org.eclipse.jetty.server.HttpConfiguration"
                              uuid: "httpConfiguration"
                              fixed: true
                        valueType: "org.eclipse.jetty.server.HttpConnectionFactory"
                        uuid: "httpConnectionFactory"
                        fixed: true
                      1:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.eclipse.jetty.http2.server.HTTP2CServerConnectionFactory"
                          parameters:
                          - name: "httpConfiguration"
                            value:
                              sapientType: "OBJECT"
                              content: !<new>
                                target: "org.eclipse.jetty.server.HttpConfiguration"
                                parameters: []
                              valueType: "org.eclipse.jetty.server.HttpConfiguration"
                              uuid: "httpConfiguration"
                              fixed: true
                        valueType: "org.eclipse.jetty.http2.server.HTTP2CServerConnectionFactory"
                        uuid: "hTTP2CServerConnectionFactory"
                        fixed: true
                  valueType: "org.eclipse.jetty.server.ConnectionFactory[]"
                  uuid: "objectArray"
                  collectionUuid: "arrayList8"
            valueType: "org.eclipse.jetty.server.ServerConnector"
            uuid: "serverConnector"
            fixed: true
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray"
    - sapientType: "ANY"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "long"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.eclipse.jetty.http.MimeTypes$Mutable"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.eclipse.jetty.server.Server"
            parameters:
            - name: "pool"
              value:
                sapientType: "NULL"
                valueType: "org.eclipse.jetty.util.thread.ThreadPool"
                uuid: "fieldThreadPool"
          valueType: "org.eclipse.jetty.server.Server"
          uuid: "server"
          fixed: true
        methodParameters: []
        methodName: "getMimeTypes"
      valueType: "org.eclipse.jetty.http.MimeTypes$Mutable"
      uuid: "mimeTypes.Mutable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings5"
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.boot.web.server.MimeMappings$Mapping"
                parameters:
                - name: "extension"
                  value:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "B"
                    valueType: "java.lang.String"
                    uuid: "extension"
                - name: "mimeType"
                  value:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "D"
                    valueType: "java.lang.String"
                    uuid: "mimeType"
              valueType: "org.springframework.boot.web.server.MimeMappings$Mapping"
              uuid: "object"
              collectionUuid: "iterator-CollectionContent"
          valueType: "java.util.List"
          genericValueType: "org.springframework.boot.web.server.MimeMappings$Mapping"
          uuid: "iterator-CollectionContent"
      valueType: "java.util.Iterator"
      genericValueType: "org.springframework.boot.web.server.MimeMappings$Mapping"
      uuid: "iterator"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.MimeMappings$Mapping"
        parameters:
        - name: "extension"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "B"
            valueType: "java.lang.String"
            uuid: "extension"
        - name: "mimeType"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "D"
            valueType: "java.lang.String"
            uuid: "mimeType"
      valueType: "org.springframework.boot.web.server.MimeMappings$Mapping"
      uuid: "object"
      collectionUuid: "iterator-CollectionContent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "extension"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.MimeMappings$Mapping"
        parameters:
        - name: "extension"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "B"
            valueType: "java.lang.String"
            uuid: "extension"
        - name: "mimeType"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "D"
            valueType: "java.lang.String"
            uuid: "mimeType"
      valueType: "org.springframework.boot.web.server.MimeMappings$Mapping"
      uuid: "object"
      collectionUuid: "iterator-CollectionContent"
    - sapientType: "BASIC"
      content: !<regular>
        value: "D"
      valueType: "java.lang.String"
      uuid: "mimeType"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.eclipse.jetty.http.MimeTypes$Mutable"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.eclipse.jetty.server.Server"
            parameters:
            - name: "pool"
              value:
                sapientType: "NULL"
                valueType: "org.eclipse.jetty.util.thread.ThreadPool"
                uuid: "fieldThreadPool"
          valueType: "org.eclipse.jetty.server.Server"
          uuid: "server"
          fixed: true
        methodParameters: []
        methodName: "getMimeTypes"
      valueType: "org.eclipse.jetty.http.MimeTypes$Mutable"
      uuid: "mimeTypes.Mutable"
    - sapientType: "BASIC"
      content: !<regular>
        value: "I"
      valueType: "java.lang.String"
      uuid: "string7"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "extension"
    - sapientType: "BASIC"
      content: !<regular>
        value: "D"
      valueType: "java.lang.String"
      uuid: "mimeType"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyEmbeddedWebAppContext"
      uuid: "jettyEmbeddedWebAppContext"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void11"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyEmbeddedWebAppContext"
      uuid: "jettyEmbeddedWebAppContext"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.servlet.ServletContextInitializer[]"
      uuid: "initializers"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Compression"
        parameters: []
        propertiesMap:
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "enabled2"
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "compression"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "enabled2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyHandlerWrappers"
      uuid: "JettyHandlerWrappers.class"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Handler$Wrapper"
      uuid: "handler.Wrapper"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Compression"
        parameters: []
        propertiesMap:
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "enabled2"
      valueType: "org.springframework.boot.web.server.Compression"
      uuid: "compression"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Handler$Wrapper"
      uuid: "handler.Wrapper"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void12"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyEmbeddedWebAppContext"
      uuid: "jettyEmbeddedWebAppContext"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean17"
    - sapientType: "BASIC"
      content: !<regular>
        value: "H"
      valueType: "java.lang.String"
      uuid: "string8"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyHandlerWrappers"
      uuid: "JettyHandlerWrappers.class"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Handler$Wrapper"
      uuid: "handler.Wrapper2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "H"
      valueType: "java.lang.String"
      uuid: "string8"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Handler$Wrapper"
      uuid: "handler.Wrapper2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void13"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Handler$Wrapper"
      uuid: "handler.Wrapper"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.CollectionUtils"
      uuid: "CollectionUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean18"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.web.servlet.server.CookieSameSiteSupplier"
      uuid: "list"
    - sapientType: "ANY"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void15"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.eclipse.jetty.server.Handler"
      uuid: "handler.Wrapper3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.Ssl"
      uuid: "Ssl.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean19"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Ssl"
        parameters: []
        propertiesMap:
          clientAuth:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
            uuid: "clientAuth"
      valueType: "org.springframework.boot.web.server.Ssl"
      uuid: "ssl"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Ssl"
        parameters: []
        propertiesMap:
          clientAuth:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
            uuid: "clientAuth"
      valueType: "org.springframework.boot.web.server.Ssl"
      uuid: "ssl"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
      uuid: "clientAuth"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.WebServerSslBundle"
      uuid: "WebServerSslBundle.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.web.server.Ssl"
      uuid: "fieldSsl"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.ssl.SslBundles"
      uuid: "fieldSslBundles"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.SslServerCustomizer"
        parameters:
        - name: "http2"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.server.Http2"
              parameters: []
              propertiesMap:
                enabled:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: true
                  valueType: "boolean"
                  uuid: "enabled"
            valueType: "org.springframework.boot.web.server.Http2"
            uuid: "http2"
        - name: "address"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.net.InetSocketAddress"
              parameters:
              - name: "addr"
                value:
                  sapientType: "OBJECT"
                  content: !<static_method_return>
                    target: "java.net.InetAddress"
                    method: "getLoopbackAddress"
                    methodParameters: []
                  valueType: "java.net.InetAddress"
                  uuid: "inetAddress"
              - name: "port"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 2
                  valueType: "int"
                  uuid: "int10"
            valueType: "java.net.InetSocketAddress"
            uuid: "inetSocketAddress"
            fixed: true
        - name: "clientAuth"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
            uuid: "clientAuth"
        - name: "sslBundle"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "sslBundle"
      valueType: "org.springframework.boot.web.embedded.jetty.SslServerCustomizer"
      uuid: "sslServerCustomizer"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void17"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.eclipse.jetty.server.Handler"
      uuid: "handler"
    - sapientType: "ANY"
      valueType: "org.eclipse.jetty.server.handler.StatisticsHandler"
      uuid: "statisticsHandler"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void18"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.eclipse.jetty.server.Handler"
      uuid: "handler"
    - sapientType: "ANY"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void19"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.eclipse.jetty.server.handler.StatisticsHandler"
      uuid: "statisticsHandler"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
      uuid: "jettyWebServer"
    - sapientType: "ANY"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
      uuid: "jettyWebServer"
    branches:
    - lineNumber: 222
      expression: "getHttp2() != null"
      range: "(222,7)-(222,24)"
      evaluatedAs: true
      internalMethodName: "createConnector"
    - lineNumber: 222
      expression: "getHttp2().isEnabled()"
      range: "(222,29)-(222,50)"
      evaluatedAs: true
      internalMethodName: "createConnector"
    - lineNumber: 211
      expression: "for-each(getMimeMappings())"
      range: "(211,39)-(211,55)"
      evaluatedAs: true
      internalMethodName: "createServer"
    - lineNumber: 233
      expression: "getCompression() != null"
      range: "(233,7)-(233,30)"
      evaluatedAs: true
      internalMethodName: "addHandlerWrappers"
    - lineNumber: 233
      expression: "getCompression().getEnabled()"
      range: "(233,35)-(233,63)"
      evaluatedAs: true
      internalMethodName: "addHandlerWrappers"
    - lineNumber: 236
      expression: "StringUtils.hasText(getServerHeader())"
      range: "(236,7)-(236,44)"
      evaluatedAs: true
      internalMethodName: "addHandlerWrappers"
    - lineNumber: 239
      expression: "!CollectionUtils.isEmpty(getCookieSameSiteSuppliers())"
      range: "(239,7)-(239,60)"
      evaluatedAs: true
      internalMethodName: "addHandlerWrappers"
    - lineNumber: 186
      expression: "this.maxConnections > -1"
      range: "(186,7)-(186,30)"
      evaluatedAs: false
    - lineNumber: 189
      expression: "Ssl.isEnabled(getSsl())"
      range: "(189,7)-(189,29)"
      evaluatedAs: true
    - lineNumber: 192
      expression: "for-each(getServerCustomizers())"
      range: "(192,43)-(192,64)"
      evaluatedAs: false
    - lineNumber: 195
      expression: "this.useForwardHeaders"
      range: "(195,7)-(195,28)"
      evaluatedAs: false
    - lineNumber: 198
      expression: "getShutdown() == Shutdown.GRACEFUL"
      range: "(198,7)-(198,40)"
      evaluatedAs: true
- method:
    name: "configureWebAppContext"
    sourceCodeSignature: "void configureWebAppContext(WebAppContext context, ServletContextInitializer...\
      \ initializers)"
    returnType: "void"
    parameters:
    - name: "context"
      type: "org.eclipse.jetty.ee10.webapp.WebAppContext"
    - name: "initializers"
      type: "org.springframework.boot.web.servlet.ServletContextInitializer[]"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.io.IOException"
    instructionFingerprint: "882885A1F7FD2205C1C5563CC8F2B7B5"
  paths:
  - pathId: "path23"
    testPathName: "configureWebAppContextWhenCaughtExceptionThrowsIllegalStateException"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "F265007B0293EBA3B6EDF16AD5FA47F6"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B462E58F7C14A5F647A8FD6F47E1D37A"
      valueUuid: "target"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "72654B36C04778F619F8E4F2BF4C3EAB"
      valueUuid: "context"
    - type: "INPUT"
      name: "initializers"
      modelFingerprint: "E913114F17D6180B3869B590B6A735C6"
      valueUuid: "initializers"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "660067569B9E81496B4AE0FD78CE5F5B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid5):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F66BEE0ABBEDD93735C178BE4A5725AC"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:context,message:uniqueUuid6):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "A7191F368446B0E9CA2482D2C9BC6CCA"
      valueUuid: "context"
      methodExercised:
        expression: "clearAliasChecks():void5"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "0F2300C5789B2A5BFB886D4B0B4CF030"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasLength(str:contextPath):boolean11"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "8E99C131E498A377DCEBC1BE5E3A92AE"
      valueUuid: "context"
      methodExercised:
        expression: "setContextPath(contextPath:contextPath):void6"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "37F063115E5E07FBDCCD87EA85D5C367"
      valueUuid: "context"
      methodExercised:
        expression: "setDisplayName(servletContextName:string4):void7"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "BB683F3329E628D02D0FDEB6C35A0E54"
      valueUuid: "context"
      methodExercised:
        expression: "getResourceFactory():resourceFactory"
    - type: "LOCAL_VARIABLE"
      name: "docBase"
      modelFingerprint: "B4E3C7D2D2820DD6699882C8A913DB8C"
      valueUuid: "file2"
      methodExercised:
        expression: "getCanonicalFile():file3"
        throwsExceptions:
        - "java.io.IOException"
    - type: "LOCAL_VARIABLE"
      name: "resourceFactory"
      modelFingerprint: "197B1EDEA16DC7CB54B161D1DAD169AE"
      valueUuid: "resourceFactory"
      methodExercised:
        expression: "newResource(arg0:uRI):resource"
    - type: "LOCAL_VARIABLE"
      name: "urlResourceFactory"
      modelFingerprint: "3653E9A663D944A08095EF1DC089F0BE"
      valueUuid: "uRLResourceFactory"
      methodExercised:
        expression: "newResource(resource:string7):resource2"
    - type: "STATIC"
      name: "ResourceFactory.class"
      modelFingerprint: "F3EC4BA84DAACFFC775BCEF40F48D98D"
      valueUuid: "ResourceFactory.class"
      methodExercised:
        expression: "combine(resources:arrayList8):resource3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "462F93FB5D6673A465A7FFF40C0E4034"
      valueUuid: "context"
      methodExercised:
        expression: "setBaseResource(resourceBase:resource3):void9"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "826102AAEC6A149FF64CA9F695E3D6AF"
      valueUuid: "illegalStateException"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "DefaultSessionCache cache = new DefaultSessionCache(handler);"
      lineNumber: 295
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: documentRoot - Method: getValidDirectory"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/A"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "int"
            uuid: "port"
        propertiesMap:
          displayName:
            sapientType: "BASIC"
            content: !<regular>
              value: "displayName1"
            valueType: "java.lang.String"
            uuid: "string4"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.servlet.ServletContextInitializer[]"
      uuid: "initializers"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Context must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean11"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "displayName1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.ResourceFactory"
      uuid: "resourceFactory"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file2-pathname"
      valueType: "java.io.File"
      uuid: "file2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file3-pathname"
      valueType: "java.io.File"
      uuid: "file3"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.ResourceFactory"
      uuid: "resourceFactory"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.Resource"
      uuid: "resource"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.net.URI"
        method: "create"
        methodParameters:
        - name: "str"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "str1"
            valueType: "java.lang.String"
            uuid: "uRI-str"
      valueType: "java.net.URI"
      uuid: "uRI"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.eclipse.jetty.util.resource.URLResourceFactory"
        parameters: []
      valueType: "org.eclipse.jetty.util.resource.URLResourceFactory"
      uuid: "uRLResourceFactory"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.eclipse.jetty.util.resource.Resource"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.eclipse.jetty.util.resource.URLResourceFactory"
            parameters: []
          valueType: "org.eclipse.jetty.util.resource.URLResourceFactory"
          uuid: "uRLResourceFactory"
          fixed: true
        methodParameters:
        - name: "resource"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "objectMETA-INF/resources/"
            valueType: "java.lang.String"
            uuid: "string7"
        methodName: "newResource"
      valueType: "org.eclipse.jetty.util.resource.Resource"
      uuid: "resource2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "objectMETA-INF/resources/"
      valueType: "java.lang.String"
      uuid: "string7"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.ResourceFactory"
      uuid: "ResourceFactory.class"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.Resource"
      uuid: "resource3"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.eclipse.jetty.util.resource.Resource"
          uuid: "resource"
        - sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.eclipse.jetty.util.resource.Resource"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.eclipse.jetty.util.resource.URLResourceFactory"
                parameters: []
              valueType: "org.eclipse.jetty.util.resource.URLResourceFactory"
              uuid: "uRLResourceFactory"
              fixed: true
            methodParameters:
            - name: "resource"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "objectMETA-INF/resources/"
                valueType: "java.lang.String"
                uuid: "string7"
            methodName: "newResource"
          valueType: "org.eclipse.jetty.util.resource.Resource"
          uuid: "resource2"
      valueType: "java.util.List"
      genericValueType: "org.eclipse.jetty.util.resource.Resource"
      uuid: "arrayList8"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.Resource"
      uuid: "resource3"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Exception"
              parameters: []
            valueType: "java.lang.Exception"
            uuid: "exception"
      valueType: "java.lang.IllegalStateException"
      uuid: "illegalStateException"
      fixed: true
    branches:
    - lineNumber: 262
      expression: "this.resourceLoader != null"
      range: "(262,7)-(262,33)"
      evaluatedAs: false
    - lineNumber: 266
      expression: "StringUtils.hasLength(contextPath)"
      range: "(266,26)-(266,59)"
      evaluatedAs: true
    - lineNumber: 321
      expression: "root != null"
      range: "(321,19)-(321,30)"
      evaluatedAs: false
      internalMethodName: "configureDocumentRoot"
    - lineNumber: 325
      expression: "docBase.isDirectory()"
      range: "(325,29)-(325,49)"
      evaluatedAs: true
      internalMethodName: "configureDocumentRoot"
    - lineNumber: 328
      expression: "root != null"
      range: "(328,19)-(328,30)"
      evaluatedAs: false
      internalMethodName: "configureDocumentRoot"
    - lineNumber: 330
      expression: "for-each(getUrlsOfJarsWithMetaInfResources())"
      range: "(330,30)-(330,64)"
      evaluatedAs: true
      internalMethodName: "configureDocumentRoot"
    - lineNumber: 345
      expression: "\\\"file\\\".equals(url.getProtocol())"
      range: "(345,7)-(345,38)"
      evaluatedAs: false
      internalMethodName: "createResource"
    - lineNumber: 332
      expression: "resource != null"
      range: "(332,9)-(332,24)"
      evaluatedAs: true
      internalMethodName: "configureDocumentRoot"
    - lineNumber: 338
      expression: "catch-exception (Exception)"
      range: "(338,3)-(338,21)"
      evaluatedAs: true
      internalMethodName: "configureDocumentRoot"
    catchBlockExercised:
      idExternalInstruction: 51
      id: 2
      catchExceptions:
      - "java.lang.Exception"
  - pathId: "path22"
    testPathName: "configureWebAppContextWhenResourceIsNotNullAndCaughtExceptionThrowsIllegalStateException"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "F1B154A897DF1632F935169B636BE58D"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D0537F57C0747EC67E4D50ABD3DCCBDC"
      valueUuid: "target"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "72654B36C04778F619F8E4F2BF4C3EAB"
      valueUuid: "context"
    - type: "INPUT"
      name: "initializers"
      modelFingerprint: "E913114F17D6180B3869B590B6A735C6"
      valueUuid: "initializers"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "660067569B9E81496B4AE0FD78CE5F5B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid7):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F66BEE0ABBEDD93735C178BE4A5725AC"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:context,message:uniqueUuid8):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "A7191F368446B0E9CA2482D2C9BC6CCA"
      valueUuid: "context"
      methodExercised:
        expression: "clearAliasChecks():void5"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "0F2300C5789B2A5BFB886D4B0B4CF030"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasLength(str:contextPath):boolean11"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "8E99C131E498A377DCEBC1BE5E3A92AE"
      valueUuid: "context"
      methodExercised:
        expression: "setContextPath(contextPath:contextPath):void6"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "37F063115E5E07FBDCCD87EA85D5C367"
      valueUuid: "context"
      methodExercised:
        expression: "setDisplayName(servletContextName:string4):void7"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "BB683F3329E628D02D0FDEB6C35A0E54"
      valueUuid: "context"
      methodExercised:
        expression: "getResourceFactory():resourceFactory"
    - type: "LOCAL_VARIABLE"
      name: "docBase"
      modelFingerprint: "B4E3C7D2D2820DD6699882C8A913DB8C"
      valueUuid: "file"
      methodExercised:
        expression: "getCanonicalFile():file2"
        throwsExceptions:
        - "java.io.IOException"
    - type: "LOCAL_VARIABLE"
      name: "resourceFactory"
      modelFingerprint: "197B1EDEA16DC7CB54B161D1DAD169AE"
      valueUuid: "resourceFactory"
      methodExercised:
        expression: "newResource(arg0:uRI):resource"
    - type: "LOCAL_VARIABLE"
      name: "resourceFactory"
      modelFingerprint: "1A76D4A43CB76D55830B3F9FD98091DE"
      valueUuid: "resourceFactory"
      methodExercised:
        expression: "newResource(resource:string6):resource2"
    - type: "STATIC"
      name: "ResourceFactory.class"
      modelFingerprint: "519438281F577C743C15691AA5387F0F"
      valueUuid: "ResourceFactory.class"
      methodExercised:
        expression: "combine(resources:arrayList8):resource3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "462F93FB5D6673A465A7FFF40C0E4034"
      valueUuid: "context"
      methodExercised:
        expression: "setBaseResource(resourceBase:resource3):void8"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "826102AAEC6A149FF64CA9F695E3D6AF"
      valueUuid: "illegalStateException"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "DefaultSessionCache cache = new DefaultSessionCache(handler);"
      lineNumber: 295
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: documentRoot - Method: getValidDirectory"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/A"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
        propertiesMap:
          displayName:
            sapientType: "BASIC"
            content: !<regular>
              value: "displayName1"
            valueType: "java.lang.String"
            uuid: "string4"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.servlet.ServletContextInitializer[]"
      uuid: "initializers"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Context must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean11"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "displayName1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.ResourceFactory"
      uuid: "resourceFactory"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file2-pathname"
      valueType: "java.io.File"
      uuid: "file2"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.ResourceFactory"
      uuid: "resourceFactory"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.Resource"
      uuid: "resource"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.net.URI"
        method: "create"
        methodParameters:
        - name: "str"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "str1"
            valueType: "java.lang.String"
            uuid: "uRI-str"
      valueType: "java.net.URI"
      uuid: "uRI"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.ResourceFactory"
      uuid: "resourceFactory"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.Resource"
      uuid: "resource2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "jar:object!/META-INF/resources/"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.ResourceFactory"
      uuid: "ResourceFactory.class"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.Resource"
      uuid: "resource3"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.eclipse.jetty.util.resource.Resource"
          uuid: "resource"
        - sapientType: "MOCK"
          valueType: "org.eclipse.jetty.util.resource.Resource"
          uuid: "resource2"
      valueType: "java.util.List"
      genericValueType: "org.eclipse.jetty.util.resource.Resource"
      uuid: "arrayList8"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.Resource"
      uuid: "resource3"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Exception"
              parameters: []
            valueType: "java.lang.Exception"
            uuid: "exception"
      valueType: "java.lang.IllegalStateException"
      uuid: "illegalStateException"
      fixed: true
    branches:
    - lineNumber: 262
      expression: "this.resourceLoader != null"
      range: "(262,7)-(262,33)"
      evaluatedAs: false
    - lineNumber: 266
      expression: "StringUtils.hasLength(contextPath)"
      range: "(266,26)-(266,59)"
      evaluatedAs: true
    - lineNumber: 321
      expression: "root != null"
      range: "(321,19)-(321,30)"
      evaluatedAs: true
      internalMethodName: "configureDocumentRoot"
    - lineNumber: 325
      expression: "docBase.isDirectory()"
      range: "(325,29)-(325,49)"
      evaluatedAs: true
      internalMethodName: "configureDocumentRoot"
    - lineNumber: 328
      expression: "root != null"
      range: "(328,19)-(328,30)"
      evaluatedAs: true
      internalMethodName: "configureDocumentRoot"
    - lineNumber: 330
      expression: "for-each(getUrlsOfJarsWithMetaInfResources())"
      range: "(330,30)-(330,64)"
      evaluatedAs: true
      internalMethodName: "configureDocumentRoot"
    - lineNumber: 345
      expression: "\\\"file\\\".equals(url.getProtocol())"
      range: "(345,7)-(345,38)"
      evaluatedAs: true
      internalMethodName: "createResource"
    - lineNumber: 347
      expression: "file.isFile()"
      range: "(347,8)-(347,20)"
      evaluatedAs: true
      internalMethodName: "createResource"
    - lineNumber: 332
      expression: "resource != null"
      range: "(332,9)-(332,24)"
      evaluatedAs: true
      internalMethodName: "configureDocumentRoot"
    - lineNumber: 338
      expression: "catch-exception (Exception)"
      range: "(338,3)-(338,21)"
      evaluatedAs: true
      internalMethodName: "configureDocumentRoot"
    catchBlockExercised:
      idExternalInstruction: 51
      id: 2
      catchExceptions:
      - "java.lang.Exception"
  - pathId: "path20"
    testPathName: "configureWebAppContextWhenSessionSameSiteIsNullAndSessionTimeoutIsNullAndIsNegativeSessionTimeoutAndGetSessionNotIsPers"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "BF3909A1D98CB3C4D3016AFDDEB8E769"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6A13043F3306A60CE4000F64FFF3E1E7"
      valueUuid: "target"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "72654B36C04778F619F8E4F2BF4C3EAB"
      valueUuid: "context"
    - type: "INPUT"
      name: "initializers"
      modelFingerprint: "6BEFA360E7AAB6F6818E0508F15D68E1"
      valueUuid: "initializers"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9212DE2B3A3A58812CCC36B248184E13"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid9):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F66BEE0ABBEDD93735C178BE4A5725AC"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:context,message:uniqueUuid10):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "A7191F368446B0E9CA2482D2C9BC6CCA"
      valueUuid: "context"
      methodExercised:
        expression: "clearAliasChecks():void5"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "0D9C13389D1B148AE27A497C47A09D96"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasLength(str:contextPath):boolean11"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "7027B36B859A5E0E2AB61C27D8D99BE6"
      valueUuid: "context"
      methodExercised:
        expression: "setContextPath(contextPath:uniqueUuid11):void6"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "37F063115E5E07FBDCCD87EA85D5C367"
      valueUuid: "context"
      methodExercised:
        expression: "setDisplayName(servletContextName:string4):void7"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "BB683F3329E628D02D0FDEB6C35A0E54"
      valueUuid: "context"
      methodExercised:
        expression: "getResourceFactory():resourceFactory"
    - type: "LOCAL_VARIABLE"
      name: "resourceFactory"
      modelFingerprint: "0310204EDA4BD1E0809BA8CEAD8F2B7B"
      valueUuid: "resourceFactory"
      methodExercised:
        expression: "newJarFileResource(uri:uRI):resource"
    - type: "STATIC"
      name: "ResourceFactory.class"
      modelFingerprint: "3021CEFB7DD7D27D7EF6FEE924C10251"
      valueUuid: "ResourceFactory.class"
      methodExercised:
        expression: "combine(resources:arrayList8):resource2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "462F93FB5D6673A465A7FFF40C0E4034"
      valueUuid: "context"
      methodExercised:
        expression: "setBaseResource(resourceBase:resource2):void9"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "684C54A8DD76CE93349D4B4AEEA49F1C"
      methodExercised:
        expression: "addDefaultServlet(context:context):void10"
    - type: "FIELD"
      name: "jsp"
      modelFingerprint: "BC40B6967856D04FEC2A77534D4CF8FF"
      valueUuid: "jsp3"
      methodExercised:
        expression: "getRegistered():boolean16"
    - type: "FIELD"
      name: "jsp"
      modelFingerprint: "57EB0C02311BAF4F3BCE1BC22B4D03CA"
      valueUuid: "jsp3"
      methodExercised:
        expression: "getClassName():string6"
    - type: "STATIC"
      name: "ClassUtils.class.real"
      modelFingerprint: "49F0682CAF0A74234FECAD4627386096"
      valueUuid: "ClassUtils.class.real"
      methodExercised:
        expression: "isPresent(className:string6,classLoader:classLoader):boolean17"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "2D07B6131389AEAA5EDCD6911E6866E3"
      methodExercised:
        expression: "addJspServlet(context:context):void11"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "0EBF95028CBE1687022051B379AAF47E"
      valueUuid: "context"
      methodExercised:
        expression: "addBean(o:jasperInitializer,managed:uniqueUuid13):boolean18"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "1D656F2D14FD04B2CBA7A53CC5D13C85"
      valueUuid: "context"
      methodExercised:
        expression: "addLocaleEncoding(locale:string7,encoding:string8):void13"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "47738218A1CB85BAD0A606B17C4E662E"
      methodExercised:
        expression: "getWebAppContextConfigurations(webAppContext:context,initializers:objectArray):configurationArray"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "6C83F3F9D7CF800F534A22394F5B7DAE"
      valueUuid: "context"
      methodExercised:
        expression: "setConfigurations(configurations:configurationArray):void14"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "EE0AF38C81761023CE254A03109C9F70"
      valueUuid: "context"
      methodExercised:
        expression: "setThrowUnavailableOnStartupException(throwIfStartupException:uniqueUuid15):void15"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "57D42F68CDC38E1B4655B3C8A3FB5BE2"
      valueUuid: "context"
      methodExercised:
        expression: "getSessionHandler():sessionHandler"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "8506E3E03C20F8FA206EAA3CD5541E3D"
      valueUuid: "session4"
      methodExercised:
        expression: "getCookie():cookie"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "86190F7D2E4CCFE5FE8F75AD10D86550"
      valueUuid: "cookie"
      methodExercised:
        expression: "getSameSite():sameSite"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "68620D14514BE7845F83C5F75E40B97B"
      valueUuid: "session4"
      methodExercised:
        expression: "getTimeout():timeout"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "E6BEDD7776B1A5BF014A1A0D3B567F3D"
      valueUuid: "sessionHandler"
      methodExercised:
        expression: "setMaxInactiveInterval(seconds:uniqueUuid16):void16"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "21583270C922B9CE2023EF440DBB78B0"
      valueUuid: "session4"
      methodExercised:
        expression: "isPersistent():persistent"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "817D0020B1CC4B07B1FAA40828C2FA55"
      valueUuid: "context"
      methodExercised:
        expression: "setTempDirectory(tempDirectory:file3):void17"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "DefaultSessionCache cache = new DefaultSessionCache(handler);"
      lineNumber: 295
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: documentRoot - Method: getValidDirectory"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/AB"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "int"
            uuid: "port"
        propertiesMap:
          registerDefaultServlet:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "boolean15"
          localeCharsetMappings:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashMap"
              parameters: []
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.util.Locale"
                      parameters:
                      - name: "language"
                        value:
                          sapientType: "BASIC"
                          content: !<regular>
                            value: "language1"
                          valueType: "java.lang.String"
                          uuid: "locale-language"
                    valueType: "java.util.Locale"
                    uuid: "locale"
                    collectionUuid: "map4"
                    nameForMock: "locale"
                  value:
                    sapientType: "OBJECT"
                    content: !<static_method_return>
                      target: "java.nio.charset.Charset"
                      method: "defaultCharset"
                      methodParameters: []
                    valueType: "java.nio.charset.Charset"
                    uuid: "charset"
                    collectionUuid: "map4"
                    nameForMock: "charset"
                valueType: "java.util.Map$Entry"
            valueType: "java.util.Map"
            genericValueType: "java.util.Locale,java.nio.charset.Charset"
            uuid: "map4"
          displayName:
            sapientType: "BASIC"
            content: !<regular>
              value: "displayName1"
            valueType: "java.lang.String"
            uuid: "string4"
          session:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.web.servlet.server.Session"
            uuid: "session4"
          jsp:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.servlet.server.Jsp"
              parameters: []
            valueType: "org.springframework.boot.web.servlet.server.Jsp"
            uuid: "jsp3"
            fixed: true
      valueType: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.servlet.ServletContextInitializer[]"
      uuid: "initializers"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/AB"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid9"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Context must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid10"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean11"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/AB"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/"
      valueType: "java.lang.String"
      uuid: "uniqueUuid11"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "displayName1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.ResourceFactory"
      uuid: "resourceFactory"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.ResourceFactory"
      uuid: "resourceFactory"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.Resource"
      uuid: "resource"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.net.URI"
        method: "create"
        methodParameters:
        - name: "str"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "str1"
            valueType: "java.lang.String"
            uuid: "uRI-str"
      valueType: "java.net.URI"
      uuid: "uRI"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.ResourceFactory"
      uuid: "ResourceFactory.class"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.Resource"
      uuid: "resource2"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.eclipse.jetty.util.resource.Resource"
          uuid: "resource"
      valueType: "java.util.List"
      genericValueType: "org.eclipse.jetty.util.resource.Resource"
      uuid: "arrayList8"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.Resource"
      uuid: "resource2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Jsp"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.server.Jsp"
      uuid: "jsp3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean16"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Jsp"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.server.Jsp"
      uuid: "jsp3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.jasper.servlet.JspServlet"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean17"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.jasper.servlet.JspServlet"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.ClassLoader"
        localVariableValue:
          sapientType: "CLASS"
          content: !<regular>
            value: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
          valueType: "java.lang.Class"
          genericValueType: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
          uuid: "uniqueUuid12"
          fixed: true
        methodParameters: []
        methodName: "getClassLoader"
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void11"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean18"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.embedded.jetty.JasperInitializer"
      uuid: "jasperInitializer"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid13"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void13"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "locale"
      valueType: "java.lang.String"
      uuid: "string7"
    - sapientType: "BASIC"
      content: !<regular>
        value: "charset"
      valueType: "java.lang.String"
      uuid: "string8"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.ee10.webapp.Configuration[]"
      uuid: "configurationArray"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "org.springframework.boot.web.servlet.ServletContextInitializer"
            uuid: "uniqueUuid14"
          1:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "org.springframework.boot.web.servlet.ServletContextInitializer"
            uuid: "object3"
      valueType: "org.springframework.boot.web.servlet.ServletContextInitializer[]"
      uuid: "objectArray"
      collectionUuid: "arrayList9"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void14"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.ee10.webapp.Configuration[]"
      uuid: "configurationArray"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void15"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid15"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.servlet.SessionHandler"
      uuid: "sessionHandler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.server.Session"
      uuid: "session4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Session$Cookie"
        parameters: []
        propertiesMap:
          sameSite:
            sapientType: "NULL"
            valueType: "org.springframework.boot.web.server.Cookie$SameSite"
            uuid: "sameSite"
            fixed: true
      valueType: "org.springframework.boot.web.servlet.server.Session$Cookie"
      uuid: "cookie"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Session$Cookie"
        parameters: []
        propertiesMap:
          sameSite:
            sapientType: "NULL"
            valueType: "org.springframework.boot.web.server.Cookie$SameSite"
            uuid: "sameSite"
            fixed: true
      valueType: "org.springframework.boot.web.servlet.server.Session$Cookie"
      uuid: "cookie"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.web.server.Cookie$SameSite"
      uuid: "sameSite"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.server.Session"
      uuid: "session4"
    - sapientType: "NULL"
      valueType: "java.time.Duration"
      uuid: "timeout"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.servlet.SessionHandler"
      uuid: "sessionHandler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void16"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: -1
      valueType: "int"
      uuid: "uniqueUuid16"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.server.Session"
      uuid: "session4"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "persistent"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void17"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.io.File"
      uuid: "file3"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 262
      expression: "this.resourceLoader != null"
      range: "(262,7)-(262,33)"
      evaluatedAs: false
    - lineNumber: 266
      expression: "StringUtils.hasLength(contextPath)"
      range: "(266,26)-(266,59)"
      evaluatedAs: false
    - lineNumber: 321
      expression: "root != null"
      range: "(321,19)-(321,30)"
      evaluatedAs: false
      internalMethodName: "configureDocumentRoot"
    - lineNumber: 325
      expression: "docBase.isDirectory()"
      range: "(325,29)-(325,49)"
      evaluatedAs: false
      internalMethodName: "configureDocumentRoot"
    - lineNumber: 328
      expression: "root != null"
      range: "(328,19)-(328,30)"
      evaluatedAs: false
      internalMethodName: "configureDocumentRoot"
    - lineNumber: 330
      expression: "for-each(getUrlsOfJarsWithMetaInfResources())"
      range: "(330,30)-(330,64)"
      evaluatedAs: false
      internalMethodName: "configureDocumentRoot"
    - lineNumber: 269
      expression: "isRegisterDefaultServlet()"
      range: "(269,7)-(269,32)"
      evaluatedAs: true
    - lineNumber: 285
      expression: "this.jsp != null"
      range: "(285,10)-(285,25)"
      evaluatedAs: true
      internalMethodName: "shouldRegisterJspServlet"
    - lineNumber: 285
      expression: "this.jsp.getRegistered()"
      range: "(285,30)-(285,53)"
      evaluatedAs: true
      internalMethodName: "shouldRegisterJspServlet"
    - lineNumber: 286
      expression: "ClassUtils.isPresent(this.jsp.getClassName(), getClass().getClassLoader())"
      range: "(286,8)-(286,81)"
      evaluatedAs: true
      internalMethodName: "shouldRegisterJspServlet"
    - lineNumber: 272
      expression: "shouldRegisterJspServlet()"
      range: "(272,7)-(272,32)"
      evaluatedAs: true
    - lineNumber: 289
      expression: "sessionSameSite != null"
      range: "(289,7)-(289,29)"
      evaluatedAs: false
      internalMethodName: "configureSession"
    - lineNumber: 304
      expression: "sessionTimeout == null"
      range: "(304,10)-(304,31)"
      evaluatedAs: true
      internalMethodName: "isNegative"
    - lineNumber: 293
      expression: "isNegative(sessionTimeout)"
      range: "(293,34)-(293,59)"
      evaluatedAs: true
      internalMethodName: "configureSession"
    - lineNumber: 294
      expression: "getSession().isPersistent()"
      range: "(294,7)-(294,33)"
      evaluatedAs: false
      internalMethodName: "configureSession"
    - lineNumber: 314
      expression: "temp != null"
      range: "(314,11)-(314,22)"
      evaluatedAs: false
      internalMethodName: "getTempDirectory"
  - pathId: "path18"
    testPathName: "configureWebAppContextWhenSessionTimeoutIsNullAndIsNegativeSessionTimeoutAndGetSessionNotIsPersistentAndTempIsNull6"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "BB218912F8EF0471E6B67B1351FEAE15"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6A13043F3306A60CE4000F64FFF3E1E7"
      valueUuid: "target"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "72654B36C04778F619F8E4F2BF4C3EAB"
      valueUuid: "context"
    - type: "INPUT"
      name: "initializers"
      modelFingerprint: "6BEFA360E7AAB6F6818E0508F15D68E1"
      valueUuid: "initializers"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9212DE2B3A3A58812CCC36B248184E13"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid17):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F66BEE0ABBEDD93735C178BE4A5725AC"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:context,message:uniqueUuid18):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "A7191F368446B0E9CA2482D2C9BC6CCA"
      valueUuid: "context"
      methodExercised:
        expression: "clearAliasChecks():void5"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "5C389EC4EE358BB1E4B12D7167BD881E"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasLength(str:contextPath):boolean11"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "9D754B396741441DAB17257D6C8B2032"
      valueUuid: "context"
      methodExercised:
        expression: "setContextPath(contextPath:contextPath):void6"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "37F063115E5E07FBDCCD87EA85D5C367"
      valueUuid: "context"
      methodExercised:
        expression: "setDisplayName(servletContextName:string4):void7"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "BB683F3329E628D02D0FDEB6C35A0E54"
      valueUuid: "context"
      methodExercised:
        expression: "getResourceFactory():resourceFactory"
    - type: "LOCAL_VARIABLE"
      name: "resourceFactory"
      modelFingerprint: "0310204EDA4BD1E0809BA8CEAD8F2B7B"
      valueUuid: "resourceFactory"
      methodExercised:
        expression: "newJarFileResource(uri:uRI):resource"
    - type: "LOCAL_VARIABLE"
      name: "urlResourceFactory"
      modelFingerprint: "3653E9A663D944A08095EF1DC089F0BE"
      valueUuid: "uRLResourceFactory"
      methodExercised:
        expression: "newResource(resource:string7):resource2"
    - type: "STATIC"
      name: "ResourceFactory.class"
      modelFingerprint: "F3EC4BA84DAACFFC775BCEF40F48D98D"
      valueUuid: "ResourceFactory.class"
      methodExercised:
        expression: "combine(resources:arrayList8):resource3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "462F93FB5D6673A465A7FFF40C0E4034"
      valueUuid: "context"
      methodExercised:
        expression: "setBaseResource(resourceBase:resource3):void9"
    - type: "FIELD"
      name: "jsp"
      modelFingerprint: "BC40B6967856D04FEC2A77534D4CF8FF"
      valueUuid: "jsp3"
      methodExercised:
        expression: "getRegistered():boolean19"
    - type: "FIELD"
      name: "jsp"
      modelFingerprint: "57EB0C02311BAF4F3BCE1BC22B4D03CA"
      valueUuid: "jsp3"
      methodExercised:
        expression: "getClassName():string8"
    - type: "STATIC"
      name: "ClassUtils.class.real"
      modelFingerprint: "49F0682CAF0A74234FECAD4627386096"
      valueUuid: "ClassUtils.class.real"
      methodExercised:
        expression: "isPresent(className:string8,classLoader:classLoader):boolean20"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "2D07B6131389AEAA5EDCD6911E6866E3"
      methodExercised:
        expression: "addJspServlet(context:context):void10"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "0EBF95028CBE1687022051B379AAF47E"
      valueUuid: "context"
      methodExercised:
        expression: "addBean(o:jasperInitializer,managed:uniqueUuid20):boolean21"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "1D656F2D14FD04B2CBA7A53CC5D13C85"
      valueUuid: "context"
      methodExercised:
        expression: "addLocaleEncoding(locale:string9,encoding:string10):void12"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "47738218A1CB85BAD0A606B17C4E662E"
      methodExercised:
        expression: "getWebAppContextConfigurations(webAppContext:context,initializers:objectArray):configurationArray"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "6C83F3F9D7CF800F534A22394F5B7DAE"
      valueUuid: "context"
      methodExercised:
        expression: "setConfigurations(configurations:configurationArray):void13"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "EE0AF38C81761023CE254A03109C9F70"
      valueUuid: "context"
      methodExercised:
        expression: "setThrowUnavailableOnStartupException(throwIfStartupException:uniqueUuid22):void14"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "57D42F68CDC38E1B4655B3C8A3FB5BE2"
      valueUuid: "context"
      methodExercised:
        expression: "getSessionHandler():sessionHandler"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "8506E3E03C20F8FA206EAA3CD5541E3D"
      valueUuid: "session4"
      methodExercised:
        expression: "getCookie():cookie"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "86190F7D2E4CCFE5FE8F75AD10D86550"
      valueUuid: "cookie"
      methodExercised:
        expression: "getSameSite():sameSite"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "68620D14514BE7845F83C5F75E40B97B"
      valueUuid: "session4"
      methodExercised:
        expression: "getTimeout():timeout"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "E6BEDD7776B1A5BF014A1A0D3B567F3D"
      valueUuid: "sessionHandler"
      methodExercised:
        expression: "setMaxInactiveInterval(seconds:uniqueUuid23):void15"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "21583270C922B9CE2023EF440DBB78B0"
      valueUuid: "session4"
      methodExercised:
        expression: "isPersistent():persistent"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "817D0020B1CC4B07B1FAA40828C2FA55"
      valueUuid: "context"
      methodExercised:
        expression: "setTempDirectory(tempDirectory:file3):void16"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "DefaultSessionCache cache = new DefaultSessionCache(handler);"
      lineNumber: 295
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: documentRoot - Method: getValidDirectory"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/AB"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "int"
            uuid: "port"
        propertiesMap:
          registerDefaultServlet:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "boolean18"
          localeCharsetMappings:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashMap"
              parameters: []
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.util.Locale"
                      parameters:
                      - name: "language"
                        value:
                          sapientType: "BASIC"
                          content: !<regular>
                            value: "language1"
                          valueType: "java.lang.String"
                          uuid: "locale-language"
                    valueType: "java.util.Locale"
                    uuid: "locale"
                    collectionUuid: "map4"
                    nameForMock: "locale"
                  value:
                    sapientType: "OBJECT"
                    content: !<static_method_return>
                      target: "java.nio.charset.Charset"
                      method: "defaultCharset"
                      methodParameters: []
                    valueType: "java.nio.charset.Charset"
                    uuid: "charset"
                    collectionUuid: "map4"
                    nameForMock: "charset"
                valueType: "java.util.Map$Entry"
            valueType: "java.util.Map"
            genericValueType: "java.util.Locale,java.nio.charset.Charset"
            uuid: "map4"
          displayName:
            sapientType: "BASIC"
            content: !<regular>
              value: "displayName1"
            valueType: "java.lang.String"
            uuid: "string4"
          session:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.web.servlet.server.Session"
            uuid: "session4"
          jsp:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.servlet.server.Jsp"
              parameters: []
            valueType: "org.springframework.boot.web.servlet.server.Jsp"
            uuid: "jsp3"
            fixed: true
      valueType: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.servlet.ServletContextInitializer[]"
      uuid: "initializers"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/AB"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid17"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Context must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid18"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean11"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/AB"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/AB"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "displayName1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.ResourceFactory"
      uuid: "resourceFactory"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.ResourceFactory"
      uuid: "resourceFactory"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.Resource"
      uuid: "resource"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.net.URI"
        method: "create"
        methodParameters:
        - name: "str"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "str1"
            valueType: "java.lang.String"
            uuid: "uRI-str"
      valueType: "java.net.URI"
      uuid: "uRI"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.eclipse.jetty.util.resource.URLResourceFactory"
        parameters: []
      valueType: "org.eclipse.jetty.util.resource.URLResourceFactory"
      uuid: "uRLResourceFactory"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.eclipse.jetty.util.resource.Resource"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.eclipse.jetty.util.resource.URLResourceFactory"
            parameters: []
          valueType: "org.eclipse.jetty.util.resource.URLResourceFactory"
          uuid: "uRLResourceFactory"
          fixed: true
        methodParameters:
        - name: "resource"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "objectMETA-INF/resources/"
            valueType: "java.lang.String"
            uuid: "string7"
        methodName: "newResource"
      valueType: "org.eclipse.jetty.util.resource.Resource"
      uuid: "resource2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "objectMETA-INF/resources/"
      valueType: "java.lang.String"
      uuid: "string7"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.ResourceFactory"
      uuid: "ResourceFactory.class"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.Resource"
      uuid: "resource3"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.eclipse.jetty.util.resource.Resource"
          uuid: "resource"
        - sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.eclipse.jetty.util.resource.Resource"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.eclipse.jetty.util.resource.URLResourceFactory"
                parameters: []
              valueType: "org.eclipse.jetty.util.resource.URLResourceFactory"
              uuid: "uRLResourceFactory"
              fixed: true
            methodParameters:
            - name: "resource"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "objectMETA-INF/resources/"
                valueType: "java.lang.String"
                uuid: "string7"
            methodName: "newResource"
          valueType: "org.eclipse.jetty.util.resource.Resource"
          uuid: "resource2"
      valueType: "java.util.List"
      genericValueType: "org.eclipse.jetty.util.resource.Resource"
      uuid: "arrayList8"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.Resource"
      uuid: "resource3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Jsp"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.server.Jsp"
      uuid: "jsp3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean19"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Jsp"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.server.Jsp"
      uuid: "jsp3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.jasper.servlet.JspServlet"
      valueType: "java.lang.String"
      uuid: "string8"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean20"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.jasper.servlet.JspServlet"
      valueType: "java.lang.String"
      uuid: "string8"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.ClassLoader"
        localVariableValue:
          sapientType: "CLASS"
          content: !<regular>
            value: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
          valueType: "java.lang.Class"
          genericValueType: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
          uuid: "uniqueUuid19"
          fixed: true
        methodParameters: []
        methodName: "getClassLoader"
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean21"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.embedded.jetty.JasperInitializer"
      uuid: "jasperInitializer"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid20"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void12"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "locale"
      valueType: "java.lang.String"
      uuid: "string9"
    - sapientType: "BASIC"
      content: !<regular>
        value: "charset"
      valueType: "java.lang.String"
      uuid: "string10"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.ee10.webapp.Configuration[]"
      uuid: "configurationArray"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "org.springframework.boot.web.servlet.ServletContextInitializer"
            uuid: "uniqueUuid21"
          1:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "org.springframework.boot.web.servlet.ServletContextInitializer"
            uuid: "object3"
      valueType: "org.springframework.boot.web.servlet.ServletContextInitializer[]"
      uuid: "objectArray"
      collectionUuid: "arrayList9"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void13"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.ee10.webapp.Configuration[]"
      uuid: "configurationArray"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void14"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid22"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.servlet.SessionHandler"
      uuid: "sessionHandler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.server.Session"
      uuid: "session4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Session$Cookie"
        parameters: []
        propertiesMap:
          sameSite:
            sapientType: "NULL"
            valueType: "org.springframework.boot.web.server.Cookie$SameSite"
            uuid: "sameSite"
            fixed: true
      valueType: "org.springframework.boot.web.servlet.server.Session$Cookie"
      uuid: "cookie"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Session$Cookie"
        parameters: []
        propertiesMap:
          sameSite:
            sapientType: "NULL"
            valueType: "org.springframework.boot.web.server.Cookie$SameSite"
            uuid: "sameSite"
            fixed: true
      valueType: "org.springframework.boot.web.servlet.server.Session$Cookie"
      uuid: "cookie"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.web.server.Cookie$SameSite"
      uuid: "sameSite"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.server.Session"
      uuid: "session4"
    - sapientType: "NULL"
      valueType: "java.time.Duration"
      uuid: "timeout"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.servlet.SessionHandler"
      uuid: "sessionHandler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void15"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: -1
      valueType: "int"
      uuid: "uniqueUuid23"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.server.Session"
      uuid: "session4"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "persistent"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void16"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.io.File"
      uuid: "file3"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 262
      expression: "this.resourceLoader != null"
      range: "(262,7)-(262,33)"
      evaluatedAs: false
    - lineNumber: 266
      expression: "StringUtils.hasLength(contextPath)"
      range: "(266,26)-(266,59)"
      evaluatedAs: true
    - lineNumber: 321
      expression: "root != null"
      range: "(321,19)-(321,30)"
      evaluatedAs: false
      internalMethodName: "configureDocumentRoot"
    - lineNumber: 325
      expression: "docBase.isDirectory()"
      range: "(325,29)-(325,49)"
      evaluatedAs: false
      internalMethodName: "configureDocumentRoot"
    - lineNumber: 328
      expression: "root != null"
      range: "(328,19)-(328,30)"
      evaluatedAs: false
      internalMethodName: "configureDocumentRoot"
    - lineNumber: 330
      expression: "for-each(getUrlsOfJarsWithMetaInfResources())"
      range: "(330,30)-(330,64)"
      evaluatedAs: true
      internalMethodName: "configureDocumentRoot"
    - lineNumber: 345
      expression: "\\\"file\\\".equals(url.getProtocol())"
      range: "(345,7)-(345,38)"
      evaluatedAs: false
      internalMethodName: "createResource"
    - lineNumber: 332
      expression: "resource != null"
      range: "(332,9)-(332,24)"
      evaluatedAs: true
      internalMethodName: "configureDocumentRoot"
    - lineNumber: 269
      expression: "isRegisterDefaultServlet()"
      range: "(269,7)-(269,32)"
      evaluatedAs: false
    - lineNumber: 285
      expression: "this.jsp != null"
      range: "(285,10)-(285,25)"
      evaluatedAs: true
      internalMethodName: "shouldRegisterJspServlet"
    - lineNumber: 285
      expression: "this.jsp.getRegistered()"
      range: "(285,30)-(285,53)"
      evaluatedAs: true
      internalMethodName: "shouldRegisterJspServlet"
    - lineNumber: 286
      expression: "ClassUtils.isPresent(this.jsp.getClassName(), getClass().getClassLoader())"
      range: "(286,8)-(286,81)"
      evaluatedAs: true
      internalMethodName: "shouldRegisterJspServlet"
    - lineNumber: 272
      expression: "shouldRegisterJspServlet()"
      range: "(272,7)-(272,32)"
      evaluatedAs: true
    - lineNumber: 289
      expression: "sessionSameSite != null"
      range: "(289,7)-(289,29)"
      evaluatedAs: false
      internalMethodName: "configureSession"
    - lineNumber: 304
      expression: "sessionTimeout == null"
      range: "(304,10)-(304,31)"
      evaluatedAs: true
      internalMethodName: "isNegative"
    - lineNumber: 293
      expression: "isNegative(sessionTimeout)"
      range: "(293,34)-(293,59)"
      evaluatedAs: true
      internalMethodName: "configureSession"
    - lineNumber: 294
      expression: "getSession().isPersistent()"
      range: "(294,7)-(294,33)"
      evaluatedAs: false
      internalMethodName: "configureSession"
    - lineNumber: 314
      expression: "temp != null"
      range: "(314,11)-(314,22)"
      evaluatedAs: false
      internalMethodName: "getTempDirectory"
  - pathId: "path1"
    testPathName: "configureWebAppContextWhenTempIsNotNull"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "707EE5D5C94EEAA6F5A74CF57472D1C5"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "FB5CE3DE0E3ACDE7C88E691CB788631D"
      valueUuid: "target"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "72654B36C04778F619F8E4F2BF4C3EAB"
      valueUuid: "context"
    - type: "INPUT"
      name: "initializers"
      modelFingerprint: "6BEFA360E7AAB6F6818E0508F15D68E1"
      valueUuid: "initializers"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "B5E7E3C3B5964C7DD000FBA6ACE717D7"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid24):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F66BEE0ABBEDD93735C178BE4A5725AC"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:context,message:uniqueUuid25):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "A7191F368446B0E9CA2482D2C9BC6CCA"
      valueUuid: "context"
      methodExercised:
        expression: "clearAliasChecks():void5"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "5FC120F96BF8549B6587B9FF068CB5E8"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasLength(str:contextPath):boolean11"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "EFD8ED4437DC58A2A70F3727A3C2C42D"
      valueUuid: "context"
      methodExercised:
        expression: "setContextPath(contextPath:contextPath):void6"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "37F063115E5E07FBDCCD87EA85D5C367"
      valueUuid: "context"
      methodExercised:
        expression: "setDisplayName(servletContextName:string4):void7"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "BB683F3329E628D02D0FDEB6C35A0E54"
      valueUuid: "context"
      methodExercised:
        expression: "getResourceFactory():resourceFactory"
    - type: "LOCAL_VARIABLE"
      name: "resourceFactory"
      modelFingerprint: "197B1EDEA16DC7CB54B161D1DAD169AE"
      valueUuid: "resourceFactory"
      methodExercised:
        expression: "newResource(arg0:uRI):resource"
    - type: "LOCAL_VARIABLE"
      name: "resourceFactory"
      modelFingerprint: "48D20563B4E49416B384AA13B8459D12"
      valueUuid: "resourceFactory"
      methodExercised:
        expression: "newResource(resource:string6):resource3"
    - type: "STATIC"
      name: "ResourceFactory.class"
      modelFingerprint: "519438281F577C743C15691AA5387F0F"
      valueUuid: "ResourceFactory.class"
      methodExercised:
        expression: "combine(resources:arrayList8):resource4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "462F93FB5D6673A465A7FFF40C0E4034"
      valueUuid: "context"
      methodExercised:
        expression: "setBaseResource(resourceBase:resource4):void8"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "684C54A8DD76CE93349D4B4AEEA49F1C"
      methodExercised:
        expression: "addDefaultServlet(context:context):void9"
    - type: "FIELD"
      name: "jsp"
      modelFingerprint: "BC40B6967856D04FEC2A77534D4CF8FF"
      valueUuid: "jsp3"
      methodExercised:
        expression: "getRegistered():boolean20"
    - type: "FIELD"
      name: "jsp"
      modelFingerprint: "57EB0C02311BAF4F3BCE1BC22B4D03CA"
      valueUuid: "jsp3"
      methodExercised:
        expression: "getClassName():string7"
    - type: "STATIC"
      name: "ClassUtils.class.real"
      modelFingerprint: "49F0682CAF0A74234FECAD4627386096"
      valueUuid: "ClassUtils.class.real"
      methodExercised:
        expression: "isPresent(className:string7,classLoader:classLoader):boolean21"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "2D07B6131389AEAA5EDCD6911E6866E3"
      methodExercised:
        expression: "addJspServlet(context:context):void10"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "0EBF95028CBE1687022051B379AAF47E"
      valueUuid: "context"
      methodExercised:
        expression: "addBean(o:jasperInitializer,managed:uniqueUuid27):boolean22"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "1D656F2D14FD04B2CBA7A53CC5D13C85"
      valueUuid: "context"
      methodExercised:
        expression: "addLocaleEncoding(locale:string8,encoding:string9):void12"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "47738218A1CB85BAD0A606B17C4E662E"
      methodExercised:
        expression: "getWebAppContextConfigurations(webAppContext:context,initializers:objectArray):configurationArray"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "6C83F3F9D7CF800F534A22394F5B7DAE"
      valueUuid: "context"
      methodExercised:
        expression: "setConfigurations(configurations:configurationArray):void13"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "EE0AF38C81761023CE254A03109C9F70"
      valueUuid: "context"
      methodExercised:
        expression: "setThrowUnavailableOnStartupException(throwIfStartupException:uniqueUuid29):void14"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "57D42F68CDC38E1B4655B3C8A3FB5BE2"
      valueUuid: "context"
      methodExercised:
        expression: "getSessionHandler():sessionHandler"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "8506E3E03C20F8FA206EAA3CD5541E3D"
      valueUuid: "session4"
      methodExercised:
        expression: "getCookie():cookie"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "47126C2FB6BA95C432E55C4FE31D032A"
      valueUuid: "cookie"
      methodExercised:
        expression: "getSameSite():sameSite"
    - type: "STATIC"
      name: "HttpCookie.SameSite.class.real"
      modelFingerprint: "925042CC639E1B6790EA6A0D99187998"
      valueUuid: "HttpCookie.SameSite.class.real"
      methodExercised:
        expression: "valueOf(arg0:string10):httpCookie.SameSite"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "A03A56664716AF66C053873C234FBCDE"
      valueUuid: "sessionHandler"
      methodExercised:
        expression: "setSameSite(sameSite:httpCookie.SameSite):void15"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "960254431C4490776C21B4D3BBAF750A"
      valueUuid: "session4"
      methodExercised:
        expression: "getTimeout():timeout"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "E6BEDD7776B1A5BF014A1A0D3B567F3D"
      valueUuid: "sessionHandler"
      methodExercised:
        expression: "setMaxInactiveInterval(seconds:uniqueUuid30):void16"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "FD02DCDB9186E135F82D5AA5F6F1A27A"
      valueUuid: "session4"
      methodExercised:
        expression: "isPersistent():persistent"
    - type: "LOCAL_VARIABLE"
      name: "store"
      modelFingerprint: "CC9939C357F613457DC13BBFE2593A00"
      valueUuid: "fileSessionDataStore"
      methodExercised:
        expression: "setStoreDir(storeDir:file4):void17"
    - type: "LOCAL_VARIABLE"
      name: "cache"
      modelFingerprint: "2E49E16AA9F75EF5481E070799031CF3"
      valueUuid: "defaultSessionCache"
      methodExercised:
        expression: "setSessionDataStore(sessionStore:fileSessionDataStore):void18"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "F8C27F851A7481170A3C0E63A3617D62"
      valueUuid: "sessionHandler"
      methodExercised:
        expression: "setSessionCache(cache:defaultSessionCache):void19"
    - type: "STATIC"
      name: "WebInfConfiguration.class"
      modelFingerprint: "2E709D9ECD81FC08F6EE6EF6731364BA"
      valueUuid: "WebInfConfiguration.class"
      methodExercised:
        expression: "getCanonicalNameForWebAppTmpDir(context:context):string12"
        staticAccess: true
    - type: "STATIC"
      name: "UUID.class"
      modelFingerprint: "653F740E9937AD204400017352019581"
      valueUuid: "UUID.class"
      methodExercised:
        expression: "randomUUID():uUID"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "049D50BB92CF39368171C531EA7752D9"
      valueUuid: "context"
      methodExercised:
        expression: "setTempDirectory(tempDirectory:file5):void20"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "DefaultSessionCache cache = new DefaultSessionCache(handler);"
      lineNumber: 295
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: documentRoot - Method: getValidDirectory"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/BD"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
        propertiesMap:
          registerDefaultServlet:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "boolean19"
          localeCharsetMappings:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashMap"
              parameters: []
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.util.Locale"
                      parameters:
                      - name: "language"
                        value:
                          sapientType: "BASIC"
                          content: !<regular>
                            value: "language1"
                          valueType: "java.lang.String"
                          uuid: "locale-language"
                    valueType: "java.util.Locale"
                    uuid: "locale"
                    collectionUuid: "map4"
                    nameForMock: "locale"
                  value:
                    sapientType: "OBJECT"
                    content: !<static_method_return>
                      target: "java.nio.charset.Charset"
                      method: "defaultCharset"
                      methodParameters: []
                    valueType: "java.nio.charset.Charset"
                    uuid: "charset"
                    collectionUuid: "map4"
                    nameForMock: "charset"
                valueType: "java.util.Map$Entry"
            valueType: "java.util.Map"
            genericValueType: "java.util.Locale,java.nio.charset.Charset"
            uuid: "map4"
          displayName:
            sapientType: "BASIC"
            content: !<regular>
              value: "displayName1"
            valueType: "java.lang.String"
            uuid: "string4"
          session:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.web.servlet.server.Session"
            uuid: "session4"
          jsp:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.servlet.server.Jsp"
              parameters: []
            valueType: "org.springframework.boot.web.servlet.server.Jsp"
            uuid: "jsp3"
            fixed: true
      valueType: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.servlet.ServletContextInitializer[]"
      uuid: "initializers"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/BD"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid24"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Context must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid25"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean11"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/BD"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/BD"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "displayName1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.ResourceFactory"
      uuid: "resourceFactory"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.ResourceFactory"
      uuid: "resourceFactory"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.Resource"
      uuid: "resource"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.net.URI"
        method: "create"
        methodParameters:
        - name: "str"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "str1"
            valueType: "java.lang.String"
            uuid: "uRI-str"
      valueType: "java.net.URI"
      uuid: "uRI"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.ResourceFactory"
      uuid: "resourceFactory"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.Resource"
      uuid: "resource3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "jar:object2!/META-INF/resources/"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.ResourceFactory"
      uuid: "ResourceFactory.class"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.Resource"
      uuid: "resource4"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.eclipse.jetty.util.resource.Resource"
          uuid: "resource2"
        - sapientType: "MOCK"
          valueType: "org.eclipse.jetty.util.resource.Resource"
          uuid: "resource3"
      valueType: "java.util.List"
      genericValueType: "org.eclipse.jetty.util.resource.Resource"
      uuid: "arrayList8"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.Resource"
      uuid: "resource4"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Jsp"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.server.Jsp"
      uuid: "jsp3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean20"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Jsp"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.server.Jsp"
      uuid: "jsp3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.jasper.servlet.JspServlet"
      valueType: "java.lang.String"
      uuid: "string7"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean21"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.jasper.servlet.JspServlet"
      valueType: "java.lang.String"
      uuid: "string7"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.ClassLoader"
        localVariableValue:
          sapientType: "CLASS"
          content: !<regular>
            value: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
          valueType: "java.lang.Class"
          genericValueType: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
          uuid: "uniqueUuid26"
          fixed: true
        methodParameters: []
        methodName: "getClassLoader"
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean22"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.embedded.jetty.JasperInitializer"
      uuid: "jasperInitializer"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid27"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void12"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "locale"
      valueType: "java.lang.String"
      uuid: "string8"
    - sapientType: "BASIC"
      content: !<regular>
        value: "charset"
      valueType: "java.lang.String"
      uuid: "string9"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.ee10.webapp.Configuration[]"
      uuid: "configurationArray"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "org.springframework.boot.web.servlet.ServletContextInitializer"
            uuid: "uniqueUuid28"
          1:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "org.springframework.boot.web.servlet.ServletContextInitializer"
            uuid: "object3"
      valueType: "org.springframework.boot.web.servlet.ServletContextInitializer[]"
      uuid: "objectArray"
      collectionUuid: "arrayList9"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void13"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.ee10.webapp.Configuration[]"
      uuid: "configurationArray"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void14"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid29"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.servlet.SessionHandler"
      uuid: "sessionHandler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.server.Session"
      uuid: "session4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Session$Cookie"
        parameters: []
        propertiesMap:
          sameSite:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.web.server.Cookie$SameSite"
            uuid: "sameSite"
      valueType: "org.springframework.boot.web.servlet.server.Session$Cookie"
      uuid: "cookie"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Session$Cookie"
        parameters: []
        propertiesMap:
          sameSite:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.web.server.Cookie$SameSite"
            uuid: "sameSite"
      valueType: "org.springframework.boot.web.servlet.server.Session$Cookie"
      uuid: "cookie"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.web.server.Cookie$SameSite"
      uuid: "sameSite"
    - sapientType: "REAL"
      valueType: "org.eclipse.jetty.http.HttpCookie$SameSite"
      uuid: "HttpCookie.SameSite.class.real"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.eclipse.jetty.http.HttpCookie$SameSite"
      uuid: "httpCookie.SameSite"
    - sapientType: "BASIC"
      content: !<regular>
        value: "NONE"
      valueType: "java.lang.String"
      uuid: "string10"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.servlet.SessionHandler"
      uuid: "sessionHandler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void15"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.eclipse.jetty.http.HttpCookie$SameSite"
      uuid: "httpCookie.SameSite"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.server.Session"
      uuid: "session4"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "timeout-days"
      valueType: "java.time.Duration"
      uuid: "timeout"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.servlet.SessionHandler"
      uuid: "sessionHandler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void16"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: -1
      valueType: "int"
      uuid: "uniqueUuid30"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.server.Session"
      uuid: "session4"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "persistent"
    - sapientType: "ANY"
      valueType: "org.eclipse.jetty.session.FileSessionDataStore"
      uuid: "fileSessionDataStore"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void17"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.io.File"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.springframework.boot.web.servlet.server.SessionStoreDirectory"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.boot.web.servlet.server.Session"
                parameters: []
              valueType: "org.springframework.boot.web.servlet.server.Session"
              uuid: "session3"
              fixed: true
            methodParameters: []
            methodName: "getSessionStoreDirectory"
          valueType: "org.springframework.boot.web.servlet.server.SessionStoreDirectory"
          uuid: "sessionStoreDirectory"
        methodParameters:
        - name: "mkdirs"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "uniqueUuid31"
            fixed: true
        methodName: "getValidDirectory"
      valueType: "java.io.File"
      uuid: "file4"
    - sapientType: "ANY"
      valueType: "org.eclipse.jetty.session.DefaultSessionCache"
      uuid: "defaultSessionCache"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void18"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.eclipse.jetty.session.FileSessionDataStore"
      uuid: "fileSessionDataStore"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.servlet.SessionHandler"
      uuid: "sessionHandler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void19"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.eclipse.jetty.session.DefaultSessionCache"
      uuid: "defaultSessionCache"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebInfConfiguration"
      uuid: "WebInfConfiguration.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string12"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "java.util.UUID"
      uuid: "UUID.class"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.util.UUID"
        method: "fromString"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "12345678-0000-abcd-1234-abcdef123456"
            valueType: "java.lang.String"
            uuid: "uniqueUuid32"
            fixed: true
      valueType: "java.util.UUID"
      uuid: "uUID"
      nameForMock: "uUID"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void20"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.io.File"
      uuid: "file5"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 262
      expression: "this.resourceLoader != null"
      range: "(262,7)-(262,33)"
      evaluatedAs: false
    - lineNumber: 266
      expression: "StringUtils.hasLength(contextPath)"
      range: "(266,26)-(266,59)"
      evaluatedAs: true
    - lineNumber: 321
      expression: "root != null"
      range: "(321,19)-(321,30)"
      evaluatedAs: true
      internalMethodName: "configureDocumentRoot"
    - lineNumber: 325
      expression: "docBase.isDirectory()"
      range: "(325,29)-(325,49)"
      evaluatedAs: true
      internalMethodName: "configureDocumentRoot"
    - lineNumber: 328
      expression: "root != null"
      range: "(328,19)-(328,30)"
      evaluatedAs: true
      internalMethodName: "configureDocumentRoot"
    - lineNumber: 330
      expression: "for-each(getUrlsOfJarsWithMetaInfResources())"
      range: "(330,30)-(330,64)"
      evaluatedAs: true
      internalMethodName: "configureDocumentRoot"
    - lineNumber: 345
      expression: "\\\"file\\\".equals(url.getProtocol())"
      range: "(345,7)-(345,38)"
      evaluatedAs: true
      internalMethodName: "createResource"
    - lineNumber: 347
      expression: "file.isFile()"
      range: "(347,8)-(347,20)"
      evaluatedAs: true
      internalMethodName: "createResource"
    - lineNumber: 332
      expression: "resource != null"
      range: "(332,9)-(332,24)"
      evaluatedAs: true
      internalMethodName: "configureDocumentRoot"
    - lineNumber: 269
      expression: "isRegisterDefaultServlet()"
      range: "(269,7)-(269,32)"
      evaluatedAs: true
    - lineNumber: 285
      expression: "this.jsp != null"
      range: "(285,10)-(285,25)"
      evaluatedAs: true
      internalMethodName: "shouldRegisterJspServlet"
    - lineNumber: 285
      expression: "this.jsp.getRegistered()"
      range: "(285,30)-(285,53)"
      evaluatedAs: true
      internalMethodName: "shouldRegisterJspServlet"
    - lineNumber: 286
      expression: "ClassUtils.isPresent(this.jsp.getClassName(), getClass().getClassLoader())"
      range: "(286,8)-(286,81)"
      evaluatedAs: true
      internalMethodName: "shouldRegisterJspServlet"
    - lineNumber: 272
      expression: "shouldRegisterJspServlet()"
      range: "(272,7)-(272,32)"
      evaluatedAs: true
    - lineNumber: 289
      expression: "sessionSameSite != null"
      range: "(289,7)-(289,29)"
      evaluatedAs: true
      internalMethodName: "configureSession"
    - lineNumber: 304
      expression: "sessionTimeout == null"
      range: "(304,10)-(304,31)"
      evaluatedAs: false
      internalMethodName: "isNegative"
    - lineNumber: 304
      expression: "sessionTimeout.isNegative()"
      range: "(304,36)-(304,62)"
      evaluatedAs: true
      internalMethodName: "isNegative"
    - lineNumber: 293
      expression: "isNegative(sessionTimeout)"
      range: "(293,34)-(293,59)"
      evaluatedAs: true
      internalMethodName: "configureSession"
    - lineNumber: 294
      expression: "getSession().isPersistent()"
      range: "(294,7)-(294,33)"
      evaluatedAs: true
      internalMethodName: "configureSession"
    - lineNumber: 314
      expression: "temp != null"
      range: "(314,11)-(314,22)"
      evaluatedAs: true
      internalMethodName: "getTempDirectory"
  - pathId: "path4"
    testPathName: "configureWebAppContextWhenIsNegativeNotSessionTimeoutAndGetSessionNotIsPersistentAndTempIsNull"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "C9924E114D9A7654CCF24343E793C7BA"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "FB5CE3DE0E3ACDE7C88E691CB788631D"
      valueUuid: "target"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "72654B36C04778F619F8E4F2BF4C3EAB"
      valueUuid: "context"
    - type: "INPUT"
      name: "initializers"
      modelFingerprint: "6BEFA360E7AAB6F6818E0508F15D68E1"
      valueUuid: "initializers"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "B5E7E3C3B5964C7DD000FBA6ACE717D7"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid33):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F66BEE0ABBEDD93735C178BE4A5725AC"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:context,message:uniqueUuid34):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "A7191F368446B0E9CA2482D2C9BC6CCA"
      valueUuid: "context"
      methodExercised:
        expression: "clearAliasChecks():void5"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "5FC120F96BF8549B6587B9FF068CB5E8"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasLength(str:contextPath):boolean11"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "EFD8ED4437DC58A2A70F3727A3C2C42D"
      valueUuid: "context"
      methodExercised:
        expression: "setContextPath(contextPath:contextPath):void6"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "37F063115E5E07FBDCCD87EA85D5C367"
      valueUuid: "context"
      methodExercised:
        expression: "setDisplayName(servletContextName:string4):void7"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "BB683F3329E628D02D0FDEB6C35A0E54"
      valueUuid: "context"
      methodExercised:
        expression: "getResourceFactory():resourceFactory"
    - type: "LOCAL_VARIABLE"
      name: "resourceFactory"
      modelFingerprint: "197B1EDEA16DC7CB54B161D1DAD169AE"
      valueUuid: "resourceFactory"
      methodExercised:
        expression: "newResource(arg0:uRI):resource"
    - type: "LOCAL_VARIABLE"
      name: "resourceFactory"
      modelFingerprint: "1A76D4A43CB76D55830B3F9FD98091DE"
      valueUuid: "resourceFactory"
      methodExercised:
        expression: "newResource(resource:string6):resource2"
    - type: "STATIC"
      name: "ResourceFactory.class"
      modelFingerprint: "519438281F577C743C15691AA5387F0F"
      valueUuid: "ResourceFactory.class"
      methodExercised:
        expression: "combine(resources:arrayList8):resource3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "462F93FB5D6673A465A7FFF40C0E4034"
      valueUuid: "context"
      methodExercised:
        expression: "setBaseResource(resourceBase:resource3):void8"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "684C54A8DD76CE93349D4B4AEEA49F1C"
      methodExercised:
        expression: "addDefaultServlet(context:context):void9"
    - type: "FIELD"
      name: "jsp"
      modelFingerprint: "BC40B6967856D04FEC2A77534D4CF8FF"
      valueUuid: "jsp3"
      methodExercised:
        expression: "getRegistered():boolean20"
    - type: "FIELD"
      name: "jsp"
      modelFingerprint: "57EB0C02311BAF4F3BCE1BC22B4D03CA"
      valueUuid: "jsp3"
      methodExercised:
        expression: "getClassName():string7"
    - type: "STATIC"
      name: "ClassUtils.class.real"
      modelFingerprint: "49F0682CAF0A74234FECAD4627386096"
      valueUuid: "ClassUtils.class.real"
      methodExercised:
        expression: "isPresent(className:string7,classLoader:classLoader):boolean21"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "2D07B6131389AEAA5EDCD6911E6866E3"
      methodExercised:
        expression: "addJspServlet(context:context):void10"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "0EBF95028CBE1687022051B379AAF47E"
      valueUuid: "context"
      methodExercised:
        expression: "addBean(o:jasperInitializer,managed:uniqueUuid36):boolean22"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "1D656F2D14FD04B2CBA7A53CC5D13C85"
      valueUuid: "context"
      methodExercised:
        expression: "addLocaleEncoding(locale:string8,encoding:string9):void12"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "47738218A1CB85BAD0A606B17C4E662E"
      methodExercised:
        expression: "getWebAppContextConfigurations(webAppContext:context,initializers:objectArray):configurationArray"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "6C83F3F9D7CF800F534A22394F5B7DAE"
      valueUuid: "context"
      methodExercised:
        expression: "setConfigurations(configurations:configurationArray):void13"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "EE0AF38C81761023CE254A03109C9F70"
      valueUuid: "context"
      methodExercised:
        expression: "setThrowUnavailableOnStartupException(throwIfStartupException:uniqueUuid38):void14"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "57D42F68CDC38E1B4655B3C8A3FB5BE2"
      valueUuid: "context"
      methodExercised:
        expression: "getSessionHandler():sessionHandler"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "8506E3E03C20F8FA206EAA3CD5541E3D"
      valueUuid: "session4"
      methodExercised:
        expression: "getCookie():cookie"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "47126C2FB6BA95C432E55C4FE31D032A"
      valueUuid: "cookie"
      methodExercised:
        expression: "getSameSite():sameSite"
    - type: "STATIC"
      name: "HttpCookie.SameSite.class.real"
      modelFingerprint: "925042CC639E1B6790EA6A0D99187998"
      valueUuid: "HttpCookie.SameSite.class.real"
      methodExercised:
        expression: "valueOf(arg0:string10):httpCookie.SameSite"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "A03A56664716AF66C053873C234FBCDE"
      valueUuid: "sessionHandler"
      methodExercised:
        expression: "setSameSite(sameSite:httpCookie.SameSite):void15"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "960254431C4490776C21B4D3BBAF750A"
      valueUuid: "session4"
      methodExercised:
        expression: "getTimeout():timeout"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "BEF2955BE51B970F5059916DEBB6A978"
      valueUuid: "sessionHandler"
      methodExercised:
        expression: "setMaxInactiveInterval(seconds:int10):void16"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "21583270C922B9CE2023EF440DBB78B0"
      valueUuid: "session4"
      methodExercised:
        expression: "isPersistent():persistent"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "817D0020B1CC4B07B1FAA40828C2FA55"
      valueUuid: "context"
      methodExercised:
        expression: "setTempDirectory(tempDirectory:file4):void17"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "DefaultSessionCache cache = new DefaultSessionCache(handler);"
      lineNumber: 295
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: documentRoot - Method: getValidDirectory"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/BD"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
        propertiesMap:
          registerDefaultServlet:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "boolean19"
          localeCharsetMappings:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashMap"
              parameters: []
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.util.Locale"
                      parameters:
                      - name: "language"
                        value:
                          sapientType: "BASIC"
                          content: !<regular>
                            value: "language1"
                          valueType: "java.lang.String"
                          uuid: "locale-language"
                    valueType: "java.util.Locale"
                    uuid: "locale"
                    collectionUuid: "map4"
                    nameForMock: "locale"
                  value:
                    sapientType: "OBJECT"
                    content: !<static_method_return>
                      target: "java.nio.charset.Charset"
                      method: "defaultCharset"
                      methodParameters: []
                    valueType: "java.nio.charset.Charset"
                    uuid: "charset"
                    collectionUuid: "map4"
                    nameForMock: "charset"
                valueType: "java.util.Map$Entry"
            valueType: "java.util.Map"
            genericValueType: "java.util.Locale,java.nio.charset.Charset"
            uuid: "map4"
          displayName:
            sapientType: "BASIC"
            content: !<regular>
              value: "displayName1"
            valueType: "java.lang.String"
            uuid: "string4"
          session:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.web.servlet.server.Session"
            uuid: "session4"
          jsp:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.servlet.server.Jsp"
              parameters: []
            valueType: "org.springframework.boot.web.servlet.server.Jsp"
            uuid: "jsp3"
            fixed: true
      valueType: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.servlet.ServletContextInitializer[]"
      uuid: "initializers"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/BD"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid33"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Context must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid34"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean11"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/BD"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/BD"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "displayName1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.ResourceFactory"
      uuid: "resourceFactory"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.ResourceFactory"
      uuid: "resourceFactory"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.Resource"
      uuid: "resource"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.net.URI"
        method: "create"
        methodParameters:
        - name: "str"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "str1"
            valueType: "java.lang.String"
            uuid: "uRI-str"
      valueType: "java.net.URI"
      uuid: "uRI"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.ResourceFactory"
      uuid: "resourceFactory"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.Resource"
      uuid: "resource2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "jar:object!/META-INF/resources/"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.ResourceFactory"
      uuid: "ResourceFactory.class"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.Resource"
      uuid: "resource3"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.eclipse.jetty.util.resource.Resource"
          uuid: "resource2"
        - sapientType: "MOCK"
          valueType: "org.eclipse.jetty.util.resource.Resource"
          uuid: "resource2"
      valueType: "java.util.List"
      genericValueType: "org.eclipse.jetty.util.resource.Resource"
      uuid: "arrayList8"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.Resource"
      uuid: "resource3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Jsp"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.server.Jsp"
      uuid: "jsp3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean20"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Jsp"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.server.Jsp"
      uuid: "jsp3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.jasper.servlet.JspServlet"
      valueType: "java.lang.String"
      uuid: "string7"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean21"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.jasper.servlet.JspServlet"
      valueType: "java.lang.String"
      uuid: "string7"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.ClassLoader"
        localVariableValue:
          sapientType: "CLASS"
          content: !<regular>
            value: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
          valueType: "java.lang.Class"
          genericValueType: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
          uuid: "uniqueUuid35"
          fixed: true
        methodParameters: []
        methodName: "getClassLoader"
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean22"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.embedded.jetty.JasperInitializer"
      uuid: "jasperInitializer"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid36"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void12"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "locale"
      valueType: "java.lang.String"
      uuid: "string8"
    - sapientType: "BASIC"
      content: !<regular>
        value: "charset"
      valueType: "java.lang.String"
      uuid: "string9"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.ee10.webapp.Configuration[]"
      uuid: "configurationArray"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "org.springframework.boot.web.servlet.ServletContextInitializer"
            uuid: "uniqueUuid37"
          1:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "org.springframework.boot.web.servlet.ServletContextInitializer"
            uuid: "object3"
      valueType: "org.springframework.boot.web.servlet.ServletContextInitializer[]"
      uuid: "objectArray"
      collectionUuid: "arrayList9"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void13"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.ee10.webapp.Configuration[]"
      uuid: "configurationArray"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void14"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid38"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.servlet.SessionHandler"
      uuid: "sessionHandler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.server.Session"
      uuid: "session4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Session$Cookie"
        parameters: []
        propertiesMap:
          sameSite:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.web.server.Cookie$SameSite"
            uuid: "sameSite"
      valueType: "org.springframework.boot.web.servlet.server.Session$Cookie"
      uuid: "cookie"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Session$Cookie"
        parameters: []
        propertiesMap:
          sameSite:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.web.server.Cookie$SameSite"
            uuid: "sameSite"
      valueType: "org.springframework.boot.web.servlet.server.Session$Cookie"
      uuid: "cookie"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.web.server.Cookie$SameSite"
      uuid: "sameSite"
    - sapientType: "REAL"
      valueType: "org.eclipse.jetty.http.HttpCookie$SameSite"
      uuid: "HttpCookie.SameSite.class.real"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.eclipse.jetty.http.HttpCookie$SameSite"
      uuid: "httpCookie.SameSite"
    - sapientType: "BASIC"
      content: !<regular>
        value: "NONE"
      valueType: "java.lang.String"
      uuid: "string10"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.servlet.SessionHandler"
      uuid: "sessionHandler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void15"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.eclipse.jetty.http.HttpCookie$SameSite"
      uuid: "httpCookie.SameSite"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.server.Session"
      uuid: "session4"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "timeout-days"
      valueType: "java.time.Duration"
      uuid: "timeout"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.servlet.SessionHandler"
      uuid: "sessionHandler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void16"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      originalValueType: "long"
      uuid: "int10"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.server.Session"
      uuid: "session4"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "persistent"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void17"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.io.File"
      uuid: "file4"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 262
      expression: "this.resourceLoader != null"
      range: "(262,7)-(262,33)"
      evaluatedAs: false
    - lineNumber: 266
      expression: "StringUtils.hasLength(contextPath)"
      range: "(266,26)-(266,59)"
      evaluatedAs: true
    - lineNumber: 321
      expression: "root != null"
      range: "(321,19)-(321,30)"
      evaluatedAs: true
      internalMethodName: "configureDocumentRoot"
    - lineNumber: 325
      expression: "docBase.isDirectory()"
      range: "(325,29)-(325,49)"
      evaluatedAs: true
      internalMethodName: "configureDocumentRoot"
    - lineNumber: 328
      expression: "root != null"
      range: "(328,19)-(328,30)"
      evaluatedAs: true
      internalMethodName: "configureDocumentRoot"
    - lineNumber: 330
      expression: "for-each(getUrlsOfJarsWithMetaInfResources())"
      range: "(330,30)-(330,64)"
      evaluatedAs: true
      internalMethodName: "configureDocumentRoot"
    - lineNumber: 345
      expression: "\\\"file\\\".equals(url.getProtocol())"
      range: "(345,7)-(345,38)"
      evaluatedAs: true
      internalMethodName: "createResource"
    - lineNumber: 347
      expression: "file.isFile()"
      range: "(347,8)-(347,20)"
      evaluatedAs: true
      internalMethodName: "createResource"
    - lineNumber: 332
      expression: "resource != null"
      range: "(332,9)-(332,24)"
      evaluatedAs: true
      internalMethodName: "configureDocumentRoot"
    - lineNumber: 269
      expression: "isRegisterDefaultServlet()"
      range: "(269,7)-(269,32)"
      evaluatedAs: true
    - lineNumber: 285
      expression: "this.jsp != null"
      range: "(285,10)-(285,25)"
      evaluatedAs: true
      internalMethodName: "shouldRegisterJspServlet"
    - lineNumber: 285
      expression: "this.jsp.getRegistered()"
      range: "(285,30)-(285,53)"
      evaluatedAs: true
      internalMethodName: "shouldRegisterJspServlet"
    - lineNumber: 286
      expression: "ClassUtils.isPresent(this.jsp.getClassName(), getClass().getClassLoader())"
      range: "(286,8)-(286,81)"
      evaluatedAs: true
      internalMethodName: "shouldRegisterJspServlet"
    - lineNumber: 272
      expression: "shouldRegisterJspServlet()"
      range: "(272,7)-(272,32)"
      evaluatedAs: true
    - lineNumber: 289
      expression: "sessionSameSite != null"
      range: "(289,7)-(289,29)"
      evaluatedAs: true
      internalMethodName: "configureSession"
    - lineNumber: 304
      expression: "sessionTimeout == null"
      range: "(304,10)-(304,31)"
      evaluatedAs: false
      internalMethodName: "isNegative"
    - lineNumber: 304
      expression: "sessionTimeout.isNegative()"
      range: "(304,36)-(304,62)"
      evaluatedAs: false
      internalMethodName: "isNegative"
    - lineNumber: 293
      expression: "isNegative(sessionTimeout)"
      range: "(293,34)-(293,59)"
      evaluatedAs: false
      internalMethodName: "configureSession"
    - lineNumber: 294
      expression: "getSession().isPersistent()"
      range: "(294,7)-(294,33)"
      evaluatedAs: false
      internalMethodName: "configureSession"
    - lineNumber: 314
      expression: "temp != null"
      range: "(314,11)-(314,22)"
      evaluatedAs: false
      internalMethodName: "getTempDirectory"
  - pathId: "path10"
    testPathName: "configureWebAppContextWhenSessionTimeoutIsNullAndIsNegativeSessionTimeoutAndGetSessionNotIsPersistentAndTempIsNull10"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "21461FE75BA1F0D5581F272CC925BFA3"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "63D00339FC66C6D2DE7F46F5FF8F4473"
      valueUuid: "target"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "72654B36C04778F619F8E4F2BF4C3EAB"
      valueUuid: "context"
    - type: "INPUT"
      name: "initializers"
      modelFingerprint: "6BEFA360E7AAB6F6818E0508F15D68E1"
      valueUuid: "initializers"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9212DE2B3A3A58812CCC36B248184E13"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid39):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F66BEE0ABBEDD93735C178BE4A5725AC"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:context,message:uniqueUuid40):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "A7191F368446B0E9CA2482D2C9BC6CCA"
      valueUuid: "context"
      methodExercised:
        expression: "clearAliasChecks():void5"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "5C389EC4EE358BB1E4B12D7167BD881E"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasLength(str:contextPath):boolean11"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "9D754B396741441DAB17257D6C8B2032"
      valueUuid: "context"
      methodExercised:
        expression: "setContextPath(contextPath:contextPath):void6"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "37F063115E5E07FBDCCD87EA85D5C367"
      valueUuid: "context"
      methodExercised:
        expression: "setDisplayName(servletContextName:string4):void7"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "BB683F3329E628D02D0FDEB6C35A0E54"
      valueUuid: "context"
      methodExercised:
        expression: "getResourceFactory():resourceFactory"
    - type: "LOCAL_VARIABLE"
      name: "resourceFactory"
      modelFingerprint: "197B1EDEA16DC7CB54B161D1DAD169AE"
      valueUuid: "resourceFactory"
      methodExercised:
        expression: "newResource(arg0:uRI):resource"
    - type: "LOCAL_VARIABLE"
      name: "resourceFactory"
      modelFingerprint: "90108808DE9760904F07BDA45C1ACFC6"
      valueUuid: "resourceFactory"
      methodExercised:
        expression: "newResource(url:object):resource2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "25D2FC27DAFFF0A1C97744A8017AA859"
      valueUuid: "resource2"
      methodExercised:
        expression: "resolve(arg0:uniqueUuid41):resource3"
    - type: "STATIC"
      name: "ResourceFactory.class"
      modelFingerprint: "3021CEFB7DD7D27D7EF6FEE924C10251"
      valueUuid: "ResourceFactory.class"
      methodExercised:
        expression: "combine(resources:arrayList8):resource4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "462F93FB5D6673A465A7FFF40C0E4034"
      valueUuid: "context"
      methodExercised:
        expression: "setBaseResource(resourceBase:resource4):void8"
    - type: "FIELD"
      name: "jsp"
      modelFingerprint: "BC40B6967856D04FEC2A77534D4CF8FF"
      valueUuid: "jsp3"
      methodExercised:
        expression: "getRegistered():boolean20"
    - type: "FIELD"
      name: "jsp"
      modelFingerprint: "57EB0C02311BAF4F3BCE1BC22B4D03CA"
      valueUuid: "jsp3"
      methodExercised:
        expression: "getClassName():string6"
    - type: "STATIC"
      name: "ClassUtils.class.real"
      modelFingerprint: "49F0682CAF0A74234FECAD4627386096"
      valueUuid: "ClassUtils.class.real"
      methodExercised:
        expression: "isPresent(className:string6,classLoader:classLoader):boolean21"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "2D07B6131389AEAA5EDCD6911E6866E3"
      methodExercised:
        expression: "addJspServlet(context:context):void9"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "0EBF95028CBE1687022051B379AAF47E"
      valueUuid: "context"
      methodExercised:
        expression: "addBean(o:jasperInitializer,managed:uniqueUuid43):boolean22"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "1D656F2D14FD04B2CBA7A53CC5D13C85"
      valueUuid: "context"
      methodExercised:
        expression: "addLocaleEncoding(locale:string7,encoding:string8):void11"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "47738218A1CB85BAD0A606B17C4E662E"
      methodExercised:
        expression: "getWebAppContextConfigurations(webAppContext:context,initializers:objectArray):configurationArray"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "6C83F3F9D7CF800F534A22394F5B7DAE"
      valueUuid: "context"
      methodExercised:
        expression: "setConfigurations(configurations:configurationArray):void12"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "EE0AF38C81761023CE254A03109C9F70"
      valueUuid: "context"
      methodExercised:
        expression: "setThrowUnavailableOnStartupException(throwIfStartupException:uniqueUuid45):void13"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "57D42F68CDC38E1B4655B3C8A3FB5BE2"
      valueUuid: "context"
      methodExercised:
        expression: "getSessionHandler():sessionHandler"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "8506E3E03C20F8FA206EAA3CD5541E3D"
      valueUuid: "session4"
      methodExercised:
        expression: "getCookie():cookie"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "86190F7D2E4CCFE5FE8F75AD10D86550"
      valueUuid: "cookie"
      methodExercised:
        expression: "getSameSite():sameSite"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "68620D14514BE7845F83C5F75E40B97B"
      valueUuid: "session4"
      methodExercised:
        expression: "getTimeout():timeout"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "E6BEDD7776B1A5BF014A1A0D3B567F3D"
      valueUuid: "sessionHandler"
      methodExercised:
        expression: "setMaxInactiveInterval(seconds:uniqueUuid46):void14"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "21583270C922B9CE2023EF440DBB78B0"
      valueUuid: "session4"
      methodExercised:
        expression: "isPersistent():persistent"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "817D0020B1CC4B07B1FAA40828C2FA55"
      valueUuid: "context"
      methodExercised:
        expression: "setTempDirectory(tempDirectory:file4):void15"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "DefaultSessionCache cache = new DefaultSessionCache(handler);"
      lineNumber: 295
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: documentRoot - Method: getValidDirectory"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/AB"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
        propertiesMap:
          registerDefaultServlet:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "boolean19"
          localeCharsetMappings:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashMap"
              parameters: []
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.util.Locale"
                      parameters:
                      - name: "language"
                        value:
                          sapientType: "BASIC"
                          content: !<regular>
                            value: "language1"
                          valueType: "java.lang.String"
                          uuid: "locale-language"
                    valueType: "java.util.Locale"
                    uuid: "locale"
                    collectionUuid: "map4"
                    nameForMock: "locale"
                  value:
                    sapientType: "OBJECT"
                    content: !<static_method_return>
                      target: "java.nio.charset.Charset"
                      method: "defaultCharset"
                      methodParameters: []
                    valueType: "java.nio.charset.Charset"
                    uuid: "charset"
                    collectionUuid: "map4"
                    nameForMock: "charset"
                valueType: "java.util.Map$Entry"
            valueType: "java.util.Map"
            genericValueType: "java.util.Locale,java.nio.charset.Charset"
            uuid: "map4"
          displayName:
            sapientType: "BASIC"
            content: !<regular>
              value: "displayName1"
            valueType: "java.lang.String"
            uuid: "string4"
          session:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.web.servlet.server.Session"
            uuid: "session4"
          jsp:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.servlet.server.Jsp"
              parameters: []
            valueType: "org.springframework.boot.web.servlet.server.Jsp"
            uuid: "jsp3"
            fixed: true
      valueType: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.servlet.ServletContextInitializer[]"
      uuid: "initializers"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/AB"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid39"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Context must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid40"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean11"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/AB"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/AB"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "displayName1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.ResourceFactory"
      uuid: "resourceFactory"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.ResourceFactory"
      uuid: "resourceFactory"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.Resource"
      uuid: "resource"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.net.URI"
        method: "create"
        methodParameters:
        - name: "str"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "str1"
            valueType: "java.lang.String"
            uuid: "uRI-str"
      valueType: "java.net.URI"
      uuid: "uRI"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.ResourceFactory"
      uuid: "resourceFactory"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.Resource"
      uuid: "resource2"
    - sapientType: "MOCK"
      valueType: "java.net.URL"
      uuid: "object"
      collectionUuid: "list"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.Resource"
      uuid: "resource2"
    - sapientType: "NULL"
      valueType: "org.eclipse.jetty.util.resource.Resource"
      uuid: "resource3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "META-INF/resources/"
      valueType: "java.lang.String"
      uuid: "uniqueUuid41"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.ResourceFactory"
      uuid: "ResourceFactory.class"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.Resource"
      uuid: "resource4"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.eclipse.jetty.util.resource.Resource"
          uuid: "resource2"
      valueType: "java.util.List"
      genericValueType: "org.eclipse.jetty.util.resource.Resource"
      uuid: "arrayList8"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.util.resource.Resource"
      uuid: "resource4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Jsp"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.server.Jsp"
      uuid: "jsp3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean20"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Jsp"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.server.Jsp"
      uuid: "jsp3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.jasper.servlet.JspServlet"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean21"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.jasper.servlet.JspServlet"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.ClassLoader"
        localVariableValue:
          sapientType: "CLASS"
          content: !<regular>
            value: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
          valueType: "java.lang.Class"
          genericValueType: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
          uuid: "uniqueUuid42"
          fixed: true
        methodParameters: []
        methodName: "getClassLoader"
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean22"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.embedded.jetty.JasperInitializer"
      uuid: "jasperInitializer"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid43"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void11"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "locale"
      valueType: "java.lang.String"
      uuid: "string7"
    - sapientType: "BASIC"
      content: !<regular>
        value: "charset"
      valueType: "java.lang.String"
      uuid: "string8"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.ee10.webapp.Configuration[]"
      uuid: "configurationArray"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "org.springframework.boot.web.servlet.ServletContextInitializer"
            uuid: "uniqueUuid44"
          1:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "org.springframework.boot.web.servlet.ServletContextInitializer"
            uuid: "object3"
      valueType: "org.springframework.boot.web.servlet.ServletContextInitializer[]"
      uuid: "objectArray"
      collectionUuid: "arrayList9"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void12"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.ee10.webapp.Configuration[]"
      uuid: "configurationArray"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void13"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid45"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.servlet.SessionHandler"
      uuid: "sessionHandler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.server.Session"
      uuid: "session4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Session$Cookie"
        parameters: []
        propertiesMap:
          sameSite:
            sapientType: "NULL"
            valueType: "org.springframework.boot.web.server.Cookie$SameSite"
            uuid: "sameSite"
            fixed: true
      valueType: "org.springframework.boot.web.servlet.server.Session$Cookie"
      uuid: "cookie"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Session$Cookie"
        parameters: []
        propertiesMap:
          sameSite:
            sapientType: "NULL"
            valueType: "org.springframework.boot.web.server.Cookie$SameSite"
            uuid: "sameSite"
            fixed: true
      valueType: "org.springframework.boot.web.servlet.server.Session$Cookie"
      uuid: "cookie"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.web.server.Cookie$SameSite"
      uuid: "sameSite"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.server.Session"
      uuid: "session4"
    - sapientType: "NULL"
      valueType: "java.time.Duration"
      uuid: "timeout"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.servlet.SessionHandler"
      uuid: "sessionHandler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void14"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: -1
      valueType: "int"
      uuid: "uniqueUuid46"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.server.Session"
      uuid: "session4"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "persistent"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void15"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.io.File"
      uuid: "file4"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 262
      expression: "this.resourceLoader != null"
      range: "(262,7)-(262,33)"
      evaluatedAs: false
    - lineNumber: 266
      expression: "StringUtils.hasLength(contextPath)"
      range: "(266,26)-(266,59)"
      evaluatedAs: true
    - lineNumber: 321
      expression: "root != null"
      range: "(321,19)-(321,30)"
      evaluatedAs: true
      internalMethodName: "configureDocumentRoot"
    - lineNumber: 325
      expression: "docBase.isDirectory()"
      range: "(325,29)-(325,49)"
      evaluatedAs: true
      internalMethodName: "configureDocumentRoot"
    - lineNumber: 328
      expression: "root != null"
      range: "(328,19)-(328,30)"
      evaluatedAs: true
      internalMethodName: "configureDocumentRoot"
    - lineNumber: 330
      expression: "for-each(getUrlsOfJarsWithMetaInfResources())"
      range: "(330,30)-(330,64)"
      evaluatedAs: true
      internalMethodName: "configureDocumentRoot"
    - lineNumber: 345
      expression: "\\\"file\\\".equals(url.getProtocol())"
      range: "(345,7)-(345,38)"
      evaluatedAs: true
      internalMethodName: "createResource"
    - lineNumber: 347
      expression: "file.isFile()"
      range: "(347,8)-(347,20)"
      evaluatedAs: false
      internalMethodName: "createResource"
    - lineNumber: 350
      expression: "file.isDirectory()"
      range: "(350,8)-(350,25)"
      evaluatedAs: true
      internalMethodName: "createResource"
    - lineNumber: 332
      expression: "resource != null"
      range: "(332,9)-(332,24)"
      evaluatedAs: false
      internalMethodName: "configureDocumentRoot"
    - lineNumber: 269
      expression: "isRegisterDefaultServlet()"
      range: "(269,7)-(269,32)"
      evaluatedAs: false
    - lineNumber: 285
      expression: "this.jsp != null"
      range: "(285,10)-(285,25)"
      evaluatedAs: true
      internalMethodName: "shouldRegisterJspServlet"
    - lineNumber: 285
      expression: "this.jsp.getRegistered()"
      range: "(285,30)-(285,53)"
      evaluatedAs: true
      internalMethodName: "shouldRegisterJspServlet"
    - lineNumber: 286
      expression: "ClassUtils.isPresent(this.jsp.getClassName(), getClass().getClassLoader())"
      range: "(286,8)-(286,81)"
      evaluatedAs: true
      internalMethodName: "shouldRegisterJspServlet"
    - lineNumber: 272
      expression: "shouldRegisterJspServlet()"
      range: "(272,7)-(272,32)"
      evaluatedAs: true
    - lineNumber: 289
      expression: "sessionSameSite != null"
      range: "(289,7)-(289,29)"
      evaluatedAs: false
      internalMethodName: "configureSession"
    - lineNumber: 304
      expression: "sessionTimeout == null"
      range: "(304,10)-(304,31)"
      evaluatedAs: true
      internalMethodName: "isNegative"
    - lineNumber: 293
      expression: "isNegative(sessionTimeout)"
      range: "(293,34)-(293,59)"
      evaluatedAs: true
      internalMethodName: "configureSession"
    - lineNumber: 294
      expression: "getSession().isPersistent()"
      range: "(294,7)-(294,33)"
      evaluatedAs: false
      internalMethodName: "configureSession"
    - lineNumber: 314
      expression: "temp != null"
      range: "(314,11)-(314,22)"
      evaluatedAs: false
      internalMethodName: "getTempDirectory"
- method:
    name: "addDefaultServlet"
    sourceCodeSignature: "void addDefaultServlet(WebAppContext context)"
    returnType: "void"
    parameters:
    - name: "context"
      type: "org.eclipse.jetty.ee10.webapp.WebAppContext"
    instructionFingerprint: "F3080CFBBF8CF544D86CB8C3C2727D2A"
  paths:
  - pathId: "path1"
    testPathName: "addDefaultServletTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "CF0FB4DC20B89A97B21F873B81823681"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D0537F57C0747EC67E4D50ABD3DCCBDC"
      valueUuid: "target"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "72654B36C04778F619F8E4F2BF4C3EAB"
      valueUuid: "context"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "660067569B9E81496B4AE0FD78CE5F5B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid47):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F66BEE0ABBEDD93735C178BE4A5725AC"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:context,message:uniqueUuid48):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "holder"
      modelFingerprint: "B79957BAFFB98BABBBBFD898EE2360D1"
      valueUuid: "servletHolder"
      methodExercised:
        expression: "setName(name:uniqueUuid49):void5"
    - type: "LOCAL_VARIABLE"
      name: "holder"
      modelFingerprint: "ED27BC78C76D33357975A963F4DC11BC"
      valueUuid: "servletHolder"
      methodExercised:
        expression: "setClassName(className:uniqueUuid50):void6"
    - type: "LOCAL_VARIABLE"
      name: "holder"
      modelFingerprint: "F9D2E0D4B7B0198655804004CD690810"
      valueUuid: "servletHolder"
      methodExercised:
        expression: "setInitParameter(param:uniqueUuid51,value:uniqueUuid52):void7"
    - type: "LOCAL_VARIABLE"
      name: "holder"
      modelFingerprint: "E2F6C2D56532D44C898D24C4379E5437"
      valueUuid: "servletHolder"
      methodExercised:
        expression: "setInitOrder(order:uniqueUuid53):void8"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "ED112CBDB8381ECCDF58514115ABDEE4"
      valueUuid: "context"
      methodExercised:
        expression: "getServletHandler():servletHandler"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EA82A1C4BD900984D2380F68D5B7AB05"
      valueUuid: "servletHandler"
      methodExercised:
        expression: "addServletWithMapping(servlet:servletHolder,pathSpec:uniqueUuid54):void9"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "ED112CBDB8381ECCDF58514115ABDEE4"
      valueUuid: "context"
      methodExercised:
        expression: "getServletHandler():servletHandler2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "CD88B4F9E02C1D505C184582F42713DC"
      valueUuid: "servletHandler2"
      methodExercised:
        expression: "getServletMapping(pathSpec:uniqueUuid55):servletMapping"
    - type: "LOCAL_VARIABLE"
      name: "servletMapping"
      modelFingerprint: "5680F155EB0BCCAADE1FD1D09D770212"
      valueUuid: "servletMapping"
      methodExercised:
        expression: "setFromDefaultDescriptor(fromDefault:uniqueUuid56):void10"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/A"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid47"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Context must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid48"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.eclipse.jetty.ee10.servlet.ServletHolder"
      uuid: "servletHolder"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "default"
      valueType: "java.lang.String"
      uuid: "uniqueUuid49"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.eclipse.jetty.ee10.servlet.ServletHolder"
      uuid: "servletHolder"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.eclipse.jetty.ee10.servlet.DefaultServlet"
      valueType: "java.lang.String"
      uuid: "uniqueUuid50"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.eclipse.jetty.ee10.servlet.ServletHolder"
      uuid: "servletHolder"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "dirAllowed"
      valueType: "java.lang.String"
      uuid: "uniqueUuid51"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "false"
      valueType: "java.lang.String"
      uuid: "uniqueUuid52"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.eclipse.jetty.ee10.servlet.ServletHolder"
      uuid: "servletHolder"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "uniqueUuid53"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.servlet.ServletHandler"
      uuid: "servletHandler"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.servlet.ServletHandler"
      uuid: "servletHandler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.eclipse.jetty.ee10.servlet.ServletHolder"
      uuid: "servletHolder"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/"
      valueType: "java.lang.String"
      uuid: "uniqueUuid54"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.servlet.ServletHandler"
      uuid: "servletHandler2"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.servlet.ServletHandler"
      uuid: "servletHandler2"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.servlet.ServletMapping"
      uuid: "servletMapping"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/"
      valueType: "java.lang.String"
      uuid: "uniqueUuid55"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.servlet.ServletMapping"
      uuid: "servletMapping"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid56"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "addJspServlet"
    sourceCodeSignature: "void addJspServlet(WebAppContext context)"
    returnType: "void"
    parameters:
    - name: "context"
      type: "org.eclipse.jetty.ee10.webapp.WebAppContext"
    instructionFingerprint: "30C5432D010C1A90EABF855DFF940108"
  paths:
  - pathId: "path1"
    testPathName: "addJspServletTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "9D412E0F010077A9CD54642FBB5F3C3A"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D0537F57C0747EC67E4D50ABD3DCCBDC"
      valueUuid: "target"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "72654B36C04778F619F8E4F2BF4C3EAB"
      valueUuid: "context"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "660067569B9E81496B4AE0FD78CE5F5B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid57):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F66BEE0ABBEDD93735C178BE4A5725AC"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:context,message:uniqueUuid58):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "holder"
      modelFingerprint: "C6C03DA6130B20BC43BC74D459775B4A"
      valueUuid: "servletHolder"
      methodExercised:
        expression: "setName(name:uniqueUuid59):void5"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "3BB6FB607E4FF81C26059D85E03363C2"
      valueUuid: "jsp4"
      methodExercised:
        expression: "getClassName():className"
    - type: "LOCAL_VARIABLE"
      name: "holder"
      modelFingerprint: "F35F14CED5E9524489A7A992CEC6872A"
      valueUuid: "servletHolder"
      methodExercised:
        expression: "setClassName(className:className):void6"
    - type: "LOCAL_VARIABLE"
      name: "holder"
      modelFingerprint: "BF46BDF9EA7057DAE5DA152AC0298C1F"
      valueUuid: "servletHolder"
      methodExercised:
        expression: "setInitParameter(param:uniqueUuid60,value:uniqueUuid61):void7"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "50416E95BD086BC063F0D61DFE49C2B4"
      valueUuid: "jsp4"
      methodExercised:
        expression: "getInitParameters():initParameters"
    - type: "LOCAL_VARIABLE"
      name: "holder"
      modelFingerprint: "BFA469983328CDF812D03C4562349C60"
      valueUuid: "servletHolder"
      methodExercised:
        expression: "setInitParameters(map:initParameters):void8"
    - type: "LOCAL_VARIABLE"
      name: "holder"
      modelFingerprint: "31418D27BC2E11BDE5D15D9D4D026610"
      valueUuid: "servletHolder"
      methodExercised:
        expression: "setInitOrder(order:uniqueUuid62):void9"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "ED112CBDB8381ECCDF58514115ABDEE4"
      valueUuid: "context"
      methodExercised:
        expression: "getServletHandler():servletHandler"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "5D48F8B59FBF547B93CFDE731643C3D6"
      valueUuid: "servletHandler"
      methodExercised:
        expression: "addServlet(holder:servletHolder):void10"
    - type: "LOCAL_VARIABLE"
      name: "mapping"
      modelFingerprint: "DAA86814E2EB662C343B14E9BEDD6116"
      valueUuid: "servletMapping"
      methodExercised:
        expression: "setServletName(servletName:uniqueUuid63):void11"
    - type: "LOCAL_VARIABLE"
      name: "mapping"
      modelFingerprint: "8AE9596E26F7B6F17598A3EBE23E8949"
      valueUuid: "servletMapping"
      methodExercised:
        expression: "setPathSpecs(pathSpecs:stringArray):void12"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "ED112CBDB8381ECCDF58514115ABDEE4"
      valueUuid: "context"
      methodExercised:
        expression: "getServletHandler():servletHandler2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "0FBB6B60912629B940518EF03C6485CE"
      valueUuid: "servletHandler2"
      methodExercised:
        expression: "addServletMapping(mapping:servletMapping):void13"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "holder.setInitParameters(getJsp().getInitParameters());"
      lineNumber: 383
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: holder - Method: setInitParameters"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/A"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
        propertiesMap:
          jsp:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.servlet.server.Jsp"
              parameters: []
              propertiesMap:
                initParameters:
                  sapientType: "COLLECTION"
                  content: !<collection>
                    parameters: []
                    values: []
                  valueType: "java.util.Map"
                  genericValueType: "java.lang.String,java.lang.String"
                  uuid: "initParameters"
                className:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "B"
                  valueType: "java.lang.String"
                  uuid: "className"
            valueType: "org.springframework.boot.web.servlet.server.Jsp"
            uuid: "jsp4"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid57"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Context must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid58"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.eclipse.jetty.ee10.servlet.ServletHolder"
      uuid: "servletHolder"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "jsp"
      valueType: "java.lang.String"
      uuid: "uniqueUuid59"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Jsp"
        parameters: []
        propertiesMap:
          initParameters:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Map"
            genericValueType: "java.lang.String,java.lang.String"
            uuid: "initParameters"
          className:
            sapientType: "BASIC"
            content: !<regular>
              value: "B"
            valueType: "java.lang.String"
            uuid: "className"
      valueType: "org.springframework.boot.web.servlet.server.Jsp"
      uuid: "jsp4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "className"
    - sapientType: "ANY"
      valueType: "org.eclipse.jetty.ee10.servlet.ServletHolder"
      uuid: "servletHolder"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "className"
    - sapientType: "ANY"
      valueType: "org.eclipse.jetty.ee10.servlet.ServletHolder"
      uuid: "servletHolder"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "fork"
      valueType: "java.lang.String"
      uuid: "uniqueUuid60"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "false"
      valueType: "java.lang.String"
      uuid: "uniqueUuid61"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Jsp"
        parameters: []
        propertiesMap:
          initParameters:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Map"
            genericValueType: "java.lang.String,java.lang.String"
            uuid: "initParameters"
          className:
            sapientType: "BASIC"
            content: !<regular>
              value: "B"
            valueType: "java.lang.String"
            uuid: "className"
      valueType: "org.springframework.boot.web.servlet.server.Jsp"
      uuid: "jsp4"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "initParameters"
    - sapientType: "ANY"
      valueType: "org.eclipse.jetty.ee10.servlet.ServletHolder"
      uuid: "servletHolder"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.String"
      uuid: "initParameters"
    - sapientType: "ANY"
      valueType: "org.eclipse.jetty.ee10.servlet.ServletHolder"
      uuid: "servletHolder"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 3
      valueType: "int"
      uuid: "uniqueUuid62"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.servlet.ServletHandler"
      uuid: "servletHandler"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.servlet.ServletHandler"
      uuid: "servletHandler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.eclipse.jetty.ee10.servlet.ServletHolder"
      uuid: "servletHolder"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.eclipse.jetty.ee10.servlet.ServletMapping"
      uuid: "servletMapping"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void11"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "jsp"
      valueType: "java.lang.String"
      uuid: "uniqueUuid63"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.eclipse.jetty.ee10.servlet.ServletMapping"
      uuid: "servletMapping"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void12"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "*.jsp"
            valueType: "java.lang.String"
            uuid: "uniqueUuid64"
            fixed: true
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: "*.jspx"
            valueType: "java.lang.String"
            uuid: "uniqueUuid65"
            fixed: true
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.servlet.ServletHandler"
      uuid: "servletHandler2"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.servlet.ServletHandler"
      uuid: "servletHandler2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void13"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.eclipse.jetty.ee10.servlet.ServletMapping"
      uuid: "servletMapping"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "getWebAppContextConfigurations"
    sourceCodeSignature: "Configuration[] getWebAppContextConfigurations(WebAppContext\
      \ webAppContext, ServletContextInitializer... initializers)"
    returnType: "org.eclipse.jetty.ee10.webapp.Configuration[]"
    parameters:
    - name: "webAppContext"
      type: "org.eclipse.jetty.ee10.webapp.WebAppContext"
    - name: "initializers"
      type: "org.springframework.boot.web.servlet.ServletContextInitializer[]"
    instructionFingerprint: "BE4B491BBE62227474B74C112605EAF1"
  paths:
  - pathId: "path1"
    testPathName: "getWebAppContextConfigurationsTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "60CAA84C353C3BDBC71C8EFC8DB0D14E"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D0537F57C0747EC67E4D50ABD3DCCBDC"
      valueUuid: "target"
    - type: "INPUT"
      name: "webAppContext"
      modelFingerprint: "A294208335ED246F7B63547C428ABE38"
      valueUuid: "webAppContext"
    - type: "INPUT"
      name: "initializers"
      modelFingerprint: "E913114F17D6180B3869B590B6A735C6"
      valueUuid: "initializers"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "660067569B9E81496B4AE0FD78CE5F5B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid66):void3"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "C389E4B4C5D2084B48082485D32ACFB3"
      methodExercised:
        expression: "getServletContextInitializerConfiguration(webAppContext:webAppContext,initializers:initializers):configuration"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "0D1BA8A1BB6254AEF0777A06B2DE9F93"
      valueUuid: "objectArrayNotNull"
    disabled: false
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/A"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "webAppContext"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.servlet.ServletContextInitializer[]"
      uuid: "initializers"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid66"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.Configuration"
      uuid: "configuration"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "webAppContext"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.servlet.ServletContextInitializer[]"
      uuid: "initializers"
    - sapientType: "NOT_NULL"
      valueType: "org.eclipse.jetty.ee10.webapp.Configuration[]"
      uuid: "objectArrayNotNull"
      fixed: true
      collectionUuid: "arrayList8"
- method:
    name: "getServletContextInitializerConfiguration"
    sourceCodeSignature: "Configuration getServletContextInitializerConfiguration(WebAppContext\
      \ webAppContext, ServletContextInitializer... initializers)"
    returnType: "org.eclipse.jetty.ee10.webapp.Configuration"
    parameters:
    - name: "webAppContext"
      type: "org.eclipse.jetty.ee10.webapp.WebAppContext"
    - name: "initializers"
      type: "org.springframework.boot.web.servlet.ServletContextInitializer[]"
    instructionFingerprint: "E57DC07AF774AD73F8B5B040D94D9A50"
  paths:
  - pathId: "path1"
    testPathName: "getServletContextInitializerConfigurationTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "CB0610D01C1C54B3006F7CB9BFE318B5"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D0537F57C0747EC67E4D50ABD3DCCBDC"
      valueUuid: "target"
    - type: "INPUT"
      name: "webAppContext"
      modelFingerprint: "A294208335ED246F7B63547C428ABE38"
      valueUuid: "webAppContext"
    - type: "INPUT"
      name: "initializers"
      modelFingerprint: "E913114F17D6180B3869B590B6A735C6"
      valueUuid: "initializers"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "660067569B9E81496B4AE0FD78CE5F5B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid67):void3"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "0117E3FDDCFE6300400B14C7E8CE634D"
      valueUuid: "servletContextInitializerConfiguration"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/A"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.ee10.webapp.WebAppContext"
      uuid: "webAppContext"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.servlet.ServletContextInitializer[]"
      uuid: "initializers"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid67"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.ServletContextInitializerConfiguration"
        parameters:
        - name: "initializers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.boot.web.servlet.ServletContextInitializer[]"
            uuid: "initializers"
      valueType: "org.springframework.boot.web.embedded.jetty.ServletContextInitializerConfiguration"
      uuid: "servletContextInitializerConfiguration"
      fixed: true
- method:
    name: "postProcessWebAppContext"
    sourceCodeSignature: "void postProcessWebAppContext(WebAppContext webAppContext)"
    returnType: "void"
    parameters:
    - name: "webAppContext"
      type: "org.eclipse.jetty.ee10.webapp.WebAppContext"
    instructionFingerprint: "90AFAF8A822CD3868BA4BCFEEB472610"
  paths:
  - pathId: "path1"
    testPathName: "postProcessWebAppContextTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "BE0FA0DDE5B57A0479562C41C24FDBDA"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "getJettyWebServer"
    sourceCodeSignature: "JettyWebServer getJettyWebServer(Server server)"
    returnType: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
    parameters:
    - name: "server"
      type: "org.eclipse.jetty.server.Server"
    instructionFingerprint: "6BD7EB9A74DFF8E94783A13E85BAA24A"
  paths:
  - pathId: "path1"
    testPathName: "getJettyWebServerWhenGetPortGreaterThanOrEqualsTo0"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "2C1268205058AAC64438C36F77CE22F7"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "54D42027743508BBFF57ED048E9C9185"
      valueUuid: "target"
    - type: "INPUT"
      name: "server"
      modelFingerprint: "AA17278BCD9EBF405FE6044E6267D0B6"
      valueUuid: "server"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "660067569B9E81496B4AE0FD78CE5F5B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid69):void3"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C78413916B23997ABC1FAA157FA96F43"
      valueUuid: "jettyWebServer"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/A"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid69"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
        parameters:
        - name: "server"
          value:
            sapientType: "MOCK"
            valueType: "org.eclipse.jetty.server.Server"
            uuid: "server"
        - name: "autoStart"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "uniqueUuid70"
            fixed: true
      valueType: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
      uuid: "jettyWebServer"
      fixed: true
    branches:
    - lineNumber: 475
      expression: "getPort() >= 0"
      range: "(475,37)-(475,50)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "getJettyWebServerWhenGetPortLessThan0"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "A77E7DC88A14EDAA6AE1F94C7FBBBD51"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "58386D8A9FDA78F231D156F223AB2FE3"
      valueUuid: "target"
    - type: "INPUT"
      name: "server"
      modelFingerprint: "AA17278BCD9EBF405FE6044E6267D0B6"
      valueUuid: "server"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "660067569B9E81496B4AE0FD78CE5F5B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid71):void3"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C78413916B23997ABC1FAA157FA96F43"
      valueUuid: "jettyWebServer"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/A"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: -1
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid71"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
        parameters:
        - name: "server"
          value:
            sapientType: "MOCK"
            valueType: "org.eclipse.jetty.server.Server"
            uuid: "server"
        - name: "autoStart"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "uniqueUuid72"
            fixed: true
      valueType: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
      uuid: "jettyWebServer"
      fixed: true
    branches:
    - lineNumber: 475
      expression: "getPort() >= 0"
      range: "(475,37)-(475,50)"
      evaluatedAs: false
- method:
    name: "setResourceLoader"
    sourceCodeSignature: "void setResourceLoader(ResourceLoader resourceLoader)"
    returnType: "void"
    parameters:
    - name: "resourceLoader"
      type: "org.springframework.core.io.ResourceLoader"
    instructionFingerprint: "0F90C90467FB97988859369F75A05019"
  paths:
  - pathId: "path1"
    testPathName: "setResourceLoaderTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "9146056BC92B84A9A41C2DE1A833CC77"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setUseForwardHeaders"
    sourceCodeSignature: "void setUseForwardHeaders(boolean useForwardHeaders)"
    returnType: "void"
    parameters:
    - name: "useForwardHeaders"
      type: "boolean"
    instructionFingerprint: "F73A56C7419C7966712F0ADD8F9504F9"
  paths:
  - pathId: "path1"
    testPathName: "setUseForwardHeadersTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "2C88292BB2D5E56A4CBC8A573BED6DE2"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setAcceptors"
    sourceCodeSignature: "void setAcceptors(int acceptors)"
    returnType: "void"
    parameters:
    - name: "acceptors"
      type: "int"
    instructionFingerprint: "637BE46155E44A1CC9831ABD415BFA12"
  paths:
  - pathId: "path1"
    testPathName: "setAcceptorsTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "D0BC799E18BE607607DA79FFB95B11B5"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setSelectors"
    sourceCodeSignature: "void setSelectors(int selectors)"
    returnType: "void"
    parameters:
    - name: "selectors"
      type: "int"
    instructionFingerprint: "C031A1E8DFF6D9BB9B8ED74EFB577BD1"
  paths:
  - pathId: "path1"
    testPathName: "setSelectorsTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "DC817AED0FBCEE3E372C8CE56C599777"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setMaxConnections"
    sourceCodeSignature: "void setMaxConnections(int maxConnections)"
    returnType: "void"
    parameters:
    - name: "maxConnections"
      type: "int"
    instructionFingerprint: "6259A62068C53C3AB09B48A9482C0679"
  paths:
  - pathId: "path1"
    testPathName: "setMaxConnectionsTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "78BFCF4763748CB1EA6D2FFDD303B76B"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setServerCustomizers"
    sourceCodeSignature: "void setServerCustomizers(Collection<? extends JettyServerCustomizer>\
      \ customizers)"
    returnType: "void"
    parameters:
    - name: "customizers"
      type: "java.util.Collection"
    instructionFingerprint: "2A7A08E674CFF9F605C852D6B74BCDC5"
  paths:
  - pathId: "path1"
    testPathName: "setServerCustomizersTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "C377EE5B1AA7F23E08A9F868C58CBB96"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D0537F57C0747EC67E4D50ABD3DCCBDC"
      valueUuid: "target"
    - type: "INPUT"
      name: "customizers"
      modelFingerprint: "92AF2353460B58CB0ED2FBFC201E8F34"
      valueUuid: "customizers"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "660067569B9E81496B4AE0FD78CE5F5B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid78):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "E23D8D5B46745AB3EEBEF6A78114D234"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:customizers,message:uniqueUuid79):void4"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/A"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "? extends org.springframework.boot.web.embedded.jetty.JettyServerCustomizer"
      uuid: "customizers"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid78"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "? extends org.springframework.boot.web.embedded.jetty.JettyServerCustomizer"
      uuid: "customizers"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Customizers must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid79"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "getServerCustomizers"
    sourceCodeSignature: "Collection<JettyServerCustomizer> getServerCustomizers()"
    returnType: "java.util.Collection"
    genericReturnType: "org.springframework.boot.web.embedded.jetty.JettyServerCustomizer"
    instructionFingerprint: "0B080027785FBE52C019A5650868CB0C"
  paths:
  - pathId: "path1"
    testPathName: "getServerCustomizersTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "3F81360DFF5D7D5751030EC4936E3A5B"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D0537F57C0747EC67E4D50ABD3DCCBDC"
      valueUuid: "target"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "660067569B9E81496B4AE0FD78CE5F5B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid80):void3"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "AD81440BCEAA61840CDBCAC82CB484AC"
      valueUuid: "linkedHashSet4"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/A"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid80"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.LinkedHashSet"
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "org.springframework.boot.web.embedded.jetty.JettyServerCustomizer"
      uuid: "linkedHashSet4"
- method:
    name: "addServerCustomizers"
    sourceCodeSignature: "void addServerCustomizers(JettyServerCustomizer... customizers)"
    returnType: "void"
    parameters:
    - name: "customizers"
      type: "org.springframework.boot.web.embedded.jetty.JettyServerCustomizer[]"
    instructionFingerprint: "3E6182AA1E2593A03930784EA9D60420"
  paths:
  - pathId: "path1"
    testPathName: "addServerCustomizersTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "8F6DF4B2DC177DD9B6C5E18CB3857C13"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D0537F57C0747EC67E4D50ABD3DCCBDC"
      valueUuid: "target"
    - type: "INPUT"
      name: "customizers"
      modelFingerprint: "F35CEC64C7DA67FFB7B614D343D41378"
      valueUuid: "customizers"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "660067569B9E81496B4AE0FD78CE5F5B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid81):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F41A7591FFFB0AB035C4780DA2A256B6"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:customizers,message:uniqueUuid82):void4"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/A"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.embedded.jetty.JettyServerCustomizer[]"
      uuid: "customizers"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid81"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.embedded.jetty.JettyServerCustomizer[]"
      uuid: "customizers"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Customizers must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid82"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "setConfigurations"
    sourceCodeSignature: "void setConfigurations(Collection<? extends Configuration>\
      \ configurations)"
    returnType: "void"
    parameters:
    - name: "configurations"
      type: "java.util.Collection"
    instructionFingerprint: "C77F4DEF31B80A29CFB3D81193BF9250"
  paths:
  - pathId: "path1"
    testPathName: "setConfigurationsTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "EAAFE96F34B218A84AC13D74AA5FC8CE"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D0537F57C0747EC67E4D50ABD3DCCBDC"
      valueUuid: "target"
    - type: "INPUT"
      name: "configurations"
      modelFingerprint: "B69D5CEB83885EAE69D17FC42D733A24"
      valueUuid: "configurations"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "660067569B9E81496B4AE0FD78CE5F5B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid83):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "BAD8AABE7DDA4ACC0C1225882598FC1C"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:configurations,message:uniqueUuid84):void4"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    - type: "STATE_VERIFICATION_FIELD"
      name: "configurations"
      modelFingerprint: "9521B83400AD4250EAD602770789673B"
      valueUuid: "arrayList8"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/A"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "? extends org.eclipse.jetty.ee10.webapp.Configuration"
      uuid: "configurations"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid83"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "? extends org.eclipse.jetty.ee10.webapp.Configuration"
      uuid: "configurations"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Configurations must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid84"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters:
        - name: "c"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Collection"
            genericValueType: "? extends org.eclipse.jetty.ee10.webapp.Configuration"
            uuid: "configurations"
        values: []
      valueType: "java.util.List"
      genericValueType: "org.eclipse.jetty.ee10.webapp.Configuration"
      uuid: "arrayList8"
- method:
    name: "getConfigurations"
    sourceCodeSignature: "Collection<Configuration> getConfigurations()"
    returnType: "java.util.Collection"
    genericReturnType: "org.eclipse.jetty.ee10.webapp.Configuration"
    instructionFingerprint: "D48AFC624688399EE17E64E11FE3050D"
  paths:
  - pathId: "path1"
    testPathName: "getConfigurationsTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "D76289271C1FCF511867A871B79E2226"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D0537F57C0747EC67E4D50ABD3DCCBDC"
      valueUuid: "target"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "660067569B9E81496B4AE0FD78CE5F5B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid85):void3"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "AFD8DB0A97868683390B7BC9CCC63A2D"
      valueUuid: "arrayList7"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/A"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid85"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "org.eclipse.jetty.ee10.webapp.Configuration"
      uuid: "arrayList7"
- method:
    name: "addConfigurations"
    sourceCodeSignature: "void addConfigurations(Configuration... configurations)"
    returnType: "void"
    parameters:
    - name: "configurations"
      type: "org.eclipse.jetty.ee10.webapp.Configuration[]"
    instructionFingerprint: "62BC9D5BCD6345FD472C259A66BD66FD"
  paths:
  - pathId: "path1"
    testPathName: "addConfigurationsTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "F0FA9DDC1BA127F446D173D1CFE0AC01"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D0537F57C0747EC67E4D50ABD3DCCBDC"
      valueUuid: "target"
    - type: "INPUT"
      name: "configurations"
      modelFingerprint: "139F5034348790E0137CFE2673D48CF1"
      valueUuid: "configurations"
    - type: "STATIC"
      name: "MimeMappings.class.real"
      modelFingerprint: "C24A371F05227D5671D2F9D22D300703"
      valueUuid: "MimeMappings.class.real"
      methodExercised:
        expression: "lazyCopy(mappings:mimeMappings):mimeMappings4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "660067569B9E81496B4AE0FD78CE5F5B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextPath,message:uniqueUuid86):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1F37E1B0BB487CF277D54820214D4BD1"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:configurations,message:uniqueUuid87):void4"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
        parameters:
        - name: "contextPath"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "/A"
            valueType: "java.lang.String"
            uuid: "contextPath"
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.ee10.webapp.Configuration[]"
      uuid: "configurations"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "MimeMappings.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        method: "lazyCopy"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.web.server.MimeMappings"
              fieldName: "DEFAULT"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mimeMappings"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings4"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.web.server.MimeMappings"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/A"
      valueType: "java.lang.String"
      uuid: "contextPath"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextPath must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid86"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.ee10.webapp.Configuration[]"
      uuid: "configurations"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Configurations must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid87"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "getThreadPool"
    sourceCodeSignature: "ThreadPool getThreadPool()"
    returnType: "org.eclipse.jetty.util.thread.ThreadPool"
    instructionFingerprint: "A4CAB44551564A42F9B9FF5EFEB77814"
  paths:
  - pathId: "path1"
    testPathName: "getThreadPoolTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "98B122A59E49B81746024023C5C2ABD1"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setThreadPool"
    sourceCodeSignature: "void setThreadPool(ThreadPool threadPool)"
    returnType: "void"
    parameters:
    - name: "threadPool"
      type: "org.eclipse.jetty.util.thread.ThreadPool"
    instructionFingerprint: "A5A580AB3AEB24102B898E781A552DE7"
  paths:
  - pathId: "path1"
    testPathName: "setThreadPoolTest"
    constructorSignature: "<init>(java.lang.String,int) : void"
    modelFingerprint: "222292FD8C10BB6FC935F20E170085CE"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
