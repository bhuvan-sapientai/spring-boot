---
modelFingerprint: "3790AB1579E078D070C3977ACE1371DC"
targetClass:
  fullClassName: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
methods:
- method:
    name: "start"
    sourceCodeSignature: "void start()"
    returnType: "void"
    throwsExceptions:
    - "org.springframework.boot.web.server.WebServerException"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 3
      catchExceptions:
      - "java.io.IOException"
    - idExternalInstruction: 0
      id: 4
      catchExceptions:
      - "org.springframework.boot.web.server.WebServerException"
    - idExternalInstruction: 0
      id: 5
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "30EB0884DE9888401F16D7CE6A4FBDBA"
  paths:
  - pathId: "path1"
    testPathName: "startWhenThisNotAutoStart"
    constructorSignature: "<init>(org.eclipse.jetty.server.Server,boolean) : void"
    modelFingerprint: "74776F2F2C44466A7051B813D9DA660B"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "EC28E0DB9A737143273090F29DCC59B4"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1DD9BCCDFABE47201E040AB4E74E6432"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:server,message:uniqueUuid1):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "FBE1C5EE99570CAAA61ED3FC210AB982"
      valueUuid: "server"
      methodExercised:
        expression: "getHandler():handler"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "5054362DB415C6390CF1D831B27411E7"
      valueUuid: "server"
      methodExercised:
        expression: "getConnectors():connectorArray"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "0BD465DFE2A69E84814DB40CCC4C7A64"
      valueUuid: "server"
      methodExercised:
        expression: "setConnectors(connectors:uniqueUuid2):void2"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "8185A7DC7A07402089C13B050A76804B"
      valueUuid: "server"
      methodExercised:
        expression: "start():void3"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "739223AF5BFBB3C3D70BB54A7B4BBCE1"
      valueUuid: "server"
      methodExercised:
        expression: "setStopAtShutdown(stop:uniqueUuid3):void4"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "5015F0882FF4BB69EB5955FB321291C6"
      valueUuid: "server"
      methodExercised:
        expression: "setConnectors(connectors:connectorArray):void5"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
        parameters:
        - name: "server"
          value:
            sapientType: "MOCK"
            valueType: "org.eclipse.jetty.server.Server"
            uuid: "server"
        - name: "autoStart"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "autoStart"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Jetty Server must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "NULL"
      valueType: "org.eclipse.jetty.server.handler.StatisticsHandler"
      uuid: "handler"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "NULL"
      uuid: "uniqueUuid2"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 144
      expression: "this.started"
      range: "(144,8)-(144,19)"
      evaluatedAs: false
    - lineNumber: 148
      expression: "!this.autoStart"
      range: "(148,8)-(148,22)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "startWhenHandlerInstanceOfJettyEmbeddedWebAppContextAndConnectorsIsNotEmpty"
    constructorSignature: "<init>(org.eclipse.jetty.server.Server,boolean) : void"
    modelFingerprint: "28B8DE9E39DD8D8058CB1AB0E2BFF432"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "AA14150E131C81E81AD4BFAE19FCE1E2"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "DE440A87E24678BC015FA549A9663A76"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:server,message:uniqueUuid1):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "759C55345AFFB4F51571A83EC0EE1A7E"
      valueUuid: "server"
      methodExercised:
        expression: "getHandler():handler"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "DC18FE889E5C55272BE30615CD9204A4"
      valueUuid: "server"
      methodExercised:
        expression: "getConnectors():connectorArray"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "B049513DA5A73CD4798705C89922E78B"
      valueUuid: "server"
      methodExercised:
        expression: "setConnectors(connectors:uniqueUuid2):void2"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "F94CAE95A16A4C29E941345D400D1B20"
      valueUuid: "server"
      methodExercised:
        expression: "start():void3"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "EF59C7AFCFC23F25009D7700FF402947"
      valueUuid: "server"
      methodExercised:
        expression: "setStopAtShutdown(stop:uniqueUuid3):void4"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "B4498ECFD387B5E5C0C73BD2ABD56F37"
      valueUuid: "server"
      methodExercised:
        expression: "setConnectors(connectors:connectorArray):void5"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "F94CAE95A16A4C29E941345D400D1B20"
      valueUuid: "server"
      methodExercised:
        expression: "start():void6"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "79C1021080C19CE756543BD7A0A2BE21"
      valueUuid: "server"
      methodExercised:
        expression: "getHandlers():list"
    - type: "LOCAL_VARIABLE"
      name: "jettyEmbeddedWebAppContext"
      modelFingerprint: "07E64A54FC96A249EDEBB52A7D45FBF1"
      valueUuid: "object2"
      methodExercised:
        expression: "deferredInitialize():void7"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "4DDDBFD4BC49A4BE4E8FAA6A867AFE34"
      valueUuid: "server"
      methodExercised:
        expression: "getConnectors():connectorArray2"
    - type: "LOCAL_VARIABLE"
      name: "connector"
      modelFingerprint: "8F08ECDD9DCB6614E2E5183BBD33E170"
      valueUuid: "connector"
      methodExercised:
        expression: "start():void8"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "C89E504FBAA71781FEC4C6EAB1AC3C78"
      methodExercised:
        expression: "getStartedLogMessage():string"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
        parameters:
        - name: "server"
          value:
            sapientType: "MOCK"
            valueType: "org.eclipse.jetty.server.Server"
            uuid: "server"
        - name: "autoStart"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "autoStart"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Jetty Server must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "NULL"
      valueType: "org.eclipse.jetty.server.handler.StatisticsHandler"
      uuid: "handler"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "NULL"
      uuid: "uniqueUuid2"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.web.embedded.jetty.JettyEmbeddedWebAppContext"
          uuid: "object2"
          collectionUuid: "list"
      valueType: "java.util.List"
      genericValueType: "org.eclipse.jetty.server.Handler"
      uuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyEmbeddedWebAppContext"
      uuid: "object2"
      collectionUuid: "list"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.eclipse.jetty.server.Connector"
            uuid: "connector"
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray2"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Connector"
      uuid: "connector"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getStartedLogMessage1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 144
      expression: "this.started"
      range: "(144,8)-(144,19)"
      evaluatedAs: false
    - lineNumber: 148
      expression: "!this.autoStart"
      range: "(148,8)-(148,22)"
      evaluatedAs: false
    - lineNumber: 153
      expression: "for-each(this.server.getHandlers())"
      range: "(153,28)-(153,52)"
      evaluatedAs: true
    - lineNumber: 239
      expression: "handler instanceof JettyEmbeddedWebAppContext jettyEmbeddedWebAppContext"
      range: "(239,7)-(239,78)"
      evaluatedAs: true
      internalMethodName: "handleDeferredInitialize"
    - lineNumber: 157
      expression: "for-each(connectors)"
      range: "(157,32)-(157,41)"
      evaluatedAs: true
  - pathId: "path14"
    testPathName: "startWhenConnectorsIsNotEmptyAndCaughtWebServerExceptionThrowsWebServerException"
    constructorSignature: "<init>(org.eclipse.jetty.server.Server,boolean) : void"
    modelFingerprint: "3D39FA2CF635816F31B3232E788BEB3B"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "AA14150E131C81E81AD4BFAE19FCE1E2"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "DE440A87E24678BC015FA549A9663A76"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:server,message:uniqueUuid1):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "759C55345AFFB4F51571A83EC0EE1A7E"
      valueUuid: "server"
      methodExercised:
        expression: "getHandler():handler"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "DC18FE889E5C55272BE30615CD9204A4"
      valueUuid: "server"
      methodExercised:
        expression: "getConnectors():connectorArray"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "B049513DA5A73CD4798705C89922E78B"
      valueUuid: "server"
      methodExercised:
        expression: "setConnectors(connectors:uniqueUuid2):void2"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "F94CAE95A16A4C29E941345D400D1B20"
      valueUuid: "server"
      methodExercised:
        expression: "start():void3"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "EF59C7AFCFC23F25009D7700FF402947"
      valueUuid: "server"
      methodExercised:
        expression: "setStopAtShutdown(stop:uniqueUuid3):void4"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "B4498ECFD387B5E5C0C73BD2ABD56F37"
      valueUuid: "server"
      methodExercised:
        expression: "setConnectors(connectors:connectorArray):void5"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "F94CAE95A16A4C29E941345D400D1B20"
      valueUuid: "server"
      methodExercised:
        expression: "start():void6"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "79C1021080C19CE756543BD7A0A2BE21"
      valueUuid: "server"
      methodExercised:
        expression: "getHandlers():list"
    - type: "LOCAL_VARIABLE"
      name: "jettyEmbeddedWebAppContext"
      modelFingerprint: "07E64A54FC96A249EDEBB52A7D45FBF1"
      valueUuid: "object2"
      methodExercised:
        expression: "deferredInitialize():void7"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "4DDDBFD4BC49A4BE4E8FAA6A867AFE34"
      valueUuid: "server"
      methodExercised:
        expression: "getConnectors():connectorArray2"
    - type: "LOCAL_VARIABLE"
      name: "connector"
      modelFingerprint: "8F08ECDD9DCB6614E2E5183BBD33E170"
      valueUuid: "connector"
      methodExercised:
        expression: "start():void8"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "C6D8ED736B29E359320F915A8BF65EDF"
      methodExercised:
        expression: "getStartedLogMessage():string"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "58FBE6D0766DCDFAFA146E474CB83AAE"
      valueUuid: "server"
      methodExercised:
        expression: "stop():void9"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2E0E5E7134A608D6344E37DE48C964A8"
      valueUuid: "string"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
        parameters:
        - name: "server"
          value:
            sapientType: "MOCK"
            valueType: "org.eclipse.jetty.server.Server"
            uuid: "server"
        - name: "autoStart"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "autoStart"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Jetty Server must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "NULL"
      valueType: "org.eclipse.jetty.server.handler.StatisticsHandler"
      uuid: "handler"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "NULL"
      uuid: "uniqueUuid2"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.web.embedded.jetty.JettyEmbeddedWebAppContext"
          uuid: "object2"
          collectionUuid: "list"
      valueType: "java.util.List"
      genericValueType: "org.eclipse.jetty.server.Handler"
      uuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyEmbeddedWebAppContext"
      uuid: "object2"
      collectionUuid: "list"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.eclipse.jetty.server.Connector"
            uuid: "connector"
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray2"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Connector"
      uuid: "connector"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "EXCEPTION"
      valueType: "org.springframework.boot.web.server.WebServerException"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "EXCEPTION"
      valueType: "org.springframework.boot.web.server.WebServerException"
      uuid: "string"
    branches:
    - lineNumber: 144
      expression: "this.started"
      range: "(144,8)-(144,19)"
      evaluatedAs: false
    - lineNumber: 148
      expression: "!this.autoStart"
      range: "(148,8)-(148,22)"
      evaluatedAs: false
    - lineNumber: 153
      expression: "for-each(this.server.getHandlers())"
      range: "(153,28)-(153,52)"
      evaluatedAs: true
    - lineNumber: 239
      expression: "handler instanceof JettyEmbeddedWebAppContext jettyEmbeddedWebAppContext"
      range: "(239,7)-(239,78)"
      evaluatedAs: true
      internalMethodName: "handleDeferredInitialize"
    - lineNumber: 157
      expression: "for-each(connectors)"
      range: "(157,32)-(157,41)"
      evaluatedAs: true
    - lineNumber: 171
      expression: "catch-exception (WebServerException)"
      range: "(171,4)-(171,31)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 4
      catchExceptions:
      - "org.springframework.boot.web.server.WebServerException"
  - pathId: "path11"
    testPathName: "startWhenConnectorsIsEmptyAndCaughtIOException"
    constructorSignature: "<init>(org.eclipse.jetty.server.Server,boolean) : void"
    modelFingerprint: "55D4443597E301A6A1BA195C2D9B2225"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "50CE836A5FAB250D7C7C3C736FB04166"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1DD9BCCDFABE47201E040AB4E74E6432"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:server,message:uniqueUuid10):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "FBE1C5EE99570CAAA61ED3FC210AB982"
      valueUuid: "server"
      methodExercised:
        expression: "getHandler():handler"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "5054362DB415C6390CF1D831B27411E7"
      valueUuid: "server"
      methodExercised:
        expression: "getConnectors():connectorArray"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "0BD465DFE2A69E84814DB40CCC4C7A64"
      valueUuid: "server"
      methodExercised:
        expression: "setConnectors(connectors:uniqueUuid11):void2"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "8185A7DC7A07402089C13B050A76804B"
      valueUuid: "server"
      methodExercised:
        expression: "start():void3"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "739223AF5BFBB3C3D70BB54A7B4BBCE1"
      valueUuid: "server"
      methodExercised:
        expression: "setStopAtShutdown(stop:uniqueUuid12):void4"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "5015F0882FF4BB69EB5955FB321291C6"
      valueUuid: "server"
      methodExercised:
        expression: "setConnectors(connectors:connectorArray):void5"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "8185A7DC7A07402089C13B050A76804B"
      valueUuid: "server"
      methodExercised:
        expression: "start():void6"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "EB8C48A9E13F42F234DE1DB007287458"
      valueUuid: "server"
      methodExercised:
        expression: "getHandlers():list"
    - type: "LOCAL_VARIABLE"
      name: "jettyEmbeddedWebAppContext"
      modelFingerprint: "07E64A54FC96A249EDEBB52A7D45FBF1"
      valueUuid: "object2"
      methodExercised:
        expression: "deferredInitialize():void7"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "59A31DB4B1F84E66B48637FB8E9D3856"
      valueUuid: "server"
      methodExercised:
        expression: "getConnectors():connectorArray2"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "C89E504FBAA71781FEC4C6EAB1AC3C78"
      methodExercised:
        expression: "getStartedLogMessage():string"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "DEPENDENCY_TO_THROW_EXCEPTION_NOT_FOUND"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
        parameters:
        - name: "server"
          value:
            sapientType: "MOCK"
            valueType: "org.eclipse.jetty.server.Server"
            uuid: "server"
        - name: "autoStart"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "autoStart"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Jetty Server must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid10"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "NULL"
      valueType: "org.eclipse.jetty.server.handler.StatisticsHandler"
      uuid: "handler"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "NULL"
      uuid: "uniqueUuid11"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid12"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.web.embedded.jetty.JettyEmbeddedWebAppContext"
          uuid: "object2"
          collectionUuid: "list"
      valueType: "java.util.List"
      genericValueType: "org.eclipse.jetty.server.Handler"
      uuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyEmbeddedWebAppContext"
      uuid: "object2"
      collectionUuid: "list"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getStartedLogMessage1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 144
      expression: "this.started"
      range: "(144,8)-(144,19)"
      evaluatedAs: false
    - lineNumber: 148
      expression: "!this.autoStart"
      range: "(148,8)-(148,22)"
      evaluatedAs: false
    - lineNumber: 153
      expression: "for-each(this.server.getHandlers())"
      range: "(153,28)-(153,52)"
      evaluatedAs: true
    - lineNumber: 239
      expression: "handler instanceof JettyEmbeddedWebAppContext jettyEmbeddedWebAppContext"
      range: "(239,7)-(239,78)"
      evaluatedAs: true
      internalMethodName: "handleDeferredInitialize"
    - lineNumber: 157
      expression: "for-each(connectors)"
      range: "(157,32)-(157,41)"
      evaluatedAs: false
    - lineNumber: 161
      expression: "catch-exception (IOException)"
      range: "(161,6)-(161,26)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 3
      catchExceptions:
      - "java.io.IOException"
  - pathId: "path4"
    testPathName: "startWhenHandlerInstanceOfHandlerWrapperAndConnectorsIsEmpty"
    constructorSignature: "<init>(org.eclipse.jetty.server.Server,boolean) : void"
    modelFingerprint: "411EF3AD74AB12F3AC131440EAB584D2"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "50CE836A5FAB250D7C7C3C736FB04166"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1DD9BCCDFABE47201E040AB4E74E6432"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:server,message:uniqueUuid13):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "FBE1C5EE99570CAAA61ED3FC210AB982"
      valueUuid: "server"
      methodExercised:
        expression: "getHandler():handler"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "5054362DB415C6390CF1D831B27411E7"
      valueUuid: "server"
      methodExercised:
        expression: "getConnectors():connectorArray"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "0BD465DFE2A69E84814DB40CCC4C7A64"
      valueUuid: "server"
      methodExercised:
        expression: "setConnectors(connectors:uniqueUuid14):void2"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "8185A7DC7A07402089C13B050A76804B"
      valueUuid: "server"
      methodExercised:
        expression: "start():void3"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "739223AF5BFBB3C3D70BB54A7B4BBCE1"
      valueUuid: "server"
      methodExercised:
        expression: "setStopAtShutdown(stop:uniqueUuid15):void4"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "5015F0882FF4BB69EB5955FB321291C6"
      valueUuid: "server"
      methodExercised:
        expression: "setConnectors(connectors:connectorArray):void5"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "8185A7DC7A07402089C13B050A76804B"
      valueUuid: "server"
      methodExercised:
        expression: "start():void6"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "D55AE4D394494963D70D6BC02C544ED7"
      valueUuid: "server"
      methodExercised:
        expression: "getHandlers():list"
    - type: "LOCAL_VARIABLE"
      name: "handlerWrapper"
      modelFingerprint: "8BB3508B6CF43FFE77A1ED9D7529D14A"
      valueUuid: "object2"
      methodExercised:
        expression: "getHandler():handler2"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "59A31DB4B1F84E66B48637FB8E9D3856"
      valueUuid: "server"
      methodExercised:
        expression: "getConnectors():connectorArray2"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "C89E504FBAA71781FEC4C6EAB1AC3C78"
      methodExercised:
        expression: "getStartedLogMessage():string"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_INTERNAL_METHOD_RECURSIVE_CALL"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
        parameters:
        - name: "server"
          value:
            sapientType: "MOCK"
            valueType: "org.eclipse.jetty.server.Server"
            uuid: "server"
        - name: "autoStart"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "autoStart"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Jetty Server must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid13"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "NULL"
      valueType: "org.eclipse.jetty.server.handler.StatisticsHandler"
      uuid: "handler"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "NULL"
      uuid: "uniqueUuid14"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid15"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.eclipse.jetty.server.Handler$Wrapper"
          uuid: "object2"
          collectionUuid: "list"
      valueType: "java.util.List"
      genericValueType: "org.eclipse.jetty.server.Handler"
      uuid: "list"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Handler$Wrapper"
      uuid: "object2"
      collectionUuid: "list"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Handler"
      uuid: "handler2"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getStartedLogMessage1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 144
      expression: "this.started"
      range: "(144,8)-(144,19)"
      evaluatedAs: false
    - lineNumber: 148
      expression: "!this.autoStart"
      range: "(148,8)-(148,22)"
      evaluatedAs: false
    - lineNumber: 153
      expression: "for-each(this.server.getHandlers())"
      range: "(153,28)-(153,52)"
      evaluatedAs: true
    - lineNumber: 239
      expression: "handler instanceof JettyEmbeddedWebAppContext jettyEmbeddedWebAppContext"
      range: "(239,7)-(239,78)"
      evaluatedAs: false
      internalMethodName: "handleDeferredInitialize"
    - lineNumber: 242
      expression: "handler instanceof Handler.Wrapper handlerWrapper"
      range: "(242,12)-(242,60)"
      evaluatedAs: true
      internalMethodName: "handleDeferredInitialize"
    - lineNumber: 157
      expression: "for-each(connectors)"
      range: "(157,32)-(157,41)"
      evaluatedAs: false
  - pathId: "path10"
    testPathName: "startWhenCaughtIOExceptionAndConnectorNotInstanceOfNetworkConnectorThrowsWebServerException"
    constructorSignature: "<init>(org.eclipse.jetty.server.Server,boolean) : void"
    modelFingerprint: "411287EE34EDC3DA7B7109ACB345EC70"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "50CE836A5FAB250D7C7C3C736FB04166"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1DD9BCCDFABE47201E040AB4E74E6432"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:server,message:uniqueUuid16):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "FBE1C5EE99570CAAA61ED3FC210AB982"
      valueUuid: "server"
      methodExercised:
        expression: "getHandler():handler"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "5054362DB415C6390CF1D831B27411E7"
      valueUuid: "server"
      methodExercised:
        expression: "getConnectors():connectorArray"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "0BD465DFE2A69E84814DB40CCC4C7A64"
      valueUuid: "server"
      methodExercised:
        expression: "setConnectors(connectors:uniqueUuid17):void2"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "8185A7DC7A07402089C13B050A76804B"
      valueUuid: "server"
      methodExercised:
        expression: "start():void3"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "739223AF5BFBB3C3D70BB54A7B4BBCE1"
      valueUuid: "server"
      methodExercised:
        expression: "setStopAtShutdown(stop:uniqueUuid18):void4"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "5015F0882FF4BB69EB5955FB321291C6"
      valueUuid: "server"
      methodExercised:
        expression: "setConnectors(connectors:connectorArray):void5"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "8185A7DC7A07402089C13B050A76804B"
      valueUuid: "server"
      methodExercised:
        expression: "start():void6"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "EB8C48A9E13F42F234DE1DB007287458"
      valueUuid: "server"
      methodExercised:
        expression: "getHandlers():list"
    - type: "LOCAL_VARIABLE"
      name: "jettyEmbeddedWebAppContext"
      modelFingerprint: "07E64A54FC96A249EDEBB52A7D45FBF1"
      valueUuid: "object2"
      methodExercised:
        expression: "deferredInitialize():void7"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "8C7C238111048F488D8AC828BADB2013"
      valueUuid: "server"
      methodExercised:
        expression: "getConnectors():connectorArray2"
    - type: "LOCAL_VARIABLE"
      name: "connector"
      modelFingerprint: "8F08ECDD9DCB6614E2E5183BBD33E170"
      valueUuid: "connector"
      methodExercised:
        expression: "start():void8"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "C38A8DF8639358486A443BD4D86C89C1"
      valueUuid: "server"
      methodExercised:
        expression: "stop():void9"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "4FA5950D132255F772C9FE28A76DF937"
      valueUuid: "webServerException"
    disabled: true
    failureReason:
      reason: "DEPENDENCY_TO_THROW_EXCEPTION_NOT_FOUND"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
        parameters:
        - name: "server"
          value:
            sapientType: "MOCK"
            valueType: "org.eclipse.jetty.server.Server"
            uuid: "server"
        - name: "autoStart"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "autoStart"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Jetty Server must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid16"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "NULL"
      valueType: "org.eclipse.jetty.server.handler.StatisticsHandler"
      uuid: "handler"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "NULL"
      uuid: "uniqueUuid17"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid18"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.web.embedded.jetty.JettyEmbeddedWebAppContext"
          uuid: "object2"
          collectionUuid: "list"
      valueType: "java.util.List"
      genericValueType: "org.eclipse.jetty.server.Handler"
      uuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyEmbeddedWebAppContext"
      uuid: "object2"
      collectionUuid: "list"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.eclipse.jetty.server.Connector"
            uuid: "connector"
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray2"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Connector"
      uuid: "connector"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.springframework.boot.web.server.WebServerException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Unable to start embedded Jetty server"
            valueType: "java.lang.String"
            uuid: "uniqueUuid19"
            fixed: true
        - name: "cause"
          value:
            sapientType: "EXCEPTION"
            content: !<new>
              target: "java.io.IOException"
              parameters: []
            valueType: "java.io.IOException"
            uuid: "iOException"
      valueType: "org.springframework.boot.web.server.WebServerException"
      uuid: "webServerException"
      fixed: true
    branches:
    - lineNumber: 144
      expression: "this.started"
      range: "(144,8)-(144,19)"
      evaluatedAs: false
    - lineNumber: 148
      expression: "!this.autoStart"
      range: "(148,8)-(148,22)"
      evaluatedAs: false
    - lineNumber: 153
      expression: "for-each(this.server.getHandlers())"
      range: "(153,28)-(153,52)"
      evaluatedAs: true
    - lineNumber: 239
      expression: "handler instanceof JettyEmbeddedWebAppContext jettyEmbeddedWebAppContext"
      range: "(239,7)-(239,78)"
      evaluatedAs: true
      internalMethodName: "handleDeferredInitialize"
    - lineNumber: 157
      expression: "for-each(connectors)"
      range: "(157,32)-(157,41)"
      evaluatedAs: true
    - lineNumber: 161
      expression: "catch-exception (IOException)"
      range: "(161,6)-(161,26)"
      evaluatedAs: true
    - lineNumber: 162
      expression: "connector instanceof NetworkConnector networkConnector"
      range: "(162,11)-(162,64)"
      evaluatedAs: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 3
      catchExceptions:
      - "java.io.IOException"
  - pathId: "path5"
    testPathName: "startWhenHandlersIsNotEmptyAndConnectorsIsEmpty"
    constructorSignature: "<init>(org.eclipse.jetty.server.Server,boolean) : void"
    modelFingerprint: "1CF197574480F596BC6C49C6D9F748D2"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "50CE836A5FAB250D7C7C3C736FB04166"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1DD9BCCDFABE47201E040AB4E74E6432"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:server,message:uniqueUuid20):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "FBE1C5EE99570CAAA61ED3FC210AB982"
      valueUuid: "server"
      methodExercised:
        expression: "getHandler():handler"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "5054362DB415C6390CF1D831B27411E7"
      valueUuid: "server"
      methodExercised:
        expression: "getConnectors():connectorArray"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "0BD465DFE2A69E84814DB40CCC4C7A64"
      valueUuid: "server"
      methodExercised:
        expression: "setConnectors(connectors:uniqueUuid21):void2"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "8185A7DC7A07402089C13B050A76804B"
      valueUuid: "server"
      methodExercised:
        expression: "start():void3"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "739223AF5BFBB3C3D70BB54A7B4BBCE1"
      valueUuid: "server"
      methodExercised:
        expression: "setStopAtShutdown(stop:uniqueUuid22):void4"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "5015F0882FF4BB69EB5955FB321291C6"
      valueUuid: "server"
      methodExercised:
        expression: "setConnectors(connectors:connectorArray):void5"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "8185A7DC7A07402089C13B050A76804B"
      valueUuid: "server"
      methodExercised:
        expression: "start():void6"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "BCCAF1E82823D08C3EC0318A4A7DA038"
      valueUuid: "server"
      methodExercised:
        expression: "getHandlers():list"
    - type: "LOCAL_VARIABLE"
      name: "handlerCollection"
      modelFingerprint: "B32FF78CF69FCB6BC405FEC7FDD02A25"
      valueUuid: "object2"
      methodExercised:
        expression: "getHandlers():list2"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "59A31DB4B1F84E66B48637FB8E9D3856"
      valueUuid: "server"
      methodExercised:
        expression: "getConnectors():connectorArray2"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "C89E504FBAA71781FEC4C6EAB1AC3C78"
      methodExercised:
        expression: "getStartedLogMessage():string"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_INTERNAL_METHOD_RECURSIVE_CALL"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
        parameters:
        - name: "server"
          value:
            sapientType: "MOCK"
            valueType: "org.eclipse.jetty.server.Server"
            uuid: "server"
        - name: "autoStart"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "autoStart"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Jetty Server must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid20"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "NULL"
      valueType: "org.eclipse.jetty.server.handler.StatisticsHandler"
      uuid: "handler"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "NULL"
      uuid: "uniqueUuid21"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid22"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.eclipse.jetty.server.Handler$Collection"
          uuid: "object2"
          collectionUuid: "list"
      valueType: "java.util.List"
      genericValueType: "org.eclipse.jetty.server.Handler"
      uuid: "list"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Handler$Collection"
      uuid: "object2"
      collectionUuid: "list"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.eclipse.jetty.server.Handler"
          uuid: "object3"
          collectionUuid: "list2"
      valueType: "java.util.List"
      genericValueType: "org.eclipse.jetty.server.Handler"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getStartedLogMessage1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 144
      expression: "this.started"
      range: "(144,8)-(144,19)"
      evaluatedAs: false
    - lineNumber: 148
      expression: "!this.autoStart"
      range: "(148,8)-(148,22)"
      evaluatedAs: false
    - lineNumber: 153
      expression: "for-each(this.server.getHandlers())"
      range: "(153,28)-(153,52)"
      evaluatedAs: true
    - lineNumber: 239
      expression: "handler instanceof JettyEmbeddedWebAppContext jettyEmbeddedWebAppContext"
      range: "(239,7)-(239,78)"
      evaluatedAs: false
      internalMethodName: "handleDeferredInitialize"
    - lineNumber: 242
      expression: "handler instanceof Handler.Wrapper handlerWrapper"
      range: "(242,12)-(242,60)"
      evaluatedAs: false
      internalMethodName: "handleDeferredInitialize"
    - lineNumber: 245
      expression: "handler instanceof Handler.Collection handlerCollection"
      range: "(245,12)-(245,66)"
      evaluatedAs: true
      internalMethodName: "handleDeferredInitialize"
    - lineNumber: 233
      expression: "for-each(handlers)"
      range: "(233,26)-(233,33)"
      evaluatedAs: true
      internalMethodName: "handleDeferredInitialize"
    - lineNumber: 157
      expression: "for-each(connectors)"
      range: "(157,32)-(157,41)"
      evaluatedAs: false
- method:
    name: "getStartedLogMessage"
    sourceCodeSignature: "String getStartedLogMessage()"
    returnType: "java.lang.String"
    instructionFingerprint: "BB59EDBA47AB7991397E4479CD549AEC"
  paths:
  - pathId: "path2"
    testPathName: "getStartedLogMessageWhenConnectorInstanceOfNetworkConnectorAndContextPathIsNull"
    constructorSignature: "<init>(org.eclipse.jetty.server.Server,boolean) : void"
    modelFingerprint: "13FC2F0FD7BC7DC7254C098D77D451B7"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "05F3D1F706587363A1A7DD3082819144"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1DD9BCCDFABE47201E040AB4E74E6432"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:server,message:uniqueUuid23):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "FBE1C5EE99570CAAA61ED3FC210AB982"
      valueUuid: "server"
      methodExercised:
        expression: "getHandler():handler"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "5054362DB415C6390CF1D831B27411E7"
      valueUuid: "server"
      methodExercised:
        expression: "getConnectors():connectorArray"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "0BD465DFE2A69E84814DB40CCC4C7A64"
      valueUuid: "server"
      methodExercised:
        expression: "setConnectors(connectors:uniqueUuid24):void2"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "8185A7DC7A07402089C13B050A76804B"
      valueUuid: "server"
      methodExercised:
        expression: "start():void3"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "739223AF5BFBB3C3D70BB54A7B4BBCE1"
      valueUuid: "server"
      methodExercised:
        expression: "setStopAtShutdown(stop:uniqueUuid25):void4"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "1F3355F332AB9EC58CF41A7E0B05FBD4"
      valueUuid: "server"
      methodExercised:
        expression: "getAttribute(name:string):object2"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "633F7D5E9DAAD6E34263841D4D37446C"
      valueUuid: "server"
      methodExercised:
        expression: "getConnectors():connectorArray2"
    - type: "LOCAL_VARIABLE"
      name: "networkConnector"
      modelFingerprint: "ABEE3F752E315700151EF6953B01AD11"
      valueUuid: "connector"
      methodExercised:
        expression: "getLocalPort():int4"
    - type: "LOCAL_VARIABLE"
      name: "connector"
      modelFingerprint: "F040496538A22696E088D5B598ECA447"
      valueUuid: "connector"
      methodExercised:
        expression: "getProtocols():list"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "8FDFC99F39A1DA5C08A339FA1AE256CC"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "collectionToDelimitedString(coll:list,delim:uniqueUuid26):string3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "connector"
      modelFingerprint: "BAB7CCA42AF9136CE97C7FD9EB2CCEDE"
      valueUuid: "connector2"
      methodExercised:
        expression: "getProtocols():list2"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "B356C940D79AFC81938530EDD68BA68F"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "collectionToDelimitedString(coll:list2,delim:uniqueUuid27):string5"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E272C4234945C2D38C9D25FEC79E4877"
      valueUuid: "string8"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.equals(java.lang.Object) : boolean"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
        parameters:
        - name: "server"
          value:
            sapientType: "MOCK"
            valueType: "org.eclipse.jetty.server.Server"
            uuid: "server"
        - name: "autoStart"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "autoStart"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Jetty Server must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid23"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "NULL"
      valueType: "org.eclipse.jetty.server.handler.StatisticsHandler"
      uuid: "handler"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "NULL"
      uuid: "uniqueUuid24"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid25"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.web.server.WebServerFactory"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.eclipse.jetty.server.NetworkConnector"
            uuid: "connector"
          1:
            sapientType: "MOCK"
            valueType: "org.eclipse.jetty.server.Connector"
            uuid: "connector2"
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray2"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.NetworkConnector"
      uuid: "connector"
    - sapientType: "BASIC"
      content: !<regular>
        value: 2
      valueType: "int"
      uuid: "int4"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.NetworkConnector"
      uuid: "connector"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "list"
    - sapientType: "BASIC"
      content: !<regular>
        value: ", "
      valueType: "java.lang.String"
      uuid: "uniqueUuid26"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Connector"
      uuid: "connector2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "list2"
    - sapientType: "BASIC"
      content: !<regular>
        value: ", "
      valueType: "java.lang.String"
      uuid: "uniqueUuid27"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Jetty started on ports 2 (A), 0 (B)"
      valueType: "java.lang.String"
      uuid: "string8"
    branches:
    - lineNumber: 211
      expression: "JettyReactiveWebServerFactory.class.equals(this.server.getAttribute(WebServerFactory.class.getName()))"
      range: "(211,7)-(211,108)"
      evaluatedAs: true
      internalMethodName: "getContextPath"
    - lineNumber: 191
      expression: "connectors.length != 1"
      range: "(191,7)-(191,28)"
      evaluatedAs: true
      internalMethodName: "getActualPortsDescription"
    - lineNumber: 195
      expression: "i < connectors.length"
      range: "(195,19)-(195,39)"
      evaluatedAs: true
      internalMethodName: "getActualPortsDescription"
    - lineNumber: 196
      expression: "i != 0"
      range: "(196,8)-(196,13)"
      evaluatedAs: false
      internalMethodName: "getActualPortsDescription"
    - lineNumber: 296
      expression: "connector instanceof NetworkConnector networkConnector"
      range: "(296,7)-(296,60)"
      evaluatedAs: true
      internalMethodName: "getLocalPort"
    - lineNumber: 185
      expression: "contextPath != null"
      range: "(185,9)-(185,27)"
      evaluatedAs: false
  - pathId: "path7"
    testPathName: "getStartedLogMessageWhenINotLessThanConnectorsLengthAndContextPathIsNotNull"
    constructorSignature: "<init>(org.eclipse.jetty.server.Server,boolean) : void"
    modelFingerprint: "99D2E14E0D0B5D941DBE40E4A489E218"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "05F3D1F706587363A1A7DD3082819144"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1DD9BCCDFABE47201E040AB4E74E6432"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:server,message:uniqueUuid28):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "FBE1C5EE99570CAAA61ED3FC210AB982"
      valueUuid: "server"
      methodExercised:
        expression: "getHandler():handler"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "5054362DB415C6390CF1D831B27411E7"
      valueUuid: "server"
      methodExercised:
        expression: "getConnectors():connectorArray"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "0BD465DFE2A69E84814DB40CCC4C7A64"
      valueUuid: "server"
      methodExercised:
        expression: "setConnectors(connectors:uniqueUuid29):void2"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "8185A7DC7A07402089C13B050A76804B"
      valueUuid: "server"
      methodExercised:
        expression: "start():void3"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "739223AF5BFBB3C3D70BB54A7B4BBCE1"
      valueUuid: "server"
      methodExercised:
        expression: "setStopAtShutdown(stop:uniqueUuid30):void4"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "1F3355F332AB9EC58CF41A7E0B05FBD4"
      valueUuid: "server"
      methodExercised:
        expression: "getAttribute(name:string):object2"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "2F8F4563E9C5F371BEC2DB43F7C6CEB1"
      valueUuid: "server"
      methodExercised:
        expression: "getHandlers():list"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "7F0F28E03BD6BF0F23E0727F635BF56A"
      valueUuid: "handler2"
      methodExercised:
        expression: "getContextPath():string2"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "5054362DB415C6390CF1D831B27411E7"
      valueUuid: "server"
      methodExercised:
        expression: "getConnectors():connectorArray2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D446A609419428DDEAA49A58091F3986"
      valueUuid: "string5"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.equals(java.lang.Object) : boolean"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
        parameters:
        - name: "server"
          value:
            sapientType: "MOCK"
            valueType: "org.eclipse.jetty.server.Server"
            uuid: "server"
        - name: "autoStart"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "autoStart"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Jetty Server must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid28"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "NULL"
      valueType: "org.eclipse.jetty.server.handler.StatisticsHandler"
      uuid: "handler"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "NULL"
      uuid: "uniqueUuid29"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid30"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.web.server.WebServerFactory"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.eclipse.jetty.server.Handler"
      uuid: "list"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.handler.ContextHandler"
      uuid: "handler2"
      collectionUuid: "list"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getContextPath1"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "result1"
      valueType: "java.lang.String"
      uuid: "string5"
    branches:
    - lineNumber: 211
      expression: "JettyReactiveWebServerFactory.class.equals(this.server.getAttribute(WebServerFactory.class.getName()))"
      range: "(211,7)-(211,108)"
      evaluatedAs: false
      internalMethodName: "getContextPath"
    - lineNumber: 223
      expression: "handler instanceof Handler.Wrapper handlerWrapper"
      range: "(223,10)-(223,58)"
      evaluatedAs: true
      internalMethodName: "findContextHandler"
    - lineNumber: 224
      expression: "handler instanceof ContextHandler contextHandler"
      range: "(224,8)-(224,55)"
      evaluatedAs: true
      internalMethodName: "findContextHandler"
    - lineNumber: 191
      expression: "connectors.length != 1"
      range: "(191,7)-(191,28)"
      evaluatedAs: false
      internalMethodName: "getActualPortsDescription"
    - lineNumber: 195
      expression: "i < connectors.length"
      range: "(195,19)-(195,39)"
      evaluatedAs: false
      internalMethodName: "getActualPortsDescription"
    - lineNumber: 185
      expression: "contextPath != null"
      range: "(185,9)-(185,27)"
      evaluatedAs: true
  - pathId: "path9"
    testPathName: "getStartedLogMessageWhenConnectorsLengthEquals1AndINotLessThanConnectorsLengthAndContextPathIsNotNull"
    constructorSignature: "<init>(org.eclipse.jetty.server.Server,boolean) : void"
    modelFingerprint: "70864E8FF4D2EE2C6C7CEF2F0A0C58B6"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "05F3D1F706587363A1A7DD3082819144"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1DD9BCCDFABE47201E040AB4E74E6432"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:server,message:uniqueUuid31):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "FBE1C5EE99570CAAA61ED3FC210AB982"
      valueUuid: "server"
      methodExercised:
        expression: "getHandler():handler"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "5054362DB415C6390CF1D831B27411E7"
      valueUuid: "server"
      methodExercised:
        expression: "getConnectors():connectorArray"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "0BD465DFE2A69E84814DB40CCC4C7A64"
      valueUuid: "server"
      methodExercised:
        expression: "setConnectors(connectors:uniqueUuid32):void2"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "8185A7DC7A07402089C13B050A76804B"
      valueUuid: "server"
      methodExercised:
        expression: "start():void3"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "739223AF5BFBB3C3D70BB54A7B4BBCE1"
      valueUuid: "server"
      methodExercised:
        expression: "setStopAtShutdown(stop:uniqueUuid33):void4"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "1F3355F332AB9EC58CF41A7E0B05FBD4"
      valueUuid: "server"
      methodExercised:
        expression: "getAttribute(name:string):object2"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "2F8F4563E9C5F371BEC2DB43F7C6CEB1"
      valueUuid: "server"
      methodExercised:
        expression: "getHandlers():list"
    - type: "LOCAL_VARIABLE"
      name: "handlerWrapper"
      modelFingerprint: "8BB3508B6CF43FFE77A1ED9D7529D14A"
      valueUuid: "handler2"
      methodExercised:
        expression: "getHandler():handler3"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "5054362DB415C6390CF1D831B27411E7"
      valueUuid: "server"
      methodExercised:
        expression: "getConnectors():connectorArray2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "97E2A02FF00CDDD48F5D02ED036E2218"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.equals(java.lang.Object) : boolean"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
        parameters:
        - name: "server"
          value:
            sapientType: "MOCK"
            valueType: "org.eclipse.jetty.server.Server"
            uuid: "server"
        - name: "autoStart"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "autoStart"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Jetty Server must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid31"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "NULL"
      valueType: "org.eclipse.jetty.server.handler.StatisticsHandler"
      uuid: "handler"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "NULL"
      uuid: "uniqueUuid32"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid33"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.web.server.WebServerFactory"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.eclipse.jetty.server.Handler"
      uuid: "list"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Handler$Wrapper"
      uuid: "handler2"
      collectionUuid: "list"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Handler"
      uuid: "handler3"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Jetty started on port  with context path ''"
      valueType: "java.lang.String"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 211
      expression: "JettyReactiveWebServerFactory.class.equals(this.server.getAttribute(WebServerFactory.class.getName()))"
      range: "(211,7)-(211,108)"
      evaluatedAs: false
      internalMethodName: "getContextPath"
    - lineNumber: 223
      expression: "handler instanceof Handler.Wrapper handlerWrapper"
      range: "(223,10)-(223,58)"
      evaluatedAs: true
      internalMethodName: "findContextHandler"
    - lineNumber: 224
      expression: "handler instanceof ContextHandler contextHandler"
      range: "(224,8)-(224,55)"
      evaluatedAs: false
      internalMethodName: "findContextHandler"
    - lineNumber: 191
      expression: "connectors.length != 1"
      range: "(191,7)-(191,28)"
      evaluatedAs: false
      internalMethodName: "getActualPortsDescription"
    - lineNumber: 195
      expression: "i < connectors.length"
      range: "(195,19)-(195,39)"
      evaluatedAs: false
      internalMethodName: "getActualPortsDescription"
    - lineNumber: 185
      expression: "contextPath != null"
      range: "(185,9)-(185,27)"
      evaluatedAs: true
- method:
    name: "stop"
    sourceCodeSignature: "void stop()"
    returnType: "void"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 6
      catchExceptions:
      - "java.lang.InterruptedException"
    - idExternalInstruction: 0
      id: 7
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "9EDAFF19A1564CDB4C8AE47CF3EA958B"
  paths:
  - pathId: "path1"
    testPathName: "stopWhenThisServerGetConnectorsIsNotEmpty"
    constructorSignature: "<init>(org.eclipse.jetty.server.Server,boolean) : void"
    modelFingerprint: "C328DC3E4AB69E3F261E8119584C883D"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2C690C1ED31B5D83FAD1E012EFB8FF79"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "DE440A87E24678BC015FA549A9663A76"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:server,message:uniqueUuid1):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "759C55345AFFB4F51571A83EC0EE1A7E"
      valueUuid: "server"
      methodExercised:
        expression: "getHandler():handler"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "DC18FE889E5C55272BE30615CD9204A4"
      valueUuid: "server"
      methodExercised:
        expression: "getConnectors():connectorArray"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "B049513DA5A73CD4798705C89922E78B"
      valueUuid: "server"
      methodExercised:
        expression: "setConnectors(connectors:uniqueUuid2):void2"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "F94CAE95A16A4C29E941345D400D1B20"
      valueUuid: "server"
      methodExercised:
        expression: "start():void3"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "EF59C7AFCFC23F25009D7700FF402947"
      valueUuid: "server"
      methodExercised:
        expression: "setStopAtShutdown(stop:uniqueUuid3):void4"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "4DDDBFD4BC49A4BE4E8FAA6A867AFE34"
      valueUuid: "server"
      methodExercised:
        expression: "getConnectors():connectorArray2"
    - type: "LOCAL_VARIABLE"
      name: "connector"
      modelFingerprint: "B65883080D33130C988247DA167E3026"
      valueUuid: "connector"
      methodExercised:
        expression: "stop():void5"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
        parameters:
        - name: "server"
          value:
            sapientType: "MOCK"
            valueType: "org.eclipse.jetty.server.Server"
            uuid: "server"
        - name: "autoStart"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "autoStart"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Jetty Server must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "NULL"
      valueType: "org.eclipse.jetty.server.handler.StatisticsHandler"
      uuid: "handler"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "NULL"
      uuid: "uniqueUuid2"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.eclipse.jetty.server.Connector"
            uuid: "connector"
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray2"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Connector"
      uuid: "connector"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 254
      expression: "this.gracefulShutdown != null"
      range: "(254,8)-(254,36)"
      evaluatedAs: false
    - lineNumber: 258
      expression: "for-each(this.server.getConnectors())"
      range: "(258,32)-(258,58)"
      evaluatedAs: true
  - pathId: "path3"
    testPathName: "stopWhenCaughtInterruptedException"
    constructorSignature: "<init>(org.eclipse.jetty.server.Server,boolean) : void"
    modelFingerprint: "913CE26814E11B9089D58D205E56071C"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "05F3D1F706587363A1A7DD3082819144"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1DD9BCCDFABE47201E040AB4E74E6432"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:server,message:uniqueUuid37):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "FBE1C5EE99570CAAA61ED3FC210AB982"
      valueUuid: "server"
      methodExercised:
        expression: "getHandler():handler"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "5054362DB415C6390CF1D831B27411E7"
      valueUuid: "server"
      methodExercised:
        expression: "getConnectors():connectorArray"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "0BD465DFE2A69E84814DB40CCC4C7A64"
      valueUuid: "server"
      methodExercised:
        expression: "setConnectors(connectors:uniqueUuid38):void2"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "8185A7DC7A07402089C13B050A76804B"
      valueUuid: "server"
      methodExercised:
        expression: "start():void3"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "739223AF5BFBB3C3D70BB54A7B4BBCE1"
      valueUuid: "server"
      methodExercised:
        expression: "setStopAtShutdown(stop:uniqueUuid39):void4"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "8C7C238111048F488D8AC828BADB2013"
      valueUuid: "server"
      methodExercised:
        expression: "getConnectors():connectorArray2"
    - type: "LOCAL_VARIABLE"
      name: "connector"
      modelFingerprint: "B65883080D33130C988247DA167E3026"
      valueUuid: "connector"
      methodExercised:
        expression: "stop():void5"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_POTENTIAL_HARM_FULL_SYSTEM_CALL"
      source: "Thread.currentThread().interrupt();"
      lineNumber: 263
      details: "Potential harmful system call (Thread.interrupt) detected; Learn more:\
        \ https://github.com/Sapient-AI/docs#disabled-generated-tests"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
        parameters:
        - name: "server"
          value:
            sapientType: "MOCK"
            valueType: "org.eclipse.jetty.server.Server"
            uuid: "server"
        - name: "autoStart"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "autoStart"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Jetty Server must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid37"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "NULL"
      valueType: "org.eclipse.jetty.server.handler.StatisticsHandler"
      uuid: "handler"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "NULL"
      uuid: "uniqueUuid38"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid39"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.eclipse.jetty.server.Connector"
            uuid: "connector"
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray2"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Connector"
      uuid: "connector"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 254
      expression: "this.gracefulShutdown != null"
      range: "(254,8)-(254,36)"
      evaluatedAs: false
    - lineNumber: 258
      expression: "for-each(this.server.getConnectors())"
      range: "(258,32)-(258,58)"
      evaluatedAs: true
    - lineNumber: 262
      expression: "catch-exception (InterruptedException)"
      range: "(262,4)-(262,33)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 6
      catchExceptions:
      - "java.lang.InterruptedException"
  - pathId: "path5"
    testPathName: "stopWhenCaughtExceptionThrowsWebServerException"
    constructorSignature: "<init>(org.eclipse.jetty.server.Server,boolean) : void"
    modelFingerprint: "D392269779CCAAE52245067BD6B3FB5C"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2C690C1ED31B5D83FAD1E012EFB8FF79"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "DE440A87E24678BC015FA549A9663A76"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:server,message:uniqueUuid1):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "759C55345AFFB4F51571A83EC0EE1A7E"
      valueUuid: "server"
      methodExercised:
        expression: "getHandler():handler"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "DC18FE889E5C55272BE30615CD9204A4"
      valueUuid: "server"
      methodExercised:
        expression: "getConnectors():connectorArray"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "B049513DA5A73CD4798705C89922E78B"
      valueUuid: "server"
      methodExercised:
        expression: "setConnectors(connectors:uniqueUuid2):void2"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "F94CAE95A16A4C29E941345D400D1B20"
      valueUuid: "server"
      methodExercised:
        expression: "start():void3"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "EF59C7AFCFC23F25009D7700FF402947"
      valueUuid: "server"
      methodExercised:
        expression: "setStopAtShutdown(stop:uniqueUuid3):void4"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "4DDDBFD4BC49A4BE4E8FAA6A867AFE34"
      valueUuid: "server"
      methodExercised:
        expression: "getConnectors():connectorArray2"
    - type: "LOCAL_VARIABLE"
      name: "connector"
      modelFingerprint: "CAF554BFC5D0FE2C97B1C8C491C53906"
      valueUuid: "connector"
      methodExercised:
        expression: "stop():void5"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "BC9E0DF03B004B9F4DE0F37889FF3F17"
      valueUuid: "webServerException"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
        parameters:
        - name: "server"
          value:
            sapientType: "MOCK"
            valueType: "org.eclipse.jetty.server.Server"
            uuid: "server"
        - name: "autoStart"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "autoStart"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Jetty Server must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "NULL"
      valueType: "org.eclipse.jetty.server.handler.StatisticsHandler"
      uuid: "handler"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "NULL"
      uuid: "uniqueUuid2"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.eclipse.jetty.server.Connector"
            uuid: "connector"
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray2"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Connector"
      uuid: "connector"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.Exception"
        parameters: []
      valueType: "java.lang.Exception"
      uuid: "void5"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.springframework.boot.web.server.WebServerException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Unable to stop embedded Jetty server"
            valueType: "java.lang.String"
            uuid: "uniqueUuid4"
            fixed: true
        - name: "cause"
          value:
            sapientType: "EXCEPTION"
            content: !<new>
              target: "java.lang.Exception"
              parameters: []
            valueType: "java.lang.Exception"
            uuid: "void5"
      valueType: "org.springframework.boot.web.server.WebServerException"
      uuid: "webServerException"
      fixed: true
    branches:
    - lineNumber: 254
      expression: "this.gracefulShutdown != null"
      range: "(254,8)-(254,36)"
      evaluatedAs: false
    - lineNumber: 258
      expression: "for-each(this.server.getConnectors())"
      range: "(258,32)-(258,58)"
      evaluatedAs: true
    - lineNumber: 265
      expression: "catch-exception (Exception)"
      range: "(265,4)-(265,22)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 7
      catchExceptions:
      - "java.lang.Exception"
- method:
    name: "destroy"
    sourceCodeSignature: "void destroy()"
    returnType: "void"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 8
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "DFD62C7BF3446E5466632885ED5A78A8"
  paths:
  - pathId: "path1"
    testPathName: "destroyTest"
    constructorSignature: "<init>(org.eclipse.jetty.server.Server,boolean) : void"
    modelFingerprint: "1F4F65B068C19A62B25520420E37CF1C"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "05F3D1F706587363A1A7DD3082819144"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1DD9BCCDFABE47201E040AB4E74E6432"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:server,message:uniqueUuid44):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "FBE1C5EE99570CAAA61ED3FC210AB982"
      valueUuid: "server"
      methodExercised:
        expression: "getHandler():handler"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "5054362DB415C6390CF1D831B27411E7"
      valueUuid: "server"
      methodExercised:
        expression: "getConnectors():connectorArray"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "0BD465DFE2A69E84814DB40CCC4C7A64"
      valueUuid: "server"
      methodExercised:
        expression: "setConnectors(connectors:uniqueUuid45):void2"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "8185A7DC7A07402089C13B050A76804B"
      valueUuid: "server"
      methodExercised:
        expression: "start():void3"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "739223AF5BFBB3C3D70BB54A7B4BBCE1"
      valueUuid: "server"
      methodExercised:
        expression: "setStopAtShutdown(stop:uniqueUuid46):void4"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "C38A8DF8639358486A443BD4D86C89C1"
      valueUuid: "server"
      methodExercised:
        expression: "stop():void5"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
        parameters:
        - name: "server"
          value:
            sapientType: "MOCK"
            valueType: "org.eclipse.jetty.server.Server"
            uuid: "server"
        - name: "autoStart"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "autoStart"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Jetty Server must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid44"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "NULL"
      valueType: "org.eclipse.jetty.server.handler.StatisticsHandler"
      uuid: "handler"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "NULL"
      uuid: "uniqueUuid45"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid46"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
  - pathId: "path2"
    testPathName: "destroyWhenCaughtExceptionThrowsWebServerException"
    constructorSignature: "<init>(org.eclipse.jetty.server.Server,boolean) : void"
    modelFingerprint: "36BE258DAD9583F8200859854CAFDA1F"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "48ABA5FC17423C6B65C40E84E9FD1757"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "DE440A87E24678BC015FA549A9663A76"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:server,message:uniqueUuid1):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "759C55345AFFB4F51571A83EC0EE1A7E"
      valueUuid: "server"
      methodExercised:
        expression: "getHandler():handler"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "DC18FE889E5C55272BE30615CD9204A4"
      valueUuid: "server"
      methodExercised:
        expression: "getConnectors():connectorArray"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "B049513DA5A73CD4798705C89922E78B"
      valueUuid: "server"
      methodExercised:
        expression: "setConnectors(connectors:uniqueUuid2):void2"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "F94CAE95A16A4C29E941345D400D1B20"
      valueUuid: "server"
      methodExercised:
        expression: "start():void3"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "EF59C7AFCFC23F25009D7700FF402947"
      valueUuid: "server"
      methodExercised:
        expression: "setStopAtShutdown(stop:uniqueUuid3):void4"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "4DE78E02E9989A0D6DE7D715F67DCA16"
      valueUuid: "server"
      methodExercised:
        expression: "stop():void5"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "125C6024EC5AE61A858E2875E103CBD4"
      valueUuid: "webServerException"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
        parameters:
        - name: "server"
          value:
            sapientType: "MOCK"
            valueType: "org.eclipse.jetty.server.Server"
            uuid: "server"
        - name: "autoStart"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "autoStart"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Jetty Server must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "NULL"
      valueType: "org.eclipse.jetty.server.handler.StatisticsHandler"
      uuid: "handler"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "NULL"
      uuid: "uniqueUuid2"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.Exception"
        parameters: []
      valueType: "java.lang.Exception"
      uuid: "void5"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.springframework.boot.web.server.WebServerException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Unable to destroy embedded Jetty server"
            valueType: "java.lang.String"
            uuid: "uniqueUuid4"
            fixed: true
        - name: "cause"
          value:
            sapientType: "EXCEPTION"
            content: !<new>
              target: "java.lang.Exception"
              parameters: []
            valueType: "java.lang.Exception"
            uuid: "void5"
      valueType: "org.springframework.boot.web.server.WebServerException"
      uuid: "webServerException"
      fixed: true
    branches:
    - lineNumber: 277
      expression: "catch-exception (Exception)"
      range: "(277,4)-(277,22)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 8
      catchExceptions:
      - "java.lang.Exception"
- method:
    name: "getPort"
    sourceCodeSignature: "int getPort()"
    returnType: "int"
    instructionFingerprint: "BE801DFD2D79F5DDDD5B1E0BFC02DE1B"
  paths:
  - pathId: "path1"
    testPathName: "getPortWhenLocalPortGreaterThan0"
    constructorSignature: "<init>(org.eclipse.jetty.server.Server,boolean) : void"
    modelFingerprint: "E74BE693A393CF0312326488055C391A"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "05F3D1F706587363A1A7DD3082819144"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1DD9BCCDFABE47201E040AB4E74E6432"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:server,message:uniqueUuid51):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "FBE1C5EE99570CAAA61ED3FC210AB982"
      valueUuid: "server"
      methodExercised:
        expression: "getHandler():handler"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "5054362DB415C6390CF1D831B27411E7"
      valueUuid: "server"
      methodExercised:
        expression: "getConnectors():connectorArray"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "0BD465DFE2A69E84814DB40CCC4C7A64"
      valueUuid: "server"
      methodExercised:
        expression: "setConnectors(connectors:uniqueUuid52):void2"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "8185A7DC7A07402089C13B050A76804B"
      valueUuid: "server"
      methodExercised:
        expression: "start():void3"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "739223AF5BFBB3C3D70BB54A7B4BBCE1"
      valueUuid: "server"
      methodExercised:
        expression: "setStopAtShutdown(stop:uniqueUuid53):void4"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "C93F9BD0C47AFBEDD922736D66849533"
      valueUuid: "server"
      methodExercised:
        expression: "getConnectors():connectorArray2"
    - type: "LOCAL_VARIABLE"
      name: "networkConnector"
      modelFingerprint: "459BB7A1C7ADC914A1C39DC23203FEDA"
      valueUuid: "connector"
      methodExercised:
        expression: "getLocalPort():int3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B6D407614DB44C84166BB746871DE945"
      valueUuid: "int3"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
        parameters:
        - name: "server"
          value:
            sapientType: "MOCK"
            valueType: "org.eclipse.jetty.server.Server"
            uuid: "server"
        - name: "autoStart"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "autoStart"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Jetty Server must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid51"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "NULL"
      valueType: "org.eclipse.jetty.server.handler.StatisticsHandler"
      uuid: "handler"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "NULL"
      uuid: "uniqueUuid52"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid53"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.eclipse.jetty.server.NetworkConnector"
            uuid: "connector"
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray2"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.NetworkConnector"
      uuid: "connector"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int3"
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int3"
    branches:
    - lineNumber: 286
      expression: "for-each(connectors)"
      range: "(286,30)-(286,39)"
      evaluatedAs: true
    - lineNumber: 296
      expression: "connector instanceof NetworkConnector networkConnector"
      range: "(296,7)-(296,60)"
      evaluatedAs: true
      internalMethodName: "getLocalPort"
    - lineNumber: 288
      expression: "localPort > 0"
      range: "(288,8)-(288,20)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "getPortWhenLocalPortNotGreaterThan0"
    constructorSignature: "<init>(org.eclipse.jetty.server.Server,boolean) : void"
    modelFingerprint: "B61F2AA2CBA126BB0E87E5BE0503EFFE"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2C690C1ED31B5D83FAD1E012EFB8FF79"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "DE440A87E24678BC015FA549A9663A76"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:server,message:uniqueUuid1):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "759C55345AFFB4F51571A83EC0EE1A7E"
      valueUuid: "server"
      methodExercised:
        expression: "getHandler():handler"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "DC18FE889E5C55272BE30615CD9204A4"
      valueUuid: "server"
      methodExercised:
        expression: "getConnectors():connectorArray"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "B049513DA5A73CD4798705C89922E78B"
      valueUuid: "server"
      methodExercised:
        expression: "setConnectors(connectors:uniqueUuid2):void2"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "F94CAE95A16A4C29E941345D400D1B20"
      valueUuid: "server"
      methodExercised:
        expression: "start():void3"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "EF59C7AFCFC23F25009D7700FF402947"
      valueUuid: "server"
      methodExercised:
        expression: "setStopAtShutdown(stop:uniqueUuid3):void4"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "6DCA216A9E6E67EFD473DA5799C131B2"
      valueUuid: "server"
      methodExercised:
        expression: "getConnectors():connectorArray2"
    - type: "LOCAL_VARIABLE"
      name: "networkConnector"
      modelFingerprint: "D3F113A4128C1209E2AF4B1E8442178D"
      valueUuid: "connector"
      methodExercised:
        expression: "getLocalPort():int3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "CF1F5D4123F6E66B21425B46488E3BA4"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
        parameters:
        - name: "server"
          value:
            sapientType: "MOCK"
            valueType: "org.eclipse.jetty.server.Server"
            uuid: "server"
        - name: "autoStart"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "autoStart"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Jetty Server must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "NULL"
      valueType: "org.eclipse.jetty.server.handler.StatisticsHandler"
      uuid: "handler"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "NULL"
      uuid: "uniqueUuid2"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.eclipse.jetty.server.NetworkConnector"
            uuid: "connector"
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray2"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.NetworkConnector"
      uuid: "connector"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "int3"
    - sapientType: "BASIC"
      content: !<regular>
        value: -1
      valueType: "int"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 286
      expression: "for-each(connectors)"
      range: "(286,30)-(286,39)"
      evaluatedAs: true
    - lineNumber: 296
      expression: "connector instanceof NetworkConnector networkConnector"
      range: "(296,7)-(296,60)"
      evaluatedAs: true
      internalMethodName: "getLocalPort"
    - lineNumber: 288
      expression: "localPort > 0"
      range: "(288,8)-(288,20)"
      evaluatedAs: false
  - pathId: "path3"
    testPathName: "getPortWhenConnectorNotInstanceOfNetworkConnectorAndLocalPortNotGreaterThan0"
    constructorSignature: "<init>(org.eclipse.jetty.server.Server,boolean) : void"
    modelFingerprint: "515A6D027C45FCC8659947BA6E0EAA28"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2C690C1ED31B5D83FAD1E012EFB8FF79"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "DE440A87E24678BC015FA549A9663A76"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:server,message:uniqueUuid1):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "759C55345AFFB4F51571A83EC0EE1A7E"
      valueUuid: "server"
      methodExercised:
        expression: "getHandler():handler"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "DC18FE889E5C55272BE30615CD9204A4"
      valueUuid: "server"
      methodExercised:
        expression: "getConnectors():connectorArray"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "B049513DA5A73CD4798705C89922E78B"
      valueUuid: "server"
      methodExercised:
        expression: "setConnectors(connectors:uniqueUuid2):void2"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "F94CAE95A16A4C29E941345D400D1B20"
      valueUuid: "server"
      methodExercised:
        expression: "start():void3"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "EF59C7AFCFC23F25009D7700FF402947"
      valueUuid: "server"
      methodExercised:
        expression: "setStopAtShutdown(stop:uniqueUuid3):void4"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "B16E1CB65BDFC4F09C2CC4BA1973D7D0"
      valueUuid: "server"
      methodExercised:
        expression: "getConnectors():connectorArray2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "CF1F5D4123F6E66B21425B46488E3BA4"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
        parameters:
        - name: "server"
          value:
            sapientType: "MOCK"
            valueType: "org.eclipse.jetty.server.Server"
            uuid: "server"
        - name: "autoStart"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "autoStart"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Jetty Server must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "NULL"
      valueType: "org.eclipse.jetty.server.handler.StatisticsHandler"
      uuid: "handler"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "NULL"
      uuid: "uniqueUuid2"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.eclipse.jetty.server.Connector"
            uuid: "connector"
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray2"
    - sapientType: "BASIC"
      content: !<regular>
        value: -1
      valueType: "int"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 286
      expression: "for-each(connectors)"
      range: "(286,30)-(286,39)"
      evaluatedAs: true
    - lineNumber: 296
      expression: "connector instanceof NetworkConnector networkConnector"
      range: "(296,7)-(296,60)"
      evaluatedAs: false
      internalMethodName: "getLocalPort"
    - lineNumber: 288
      expression: "localPort > 0"
      range: "(288,8)-(288,20)"
      evaluatedAs: false
- method:
    name: "shutDownGracefully"
    sourceCodeSignature: "void shutDownGracefully(GracefulShutdownCallback callback)"
    returnType: "void"
    parameters:
    - name: "callback"
      type: "org.springframework.boot.web.server.GracefulShutdownCallback"
    instructionFingerprint: "BD04A504E629AED4044A204C8F00E13E"
  paths:
  - pathId: "path1"
    testPathName: "shutDownGracefullyWhenThisGracefulShutdownIsNull"
    constructorSignature: "<init>(org.eclipse.jetty.server.Server,boolean) : void"
    modelFingerprint: "2680BDA89DB65F69471D5B25FFEAAD37"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "05F3D1F706587363A1A7DD3082819144"
      valueUuid: "target"
    - type: "INPUT"
      name: "callback"
      modelFingerprint: "E794D4594AF84E45AAF8CF2FA83F9BD2"
      valueUuid: "callback"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1DD9BCCDFABE47201E040AB4E74E6432"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:server,message:uniqueUuid60):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "FBE1C5EE99570CAAA61ED3FC210AB982"
      valueUuid: "server"
      methodExercised:
        expression: "getHandler():handler"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "5054362DB415C6390CF1D831B27411E7"
      valueUuid: "server"
      methodExercised:
        expression: "getConnectors():connectorArray"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "0BD465DFE2A69E84814DB40CCC4C7A64"
      valueUuid: "server"
      methodExercised:
        expression: "setConnectors(connectors:uniqueUuid61):void2"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "8185A7DC7A07402089C13B050A76804B"
      valueUuid: "server"
      methodExercised:
        expression: "start():void3"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "739223AF5BFBB3C3D70BB54A7B4BBCE1"
      valueUuid: "server"
      methodExercised:
        expression: "setStopAtShutdown(stop:uniqueUuid62):void4"
    - type: "LOCAL_VARIABLE"
      name: "callback"
      modelFingerprint: "E0D029D2A38926D21E0A3FCDB93D0646"
      valueUuid: "callback"
      methodExercised:
        expression: "shutdownComplete(result:Enum-org.springframework.boot.web.server.GracefulShutdownResult-IMMEDIATE):void5"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
        parameters:
        - name: "server"
          value:
            sapientType: "MOCK"
            valueType: "org.eclipse.jetty.server.Server"
            uuid: "server"
        - name: "autoStart"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "autoStart"
      valueType: "org.springframework.boot.web.embedded.jetty.JettyWebServer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.GracefulShutdownCallback"
      uuid: "callback"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Jetty Server must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid60"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "NULL"
      valueType: "org.eclipse.jetty.server.handler.StatisticsHandler"
      uuid: "handler"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.eclipse.jetty.server.Connector[]"
      uuid: "connectorArray"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "NULL"
      uuid: "uniqueUuid61"
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.eclipse.jetty.server.Server"
      uuid: "server"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid62"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.GracefulShutdownCallback"
      uuid: "callback"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "IMMEDIATE"
      valueType: "org.springframework.boot.web.server.GracefulShutdownResult"
      uuid: "Enum-org.springframework.boot.web.server.GracefulShutdownResult-IMMEDIATE"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 304
      expression: "this.gracefulShutdown == null"
      range: "(304,7)-(304,35)"
      evaluatedAs: true
- method:
    name: "getServer"
    sourceCodeSignature: "Server getServer()"
    returnType: "org.eclipse.jetty.server.Server"
    instructionFingerprint: "C7B35EA18B96A73679891FF8CFB20462"
  paths:
  - pathId: "path1"
    testPathName: "getServerTest"
    constructorSignature: "<init>(org.eclipse.jetty.server.Server,boolean) : void"
    modelFingerprint: "2FFBD1612A4AE3E13F475D0315D79200"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
