---
modelFingerprint: "67D93562BBC4BA3A5ADEB8844730F837"
targetClass:
  fullClassName: "org.springframework.boot.web.servlet.error.DefaultErrorAttributes"
methods:
- method:
    name: "getOrder"
    sourceCodeSignature: "int getOrder()"
    returnType: "int"
    instructionFingerprint: "C1C0572F7343926F84750E8EF178FDB9"
  paths:
  - pathId: "path1"
    testPathName: "getOrderTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "458CDB694C37AEC64D22C153D467DA0C"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "resolveException"
    sourceCodeSignature: "ModelAndView resolveException(HttpServletRequest request,\
      \ HttpServletResponse response, Object handler, Exception ex)"
    returnType: "org.springframework.web.servlet.ModelAndView"
    parameters:
    - name: "request"
      type: "jakarta.servlet.http.HttpServletRequest"
    - name: "response"
      type: "jakarta.servlet.http.HttpServletResponse"
    - name: "handler"
      type: "java.lang.Object"
    - name: "ex"
      type: "java.lang.Exception"
    instructionFingerprint: "23E6F845A9974232BE63B1DA57A1512F"
  paths:
  - pathId: "path1"
    testPathName: "resolveExceptionTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "B07CDA0434B9DAE87B22179D5EE032F3"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "request"
      modelFingerprint: "E43CBF7E2DA98885ECE5619567B77961"
      valueUuid: "request"
    - type: "INPUT"
      name: "response"
      modelFingerprint: "8258F2C0C8DB93C3353BC562467A949D"
      valueUuid: "response"
    - type: "INPUT"
      name: "handler"
      modelFingerprint: "E9254192C19E9CE24AF56A6284A8FF0C"
      valueUuid: "handler"
    - type: "INPUT"
      name: "ex"
      modelFingerprint: "CC3FD17FCCADFBFE133C4F438CC5A73A"
      valueUuid: "ex"
    - type: "LOCAL_VARIABLE"
      name: "request"
      modelFingerprint: "C38C4D24C2AF39EBA40C3BF8486A7D06"
      valueUuid: "request"
      methodExercised:
        expression: "setAttribute(arg0:string3,arg1:ex):void"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "806FACEFA96EFAA069EBE4E7B58EE26B"
      valueUuid: "modelAndView"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.error.DefaultErrorAttributes"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.error.DefaultErrorAttributes"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "jakarta.servlet.http.HttpServletRequest"
      uuid: "request"
    - sapientType: "MOCK"
      valueType: "jakarta.servlet.http.HttpServletResponse"
      uuid: "response"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "handler"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Exception"
        parameters: []
      valueType: "java.lang.Exception"
      uuid: "ex"
    - sapientType: "MOCK"
      valueType: "jakarta.servlet.http.HttpServletRequest"
      uuid: "request"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.web.servlet.error.DefaultErrorAttributes.ERROR"
      valueType: "java.lang.String"
      uuid: "string3"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Exception"
        parameters: []
      valueType: "java.lang.Exception"
      uuid: "ex"
    - sapientType: "NULL"
      valueType: "org.springframework.web.servlet.ModelAndView"
      uuid: "modelAndView"
      fixed: true
- method:
    name: "getErrorAttributes"
    sourceCodeSignature: "Map<String, Object> getErrorAttributes(WebRequest webRequest,\
      \ ErrorAttributeOptions options)"
    returnType: "java.util.Map"
    genericReturnType: "java.lang.String,java.lang.Object"
    parameters:
    - name: "webRequest"
      type: "org.springframework.web.context.request.WebRequest"
    - name: "options"
      type: "org.springframework.boot.web.error.ErrorAttributeOptions"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "87FE24957F8999D3E788FC2DA4FE608E"
  paths:
  - pathId: "path1"
    testPathName: "getErrorAttributesWhenErrorAttributesGetMessageIsNotNullAndOptionsNotIsIncludedIncludeBINDING_ERRORSAndOptionsNotIsIncl"
    constructorSignature: "<init>() : void"
    modelFingerprint: "ADBC8EC2B36A1F73214C46C536818BD5"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "webRequest"
      modelFingerprint: "7626EA373048F1C35DED74F38555EA16"
      valueUuid: "webRequest"
    - type: "INPUT"
      name: "options"
      modelFingerprint: "8DD62EA4E4FCEEBD9E8D02B70DBCE39B"
      valueUuid: "options"
    - type: "LOCAL_VARIABLE"
      name: "options"
      modelFingerprint: "C38E359BA1711AE7A8833D12A4316355"
      valueUuid: "options"
      methodExercised:
        expression: "isIncluded(include:Enum-org.springframework.boot.web.error.ErrorAttributeOptions$Include-STACK_TRACE):boolean1"
    - type: "LOCAL_VARIABLE"
      name: "requestAttributes"
      modelFingerprint: "EA0CB73D4526368E7F20300B0405ED05"
      valueUuid: "webRequest"
      methodExercised:
        expression: "getAttribute(name:uniqueUuid1,scope:uniqueUuid2):object2"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "C1F2DB24818AD8B377EDBB312434F382"
      methodExercised:
        expression: "getError(webRequest:webRequest):throwable"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "2F93D116AC528FB4D1D28FC9FCB64C8E"
      methodExercised:
        expression: "getMessage(webRequest:webRequest,error:cause):string6"
    - type: "LOCAL_VARIABLE"
      name: "requestAttributes"
      modelFingerprint: "F8CDCBD80820D2D0143D372CD13D05DE"
      valueUuid: "webRequest"
      methodExercised:
        expression: "getAttribute(name:uniqueUuid3,scope:uniqueUuid4):object8"
    - type: "LOCAL_VARIABLE"
      name: "options"
      modelFingerprint: "7C2DEB0AC25AEA65487924CABB8B80F9"
      valueUuid: "options"
      methodExercised:
        expression: "isIncluded(include:Enum-org.springframework.boot.web.error.ErrorAttributeOptions$Include-EXCEPTION):boolean5"
    - type: "LOCAL_VARIABLE"
      name: "options"
      modelFingerprint: "6926313A55767AB5EC45E28BF329F040"
      valueUuid: "options"
      methodExercised:
        expression: "isIncluded(include:Enum-org.springframework.boot.web.error.ErrorAttributeOptions$Include-STACK_TRACE):boolean6"
    - type: "LOCAL_VARIABLE"
      name: "options"
      modelFingerprint: "2981BCE96F5139E96CECDC4C37F70745"
      valueUuid: "options"
      methodExercised:
        expression: "isIncluded(include:Enum-org.springframework.boot.web.error.ErrorAttributeOptions$Include-MESSAGE):boolean7"
    - type: "LOCAL_VARIABLE"
      name: "options"
      modelFingerprint: "5C736EBBC950667EC99EA2D8850EC0A5"
      valueUuid: "options"
      methodExercised:
        expression: "isIncluded(include:Enum-org.springframework.boot.web.error.ErrorAttributeOptions$Include-BINDING_ERRORS):boolean8"
    - type: "LOCAL_VARIABLE"
      name: "options"
      modelFingerprint: "718095BE3DB09D9BD80DECC6B3E7D596"
      valueUuid: "options"
      methodExercised:
        expression: "isIncluded(include:Enum-org.springframework.boot.web.error.ErrorAttributeOptions$Include-PATH):boolean9"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A8B1A65D910FC2C9FF514E7E074C4F40"
      valueUuid: "linkedHashMap"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Throwable.getCause() : java.lang.Throwable"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.error.DefaultErrorAttributes"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.error.DefaultErrorAttributes"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.web.context.request.WebRequest"
      uuid: "webRequest"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.error.ErrorAttributeOptions"
      uuid: "options"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.error.ErrorAttributeOptions"
      uuid: "options"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "ENUM"
      content: !<regular>
        value: "STACK_TRACE"
      valueType: "org.springframework.boot.web.error.ErrorAttributeOptions$Include"
      uuid: "Enum-org.springframework.boot.web.error.ErrorAttributeOptions$Include-STACK_TRACE"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.web.context.request.WebRequest"
      uuid: "webRequest"
    - sapientType: "NULL"
      valueType: "java.lang.Integer"
      uuid: "object2"
      fixed: true
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "jakarta.servlet.error.status_code"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "jakarta.servlet.ServletException"
      uuid: "throwable"
    - sapientType: "MOCK"
      valueType: "org.springframework.web.context.request.WebRequest"
      uuid: "webRequest"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getMessage1"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "MOCK"
      valueType: "org.springframework.web.context.request.WebRequest"
      uuid: "webRequest"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "cause"
    - sapientType: "MOCK"
      valueType: "org.springframework.web.context.request.WebRequest"
      uuid: "webRequest"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getAttribute1"
      valueType: "java.lang.String"
      uuid: "object8"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "jakarta.servlet.error.request_uri"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.error.ErrorAttributeOptions"
      uuid: "options"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean5"
    - sapientType: "ENUM"
      content: !<regular>
        value: "EXCEPTION"
      valueType: "org.springframework.boot.web.error.ErrorAttributeOptions$Include"
      uuid: "Enum-org.springframework.boot.web.error.ErrorAttributeOptions$Include-EXCEPTION"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.error.ErrorAttributeOptions"
      uuid: "options"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean6"
    - sapientType: "ENUM"
      content: !<regular>
        value: "STACK_TRACE"
      valueType: "org.springframework.boot.web.error.ErrorAttributeOptions$Include"
      uuid: "Enum-org.springframework.boot.web.error.ErrorAttributeOptions$Include-STACK_TRACE"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.error.ErrorAttributeOptions"
      uuid: "options"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean7"
    - sapientType: "ENUM"
      content: !<regular>
        value: "MESSAGE"
      valueType: "org.springframework.boot.web.error.ErrorAttributeOptions$Include"
      uuid: "Enum-org.springframework.boot.web.error.ErrorAttributeOptions$Include-MESSAGE"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.error.ErrorAttributeOptions"
      uuid: "options"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean8"
    - sapientType: "ENUM"
      content: !<regular>
        value: "BINDING_ERRORS"
      valueType: "org.springframework.boot.web.error.ErrorAttributeOptions$Include"
      uuid: "Enum-org.springframework.boot.web.error.ErrorAttributeOptions$Include-BINDING_ERRORS"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.error.ErrorAttributeOptions"
      uuid: "options"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean9"
    - sapientType: "ENUM"
      content: !<regular>
        value: "PATH"
      valueType: "org.springframework.boot.web.error.ErrorAttributeOptions$Include"
      uuid: "Enum-org.springframework.boot.web.error.ErrorAttributeOptions$Include-PATH"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.LinkedHashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "timestamp"
              valueType: "java.lang.String"
              uuid: "uniqueUuid6"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.util.Date"
                parameters: []
              valueType: "java.util.Date"
              uuid: "date"
              fixed: true
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.util.Date"
          uuid: "uniqueUuid5"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "status"
              valueType: "java.lang.String"
              uuid: "uniqueUuid8"
              fixed: true
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: 999
              valueType: "java.lang.Integer"
              uuid: "integer"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.Integer"
          uuid: "uniqueUuid7"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "error"
              valueType: "java.lang.String"
              uuid: "uniqueUuid10"
              fixed: true
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "None"
              valueType: "java.lang.String"
              uuid: "uniqueUuid11"
              fixed: true
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid9"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "linkedHashMap"
    branches:
    - lineNumber: 121
      expression: "status == null"
      range: "(121,7)-(121,20)"
      evaluatedAs: true
      internalMethodName: "addStatus"
    - lineNumber: 139
      expression: "error != null"
      range: "(139,7)-(139,19)"
      evaluatedAs: true
      internalMethodName: "addErrorDetails"
    - lineNumber: 140
      expression: "error instanceof ServletException"
      range: "(140,11)-(140,43)"
      evaluatedAs: true
      internalMethodName: "addErrorDetails"
    - lineNumber: 140
      expression: "error.getCause() != null"
      range: "(140,48)-(140,71)"
      evaluatedAs: true
      internalMethodName: "addErrorDetails"
    - lineNumber: 144
      expression: "includeStackTrace"
      range: "(144,8)-(144,24)"
      evaluatedAs: true
      internalMethodName: "addErrorDetails"
    - lineNumber: 197
      expression: "error instanceof BindingResult bindingResult"
      range: "(197,7)-(197,50)"
      evaluatedAs: false
      internalMethodName: "extractBindingResult"
    - lineNumber: 153
      expression: "result == null"
      range: "(153,7)-(153,20)"
      evaluatedAs: true
      internalMethodName: "addErrorMessage"
    - lineNumber: 212
      expression: "path != null"
      range: "(212,7)-(212,18)"
      evaluatedAs: true
      internalMethodName: "addPath"
    - lineNumber: 92
      expression: "!options.isIncluded(Include.EXCEPTION)"
      range: "(92,7)-(92,44)"
      evaluatedAs: true
    - lineNumber: 95
      expression: "!options.isIncluded(Include.STACK_TRACE)"
      range: "(95,7)-(95,46)"
      evaluatedAs: true
    - lineNumber: 98
      expression: "!options.isIncluded(Include.MESSAGE)"
      range: "(98,7)-(98,42)"
      evaluatedAs: true
    - lineNumber: 98
      expression: "errorAttributes.get(\\\"message\\\") != null"
      range: "(98,47)-(98,84)"
      evaluatedAs: true
    - lineNumber: 101
      expression: "!options.isIncluded(Include.BINDING_ERRORS)"
      range: "(101,7)-(101,49)"
      evaluatedAs: true
    - lineNumber: 104
      expression: "!options.isIncluded(Include.PATH)"
      range: "(104,7)-(104,39)"
      evaluatedAs: true
- method:
    name: "getMessage"
    sourceCodeSignature: "String getMessage(WebRequest webRequest, Throwable error)"
    returnType: "java.lang.String"
    parameters:
    - name: "webRequest"
      type: "org.springframework.web.context.request.WebRequest"
    - name: "error"
      type: "java.lang.Throwable"
    instructionFingerprint: "23E2B3F0C1F9A2D2E7EC0BCDA43F2721"
  paths:
  - pathId: "path1"
    testPathName: "getMessageWhenObjectUtilsNotIsEmptyMessage"
    constructorSignature: "<init>() : void"
    modelFingerprint: "588CB6CB8F51BA2BF666FDE6CA7386BC"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "webRequest"
      modelFingerprint: "7626EA373048F1C35DED74F38555EA16"
      valueUuid: "webRequest"
    - type: "INPUT"
      name: "error"
      modelFingerprint: "3995F965464C7AD18BCF971DFF568BE5"
      valueUuid: "error"
    - type: "LOCAL_VARIABLE"
      name: "requestAttributes"
      modelFingerprint: "2E6AEDCD3B874C8B11CFD505E31B73B8"
      valueUuid: "webRequest"
      methodExercised:
        expression: "getAttribute(name:uniqueUuid12,scope:uniqueUuid13):object"
    - type: "STATIC"
      name: "ObjectUtils.class"
      modelFingerprint: "20CE2F5A9AE6EA55DF27A33A6FBBB108"
      valueUuid: "ObjectUtils.class"
      methodExercised:
        expression: "isEmpty(obj:object):boolean1"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "F40452B606E74F348AF44C8159F56DD6"
      valueUuid: "string4"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.error.DefaultErrorAttributes"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.error.DefaultErrorAttributes"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.web.context.request.WebRequest"
      uuid: "webRequest"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "error"
    - sapientType: "MOCK"
      valueType: "org.springframework.web.context.request.WebRequest"
      uuid: "webRequest"
    - sapientType: "MOCK"
      valueType: "java.lang.Object"
      uuid: "object"
      nameForMock: "object"
    - sapientType: "BASIC"
      content: !<regular>
        value: "jakarta.servlet.error.message"
      valueType: "java.lang.String"
      uuid: "uniqueUuid12"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "uniqueUuid13"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "java.lang.Object"
      uuid: "object"
      nameForMock: "object"
    - sapientType: "BASIC"
      content: !<regular>
        value: "object"
      valueType: "java.lang.String"
      uuid: "string4"
    branches:
    - lineNumber: 181
      expression: "!ObjectUtils.isEmpty(message)"
      range: "(181,7)-(181,35)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "getMessageWhenStringUtilsHasLengthErrorGetMessage"
    constructorSignature: "<init>() : void"
    modelFingerprint: "B5EAF2A95CA1031C11A6ADB58D29C9CF"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "webRequest"
      modelFingerprint: "7626EA373048F1C35DED74F38555EA16"
      valueUuid: "webRequest"
    - type: "INPUT"
      name: "error"
      modelFingerprint: "DA55D11E49D56F3A8F38E48A400108A0"
      valueUuid: "error"
    - type: "LOCAL_VARIABLE"
      name: "requestAttributes"
      modelFingerprint: "6E44FE11315F62F8B1D3C3BF14753730"
      valueUuid: "webRequest"
      methodExercised:
        expression: "getAttribute(name:uniqueUuid14,scope:uniqueUuid15):object"
    - type: "STATIC"
      name: "ObjectUtils.class"
      modelFingerprint: "04CC843A3C6EF388DC3740D222F2E3D7"
      valueUuid: "ObjectUtils.class"
      methodExercised:
        expression: "isEmpty(obj:object):boolean1"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "7B623EE582A0C2E878E2D18F466E3DE6"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasLength(str:message):boolean2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "26EE4C4C36995C7CEACDE6B3FC809284"
      valueUuid: "message"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.error.DefaultErrorAttributes"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.error.DefaultErrorAttributes"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.web.context.request.WebRequest"
      uuid: "webRequest"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "message"
      valueType: "java.lang.Throwable"
      uuid: "error"
    - sapientType: "MOCK"
      valueType: "org.springframework.web.context.request.WebRequest"
      uuid: "webRequest"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
    - sapientType: "BASIC"
      content: !<regular>
        value: "jakarta.servlet.error.message"
      valueType: "java.lang.String"
      uuid: "uniqueUuid14"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "uniqueUuid15"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "message"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "message"
    branches:
    - lineNumber: 181
      expression: "!ObjectUtils.isEmpty(message)"
      range: "(181,7)-(181,35)"
      evaluatedAs: false
    - lineNumber: 184
      expression: "error != null"
      range: "(184,7)-(184,19)"
      evaluatedAs: true
    - lineNumber: 184
      expression: "StringUtils.hasLength(error.getMessage())"
      range: "(184,24)-(184,64)"
      evaluatedAs: true
  - pathId: "path3"
    testPathName: "getMessageWhenStringUtilsNotHasLengthErrorGetMessage"
    constructorSignature: "<init>() : void"
    modelFingerprint: "C2E37A94616C9D87620971BA640E3DC2"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "webRequest"
      modelFingerprint: "7626EA373048F1C35DED74F38555EA16"
      valueUuid: "webRequest"
    - type: "INPUT"
      name: "error"
      modelFingerprint: "DA55D11E49D56F3A8F38E48A400108A0"
      valueUuid: "error"
    - type: "LOCAL_VARIABLE"
      name: "requestAttributes"
      modelFingerprint: "6E44FE11315F62F8B1D3C3BF14753730"
      valueUuid: "webRequest"
      methodExercised:
        expression: "getAttribute(name:uniqueUuid16,scope:uniqueUuid17):object"
    - type: "STATIC"
      name: "ObjectUtils.class"
      modelFingerprint: "04CC843A3C6EF388DC3740D222F2E3D7"
      valueUuid: "ObjectUtils.class"
      methodExercised:
        expression: "isEmpty(obj:object):boolean1"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "25FD9920EAB36AEB9ABCDC4C1708075C"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasLength(str:message):boolean2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "0E90811EF91602A0027AAEC3CFB6FF48"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.error.DefaultErrorAttributes"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.error.DefaultErrorAttributes"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.web.context.request.WebRequest"
      uuid: "webRequest"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "message"
      valueType: "java.lang.Throwable"
      uuid: "error"
    - sapientType: "MOCK"
      valueType: "org.springframework.web.context.request.WebRequest"
      uuid: "webRequest"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
    - sapientType: "BASIC"
      content: !<regular>
        value: "jakarta.servlet.error.message"
      valueType: "java.lang.String"
      uuid: "uniqueUuid16"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "uniqueUuid17"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "message"
    - sapientType: "BASIC"
      content: !<regular>
        value: "No message available"
      valueType: "java.lang.String"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 181
      expression: "!ObjectUtils.isEmpty(message)"
      range: "(181,7)-(181,35)"
      evaluatedAs: false
    - lineNumber: 184
      expression: "error != null"
      range: "(184,7)-(184,19)"
      evaluatedAs: true
    - lineNumber: 184
      expression: "StringUtils.hasLength(error.getMessage())"
      range: "(184,24)-(184,64)"
      evaluatedAs: false
- method:
    name: "getError"
    sourceCodeSignature: "Throwable getError(WebRequest webRequest)"
    returnType: "java.lang.Throwable"
    parameters:
    - name: "webRequest"
      type: "org.springframework.web.context.request.WebRequest"
    instructionFingerprint: "FFC9F041E6450E4405455DC16DC7029E"
  paths:
  - pathId: "path1"
    testPathName: "getErrorWhenExceptionIsNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "F1BB1075AA83610FBC393251881E6998"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "webRequest"
      modelFingerprint: "7626EA373048F1C35DED74F38555EA16"
      valueUuid: "webRequest"
    - type: "LOCAL_VARIABLE"
      name: "requestAttributes"
      modelFingerprint: "CF341F04B4A5716FCFB50B2F409F7CF8"
      valueUuid: "webRequest"
      methodExercised:
        expression: "getAttribute(name:string3,scope:uniqueUuid18):object"
    - type: "LOCAL_VARIABLE"
      name: "requestAttributes"
      modelFingerprint: "DB4D05A6C2F19156FEE1EE7A7BC1A6A8"
      valueUuid: "webRequest"
      methodExercised:
        expression: "getAttribute(name:uniqueUuid19,scope:uniqueUuid20):object2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "17D5B43AEF9F06C704733666F786B739"
      valueUuid: "object2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.error.DefaultErrorAttributes"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.error.DefaultErrorAttributes"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.web.context.request.WebRequest"
      uuid: "webRequest"
    - sapientType: "MOCK"
      valueType: "org.springframework.web.context.request.WebRequest"
      uuid: "webRequest"
    - sapientType: "NULL"
      valueType: "java.lang.Throwable"
      uuid: "object"
      fixed: true
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.web.servlet.error.DefaultErrorAttributes.ERROR"
      valueType: "java.lang.String"
      uuid: "string3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "uniqueUuid18"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.web.context.request.WebRequest"
      uuid: "webRequest"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "object2"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "jakarta.servlet.error.exception"
      valueType: "java.lang.String"
      uuid: "uniqueUuid19"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "uniqueUuid20"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "object2"
      explicitCastNeeded: true
    branches:
    - lineNumber: 220
      expression: "exception == null"
      range: "(220,7)-(220,23)"
      evaluatedAs: true
