---
modelFingerprint: "72D734AD659FA3D4DAD68CC516D260D2"
targetClass:
  fullClassName: "org.springframework.boot.convert.InetAddressFormatter"
methods:
- method:
    name: "print"
    sourceCodeSignature: "String print(InetAddress object, Locale locale)"
    returnType: "java.lang.String"
    parameters:
    - name: "object"
      type: "java.net.InetAddress"
    - name: "locale"
      type: "java.util.Locale"
    instructionFingerprint: "1A863563548CD0C58D5460648471DAA5"
  paths:
  - pathId: "path1"
    testPathName: "printTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "60A2192E04E2927DA5EDB3E1398DCC21"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "object"
      modelFingerprint: "771B035DB16AFF9E685C1707E2FEB66C"
      valueUuid: "object"
    - type: "INPUT"
      name: "locale"
      modelFingerprint: "5BC1DC0867525DE79207E24421C53202"
      valueUuid: "locale"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "6FEDEE8F322A2AE54E425363F6724F66"
      valueUuid: "string"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.convert.InetAddressFormatter"
        parameters: []
      valueType: "org.springframework.boot.convert.InetAddressFormatter"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.net.InetAddress"
        method: "getLoopbackAddress"
        methodParameters: []
      valueType: "java.net.InetAddress"
      uuid: "object"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.util.Locale"
        parameters:
        - name: "language"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "language1"
            valueType: "java.lang.String"
            uuid: "locale-language"
      valueType: "java.util.Locale"
      uuid: "locale"
    - sapientType: "BASIC"
      content: !<regular>
        value: "127.0.0.1"
      valueType: "java.lang.String"
      uuid: "string"
- method:
    name: "parse"
    sourceCodeSignature: "InetAddress parse(String text, Locale locale)"
    returnType: "java.net.InetAddress"
    throwsExceptions:
    - "java.text.ParseException"
    parameters:
    - name: "text"
      type: "java.lang.String"
    - name: "locale"
      type: "java.util.Locale"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.net.UnknownHostException"
    instructionFingerprint: "51CA56CCE45E68BBE5A3A33D6963A155"
  paths:
  - pathId: "path1"
    testPathName: "parseTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "FBA94C4A99AFF822CD61DD96EC68AB27"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "text"
      modelFingerprint: "9CD3F745CB4762EDFBB5CD7ED7A60F04"
      valueUuid: "text"
    - type: "INPUT"
      name: "locale"
      modelFingerprint: "5A54D85CEB69D87DB67C2DBD628A7B22"
      valueUuid: "locale"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "F0402DA6F9AC412C066A0F544519309F"
      valueUuid: "inetAddress"
    disabled: true
    failureReason:
      reason: "REFLECTION_CALL_FAILURE"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.convert.InetAddressFormatter"
        parameters: []
      valueType: "org.springframework.boot.convert.InetAddressFormatter"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "text"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.util.Locale"
        parameters:
        - name: "language"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "language1"
            valueType: "java.lang.String"
            uuid: "locale-language"
      valueType: "java.util.Locale"
      uuid: "locale"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.net.InetAddress"
        method: "getLoopbackAddress"
        methodParameters: []
      valueType: "java.net.InetAddress"
      uuid: "inetAddress"
  - pathId: "path2"
    testPathName: "parseWhenCaughtUnknownHostExceptionThrowsIllegalStateException"
    constructorSignature: "<init>() : void"
    modelFingerprint: "79B303B3122890FEAF5F8929303D9296"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "text"
      modelFingerprint: "9CD3F745CB4762EDFBB5CD7ED7A60F04"
      valueUuid: "text"
    - type: "INPUT"
      name: "locale"
      modelFingerprint: "5A54D85CEB69D87DB67C2DBD628A7B22"
      valueUuid: "locale"
    - type: "STATIC"
      name: "InetAddress.class"
      modelFingerprint: "719341C16AB951E89CE57D6E3EBB8CB5"
      valueUuid: "InetAddress.class"
      methodExercised:
        expression: "getByName(host:text):inetAddress"
        throwsExceptions:
        - "java.net.UnknownHostException"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B7CA8A02A572E40491CFBCA5724EF350"
      valueUuid: "illegalStateException"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.convert.InetAddressFormatter"
        parameters: []
      valueType: "org.springframework.boot.convert.InetAddressFormatter"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "text"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.util.Locale"
        parameters:
        - name: "language"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "language1"
            valueType: "java.lang.String"
            uuid: "locale-language"
      valueType: "java.util.Locale"
      uuid: "locale"
    - sapientType: "MOCK"
      valueType: "java.net.InetAddress"
      uuid: "InetAddress.class"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.net.UnknownHostException"
        parameters: []
      valueType: "java.net.UnknownHostException"
      uuid: "inetAddress"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "text"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Unknown host A"
            valueType: "java.lang.String"
            uuid: "string"
        - name: "cause"
          value:
            sapientType: "EXCEPTION"
            content: !<new>
              target: "java.net.UnknownHostException"
              parameters: []
            valueType: "java.net.UnknownHostException"
            uuid: "inetAddress"
      valueType: "java.lang.IllegalStateException"
      uuid: "illegalStateException"
      fixed: true
    branches:
    - lineNumber: 43
      expression: "catch-exception (UnknownHostException)"
      range: "(43,3)-(43,32)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.net.UnknownHostException"
