---
modelFingerprint: "E60D47FB018713DEDFFD62F4277C6684"
targetClass:
  fullClassName: "org.springframework.boot.convert.DelimitedStringToArrayConverter"
methods:
- method:
    name: "getConvertibleTypes"
    sourceCodeSignature: "Set<ConvertiblePair> getConvertibleTypes()"
    returnType: "java.util.Set"
    genericReturnType: "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair"
    instructionFingerprint: "87377FE959BAF1B57ACFB1A025BD40CA"
  paths:
  - pathId: "path1"
    testPathName: "getConvertibleTypesTest"
    constructorSignature: "<init>(org.springframework.core.convert.ConversionService)\
      \ : void"
    modelFingerprint: "6A769E8392E3B2962C065D27985C1A13"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "241FB8FF4849D4F44034A7279F5B50E9"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "904864806854FA119E1C01ED26710DA7"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:conversionService,message:uniqueUuid1):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "345D2051AFA8D8FBF2A7735C0ACC1589"
      valueUuid: "set"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.convert.DelimitedStringToArrayConverter"
        parameters:
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
      valueType: "org.springframework.boot.convert.DelimitedStringToArrayConverter"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionService"
      uuid: "conversionService"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ConversionService must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair"
            parameters:
            - name: "sourceType"
              value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "java.lang.String"
                valueType: "java.lang.Class"
                genericValueType: "java.lang.String"
                fixed: true
            - name: "targetType"
              value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "java.lang.Object[]"
                valueType: "java.lang.Class"
                genericValueType: "java.lang.Object[]"
                fixed: true
          valueType: "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair"
          uuid: "genericConverter.ConvertiblePair"
          fixed: true
      valueType: "java.util.Set"
      genericValueType: "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair"
      uuid: "set"
- method:
    name: "matches"
    sourceCodeSignature: "boolean matches(TypeDescriptor sourceType, TypeDescriptor\
      \ targetType)"
    returnType: "boolean"
    parameters:
    - name: "sourceType"
      type: "org.springframework.core.convert.TypeDescriptor"
    - name: "targetType"
      type: "org.springframework.core.convert.TypeDescriptor"
    instructionFingerprint: "B078C72DF83D3E2C2FE8111396A3B97D"
  paths:
  - pathId: "path1"
    testPathName: "matchesWhenThisConversionServiceCanConvertSourceTypeTargetTypeGetElementTypeDescriptor"
    constructorSignature: "<init>(org.springframework.core.convert.ConversionService)\
      \ : void"
    modelFingerprint: "AEAF1FB2BD022E52C2C37259071A1881"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F4FE1F638E53790B766AA80EBE6107FC"
      valueUuid: "target"
    - type: "INPUT"
      name: "sourceType"
      modelFingerprint: "91EECCE55C37529E96EA4FBD7681A2FD"
      valueUuid: "sourceType"
    - type: "INPUT"
      name: "targetType"
      modelFingerprint: "85959C0202C03D421014C4181A3EF722"
      valueUuid: "targetType"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "EFDFD43B32BE6AF62310C645A690A182"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:conversionService,message:uniqueUuid2):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "targetType"
      modelFingerprint: "80C27A3B0D6801143CD8439F00DC2357"
      valueUuid: "targetType"
      methodExercised:
        expression: "getElementTypeDescriptor():typeDescriptor"
    - type: "LOCAL_VARIABLE"
      name: "targetType"
      modelFingerprint: "80C27A3B0D6801143CD8439F00DC2357"
      valueUuid: "targetType"
      methodExercised:
        expression: "getElementTypeDescriptor():typeDescriptor2"
    - type: "FIELD"
      name: "conversionService"
      modelFingerprint: "967580914D6248CEDA2EC35B6D41FD8F"
      valueUuid: "conversionService"
      methodExercised:
        expression: "canConvert(sourceType:sourceType,targetType:typeDescriptor2):boolean1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8383DF6F1D02800B0E90FD4143032B37"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.convert.DelimitedStringToArrayConverter"
        parameters:
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
      valueType: "org.springframework.boot.convert.DelimitedStringToArrayConverter"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionService"
      uuid: "conversionService"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ConversionService must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "typeDescriptor"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "typeDescriptor2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionService"
      uuid: "conversionService"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "typeDescriptor2"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 50
      expression: "targetType.getElementTypeDescriptor() == null"
      range: "(50,10)-(50,54)"
      evaluatedAs: false
    - lineNumber: 51
      expression: "this.conversionService.canConvert(sourceType, targetType.getElementTypeDescriptor())"
      range: "(51,8)-(51,91)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "matchesWhenThisConversionServiceNotCanConvertSourceTypeTargetTypeGetElementTypeDescriptor"
    constructorSignature: "<init>(org.springframework.core.convert.ConversionService)\
      \ : void"
    modelFingerprint: "8468E15038C649E7D4C525BEA5837D9C"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F4FE1F638E53790B766AA80EBE6107FC"
      valueUuid: "target"
    - type: "INPUT"
      name: "sourceType"
      modelFingerprint: "91EECCE55C37529E96EA4FBD7681A2FD"
      valueUuid: "sourceType"
    - type: "INPUT"
      name: "targetType"
      modelFingerprint: "85959C0202C03D421014C4181A3EF722"
      valueUuid: "targetType"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "EFDFD43B32BE6AF62310C645A690A182"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:conversionService,message:uniqueUuid3):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "targetType"
      modelFingerprint: "80C27A3B0D6801143CD8439F00DC2357"
      valueUuid: "targetType"
      methodExercised:
        expression: "getElementTypeDescriptor():typeDescriptor"
    - type: "LOCAL_VARIABLE"
      name: "targetType"
      modelFingerprint: "80C27A3B0D6801143CD8439F00DC2357"
      valueUuid: "targetType"
      methodExercised:
        expression: "getElementTypeDescriptor():typeDescriptor2"
    - type: "FIELD"
      name: "conversionService"
      modelFingerprint: "D767792AD0393F458721209001853C03"
      valueUuid: "conversionService"
      methodExercised:
        expression: "canConvert(sourceType:sourceType,targetType:typeDescriptor2):boolean1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.convert.DelimitedStringToArrayConverter"
        parameters:
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
      valueType: "org.springframework.boot.convert.DelimitedStringToArrayConverter"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionService"
      uuid: "conversionService"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ConversionService must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "typeDescriptor"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "typeDescriptor2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionService"
      uuid: "conversionService"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "typeDescriptor2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 50
      expression: "targetType.getElementTypeDescriptor() == null"
      range: "(50,10)-(50,54)"
      evaluatedAs: false
    - lineNumber: 51
      expression: "this.conversionService.canConvert(sourceType, targetType.getElementTypeDescriptor())"
      range: "(51,8)-(51,91)"
      evaluatedAs: false
- method:
    name: "convert"
    sourceCodeSignature: "Object convert(Object source, TypeDescriptor sourceType,\
      \ TypeDescriptor targetType)"
    returnType: "java.lang.Object"
    parameters:
    - name: "source"
      type: "java.lang.Object"
    - name: "sourceType"
      type: "org.springframework.core.convert.TypeDescriptor"
    - name: "targetType"
      type: "org.springframework.core.convert.TypeDescriptor"
    instructionFingerprint: "D403A39C860C71F184103C5BE8E7A719"
  paths:
  - pathId: "path1"
    testPathName: "convertWhenSourceIsNull"
    constructorSignature: "<init>(org.springframework.core.convert.ConversionService)\
      \ : void"
    modelFingerprint: "509685EF4BD63FB0EB728F20954F5616"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "241FB8FF4849D4F44034A7279F5B50E9"
      valueUuid: "target"
    - type: "INPUT"
      name: "source"
      modelFingerprint: "F6FFB6CDEC4F875F0D04D6C217ECB41A"
      valueUuid: "source"
    - type: "INPUT"
      name: "sourceType"
      modelFingerprint: "91EECCE55C37529E96EA4FBD7681A2FD"
      valueUuid: "sourceType"
    - type: "INPUT"
      name: "targetType"
      modelFingerprint: "6F1AA1CCF0481D3BCFE67EFB2BB4F52E"
      valueUuid: "targetType"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "904864806854FA119E1C01ED26710DA7"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:conversionService,message:uniqueUuid4):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B5832848421B6892B8D06BE61ADCD847"
      valueUuid: "object"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.convert.DelimitedStringToArrayConverter"
        parameters:
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
      valueType: "org.springframework.boot.convert.DelimitedStringToArrayConverter"
      uuid: "target"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "source"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionService"
      uuid: "conversionService"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ConversionService must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object"
      fixed: true
    branches:
    - lineNumber: 56
      expression: "source == null"
      range: "(56,7)-(56,20)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "convertWhenSourceIsNotNull"
    constructorSignature: "<init>(org.springframework.core.convert.ConversionService)\
      \ : void"
    modelFingerprint: "51E331C7AD510FCAE1AA5E75D06E4FF3"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "241FB8FF4849D4F44034A7279F5B50E9"
      valueUuid: "target"
    - type: "INPUT"
      name: "source"
      modelFingerprint: "CA57CC20A9EBC79858FA8E6B7526CE39"
      valueUuid: "source"
    - type: "INPUT"
      name: "sourceType"
      modelFingerprint: "91EECCE55C37529E96EA4FBD7681A2FD"
      valueUuid: "sourceType"
    - type: "INPUT"
      name: "targetType"
      modelFingerprint: "6F1AA1CCF0481D3BCFE67EFB2BB4F52E"
      valueUuid: "targetType"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "904864806854FA119E1C01ED26710DA7"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:conversionService,message:uniqueUuid5):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_INTERNAL_METHOD_RECURSIVE_CALL"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.convert.DelimitedStringToArrayConverter"
        parameters:
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
      valueType: "org.springframework.boot.convert.DelimitedStringToArrayConverter"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "source1"
      valueType: "java.lang.String"
      uuid: "source"
      explicitCastNeeded: true
      explicitCastForOverloadedMethods: "java.lang.Object"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionService"
      uuid: "conversionService"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ConversionService must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
    branches:
    - lineNumber: 56
      expression: "source == null"
      range: "(56,7)-(56,20)"
      evaluatedAs: false
