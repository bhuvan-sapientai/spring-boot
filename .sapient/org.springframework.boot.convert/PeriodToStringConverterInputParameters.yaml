---
modelFingerprint: "185EB401599696E8B8E2A624A3382878"
targetClass:
  fullClassName: "org.springframework.boot.convert.PeriodToStringConverter"
methods:
- method:
    name: "getConvertibleTypes"
    sourceCodeSignature: "Set<ConvertiblePair> getConvertibleTypes()"
    returnType: "java.util.Set"
    genericReturnType: "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair"
    instructionFingerprint: "71E5F342642E40AE5702FE2C42F74DDF"
  paths:
  - pathId: "path1"
    testPathName: "getConvertibleTypesTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "A35EF8A7AEB18F8794DD931CF9EE176B"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "07E9CE28C9BB93CA3B6787F65940B752"
      valueUuid: "set"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.convert.PeriodToStringConverter"
        parameters: []
      valueType: "org.springframework.boot.convert.PeriodToStringConverter"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair"
            parameters:
            - name: "sourceType"
              value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "java.time.Period"
                valueType: "java.lang.Class"
                genericValueType: "java.time.Period"
                fixed: true
            - name: "targetType"
              value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "java.lang.String"
                valueType: "java.lang.Class"
                genericValueType: "java.lang.String"
                fixed: true
          valueType: "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair"
          uuid: "genericConverter.ConvertiblePair"
          fixed: true
      valueType: "java.util.Set"
      genericValueType: "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair"
      uuid: "set"
- method:
    name: "convert"
    sourceCodeSignature: "Object convert(Object source, TypeDescriptor sourceType,\
      \ TypeDescriptor targetType)"
    returnType: "java.lang.Object"
    parameters:
    - name: "source"
      type: "java.lang.Object"
    - name: "sourceType"
      type: "org.springframework.core.convert.TypeDescriptor"
    - name: "targetType"
      type: "org.springframework.core.convert.TypeDescriptor"
    instructionFingerprint: "84593BA0AEAA15525F468FCC6624BBE6"
  paths:
  - pathId: "path1"
    testPathName: "convertWhenObjectUtilsIsEmptySource"
    constructorSignature: "<init>() : void"
    modelFingerprint: "1B09325A94581C9229548587B1803F62"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "source"
      modelFingerprint: "15807D8829DAD06E1E69045860E44740"
      valueUuid: "source"
    - type: "INPUT"
      name: "sourceType"
      modelFingerprint: "91EECCE55C37529E96EA4FBD7681A2FD"
      valueUuid: "sourceType"
    - type: "INPUT"
      name: "targetType"
      modelFingerprint: "6F1AA1CCF0481D3BCFE67EFB2BB4F52E"
      valueUuid: "targetType"
    - type: "STATIC"
      name: "ObjectUtils.class"
      modelFingerprint: "F4D50E4FF5F03FBF500FFE68F36FA75E"
      valueUuid: "ObjectUtils.class"
      methodExercised:
        expression: "isEmpty(obj:source):boolean1"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B5832848421B6892B8D06BE61ADCD847"
      valueUuid: "object"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.convert.PeriodToStringConverter"
        parameters: []
      valueType: "org.springframework.boot.convert.PeriodToStringConverter"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "source"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "source"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object"
      fixed: true
    branches:
    - lineNumber: 46
      expression: "ObjectUtils.isEmpty(source)"
      range: "(46,7)-(46,33)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "convertWhenStyleIsNotNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "7669EF80592F323EB3DF0214E065FEEA"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "source"
      modelFingerprint: "2C8B223E471F4CB57A9657277B633D70"
      valueUuid: "source"
    - type: "INPUT"
      name: "sourceType"
      modelFingerprint: "2FFF26BD9B0CE97DDB65EA1E2F1EB7E4"
      valueUuid: "sourceType"
    - type: "INPUT"
      name: "targetType"
      modelFingerprint: "6F1AA1CCF0481D3BCFE67EFB2BB4F52E"
      valueUuid: "targetType"
    - type: "STATIC"
      name: "ObjectUtils.class"
      modelFingerprint: "841C0BD104B672294060DDF501BA3AA4"
      valueUuid: "ObjectUtils.class"
      methodExercised:
        expression: "isEmpty(obj:source):boolean1"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "sourceType"
      modelFingerprint: "1FB4DD2FF1A9FC6C2B2CFCC4C729D863"
      valueUuid: "sourceType"
      methodExercised:
        expression: "getAnnotation(annotationType:uniqueUuid1):annotation"
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "577F75C167DF8978AC745E56D3C45645"
      valueUuid: "annotation"
      methodExercised:
        expression: "value():periodStyle"
    - type: "LOCAL_VARIABLE"
      name: "sourceType"
      modelFingerprint: "5B29DA32DF5BD8EA6B6207085706CA7C"
      valueUuid: "sourceType"
      methodExercised:
        expression: "getAnnotation(annotationType:uniqueUuid2):annotation2"
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "7A757D9C45CCD516686E9F42A02AB3B6"
      valueUuid: "annotation2"
      methodExercised:
        expression: "value():chronoUnit"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D446A609419428DDEAA49A58091F3986"
      valueUuid: "string"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.convert.PeriodStyle.print(java.time.Period,java.time.temporal.ChronoUnit)\
        \ : java.lang.String"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.convert.PeriodToStringConverter"
        parameters: []
      valueType: "org.springframework.boot.convert.PeriodToStringConverter"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Period"
        method: "ofYears"
        methodParameters:
        - name: "years"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "source-years"
      valueType: "java.time.Period"
      uuid: "source"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Period"
        method: "ofYears"
        methodParameters:
        - name: "years"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "source-years"
      valueType: "java.time.Period"
      uuid: "source"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.convert.PeriodFormat"
      uuid: "annotation"
      explicitCastNeeded: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.convert.PeriodFormat"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.convert.PeriodFormat"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.convert.PeriodFormat"
      uuid: "annotation"
      explicitCastNeeded: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "SIMPLE"
      valueType: "org.springframework.boot.convert.PeriodStyle"
      uuid: "periodStyle"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.convert.PeriodUnit"
      uuid: "annotation2"
      explicitCastNeeded: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.convert.PeriodUnit"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.convert.PeriodUnit"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.convert.PeriodUnit"
      uuid: "annotation2"
      explicitCastNeeded: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "NANOS"
      valueType: "java.time.temporal.ChronoUnit"
      uuid: "chronoUnit"
    - sapientType: "BASIC"
      content: !<regular>
        value: "result1"
      valueType: "java.lang.String"
      uuid: "string"
    branches:
    - lineNumber: 46
      expression: "ObjectUtils.isEmpty(source)"
      range: "(46,7)-(46,33)"
      evaluatedAs: false
    - lineNumber: 54
      expression: "annotation != null"
      range: "(54,11)-(54,28)"
      evaluatedAs: true
      internalMethodName: "getPeriodStyle"
    - lineNumber: 64
      expression: "annotation != null"
      range: "(64,11)-(64,28)"
      evaluatedAs: true
      internalMethodName: "getPeriodUnit"
    - lineNumber: 58
      expression: "style != null"
      range: "(58,12)-(58,24)"
      evaluatedAs: true
      internalMethodName: "convert"
  - pathId: "path5"
    testPathName: "convertWhenAnnotationIsNullAndAnnotationIsNullAndStyleIsNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "98ACE2E11AB076776569B103B3D60CFB"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "source"
      modelFingerprint: "54B08E1B7005B6E3D4446C99298E42C7"
      valueUuid: "source"
    - type: "INPUT"
      name: "sourceType"
      modelFingerprint: "2FFF26BD9B0CE97DDB65EA1E2F1EB7E4"
      valueUuid: "sourceType"
    - type: "INPUT"
      name: "targetType"
      modelFingerprint: "6F1AA1CCF0481D3BCFE67EFB2BB4F52E"
      valueUuid: "targetType"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "22D682FE58840350741EFDA6907ACD4B"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "isEmpty(obj:source):boolean1"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "sourceType"
      modelFingerprint: "2C4C981F5F5A0CF6048BFAD6D31E261B"
      valueUuid: "sourceType"
      methodExercised:
        expression: "getAnnotation(annotationType:uniqueUuid1):annotation"
    - type: "LOCAL_VARIABLE"
      name: "sourceType"
      modelFingerprint: "A28E93CBAADD11974F73A91EB3EDBFBC"
      valueUuid: "sourceType"
      methodExercised:
        expression: "getAnnotation(annotationType:uniqueUuid2):annotation2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2B8873CE4A40E16B4BE2377BC9611DE5"
      valueUuid: "string"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.convert.PeriodToStringConverter"
        parameters: []
      valueType: "org.springframework.boot.convert.PeriodToStringConverter"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Period"
        method: "ofYears"
        methodParameters:
        - name: "years"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "source-years"
      valueType: "java.time.Period"
      uuid: "source"
      explicitCastNeeded: true
      explicitCastForOverloadedMethods: "java.lang.Object"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Period"
        method: "ofYears"
        methodParameters:
        - name: "years"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "source-years"
      valueType: "java.time.Period"
      uuid: "source"
      explicitCastNeeded: true
      explicitCastForOverloadedMethods: "java.lang.Object"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.convert.PeriodFormat"
      uuid: "annotation"
      fixed: true
      explicitCastNeeded: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.convert.PeriodFormat"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.convert.PeriodFormat"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.convert.PeriodUnit"
      uuid: "annotation2"
      fixed: true
      explicitCastNeeded: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.convert.PeriodUnit"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.convert.PeriodUnit"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "P0D"
      valueType: "java.lang.String"
      uuid: "string"
    branches:
    - lineNumber: 46
      expression: "ObjectUtils.isEmpty(source)"
      range: "(46,7)-(46,33)"
      evaluatedAs: false
    - lineNumber: 54
      expression: "annotation != null"
      range: "(54,11)-(54,28)"
      evaluatedAs: false
      internalMethodName: "getPeriodStyle"
    - lineNumber: 64
      expression: "annotation != null"
      range: "(64,11)-(64,28)"
      evaluatedAs: false
      internalMethodName: "getPeriodUnit"
    - lineNumber: 58
      expression: "style != null"
      range: "(58,12)-(58,24)"
      evaluatedAs: false
      internalMethodName: "convert"
