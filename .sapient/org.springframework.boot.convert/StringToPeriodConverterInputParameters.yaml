---
modelFingerprint: "054EFF5AAA390167EAE6AF51BA85B9F9"
targetClass:
  fullClassName: "org.springframework.boot.convert.StringToPeriodConverter"
methods:
- method:
    name: "getConvertibleTypes"
    sourceCodeSignature: "Set<GenericConverter.ConvertiblePair> getConvertibleTypes()"
    returnType: "java.util.Set"
    genericReturnType: "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair"
    instructionFingerprint: "9FCB7BAF90F952D166A3ED53A62D3546"
  paths:
  - pathId: "path1"
    testPathName: "getConvertibleTypesTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "7E1F12385A60880E1232D1250BD0E4D5"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "6332197F66E4EDEFCB827C20B1669E7F"
      valueUuid: "set"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.convert.StringToPeriodConverter"
        parameters: []
      valueType: "org.springframework.boot.convert.StringToPeriodConverter"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair"
            parameters:
            - name: "sourceType"
              value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "java.lang.String"
                valueType: "java.lang.Class"
                genericValueType: "java.lang.String"
                fixed: true
            - name: "targetType"
              value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "java.time.Period"
                valueType: "java.lang.Class"
                genericValueType: "java.time.Period"
                fixed: true
          valueType: "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair"
          uuid: "genericConverter.ConvertiblePair"
          fixed: true
      valueType: "java.util.Set"
      genericValueType: "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair"
      uuid: "set"
- method:
    name: "convert"
    sourceCodeSignature: "Object convert(Object source, TypeDescriptor sourceType,\
      \ TypeDescriptor targetType)"
    returnType: "java.lang.Object"
    parameters:
    - name: "source"
      type: "java.lang.Object"
    - name: "sourceType"
      type: "org.springframework.core.convert.TypeDescriptor"
    - name: "targetType"
      type: "org.springframework.core.convert.TypeDescriptor"
    instructionFingerprint: "D6022C5BDFC355F99134E457665E6C8D"
  paths:
  - pathId: "path1"
    testPathName: "convertWhenObjectUtilsIsEmptySource"
    constructorSignature: "<init>() : void"
    modelFingerprint: "1B09325A94581C9229548587B1803F62"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "source"
      modelFingerprint: "15807D8829DAD06E1E69045860E44740"
      valueUuid: "source"
    - type: "INPUT"
      name: "sourceType"
      modelFingerprint: "91EECCE55C37529E96EA4FBD7681A2FD"
      valueUuid: "sourceType"
    - type: "INPUT"
      name: "targetType"
      modelFingerprint: "6F1AA1CCF0481D3BCFE67EFB2BB4F52E"
      valueUuid: "targetType"
    - type: "STATIC"
      name: "ObjectUtils.class"
      modelFingerprint: "F4D50E4FF5F03FBF500FFE68F36FA75E"
      valueUuid: "ObjectUtils.class"
      methodExercised:
        expression: "isEmpty(obj:source):boolean1"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B5832848421B6892B8D06BE61ADCD847"
      valueUuid: "object"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.convert.StringToPeriodConverter"
        parameters: []
      valueType: "org.springframework.boot.convert.StringToPeriodConverter"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "source"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "source"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object"
      fixed: true
    branches:
    - lineNumber: 47
      expression: "ObjectUtils.isEmpty(source)"
      range: "(47,7)-(47,33)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "convertWhenStyleIsNotNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "C4A6B2E472BB9EFA7585EEDD1CD90DA4"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "source"
      modelFingerprint: "197103DBE2F448402B86446796F8B9FD"
      valueUuid: "source"
    - type: "INPUT"
      name: "sourceType"
      modelFingerprint: "91EECCE55C37529E96EA4FBD7681A2FD"
      valueUuid: "sourceType"
    - type: "INPUT"
      name: "targetType"
      modelFingerprint: "85959C0202C03D421014C4181A3EF722"
      valueUuid: "targetType"
    - type: "STATIC"
      name: "ObjectUtils.class"
      modelFingerprint: "D2B184D9CF35211367678C6C834C9C01"
      valueUuid: "ObjectUtils.class"
      methodExercised:
        expression: "isEmpty(obj:source):boolean1"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "targetType"
      modelFingerprint: "1FB4DD2FF1A9FC6C2B2CFCC4C729D863"
      valueUuid: "targetType"
      methodExercised:
        expression: "getAnnotation(annotationType:uniqueUuid1):annotation"
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "3A0EFE3CB890DD21E2E2E0CF3C6DE5D4"
      valueUuid: "annotation"
      methodExercised:
        expression: "value():periodStyle"
    - type: "LOCAL_VARIABLE"
      name: "targetType"
      modelFingerprint: "5B29DA32DF5BD8EA6B6207085706CA7C"
      valueUuid: "targetType"
      methodExercised:
        expression: "getAnnotation(annotationType:uniqueUuid2):annotation2"
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "31D10791703EBB3964782BC8FCEAE7AC"
      valueUuid: "annotation2"
      methodExercised:
        expression: "value():chronoUnit"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E6D153CEECAECBB3F01F24B04E1C5519"
      valueUuid: "period"
    disabled: true
    failureReason:
      reason: "REFLECTION_CALL_FAILURE"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.convert.StringToPeriodConverter"
        parameters: []
      valueType: "org.springframework.boot.convert.StringToPeriodConverter"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "java.lang.Object"
      uuid: "source"
      nameForMock: "source"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "java.lang.Object"
      uuid: "source"
      nameForMock: "source"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.convert.PeriodFormat"
      uuid: "annotation"
      explicitCastNeeded: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.convert.PeriodFormat"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.convert.PeriodFormat"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.convert.PeriodFormat"
      uuid: "annotation"
      explicitCastNeeded: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "SIMPLE"
      valueType: "org.springframework.boot.convert.PeriodStyle"
      uuid: "periodStyle"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.convert.PeriodUnit"
      uuid: "annotation2"
      explicitCastNeeded: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.convert.PeriodUnit"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.convert.PeriodUnit"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.convert.PeriodUnit"
      uuid: "annotation2"
      explicitCastNeeded: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "FOREVER"
      valueType: "java.time.temporal.ChronoUnit"
      uuid: "chronoUnit"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Period"
        method: "ofYears"
        methodParameters:
        - name: "years"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "period-years"
      valueType: "java.time.Period"
      uuid: "period"
    branches:
    - lineNumber: 47
      expression: "ObjectUtils.isEmpty(source)"
      range: "(47,7)-(47,33)"
      evaluatedAs: false
    - lineNumber: 55
      expression: "annotation != null"
      range: "(55,11)-(55,28)"
      evaluatedAs: true
      internalMethodName: "getStyle"
    - lineNumber: 60
      expression: "annotation != null"
      range: "(60,11)-(60,28)"
      evaluatedAs: true
      internalMethodName: "getPeriodUnit"
    - lineNumber: 64
      expression: "style != null"
      range: "(64,12)-(64,24)"
      evaluatedAs: true
      internalMethodName: "convert"
  - pathId: "path5"
    testPathName: "convertWhenAnnotationIsNullAndAnnotationIsNullAndStyleIsNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "068660033B8FB26FCD32179DB03C502C"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "source"
      modelFingerprint: "197103DBE2F448402B86446796F8B9FD"
      valueUuid: "source"
    - type: "INPUT"
      name: "sourceType"
      modelFingerprint: "91EECCE55C37529E96EA4FBD7681A2FD"
      valueUuid: "sourceType"
    - type: "INPUT"
      name: "targetType"
      modelFingerprint: "85959C0202C03D421014C4181A3EF722"
      valueUuid: "targetType"
    - type: "STATIC"
      name: "ObjectUtils.class"
      modelFingerprint: "D2B184D9CF35211367678C6C834C9C01"
      valueUuid: "ObjectUtils.class"
      methodExercised:
        expression: "isEmpty(obj:source):boolean1"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "targetType"
      modelFingerprint: "2C4C981F5F5A0CF6048BFAD6D31E261B"
      valueUuid: "targetType"
      methodExercised:
        expression: "getAnnotation(annotationType:uniqueUuid3):annotation"
    - type: "LOCAL_VARIABLE"
      name: "targetType"
      modelFingerprint: "A28E93CBAADD11974F73A91EB3EDBFBC"
      valueUuid: "targetType"
      methodExercised:
        expression: "getAnnotation(annotationType:uniqueUuid4):annotation2"
    - type: "STATIC"
      name: "PeriodStyle.class"
      modelFingerprint: "7E8B6D434F46BB278CD2C10C34BE5762"
      valueUuid: "PeriodStyle.class"
      methodExercised:
        expression: "detect(value:string):periodStyle2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E6D153CEECAECBB3F01F24B04E1C5519"
      valueUuid: "period"
    disabled: true
    failureReason:
      reason: "REFLECTION_CALL_FAILURE"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.convert.StringToPeriodConverter"
        parameters: []
      valueType: "org.springframework.boot.convert.StringToPeriodConverter"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "java.lang.Object"
      uuid: "source"
      nameForMock: "source"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "java.lang.Object"
      uuid: "source"
      nameForMock: "source"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.convert.PeriodFormat"
      uuid: "annotation"
      fixed: true
      explicitCastNeeded: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.convert.PeriodFormat"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.convert.PeriodFormat"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.convert.PeriodUnit"
      uuid: "annotation2"
      fixed: true
      explicitCastNeeded: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.convert.PeriodUnit"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.convert.PeriodUnit"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.convert.PeriodStyle"
      uuid: "PeriodStyle.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "SIMPLE"
      valueType: "org.springframework.boot.convert.PeriodStyle"
      uuid: "periodStyle2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "source"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Period"
        method: "ofYears"
        methodParameters:
        - name: "years"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "period-years"
      valueType: "java.time.Period"
      uuid: "period"
    branches:
    - lineNumber: 47
      expression: "ObjectUtils.isEmpty(source)"
      range: "(47,7)-(47,33)"
      evaluatedAs: false
    - lineNumber: 55
      expression: "annotation != null"
      range: "(55,11)-(55,28)"
      evaluatedAs: false
      internalMethodName: "getStyle"
    - lineNumber: 60
      expression: "annotation != null"
      range: "(60,11)-(60,28)"
      evaluatedAs: false
      internalMethodName: "getPeriodUnit"
    - lineNumber: 64
      expression: "style != null"
      range: "(64,12)-(64,24)"
      evaluatedAs: false
      internalMethodName: "convert"
