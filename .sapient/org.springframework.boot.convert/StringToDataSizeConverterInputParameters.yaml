---
modelFingerprint: "959BB01C457D3B7067349C20CE11B74B"
targetClass:
  fullClassName: "org.springframework.boot.convert.StringToDataSizeConverter"
methods:
- method:
    name: "getConvertibleTypes"
    sourceCodeSignature: "Set<ConvertiblePair> getConvertibleTypes()"
    returnType: "java.util.Set"
    genericReturnType: "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair"
    instructionFingerprint: "7D73AAD9285A16007701886F7F0E72DB"
  paths:
  - pathId: "path1"
    testPathName: "getConvertibleTypesTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "E854FFCEDF4CD2FB56D43737AD1B6C1C"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "29517EDEBB80A39BA9B1BC9A38383DE0"
      valueUuid: "set"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.convert.StringToDataSizeConverter"
        parameters: []
      valueType: "org.springframework.boot.convert.StringToDataSizeConverter"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair"
            parameters:
            - name: "sourceType"
              value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "java.lang.String"
                valueType: "java.lang.Class"
                genericValueType: "java.lang.String"
                fixed: true
            - name: "targetType"
              value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.springframework.util.unit.DataSize"
                valueType: "java.lang.Class"
                genericValueType: "org.springframework.util.unit.DataSize"
                fixed: true
          valueType: "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair"
          uuid: "genericConverter.ConvertiblePair"
          fixed: true
      valueType: "java.util.Set"
      genericValueType: "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair"
      uuid: "set"
- method:
    name: "convert"
    sourceCodeSignature: "Object convert(Object source, TypeDescriptor sourceType,\
      \ TypeDescriptor targetType)"
    returnType: "java.lang.Object"
    parameters:
    - name: "source"
      type: "java.lang.Object"
    - name: "sourceType"
      type: "org.springframework.core.convert.TypeDescriptor"
    - name: "targetType"
      type: "org.springframework.core.convert.TypeDescriptor"
    instructionFingerprint: "FC8D6EE6875D9CDB797BF2D17E912D3B"
  paths:
  - pathId: "path1"
    testPathName: "convertWhenObjectUtilsIsEmptySource"
    constructorSignature: "<init>() : void"
    modelFingerprint: "1B09325A94581C9229548587B1803F62"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "source"
      modelFingerprint: "15807D8829DAD06E1E69045860E44740"
      valueUuid: "source"
    - type: "INPUT"
      name: "sourceType"
      modelFingerprint: "91EECCE55C37529E96EA4FBD7681A2FD"
      valueUuid: "sourceType"
    - type: "INPUT"
      name: "targetType"
      modelFingerprint: "6F1AA1CCF0481D3BCFE67EFB2BB4F52E"
      valueUuid: "targetType"
    - type: "STATIC"
      name: "ObjectUtils.class"
      modelFingerprint: "F4D50E4FF5F03FBF500FFE68F36FA75E"
      valueUuid: "ObjectUtils.class"
      methodExercised:
        expression: "isEmpty(obj:source):boolean1"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B5832848421B6892B8D06BE61ADCD847"
      valueUuid: "object"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.convert.StringToDataSizeConverter"
        parameters: []
      valueType: "org.springframework.boot.convert.StringToDataSizeConverter"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "source"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "source"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object"
      fixed: true
    branches:
    - lineNumber: 45
      expression: "ObjectUtils.isEmpty(source)"
      range: "(45,7)-(45,33)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "convertWhenAnnotationIsNotNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "79367457C0BDC5E9CFA0ACB15BB1B607"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "source"
      modelFingerprint: "197103DBE2F448402B86446796F8B9FD"
      valueUuid: "source"
    - type: "INPUT"
      name: "sourceType"
      modelFingerprint: "91EECCE55C37529E96EA4FBD7681A2FD"
      valueUuid: "sourceType"
    - type: "INPUT"
      name: "targetType"
      modelFingerprint: "85959C0202C03D421014C4181A3EF722"
      valueUuid: "targetType"
    - type: "STATIC"
      name: "ObjectUtils.class"
      modelFingerprint: "D2B184D9CF35211367678C6C834C9C01"
      valueUuid: "ObjectUtils.class"
      methodExercised:
        expression: "isEmpty(obj:source):boolean1"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "targetType"
      modelFingerprint: "F199E03F80DE3128042BDB857E4D897B"
      valueUuid: "targetType"
      methodExercised:
        expression: "getAnnotation(annotationType:uniqueUuid1):annotation"
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "1F1A9CA3FDB909E8346519089067E505"
      valueUuid: "annotation"
      methodExercised:
        expression: "value():dataUnit"
    - type: "STATIC"
      name: "DataSize.class"
      modelFingerprint: "2A5D892663947EE39E48FAB77E3F9E7F"
      valueUuid: "DataSize.class"
      methodExercised:
        expression: "parse(text:string,defaultUnit:dataUnit):dataSize"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "728258EA352841752013102D7887698D"
      valueUuid: "dataSize"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.convert.StringToDataSizeConverter"
        parameters: []
      valueType: "org.springframework.boot.convert.StringToDataSizeConverter"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "java.lang.Object"
      uuid: "source"
      nameForMock: "source"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "java.lang.Object"
      uuid: "source"
      nameForMock: "source"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.convert.DataSizeUnit"
      uuid: "annotation"
      explicitCastNeeded: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.convert.DataSizeUnit"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.convert.DataSizeUnit"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.convert.DataSizeUnit"
      uuid: "annotation"
      explicitCastNeeded: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "BYTES"
      valueType: "org.springframework.util.unit.DataUnit"
      uuid: "dataUnit"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.unit.DataSize"
      uuid: "DataSize.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.unit.DataSize"
      uuid: "dataSize"
    - sapientType: "BASIC"
      content: !<regular>
        value: "source"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "ENUM"
      content: !<regular>
        value: "BYTES"
      valueType: "org.springframework.util.unit.DataUnit"
      uuid: "dataUnit"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.unit.DataSize"
      uuid: "dataSize"
    branches:
    - lineNumber: 45
      expression: "ObjectUtils.isEmpty(source)"
      range: "(45,7)-(45,33)"
      evaluatedAs: false
    - lineNumber: 53
      expression: "annotation != null"
      range: "(53,11)-(53,28)"
      evaluatedAs: true
      internalMethodName: "getDataUnit"
  - pathId: "path3"
    testPathName: "convertWhenAnnotationIsNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "AFF1ECAF0AA6CA58EB04DD5872476EBD"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "source"
      modelFingerprint: "197103DBE2F448402B86446796F8B9FD"
      valueUuid: "source"
    - type: "INPUT"
      name: "sourceType"
      modelFingerprint: "91EECCE55C37529E96EA4FBD7681A2FD"
      valueUuid: "sourceType"
    - type: "INPUT"
      name: "targetType"
      modelFingerprint: "85959C0202C03D421014C4181A3EF722"
      valueUuid: "targetType"
    - type: "STATIC"
      name: "ObjectUtils.class"
      modelFingerprint: "D2B184D9CF35211367678C6C834C9C01"
      valueUuid: "ObjectUtils.class"
      methodExercised:
        expression: "isEmpty(obj:source):boolean1"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "targetType"
      modelFingerprint: "DFD6489234A1B415ED409182CD212A1B"
      valueUuid: "targetType"
      methodExercised:
        expression: "getAnnotation(annotationType:uniqueUuid2):annotation"
    - type: "STATIC"
      name: "DataSize.class"
      modelFingerprint: "05824F7E0165C26CCE051A89675EB1E1"
      valueUuid: "DataSize.class"
      methodExercised:
        expression: "parse(text:string,defaultUnit:dataUnit):dataSize"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "728258EA352841752013102D7887698D"
      valueUuid: "dataSize"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.convert.StringToDataSizeConverter"
        parameters: []
      valueType: "org.springframework.boot.convert.StringToDataSizeConverter"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "java.lang.Object"
      uuid: "source"
      nameForMock: "source"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "java.lang.Object"
      uuid: "source"
      nameForMock: "source"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.convert.DataSizeUnit"
      uuid: "annotation"
      fixed: true
      explicitCastNeeded: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.convert.DataSizeUnit"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.convert.DataSizeUnit"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.unit.DataSize"
      uuid: "DataSize.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.unit.DataSize"
      uuid: "dataSize"
    - sapientType: "BASIC"
      content: !<regular>
        value: "source"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "NULL"
      valueType: "org.springframework.util.unit.DataUnit"
      uuid: "dataUnit"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.unit.DataSize"
      uuid: "dataSize"
    branches:
    - lineNumber: 45
      expression: "ObjectUtils.isEmpty(source)"
      range: "(45,7)-(45,33)"
      evaluatedAs: false
    - lineNumber: 53
      expression: "annotation != null"
      range: "(53,11)-(53,28)"
      evaluatedAs: false
      internalMethodName: "getDataUnit"
