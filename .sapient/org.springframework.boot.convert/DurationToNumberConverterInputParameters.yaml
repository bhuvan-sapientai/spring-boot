---
modelFingerprint: "96EE3E2527076E17EABFBF341FB4EC68"
targetClass:
  fullClassName: "org.springframework.boot.convert.DurationToNumberConverter"
methods:
- method:
    name: "getConvertibleTypes"
    sourceCodeSignature: "Set<ConvertiblePair> getConvertibleTypes()"
    returnType: "java.util.Set"
    genericReturnType: "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair"
    instructionFingerprint: "E7F2347D0852DE78A9600C3FF97E9C74"
  paths:
  - pathId: "path1"
    testPathName: "getConvertibleTypesTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "F175F8222AEE555277B0083C86E724A1"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "26F0586BC0266C7FD46DAB5EAD9F8EAF"
      valueUuid: "set"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.convert.DurationToNumberConverter"
        parameters: []
      valueType: "org.springframework.boot.convert.DurationToNumberConverter"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair"
            parameters:
            - name: "sourceType"
              value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "java.time.Duration"
                valueType: "java.lang.Class"
                genericValueType: "java.time.Duration"
                fixed: true
            - name: "targetType"
              value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "java.lang.Number"
                valueType: "java.lang.Class"
                genericValueType: "java.lang.Number"
                fixed: true
          valueType: "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair"
          uuid: "genericConverter.ConvertiblePair"
          fixed: true
      valueType: "java.util.Set"
      genericValueType: "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair"
      uuid: "set"
- method:
    name: "convert"
    sourceCodeSignature: "Object convert(Object source, TypeDescriptor sourceType,\
      \ TypeDescriptor targetType)"
    returnType: "java.lang.Object"
    parameters:
    - name: "source"
      type: "java.lang.Object"
    - name: "sourceType"
      type: "org.springframework.core.convert.TypeDescriptor"
    - name: "targetType"
      type: "org.springframework.core.convert.TypeDescriptor"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "4C41A08703CA58672CCCC35351D5C199"
  paths:
  - pathId: "path1"
    testPathName: "convertWhenSourceIsNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "AF9181F963C553AB476E1ADB3140B354"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "source"
      modelFingerprint: "F6FFB6CDEC4F875F0D04D6C217ECB41A"
      valueUuid: "source"
    - type: "INPUT"
      name: "sourceType"
      modelFingerprint: "91EECCE55C37529E96EA4FBD7681A2FD"
      valueUuid: "sourceType"
    - type: "INPUT"
      name: "targetType"
      modelFingerprint: "6F1AA1CCF0481D3BCFE67EFB2BB4F52E"
      valueUuid: "targetType"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B5832848421B6892B8D06BE61ADCD847"
      valueUuid: "object"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.convert.DurationToNumberConverter"
        parameters: []
      valueType: "org.springframework.boot.convert.DurationToNumberConverter"
      uuid: "target"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "source"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object"
      fixed: true
    branches:
    - lineNumber: 45
      expression: "source == null"
      range: "(45,7)-(45,20)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "convertWhenAnnotationIsNotNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "F88423367E291A5E4CFF2E0C54A9186F"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "source"
      modelFingerprint: "E6EC9F3B963860F64F00CFD752FF55F2"
      valueUuid: "source"
    - type: "INPUT"
      name: "sourceType"
      modelFingerprint: "2FFF26BD9B0CE97DDB65EA1E2F1EB7E4"
      valueUuid: "sourceType"
    - type: "INPUT"
      name: "targetType"
      modelFingerprint: "85959C0202C03D421014C4181A3EF722"
      valueUuid: "targetType"
    - type: "LOCAL_VARIABLE"
      name: "sourceType"
      modelFingerprint: "6107E76E628F7EAC4AEEE84A890CBA75"
      valueUuid: "sourceType"
      methodExercised:
        expression: "getAnnotation(annotationType:uniqueUuid1):annotation"
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "B1E105BDD5A12ECEE2FD81E866E238BA"
      valueUuid: "annotation"
      methodExercised:
        expression: "value():chronoUnit"
    - type: "LOCAL_VARIABLE"
      name: "targetType"
      modelFingerprint: "28F6A406DAA31E3378D8D2FF783E9EE5"
      valueUuid: "targetType"
      methodExercised:
        expression: "getObjectType():class"
    - type: "STATIC"
      name: "DurationStyle.Unit.class"
      modelFingerprint: "E9F27EDAD2E5C35A381C9D8BC721A748"
      valueUuid: "DurationStyle.Unit.class"
      methodExercised:
        expression: "fromChronoUnit(chronoUnit:chronoUnit):durationStyle.Unit"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.getConstructor(java.lang.Class<java.lang.String>[])\
        \ : java.lang.reflect.Constructor"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.convert.DurationToNumberConverter"
        parameters: []
      valueType: "org.springframework.boot.convert.DurationToNumberConverter"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "source-days"
      valueType: "java.time.Duration"
      uuid: "source"
      explicitCastNeeded: true
      explicitCastForOverloadedMethods: "java.lang.Object"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.convert.DurationUnit"
      uuid: "annotation"
      explicitCastNeeded: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.convert.DurationUnit"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.convert.DurationUnit"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.convert.DurationUnit"
      uuid: "annotation"
      explicitCastNeeded: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "FOREVER"
      valueType: "java.time.temporal.ChronoUnit"
      uuid: "chronoUnit"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.convert.DurationStyle$Unit"
      uuid: "DurationStyle.Unit.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NANOS"
      valueType: "org.springframework.boot.convert.DurationStyle$Unit"
      uuid: "durationStyle.Unit"
    - sapientType: "ENUM"
      content: !<regular>
        value: "FOREVER"
      valueType: "java.time.temporal.ChronoUnit"
      uuid: "chronoUnit"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
    branches:
    - lineNumber: 45
      expression: "source == null"
      range: "(45,7)-(45,20)"
      evaluatedAs: false
    - lineNumber: 53
      expression: "annotation != null"
      range: "(53,11)-(53,28)"
      evaluatedAs: true
      internalMethodName: "getDurationUnit"
  - pathId: "path3"
    testPathName: "convertWhenAnnotationIsNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "C9291D2BCC99FD780ABF741592E30FE5"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "source"
      modelFingerprint: "E6EC9F3B963860F64F00CFD752FF55F2"
      valueUuid: "source"
    - type: "INPUT"
      name: "sourceType"
      modelFingerprint: "2FFF26BD9B0CE97DDB65EA1E2F1EB7E4"
      valueUuid: "sourceType"
    - type: "INPUT"
      name: "targetType"
      modelFingerprint: "85959C0202C03D421014C4181A3EF722"
      valueUuid: "targetType"
    - type: "LOCAL_VARIABLE"
      name: "sourceType"
      modelFingerprint: "04E723A44AC4046EC4DF1F8B808D7336"
      valueUuid: "sourceType"
      methodExercised:
        expression: "getAnnotation(annotationType:uniqueUuid2):annotation"
    - type: "LOCAL_VARIABLE"
      name: "targetType"
      modelFingerprint: "28F6A406DAA31E3378D8D2FF783E9EE5"
      valueUuid: "targetType"
      methodExercised:
        expression: "getObjectType():class"
    - type: "STATIC"
      name: "DurationStyle.Unit.class.real"
      modelFingerprint: "88F26E416542140B9265C046D0FBEA01"
      valueUuid: "DurationStyle.Unit.class.real"
      methodExercised:
        expression: "fromChronoUnit(chronoUnit:chronoUnit):durationStyle.Unit"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.getConstructor(java.lang.Class<java.lang.String>[])\
        \ : java.lang.reflect.Constructor"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.convert.DurationToNumberConverter"
        parameters: []
      valueType: "org.springframework.boot.convert.DurationToNumberConverter"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "source-days"
      valueType: "java.time.Duration"
      uuid: "source"
      explicitCastNeeded: true
      explicitCastForOverloadedMethods: "java.lang.Object"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.convert.DurationUnit"
      uuid: "annotation"
      fixed: true
      explicitCastNeeded: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.convert.DurationUnit"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.convert.DurationUnit"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "REAL"
      valueType: "org.springframework.boot.convert.DurationStyle$Unit"
      uuid: "DurationStyle.Unit.class.real"
    - sapientType: "ENUM"
      content: !<regular>
        value: "MILLIS"
      valueType: "org.springframework.boot.convert.DurationStyle$Unit"
      uuid: "durationStyle.Unit"
    - sapientType: "NULL"
      valueType: "java.time.temporal.ChronoUnit"
      uuid: "chronoUnit"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
    branches:
    - lineNumber: 45
      expression: "source == null"
      range: "(45,7)-(45,20)"
      evaluatedAs: false
    - lineNumber: 53
      expression: "annotation != null"
      range: "(53,11)-(53,28)"
      evaluatedAs: false
      internalMethodName: "getDurationUnit"
  - pathId: "path4"
    testPathName: "convertWhenCaughtExceptionThrowsIllegalStateException"
    constructorSignature: "<init>() : void"
    modelFingerprint: "6A48E61E8FBBE2C358CB835C5CA0EA82"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "source"
      modelFingerprint: "E6EC9F3B963860F64F00CFD752FF55F2"
      valueUuid: "source"
    - type: "INPUT"
      name: "sourceType"
      modelFingerprint: "2FFF26BD9B0CE97DDB65EA1E2F1EB7E4"
      valueUuid: "sourceType"
    - type: "INPUT"
      name: "targetType"
      modelFingerprint: "85959C0202C03D421014C4181A3EF722"
      valueUuid: "targetType"
    - type: "LOCAL_VARIABLE"
      name: "sourceType"
      modelFingerprint: "6107E76E628F7EAC4AEEE84A890CBA75"
      valueUuid: "sourceType"
      methodExercised:
        expression: "getAnnotation(annotationType:uniqueUuid3):annotation"
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "B1E105BDD5A12ECEE2FD81E866E238BA"
      valueUuid: "annotation"
      methodExercised:
        expression: "value():chronoUnit"
    - type: "LOCAL_VARIABLE"
      name: "targetType"
      modelFingerprint: "28F6A406DAA31E3378D8D2FF783E9EE5"
      valueUuid: "targetType"
      methodExercised:
        expression: "getObjectType():class"
    - type: "LOCAL_VARIABLE"
      name: "type"
      modelFingerprint: "70E9A34E68A2B39FAC21959AAE563D32"
      valueUuid: "class"
      methodExercised:
        expression: "getConstructor(parameterTypes:classArray):constructor"
        throwsExceptions:
        - "java.lang.NoSuchMethodException"
        - "java.lang.SecurityException"
    - type: "STATIC"
      name: "DurationStyle.Unit.class"
      modelFingerprint: "E9F27EDAD2E5C35A381C9D8BC721A748"
      valueUuid: "DurationStyle.Unit.class"
      methodExercised:
        expression: "fromChronoUnit(chronoUnit:chronoUnit):durationStyle.Unit"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "0B743811DBE885F257AECADF032B260C"
      valueUuid: "constructor"
      methodExercised:
        expression: "newInstance(initargs:objectArray):object"
        throwsExceptions:
        - "java.lang.InstantiationException"
        - "java.lang.IllegalAccessException"
        - "java.lang.IllegalArgumentException"
        - "java.lang.reflect.InvocationTargetException"
    - type: "STATIC"
      name: "ReflectionUtils.class"
      modelFingerprint: "337D5ADCED90C9FC825CB646E89DAD60"
      valueUuid: "ReflectionUtils.class"
      methodExercised:
        expression: "rethrowRuntimeException(ex:exception):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "826102AAEC6A149FF64CA9F695E3D6AF"
      valueUuid: "illegalStateException"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.getConstructor(java.lang.Class<java.lang.String>[])\
        \ : java.lang.reflect.Constructor"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.convert.DurationToNumberConverter"
        parameters: []
      valueType: "org.springframework.boot.convert.DurationToNumberConverter"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "source-days"
      valueType: "java.time.Duration"
      uuid: "source"
      explicitCastNeeded: true
      explicitCastForOverloadedMethods: "java.lang.Object"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.convert.DurationUnit"
      uuid: "annotation"
      explicitCastNeeded: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.convert.DurationUnit"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.convert.DurationUnit"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.convert.DurationUnit"
      uuid: "annotation"
      explicitCastNeeded: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "FOREVER"
      valueType: "java.time.temporal.ChronoUnit"
      uuid: "chronoUnit"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "java.lang.reflect.Constructor"
      uuid: "constructor"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            uuid: "uniqueUuid4"
            fixed: true
      valueType: "java.lang.Class[]"
      genericValueType: "java.lang.String"
      uuid: "classArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.convert.DurationStyle$Unit"
      uuid: "DurationStyle.Unit.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NANOS"
      valueType: "org.springframework.boot.convert.DurationStyle$Unit"
      uuid: "durationStyle.Unit"
    - sapientType: "ENUM"
      content: !<regular>
        value: "FOREVER"
      valueType: "java.time.temporal.ChronoUnit"
      uuid: "chronoUnit"
    - sapientType: "MOCK"
      valueType: "java.lang.reflect.Constructor"
      uuid: "constructor"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "2"
            valueType: "java.lang.String"
            uuid: "string"
      valueType: "java.lang.Object[]"
      uuid: "objectArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ReflectionUtils"
      uuid: "ReflectionUtils.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Exception"
        parameters: []
      valueType: "java.lang.Exception"
      uuid: "exception"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Exception"
              parameters: []
            valueType: "java.lang.Exception"
            uuid: "exception"
      valueType: "java.lang.IllegalStateException"
      uuid: "illegalStateException"
      fixed: true
    branches:
    - lineNumber: 45
      expression: "source == null"
      range: "(45,7)-(45,20)"
      evaluatedAs: false
    - lineNumber: 53
      expression: "annotation != null"
      range: "(53,11)-(53,28)"
      evaluatedAs: true
      internalMethodName: "getDurationUnit"
    - lineNumber: 61
      expression: "catch-exception (Exception)"
      range: "(61,3)-(61,21)"
      evaluatedAs: true
      internalMethodName: "convert"
    catchBlockExercised:
      idExternalInstruction: 19
      id: 1
      catchExceptions:
      - "java.lang.Exception"
