---
modelFingerprint: "8B5BB7A184DF6182E3525976201EB6F8"
targetClass:
  fullClassName: "org.springframework.boot.context.properties.ConfigurationPropertiesBeanRegistrationAotProcessor"
methods:
- method:
    name: "processAheadOfTime"
    sourceCodeSignature: "BeanRegistrationAotContribution processAheadOfTime(RegisteredBean\
      \ registeredBean)"
    returnType: "org.springframework.beans.factory.aot.BeanRegistrationAotContribution"
    parameters:
    - name: "registeredBean"
      type: "org.springframework.beans.factory.support.RegisteredBean"
    instructionFingerprint: "30017B2C952D33E053ECE8747603405C"
  paths:
  - pathId: "path1"
    testPathName: "processAheadOfTimeWhenIsImmutableConfigurationPropertiesBeanDefinitionRegisteredBeanGetMergedBeanDefinition"
    constructorSignature: "<init>() : void"
    modelFingerprint: "9D7D1AEA45353E533DFBAC3003C5211A"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "registeredBean"
      modelFingerprint: "C99003ADDFAE49D4356BAF1E955F609B"
      valueUuid: "registeredBean"
    - type: "LOCAL_VARIABLE"
      name: "registeredBean"
      modelFingerprint: "BA779AE02E81C984AA6A609CA0930285"
      valueUuid: "registeredBean"
      methodExercised:
        expression: "getMergedBeanDefinition():rootBeanDefinition"
    - type: "STATIC"
      name: "BindMethodAttribute.class"
      modelFingerprint: "D8B68FECA0D27343CE175C050A426AE7"
      valueUuid: "BindMethodAttribute.class"
      methodExercised:
        expression: "get(attributes:rootBeanDefinition):bindMethod"
        staticAccess: true
    - type: "STATIC"
      name: "BeanRegistrationAotContribution.class"
      modelFingerprint: "4204A06AE21E0EE27E7A9FA72CC51F84"
      valueUuid: "BeanRegistrationAotContribution.class"
      methodExercised:
        expression: "withCustomCodeFragments(defaultCodeFragments:uniqueUuid1):beanRegistrationAotContribution"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C0177363B2134CA5F831BE0EDD09BDD7"
      valueUuid: "beanRegistrationAotContribution"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesBeanRegistrationAotProcessor"
        parameters: []
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBeanRegistrationAotProcessor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.RegisteredBean"
      uuid: "registeredBean"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.RegisteredBean"
      uuid: "registeredBean"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.RootBeanDefinition"
      uuid: "rootBeanDefinition"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.BindMethodAttribute"
      uuid: "BindMethodAttribute.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "VALUE_OBJECT"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.RootBeanDefinition"
      uuid: "rootBeanDefinition"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.aot.BeanRegistrationAotContribution"
      uuid: "BeanRegistrationAotContribution.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.aot.BeanRegistrationAotContribution"
      uuid: "beanRegistrationAotContribution"
    - sapientType: "ANY"
      valueType: "java.util.function.UnaryOperator"
      genericValueType: "org.springframework.beans.factory.aot.BeanRegistrationCodeFragments"
      uuid: "uniqueUuid1"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.aot.BeanRegistrationAotContribution"
      uuid: "beanRegistrationAotContribution"
    branches:
    - lineNumber: 59
      expression: "BindMethod.VALUE_OBJECT.equals(BindMethodAttribute.get(beanDefinition))"
      range: "(59,10)-(59,80)"
      evaluatedAs: true
      internalMethodName: "isImmutableConfigurationPropertiesBeanDefinition"
    - lineNumber: 49
      expression: "!isImmutableConfigurationPropertiesBeanDefinition(registeredBean.getMergedBeanDefinition())"
      range: "(49,7)-(49,97)"
      evaluatedAs: false
  - pathId: "path2"
    testPathName: "processAheadOfTimeWhenIsImmutableConfigurationPropertiesBeanDefinitionNotRegisteredBeanGetMergedBeanDefinition"
    constructorSignature: "<init>() : void"
    modelFingerprint: "505AEA34B08AA817929B8A0CA789F59A"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "registeredBean"
      modelFingerprint: "C99003ADDFAE49D4356BAF1E955F609B"
      valueUuid: "registeredBean"
    - type: "LOCAL_VARIABLE"
      name: "registeredBean"
      modelFingerprint: "BA779AE02E81C984AA6A609CA0930285"
      valueUuid: "registeredBean"
      methodExercised:
        expression: "getMergedBeanDefinition():rootBeanDefinition"
    - type: "STATIC"
      name: "BindMethodAttribute.class"
      modelFingerprint: "2A9DBED9DA7E9425C7B5809381367E6D"
      valueUuid: "BindMethodAttribute.class"
      methodExercised:
        expression: "get(attributes:rootBeanDefinition):bindMethod"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A298AABD98D2C339D70EEBA9DCD88B05"
      valueUuid: "beanRegistrationAotContribution"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesBeanRegistrationAotProcessor"
        parameters: []
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBeanRegistrationAotProcessor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.RegisteredBean"
      uuid: "registeredBean"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.RegisteredBean"
      uuid: "registeredBean"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.RootBeanDefinition"
      uuid: "rootBeanDefinition"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.BindMethodAttribute"
      uuid: "BindMethodAttribute.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.RootBeanDefinition"
      uuid: "rootBeanDefinition"
    - sapientType: "NULL"
      valueType: "org.springframework.beans.factory.aot.BeanRegistrationAotContribution"
      uuid: "beanRegistrationAotContribution"
      fixed: true
    branches:
    - lineNumber: 59
      expression: "BindMethod.VALUE_OBJECT.equals(BindMethodAttribute.get(beanDefinition))"
      range: "(59,10)-(59,80)"
      evaluatedAs: false
      internalMethodName: "isImmutableConfigurationPropertiesBeanDefinition"
    - lineNumber: 49
      expression: "!isImmutableConfigurationPropertiesBeanDefinition(registeredBean.getMergedBeanDefinition())"
      range: "(49,7)-(49,97)"
      evaluatedAs: true
