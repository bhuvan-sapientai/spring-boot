---
modelFingerprint: "292E52135A09915217D2DF2CCD320221"
targetClass:
  fullClassName: "org.springframework.boot.context.properties.ConfigurationPropertiesCharSequenceToObjectConverter"
methods:
- method:
    name: "getConvertibleTypes"
    sourceCodeSignature: "Set<ConvertiblePair> getConvertibleTypes()"
    returnType: "java.util.Set"
    genericReturnType: "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair"
    instructionFingerprint: "1D48198CCD51DAE92193D724C44C940D"
  paths:
  - pathId: "path1"
    testPathName: "getConvertibleTypesTest"
    constructorSignature: "<init>(org.springframework.core.convert.ConversionService)\
      \ : void"
    modelFingerprint: "4CEDD08E65F187F4F1A6EB2B881C00C3"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "matches"
    sourceCodeSignature: "boolean matches(TypeDescriptor sourceType, TypeDescriptor\
      \ targetType)"
    returnType: "boolean"
    parameters:
    - name: "sourceType"
      type: "org.springframework.core.convert.TypeDescriptor"
    - name: "targetType"
      type: "org.springframework.core.convert.TypeDescriptor"
    instructionFingerprint: "70947A2E333D62154FBB1148240CC3F7"
  paths:
  - pathId: "path9"
    testPathName: "matchesWhenSourceTypeGetTypeEqualsString"
    constructorSignature: "<init>(org.springframework.core.convert.ConversionService)\
      \ : void"
    modelFingerprint: "706318FBB0D4BA894CCE8FCC7AC9B620"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "241FB8FF4849D4F44034A7279F5B50E9"
      valueUuid: "target"
    - type: "INPUT"
      name: "sourceType"
      modelFingerprint: "1641636BFF9C70B1CE92B661800669C0"
      valueUuid: "sourceType"
    - type: "INPUT"
      name: "targetType"
      modelFingerprint: "6F1AA1CCF0481D3BCFE67EFB2BB4F52E"
      valueUuid: "targetType"
    - type: "LOCAL_VARIABLE"
      name: "sourceType"
      modelFingerprint: "3941EC406A6EC76FC297835396AB859E"
      valueUuid: "sourceType"
      methodExercised:
        expression: "getType():uniqueUuid2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesCharSequenceToObjectConverter"
        parameters:
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesCharSequenceToObjectConverter"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.core.convert.TypeDescriptor"
        parameters:
        - name: "resolvableType"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "sourceType-resolvableType"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            uuid: "uniqueUuid3"
        - name: "annotations"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.annotation.Annotation[]"
            uuid: "sourceType-annotations"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.core.convert.TypeDescriptor"
        parameters:
        - name: "resolvableType"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "sourceType-resolvableType"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            uuid: "uniqueUuid3"
        - name: "annotations"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.annotation.Annotation[]"
            uuid: "sourceType-annotations"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.String"
      uuid: "uniqueUuid2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 62
      expression: "sourceType.getType() == String.class"
      range: "(62,7)-(62,42)"
      evaluatedAs: true
  - pathId: "path3"
    testPathName: "matchesWhenTargetTypeEqualsBYTE_ARRAYAndIsStringConversionBetterNotSourceTypeTargetType"
    constructorSignature: "<init>(org.springframework.core.convert.ConversionService)\
      \ : void"
    modelFingerprint: "AB6C790E61CB2B6B3E34CEC21D6B7325"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F4FE1F638E53790B766AA80EBE6107FC"
      valueUuid: "target"
    - type: "INPUT"
      name: "sourceType"
      modelFingerprint: "5494E3D35993927C01E4F657B1F27CEA"
      valueUuid: "sourceType"
    - type: "INPUT"
      name: "targetType"
      modelFingerprint: "6ED86ED32CBC0935A49DDD5D382ED51B"
      valueUuid: "typeDescriptor2"
    - type: "LOCAL_VARIABLE"
      name: "sourceType"
      modelFingerprint: "03099C7E051229BE4EBE3346F50DB7C4"
      valueUuid: "sourceType"
      methodExercised:
        expression: "getType():type"
    - type: "FIELD"
      name: "conversionService"
      modelFingerprint: "F4A212A864167ED0046F7C9469E093BE"
      valueUuid: "conversionService"
      methodExercised:
        expression: "canConvert(sourceType:sourceType,targetType:typeDescriptor2):boolean2"
    - type: "LOCAL_VARIABLE"
      name: "targetType"
      modelFingerprint: "B1C7664F05DC7E900BB50232484EC4E8"
      valueUuid: "typeDescriptor2"
      methodExercised:
        expression: "isArray():boolean4"
    - type: "LOCAL_VARIABLE"
      name: "targetType"
      modelFingerprint: "A28B5564C2B2F7F3C2897B7B055FC009"
      valueUuid: "typeDescriptor2"
      methodExercised:
        expression: "isCollection():boolean5"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "int1"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesCharSequenceToObjectConverter"
        parameters:
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesCharSequenceToObjectConverter"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.core.convert.TypeDescriptor"
        parameters:
        - name: "resolvableType"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "sourceType-resolvableType"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "type"
        - name: "annotations"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.annotation.Annotation[]"
            uuid: "sourceType-annotations"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.core.convert.TypeDescriptor"
        method: "valueOf"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "byte[]"
            valueType: "java.lang.Class"
            genericValueType: "byte[]"
            uuid: "uniqueUuid7"
            fixed: true
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "typeDescriptor2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.core.convert.TypeDescriptor"
        parameters:
        - name: "resolvableType"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "sourceType-resolvableType"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "type"
        - name: "annotations"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.annotation.Annotation[]"
            uuid: "sourceType-annotations"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionService"
      uuid: "conversionService"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.core.convert.TypeDescriptor"
        parameters:
        - name: "resolvableType"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "sourceType-resolvableType"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "type"
        - name: "annotations"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.annotation.Annotation[]"
            uuid: "sourceType-annotations"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.core.convert.TypeDescriptor"
        method: "valueOf"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "byte[]"
            valueType: "java.lang.Class"
            genericValueType: "byte[]"
            uuid: "uniqueUuid7"
            fixed: true
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "typeDescriptor2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.core.convert.TypeDescriptor"
        method: "valueOf"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "byte[]"
            valueType: "java.lang.Class"
            genericValueType: "byte[]"
            uuid: "uniqueUuid7"
            fixed: true
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "typeDescriptor2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.core.convert.TypeDescriptor"
        method: "valueOf"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "byte[]"
            valueType: "java.lang.Class"
            genericValueType: "byte[]"
            uuid: "uniqueUuid7"
            fixed: true
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "typeDescriptor2"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean5"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "int1"
      fixed: true
    branches:
    - lineNumber: 62
      expression: "sourceType.getType() == String.class"
      range: "(62,7)-(62,42)"
      evaluatedAs: false
    - lineNumber: 62
      expression: "this.disable.get() == Boolean.TRUE"
      range: "(62,47)-(62,80)"
      evaluatedAs: false
    - lineNumber: 68
      expression: "canDirectlyConvertCharSequence"
      range: "(68,8)-(68,37)"
      evaluatedAs: true
    - lineNumber: 86
      expression: "this.conversionService instanceof ApplicationConversionService\
        \ applicationConversionService"
      range: "(86,7)-(86,97)"
      evaluatedAs: false
      internalMethodName: "isStringConversionBetter"
    - lineNumber: 95
      expression: "targetType.isArray()"
      range: "(95,11)-(95,30)"
      evaluatedAs: false
      internalMethodName: "isStringConversionBetter"
    - lineNumber: 95
      expression: "targetType.isCollection()"
      range: "(95,35)-(95,59)"
      evaluatedAs: true
      internalMethodName: "isStringConversionBetter"
    - lineNumber: 95
      expression: "!targetType.equals(BYTE_ARRAY)"
      range: "(95,65)-(95,94)"
      evaluatedAs: false
      internalMethodName: "isStringConversionBetter"
    - lineNumber: 68
      expression: "!isStringConversionBetter(sourceType, targetType)"
      range: "(68,42)-(68,90)"
      evaluatedAs: true
  - pathId: "path1"
    testPathName: "matchesWhenIsStringConversionBetterSourceTypeTargetTypeAndThisConversionServiceCanConvertSTRINGTargetType"
    constructorSignature: "<init>(org.springframework.core.convert.ConversionService)\
      \ : void"
    modelFingerprint: "C9A27703906443858EEA058E70ABF272"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F4FE1F638E53790B766AA80EBE6107FC"
      valueUuid: "target"
    - type: "INPUT"
      name: "sourceType"
      modelFingerprint: "5494E3D35993927C01E4F657B1F27CEA"
      valueUuid: "sourceType"
    - type: "INPUT"
      name: "targetType"
      modelFingerprint: "85959C0202C03D421014C4181A3EF722"
      valueUuid: "targetType"
    - type: "LOCAL_VARIABLE"
      name: "sourceType"
      modelFingerprint: "03099C7E051229BE4EBE3346F50DB7C4"
      valueUuid: "sourceType"
      methodExercised:
        expression: "getType():type"
    - type: "FIELD"
      name: "conversionService"
      modelFingerprint: "01E4DDEB24F394689D3B4BE58F0F04F2"
      valueUuid: "conversionService"
      methodExercised:
        expression: "canConvert(sourceType:sourceType,targetType:targetType):boolean2"
    - type: "LOCAL_VARIABLE"
      name: "targetType"
      modelFingerprint: "5C50441117C1551B5394A9805ECE7577"
      valueUuid: "targetType"
      methodExercised:
        expression: "isArray():boolean4"
    - type: "LOCAL_VARIABLE"
      name: "targetType"
      modelFingerprint: "2F1E67805F5FFF2DA1A3780977CE5BD6"
      valueUuid: "targetType"
      methodExercised:
        expression: "isCollection():boolean5"
    - type: "FIELD"
      name: "conversionService"
      modelFingerprint: "6501399FA947238EC1F877D00E83C49F"
      valueUuid: "conversionService"
      methodExercised:
        expression: "canConvert(sourceType:typeDescriptor,targetType:targetType):boolean7"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8383DF6F1D02800B0E90FD4143032B37"
      valueUuid: "boolean7"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesCharSequenceToObjectConverter"
        parameters:
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesCharSequenceToObjectConverter"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.core.convert.TypeDescriptor"
        parameters:
        - name: "resolvableType"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "sourceType-resolvableType"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "type"
        - name: "annotations"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.annotation.Annotation[]"
            uuid: "sourceType-annotations"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.core.convert.TypeDescriptor"
        parameters:
        - name: "resolvableType"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "sourceType-resolvableType"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "type"
        - name: "annotations"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.annotation.Annotation[]"
            uuid: "sourceType-annotations"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionService"
      uuid: "conversionService"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.core.convert.TypeDescriptor"
        parameters:
        - name: "resolvableType"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "sourceType-resolvableType"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "type"
        - name: "annotations"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.annotation.Annotation[]"
            uuid: "sourceType-annotations"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean5"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionService"
      uuid: "conversionService"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean7"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.core.convert.TypeDescriptor"
        method: "valueOf"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            uuid: "uniqueUuid8"
            fixed: true
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "typeDescriptor"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean7"
      fixed: true
    branches:
    - lineNumber: 62
      expression: "sourceType.getType() == String.class"
      range: "(62,7)-(62,42)"
      evaluatedAs: false
    - lineNumber: 62
      expression: "this.disable.get() == Boolean.TRUE"
      range: "(62,47)-(62,80)"
      evaluatedAs: false
    - lineNumber: 68
      expression: "canDirectlyConvertCharSequence"
      range: "(68,8)-(68,37)"
      evaluatedAs: true
    - lineNumber: 86
      expression: "this.conversionService instanceof ApplicationConversionService\
        \ applicationConversionService"
      range: "(86,7)-(86,97)"
      evaluatedAs: false
      internalMethodName: "isStringConversionBetter"
    - lineNumber: 95
      expression: "targetType.isArray()"
      range: "(95,11)-(95,30)"
      evaluatedAs: false
      internalMethodName: "isStringConversionBetter"
    - lineNumber: 95
      expression: "targetType.isCollection()"
      range: "(95,35)-(95,59)"
      evaluatedAs: true
      internalMethodName: "isStringConversionBetter"
    - lineNumber: 95
      expression: "!targetType.equals(BYTE_ARRAY)"
      range: "(95,65)-(95,94)"
      evaluatedAs: true
      internalMethodName: "isStringConversionBetter"
    - lineNumber: 68
      expression: "!isStringConversionBetter(sourceType, targetType)"
      range: "(68,42)-(68,90)"
      evaluatedAs: false
    - lineNumber: 71
      expression: "this.conversionService.canConvert(STRING, targetType)"
      range: "(71,11)-(71,63)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "matchesWhenTargetTypeNotEqualsBYTE_ARRAYAndIsStringConversionBetterSourceTypeTargetTypeAndThisConversionServiceNotCanCo"
    constructorSignature: "<init>(org.springframework.core.convert.ConversionService)\
      \ : void"
    modelFingerprint: "265B601ED98FD717CEDC8E525C1C3701"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F4FE1F638E53790B766AA80EBE6107FC"
      valueUuid: "target"
    - type: "INPUT"
      name: "sourceType"
      modelFingerprint: "5494E3D35993927C01E4F657B1F27CEA"
      valueUuid: "sourceType"
    - type: "INPUT"
      name: "targetType"
      modelFingerprint: "85959C0202C03D421014C4181A3EF722"
      valueUuid: "targetType"
    - type: "LOCAL_VARIABLE"
      name: "sourceType"
      modelFingerprint: "03099C7E051229BE4EBE3346F50DB7C4"
      valueUuid: "sourceType"
      methodExercised:
        expression: "getType():type"
    - type: "FIELD"
      name: "conversionService"
      modelFingerprint: "01E4DDEB24F394689D3B4BE58F0F04F2"
      valueUuid: "conversionService"
      methodExercised:
        expression: "canConvert(sourceType:sourceType,targetType:targetType):boolean2"
    - type: "LOCAL_VARIABLE"
      name: "targetType"
      modelFingerprint: "5C50441117C1551B5394A9805ECE7577"
      valueUuid: "targetType"
      methodExercised:
        expression: "isArray():boolean4"
    - type: "LOCAL_VARIABLE"
      name: "targetType"
      modelFingerprint: "2F1E67805F5FFF2DA1A3780977CE5BD6"
      valueUuid: "targetType"
      methodExercised:
        expression: "isCollection():boolean5"
    - type: "FIELD"
      name: "conversionService"
      modelFingerprint: "4B6310E539CA12C602792BFF0CB1E7E9"
      valueUuid: "conversionService"
      methodExercised:
        expression: "canConvert(sourceType:typeDescriptor,targetType:targetType):boolean7"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "boolean7"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesCharSequenceToObjectConverter"
        parameters:
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesCharSequenceToObjectConverter"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.core.convert.TypeDescriptor"
        parameters:
        - name: "resolvableType"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "sourceType-resolvableType"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "type"
        - name: "annotations"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.annotation.Annotation[]"
            uuid: "sourceType-annotations"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.core.convert.TypeDescriptor"
        parameters:
        - name: "resolvableType"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "sourceType-resolvableType"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "type"
        - name: "annotations"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.annotation.Annotation[]"
            uuid: "sourceType-annotations"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionService"
      uuid: "conversionService"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.core.convert.TypeDescriptor"
        parameters:
        - name: "resolvableType"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "sourceType-resolvableType"
        - name: "type"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "type"
        - name: "annotations"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.annotation.Annotation[]"
            uuid: "sourceType-annotations"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean5"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionService"
      uuid: "conversionService"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean7"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.core.convert.TypeDescriptor"
        method: "valueOf"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            uuid: "uniqueUuid9"
            fixed: true
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "typeDescriptor"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean7"
      fixed: true
    branches:
    - lineNumber: 62
      expression: "sourceType.getType() == String.class"
      range: "(62,7)-(62,42)"
      evaluatedAs: false
    - lineNumber: 62
      expression: "this.disable.get() == Boolean.TRUE"
      range: "(62,47)-(62,80)"
      evaluatedAs: false
    - lineNumber: 68
      expression: "canDirectlyConvertCharSequence"
      range: "(68,8)-(68,37)"
      evaluatedAs: true
    - lineNumber: 86
      expression: "this.conversionService instanceof ApplicationConversionService\
        \ applicationConversionService"
      range: "(86,7)-(86,97)"
      evaluatedAs: false
      internalMethodName: "isStringConversionBetter"
    - lineNumber: 95
      expression: "targetType.isArray()"
      range: "(95,11)-(95,30)"
      evaluatedAs: false
      internalMethodName: "isStringConversionBetter"
    - lineNumber: 95
      expression: "targetType.isCollection()"
      range: "(95,35)-(95,59)"
      evaluatedAs: true
      internalMethodName: "isStringConversionBetter"
    - lineNumber: 95
      expression: "!targetType.equals(BYTE_ARRAY)"
      range: "(95,65)-(95,94)"
      evaluatedAs: true
      internalMethodName: "isStringConversionBetter"
    - lineNumber: 68
      expression: "!isStringConversionBetter(sourceType, targetType)"
      range: "(68,42)-(68,90)"
      evaluatedAs: false
    - lineNumber: 71
      expression: "this.conversionService.canConvert(STRING, targetType)"
      range: "(71,11)-(71,63)"
      evaluatedAs: false
- method:
    name: "convert"
    sourceCodeSignature: "Object convert(Object source, TypeDescriptor sourceType,\
      \ TypeDescriptor targetType)"
    returnType: "java.lang.Object"
    parameters:
    - name: "source"
      type: "java.lang.Object"
    - name: "sourceType"
      type: "org.springframework.core.convert.TypeDescriptor"
    - name: "targetType"
      type: "org.springframework.core.convert.TypeDescriptor"
    instructionFingerprint: "17E24BBAF8D021F93E679D0550C3A67E"
  paths:
  - pathId: "path1"
    testPathName: "convertTest"
    constructorSignature: "<init>(org.springframework.core.convert.ConversionService)\
      \ : void"
    modelFingerprint: "8658159938DDCC0D5FA78AF3B0216E80"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F4FE1F638E53790B766AA80EBE6107FC"
      valueUuid: "target"
    - type: "INPUT"
      name: "source"
      modelFingerprint: "197103DBE2F448402B86446796F8B9FD"
      valueUuid: "source"
    - type: "INPUT"
      name: "sourceType"
      modelFingerprint: "91EECCE55C37529E96EA4FBD7681A2FD"
      valueUuid: "sourceType"
    - type: "INPUT"
      name: "targetType"
      modelFingerprint: "6F1AA1CCF0481D3BCFE67EFB2BB4F52E"
      valueUuid: "targetType"
    - type: "FIELD"
      name: "conversionService"
      modelFingerprint: "41D6C4B5FD05C0217A4A999A0D0698AD"
      valueUuid: "conversionService"
      methodExercised:
        expression: "convert(source:string,sourceType:typeDescriptor,targetType:targetType):object"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesCharSequenceToObjectConverter"
        parameters:
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesCharSequenceToObjectConverter"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "java.lang.Object"
      uuid: "source"
      nameForMock: "source"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "sourceType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionService"
      uuid: "conversionService"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
    - sapientType: "BASIC"
      content: !<regular>
        value: "source"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.core.convert.TypeDescriptor"
        method: "valueOf"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            uuid: "uniqueUuid10"
            fixed: true
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "typeDescriptor"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.TypeDescriptor"
      uuid: "targetType"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
