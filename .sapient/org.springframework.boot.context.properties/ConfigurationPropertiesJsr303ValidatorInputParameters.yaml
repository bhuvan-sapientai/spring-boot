---
modelFingerprint: "74601C74AE9040D2A686BF5B119D96DC"
targetClass:
  fullClassName: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
methods:
- method:
    name: "supports"
    sourceCodeSignature: "boolean supports(Class<?> type)"
    returnType: "boolean"
    parameters:
    - name: "type"
      type: "java.lang.Class"
    instructionFingerprint: "2FB43A478FE6208A656F7B6A42CDBAE7"
  paths:
  - pathId: "path1"
    testPathName: "supportsWhenThisDelegateSupportsType"
    constructorSignature: "<init>(org.springframework.context.ApplicationContext)\
      \ : void"
    modelFingerprint: "7E1DE625075115FC9A941B7DF938E219"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "EA44075D874A6D3FE60B712349C314B4"
      valueUuid: "target"
    - type: "INPUT"
      name: "type"
      modelFingerprint: "917962E93E24910C2D3103EEFA23FB8C"
      valueUuid: "type"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8383DF6F1D02800B0E90FD4143032B37"
      valueUuid: "boolean1"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
        parameters:
        - name: "applicationContext"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.ApplicationContext"
            uuid: "applicationContext"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
      uuid: "target"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "type"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
      fixed: true
    branches:
    - lineNumber: 46
      expression: "this.delegate.supports(type)"
      range: "(46,10)-(46,37)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "supportsWhenThisDelegateNotSupportsType"
    constructorSignature: "<init>(org.springframework.context.ApplicationContext)\
      \ : void"
    modelFingerprint: "ABE131BDB02B945B3B617D8781C42BD0"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "EA44075D874A6D3FE60B712349C314B4"
      valueUuid: "target"
    - type: "INPUT"
      name: "type"
      modelFingerprint: "917962E93E24910C2D3103EEFA23FB8C"
      valueUuid: "type"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "boolean1"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
        parameters:
        - name: "applicationContext"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.ApplicationContext"
            uuid: "applicationContext"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
      uuid: "target"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "type"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
      fixed: true
    branches:
    - lineNumber: 46
      expression: "this.delegate.supports(type)"
      range: "(46,10)-(46,37)"
      evaluatedAs: false
- method:
    name: "validate"
    sourceCodeSignature: "void validate(Object target, Errors errors)"
    returnType: "void"
    parameters:
    - name: "target"
      type: "java.lang.Object"
    - name: "errors"
      type: "org.springframework.validation.Errors"
    instructionFingerprint: "5393F379BDC51831F200566A8FE4ED71"
  paths:
  - pathId: "path1"
    testPathName: "validateTest"
    constructorSignature: "<init>(org.springframework.context.ApplicationContext)\
      \ : void"
    modelFingerprint: "37303D854997E50F27AE25C9D2A94E6C"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "EA44075D874A6D3FE60B712349C314B4"
      valueUuid: "target"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "E96429E75A3DC28966EC6CA2C99E9DA9"
      valueUuid: "target1"
    - type: "INPUT"
      name: "errors"
      modelFingerprint: "A9DF2E75D0BEAF6E3D4D7A844EB34979"
      valueUuid: "errors"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
        parameters:
        - name: "applicationContext"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.ApplicationContext"
            uuid: "applicationContext"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.validation.Errors"
      uuid: "errors"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "isJsr303Present"
    sourceCodeSignature: "boolean isJsr303Present(ApplicationContext applicationContext)"
    returnType: "boolean"
    parameters:
    - name: "applicationContext"
      type: "org.springframework.context.ApplicationContext"
    instructionFingerprint: "A11CF4E3D68168D7F5F407320DFA27F9"
  paths:
  - pathId: "path1"
    testPathName: "isJsr303PresentWhenClassUtilsNotIsPresentValidatorClassClassLoader"
    modelFingerprint: "36B36E9E9FF620A8B57A773827EB8BAE"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "applicationContext"
      modelFingerprint: "2CDE8B76F282E7D5424E19D10AACC3AC"
      valueUuid: "applicationContext"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "F2C56FA96971CD2FD1A14D0FDBEB0149"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "ClassUtils.class"
      modelFingerprint: "9B9E4DE56395D6B3B6C6AED384D65D34"
      valueUuid: "ClassUtils.class"
      methodExercised:
        expression: "isPresent(className:string2,classLoader:classLoader):boolean1"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "jakarta.validation.Validator"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 56
      expression: "for-each(VALIDATOR_CLASSES)"
      range: "(56,32)-(56,48)"
      evaluatedAs: true
    - lineNumber: 57
      expression: "!ClassUtils.isPresent(validatorClass, classLoader)"
      range: "(57,8)-(57,57)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "isJsr303PresentWhenClassUtilsIsPresentValidatorClassClassLoader"
    modelFingerprint: "986F7E8E77EEA2FD5251AA3D690BFC13"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "applicationContext"
      modelFingerprint: "2CDE8B76F282E7D5424E19D10AACC3AC"
      valueUuid: "applicationContext"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "F2C56FA96971CD2FD1A14D0FDBEB0149"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "STATIC"
      name: "ClassUtils.class"
      modelFingerprint: "49DDB4F87FC2DF33B33C1A6B185C0357"
      valueUuid: "ClassUtils.class"
      methodExercised:
        expression: "isPresent(className:string2,classLoader:classLoader):boolean1"
        staticAccess: true
    - type: "STATIC"
      name: "ClassUtils.class"
      modelFingerprint: "5A5573ACCA6A90DF5466DAFFD3D83682"
      valueUuid: "ClassUtils.class"
      methodExercised:
        expression: "isPresent(className:string4,classLoader:classLoader):boolean2"
        staticAccess: true
    - type: "STATIC"
      name: "ClassUtils.class"
      modelFingerprint: "990CF05ADD8DA1B4069F61CB3FA94C18"
      valueUuid: "ClassUtils.class"
      methodExercised:
        expression: "isPresent(className:string6,classLoader:classLoader):boolean3"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8383DF6F1D02800B0E90FD4143032B37"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "jakarta.validation.Validator"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "jakarta.validation.ValidatorFactory"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "jakarta.validation.bootstrap.GenericBootstrap"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 56
      expression: "for-each(VALIDATOR_CLASSES)"
      range: "(56,32)-(56,48)"
      evaluatedAs: true
    - lineNumber: 57
      expression: "!ClassUtils.isPresent(validatorClass, classLoader)"
      range: "(57,8)-(57,57)"
      evaluatedAs: false
