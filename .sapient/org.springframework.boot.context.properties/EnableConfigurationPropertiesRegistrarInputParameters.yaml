---
modelFingerprint: "33DC1654A64649A47E48DB4D11050B71"
targetClass:
  fullClassName: "org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar"
methods:
- method:
    name: "registerBeanDefinitions"
    sourceCodeSignature: "void registerBeanDefinitions(AnnotationMetadata metadata,\
      \ BeanDefinitionRegistry registry)"
    returnType: "void"
    parameters:
    - name: "metadata"
      type: "org.springframework.core.type.AnnotationMetadata"
    - name: "registry"
      type: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
    instructionFingerprint: "E7C02F7D603D71F05993BF3C3D4A7F75"
  paths:
  - pathId: "path1"
    testPathName: "registerBeanDefinitionsTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "D9EB926C1FFE8E4CAB8EEAC255A6A4DE"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "metadata"
      modelFingerprint: "2B4647826962DF9AD88B1D582A775155"
      valueUuid: "metadata"
    - type: "INPUT"
      name: "registry"
      modelFingerprint: "6307DBD7728684407BE44EA47124BF7D"
      valueUuid: "registry"
    - type: "STATIC"
      name: "ConfigurationPropertiesBindingPostProcessor.class"
      modelFingerprint: "29C926F1AB76251050C125E5E36B9F14"
      valueUuid: "ConfigurationPropertiesBindingPostProcessor.class"
      methodExercised:
        expression: "register(registry:registry):void"
        staticAccess: true
    - type: "STATIC"
      name: "BoundConfigurationProperties.class"
      modelFingerprint: "719905BC9F0CF3143915A8294CE74EB4"
      valueUuid: "BoundConfigurationProperties.class"
      methodExercised:
        expression: "register(registry:registry):void2"
        staticAccess: true
    - type: "STATIC"
      name: "EnableConfigurationPropertiesRegistrar.class"
      modelFingerprint: "092E6AAFD78B55063BE793786E184E5E"
      valueUuid: "EnableConfigurationPropertiesRegistrar.class"
      methodExercised:
        expression: "registerMethodValidationExcludeFilter(registry:registry):void3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "metadata"
      modelFingerprint: "6B416386FF218AA7D0AF38228F6E5181"
      valueUuid: "metadata"
      methodExercised:
        expression: "getAnnotations():mergedAnnotations"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EAC49EFE41EFE737B01649DE25589856"
      valueUuid: "mergedAnnotations"
      methodExercised:
        expression: "stream(annotationType:uniqueUuid1):stream"
    - type: "LOCAL_VARIABLE"
      name: "beanRegistrar"
      modelFingerprint: "AC1C721580A7E2F8D1A84FFC4907C1BE"
      valueUuid: "configurationPropertiesBeanRegistrar"
      methodExercised:
        expression: "register(null:null):void5"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      source: "ConfigurationPropertiesBeanRegistrar beanRegistrar = new ConfigurationPropertiesBeanRegistrar(registry);"
      lineNumber: 48
      details: "No constructor found to create an object without any exception for\
        \ class org.springframework.boot.context.properties.ConfigurationPropertiesBeanRegistrar"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar"
        parameters: []
      valueType: "org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.type.AnnotationMetadata"
      uuid: "metadata"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor"
      uuid: "ConfigurationPropertiesBindingPostProcessor.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.BoundConfigurationProperties"
      uuid: "BoundConfigurationProperties.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar"
      uuid: "EnableConfigurationPropertiesRegistrar.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.type.AnnotationMetadata"
      uuid: "metadata"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.annotation.MergedAnnotations"
      uuid: "mergedAnnotations"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.annotation.MergedAnnotations"
      uuid: "mergedAnnotations"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.util.stream.Stream"
        method: "empty"
        methodParameters: []
      valueType: "java.util.stream.Stream"
      uuid: "stream"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.context.properties.EnableConfigurationProperties"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.context.properties.EnableConfigurationProperties"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesBeanRegistrar"
        parameters:
        - name: "registry"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
            uuid: "registry"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBeanRegistrar"
      uuid: "configurationPropertiesBeanRegistrar"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      uuid: "null"
      collectionUuid: "object"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    calledSomeStaticInternalMethod: true
- method:
    name: "registerInfrastructureBeans"
    sourceCodeSignature: "void registerInfrastructureBeans(BeanDefinitionRegistry\
      \ registry)"
    returnType: "void"
    parameters:
    - name: "registry"
      type: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
    instructionFingerprint: "58BB20054BAF277B395E08C1BC019A56"
  paths:
  - pathId: "path1"
    testPathName: "registerInfrastructureBeansTest"
    modelFingerprint: "EA4344471A17B80EC7940957A79AF0E9"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "registry"
      modelFingerprint: "6307DBD7728684407BE44EA47124BF7D"
      valueUuid: "registry"
    - type: "STATIC"
      name: "ConfigurationPropertiesBindingPostProcessor.class"
      modelFingerprint: "29C926F1AB76251050C125E5E36B9F14"
      valueUuid: "ConfigurationPropertiesBindingPostProcessor.class"
      methodExercised:
        expression: "register(registry:registry):void"
        staticAccess: true
    - type: "STATIC"
      name: "BoundConfigurationProperties.class"
      modelFingerprint: "719905BC9F0CF3143915A8294CE74EB4"
      valueUuid: "BoundConfigurationProperties.class"
      methodExercised:
        expression: "register(registry:registry):void2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor"
      uuid: "ConfigurationPropertiesBindingPostProcessor.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.BoundConfigurationProperties"
      uuid: "BoundConfigurationProperties.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "registerMethodValidationExcludeFilter"
    sourceCodeSignature: "void registerMethodValidationExcludeFilter(BeanDefinitionRegistry\
      \ registry)"
    returnType: "void"
    parameters:
    - name: "registry"
      type: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
    instructionFingerprint: "5F1B083F2FED13AFFB6C6E41515C83F3"
  paths:
  - pathId: "path1"
    testPathName: "registerMethodValidationExcludeFilterWhenRegistryNotContainsBeanDefinitionMETHOD_VALIDATION_EXCLUDE_FILTER_BEAN_NAME"
    modelFingerprint: "8F69428D4FB197F07B619ABB4585669E"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "registry"
      modelFingerprint: "14F926E67FDB678BF2FEC697D6F094DC"
      valueUuid: "registry"
    - type: "LOCAL_VARIABLE"
      name: "registry"
      modelFingerprint: "DD5BD10DB0A2052B2D7894EF8DFE4E2A"
      valueUuid: "registry"
      methodExercised:
        expression: "containsBeanDefinition(beanName:string):boolean1"
    - type: "STATIC"
      name: "BeanDefinitionBuilder.class.real"
      modelFingerprint: "30E18DF4006781E3F90A853963BA3AED"
      valueUuid: "BeanDefinitionBuilder.class.real"
      methodExercised:
        expression: "rootBeanDefinition(beanClass:uniqueUuid2,factoryMethodName:uniqueUuid3):beanDefinitionBuilder"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "D2C1E987A63607B4B8CB9B67BE0E08F0"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "addConstructorArgValue(value:uniqueUuid6):beanDefinitionBuilder2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "87BAF1355A9CDF41AA49ECFA48485DA8"
      valueUuid: "beanDefinitionBuilder2"
      methodExercised:
        expression: "setRole(role:uniqueUuid10):beanDefinitionBuilder3"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B927F59D5DC3906FD335BEC870153796"
      valueUuid: "beanDefinitionBuilder3"
      methodExercised:
        expression: "getBeanDefinition():abstractBeanDefinition"
    - type: "LOCAL_VARIABLE"
      name: "registry"
      modelFingerprint: "8C21391E8872038AC491E6BF094B68CC"
      valueUuid: "registry"
      methodExercised:
        expression: "registerBeanDefinition(beanName:string,beanDefinition:abstractBeanDefinition):void"
        throwsExceptions:
        - "org.springframework.beans.factory.BeanDefinitionStoreException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "REAL"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "BeanDefinitionBuilder.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
        method: "rootBeanDefinition"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter"
            valueType: "java.lang.Class"
            genericValueType: "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter"
            uuid: "uniqueUuid8"
            fixed: true
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "byAnnotation"
            valueType: "java.lang.String"
            uuid: "uniqueUuid9"
            fixed: true
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "byAnnotation"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
        method: "rootBeanDefinition"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter"
            valueType: "java.lang.Class"
            genericValueType: "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter"
            uuid: "uniqueUuid8"
            fixed: true
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "byAnnotation"
            valueType: "java.lang.String"
            uuid: "uniqueUuid9"
            fixed: true
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
            method: "rootBeanDefinition"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter"
                valueType: "java.lang.Class"
                genericValueType: "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter"
                fixed: true
            - value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "byAnnotation"
                valueType: "java.lang.String"
                fixed: true
          valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
          uuid: "beanDefinitionBuilder"
        methodParameters:
        - name: "value"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.springframework.boot.context.properties.ConfigurationProperties"
            valueType: "java.lang.Class"
            genericValueType: "org.springframework.boot.context.properties.ConfigurationProperties"
            uuid: "uniqueUuid12"
            fixed: true
        methodName: "addConstructorArgValue"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.context.properties.ConfigurationProperties"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "uniqueUuid6"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
            method: "rootBeanDefinition"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter"
                valueType: "java.lang.Class"
                genericValueType: "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter"
                fixed: true
            - value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "byAnnotation"
                valueType: "java.lang.String"
                fixed: true
          valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
          uuid: "beanDefinitionBuilder"
        methodParameters:
        - name: "value"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.springframework.boot.context.properties.ConfigurationProperties"
            valueType: "java.lang.Class"
            genericValueType: "org.springframework.boot.context.properties.ConfigurationProperties"
            uuid: "uniqueUuid12"
            fixed: true
        methodName: "addConstructorArgValue"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<static_method_return>
                target: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
                method: "rootBeanDefinition"
                methodParameters:
                - value:
                    sapientType: "CLASS"
                    content: !<regular>
                      value: "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter"
                    valueType: "java.lang.Class"
                    genericValueType: "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter"
                    fixed: true
                - value:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "byAnnotation"
                    valueType: "java.lang.String"
                    fixed: true
              valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
              uuid: "beanDefinitionBuilder"
            methodParameters:
            - name: "value"
              value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.springframework.boot.context.properties.ConfigurationProperties"
                valueType: "java.lang.Class"
                genericValueType: "org.springframework.boot.context.properties.ConfigurationProperties"
                fixed: true
            methodName: "addConstructorArgValue"
          valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
          uuid: "beanDefinitionBuilder2"
        methodParameters:
        - name: "role"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "int"
            uuid: "uniqueUuid13"
            fixed: true
        methodName: "setRole"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder3"
    - sapientType: "BASIC"
      content: !<regular>
        value: 2
      valueType: "int"
      uuid: "uniqueUuid10"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<static_method_return>
                target: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
                method: "rootBeanDefinition"
                methodParameters:
                - value:
                    sapientType: "CLASS"
                    content: !<regular>
                      value: "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter"
                    valueType: "java.lang.Class"
                    genericValueType: "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter"
                    fixed: true
                - value:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "byAnnotation"
                    valueType: "java.lang.String"
                    fixed: true
              valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
              uuid: "beanDefinitionBuilder"
            methodParameters:
            - name: "value"
              value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.springframework.boot.context.properties.ConfigurationProperties"
                valueType: "java.lang.Class"
                genericValueType: "org.springframework.boot.context.properties.ConfigurationProperties"
                fixed: true
            methodName: "addConstructorArgValue"
          valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
          uuid: "beanDefinitionBuilder2"
        methodParameters:
        - name: "role"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "int"
            uuid: "uniqueUuid13"
            fixed: true
        methodName: "setRole"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder3"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.beans.factory.support.AbstractBeanDefinition"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<method_return_from_value>
                target: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
                localVariableValue:
                  sapientType: "OBJECT"
                  content: !<static_method_return>
                    target: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
                    method: "rootBeanDefinition"
                    methodParameters:
                    - value:
                        sapientType: "CLASS"
                        content: !<regular>
                          value: "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter"
                        valueType: "java.lang.Class"
                        genericValueType: "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter"
                        fixed: true
                    - value:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: "byAnnotation"
                        valueType: "java.lang.String"
                        fixed: true
                  valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
                  uuid: "beanDefinitionBuilder"
                methodParameters:
                - name: "value"
                  value:
                    sapientType: "CLASS"
                    content: !<regular>
                      value: "org.springframework.boot.context.properties.ConfigurationProperties"
                    valueType: "java.lang.Class"
                    genericValueType: "org.springframework.boot.context.properties.ConfigurationProperties"
                    fixed: true
                methodName: "addConstructorArgValue"
              valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
              uuid: "beanDefinitionBuilder2"
            methodParameters:
            - name: "role"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: 2
                valueType: "int"
                fixed: true
            methodName: "setRole"
          valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
          uuid: "beanDefinitionBuilder3"
        methodParameters: []
        methodName: "getBeanDefinition"
      valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
      uuid: "abstractBeanDefinition"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.beans.factory.support.AbstractBeanDefinition"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<method_return_from_value>
                target: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
                localVariableValue:
                  sapientType: "OBJECT"
                  content: !<static_method_return>
                    target: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
                    method: "rootBeanDefinition"
                    methodParameters:
                    - value:
                        sapientType: "CLASS"
                        content: !<regular>
                          value: "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter"
                        valueType: "java.lang.Class"
                        genericValueType: "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter"
                        fixed: true
                    - value:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: "byAnnotation"
                        valueType: "java.lang.String"
                        fixed: true
                  valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
                  uuid: "beanDefinitionBuilder"
                methodParameters:
                - name: "value"
                  value:
                    sapientType: "CLASS"
                    content: !<regular>
                      value: "org.springframework.boot.context.properties.ConfigurationProperties"
                    valueType: "java.lang.Class"
                    genericValueType: "org.springframework.boot.context.properties.ConfigurationProperties"
                    fixed: true
                methodName: "addConstructorArgValue"
              valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
              uuid: "beanDefinitionBuilder2"
            methodParameters:
            - name: "role"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: 2
                valueType: "int"
                fixed: true
            methodName: "setRole"
          valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
          uuid: "beanDefinitionBuilder3"
        methodParameters: []
        methodName: "getBeanDefinition"
      valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
      uuid: "abstractBeanDefinition"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 66
      expression: "!registry.containsBeanDefinition(METHOD_VALIDATION_EXCLUDE_FILTER_BEAN_NAME)"
      range: "(66,7)-(66,82)"
      evaluatedAs: true
