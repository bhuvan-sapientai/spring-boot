---
modelFingerprint: "4E5A569D6F5800A27726216DD69B7263"
targetClass:
  fullClassName: "org.springframework.boot.context.properties.ConfigurationPropertiesBeanFactoryInitializationAotProcessor"
methods:
- method:
    name: "processAheadOfTime"
    sourceCodeSignature: "ConfigurationPropertiesReflectionHintsContribution processAheadOfTime(ConfigurableListableBeanFactory\
      \ beanFactory)"
    returnType: "org.springframework.boot.context.properties.ConfigurationPropertiesBeanFactoryInitializationAotProcessor$ConfigurationPropertiesReflectionHintsContribution"
    parameters:
    - name: "beanFactory"
      type: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
    instructionFingerprint: "62833C1426EF4A1248CFE38638709152"
  paths:
  - pathId: "path4"
    testPathName: "processAheadOfTimeWhenBeanTypeIsNullAndBindablesIsEmpty"
    constructorSignature: "<init>() : void"
    modelFingerprint: "0E8073C8C9373DFE62D3E12D6648B46E"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "beanFactory"
      modelFingerprint: "2B7EF4D05F05B01EB1F2B9BE20317A7C"
      valueUuid: "beanFactory"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "CBF37B925C57E3B7300F30A363D450FA"
      valueUuid: "beanFactory"
      methodExercised:
        expression: "getBeanNamesForAnnotation(annotationType:uniqueUuid1):stringArray"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "A0894F1F6A48A9932C91279F2153906D"
      valueUuid: "beanFactory"
      methodExercised:
        expression: "getType(name:string,allowFactoryBeanInit:uniqueUuid2):class"
        throwsExceptions:
        - "org.springframework.beans.factory.NoSuchBeanDefinitionException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "95B08B9B7DD2D615140D442996918C80"
      valueUuid: "configurationPropertiesBeanFactoryInitializationAotProcessor.ConfigurationPropertiesReflectionHintsContribution"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesBeanFactoryInitializationAotProcessor"
        parameters: []
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBeanFactoryInitializationAotProcessor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getBeanNamesForAnnotationItem1"
            valueType: "java.lang.String"
            uuid: "string"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.context.properties.ConfigurationProperties"
      valueType: "java.lang.Class"
      genericValueType: "? extends java.lang.annotation.Annotation"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanNamesForAnnotationItem1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBeanFactoryInitializationAotProcessor$ConfigurationPropertiesReflectionHintsContribution"
      uuid: "configurationPropertiesBeanFactoryInitializationAotProcessor.ConfigurationPropertiesReflectionHintsContribution"
      fixed: true
    branches:
    - lineNumber: 48
      expression: "for-each(beanNames)"
      range: "(48,26)-(48,34)"
      evaluatedAs: true
    - lineNumber: 50
      expression: "beanType != null"
      range: "(50,8)-(50,23)"
      evaluatedAs: false
    - lineNumber: 58
      expression: "!bindables.isEmpty()"
      range: "(58,11)-(58,30)"
      evaluatedAs: false
  - pathId: "path1"
    testPathName: "processAheadOfTimeWhenBindablesNotIsEmpty"
    constructorSignature: "<init>() : void"
    modelFingerprint: "1036A5BC70EE3A8F73B151CE825B64ED"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "beanFactory"
      modelFingerprint: "2B7EF4D05F05B01EB1F2B9BE20317A7C"
      valueUuid: "beanFactory"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "CBF37B925C57E3B7300F30A363D450FA"
      valueUuid: "beanFactory"
      methodExercised:
        expression: "getBeanNamesForAnnotation(annotationType:uniqueUuid3):stringArray"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "D751AE865F2D13AEB42D970ED9907741"
      valueUuid: "beanFactory"
      methodExercised:
        expression: "getType(name:string,allowFactoryBeanInit:uniqueUuid4):class"
        throwsExceptions:
        - "org.springframework.beans.factory.NoSuchBeanDefinitionException"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "592D79B702B3E2CC570D60B8A234564A"
      valueUuid: "beanFactory"
      methodExercised:
        expression: "containsBeanDefinition(beanName:string):boolean1"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "4A6B47A6D1EAA0F55ECC4EC4F1F7B377"
      valueUuid: "beanFactory"
      methodExercised:
        expression: "getBeanDefinition(beanName:string):beanDefinition"
        throwsExceptions:
        - "org.springframework.beans.factory.NoSuchBeanDefinitionException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "083BC01C0F959132AF776197E13E3465"
      valueUuid: "beanDefinition"
      methodExercised:
        expression: "getAttribute(name:string2):object"
    - type: "STATIC"
      name: "ClassUtils.class"
      modelFingerprint: "F374FE27B1DDB3A1605245B95F47C585"
      valueUuid: "ClassUtils.class"
      methodExercised:
        expression: "getUserClass(clazz:class):class2"
        staticAccess: true
    - type: "STATIC"
      name: "Bindable.class"
      modelFingerprint: "DC32A525C7CBE0FF6D7C64FC6C592D00"
      valueUuid: "Bindable.class"
      methodExercised:
        expression: "of(type:class2):bindable"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "AB349AF8A2225DC6BA2CD166D914AE56"
      valueUuid: "bindable"
      methodExercised:
        expression: "withBindMethod(bindMethod:object):bindable2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "07AB9A91373F9875D05482FE2DFABD38"
      valueUuid: "configurationPropertiesBeanFactoryInitializationAotProcessor.ConfigurationPropertiesReflectionHintsContribution"
    disabled: false
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      source: "return (!bindables.isEmpty()) ? new ConfigurationPropertiesReflectionHintsContribution(bindables)\
        \ : null;"
      lineNumber: 58
      details: "No constructor found to create an object without any exception for\
        \ class org.springframework.boot.context.properties.ConfigurationPropertiesBeanFactoryInitializationAotProcessor$ConfigurationPropertiesReflectionHintsContribution"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesBeanFactoryInitializationAotProcessor"
        parameters: []
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBeanFactoryInitializationAotProcessor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getBeanNamesForAnnotationItem1"
            valueType: "java.lang.String"
            uuid: "string"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.context.properties.ConfigurationProperties"
      valueType: "java.lang.Class"
      genericValueType: "? extends java.lang.annotation.Annotation"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanNamesForAnnotationItem1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanNamesForAnnotationItem1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.BeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanNamesForAnnotationItem1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.BeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.context.properties.bind.BindMethod"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "Bindable.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable2"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesBeanFactoryInitializationAotProcessor$ConfigurationPropertiesReflectionHintsContribution"
        parameters:
        - name: "bindables"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.bind.Bindable"
                uuid: "bindable2"
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.context.properties.bind.Bindable<?>"
            uuid: "arrayList"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBeanFactoryInitializationAotProcessor$ConfigurationPropertiesReflectionHintsContribution"
      uuid: "configurationPropertiesBeanFactoryInitializationAotProcessor.ConfigurationPropertiesReflectionHintsContribution"
      fixed: true
    branches:
    - lineNumber: 48
      expression: "for-each(beanNames)"
      range: "(48,26)-(48,34)"
      evaluatedAs: true
    - lineNumber: 50
      expression: "beanType != null"
      range: "(50,8)-(50,23)"
      evaluatedAs: true
    - lineNumber: 51
      expression: "beanFactory.containsBeanDefinition(beanName)"
      range: "(51,29)-(51,72)"
      evaluatedAs: true
    - lineNumber: 55
      expression: "bindMethod != null"
      range: "(55,23)-(55,40)"
      evaluatedAs: true
    - lineNumber: 58
      expression: "!bindables.isEmpty()"
      range: "(58,11)-(58,30)"
      evaluatedAs: true
  - pathId: "path3"
    testPathName: "processAheadOfTimeWhenBeanFactoryNotContainsBeanDefinitionBeanNameAndBindMethodIsNullAndBindablesNotIsEmpty"
    constructorSignature: "<init>() : void"
    modelFingerprint: "25930015915B9BA3E03F8050886BF21D"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "beanFactory"
      modelFingerprint: "2B7EF4D05F05B01EB1F2B9BE20317A7C"
      valueUuid: "beanFactory"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "CBF37B925C57E3B7300F30A363D450FA"
      valueUuid: "beanFactory"
      methodExercised:
        expression: "getBeanNamesForAnnotation(annotationType:uniqueUuid5):stringArray"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "D751AE865F2D13AEB42D970ED9907741"
      valueUuid: "beanFactory"
      methodExercised:
        expression: "getType(name:string,allowFactoryBeanInit:uniqueUuid6):class"
        throwsExceptions:
        - "org.springframework.beans.factory.NoSuchBeanDefinitionException"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "B2CB6722C9EE98B52EEE2EE329C670B3"
      valueUuid: "beanFactory"
      methodExercised:
        expression: "containsBeanDefinition(beanName:string):boolean1"
    - type: "STATIC"
      name: "ClassUtils.class"
      modelFingerprint: "F374FE27B1DDB3A1605245B95F47C585"
      valueUuid: "ClassUtils.class"
      methodExercised:
        expression: "getUserClass(clazz:class):class2"
        staticAccess: true
    - type: "STATIC"
      name: "Bindable.class"
      modelFingerprint: "DC32A525C7CBE0FF6D7C64FC6C592D00"
      valueUuid: "Bindable.class"
      methodExercised:
        expression: "of(type:class2):bindable"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "2F448F5F9500D7187229846D55CA70C3"
      valueUuid: "bindable"
      methodExercised:
        expression: "withBindMethod(bindMethod:Enum-org.springframework.boot.context.properties.bind.BindMethod-JAVA_BEAN):bindable2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "07AB9A91373F9875D05482FE2DFABD38"
      valueUuid: "configurationPropertiesBeanFactoryInitializationAotProcessor.ConfigurationPropertiesReflectionHintsContribution"
    disabled: false
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      source: "return (!bindables.isEmpty()) ? new ConfigurationPropertiesReflectionHintsContribution(bindables)\
        \ : null;"
      lineNumber: 58
      details: "No constructor found to create an object without any exception for\
        \ class org.springframework.boot.context.properties.ConfigurationPropertiesBeanFactoryInitializationAotProcessor$ConfigurationPropertiesReflectionHintsContribution"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesBeanFactoryInitializationAotProcessor"
        parameters: []
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBeanFactoryInitializationAotProcessor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getBeanNamesForAnnotationItem1"
            valueType: "java.lang.String"
            uuid: "string"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.context.properties.ConfigurationProperties"
      valueType: "java.lang.Class"
      genericValueType: "? extends java.lang.annotation.Annotation"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanNamesForAnnotationItem1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanNamesForAnnotationItem1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "Bindable.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable2"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "Enum-org.springframework.boot.context.properties.bind.BindMethod-JAVA_BEAN"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesBeanFactoryInitializationAotProcessor$ConfigurationPropertiesReflectionHintsContribution"
        parameters:
        - name: "bindables"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.bind.Bindable"
                uuid: "bindable2"
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.context.properties.bind.Bindable<?>"
            uuid: "arrayList"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBeanFactoryInitializationAotProcessor$ConfigurationPropertiesReflectionHintsContribution"
      uuid: "configurationPropertiesBeanFactoryInitializationAotProcessor.ConfigurationPropertiesReflectionHintsContribution"
      fixed: true
    branches:
    - lineNumber: 48
      expression: "for-each(beanNames)"
      range: "(48,26)-(48,34)"
      evaluatedAs: true
    - lineNumber: 50
      expression: "beanType != null"
      range: "(50,8)-(50,23)"
      evaluatedAs: true
    - lineNumber: 51
      expression: "beanFactory.containsBeanDefinition(beanName)"
      range: "(51,29)-(51,72)"
      evaluatedAs: false
    - lineNumber: 55
      expression: "bindMethod != null"
      range: "(55,23)-(55,40)"
      evaluatedAs: false
    - lineNumber: 58
      expression: "!bindables.isEmpty()"
      range: "(58,11)-(58,30)"
      evaluatedAs: true
