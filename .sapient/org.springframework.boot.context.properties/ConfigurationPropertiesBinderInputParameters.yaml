---
modelFingerprint: "0B0351F9B0C888A09A0509B50F2EDA48"
targetClass:
  fullClassName: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder"
methods:
- method:
    name: "bind"
    sourceCodeSignature: "BindResult<?> bind(ConfigurationPropertiesBean propertiesBean)"
    returnType: "org.springframework.boot.context.properties.bind.BindResult"
    genericReturnType: "?"
    parameters:
    - name: "propertiesBean"
      type: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
    instructionFingerprint: "2636270C33F70C6365203227232ADC2C"
  paths:
  - pathId: "path1"
    testPathName: "bindWhenThisBinderIsNullAndThisApplicationContextNotInstanceOfConfigurableApplicationContext3"
    constructorSignature: "<init>(org.springframework.context.ApplicationContext)\
      \ : void"
    modelFingerprint: "24FCE8FEE9CC7A11CB40D3AC3D5060E8"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "3F3FF3C6CD1E36AD8380279EA12DE0B8"
      valueUuid: "target"
    - type: "INPUT"
      name: "propertiesBean"
      modelFingerprint: "EAF7400AF24F89B714CF5CA8E6E070EC"
      valueUuid: "propertiesBean"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "FED8746D69845FB1FA8479418506E12F"
      valueUuid: "propertySourcesDeducer"
      methodExercised:
        expression: "getPropertySources():propertySources"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "A59EABB40C2D79EB1D9D36B039273EAF"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "containsBean(name:uniqueUuid1):boolean1"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "6717D90D0F39A25CDF704557BF007FD1"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "getBean(name:uniqueUuid2,requiredType:uniqueUuid3):object"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
    - type: "STATIC"
      name: "ConfigurationPropertiesJsr303Validator.class"
      modelFingerprint: "81915BFD21BED47682C29C40E1B1B487"
      valueUuid: "ConfigurationPropertiesJsr303Validator.class"
      methodExercised:
        expression: "isJsr303Present(applicationContext:applicationContext):boolean2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "propertiesBean"
      modelFingerprint: "71C31F87A21520409F6531D997E694F0"
      valueUuid: "propertiesBean"
      methodExercised:
        expression: "asBindTarget():bindable"
    - type: "LOCAL_VARIABLE"
      name: "propertiesBean"
      modelFingerprint: "B2CEC8BB098D480AEFB43BA3AF5D36E0"
      valueUuid: "propertiesBean"
      methodExercised:
        expression: "getAnnotation():configurationProperties"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "1F4697F20661A66E4C8882A4C94BA69F"
      valueUuid: "bindable"
      methodExercised:
        expression: "getAnnotation(type:uniqueUuid4):annotation"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "4C76308A3EDFB28BC37B8765B112A6BF"
      valueUuid: "bindable"
      methodExercised:
        expression: "getValue():supplier"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "4C76308A3EDFB28BC37B8765B112A6BF"
      valueUuid: "bindable"
      methodExercised:
        expression: "getValue():supplier2"
    - type: "STATIC"
      name: "BoundConfigurationProperties.class"
      modelFingerprint: "1EB2AA3D22186DAC5A5CB7F7EF2D7B6B"
      valueUuid: "BoundConfigurationProperties.class"
      methodExercised:
        expression: "get(context:applicationContext):boundConfigurationProperties"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "51C4CF5FC50D5563E142C8CDE1A5ABC2"
      valueUuid: "configurationProperties"
      methodExercised:
        expression: "ignoreInvalidFields():boolean7"
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "4E1BBBDF25C6DD1D68E47E2F00B636DC"
      valueUuid: "configurationProperties"
      methodExercised:
        expression: "ignoreUnknownFields():boolean8"
    - type: "FIELD"
      name: "applicationContext"
      modelFingerprint: "5A7E4623F1451AE12DC1C87A5AB87213"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "getBeanProvider(requiredType:uniqueUuid5):objectProvider"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "D47D252FF5D9DFFA1D112975BA8250B0"
      valueUuid: "objectProvider"
      methodExercised:
        expression: "orderedStream():stream"
    - type: "STATIC"
      name: "ConfigurationPropertySources.class"
      modelFingerprint: "9AEF1F7044958F32ED340AFF33BF0C2E"
      valueUuid: "ConfigurationPropertySources.class"
      methodExercised:
        expression: "from(sources:propertySources):iterable"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "CE3FC3997DC43221266F4398919CB728"
      valueUuid: "conversionServiceDeducer"
      methodExercised:
        expression: "getConversionServices():list2"
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "3AC1043B880A4C0EF0EE594EDE4F18A1"
      valueUuid: "configurationProperties"
      methodExercised:
        expression: "prefix():string"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B53CE4138360AA8DEAFC60A03354E312"
      valueUuid: "binder"
      methodExercised:
        expression: "bind(name:string,target:bindable,handler:validationBindHandler):bindResult"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "332823795A0602529308262E567DA63C"
      valueUuid: "bindResult"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.propertySources = new PropertySourcesDeducer(applicationContext).getPropertySources();"
      lineNumber: 85
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type PropertySourcesDeducer - Method: getPropertySources"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder"
        parameters:
        - name: "applicationContext"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.ApplicationContext"
            uuid: "applicationContext"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "propertiesBean"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
        parameters:
        - name: "applicationContext"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.ApplicationContext"
            uuid: "applicationContext"
      valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
      uuid: "propertySourcesDeducer"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.PropertySources"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
            parameters:
            - name: "applicationContext"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.context.ApplicationContext"
                uuid: "applicationContext"
          valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
          uuid: "propertySourcesDeducer"
          fixed: true
        methodParameters: []
        methodName: "getPropertySources"
      valueType: "org.springframework.core.env.PropertySources"
      uuid: "propertySources"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "configurationPropertiesValidator"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.validation.Validator"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "configurationPropertiesValidator"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.validation.Validator"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.validation.Validator"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
      uuid: "ConfigurationPropertiesJsr303Validator.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "propertiesBean"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "propertiesBean"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "configurationProperties"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "java.lang.annotation.Annotation"
      uuid: "annotation"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.validation.annotation.Validated"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.validation.annotation.Validated"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "supplier"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "supplier2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.BoundConfigurationProperties"
      uuid: "BoundConfigurationProperties.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.BoundConfigurationProperties"
      uuid: "boundConfigurationProperties"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "configurationProperties"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "configurationProperties"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean8"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.ObjectProvider"
      uuid: "objectProvider"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.context.properties.ConfigurationPropertiesBindHandlerAdvisor"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBindHandlerAdvisor"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.ObjectProvider"
      uuid: "objectProvider"
    - sapientType: "MOCK"
      valueType: "java.util.stream.Stream"
      uuid: "stream"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "ConfigurationPropertySources.class"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "iterable"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.PropertySources"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
            parameters:
            - name: "applicationContext"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.context.ApplicationContext"
                uuid: "applicationContext"
          valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
          uuid: "propertySourcesDeducer"
          fixed: true
        methodParameters: []
        methodName: "getPropertySources"
      valueType: "org.springframework.core.env.PropertySources"
      uuid: "propertySources"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConversionServiceDeducer"
        parameters:
        - name: "applicationContext"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.ApplicationContext"
            uuid: "applicationContext"
      valueType: "org.springframework.boot.context.properties.ConversionServiceDeducer"
      uuid: "conversionServiceDeducer"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "configurationProperties"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_prefix1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "iterable"
        - name: "placeholdersResolver"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
              parameters:
              - name: "sources"
                value:
                  sapientType: "OBJECT"
                  content: !<method_return_from_value>
                    target: "org.springframework.core.env.PropertySources"
                    localVariableValue:
                      sapientType: "OBJECT"
                      content: !<new>
                        target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                        parameters:
                        - name: "applicationContext"
                          value:
                            sapientType: "MOCK"
                            valueType: "org.springframework.context.ApplicationContext"
                            uuid: "applicationContext"
                      valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                      uuid: "propertySourcesDeducer"
                      fixed: true
                    methodParameters: []
                    methodName: "getPropertySources"
                  valueType: "org.springframework.core.env.PropertySources"
                  uuid: "propertySources"
            valueType: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
            uuid: "propertySourcesPlaceholdersResolver"
            fixed: true
        - name: "conversionServices"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.core.convert.ConversionService"
            uuid: "list2"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "NULL"
            valueType: "java.util.function.Consumer"
            genericValueType: "org.springframework.beans.PropertyEditorRegistry"
            uuid: "consumer"
            fixed: true
        - name: "defaultBindHandler"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "uniqueUuid6"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "uniqueUuid7"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "binder"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.bind.BindResult"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.bind.Binder"
            parameters:
            - name: "sources"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  parameters: []
                  values: []
                valueType: "java.lang.Iterable"
                genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "iterable"
            - name: "placeholdersResolver"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
                  parameters:
                  - name: "sources"
                    value:
                      sapientType: "OBJECT"
                      content: !<method_return_from_value>
                        target: "org.springframework.core.env.PropertySources"
                        localVariableValue:
                          sapientType: "OBJECT"
                          content: !<new>
                            target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                            parameters:
                            - name: "applicationContext"
                              value:
                                sapientType: "MOCK"
                                valueType: "org.springframework.context.ApplicationContext"
                                uuid: "applicationContext"
                          valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                          uuid: "propertySourcesDeducer"
                          fixed: true
                        methodParameters: []
                        methodName: "getPropertySources"
                      valueType: "org.springframework.core.env.PropertySources"
                      uuid: "propertySources"
                valueType: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
                uuid: "propertySourcesPlaceholdersResolver"
                fixed: true
            - name: "conversionServices"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  parameters: []
                  values: []
                valueType: "java.util.List"
                genericValueType: "org.springframework.core.convert.ConversionService"
                uuid: "list2"
            - name: "propertyEditorInitializer"
              value:
                sapientType: "NULL"
                valueType: "java.util.function.Consumer"
                genericValueType: "org.springframework.beans.PropertyEditorRegistry"
                uuid: "consumer"
                fixed: true
            - name: "defaultBindHandler"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            - name: "constructorProvider"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
          valueType: "org.springframework.boot.context.properties.bind.Binder"
          uuid: "binder"
          fixed: true
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_prefix1"
            valueType: "java.lang.String"
            uuid: "string"
        - name: "target"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.Bindable"
            genericValueType: "?"
            uuid: "bindable"
        - name: "handler"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
              parameters:
              - name: "parent"
                value:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.springframework.boot.context.properties.bind.handler.NoUnboundElementsBindHandler"
                    parameters:
                    - name: "parent"
                      value:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.springframework.boot.context.properties.bind.handler.IgnoreErrorsBindHandler"
                          parameters:
                          - name: "parent"
                            value:
                              sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                              valueType: "org.springframework.boot.context.properties.bind.BindHandler"
                              uuid: "configurationPropertiesBinder.ConfigurationPropertiesBindHandler"
                        valueType: "org.springframework.boot.context.properties.bind.handler.IgnoreErrorsBindHandler"
                        uuid: "ignoreErrorsBindHandler"
                        fixed: true
                    - name: "filter"
                      value:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.springframework.boot.context.properties.source.UnboundElementsSourceFilter"
                          parameters: []
                        valueType: "org.springframework.boot.context.properties.source.UnboundElementsSourceFilter"
                        uuid: "unboundElementsSourceFilter"
                        fixed: true
                  valueType: "org.springframework.boot.context.properties.bind.handler.NoUnboundElementsBindHandler"
                  uuid: "noUnboundElementsBindHandler"
                  fixed: true
              - name: "validators"
                value:
                  sapientType: "ARRAY"
                  content: !<array>
                    values:
                      0:
                        sapientType: "MOCK"
                        valueType: "org.springframework.validation.Validator"
                        uuid: "object"
                        explicitCastNeeded: true
                      1:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
                          parameters:
                          - name: "applicationContext"
                            value:
                              sapientType: "MOCK"
                              valueType: "org.springframework.context.ApplicationContext"
                              uuid: "applicationContext"
                        valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
                        uuid: "configurationPropertiesJsr303Validator"
                        fixed: true
                      2:
                        sapientType: "MOCK"
                        valueType: "org.springframework.validation.Validator"
                        uuid: "object2"
                  valueType: "org.springframework.validation.Validator[]"
                  uuid: "objectArray"
                  collectionUuid: "arrayList"
            valueType: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
            uuid: "validationBindHandler"
            fixed: true
        methodName: "bind"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "bindResult"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_prefix1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
      uuid: "validationBindHandler"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.bind.BindResult"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.bind.Binder"
            parameters:
            - name: "sources"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  parameters: []
                  values: []
                valueType: "java.lang.Iterable"
                genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "iterable"
            - name: "placeholdersResolver"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
                  parameters:
                  - name: "sources"
                    value:
                      sapientType: "OBJECT"
                      content: !<method_return_from_value>
                        target: "org.springframework.core.env.PropertySources"
                        localVariableValue:
                          sapientType: "OBJECT"
                          content: !<new>
                            target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                            parameters:
                            - name: "applicationContext"
                              value:
                                sapientType: "MOCK"
                                valueType: "org.springframework.context.ApplicationContext"
                                uuid: "applicationContext"
                          valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                          uuid: "propertySourcesDeducer"
                          fixed: true
                        methodParameters: []
                        methodName: "getPropertySources"
                      valueType: "org.springframework.core.env.PropertySources"
                      uuid: "propertySources"
                valueType: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
                uuid: "propertySourcesPlaceholdersResolver"
                fixed: true
            - name: "conversionServices"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  parameters: []
                  values: []
                valueType: "java.util.List"
                genericValueType: "org.springframework.core.convert.ConversionService"
                uuid: "list2"
            - name: "propertyEditorInitializer"
              value:
                sapientType: "NULL"
                valueType: "java.util.function.Consumer"
                genericValueType: "org.springframework.beans.PropertyEditorRegistry"
                uuid: "consumer"
                fixed: true
            - name: "defaultBindHandler"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            - name: "constructorProvider"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
          valueType: "org.springframework.boot.context.properties.bind.Binder"
          uuid: "binder"
          fixed: true
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_prefix1"
            valueType: "java.lang.String"
            uuid: "string"
        - name: "target"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.Bindable"
            genericValueType: "?"
            uuid: "bindable"
        - name: "handler"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
              parameters:
              - name: "parent"
                value:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.springframework.boot.context.properties.bind.handler.NoUnboundElementsBindHandler"
                    parameters:
                    - name: "parent"
                      value:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.springframework.boot.context.properties.bind.handler.IgnoreErrorsBindHandler"
                          parameters:
                          - name: "parent"
                            value:
                              sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                              valueType: "org.springframework.boot.context.properties.bind.BindHandler"
                              uuid: "configurationPropertiesBinder.ConfigurationPropertiesBindHandler"
                        valueType: "org.springframework.boot.context.properties.bind.handler.IgnoreErrorsBindHandler"
                        uuid: "ignoreErrorsBindHandler"
                        fixed: true
                    - name: "filter"
                      value:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.springframework.boot.context.properties.source.UnboundElementsSourceFilter"
                          parameters: []
                        valueType: "org.springframework.boot.context.properties.source.UnboundElementsSourceFilter"
                        uuid: "unboundElementsSourceFilter"
                        fixed: true
                  valueType: "org.springframework.boot.context.properties.bind.handler.NoUnboundElementsBindHandler"
                  uuid: "noUnboundElementsBindHandler"
                  fixed: true
              - name: "validators"
                value:
                  sapientType: "ARRAY"
                  content: !<array>
                    values:
                      0:
                        sapientType: "MOCK"
                        valueType: "org.springframework.validation.Validator"
                        uuid: "object"
                        explicitCastNeeded: true
                      1:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
                          parameters:
                          - name: "applicationContext"
                            value:
                              sapientType: "MOCK"
                              valueType: "org.springframework.context.ApplicationContext"
                              uuid: "applicationContext"
                        valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
                        uuid: "configurationPropertiesJsr303Validator"
                        fixed: true
                      2:
                        sapientType: "MOCK"
                        valueType: "org.springframework.validation.Validator"
                        uuid: "object2"
                  valueType: "org.springframework.validation.Validator[]"
                  uuid: "objectArray"
                  collectionUuid: "arrayList"
            valueType: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
            uuid: "validationBindHandler"
            fixed: true
        methodName: "bind"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "bindResult"
    branches:
    - lineNumber: 140
      expression: "this.configurationPropertiesValidator != null"
      range: "(140,7)-(140,51)"
      evaluatedAs: true
      internalMethodName: "getValidators"
    - lineNumber: 143
      expression: "this.jsr303Present"
      range: "(143,7)-(143,24)"
      evaluatedAs: true
      internalMethodName: "getValidators"
    - lineNumber: 143
      expression: "target.getAnnotation(Validated.class) != null"
      range: "(143,29)-(143,73)"
      evaluatedAs: true
      internalMethodName: "getValidators"
    - lineNumber: 166
      expression: "this.jsr303Validator == null"
      range: "(166,7)-(166,34)"
      evaluatedAs: true
      internalMethodName: "getJsr303Validator"
    - lineNumber: 154
      expression: "target.getValue() != null"
      range: "(154,7)-(154,31)"
      evaluatedAs: true
      internalMethodName: "getSelfValidator"
    - lineNumber: 156
      expression: "value instanceof Validator validator"
      range: "(156,12)-(156,47)"
      evaluatedAs: true
      internalMethodName: "getSelfValidator"
    - lineNumber: 147
      expression: "selfValidator != null"
      range: "(147,7)-(147,27)"
      evaluatedAs: true
      internalMethodName: "getValidators"
    - lineNumber: 133
      expression: "bound != null"
      range: "(133,11)-(133,23)"
      evaluatedAs: true
      internalMethodName: "getHandler"
    - lineNumber: 115
      expression: "annotation.ignoreInvalidFields()"
      range: "(115,7)-(115,38)"
      evaluatedAs: true
      internalMethodName: "getBindHandler"
    - lineNumber: 118
      expression: "!annotation.ignoreUnknownFields()"
      range: "(118,7)-(118,39)"
      evaluatedAs: true
      internalMethodName: "getBindHandler"
    - lineNumber: 122
      expression: "!validators.isEmpty()"
      range: "(122,7)-(122,27)"
      evaluatedAs: true
      internalMethodName: "getBindHandler"
    - lineNumber: 125
      expression: "for-each(getBindHandlerAdvisors())"
      range: "(125,60)-(125,83)"
      evaluatedAs: false
      internalMethodName: "getBindHandler"
    - lineNumber: 179
      expression: "this.binder == null"
      range: "(179,7)-(179,25)"
      evaluatedAs: true
      internalMethodName: "getBinder"
    - lineNumber: 199
      expression: "this.applicationContext instanceof ConfigurableApplicationContext\
        \ configurableContext"
      range: "(199,7)-(199,91)"
      evaluatedAs: false
      internalMethodName: "getPropertyEditorInitializer"
  - pathId: "path7"
    testPathName: "bindWhenThisBinderIsNullAndThisApplicationContextNotInstanceOfConfigurableApplicationContext9"
    constructorSignature: "<init>(org.springframework.context.ApplicationContext)\
      \ : void"
    modelFingerprint: "B8FC5DBB4400BE5E9C843D596828C7DF"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "3F3FF3C6CD1E36AD8380279EA12DE0B8"
      valueUuid: "target"
    - type: "INPUT"
      name: "propertiesBean"
      modelFingerprint: "EAF7400AF24F89B714CF5CA8E6E070EC"
      valueUuid: "propertiesBean"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "FED8746D69845FB1FA8479418506E12F"
      valueUuid: "propertySourcesDeducer"
      methodExercised:
        expression: "getPropertySources():propertySources"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "A59EABB40C2D79EB1D9D36B039273EAF"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "containsBean(name:uniqueUuid8):boolean1"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "6717D90D0F39A25CDF704557BF007FD1"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "getBean(name:uniqueUuid9,requiredType:uniqueUuid10):object"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
    - type: "STATIC"
      name: "ConfigurationPropertiesJsr303Validator.class"
      modelFingerprint: "81915BFD21BED47682C29C40E1B1B487"
      valueUuid: "ConfigurationPropertiesJsr303Validator.class"
      methodExercised:
        expression: "isJsr303Present(applicationContext:applicationContext):boolean2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "propertiesBean"
      modelFingerprint: "71C31F87A21520409F6531D997E694F0"
      valueUuid: "propertiesBean"
      methodExercised:
        expression: "asBindTarget():bindable"
    - type: "LOCAL_VARIABLE"
      name: "propertiesBean"
      modelFingerprint: "B2CEC8BB098D480AEFB43BA3AF5D36E0"
      valueUuid: "propertiesBean"
      methodExercised:
        expression: "getAnnotation():configurationProperties"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "1F4697F20661A66E4C8882A4C94BA69F"
      valueUuid: "bindable"
      methodExercised:
        expression: "getAnnotation(type:uniqueUuid11):annotation"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "4C76308A3EDFB28BC37B8765B112A6BF"
      valueUuid: "bindable"
      methodExercised:
        expression: "getValue():supplier"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "4C76308A3EDFB28BC37B8765B112A6BF"
      valueUuid: "bindable"
      methodExercised:
        expression: "getValue():supplier2"
    - type: "STATIC"
      name: "BoundConfigurationProperties.class"
      modelFingerprint: "4C5A8C2D3CC9D6C419E4940D3E71E4BE"
      valueUuid: "BoundConfigurationProperties.class"
      methodExercised:
        expression: "get(context:applicationContext):boundConfigurationProperties"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "7FE4D5EFF832B93F15E35F05A552A36B"
      valueUuid: "configurationProperties"
      methodExercised:
        expression: "ignoreInvalidFields():boolean6"
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "6F2A875B8744D255444920F6D4B331CD"
      valueUuid: "configurationProperties"
      methodExercised:
        expression: "ignoreUnknownFields():boolean7"
    - type: "FIELD"
      name: "applicationContext"
      modelFingerprint: "5A7E4623F1451AE12DC1C87A5AB87213"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "getBeanProvider(requiredType:uniqueUuid12):objectProvider"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "D47D252FF5D9DFFA1D112975BA8250B0"
      valueUuid: "objectProvider"
      methodExercised:
        expression: "orderedStream():stream"
    - type: "STATIC"
      name: "ConfigurationPropertySources.class"
      modelFingerprint: "9AEF1F7044958F32ED340AFF33BF0C2E"
      valueUuid: "ConfigurationPropertySources.class"
      methodExercised:
        expression: "from(sources:propertySources):iterable"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "CE3FC3997DC43221266F4398919CB728"
      valueUuid: "conversionServiceDeducer"
      methodExercised:
        expression: "getConversionServices():list2"
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "3AC1043B880A4C0EF0EE594EDE4F18A1"
      valueUuid: "configurationProperties"
      methodExercised:
        expression: "prefix():string"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "0FFDE6C3D217F13193655E291B742EC3"
      valueUuid: "binder"
      methodExercised:
        expression: "bind(name:string,target:bindable,handler:validationBindHandler):bindResult"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "12F063B2069A1230176E4330FCCC2EA8"
      valueUuid: "bindResult"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.propertySources = new PropertySourcesDeducer(applicationContext).getPropertySources();"
      lineNumber: 85
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type PropertySourcesDeducer - Method: getPropertySources"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder"
        parameters:
        - name: "applicationContext"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.ApplicationContext"
            uuid: "applicationContext"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "propertiesBean"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
        parameters:
        - name: "applicationContext"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.ApplicationContext"
            uuid: "applicationContext"
      valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
      uuid: "propertySourcesDeducer"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.PropertySources"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
            parameters:
            - name: "applicationContext"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.context.ApplicationContext"
                uuid: "applicationContext"
          valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
          uuid: "propertySourcesDeducer"
          fixed: true
        methodParameters: []
        methodName: "getPropertySources"
      valueType: "org.springframework.core.env.PropertySources"
      uuid: "propertySources"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "configurationPropertiesValidator"
      valueType: "java.lang.String"
      uuid: "uniqueUuid8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.validation.Validator"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "configurationPropertiesValidator"
      valueType: "java.lang.String"
      uuid: "uniqueUuid9"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.validation.Validator"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.validation.Validator"
      uuid: "uniqueUuid10"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
      uuid: "ConfigurationPropertiesJsr303Validator.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "propertiesBean"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "propertiesBean"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "configurationProperties"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "java.lang.annotation.Annotation"
      uuid: "annotation"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.validation.annotation.Validated"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.validation.annotation.Validated"
      uuid: "uniqueUuid11"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "supplier"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "supplier2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.BoundConfigurationProperties"
      uuid: "BoundConfigurationProperties.class"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.BoundConfigurationProperties"
      uuid: "boundConfigurationProperties"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "configurationProperties"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean6"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "configurationProperties"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean7"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.ObjectProvider"
      uuid: "objectProvider"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.context.properties.ConfigurationPropertiesBindHandlerAdvisor"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBindHandlerAdvisor"
      uuid: "uniqueUuid12"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.ObjectProvider"
      uuid: "objectProvider"
    - sapientType: "MOCK"
      valueType: "java.util.stream.Stream"
      uuid: "stream"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "ConfigurationPropertySources.class"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "iterable"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.PropertySources"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
            parameters:
            - name: "applicationContext"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.context.ApplicationContext"
                uuid: "applicationContext"
          valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
          uuid: "propertySourcesDeducer"
          fixed: true
        methodParameters: []
        methodName: "getPropertySources"
      valueType: "org.springframework.core.env.PropertySources"
      uuid: "propertySources"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConversionServiceDeducer"
        parameters:
        - name: "applicationContext"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.ApplicationContext"
            uuid: "applicationContext"
      valueType: "org.springframework.boot.context.properties.ConversionServiceDeducer"
      uuid: "conversionServiceDeducer"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "configurationProperties"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_prefix1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "iterable"
        - name: "placeholdersResolver"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
              parameters:
              - name: "sources"
                value:
                  sapientType: "OBJECT"
                  content: !<method_return_from_value>
                    target: "org.springframework.core.env.PropertySources"
                    localVariableValue:
                      sapientType: "OBJECT"
                      content: !<new>
                        target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                        parameters:
                        - name: "applicationContext"
                          value:
                            sapientType: "MOCK"
                            valueType: "org.springframework.context.ApplicationContext"
                            uuid: "applicationContext"
                      valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                      uuid: "propertySourcesDeducer"
                      fixed: true
                    methodParameters: []
                    methodName: "getPropertySources"
                  valueType: "org.springframework.core.env.PropertySources"
                  uuid: "propertySources"
            valueType: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
            uuid: "propertySourcesPlaceholdersResolver"
            fixed: true
        - name: "conversionServices"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.core.convert.ConversionService"
            uuid: "list2"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "NULL"
            valueType: "java.util.function.Consumer"
            genericValueType: "org.springframework.beans.PropertyEditorRegistry"
            uuid: "consumer"
            fixed: true
        - name: "defaultBindHandler"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "uniqueUuid13"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "uniqueUuid14"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "binder"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.bind.BindResult"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.bind.Binder"
            parameters:
            - name: "sources"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  parameters: []
                  values: []
                valueType: "java.lang.Iterable"
                genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "iterable"
            - name: "placeholdersResolver"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
                  parameters:
                  - name: "sources"
                    value:
                      sapientType: "OBJECT"
                      content: !<method_return_from_value>
                        target: "org.springframework.core.env.PropertySources"
                        localVariableValue:
                          sapientType: "OBJECT"
                          content: !<new>
                            target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                            parameters:
                            - name: "applicationContext"
                              value:
                                sapientType: "MOCK"
                                valueType: "org.springframework.context.ApplicationContext"
                                uuid: "applicationContext"
                          valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                          uuid: "propertySourcesDeducer"
                          fixed: true
                        methodParameters: []
                        methodName: "getPropertySources"
                      valueType: "org.springframework.core.env.PropertySources"
                      uuid: "propertySources"
                valueType: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
                uuid: "propertySourcesPlaceholdersResolver"
                fixed: true
            - name: "conversionServices"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  parameters: []
                  values: []
                valueType: "java.util.List"
                genericValueType: "org.springframework.core.convert.ConversionService"
                uuid: "list2"
            - name: "propertyEditorInitializer"
              value:
                sapientType: "NULL"
                valueType: "java.util.function.Consumer"
                genericValueType: "org.springframework.beans.PropertyEditorRegistry"
                uuid: "consumer"
                fixed: true
            - name: "defaultBindHandler"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            - name: "constructorProvider"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
          valueType: "org.springframework.boot.context.properties.bind.Binder"
          uuid: "binder"
          fixed: true
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_prefix1"
            valueType: "java.lang.String"
            uuid: "string"
        - name: "target"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.Bindable"
            genericValueType: "?"
            uuid: "bindable"
        - name: "handler"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
              parameters:
              - name: "parent"
                value:
                  sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                  valueType: "org.springframework.boot.context.properties.bind.BindHandler"
                  uuid: "configurationPropertiesBinder.ConfigurationPropertiesBindHandler"
              - name: "validators"
                value:
                  sapientType: "ARRAY"
                  content: !<array>
                    values:
                      0:
                        sapientType: "MOCK"
                        valueType: "org.springframework.validation.Validator"
                        uuid: "object"
                        explicitCastNeeded: true
                      1:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
                          parameters:
                          - name: "applicationContext"
                            value:
                              sapientType: "MOCK"
                              valueType: "org.springframework.context.ApplicationContext"
                              uuid: "applicationContext"
                        valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
                        uuid: "configurationPropertiesJsr303Validator"
                        fixed: true
                  valueType: "org.springframework.validation.Validator[]"
                  uuid: "objectArray"
                  collectionUuid: "arrayList"
            valueType: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
            uuid: "validationBindHandler"
            fixed: true
        methodName: "bind"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "bindResult"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_prefix1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
      uuid: "validationBindHandler"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.bind.BindResult"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.bind.Binder"
            parameters:
            - name: "sources"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  parameters: []
                  values: []
                valueType: "java.lang.Iterable"
                genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "iterable"
            - name: "placeholdersResolver"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
                  parameters:
                  - name: "sources"
                    value:
                      sapientType: "OBJECT"
                      content: !<method_return_from_value>
                        target: "org.springframework.core.env.PropertySources"
                        localVariableValue:
                          sapientType: "OBJECT"
                          content: !<new>
                            target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                            parameters:
                            - name: "applicationContext"
                              value:
                                sapientType: "MOCK"
                                valueType: "org.springframework.context.ApplicationContext"
                                uuid: "applicationContext"
                          valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                          uuid: "propertySourcesDeducer"
                          fixed: true
                        methodParameters: []
                        methodName: "getPropertySources"
                      valueType: "org.springframework.core.env.PropertySources"
                      uuid: "propertySources"
                valueType: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
                uuid: "propertySourcesPlaceholdersResolver"
                fixed: true
            - name: "conversionServices"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  parameters: []
                  values: []
                valueType: "java.util.List"
                genericValueType: "org.springframework.core.convert.ConversionService"
                uuid: "list2"
            - name: "propertyEditorInitializer"
              value:
                sapientType: "NULL"
                valueType: "java.util.function.Consumer"
                genericValueType: "org.springframework.beans.PropertyEditorRegistry"
                uuid: "consumer"
                fixed: true
            - name: "defaultBindHandler"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            - name: "constructorProvider"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
          valueType: "org.springframework.boot.context.properties.bind.Binder"
          uuid: "binder"
          fixed: true
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_prefix1"
            valueType: "java.lang.String"
            uuid: "string"
        - name: "target"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.Bindable"
            genericValueType: "?"
            uuid: "bindable"
        - name: "handler"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
              parameters:
              - name: "parent"
                value:
                  sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                  valueType: "org.springframework.boot.context.properties.bind.BindHandler"
                  uuid: "configurationPropertiesBinder.ConfigurationPropertiesBindHandler"
              - name: "validators"
                value:
                  sapientType: "ARRAY"
                  content: !<array>
                    values:
                      0:
                        sapientType: "MOCK"
                        valueType: "org.springframework.validation.Validator"
                        uuid: "object"
                        explicitCastNeeded: true
                      1:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
                          parameters:
                          - name: "applicationContext"
                            value:
                              sapientType: "MOCK"
                              valueType: "org.springframework.context.ApplicationContext"
                              uuid: "applicationContext"
                        valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
                        uuid: "configurationPropertiesJsr303Validator"
                        fixed: true
                  valueType: "org.springframework.validation.Validator[]"
                  uuid: "objectArray"
                  collectionUuid: "arrayList"
            valueType: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
            uuid: "validationBindHandler"
            fixed: true
        methodName: "bind"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "bindResult"
    branches:
    - lineNumber: 140
      expression: "this.configurationPropertiesValidator != null"
      range: "(140,7)-(140,51)"
      evaluatedAs: true
      internalMethodName: "getValidators"
    - lineNumber: 143
      expression: "this.jsr303Present"
      range: "(143,7)-(143,24)"
      evaluatedAs: true
      internalMethodName: "getValidators"
    - lineNumber: 143
      expression: "target.getAnnotation(Validated.class) != null"
      range: "(143,29)-(143,73)"
      evaluatedAs: true
      internalMethodName: "getValidators"
    - lineNumber: 166
      expression: "this.jsr303Validator == null"
      range: "(166,7)-(166,34)"
      evaluatedAs: true
      internalMethodName: "getJsr303Validator"
    - lineNumber: 154
      expression: "target.getValue() != null"
      range: "(154,7)-(154,31)"
      evaluatedAs: true
      internalMethodName: "getSelfValidator"
    - lineNumber: 156
      expression: "value instanceof Validator validator"
      range: "(156,12)-(156,47)"
      evaluatedAs: false
      internalMethodName: "getSelfValidator"
    - lineNumber: 147
      expression: "selfValidator != null"
      range: "(147,7)-(147,27)"
      evaluatedAs: false
      internalMethodName: "getValidators"
    - lineNumber: 133
      expression: "bound != null"
      range: "(133,11)-(133,23)"
      evaluatedAs: false
      internalMethodName: "getHandler"
    - lineNumber: 115
      expression: "annotation.ignoreInvalidFields()"
      range: "(115,7)-(115,38)"
      evaluatedAs: false
      internalMethodName: "getBindHandler"
    - lineNumber: 118
      expression: "!annotation.ignoreUnknownFields()"
      range: "(118,7)-(118,39)"
      evaluatedAs: false
      internalMethodName: "getBindHandler"
    - lineNumber: 122
      expression: "!validators.isEmpty()"
      range: "(122,7)-(122,27)"
      evaluatedAs: true
      internalMethodName: "getBindHandler"
    - lineNumber: 125
      expression: "for-each(getBindHandlerAdvisors())"
      range: "(125,60)-(125,83)"
      evaluatedAs: false
      internalMethodName: "getBindHandler"
    - lineNumber: 179
      expression: "this.binder == null"
      range: "(179,7)-(179,25)"
      evaluatedAs: true
      internalMethodName: "getBinder"
    - lineNumber: 199
      expression: "this.applicationContext instanceof ConfigurableApplicationContext\
        \ configurableContext"
      range: "(199,7)-(199,91)"
      evaluatedAs: false
      internalMethodName: "getPropertyEditorInitializer"
  - pathId: "path8"
    testPathName: "bindWhenThisBinderIsNullAndThisApplicationContextNotInstanceOfConfigurableApplicationContext10"
    constructorSignature: "<init>(org.springframework.context.ApplicationContext)\
      \ : void"
    modelFingerprint: "44F5C7A855AB066F3D983E6336B81C1C"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "3F3FF3C6CD1E36AD8380279EA12DE0B8"
      valueUuid: "target"
    - type: "INPUT"
      name: "propertiesBean"
      modelFingerprint: "EAF7400AF24F89B714CF5CA8E6E070EC"
      valueUuid: "propertiesBean"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "FED8746D69845FB1FA8479418506E12F"
      valueUuid: "propertySourcesDeducer"
      methodExercised:
        expression: "getPropertySources():propertySources"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "A59EABB40C2D79EB1D9D36B039273EAF"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "containsBean(name:uniqueUuid15):boolean1"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "6717D90D0F39A25CDF704557BF007FD1"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "getBean(name:uniqueUuid16,requiredType:uniqueUuid17):object"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
    - type: "STATIC"
      name: "ConfigurationPropertiesJsr303Validator.class"
      modelFingerprint: "81915BFD21BED47682C29C40E1B1B487"
      valueUuid: "ConfigurationPropertiesJsr303Validator.class"
      methodExercised:
        expression: "isJsr303Present(applicationContext:applicationContext):boolean2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "propertiesBean"
      modelFingerprint: "71C31F87A21520409F6531D997E694F0"
      valueUuid: "propertiesBean"
      methodExercised:
        expression: "asBindTarget():bindable"
    - type: "LOCAL_VARIABLE"
      name: "propertiesBean"
      modelFingerprint: "B2CEC8BB098D480AEFB43BA3AF5D36E0"
      valueUuid: "propertiesBean"
      methodExercised:
        expression: "getAnnotation():configurationProperties"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "1F4697F20661A66E4C8882A4C94BA69F"
      valueUuid: "bindable"
      methodExercised:
        expression: "getAnnotation(type:uniqueUuid18):annotation"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "E214E6B13C8FB325275E9FEA8A85693B"
      valueUuid: "bindable"
      methodExercised:
        expression: "getValue():supplier"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F2B3F794932F4DDBEC46619E5B86E2B9"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "839245556C80DD2528C73D5D2B32BC65"
      valueUuid: "resolvableType"
      methodExercised:
        expression: "resolve():class"
    - type: "STATIC"
      name: "BoundConfigurationProperties.class"
      modelFingerprint: "4C5A8C2D3CC9D6C419E4940D3E71E4BE"
      valueUuid: "BoundConfigurationProperties.class"
      methodExercised:
        expression: "get(context:applicationContext):boundConfigurationProperties"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "7FE4D5EFF832B93F15E35F05A552A36B"
      valueUuid: "configurationProperties"
      methodExercised:
        expression: "ignoreInvalidFields():boolean7"
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "6F2A875B8744D255444920F6D4B331CD"
      valueUuid: "configurationProperties"
      methodExercised:
        expression: "ignoreUnknownFields():boolean8"
    - type: "FIELD"
      name: "applicationContext"
      modelFingerprint: "5A7E4623F1451AE12DC1C87A5AB87213"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "getBeanProvider(requiredType:uniqueUuid19):objectProvider"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "D47D252FF5D9DFFA1D112975BA8250B0"
      valueUuid: "objectProvider"
      methodExercised:
        expression: "orderedStream():stream"
    - type: "STATIC"
      name: "ConfigurationPropertySources.class"
      modelFingerprint: "9AEF1F7044958F32ED340AFF33BF0C2E"
      valueUuid: "ConfigurationPropertySources.class"
      methodExercised:
        expression: "from(sources:propertySources):iterable"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "CE3FC3997DC43221266F4398919CB728"
      valueUuid: "conversionServiceDeducer"
      methodExercised:
        expression: "getConversionServices():list2"
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "3AC1043B880A4C0EF0EE594EDE4F18A1"
      valueUuid: "configurationProperties"
      methodExercised:
        expression: "prefix():string"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EAC46F00F7C4AA0F086736EEB74F1EA9"
      valueUuid: "binder"
      methodExercised:
        expression: "bind(name:string,target:bindable,handler:validationBindHandler):bindResult"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D48C328A93F035C5BF936F770465B0FA"
      valueUuid: "bindResult"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.propertySources = new PropertySourcesDeducer(applicationContext).getPropertySources();"
      lineNumber: 85
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type PropertySourcesDeducer - Method: getPropertySources"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder"
        parameters:
        - name: "applicationContext"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.ApplicationContext"
            uuid: "applicationContext"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "propertiesBean"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
        parameters:
        - name: "applicationContext"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.ApplicationContext"
            uuid: "applicationContext"
      valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
      uuid: "propertySourcesDeducer"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.PropertySources"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
            parameters:
            - name: "applicationContext"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.context.ApplicationContext"
                uuid: "applicationContext"
          valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
          uuid: "propertySourcesDeducer"
          fixed: true
        methodParameters: []
        methodName: "getPropertySources"
      valueType: "org.springframework.core.env.PropertySources"
      uuid: "propertySources"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "configurationPropertiesValidator"
      valueType: "java.lang.String"
      uuid: "uniqueUuid15"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.validation.Validator"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "configurationPropertiesValidator"
      valueType: "java.lang.String"
      uuid: "uniqueUuid16"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.validation.Validator"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.validation.Validator"
      uuid: "uniqueUuid17"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
      uuid: "ConfigurationPropertiesJsr303Validator.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "propertiesBean"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "propertiesBean"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "configurationProperties"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "java.lang.annotation.Annotation"
      uuid: "annotation"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.validation.annotation.Validated"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.validation.annotation.Validated"
      uuid: "uniqueUuid18"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "NULL"
      valueType: "java.util.function.Supplier"
      uuid: "supplier"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.BoundConfigurationProperties"
      uuid: "BoundConfigurationProperties.class"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.BoundConfigurationProperties"
      uuid: "boundConfigurationProperties"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "configurationProperties"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "configurationProperties"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean8"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.ObjectProvider"
      uuid: "objectProvider"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.context.properties.ConfigurationPropertiesBindHandlerAdvisor"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBindHandlerAdvisor"
      uuid: "uniqueUuid19"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.ObjectProvider"
      uuid: "objectProvider"
    - sapientType: "MOCK"
      valueType: "java.util.stream.Stream"
      uuid: "stream"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "ConfigurationPropertySources.class"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "iterable"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.PropertySources"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
            parameters:
            - name: "applicationContext"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.context.ApplicationContext"
                uuid: "applicationContext"
          valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
          uuid: "propertySourcesDeducer"
          fixed: true
        methodParameters: []
        methodName: "getPropertySources"
      valueType: "org.springframework.core.env.PropertySources"
      uuid: "propertySources"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConversionServiceDeducer"
        parameters:
        - name: "applicationContext"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.ApplicationContext"
            uuid: "applicationContext"
      valueType: "org.springframework.boot.context.properties.ConversionServiceDeducer"
      uuid: "conversionServiceDeducer"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "configurationProperties"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_prefix1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "iterable"
        - name: "placeholdersResolver"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
              parameters:
              - name: "sources"
                value:
                  sapientType: "OBJECT"
                  content: !<method_return_from_value>
                    target: "org.springframework.core.env.PropertySources"
                    localVariableValue:
                      sapientType: "OBJECT"
                      content: !<new>
                        target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                        parameters:
                        - name: "applicationContext"
                          value:
                            sapientType: "MOCK"
                            valueType: "org.springframework.context.ApplicationContext"
                            uuid: "applicationContext"
                      valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                      uuid: "propertySourcesDeducer"
                      fixed: true
                    methodParameters: []
                    methodName: "getPropertySources"
                  valueType: "org.springframework.core.env.PropertySources"
                  uuid: "propertySources"
            valueType: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
            uuid: "propertySourcesPlaceholdersResolver"
            fixed: true
        - name: "conversionServices"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.core.convert.ConversionService"
            uuid: "list2"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "NULL"
            valueType: "java.util.function.Consumer"
            genericValueType: "org.springframework.beans.PropertyEditorRegistry"
            uuid: "consumer"
            fixed: true
        - name: "defaultBindHandler"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "uniqueUuid20"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "uniqueUuid21"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "binder"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.bind.BindResult"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.bind.Binder"
            parameters:
            - name: "sources"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  parameters: []
                  values: []
                valueType: "java.lang.Iterable"
                genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "iterable"
            - name: "placeholdersResolver"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
                  parameters:
                  - name: "sources"
                    value:
                      sapientType: "OBJECT"
                      content: !<method_return_from_value>
                        target: "org.springframework.core.env.PropertySources"
                        localVariableValue:
                          sapientType: "OBJECT"
                          content: !<new>
                            target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                            parameters:
                            - name: "applicationContext"
                              value:
                                sapientType: "MOCK"
                                valueType: "org.springframework.context.ApplicationContext"
                                uuid: "applicationContext"
                          valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                          uuid: "propertySourcesDeducer"
                          fixed: true
                        methodParameters: []
                        methodName: "getPropertySources"
                      valueType: "org.springframework.core.env.PropertySources"
                      uuid: "propertySources"
                valueType: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
                uuid: "propertySourcesPlaceholdersResolver"
                fixed: true
            - name: "conversionServices"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  parameters: []
                  values: []
                valueType: "java.util.List"
                genericValueType: "org.springframework.core.convert.ConversionService"
                uuid: "list2"
            - name: "propertyEditorInitializer"
              value:
                sapientType: "NULL"
                valueType: "java.util.function.Consumer"
                genericValueType: "org.springframework.beans.PropertyEditorRegistry"
                uuid: "consumer"
                fixed: true
            - name: "defaultBindHandler"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            - name: "constructorProvider"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
          valueType: "org.springframework.boot.context.properties.bind.Binder"
          uuid: "binder"
          fixed: true
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_prefix1"
            valueType: "java.lang.String"
            uuid: "string"
        - name: "target"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.Bindable"
            genericValueType: "?"
            uuid: "bindable"
        - name: "handler"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
              parameters:
              - name: "parent"
                value:
                  sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                  valueType: "org.springframework.boot.context.properties.bind.BindHandler"
                  uuid: "configurationPropertiesBinder.ConfigurationPropertiesBindHandler"
              - name: "validators"
                value:
                  sapientType: "ARRAY"
                  content: !<array>
                    values:
                      0:
                        sapientType: "MOCK"
                        valueType: "org.springframework.validation.Validator"
                        uuid: "object"
                        explicitCastNeeded: true
                      1:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
                          parameters:
                          - name: "applicationContext"
                            value:
                              sapientType: "MOCK"
                              valueType: "org.springframework.context.ApplicationContext"
                              uuid: "applicationContext"
                        valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
                        uuid: "configurationPropertiesJsr303Validator"
                        fixed: true
                      2:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$SelfValidatingConstructorBoundBindableValidator"
                          parameters:
                          - name: "type"
                            value:
                              sapientType: "CLASS"
                              content: !<regular>
                                value: "java.lang.Object"
                              valueType: "java.lang.Class"
                              genericValueType: "?"
                              uuid: "class"
                        valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$SelfValidatingConstructorBoundBindableValidator"
                        uuid: "configurationPropertiesBinder.SelfValidatingConstructorBoundBindableValidator"
                        fixed: true
                  valueType: "org.springframework.validation.Validator[]"
                  uuid: "objectArray"
                  collectionUuid: "arrayList"
            valueType: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
            uuid: "validationBindHandler"
            fixed: true
        methodName: "bind"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "bindResult"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_prefix1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
      uuid: "validationBindHandler"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.bind.BindResult"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.bind.Binder"
            parameters:
            - name: "sources"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  parameters: []
                  values: []
                valueType: "java.lang.Iterable"
                genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "iterable"
            - name: "placeholdersResolver"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
                  parameters:
                  - name: "sources"
                    value:
                      sapientType: "OBJECT"
                      content: !<method_return_from_value>
                        target: "org.springframework.core.env.PropertySources"
                        localVariableValue:
                          sapientType: "OBJECT"
                          content: !<new>
                            target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                            parameters:
                            - name: "applicationContext"
                              value:
                                sapientType: "MOCK"
                                valueType: "org.springframework.context.ApplicationContext"
                                uuid: "applicationContext"
                          valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                          uuid: "propertySourcesDeducer"
                          fixed: true
                        methodParameters: []
                        methodName: "getPropertySources"
                      valueType: "org.springframework.core.env.PropertySources"
                      uuid: "propertySources"
                valueType: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
                uuid: "propertySourcesPlaceholdersResolver"
                fixed: true
            - name: "conversionServices"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  parameters: []
                  values: []
                valueType: "java.util.List"
                genericValueType: "org.springframework.core.convert.ConversionService"
                uuid: "list2"
            - name: "propertyEditorInitializer"
              value:
                sapientType: "NULL"
                valueType: "java.util.function.Consumer"
                genericValueType: "org.springframework.beans.PropertyEditorRegistry"
                uuid: "consumer"
                fixed: true
            - name: "defaultBindHandler"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            - name: "constructorProvider"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
          valueType: "org.springframework.boot.context.properties.bind.Binder"
          uuid: "binder"
          fixed: true
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_prefix1"
            valueType: "java.lang.String"
            uuid: "string"
        - name: "target"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.Bindable"
            genericValueType: "?"
            uuid: "bindable"
        - name: "handler"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
              parameters:
              - name: "parent"
                value:
                  sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                  valueType: "org.springframework.boot.context.properties.bind.BindHandler"
                  uuid: "configurationPropertiesBinder.ConfigurationPropertiesBindHandler"
              - name: "validators"
                value:
                  sapientType: "ARRAY"
                  content: !<array>
                    values:
                      0:
                        sapientType: "MOCK"
                        valueType: "org.springframework.validation.Validator"
                        uuid: "object"
                        explicitCastNeeded: true
                      1:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
                          parameters:
                          - name: "applicationContext"
                            value:
                              sapientType: "MOCK"
                              valueType: "org.springframework.context.ApplicationContext"
                              uuid: "applicationContext"
                        valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
                        uuid: "configurationPropertiesJsr303Validator"
                        fixed: true
                      2:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$SelfValidatingConstructorBoundBindableValidator"
                          parameters:
                          - name: "type"
                            value:
                              sapientType: "CLASS"
                              content: !<regular>
                                value: "java.lang.Object"
                              valueType: "java.lang.Class"
                              genericValueType: "?"
                              uuid: "class"
                        valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$SelfValidatingConstructorBoundBindableValidator"
                        uuid: "configurationPropertiesBinder.SelfValidatingConstructorBoundBindableValidator"
                        fixed: true
                  valueType: "org.springframework.validation.Validator[]"
                  uuid: "objectArray"
                  collectionUuid: "arrayList"
            valueType: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
            uuid: "validationBindHandler"
            fixed: true
        methodName: "bind"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "bindResult"
    branches:
    - lineNumber: 140
      expression: "this.configurationPropertiesValidator != null"
      range: "(140,7)-(140,51)"
      evaluatedAs: true
      internalMethodName: "getValidators"
    - lineNumber: 143
      expression: "this.jsr303Present"
      range: "(143,7)-(143,24)"
      evaluatedAs: true
      internalMethodName: "getValidators"
    - lineNumber: 143
      expression: "target.getAnnotation(Validated.class) != null"
      range: "(143,29)-(143,73)"
      evaluatedAs: true
      internalMethodName: "getValidators"
    - lineNumber: 166
      expression: "this.jsr303Validator == null"
      range: "(166,7)-(166,34)"
      evaluatedAs: true
      internalMethodName: "getJsr303Validator"
    - lineNumber: 154
      expression: "target.getValue() != null"
      range: "(154,7)-(154,31)"
      evaluatedAs: false
      internalMethodName: "getSelfValidator"
    - lineNumber: 159
      expression: "Validator.class.isAssignableFrom(type)"
      range: "(159,7)-(159,44)"
      evaluatedAs: true
      internalMethodName: "getSelfValidator"
    - lineNumber: 147
      expression: "selfValidator != null"
      range: "(147,7)-(147,27)"
      evaluatedAs: true
      internalMethodName: "getValidators"
    - lineNumber: 133
      expression: "bound != null"
      range: "(133,11)-(133,23)"
      evaluatedAs: false
      internalMethodName: "getHandler"
    - lineNumber: 115
      expression: "annotation.ignoreInvalidFields()"
      range: "(115,7)-(115,38)"
      evaluatedAs: false
      internalMethodName: "getBindHandler"
    - lineNumber: 118
      expression: "!annotation.ignoreUnknownFields()"
      range: "(118,7)-(118,39)"
      evaluatedAs: false
      internalMethodName: "getBindHandler"
    - lineNumber: 122
      expression: "!validators.isEmpty()"
      range: "(122,7)-(122,27)"
      evaluatedAs: true
      internalMethodName: "getBindHandler"
    - lineNumber: 125
      expression: "for-each(getBindHandlerAdvisors())"
      range: "(125,60)-(125,83)"
      evaluatedAs: false
      internalMethodName: "getBindHandler"
    - lineNumber: 179
      expression: "this.binder == null"
      range: "(179,7)-(179,25)"
      evaluatedAs: true
      internalMethodName: "getBinder"
    - lineNumber: 199
      expression: "this.applicationContext instanceof ConfigurableApplicationContext\
        \ configurableContext"
      range: "(199,7)-(199,91)"
      evaluatedAs: false
      internalMethodName: "getPropertyEditorInitializer"
  - pathId: "path9"
    testPathName: "bindWhenThisBinderIsNullAndThisApplicationContextNotInstanceOfConfigurableApplicationContext11"
    constructorSignature: "<init>(org.springframework.context.ApplicationContext)\
      \ : void"
    modelFingerprint: "20DE4B38624533DA229FAA65AA81207E"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "3F3FF3C6CD1E36AD8380279EA12DE0B8"
      valueUuid: "target"
    - type: "INPUT"
      name: "propertiesBean"
      modelFingerprint: "EAF7400AF24F89B714CF5CA8E6E070EC"
      valueUuid: "propertiesBean"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "FED8746D69845FB1FA8479418506E12F"
      valueUuid: "propertySourcesDeducer"
      methodExercised:
        expression: "getPropertySources():propertySources"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "A59EABB40C2D79EB1D9D36B039273EAF"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "containsBean(name:uniqueUuid22):boolean1"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "6717D90D0F39A25CDF704557BF007FD1"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "getBean(name:uniqueUuid23,requiredType:uniqueUuid24):object"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
    - type: "STATIC"
      name: "ConfigurationPropertiesJsr303Validator.class"
      modelFingerprint: "81915BFD21BED47682C29C40E1B1B487"
      valueUuid: "ConfigurationPropertiesJsr303Validator.class"
      methodExercised:
        expression: "isJsr303Present(applicationContext:applicationContext):boolean2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "propertiesBean"
      modelFingerprint: "71C31F87A21520409F6531D997E694F0"
      valueUuid: "propertiesBean"
      methodExercised:
        expression: "asBindTarget():bindable"
    - type: "LOCAL_VARIABLE"
      name: "propertiesBean"
      modelFingerprint: "B2CEC8BB098D480AEFB43BA3AF5D36E0"
      valueUuid: "propertiesBean"
      methodExercised:
        expression: "getAnnotation():configurationProperties"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "1F4697F20661A66E4C8882A4C94BA69F"
      valueUuid: "bindable"
      methodExercised:
        expression: "getAnnotation(type:uniqueUuid25):annotation"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "E214E6B13C8FB325275E9FEA8A85693B"
      valueUuid: "bindable"
      methodExercised:
        expression: "getValue():supplier"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F2B3F794932F4DDBEC46619E5B86E2B9"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "839245556C80DD2528C73D5D2B32BC65"
      valueUuid: "resolvableType"
      methodExercised:
        expression: "resolve():class"
    - type: "STATIC"
      name: "BoundConfigurationProperties.class"
      modelFingerprint: "4C5A8C2D3CC9D6C419E4940D3E71E4BE"
      valueUuid: "BoundConfigurationProperties.class"
      methodExercised:
        expression: "get(context:applicationContext):boundConfigurationProperties"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "7FE4D5EFF832B93F15E35F05A552A36B"
      valueUuid: "configurationProperties"
      methodExercised:
        expression: "ignoreInvalidFields():boolean6"
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "6F2A875B8744D255444920F6D4B331CD"
      valueUuid: "configurationProperties"
      methodExercised:
        expression: "ignoreUnknownFields():boolean7"
    - type: "FIELD"
      name: "applicationContext"
      modelFingerprint: "5A7E4623F1451AE12DC1C87A5AB87213"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "getBeanProvider(requiredType:uniqueUuid26):objectProvider"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "D47D252FF5D9DFFA1D112975BA8250B0"
      valueUuid: "objectProvider"
      methodExercised:
        expression: "orderedStream():stream"
    - type: "STATIC"
      name: "ConfigurationPropertySources.class"
      modelFingerprint: "9AEF1F7044958F32ED340AFF33BF0C2E"
      valueUuid: "ConfigurationPropertySources.class"
      methodExercised:
        expression: "from(sources:propertySources):iterable"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "CE3FC3997DC43221266F4398919CB728"
      valueUuid: "conversionServiceDeducer"
      methodExercised:
        expression: "getConversionServices():list2"
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "3AC1043B880A4C0EF0EE594EDE4F18A1"
      valueUuid: "configurationProperties"
      methodExercised:
        expression: "prefix():string"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "0FFDE6C3D217F13193655E291B742EC3"
      valueUuid: "binder"
      methodExercised:
        expression: "bind(name:string,target:bindable,handler:validationBindHandler):bindResult"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "12F063B2069A1230176E4330FCCC2EA8"
      valueUuid: "bindResult"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.propertySources = new PropertySourcesDeducer(applicationContext).getPropertySources();"
      lineNumber: 85
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type PropertySourcesDeducer - Method: getPropertySources"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder"
        parameters:
        - name: "applicationContext"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.ApplicationContext"
            uuid: "applicationContext"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "propertiesBean"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
        parameters:
        - name: "applicationContext"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.ApplicationContext"
            uuid: "applicationContext"
      valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
      uuid: "propertySourcesDeducer"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.PropertySources"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
            parameters:
            - name: "applicationContext"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.context.ApplicationContext"
                uuid: "applicationContext"
          valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
          uuid: "propertySourcesDeducer"
          fixed: true
        methodParameters: []
        methodName: "getPropertySources"
      valueType: "org.springframework.core.env.PropertySources"
      uuid: "propertySources"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "configurationPropertiesValidator"
      valueType: "java.lang.String"
      uuid: "uniqueUuid22"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.validation.Validator"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "configurationPropertiesValidator"
      valueType: "java.lang.String"
      uuid: "uniqueUuid23"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.validation.Validator"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.validation.Validator"
      uuid: "uniqueUuid24"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
      uuid: "ConfigurationPropertiesJsr303Validator.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "propertiesBean"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "propertiesBean"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "configurationProperties"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "java.lang.annotation.Annotation"
      uuid: "annotation"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.validation.annotation.Validated"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.validation.annotation.Validated"
      uuid: "uniqueUuid25"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "NULL"
      valueType: "java.util.function.Supplier"
      uuid: "supplier"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.BoundConfigurationProperties"
      uuid: "BoundConfigurationProperties.class"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.BoundConfigurationProperties"
      uuid: "boundConfigurationProperties"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "configurationProperties"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean6"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "configurationProperties"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean7"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.ObjectProvider"
      uuid: "objectProvider"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.context.properties.ConfigurationPropertiesBindHandlerAdvisor"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBindHandlerAdvisor"
      uuid: "uniqueUuid26"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.ObjectProvider"
      uuid: "objectProvider"
    - sapientType: "MOCK"
      valueType: "java.util.stream.Stream"
      uuid: "stream"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "ConfigurationPropertySources.class"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "iterable"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.PropertySources"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
            parameters:
            - name: "applicationContext"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.context.ApplicationContext"
                uuid: "applicationContext"
          valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
          uuid: "propertySourcesDeducer"
          fixed: true
        methodParameters: []
        methodName: "getPropertySources"
      valueType: "org.springframework.core.env.PropertySources"
      uuid: "propertySources"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConversionServiceDeducer"
        parameters:
        - name: "applicationContext"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.ApplicationContext"
            uuid: "applicationContext"
      valueType: "org.springframework.boot.context.properties.ConversionServiceDeducer"
      uuid: "conversionServiceDeducer"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "configurationProperties"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_prefix1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "iterable"
        - name: "placeholdersResolver"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
              parameters:
              - name: "sources"
                value:
                  sapientType: "OBJECT"
                  content: !<method_return_from_value>
                    target: "org.springframework.core.env.PropertySources"
                    localVariableValue:
                      sapientType: "OBJECT"
                      content: !<new>
                        target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                        parameters:
                        - name: "applicationContext"
                          value:
                            sapientType: "MOCK"
                            valueType: "org.springframework.context.ApplicationContext"
                            uuid: "applicationContext"
                      valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                      uuid: "propertySourcesDeducer"
                      fixed: true
                    methodParameters: []
                    methodName: "getPropertySources"
                  valueType: "org.springframework.core.env.PropertySources"
                  uuid: "propertySources"
            valueType: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
            uuid: "propertySourcesPlaceholdersResolver"
            fixed: true
        - name: "conversionServices"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.core.convert.ConversionService"
            uuid: "list2"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "NULL"
            valueType: "java.util.function.Consumer"
            genericValueType: "org.springframework.beans.PropertyEditorRegistry"
            uuid: "consumer"
            fixed: true
        - name: "defaultBindHandler"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "uniqueUuid27"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "uniqueUuid28"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "binder"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.bind.BindResult"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.bind.Binder"
            parameters:
            - name: "sources"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  parameters: []
                  values: []
                valueType: "java.lang.Iterable"
                genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "iterable"
            - name: "placeholdersResolver"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
                  parameters:
                  - name: "sources"
                    value:
                      sapientType: "OBJECT"
                      content: !<method_return_from_value>
                        target: "org.springframework.core.env.PropertySources"
                        localVariableValue:
                          sapientType: "OBJECT"
                          content: !<new>
                            target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                            parameters:
                            - name: "applicationContext"
                              value:
                                sapientType: "MOCK"
                                valueType: "org.springframework.context.ApplicationContext"
                                uuid: "applicationContext"
                          valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                          uuid: "propertySourcesDeducer"
                          fixed: true
                        methodParameters: []
                        methodName: "getPropertySources"
                      valueType: "org.springframework.core.env.PropertySources"
                      uuid: "propertySources"
                valueType: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
                uuid: "propertySourcesPlaceholdersResolver"
                fixed: true
            - name: "conversionServices"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  parameters: []
                  values: []
                valueType: "java.util.List"
                genericValueType: "org.springframework.core.convert.ConversionService"
                uuid: "list2"
            - name: "propertyEditorInitializer"
              value:
                sapientType: "NULL"
                valueType: "java.util.function.Consumer"
                genericValueType: "org.springframework.beans.PropertyEditorRegistry"
                uuid: "consumer"
                fixed: true
            - name: "defaultBindHandler"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            - name: "constructorProvider"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
          valueType: "org.springframework.boot.context.properties.bind.Binder"
          uuid: "binder"
          fixed: true
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_prefix1"
            valueType: "java.lang.String"
            uuid: "string"
        - name: "target"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.Bindable"
            genericValueType: "?"
            uuid: "bindable"
        - name: "handler"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
              parameters:
              - name: "parent"
                value:
                  sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                  valueType: "org.springframework.boot.context.properties.bind.BindHandler"
                  uuid: "configurationPropertiesBinder.ConfigurationPropertiesBindHandler"
              - name: "validators"
                value:
                  sapientType: "ARRAY"
                  content: !<array>
                    values:
                      0:
                        sapientType: "MOCK"
                        valueType: "org.springframework.validation.Validator"
                        uuid: "object"
                        explicitCastNeeded: true
                      1:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
                          parameters:
                          - name: "applicationContext"
                            value:
                              sapientType: "MOCK"
                              valueType: "org.springframework.context.ApplicationContext"
                              uuid: "applicationContext"
                        valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
                        uuid: "configurationPropertiesJsr303Validator"
                        fixed: true
                  valueType: "org.springframework.validation.Validator[]"
                  uuid: "objectArray"
                  collectionUuid: "arrayList"
            valueType: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
            uuid: "validationBindHandler"
            fixed: true
        methodName: "bind"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "bindResult"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_prefix1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
      uuid: "validationBindHandler"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.context.properties.bind.BindResult"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.bind.Binder"
            parameters:
            - name: "sources"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  parameters: []
                  values: []
                valueType: "java.lang.Iterable"
                genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "iterable"
            - name: "placeholdersResolver"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
                  parameters:
                  - name: "sources"
                    value:
                      sapientType: "OBJECT"
                      content: !<method_return_from_value>
                        target: "org.springframework.core.env.PropertySources"
                        localVariableValue:
                          sapientType: "OBJECT"
                          content: !<new>
                            target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                            parameters:
                            - name: "applicationContext"
                              value:
                                sapientType: "MOCK"
                                valueType: "org.springframework.context.ApplicationContext"
                                uuid: "applicationContext"
                          valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                          uuid: "propertySourcesDeducer"
                          fixed: true
                        methodParameters: []
                        methodName: "getPropertySources"
                      valueType: "org.springframework.core.env.PropertySources"
                      uuid: "propertySources"
                valueType: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
                uuid: "propertySourcesPlaceholdersResolver"
                fixed: true
            - name: "conversionServices"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  parameters: []
                  values: []
                valueType: "java.util.List"
                genericValueType: "org.springframework.core.convert.ConversionService"
                uuid: "list2"
            - name: "propertyEditorInitializer"
              value:
                sapientType: "NULL"
                valueType: "java.util.function.Consumer"
                genericValueType: "org.springframework.beans.PropertyEditorRegistry"
                uuid: "consumer"
                fixed: true
            - name: "defaultBindHandler"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            - name: "constructorProvider"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
          valueType: "org.springframework.boot.context.properties.bind.Binder"
          uuid: "binder"
          fixed: true
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_prefix1"
            valueType: "java.lang.String"
            uuid: "string"
        - name: "target"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.Bindable"
            genericValueType: "?"
            uuid: "bindable"
        - name: "handler"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
              parameters:
              - name: "parent"
                value:
                  sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                  valueType: "org.springframework.boot.context.properties.bind.BindHandler"
                  uuid: "configurationPropertiesBinder.ConfigurationPropertiesBindHandler"
              - name: "validators"
                value:
                  sapientType: "ARRAY"
                  content: !<array>
                    values:
                      0:
                        sapientType: "MOCK"
                        valueType: "org.springframework.validation.Validator"
                        uuid: "object"
                        explicitCastNeeded: true
                      1:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
                          parameters:
                          - name: "applicationContext"
                            value:
                              sapientType: "MOCK"
                              valueType: "org.springframework.context.ApplicationContext"
                              uuid: "applicationContext"
                        valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
                        uuid: "configurationPropertiesJsr303Validator"
                        fixed: true
                  valueType: "org.springframework.validation.Validator[]"
                  uuid: "objectArray"
                  collectionUuid: "arrayList"
            valueType: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
            uuid: "validationBindHandler"
            fixed: true
        methodName: "bind"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "bindResult"
    branches:
    - lineNumber: 140
      expression: "this.configurationPropertiesValidator != null"
      range: "(140,7)-(140,51)"
      evaluatedAs: true
      internalMethodName: "getValidators"
    - lineNumber: 143
      expression: "this.jsr303Present"
      range: "(143,7)-(143,24)"
      evaluatedAs: true
      internalMethodName: "getValidators"
    - lineNumber: 143
      expression: "target.getAnnotation(Validated.class) != null"
      range: "(143,29)-(143,73)"
      evaluatedAs: true
      internalMethodName: "getValidators"
    - lineNumber: 166
      expression: "this.jsr303Validator == null"
      range: "(166,7)-(166,34)"
      evaluatedAs: true
      internalMethodName: "getJsr303Validator"
    - lineNumber: 154
      expression: "target.getValue() != null"
      range: "(154,7)-(154,31)"
      evaluatedAs: false
      internalMethodName: "getSelfValidator"
    - lineNumber: 159
      expression: "Validator.class.isAssignableFrom(type)"
      range: "(159,7)-(159,44)"
      evaluatedAs: false
      internalMethodName: "getSelfValidator"
    - lineNumber: 147
      expression: "selfValidator != null"
      range: "(147,7)-(147,27)"
      evaluatedAs: false
      internalMethodName: "getValidators"
    - lineNumber: 133
      expression: "bound != null"
      range: "(133,11)-(133,23)"
      evaluatedAs: false
      internalMethodName: "getHandler"
    - lineNumber: 115
      expression: "annotation.ignoreInvalidFields()"
      range: "(115,7)-(115,38)"
      evaluatedAs: false
      internalMethodName: "getBindHandler"
    - lineNumber: 118
      expression: "!annotation.ignoreUnknownFields()"
      range: "(118,7)-(118,39)"
      evaluatedAs: false
      internalMethodName: "getBindHandler"
    - lineNumber: 122
      expression: "!validators.isEmpty()"
      range: "(122,7)-(122,27)"
      evaluatedAs: true
      internalMethodName: "getBindHandler"
    - lineNumber: 125
      expression: "for-each(getBindHandlerAdvisors())"
      range: "(125,60)-(125,83)"
      evaluatedAs: false
      internalMethodName: "getBindHandler"
    - lineNumber: 179
      expression: "this.binder == null"
      range: "(179,7)-(179,25)"
      evaluatedAs: true
      internalMethodName: "getBinder"
    - lineNumber: 199
      expression: "this.applicationContext instanceof ConfigurableApplicationContext\
        \ configurableContext"
      range: "(199,7)-(199,91)"
      evaluatedAs: false
      internalMethodName: "getPropertyEditorInitializer"
- method:
    name: "bindOrCreate"
    sourceCodeSignature: "Object bindOrCreate(ConfigurationPropertiesBean propertiesBean)"
    returnType: "java.lang.Object"
    parameters:
    - name: "propertiesBean"
      type: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
    instructionFingerprint: "85380096F986B20D6152CCF64548EB17"
  paths:
  - pathId: "path1"
    testPathName: "bindOrCreateWhenThisBinderIsNullAndThisApplicationContextNotInstanceOfConfigurableApplicationContext3"
    constructorSignature: "<init>(org.springframework.context.ApplicationContext)\
      \ : void"
    modelFingerprint: "678273C6A6F2FC756F14C3D3AF8A5F4E"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "3F3FF3C6CD1E36AD8380279EA12DE0B8"
      valueUuid: "target"
    - type: "INPUT"
      name: "propertiesBean"
      modelFingerprint: "EAF7400AF24F89B714CF5CA8E6E070EC"
      valueUuid: "propertiesBean"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "FED8746D69845FB1FA8479418506E12F"
      valueUuid: "propertySourcesDeducer"
      methodExercised:
        expression: "getPropertySources():propertySources"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "A59EABB40C2D79EB1D9D36B039273EAF"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "containsBean(name:uniqueUuid29):boolean1"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "6717D90D0F39A25CDF704557BF007FD1"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "getBean(name:uniqueUuid30,requiredType:uniqueUuid31):object"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
    - type: "STATIC"
      name: "ConfigurationPropertiesJsr303Validator.class"
      modelFingerprint: "81915BFD21BED47682C29C40E1B1B487"
      valueUuid: "ConfigurationPropertiesJsr303Validator.class"
      methodExercised:
        expression: "isJsr303Present(applicationContext:applicationContext):boolean2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "propertiesBean"
      modelFingerprint: "71C31F87A21520409F6531D997E694F0"
      valueUuid: "propertiesBean"
      methodExercised:
        expression: "asBindTarget():bindable"
    - type: "LOCAL_VARIABLE"
      name: "propertiesBean"
      modelFingerprint: "B2CEC8BB098D480AEFB43BA3AF5D36E0"
      valueUuid: "propertiesBean"
      methodExercised:
        expression: "getAnnotation():configurationProperties"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "1F4697F20661A66E4C8882A4C94BA69F"
      valueUuid: "bindable"
      methodExercised:
        expression: "getAnnotation(type:uniqueUuid32):annotation"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "4C76308A3EDFB28BC37B8765B112A6BF"
      valueUuid: "bindable"
      methodExercised:
        expression: "getValue():supplier"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "4C76308A3EDFB28BC37B8765B112A6BF"
      valueUuid: "bindable"
      methodExercised:
        expression: "getValue():supplier2"
    - type: "STATIC"
      name: "BoundConfigurationProperties.class"
      modelFingerprint: "1EB2AA3D22186DAC5A5CB7F7EF2D7B6B"
      valueUuid: "BoundConfigurationProperties.class"
      methodExercised:
        expression: "get(context:applicationContext):boundConfigurationProperties"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "51C4CF5FC50D5563E142C8CDE1A5ABC2"
      valueUuid: "configurationProperties"
      methodExercised:
        expression: "ignoreInvalidFields():boolean7"
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "4E1BBBDF25C6DD1D68E47E2F00B636DC"
      valueUuid: "configurationProperties"
      methodExercised:
        expression: "ignoreUnknownFields():boolean8"
    - type: "FIELD"
      name: "applicationContext"
      modelFingerprint: "5A7E4623F1451AE12DC1C87A5AB87213"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "getBeanProvider(requiredType:uniqueUuid33):objectProvider"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "D47D252FF5D9DFFA1D112975BA8250B0"
      valueUuid: "objectProvider"
      methodExercised:
        expression: "orderedStream():stream"
    - type: "STATIC"
      name: "ConfigurationPropertySources.class"
      modelFingerprint: "9AEF1F7044958F32ED340AFF33BF0C2E"
      valueUuid: "ConfigurationPropertySources.class"
      methodExercised:
        expression: "from(sources:propertySources):iterable"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "CE3FC3997DC43221266F4398919CB728"
      valueUuid: "conversionServiceDeducer"
      methodExercised:
        expression: "getConversionServices():list2"
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "3AC1043B880A4C0EF0EE594EDE4F18A1"
      valueUuid: "configurationProperties"
      methodExercised:
        expression: "prefix():string"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A4BB38F2F8B6ED6B370BDA0EA06D522D"
      valueUuid: "binder"
      methodExercised:
        expression: "bindOrCreate(name:string,target:bindable,handler:validationBindHandler):object3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2CE5EB4AA675B537FD73BF530E3729D7"
      valueUuid: "object3"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.propertySources = new PropertySourcesDeducer(applicationContext).getPropertySources();"
      lineNumber: 85
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type PropertySourcesDeducer - Method: getPropertySources"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder"
        parameters:
        - name: "applicationContext"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.ApplicationContext"
            uuid: "applicationContext"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "propertiesBean"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
        parameters:
        - name: "applicationContext"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.ApplicationContext"
            uuid: "applicationContext"
      valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
      uuid: "propertySourcesDeducer"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.PropertySources"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
            parameters:
            - name: "applicationContext"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.context.ApplicationContext"
                uuid: "applicationContext"
          valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
          uuid: "propertySourcesDeducer"
          fixed: true
        methodParameters: []
        methodName: "getPropertySources"
      valueType: "org.springframework.core.env.PropertySources"
      uuid: "propertySources"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "configurationPropertiesValidator"
      valueType: "java.lang.String"
      uuid: "uniqueUuid29"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.validation.Validator"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "configurationPropertiesValidator"
      valueType: "java.lang.String"
      uuid: "uniqueUuid30"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.validation.Validator"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.validation.Validator"
      uuid: "uniqueUuid31"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
      uuid: "ConfigurationPropertiesJsr303Validator.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "propertiesBean"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "propertiesBean"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "configurationProperties"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "java.lang.annotation.Annotation"
      uuid: "annotation"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.validation.annotation.Validated"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.validation.annotation.Validated"
      uuid: "uniqueUuid32"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "supplier"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "supplier2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.BoundConfigurationProperties"
      uuid: "BoundConfigurationProperties.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.BoundConfigurationProperties"
      uuid: "boundConfigurationProperties"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "configurationProperties"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "configurationProperties"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean8"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.ObjectProvider"
      uuid: "objectProvider"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.context.properties.ConfigurationPropertiesBindHandlerAdvisor"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBindHandlerAdvisor"
      uuid: "uniqueUuid33"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.ObjectProvider"
      uuid: "objectProvider"
    - sapientType: "MOCK"
      valueType: "java.util.stream.Stream"
      uuid: "stream"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "ConfigurationPropertySources.class"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "iterable"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.PropertySources"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
            parameters:
            - name: "applicationContext"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.context.ApplicationContext"
                uuid: "applicationContext"
          valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
          uuid: "propertySourcesDeducer"
          fixed: true
        methodParameters: []
        methodName: "getPropertySources"
      valueType: "org.springframework.core.env.PropertySources"
      uuid: "propertySources"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConversionServiceDeducer"
        parameters:
        - name: "applicationContext"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.ApplicationContext"
            uuid: "applicationContext"
      valueType: "org.springframework.boot.context.properties.ConversionServiceDeducer"
      uuid: "conversionServiceDeducer"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "configurationProperties"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_prefix1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "iterable"
        - name: "placeholdersResolver"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
              parameters:
              - name: "sources"
                value:
                  sapientType: "OBJECT"
                  content: !<method_return_from_value>
                    target: "org.springframework.core.env.PropertySources"
                    localVariableValue:
                      sapientType: "OBJECT"
                      content: !<new>
                        target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                        parameters:
                        - name: "applicationContext"
                          value:
                            sapientType: "MOCK"
                            valueType: "org.springframework.context.ApplicationContext"
                            uuid: "applicationContext"
                      valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                      uuid: "propertySourcesDeducer"
                      fixed: true
                    methodParameters: []
                    methodName: "getPropertySources"
                  valueType: "org.springframework.core.env.PropertySources"
                  uuid: "propertySources"
            valueType: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
            uuid: "propertySourcesPlaceholdersResolver"
            fixed: true
        - name: "conversionServices"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.core.convert.ConversionService"
            uuid: "list2"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "NULL"
            valueType: "java.util.function.Consumer"
            genericValueType: "org.springframework.beans.PropertyEditorRegistry"
            uuid: "consumer"
            fixed: true
        - name: "defaultBindHandler"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "uniqueUuid34"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "uniqueUuid35"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "binder"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.bind.Binder"
            parameters:
            - name: "sources"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  parameters: []
                  values: []
                valueType: "java.lang.Iterable"
                genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "iterable"
            - name: "placeholdersResolver"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
                  parameters:
                  - name: "sources"
                    value:
                      sapientType: "OBJECT"
                      content: !<method_return_from_value>
                        target: "org.springframework.core.env.PropertySources"
                        localVariableValue:
                          sapientType: "OBJECT"
                          content: !<new>
                            target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                            parameters:
                            - name: "applicationContext"
                              value:
                                sapientType: "MOCK"
                                valueType: "org.springframework.context.ApplicationContext"
                                uuid: "applicationContext"
                          valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                          uuid: "propertySourcesDeducer"
                          fixed: true
                        methodParameters: []
                        methodName: "getPropertySources"
                      valueType: "org.springframework.core.env.PropertySources"
                      uuid: "propertySources"
                valueType: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
                uuid: "propertySourcesPlaceholdersResolver"
                fixed: true
            - name: "conversionServices"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  parameters: []
                  values: []
                valueType: "java.util.List"
                genericValueType: "org.springframework.core.convert.ConversionService"
                uuid: "list2"
            - name: "propertyEditorInitializer"
              value:
                sapientType: "NULL"
                valueType: "java.util.function.Consumer"
                genericValueType: "org.springframework.beans.PropertyEditorRegistry"
                uuid: "consumer"
                fixed: true
            - name: "defaultBindHandler"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            - name: "constructorProvider"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
          valueType: "org.springframework.boot.context.properties.bind.Binder"
          uuid: "binder"
          fixed: true
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_prefix1"
            valueType: "java.lang.String"
            uuid: "string"
        - name: "target"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.Bindable"
            genericValueType: "?"
            uuid: "bindable"
        - name: "handler"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
              parameters:
              - name: "parent"
                value:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.springframework.boot.context.properties.bind.handler.NoUnboundElementsBindHandler"
                    parameters:
                    - name: "parent"
                      value:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.springframework.boot.context.properties.bind.handler.IgnoreErrorsBindHandler"
                          parameters:
                          - name: "parent"
                            value:
                              sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                              valueType: "org.springframework.boot.context.properties.bind.BindHandler"
                              uuid: "configurationPropertiesBinder.ConfigurationPropertiesBindHandler"
                        valueType: "org.springframework.boot.context.properties.bind.handler.IgnoreErrorsBindHandler"
                        uuid: "ignoreErrorsBindHandler"
                        fixed: true
                    - name: "filter"
                      value:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.springframework.boot.context.properties.source.UnboundElementsSourceFilter"
                          parameters: []
                        valueType: "org.springframework.boot.context.properties.source.UnboundElementsSourceFilter"
                        uuid: "unboundElementsSourceFilter"
                        fixed: true
                  valueType: "org.springframework.boot.context.properties.bind.handler.NoUnboundElementsBindHandler"
                  uuid: "noUnboundElementsBindHandler"
                  fixed: true
              - name: "validators"
                value:
                  sapientType: "ARRAY"
                  content: !<array>
                    values:
                      0:
                        sapientType: "MOCK"
                        valueType: "org.springframework.validation.Validator"
                        uuid: "object"
                        explicitCastNeeded: true
                      1:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
                          parameters:
                          - name: "applicationContext"
                            value:
                              sapientType: "MOCK"
                              valueType: "org.springframework.context.ApplicationContext"
                              uuid: "applicationContext"
                        valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
                        uuid: "configurationPropertiesJsr303Validator"
                        fixed: true
                      2:
                        sapientType: "MOCK"
                        valueType: "org.springframework.validation.Validator"
                        uuid: "object2"
                  valueType: "org.springframework.validation.Validator[]"
                  uuid: "objectArray"
                  collectionUuid: "arrayList"
            valueType: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
            uuid: "validationBindHandler"
            fixed: true
        methodName: "bindOrCreate"
      valueType: "java.lang.Object"
      uuid: "object3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_prefix1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
      uuid: "validationBindHandler"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.bind.Binder"
            parameters:
            - name: "sources"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  parameters: []
                  values: []
                valueType: "java.lang.Iterable"
                genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "iterable"
            - name: "placeholdersResolver"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
                  parameters:
                  - name: "sources"
                    value:
                      sapientType: "OBJECT"
                      content: !<method_return_from_value>
                        target: "org.springframework.core.env.PropertySources"
                        localVariableValue:
                          sapientType: "OBJECT"
                          content: !<new>
                            target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                            parameters:
                            - name: "applicationContext"
                              value:
                                sapientType: "MOCK"
                                valueType: "org.springframework.context.ApplicationContext"
                                uuid: "applicationContext"
                          valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                          uuid: "propertySourcesDeducer"
                          fixed: true
                        methodParameters: []
                        methodName: "getPropertySources"
                      valueType: "org.springframework.core.env.PropertySources"
                      uuid: "propertySources"
                valueType: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
                uuid: "propertySourcesPlaceholdersResolver"
                fixed: true
            - name: "conversionServices"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  parameters: []
                  values: []
                valueType: "java.util.List"
                genericValueType: "org.springframework.core.convert.ConversionService"
                uuid: "list2"
            - name: "propertyEditorInitializer"
              value:
                sapientType: "NULL"
                valueType: "java.util.function.Consumer"
                genericValueType: "org.springframework.beans.PropertyEditorRegistry"
                uuid: "consumer"
                fixed: true
            - name: "defaultBindHandler"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            - name: "constructorProvider"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
          valueType: "org.springframework.boot.context.properties.bind.Binder"
          uuid: "binder"
          fixed: true
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_prefix1"
            valueType: "java.lang.String"
            uuid: "string"
        - name: "target"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.Bindable"
            genericValueType: "?"
            uuid: "bindable"
        - name: "handler"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
              parameters:
              - name: "parent"
                value:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.springframework.boot.context.properties.bind.handler.NoUnboundElementsBindHandler"
                    parameters:
                    - name: "parent"
                      value:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.springframework.boot.context.properties.bind.handler.IgnoreErrorsBindHandler"
                          parameters:
                          - name: "parent"
                            value:
                              sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                              valueType: "org.springframework.boot.context.properties.bind.BindHandler"
                              uuid: "configurationPropertiesBinder.ConfigurationPropertiesBindHandler"
                        valueType: "org.springframework.boot.context.properties.bind.handler.IgnoreErrorsBindHandler"
                        uuid: "ignoreErrorsBindHandler"
                        fixed: true
                    - name: "filter"
                      value:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.springframework.boot.context.properties.source.UnboundElementsSourceFilter"
                          parameters: []
                        valueType: "org.springframework.boot.context.properties.source.UnboundElementsSourceFilter"
                        uuid: "unboundElementsSourceFilter"
                        fixed: true
                  valueType: "org.springframework.boot.context.properties.bind.handler.NoUnboundElementsBindHandler"
                  uuid: "noUnboundElementsBindHandler"
                  fixed: true
              - name: "validators"
                value:
                  sapientType: "ARRAY"
                  content: !<array>
                    values:
                      0:
                        sapientType: "MOCK"
                        valueType: "org.springframework.validation.Validator"
                        uuid: "object"
                        explicitCastNeeded: true
                      1:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
                          parameters:
                          - name: "applicationContext"
                            value:
                              sapientType: "MOCK"
                              valueType: "org.springframework.context.ApplicationContext"
                              uuid: "applicationContext"
                        valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
                        uuid: "configurationPropertiesJsr303Validator"
                        fixed: true
                      2:
                        sapientType: "MOCK"
                        valueType: "org.springframework.validation.Validator"
                        uuid: "object2"
                  valueType: "org.springframework.validation.Validator[]"
                  uuid: "objectArray"
                  collectionUuid: "arrayList"
            valueType: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
            uuid: "validationBindHandler"
            fixed: true
        methodName: "bindOrCreate"
      valueType: "java.lang.Object"
      uuid: "object3"
    branches:
    - lineNumber: 140
      expression: "this.configurationPropertiesValidator != null"
      range: "(140,7)-(140,51)"
      evaluatedAs: true
      internalMethodName: "getValidators"
    - lineNumber: 143
      expression: "this.jsr303Present"
      range: "(143,7)-(143,24)"
      evaluatedAs: true
      internalMethodName: "getValidators"
    - lineNumber: 143
      expression: "target.getAnnotation(Validated.class) != null"
      range: "(143,29)-(143,73)"
      evaluatedAs: true
      internalMethodName: "getValidators"
    - lineNumber: 166
      expression: "this.jsr303Validator == null"
      range: "(166,7)-(166,34)"
      evaluatedAs: true
      internalMethodName: "getJsr303Validator"
    - lineNumber: 154
      expression: "target.getValue() != null"
      range: "(154,7)-(154,31)"
      evaluatedAs: true
      internalMethodName: "getSelfValidator"
    - lineNumber: 156
      expression: "value instanceof Validator validator"
      range: "(156,12)-(156,47)"
      evaluatedAs: true
      internalMethodName: "getSelfValidator"
    - lineNumber: 147
      expression: "selfValidator != null"
      range: "(147,7)-(147,27)"
      evaluatedAs: true
      internalMethodName: "getValidators"
    - lineNumber: 133
      expression: "bound != null"
      range: "(133,11)-(133,23)"
      evaluatedAs: true
      internalMethodName: "getHandler"
    - lineNumber: 115
      expression: "annotation.ignoreInvalidFields()"
      range: "(115,7)-(115,38)"
      evaluatedAs: true
      internalMethodName: "getBindHandler"
    - lineNumber: 118
      expression: "!annotation.ignoreUnknownFields()"
      range: "(118,7)-(118,39)"
      evaluatedAs: true
      internalMethodName: "getBindHandler"
    - lineNumber: 122
      expression: "!validators.isEmpty()"
      range: "(122,7)-(122,27)"
      evaluatedAs: true
      internalMethodName: "getBindHandler"
    - lineNumber: 125
      expression: "for-each(getBindHandlerAdvisors())"
      range: "(125,60)-(125,83)"
      evaluatedAs: false
      internalMethodName: "getBindHandler"
    - lineNumber: 179
      expression: "this.binder == null"
      range: "(179,7)-(179,25)"
      evaluatedAs: true
      internalMethodName: "getBinder"
    - lineNumber: 199
      expression: "this.applicationContext instanceof ConfigurableApplicationContext\
        \ configurableContext"
      range: "(199,7)-(199,91)"
      evaluatedAs: false
      internalMethodName: "getPropertyEditorInitializer"
  - pathId: "path7"
    testPathName: "bindOrCreateWhenThisBinderIsNullAndThisApplicationContextNotInstanceOfConfigurableApplicationContext9"
    constructorSignature: "<init>(org.springframework.context.ApplicationContext)\
      \ : void"
    modelFingerprint: "C3B83CADF5BBE2B921BCBAAA0F785BCF"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "3F3FF3C6CD1E36AD8380279EA12DE0B8"
      valueUuid: "target"
    - type: "INPUT"
      name: "propertiesBean"
      modelFingerprint: "EAF7400AF24F89B714CF5CA8E6E070EC"
      valueUuid: "propertiesBean"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "FED8746D69845FB1FA8479418506E12F"
      valueUuid: "propertySourcesDeducer"
      methodExercised:
        expression: "getPropertySources():propertySources"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "A59EABB40C2D79EB1D9D36B039273EAF"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "containsBean(name:uniqueUuid36):boolean1"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "6717D90D0F39A25CDF704557BF007FD1"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "getBean(name:uniqueUuid37,requiredType:uniqueUuid38):object"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
    - type: "STATIC"
      name: "ConfigurationPropertiesJsr303Validator.class"
      modelFingerprint: "81915BFD21BED47682C29C40E1B1B487"
      valueUuid: "ConfigurationPropertiesJsr303Validator.class"
      methodExercised:
        expression: "isJsr303Present(applicationContext:applicationContext):boolean2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "propertiesBean"
      modelFingerprint: "71C31F87A21520409F6531D997E694F0"
      valueUuid: "propertiesBean"
      methodExercised:
        expression: "asBindTarget():bindable"
    - type: "LOCAL_VARIABLE"
      name: "propertiesBean"
      modelFingerprint: "B2CEC8BB098D480AEFB43BA3AF5D36E0"
      valueUuid: "propertiesBean"
      methodExercised:
        expression: "getAnnotation():configurationProperties"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "1F4697F20661A66E4C8882A4C94BA69F"
      valueUuid: "bindable"
      methodExercised:
        expression: "getAnnotation(type:uniqueUuid39):annotation"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "4C76308A3EDFB28BC37B8765B112A6BF"
      valueUuid: "bindable"
      methodExercised:
        expression: "getValue():supplier"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "4C76308A3EDFB28BC37B8765B112A6BF"
      valueUuid: "bindable"
      methodExercised:
        expression: "getValue():supplier2"
    - type: "STATIC"
      name: "BoundConfigurationProperties.class"
      modelFingerprint: "4C5A8C2D3CC9D6C419E4940D3E71E4BE"
      valueUuid: "BoundConfigurationProperties.class"
      methodExercised:
        expression: "get(context:applicationContext):boundConfigurationProperties"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "7FE4D5EFF832B93F15E35F05A552A36B"
      valueUuid: "configurationProperties"
      methodExercised:
        expression: "ignoreInvalidFields():boolean6"
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "6F2A875B8744D255444920F6D4B331CD"
      valueUuid: "configurationProperties"
      methodExercised:
        expression: "ignoreUnknownFields():boolean7"
    - type: "FIELD"
      name: "applicationContext"
      modelFingerprint: "5A7E4623F1451AE12DC1C87A5AB87213"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "getBeanProvider(requiredType:uniqueUuid40):objectProvider"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "D47D252FF5D9DFFA1D112975BA8250B0"
      valueUuid: "objectProvider"
      methodExercised:
        expression: "orderedStream():stream"
    - type: "STATIC"
      name: "ConfigurationPropertySources.class"
      modelFingerprint: "9AEF1F7044958F32ED340AFF33BF0C2E"
      valueUuid: "ConfigurationPropertySources.class"
      methodExercised:
        expression: "from(sources:propertySources):iterable"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "CE3FC3997DC43221266F4398919CB728"
      valueUuid: "conversionServiceDeducer"
      methodExercised:
        expression: "getConversionServices():list2"
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "3AC1043B880A4C0EF0EE594EDE4F18A1"
      valueUuid: "configurationProperties"
      methodExercised:
        expression: "prefix():string"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "037A3028C9DAE10289E8ABA9E52D6C58"
      valueUuid: "binder"
      methodExercised:
        expression: "bindOrCreate(name:string,target:bindable,handler:validationBindHandler):object3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7DF11721893D4DC9BAF7AC7A3BFF0D36"
      valueUuid: "object3"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.propertySources = new PropertySourcesDeducer(applicationContext).getPropertySources();"
      lineNumber: 85
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type PropertySourcesDeducer - Method: getPropertySources"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder"
        parameters:
        - name: "applicationContext"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.ApplicationContext"
            uuid: "applicationContext"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "propertiesBean"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
        parameters:
        - name: "applicationContext"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.ApplicationContext"
            uuid: "applicationContext"
      valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
      uuid: "propertySourcesDeducer"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.PropertySources"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
            parameters:
            - name: "applicationContext"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.context.ApplicationContext"
                uuid: "applicationContext"
          valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
          uuid: "propertySourcesDeducer"
          fixed: true
        methodParameters: []
        methodName: "getPropertySources"
      valueType: "org.springframework.core.env.PropertySources"
      uuid: "propertySources"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "configurationPropertiesValidator"
      valueType: "java.lang.String"
      uuid: "uniqueUuid36"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.validation.Validator"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "configurationPropertiesValidator"
      valueType: "java.lang.String"
      uuid: "uniqueUuid37"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.validation.Validator"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.validation.Validator"
      uuid: "uniqueUuid38"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
      uuid: "ConfigurationPropertiesJsr303Validator.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "propertiesBean"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "propertiesBean"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "configurationProperties"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "java.lang.annotation.Annotation"
      uuid: "annotation"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.validation.annotation.Validated"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.validation.annotation.Validated"
      uuid: "uniqueUuid39"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "supplier"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "supplier2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.BoundConfigurationProperties"
      uuid: "BoundConfigurationProperties.class"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.BoundConfigurationProperties"
      uuid: "boundConfigurationProperties"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "configurationProperties"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean6"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "configurationProperties"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean7"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.ObjectProvider"
      uuid: "objectProvider"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.context.properties.ConfigurationPropertiesBindHandlerAdvisor"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBindHandlerAdvisor"
      uuid: "uniqueUuid40"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.ObjectProvider"
      uuid: "objectProvider"
    - sapientType: "MOCK"
      valueType: "java.util.stream.Stream"
      uuid: "stream"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "ConfigurationPropertySources.class"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "iterable"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.PropertySources"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
            parameters:
            - name: "applicationContext"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.context.ApplicationContext"
                uuid: "applicationContext"
          valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
          uuid: "propertySourcesDeducer"
          fixed: true
        methodParameters: []
        methodName: "getPropertySources"
      valueType: "org.springframework.core.env.PropertySources"
      uuid: "propertySources"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConversionServiceDeducer"
        parameters:
        - name: "applicationContext"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.ApplicationContext"
            uuid: "applicationContext"
      valueType: "org.springframework.boot.context.properties.ConversionServiceDeducer"
      uuid: "conversionServiceDeducer"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "configurationProperties"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_prefix1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "iterable"
        - name: "placeholdersResolver"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
              parameters:
              - name: "sources"
                value:
                  sapientType: "OBJECT"
                  content: !<method_return_from_value>
                    target: "org.springframework.core.env.PropertySources"
                    localVariableValue:
                      sapientType: "OBJECT"
                      content: !<new>
                        target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                        parameters:
                        - name: "applicationContext"
                          value:
                            sapientType: "MOCK"
                            valueType: "org.springframework.context.ApplicationContext"
                            uuid: "applicationContext"
                      valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                      uuid: "propertySourcesDeducer"
                      fixed: true
                    methodParameters: []
                    methodName: "getPropertySources"
                  valueType: "org.springframework.core.env.PropertySources"
                  uuid: "propertySources"
            valueType: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
            uuid: "propertySourcesPlaceholdersResolver"
            fixed: true
        - name: "conversionServices"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.core.convert.ConversionService"
            uuid: "list2"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "NULL"
            valueType: "java.util.function.Consumer"
            genericValueType: "org.springframework.beans.PropertyEditorRegistry"
            uuid: "consumer"
            fixed: true
        - name: "defaultBindHandler"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "uniqueUuid41"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "uniqueUuid42"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "binder"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.bind.Binder"
            parameters:
            - name: "sources"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  parameters: []
                  values: []
                valueType: "java.lang.Iterable"
                genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "iterable"
            - name: "placeholdersResolver"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
                  parameters:
                  - name: "sources"
                    value:
                      sapientType: "OBJECT"
                      content: !<method_return_from_value>
                        target: "org.springframework.core.env.PropertySources"
                        localVariableValue:
                          sapientType: "OBJECT"
                          content: !<new>
                            target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                            parameters:
                            - name: "applicationContext"
                              value:
                                sapientType: "MOCK"
                                valueType: "org.springframework.context.ApplicationContext"
                                uuid: "applicationContext"
                          valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                          uuid: "propertySourcesDeducer"
                          fixed: true
                        methodParameters: []
                        methodName: "getPropertySources"
                      valueType: "org.springframework.core.env.PropertySources"
                      uuid: "propertySources"
                valueType: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
                uuid: "propertySourcesPlaceholdersResolver"
                fixed: true
            - name: "conversionServices"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  parameters: []
                  values: []
                valueType: "java.util.List"
                genericValueType: "org.springframework.core.convert.ConversionService"
                uuid: "list2"
            - name: "propertyEditorInitializer"
              value:
                sapientType: "NULL"
                valueType: "java.util.function.Consumer"
                genericValueType: "org.springframework.beans.PropertyEditorRegistry"
                uuid: "consumer"
                fixed: true
            - name: "defaultBindHandler"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            - name: "constructorProvider"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
          valueType: "org.springframework.boot.context.properties.bind.Binder"
          uuid: "binder"
          fixed: true
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_prefix1"
            valueType: "java.lang.String"
            uuid: "string"
        - name: "target"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.Bindable"
            genericValueType: "?"
            uuid: "bindable"
        - name: "handler"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
              parameters:
              - name: "parent"
                value:
                  sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                  valueType: "org.springframework.boot.context.properties.bind.BindHandler"
                  uuid: "configurationPropertiesBinder.ConfigurationPropertiesBindHandler"
              - name: "validators"
                value:
                  sapientType: "ARRAY"
                  content: !<array>
                    values:
                      0:
                        sapientType: "MOCK"
                        valueType: "org.springframework.validation.Validator"
                        uuid: "object"
                        explicitCastNeeded: true
                      1:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
                          parameters:
                          - name: "applicationContext"
                            value:
                              sapientType: "MOCK"
                              valueType: "org.springframework.context.ApplicationContext"
                              uuid: "applicationContext"
                        valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
                        uuid: "configurationPropertiesJsr303Validator"
                        fixed: true
                  valueType: "org.springframework.validation.Validator[]"
                  uuid: "objectArray"
                  collectionUuid: "arrayList"
            valueType: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
            uuid: "validationBindHandler"
            fixed: true
        methodName: "bindOrCreate"
      valueType: "java.lang.Object"
      uuid: "object3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_prefix1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
      uuid: "validationBindHandler"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.bind.Binder"
            parameters:
            - name: "sources"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  parameters: []
                  values: []
                valueType: "java.lang.Iterable"
                genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "iterable"
            - name: "placeholdersResolver"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
                  parameters:
                  - name: "sources"
                    value:
                      sapientType: "OBJECT"
                      content: !<method_return_from_value>
                        target: "org.springframework.core.env.PropertySources"
                        localVariableValue:
                          sapientType: "OBJECT"
                          content: !<new>
                            target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                            parameters:
                            - name: "applicationContext"
                              value:
                                sapientType: "MOCK"
                                valueType: "org.springframework.context.ApplicationContext"
                                uuid: "applicationContext"
                          valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                          uuid: "propertySourcesDeducer"
                          fixed: true
                        methodParameters: []
                        methodName: "getPropertySources"
                      valueType: "org.springframework.core.env.PropertySources"
                      uuid: "propertySources"
                valueType: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
                uuid: "propertySourcesPlaceholdersResolver"
                fixed: true
            - name: "conversionServices"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  parameters: []
                  values: []
                valueType: "java.util.List"
                genericValueType: "org.springframework.core.convert.ConversionService"
                uuid: "list2"
            - name: "propertyEditorInitializer"
              value:
                sapientType: "NULL"
                valueType: "java.util.function.Consumer"
                genericValueType: "org.springframework.beans.PropertyEditorRegistry"
                uuid: "consumer"
                fixed: true
            - name: "defaultBindHandler"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            - name: "constructorProvider"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
          valueType: "org.springframework.boot.context.properties.bind.Binder"
          uuid: "binder"
          fixed: true
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_prefix1"
            valueType: "java.lang.String"
            uuid: "string"
        - name: "target"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.Bindable"
            genericValueType: "?"
            uuid: "bindable"
        - name: "handler"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
              parameters:
              - name: "parent"
                value:
                  sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                  valueType: "org.springframework.boot.context.properties.bind.BindHandler"
                  uuid: "configurationPropertiesBinder.ConfigurationPropertiesBindHandler"
              - name: "validators"
                value:
                  sapientType: "ARRAY"
                  content: !<array>
                    values:
                      0:
                        sapientType: "MOCK"
                        valueType: "org.springframework.validation.Validator"
                        uuid: "object"
                        explicitCastNeeded: true
                      1:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
                          parameters:
                          - name: "applicationContext"
                            value:
                              sapientType: "MOCK"
                              valueType: "org.springframework.context.ApplicationContext"
                              uuid: "applicationContext"
                        valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
                        uuid: "configurationPropertiesJsr303Validator"
                        fixed: true
                  valueType: "org.springframework.validation.Validator[]"
                  uuid: "objectArray"
                  collectionUuid: "arrayList"
            valueType: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
            uuid: "validationBindHandler"
            fixed: true
        methodName: "bindOrCreate"
      valueType: "java.lang.Object"
      uuid: "object3"
    branches:
    - lineNumber: 140
      expression: "this.configurationPropertiesValidator != null"
      range: "(140,7)-(140,51)"
      evaluatedAs: true
      internalMethodName: "getValidators"
    - lineNumber: 143
      expression: "this.jsr303Present"
      range: "(143,7)-(143,24)"
      evaluatedAs: true
      internalMethodName: "getValidators"
    - lineNumber: 143
      expression: "target.getAnnotation(Validated.class) != null"
      range: "(143,29)-(143,73)"
      evaluatedAs: true
      internalMethodName: "getValidators"
    - lineNumber: 166
      expression: "this.jsr303Validator == null"
      range: "(166,7)-(166,34)"
      evaluatedAs: true
      internalMethodName: "getJsr303Validator"
    - lineNumber: 154
      expression: "target.getValue() != null"
      range: "(154,7)-(154,31)"
      evaluatedAs: true
      internalMethodName: "getSelfValidator"
    - lineNumber: 156
      expression: "value instanceof Validator validator"
      range: "(156,12)-(156,47)"
      evaluatedAs: false
      internalMethodName: "getSelfValidator"
    - lineNumber: 147
      expression: "selfValidator != null"
      range: "(147,7)-(147,27)"
      evaluatedAs: false
      internalMethodName: "getValidators"
    - lineNumber: 133
      expression: "bound != null"
      range: "(133,11)-(133,23)"
      evaluatedAs: false
      internalMethodName: "getHandler"
    - lineNumber: 115
      expression: "annotation.ignoreInvalidFields()"
      range: "(115,7)-(115,38)"
      evaluatedAs: false
      internalMethodName: "getBindHandler"
    - lineNumber: 118
      expression: "!annotation.ignoreUnknownFields()"
      range: "(118,7)-(118,39)"
      evaluatedAs: false
      internalMethodName: "getBindHandler"
    - lineNumber: 122
      expression: "!validators.isEmpty()"
      range: "(122,7)-(122,27)"
      evaluatedAs: true
      internalMethodName: "getBindHandler"
    - lineNumber: 125
      expression: "for-each(getBindHandlerAdvisors())"
      range: "(125,60)-(125,83)"
      evaluatedAs: false
      internalMethodName: "getBindHandler"
    - lineNumber: 179
      expression: "this.binder == null"
      range: "(179,7)-(179,25)"
      evaluatedAs: true
      internalMethodName: "getBinder"
    - lineNumber: 199
      expression: "this.applicationContext instanceof ConfigurableApplicationContext\
        \ configurableContext"
      range: "(199,7)-(199,91)"
      evaluatedAs: false
      internalMethodName: "getPropertyEditorInitializer"
  - pathId: "path8"
    testPathName: "bindOrCreateWhenThisBinderIsNullAndThisApplicationContextNotInstanceOfConfigurableApplicationContext10"
    constructorSignature: "<init>(org.springframework.context.ApplicationContext)\
      \ : void"
    modelFingerprint: "2ED5E06BF2147B378AF4644F5DF562CC"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "3F3FF3C6CD1E36AD8380279EA12DE0B8"
      valueUuid: "target"
    - type: "INPUT"
      name: "propertiesBean"
      modelFingerprint: "EAF7400AF24F89B714CF5CA8E6E070EC"
      valueUuid: "propertiesBean"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "FED8746D69845FB1FA8479418506E12F"
      valueUuid: "propertySourcesDeducer"
      methodExercised:
        expression: "getPropertySources():propertySources"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "A59EABB40C2D79EB1D9D36B039273EAF"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "containsBean(name:uniqueUuid43):boolean1"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "6717D90D0F39A25CDF704557BF007FD1"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "getBean(name:uniqueUuid44,requiredType:uniqueUuid45):object"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
    - type: "STATIC"
      name: "ConfigurationPropertiesJsr303Validator.class"
      modelFingerprint: "81915BFD21BED47682C29C40E1B1B487"
      valueUuid: "ConfigurationPropertiesJsr303Validator.class"
      methodExercised:
        expression: "isJsr303Present(applicationContext:applicationContext):boolean2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "propertiesBean"
      modelFingerprint: "71C31F87A21520409F6531D997E694F0"
      valueUuid: "propertiesBean"
      methodExercised:
        expression: "asBindTarget():bindable"
    - type: "LOCAL_VARIABLE"
      name: "propertiesBean"
      modelFingerprint: "B2CEC8BB098D480AEFB43BA3AF5D36E0"
      valueUuid: "propertiesBean"
      methodExercised:
        expression: "getAnnotation():configurationProperties"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "1F4697F20661A66E4C8882A4C94BA69F"
      valueUuid: "bindable"
      methodExercised:
        expression: "getAnnotation(type:uniqueUuid46):annotation"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "E214E6B13C8FB325275E9FEA8A85693B"
      valueUuid: "bindable"
      methodExercised:
        expression: "getValue():supplier"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F2B3F794932F4DDBEC46619E5B86E2B9"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "839245556C80DD2528C73D5D2B32BC65"
      valueUuid: "resolvableType"
      methodExercised:
        expression: "resolve():class"
    - type: "STATIC"
      name: "BoundConfigurationProperties.class"
      modelFingerprint: "4C5A8C2D3CC9D6C419E4940D3E71E4BE"
      valueUuid: "BoundConfigurationProperties.class"
      methodExercised:
        expression: "get(context:applicationContext):boundConfigurationProperties"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "7FE4D5EFF832B93F15E35F05A552A36B"
      valueUuid: "configurationProperties"
      methodExercised:
        expression: "ignoreInvalidFields():boolean7"
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "6F2A875B8744D255444920F6D4B331CD"
      valueUuid: "configurationProperties"
      methodExercised:
        expression: "ignoreUnknownFields():boolean8"
    - type: "FIELD"
      name: "applicationContext"
      modelFingerprint: "5A7E4623F1451AE12DC1C87A5AB87213"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "getBeanProvider(requiredType:uniqueUuid47):objectProvider"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "D47D252FF5D9DFFA1D112975BA8250B0"
      valueUuid: "objectProvider"
      methodExercised:
        expression: "orderedStream():stream"
    - type: "STATIC"
      name: "ConfigurationPropertySources.class"
      modelFingerprint: "9AEF1F7044958F32ED340AFF33BF0C2E"
      valueUuid: "ConfigurationPropertySources.class"
      methodExercised:
        expression: "from(sources:propertySources):iterable"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "CE3FC3997DC43221266F4398919CB728"
      valueUuid: "conversionServiceDeducer"
      methodExercised:
        expression: "getConversionServices():list2"
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "3AC1043B880A4C0EF0EE594EDE4F18A1"
      valueUuid: "configurationProperties"
      methodExercised:
        expression: "prefix():string"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "C7B970CA9BF17660CBFE3FF8C1AA551F"
      valueUuid: "binder"
      methodExercised:
        expression: "bindOrCreate(name:string,target:bindable,handler:validationBindHandler):object2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "73DF326A183F41E35B5C25A03C816817"
      valueUuid: "object2"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.propertySources = new PropertySourcesDeducer(applicationContext).getPropertySources();"
      lineNumber: 85
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type PropertySourcesDeducer - Method: getPropertySources"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder"
        parameters:
        - name: "applicationContext"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.ApplicationContext"
            uuid: "applicationContext"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "propertiesBean"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
        parameters:
        - name: "applicationContext"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.ApplicationContext"
            uuid: "applicationContext"
      valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
      uuid: "propertySourcesDeducer"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.PropertySources"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
            parameters:
            - name: "applicationContext"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.context.ApplicationContext"
                uuid: "applicationContext"
          valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
          uuid: "propertySourcesDeducer"
          fixed: true
        methodParameters: []
        methodName: "getPropertySources"
      valueType: "org.springframework.core.env.PropertySources"
      uuid: "propertySources"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "configurationPropertiesValidator"
      valueType: "java.lang.String"
      uuid: "uniqueUuid43"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.validation.Validator"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "configurationPropertiesValidator"
      valueType: "java.lang.String"
      uuid: "uniqueUuid44"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.validation.Validator"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.validation.Validator"
      uuid: "uniqueUuid45"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
      uuid: "ConfigurationPropertiesJsr303Validator.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "propertiesBean"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "propertiesBean"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "configurationProperties"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "java.lang.annotation.Annotation"
      uuid: "annotation"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.validation.annotation.Validated"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.validation.annotation.Validated"
      uuid: "uniqueUuid46"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "NULL"
      valueType: "java.util.function.Supplier"
      uuid: "supplier"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.BoundConfigurationProperties"
      uuid: "BoundConfigurationProperties.class"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.BoundConfigurationProperties"
      uuid: "boundConfigurationProperties"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "configurationProperties"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "configurationProperties"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean8"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.ObjectProvider"
      uuid: "objectProvider"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.context.properties.ConfigurationPropertiesBindHandlerAdvisor"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBindHandlerAdvisor"
      uuid: "uniqueUuid47"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.ObjectProvider"
      uuid: "objectProvider"
    - sapientType: "MOCK"
      valueType: "java.util.stream.Stream"
      uuid: "stream"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "ConfigurationPropertySources.class"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "iterable"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.PropertySources"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
            parameters:
            - name: "applicationContext"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.context.ApplicationContext"
                uuid: "applicationContext"
          valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
          uuid: "propertySourcesDeducer"
          fixed: true
        methodParameters: []
        methodName: "getPropertySources"
      valueType: "org.springframework.core.env.PropertySources"
      uuid: "propertySources"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConversionServiceDeducer"
        parameters:
        - name: "applicationContext"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.ApplicationContext"
            uuid: "applicationContext"
      valueType: "org.springframework.boot.context.properties.ConversionServiceDeducer"
      uuid: "conversionServiceDeducer"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "configurationProperties"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_prefix1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "iterable"
        - name: "placeholdersResolver"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
              parameters:
              - name: "sources"
                value:
                  sapientType: "OBJECT"
                  content: !<method_return_from_value>
                    target: "org.springframework.core.env.PropertySources"
                    localVariableValue:
                      sapientType: "OBJECT"
                      content: !<new>
                        target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                        parameters:
                        - name: "applicationContext"
                          value:
                            sapientType: "MOCK"
                            valueType: "org.springframework.context.ApplicationContext"
                            uuid: "applicationContext"
                      valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                      uuid: "propertySourcesDeducer"
                      fixed: true
                    methodParameters: []
                    methodName: "getPropertySources"
                  valueType: "org.springframework.core.env.PropertySources"
                  uuid: "propertySources"
            valueType: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
            uuid: "propertySourcesPlaceholdersResolver"
            fixed: true
        - name: "conversionServices"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.core.convert.ConversionService"
            uuid: "list2"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "NULL"
            valueType: "java.util.function.Consumer"
            genericValueType: "org.springframework.beans.PropertyEditorRegistry"
            uuid: "consumer"
            fixed: true
        - name: "defaultBindHandler"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "uniqueUuid48"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "uniqueUuid49"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "binder"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.bind.Binder"
            parameters:
            - name: "sources"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  parameters: []
                  values: []
                valueType: "java.lang.Iterable"
                genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "iterable"
            - name: "placeholdersResolver"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
                  parameters:
                  - name: "sources"
                    value:
                      sapientType: "OBJECT"
                      content: !<method_return_from_value>
                        target: "org.springframework.core.env.PropertySources"
                        localVariableValue:
                          sapientType: "OBJECT"
                          content: !<new>
                            target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                            parameters:
                            - name: "applicationContext"
                              value:
                                sapientType: "MOCK"
                                valueType: "org.springframework.context.ApplicationContext"
                                uuid: "applicationContext"
                          valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                          uuid: "propertySourcesDeducer"
                          fixed: true
                        methodParameters: []
                        methodName: "getPropertySources"
                      valueType: "org.springframework.core.env.PropertySources"
                      uuid: "propertySources"
                valueType: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
                uuid: "propertySourcesPlaceholdersResolver"
                fixed: true
            - name: "conversionServices"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  parameters: []
                  values: []
                valueType: "java.util.List"
                genericValueType: "org.springframework.core.convert.ConversionService"
                uuid: "list2"
            - name: "propertyEditorInitializer"
              value:
                sapientType: "NULL"
                valueType: "java.util.function.Consumer"
                genericValueType: "org.springframework.beans.PropertyEditorRegistry"
                uuid: "consumer"
                fixed: true
            - name: "defaultBindHandler"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            - name: "constructorProvider"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
          valueType: "org.springframework.boot.context.properties.bind.Binder"
          uuid: "binder"
          fixed: true
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_prefix1"
            valueType: "java.lang.String"
            uuid: "string"
        - name: "target"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.Bindable"
            genericValueType: "?"
            uuid: "bindable"
        - name: "handler"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
              parameters:
              - name: "parent"
                value:
                  sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                  valueType: "org.springframework.boot.context.properties.bind.BindHandler"
                  uuid: "configurationPropertiesBinder.ConfigurationPropertiesBindHandler"
              - name: "validators"
                value:
                  sapientType: "ARRAY"
                  content: !<array>
                    values:
                      0:
                        sapientType: "MOCK"
                        valueType: "org.springframework.validation.Validator"
                        uuid: "object"
                        explicitCastNeeded: true
                      1:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
                          parameters:
                          - name: "applicationContext"
                            value:
                              sapientType: "MOCK"
                              valueType: "org.springframework.context.ApplicationContext"
                              uuid: "applicationContext"
                        valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
                        uuid: "configurationPropertiesJsr303Validator"
                        fixed: true
                      2:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$SelfValidatingConstructorBoundBindableValidator"
                          parameters:
                          - name: "type"
                            value:
                              sapientType: "CLASS"
                              content: !<regular>
                                value: "java.lang.Object"
                              valueType: "java.lang.Class"
                              genericValueType: "?"
                              uuid: "class"
                        valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$SelfValidatingConstructorBoundBindableValidator"
                        uuid: "configurationPropertiesBinder.SelfValidatingConstructorBoundBindableValidator"
                        fixed: true
                  valueType: "org.springframework.validation.Validator[]"
                  uuid: "objectArray"
                  collectionUuid: "arrayList"
            valueType: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
            uuid: "validationBindHandler"
            fixed: true
        methodName: "bindOrCreate"
      valueType: "java.lang.Object"
      uuid: "object2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_prefix1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
      uuid: "validationBindHandler"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.bind.Binder"
            parameters:
            - name: "sources"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  parameters: []
                  values: []
                valueType: "java.lang.Iterable"
                genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "iterable"
            - name: "placeholdersResolver"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
                  parameters:
                  - name: "sources"
                    value:
                      sapientType: "OBJECT"
                      content: !<method_return_from_value>
                        target: "org.springframework.core.env.PropertySources"
                        localVariableValue:
                          sapientType: "OBJECT"
                          content: !<new>
                            target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                            parameters:
                            - name: "applicationContext"
                              value:
                                sapientType: "MOCK"
                                valueType: "org.springframework.context.ApplicationContext"
                                uuid: "applicationContext"
                          valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                          uuid: "propertySourcesDeducer"
                          fixed: true
                        methodParameters: []
                        methodName: "getPropertySources"
                      valueType: "org.springframework.core.env.PropertySources"
                      uuid: "propertySources"
                valueType: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
                uuid: "propertySourcesPlaceholdersResolver"
                fixed: true
            - name: "conversionServices"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  parameters: []
                  values: []
                valueType: "java.util.List"
                genericValueType: "org.springframework.core.convert.ConversionService"
                uuid: "list2"
            - name: "propertyEditorInitializer"
              value:
                sapientType: "NULL"
                valueType: "java.util.function.Consumer"
                genericValueType: "org.springframework.beans.PropertyEditorRegistry"
                uuid: "consumer"
                fixed: true
            - name: "defaultBindHandler"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            - name: "constructorProvider"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
          valueType: "org.springframework.boot.context.properties.bind.Binder"
          uuid: "binder"
          fixed: true
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_prefix1"
            valueType: "java.lang.String"
            uuid: "string"
        - name: "target"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.Bindable"
            genericValueType: "?"
            uuid: "bindable"
        - name: "handler"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
              parameters:
              - name: "parent"
                value:
                  sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                  valueType: "org.springframework.boot.context.properties.bind.BindHandler"
                  uuid: "configurationPropertiesBinder.ConfigurationPropertiesBindHandler"
              - name: "validators"
                value:
                  sapientType: "ARRAY"
                  content: !<array>
                    values:
                      0:
                        sapientType: "MOCK"
                        valueType: "org.springframework.validation.Validator"
                        uuid: "object"
                        explicitCastNeeded: true
                      1:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
                          parameters:
                          - name: "applicationContext"
                            value:
                              sapientType: "MOCK"
                              valueType: "org.springframework.context.ApplicationContext"
                              uuid: "applicationContext"
                        valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
                        uuid: "configurationPropertiesJsr303Validator"
                        fixed: true
                      2:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$SelfValidatingConstructorBoundBindableValidator"
                          parameters:
                          - name: "type"
                            value:
                              sapientType: "CLASS"
                              content: !<regular>
                                value: "java.lang.Object"
                              valueType: "java.lang.Class"
                              genericValueType: "?"
                              uuid: "class"
                        valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$SelfValidatingConstructorBoundBindableValidator"
                        uuid: "configurationPropertiesBinder.SelfValidatingConstructorBoundBindableValidator"
                        fixed: true
                  valueType: "org.springframework.validation.Validator[]"
                  uuid: "objectArray"
                  collectionUuid: "arrayList"
            valueType: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
            uuid: "validationBindHandler"
            fixed: true
        methodName: "bindOrCreate"
      valueType: "java.lang.Object"
      uuid: "object2"
    branches:
    - lineNumber: 140
      expression: "this.configurationPropertiesValidator != null"
      range: "(140,7)-(140,51)"
      evaluatedAs: true
      internalMethodName: "getValidators"
    - lineNumber: 143
      expression: "this.jsr303Present"
      range: "(143,7)-(143,24)"
      evaluatedAs: true
      internalMethodName: "getValidators"
    - lineNumber: 143
      expression: "target.getAnnotation(Validated.class) != null"
      range: "(143,29)-(143,73)"
      evaluatedAs: true
      internalMethodName: "getValidators"
    - lineNumber: 166
      expression: "this.jsr303Validator == null"
      range: "(166,7)-(166,34)"
      evaluatedAs: true
      internalMethodName: "getJsr303Validator"
    - lineNumber: 154
      expression: "target.getValue() != null"
      range: "(154,7)-(154,31)"
      evaluatedAs: false
      internalMethodName: "getSelfValidator"
    - lineNumber: 159
      expression: "Validator.class.isAssignableFrom(type)"
      range: "(159,7)-(159,44)"
      evaluatedAs: true
      internalMethodName: "getSelfValidator"
    - lineNumber: 147
      expression: "selfValidator != null"
      range: "(147,7)-(147,27)"
      evaluatedAs: true
      internalMethodName: "getValidators"
    - lineNumber: 133
      expression: "bound != null"
      range: "(133,11)-(133,23)"
      evaluatedAs: false
      internalMethodName: "getHandler"
    - lineNumber: 115
      expression: "annotation.ignoreInvalidFields()"
      range: "(115,7)-(115,38)"
      evaluatedAs: false
      internalMethodName: "getBindHandler"
    - lineNumber: 118
      expression: "!annotation.ignoreUnknownFields()"
      range: "(118,7)-(118,39)"
      evaluatedAs: false
      internalMethodName: "getBindHandler"
    - lineNumber: 122
      expression: "!validators.isEmpty()"
      range: "(122,7)-(122,27)"
      evaluatedAs: true
      internalMethodName: "getBindHandler"
    - lineNumber: 125
      expression: "for-each(getBindHandlerAdvisors())"
      range: "(125,60)-(125,83)"
      evaluatedAs: false
      internalMethodName: "getBindHandler"
    - lineNumber: 179
      expression: "this.binder == null"
      range: "(179,7)-(179,25)"
      evaluatedAs: true
      internalMethodName: "getBinder"
    - lineNumber: 199
      expression: "this.applicationContext instanceof ConfigurableApplicationContext\
        \ configurableContext"
      range: "(199,7)-(199,91)"
      evaluatedAs: false
      internalMethodName: "getPropertyEditorInitializer"
  - pathId: "path9"
    testPathName: "bindOrCreateWhenThisBinderIsNullAndThisApplicationContextNotInstanceOfConfigurableApplicationContext11"
    constructorSignature: "<init>(org.springframework.context.ApplicationContext)\
      \ : void"
    modelFingerprint: "5640638C1B18BCA4F3F85BB25EC6DE19"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "3F3FF3C6CD1E36AD8380279EA12DE0B8"
      valueUuid: "target"
    - type: "INPUT"
      name: "propertiesBean"
      modelFingerprint: "EAF7400AF24F89B714CF5CA8E6E070EC"
      valueUuid: "propertiesBean"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "FED8746D69845FB1FA8479418506E12F"
      valueUuid: "propertySourcesDeducer"
      methodExercised:
        expression: "getPropertySources():propertySources"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "A59EABB40C2D79EB1D9D36B039273EAF"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "containsBean(name:uniqueUuid50):boolean1"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "6717D90D0F39A25CDF704557BF007FD1"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "getBean(name:uniqueUuid51,requiredType:uniqueUuid52):object"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
    - type: "STATIC"
      name: "ConfigurationPropertiesJsr303Validator.class"
      modelFingerprint: "81915BFD21BED47682C29C40E1B1B487"
      valueUuid: "ConfigurationPropertiesJsr303Validator.class"
      methodExercised:
        expression: "isJsr303Present(applicationContext:applicationContext):boolean2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "propertiesBean"
      modelFingerprint: "71C31F87A21520409F6531D997E694F0"
      valueUuid: "propertiesBean"
      methodExercised:
        expression: "asBindTarget():bindable"
    - type: "LOCAL_VARIABLE"
      name: "propertiesBean"
      modelFingerprint: "B2CEC8BB098D480AEFB43BA3AF5D36E0"
      valueUuid: "propertiesBean"
      methodExercised:
        expression: "getAnnotation():configurationProperties"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "1F4697F20661A66E4C8882A4C94BA69F"
      valueUuid: "bindable"
      methodExercised:
        expression: "getAnnotation(type:uniqueUuid53):annotation"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "E214E6B13C8FB325275E9FEA8A85693B"
      valueUuid: "bindable"
      methodExercised:
        expression: "getValue():supplier"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F2B3F794932F4DDBEC46619E5B86E2B9"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "839245556C80DD2528C73D5D2B32BC65"
      valueUuid: "resolvableType"
      methodExercised:
        expression: "resolve():class"
    - type: "STATIC"
      name: "BoundConfigurationProperties.class"
      modelFingerprint: "4C5A8C2D3CC9D6C419E4940D3E71E4BE"
      valueUuid: "BoundConfigurationProperties.class"
      methodExercised:
        expression: "get(context:applicationContext):boundConfigurationProperties"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "7FE4D5EFF832B93F15E35F05A552A36B"
      valueUuid: "configurationProperties"
      methodExercised:
        expression: "ignoreInvalidFields():boolean6"
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "6F2A875B8744D255444920F6D4B331CD"
      valueUuid: "configurationProperties"
      methodExercised:
        expression: "ignoreUnknownFields():boolean7"
    - type: "FIELD"
      name: "applicationContext"
      modelFingerprint: "5A7E4623F1451AE12DC1C87A5AB87213"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "getBeanProvider(requiredType:uniqueUuid54):objectProvider"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "D47D252FF5D9DFFA1D112975BA8250B0"
      valueUuid: "objectProvider"
      methodExercised:
        expression: "orderedStream():stream"
    - type: "STATIC"
      name: "ConfigurationPropertySources.class"
      modelFingerprint: "9AEF1F7044958F32ED340AFF33BF0C2E"
      valueUuid: "ConfigurationPropertySources.class"
      methodExercised:
        expression: "from(sources:propertySources):iterable"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "CE3FC3997DC43221266F4398919CB728"
      valueUuid: "conversionServiceDeducer"
      methodExercised:
        expression: "getConversionServices():list2"
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "3AC1043B880A4C0EF0EE594EDE4F18A1"
      valueUuid: "configurationProperties"
      methodExercised:
        expression: "prefix():string"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "037A3028C9DAE10289E8ABA9E52D6C58"
      valueUuid: "binder"
      methodExercised:
        expression: "bindOrCreate(name:string,target:bindable,handler:validationBindHandler):object2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7DF11721893D4DC9BAF7AC7A3BFF0D36"
      valueUuid: "object2"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.propertySources = new PropertySourcesDeducer(applicationContext).getPropertySources();"
      lineNumber: 85
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type PropertySourcesDeducer - Method: getPropertySources"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder"
        parameters:
        - name: "applicationContext"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.ApplicationContext"
            uuid: "applicationContext"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "propertiesBean"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
        parameters:
        - name: "applicationContext"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.ApplicationContext"
            uuid: "applicationContext"
      valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
      uuid: "propertySourcesDeducer"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.PropertySources"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
            parameters:
            - name: "applicationContext"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.context.ApplicationContext"
                uuid: "applicationContext"
          valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
          uuid: "propertySourcesDeducer"
          fixed: true
        methodParameters: []
        methodName: "getPropertySources"
      valueType: "org.springframework.core.env.PropertySources"
      uuid: "propertySources"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "configurationPropertiesValidator"
      valueType: "java.lang.String"
      uuid: "uniqueUuid50"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.validation.Validator"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "configurationPropertiesValidator"
      valueType: "java.lang.String"
      uuid: "uniqueUuid51"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.validation.Validator"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.validation.Validator"
      uuid: "uniqueUuid52"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
      uuid: "ConfigurationPropertiesJsr303Validator.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "propertiesBean"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "propertiesBean"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "configurationProperties"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "java.lang.annotation.Annotation"
      uuid: "annotation"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.validation.annotation.Validated"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.validation.annotation.Validated"
      uuid: "uniqueUuid53"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "NULL"
      valueType: "java.util.function.Supplier"
      uuid: "supplier"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.BoundConfigurationProperties"
      uuid: "BoundConfigurationProperties.class"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.BoundConfigurationProperties"
      uuid: "boundConfigurationProperties"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "configurationProperties"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean6"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "configurationProperties"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean7"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.ObjectProvider"
      uuid: "objectProvider"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.context.properties.ConfigurationPropertiesBindHandlerAdvisor"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBindHandlerAdvisor"
      uuid: "uniqueUuid54"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.ObjectProvider"
      uuid: "objectProvider"
    - sapientType: "MOCK"
      valueType: "java.util.stream.Stream"
      uuid: "stream"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "ConfigurationPropertySources.class"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "iterable"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.env.PropertySources"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
            parameters:
            - name: "applicationContext"
              value:
                sapientType: "MOCK"
                valueType: "org.springframework.context.ApplicationContext"
                uuid: "applicationContext"
          valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
          uuid: "propertySourcesDeducer"
          fixed: true
        methodParameters: []
        methodName: "getPropertySources"
      valueType: "org.springframework.core.env.PropertySources"
      uuid: "propertySources"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConversionServiceDeducer"
        parameters:
        - name: "applicationContext"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.ApplicationContext"
            uuid: "applicationContext"
      valueType: "org.springframework.boot.context.properties.ConversionServiceDeducer"
      uuid: "conversionServiceDeducer"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "configurationProperties"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_prefix1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "iterable"
        - name: "placeholdersResolver"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
              parameters:
              - name: "sources"
                value:
                  sapientType: "OBJECT"
                  content: !<method_return_from_value>
                    target: "org.springframework.core.env.PropertySources"
                    localVariableValue:
                      sapientType: "OBJECT"
                      content: !<new>
                        target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                        parameters:
                        - name: "applicationContext"
                          value:
                            sapientType: "MOCK"
                            valueType: "org.springframework.context.ApplicationContext"
                            uuid: "applicationContext"
                      valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                      uuid: "propertySourcesDeducer"
                      fixed: true
                    methodParameters: []
                    methodName: "getPropertySources"
                  valueType: "org.springframework.core.env.PropertySources"
                  uuid: "propertySources"
            valueType: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
            uuid: "propertySourcesPlaceholdersResolver"
            fixed: true
        - name: "conversionServices"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.core.convert.ConversionService"
            uuid: "list2"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "NULL"
            valueType: "java.util.function.Consumer"
            genericValueType: "org.springframework.beans.PropertyEditorRegistry"
            uuid: "consumer"
            fixed: true
        - name: "defaultBindHandler"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "uniqueUuid55"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "uniqueUuid56"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "binder"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.bind.Binder"
            parameters:
            - name: "sources"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  parameters: []
                  values: []
                valueType: "java.lang.Iterable"
                genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "iterable"
            - name: "placeholdersResolver"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
                  parameters:
                  - name: "sources"
                    value:
                      sapientType: "OBJECT"
                      content: !<method_return_from_value>
                        target: "org.springframework.core.env.PropertySources"
                        localVariableValue:
                          sapientType: "OBJECT"
                          content: !<new>
                            target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                            parameters:
                            - name: "applicationContext"
                              value:
                                sapientType: "MOCK"
                                valueType: "org.springframework.context.ApplicationContext"
                                uuid: "applicationContext"
                          valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                          uuid: "propertySourcesDeducer"
                          fixed: true
                        methodParameters: []
                        methodName: "getPropertySources"
                      valueType: "org.springframework.core.env.PropertySources"
                      uuid: "propertySources"
                valueType: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
                uuid: "propertySourcesPlaceholdersResolver"
                fixed: true
            - name: "conversionServices"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  parameters: []
                  values: []
                valueType: "java.util.List"
                genericValueType: "org.springframework.core.convert.ConversionService"
                uuid: "list2"
            - name: "propertyEditorInitializer"
              value:
                sapientType: "NULL"
                valueType: "java.util.function.Consumer"
                genericValueType: "org.springframework.beans.PropertyEditorRegistry"
                uuid: "consumer"
                fixed: true
            - name: "defaultBindHandler"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            - name: "constructorProvider"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
          valueType: "org.springframework.boot.context.properties.bind.Binder"
          uuid: "binder"
          fixed: true
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_prefix1"
            valueType: "java.lang.String"
            uuid: "string"
        - name: "target"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.Bindable"
            genericValueType: "?"
            uuid: "bindable"
        - name: "handler"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
              parameters:
              - name: "parent"
                value:
                  sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                  valueType: "org.springframework.boot.context.properties.bind.BindHandler"
                  uuid: "configurationPropertiesBinder.ConfigurationPropertiesBindHandler"
              - name: "validators"
                value:
                  sapientType: "ARRAY"
                  content: !<array>
                    values:
                      0:
                        sapientType: "MOCK"
                        valueType: "org.springframework.validation.Validator"
                        uuid: "object"
                        explicitCastNeeded: true
                      1:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
                          parameters:
                          - name: "applicationContext"
                            value:
                              sapientType: "MOCK"
                              valueType: "org.springframework.context.ApplicationContext"
                              uuid: "applicationContext"
                        valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
                        uuid: "configurationPropertiesJsr303Validator"
                        fixed: true
                  valueType: "org.springframework.validation.Validator[]"
                  uuid: "objectArray"
                  collectionUuid: "arrayList"
            valueType: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
            uuid: "validationBindHandler"
            fixed: true
        methodName: "bindOrCreate"
      valueType: "java.lang.Object"
      uuid: "object2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_prefix1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
      uuid: "validationBindHandler"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.bind.Binder"
            parameters:
            - name: "sources"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  parameters: []
                  values: []
                valueType: "java.lang.Iterable"
                genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "iterable"
            - name: "placeholdersResolver"
              value:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
                  parameters:
                  - name: "sources"
                    value:
                      sapientType: "OBJECT"
                      content: !<method_return_from_value>
                        target: "org.springframework.core.env.PropertySources"
                        localVariableValue:
                          sapientType: "OBJECT"
                          content: !<new>
                            target: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                            parameters:
                            - name: "applicationContext"
                              value:
                                sapientType: "MOCK"
                                valueType: "org.springframework.context.ApplicationContext"
                                uuid: "applicationContext"
                          valueType: "org.springframework.boot.context.properties.PropertySourcesDeducer"
                          uuid: "propertySourcesDeducer"
                          fixed: true
                        methodParameters: []
                        methodName: "getPropertySources"
                      valueType: "org.springframework.core.env.PropertySources"
                      uuid: "propertySources"
                valueType: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
                uuid: "propertySourcesPlaceholdersResolver"
                fixed: true
            - name: "conversionServices"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  parameters: []
                  values: []
                valueType: "java.util.List"
                genericValueType: "org.springframework.core.convert.ConversionService"
                uuid: "list2"
            - name: "propertyEditorInitializer"
              value:
                sapientType: "NULL"
                valueType: "java.util.function.Consumer"
                genericValueType: "org.springframework.beans.PropertyEditorRegistry"
                uuid: "consumer"
                fixed: true
            - name: "defaultBindHandler"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            - name: "constructorProvider"
              value:
                sapientType: "NULL"
                valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
          valueType: "org.springframework.boot.context.properties.bind.Binder"
          uuid: "binder"
          fixed: true
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_prefix1"
            valueType: "java.lang.String"
            uuid: "string"
        - name: "target"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.Bindable"
            genericValueType: "?"
            uuid: "bindable"
        - name: "handler"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
              parameters:
              - name: "parent"
                value:
                  sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                  valueType: "org.springframework.boot.context.properties.bind.BindHandler"
                  uuid: "configurationPropertiesBinder.ConfigurationPropertiesBindHandler"
              - name: "validators"
                value:
                  sapientType: "ARRAY"
                  content: !<array>
                    values:
                      0:
                        sapientType: "MOCK"
                        valueType: "org.springframework.validation.Validator"
                        uuid: "object"
                        explicitCastNeeded: true
                      1:
                        sapientType: "OBJECT"
                        content: !<new>
                          target: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
                          parameters:
                          - name: "applicationContext"
                            value:
                              sapientType: "MOCK"
                              valueType: "org.springframework.context.ApplicationContext"
                              uuid: "applicationContext"
                        valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesJsr303Validator"
                        uuid: "configurationPropertiesJsr303Validator"
                        fixed: true
                  valueType: "org.springframework.validation.Validator[]"
                  uuid: "objectArray"
                  collectionUuid: "arrayList"
            valueType: "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler"
            uuid: "validationBindHandler"
            fixed: true
        methodName: "bindOrCreate"
      valueType: "java.lang.Object"
      uuid: "object2"
    branches:
    - lineNumber: 140
      expression: "this.configurationPropertiesValidator != null"
      range: "(140,7)-(140,51)"
      evaluatedAs: true
      internalMethodName: "getValidators"
    - lineNumber: 143
      expression: "this.jsr303Present"
      range: "(143,7)-(143,24)"
      evaluatedAs: true
      internalMethodName: "getValidators"
    - lineNumber: 143
      expression: "target.getAnnotation(Validated.class) != null"
      range: "(143,29)-(143,73)"
      evaluatedAs: true
      internalMethodName: "getValidators"
    - lineNumber: 166
      expression: "this.jsr303Validator == null"
      range: "(166,7)-(166,34)"
      evaluatedAs: true
      internalMethodName: "getJsr303Validator"
    - lineNumber: 154
      expression: "target.getValue() != null"
      range: "(154,7)-(154,31)"
      evaluatedAs: false
      internalMethodName: "getSelfValidator"
    - lineNumber: 159
      expression: "Validator.class.isAssignableFrom(type)"
      range: "(159,7)-(159,44)"
      evaluatedAs: false
      internalMethodName: "getSelfValidator"
    - lineNumber: 147
      expression: "selfValidator != null"
      range: "(147,7)-(147,27)"
      evaluatedAs: false
      internalMethodName: "getValidators"
    - lineNumber: 133
      expression: "bound != null"
      range: "(133,11)-(133,23)"
      evaluatedAs: false
      internalMethodName: "getHandler"
    - lineNumber: 115
      expression: "annotation.ignoreInvalidFields()"
      range: "(115,7)-(115,38)"
      evaluatedAs: false
      internalMethodName: "getBindHandler"
    - lineNumber: 118
      expression: "!annotation.ignoreUnknownFields()"
      range: "(118,7)-(118,39)"
      evaluatedAs: false
      internalMethodName: "getBindHandler"
    - lineNumber: 122
      expression: "!validators.isEmpty()"
      range: "(122,7)-(122,27)"
      evaluatedAs: true
      internalMethodName: "getBindHandler"
    - lineNumber: 125
      expression: "for-each(getBindHandlerAdvisors())"
      range: "(125,60)-(125,83)"
      evaluatedAs: false
      internalMethodName: "getBindHandler"
    - lineNumber: 179
      expression: "this.binder == null"
      range: "(179,7)-(179,25)"
      evaluatedAs: true
      internalMethodName: "getBinder"
    - lineNumber: 199
      expression: "this.applicationContext instanceof ConfigurableApplicationContext\
        \ configurableContext"
      range: "(199,7)-(199,91)"
      evaluatedAs: false
      internalMethodName: "getPropertyEditorInitializer"
- method:
    name: "register"
    sourceCodeSignature: "void register(BeanDefinitionRegistry registry)"
    returnType: "void"
    parameters:
    - name: "registry"
      type: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
    instructionFingerprint: "312643609D9EF492E25A29D3F823072A"
  paths:
  - pathId: "path1"
    testPathName: "registerWhenRegistryNotContainsBeanDefinitionBEAN_NAME"
    modelFingerprint: "6FA5C385C74F65A065297FB237411A0E"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "registry"
      modelFingerprint: "14F926E67FDB678BF2FEC697D6F094DC"
      valueUuid: "registry"
    - type: "LOCAL_VARIABLE"
      name: "registry"
      modelFingerprint: "507822861D75D70C7CA6DA7B793056EC"
      valueUuid: "registry"
      methodExercised:
        expression: "containsBeanDefinition(beanName:uniqueUuid57):boolean1"
    - type: "STATIC"
      name: "BeanDefinitionBuilder.class.real"
      modelFingerprint: "0C561B11EFBB6AC7D96188F7720B1DFD"
      valueUuid: "BeanDefinitionBuilder.class.real"
      methodExercised:
        expression: "rootBeanDefinition(beanClass:uniqueUuid58):beanDefinitionBuilder"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "0C0497D9BCCE1324B4E13CADB6A2DFB5"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "getBeanDefinition():abstractBeanDefinition"
    - type: "LOCAL_VARIABLE"
      name: "definition"
      modelFingerprint: "4BDC34455985E3897CED869828EFC27F"
      valueUuid: "abstractBeanDefinition"
      methodExercised:
        expression: "setRole(role:uniqueUuid61):void"
    - type: "LOCAL_VARIABLE"
      name: "registry"
      modelFingerprint: "5527AB9F77817B9AB0AB3D6E550C092C"
      valueUuid: "registry"
      methodExercised:
        expression: "registerBeanDefinition(beanName:uniqueUuid62,beanDefinition:abstractBeanDefinition):void2"
        throwsExceptions:
        - "org.springframework.beans.factory.BeanDefinitionStoreException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.context.internalConfigurationPropertiesBinder"
      valueType: "java.lang.String"
      uuid: "uniqueUuid57"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "BeanDefinitionBuilder.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
        method: "rootBeanDefinition"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$ConfigurationPropertiesBinderFactory"
            valueType: "java.lang.Class"
            genericValueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$ConfigurationPropertiesBinderFactory"
            uuid: "uniqueUuid60"
            fixed: true
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$ConfigurationPropertiesBinderFactory"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$ConfigurationPropertiesBinderFactory"
      uuid: "uniqueUuid58"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
        method: "rootBeanDefinition"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$ConfigurationPropertiesBinderFactory"
            valueType: "java.lang.Class"
            genericValueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$ConfigurationPropertiesBinderFactory"
            uuid: "uniqueUuid60"
            fixed: true
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.beans.factory.support.AbstractBeanDefinition"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
            method: "rootBeanDefinition"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$ConfigurationPropertiesBinderFactory"
                valueType: "java.lang.Class"
                genericValueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$ConfigurationPropertiesBinderFactory"
                fixed: true
          valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
          uuid: "beanDefinitionBuilder"
        methodParameters: []
        methodName: "getBeanDefinition"
      valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
      uuid: "abstractBeanDefinition"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.beans.factory.support.AbstractBeanDefinition"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
            method: "rootBeanDefinition"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$ConfigurationPropertiesBinderFactory"
                valueType: "java.lang.Class"
                genericValueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$ConfigurationPropertiesBinderFactory"
                fixed: true
          valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
          uuid: "beanDefinitionBuilder"
        methodParameters: []
        methodName: "getBeanDefinition"
      valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
      uuid: "abstractBeanDefinition"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 2
      valueType: "int"
      uuid: "uniqueUuid61"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.context.internalConfigurationPropertiesBinder"
      valueType: "java.lang.String"
      uuid: "uniqueUuid62"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.beans.factory.support.AbstractBeanDefinition"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
            method: "rootBeanDefinition"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$ConfigurationPropertiesBinderFactory"
                valueType: "java.lang.Class"
                genericValueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$ConfigurationPropertiesBinderFactory"
                fixed: true
          valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
          uuid: "beanDefinitionBuilder"
        methodParameters: []
        methodName: "getBeanDefinition"
      valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
      uuid: "abstractBeanDefinition"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 206
      expression: "!registry.containsBeanDefinition(BEAN_NAME)"
      range: "(206,7)-(206,49)"
      evaluatedAs: true
- method:
    name: "get"
    sourceCodeSignature: "ConfigurationPropertiesBinder get(BeanFactory beanFactory)"
    returnType: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder"
    parameters:
    - name: "beanFactory"
      type: "org.springframework.beans.factory.BeanFactory"
    instructionFingerprint: "ADEE515F10508EDEE57753299143B58B"
  paths:
  - pathId: "path1"
    testPathName: "getTest"
    modelFingerprint: "B5216A9A1DB0BCA3542E487D2BE95A03"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "beanFactory"
      modelFingerprint: "DB2E40E6973710F494A675DA0AB37902"
      valueUuid: "beanFactory"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "2DF30036D62438BCF2D7AE4B0DA819B6"
      valueUuid: "beanFactory"
      methodExercised:
        expression: "getBean(name:uniqueUuid63,requiredType:uniqueUuid64):object"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "BA086E0C80EF0765E640930E0272B461"
      valueUuid: "object"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.BeanFactory"
      uuid: "beanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.BeanFactory"
      uuid: "beanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.context.internalConfigurationPropertiesBinder"
      valueType: "java.lang.String"
      uuid: "uniqueUuid63"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder"
      uuid: "uniqueUuid64"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder"
      uuid: "object"
      explicitCastNeeded: true
