---
modelFingerprint: "2946303CBAF5B2A42BE9AF0D25861966"
targetClass:
  fullClassName: "org.springframework.boot.context.properties.ConversionServiceDeducer"
methods:
- method:
    name: "getConversionServices"
    sourceCodeSignature: "List<ConversionService> getConversionServices()"
    returnType: "java.util.List"
    genericReturnType: "org.springframework.core.convert.ConversionService"
    instructionFingerprint: "32E3F839281781FBAF7A22105E0CB309"
  paths:
  - pathId: "path1"
    testPathName: "getConversionServicesWhenHasUserDefinedConfigurationServiceBean"
    constructorSignature: "<init>(org.springframework.context.ApplicationContext)\
      \ : void"
    modelFingerprint: "71848A63CEC3D274228FB6755CA72122"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "9B6B345DC6AA2E36CD52D6320B4C1A8B"
      valueUuid: "target"
    - type: "FIELD"
      name: "applicationContext"
      modelFingerprint: "56600BDB22DA77C66CF37DB61282E0CB"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "containsBean(name:string):boolean1"
    - type: "FIELD"
      name: "applicationContext"
      modelFingerprint: "FB2868360691110ECE85C1FF8B24322B"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "getAutowireCapableBeanFactory():autowireCapableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "C6A3DCB9ED088968DFDFA674FE7F356F"
      valueUuid: "autowireCapableBeanFactory"
      methodExercised:
        expression: "isTypeMatch(name:string,typeToMatch:uniqueUuid1):boolean2"
        throwsExceptions:
        - "org.springframework.beans.factory.NoSuchBeanDefinitionException"
    - type: "FIELD"
      name: "applicationContext"
      modelFingerprint: "6163FC40AD97B4A32EEE419F08E3FC02"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "getBean(name:uniqueUuid2,requiredType:uniqueUuid3):object"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "CA4C1102680BD36199A5E2A26543C837"
      valueUuid: "list"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConversionServiceDeducer"
        parameters:
        - name: "applicationContext"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.ApplicationContext"
            uuid: "applicationContext"
      valueType: "org.springframework.boot.context.properties.ConversionServiceDeducer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "conversionService"
      valueType: "java.lang.String"
      uuid: "string"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.AutowireCapableBeanFactory"
      uuid: "autowireCapableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.AutowireCapableBeanFactory"
      uuid: "autowireCapableBeanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "conversionService"
      valueType: "java.lang.String"
      uuid: "string"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.core.convert.ConversionService"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.ConversionService"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "conversionService"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.core.convert.ConversionService"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "object"
          explicitCastNeeded: true
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list"
    branches:
    - lineNumber: 88
      expression: "this.applicationContext.containsBean(beanName)"
      range: "(88,10)-(88,55)"
      evaluatedAs: true
      internalMethodName: "hasUserDefinedConfigurationServiceBean"
    - lineNumber: 89
      expression: "this.applicationContext.getAutowireCapableBeanFactory().isTypeMatch(beanName,\
        \ ConversionService.class)"
      range: "(88,60)-(89,50)"
      evaluatedAs: true
      internalMethodName: "hasUserDefinedConfigurationServiceBean"
    - lineNumber: 52
      expression: "hasUserDefinedConfigurationServiceBean()"
      range: "(52,7)-(52,46)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "getConversionServicesWhenHasUserDefinedConfigurationServiceBeanNotAndThisApplicationContextNotInstanceOfConfigurableApp"
    constructorSignature: "<init>(org.springframework.context.ApplicationContext)\
      \ : void"
    modelFingerprint: "2DA6D7D45A2310666E63D6BFF543F8C3"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "9B6B345DC6AA2E36CD52D6320B4C1A8B"
      valueUuid: "target"
    - type: "FIELD"
      name: "applicationContext"
      modelFingerprint: "56600BDB22DA77C66CF37DB61282E0CB"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "containsBean(name:string):boolean1"
    - type: "FIELD"
      name: "applicationContext"
      modelFingerprint: "FB2868360691110ECE85C1FF8B24322B"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "getAutowireCapableBeanFactory():autowireCapableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "645A32B3888F82E1FAED509FF60C9354"
      valueUuid: "autowireCapableBeanFactory"
      methodExercised:
        expression: "isTypeMatch(name:string,typeToMatch:uniqueUuid4):boolean2"
        throwsExceptions:
        - "org.springframework.beans.factory.NoSuchBeanDefinitionException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A74CC97A611B0AFDA86A5A6E6FE7C7EA"
      valueUuid: "list"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConversionServiceDeducer"
        parameters:
        - name: "applicationContext"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.ApplicationContext"
            uuid: "applicationContext"
      valueType: "org.springframework.boot.context.properties.ConversionServiceDeducer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "conversionService"
      valueType: "java.lang.String"
      uuid: "string"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.AutowireCapableBeanFactory"
      uuid: "autowireCapableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.AutowireCapableBeanFactory"
      uuid: "autowireCapableBeanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "conversionService"
      valueType: "java.lang.String"
      uuid: "string"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.core.convert.ConversionService"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list"
      fixed: true
    branches:
    - lineNumber: 88
      expression: "this.applicationContext.containsBean(beanName)"
      range: "(88,10)-(88,55)"
      evaluatedAs: true
      internalMethodName: "hasUserDefinedConfigurationServiceBean"
    - lineNumber: 89
      expression: "this.applicationContext.getAutowireCapableBeanFactory().isTypeMatch(beanName,\
        \ ConversionService.class)"
      range: "(88,60)-(89,50)"
      evaluatedAs: false
      internalMethodName: "hasUserDefinedConfigurationServiceBean"
    - lineNumber: 52
      expression: "hasUserDefinedConfigurationServiceBean()"
      range: "(52,7)-(52,46)"
      evaluatedAs: false
    - lineNumber: 56
      expression: "this.applicationContext instanceof ConfigurableApplicationContext\
        \ configurableContext"
      range: "(56,7)-(56,91)"
      evaluatedAs: false
