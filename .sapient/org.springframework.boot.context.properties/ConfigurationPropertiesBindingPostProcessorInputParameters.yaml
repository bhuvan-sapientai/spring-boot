---
modelFingerprint: "CED4E8E0F48407FE752E1FDC84875AAF"
targetClass:
  fullClassName: "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor"
methods:
- method:
    name: "setApplicationContext"
    sourceCodeSignature: "void setApplicationContext(ApplicationContext applicationContext)"
    returnType: "void"
    throwsExceptions:
    - "org.springframework.beans.BeansException"
    parameters:
    - name: "applicationContext"
      type: "org.springframework.context.ApplicationContext"
    instructionFingerprint: "62E0683B7DE24D3FBC3480EF47432B8C"
  paths:
  - pathId: "path1"
    testPathName: "setApplicationContextTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "DD0DDB93B187DDDCFF3626913532D468"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "afterPropertiesSet"
    sourceCodeSignature: "void afterPropertiesSet()"
    returnType: "void"
    throwsExceptions:
    - "java.lang.Exception"
    instructionFingerprint: "E4CE923BAEE58BC5CAC86867FC526149"
  paths:
  - pathId: "path1"
    testPathName: "afterPropertiesSetTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "D87DA5227FB56D6BDCF24A5E95841411"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "FIELD"
      name: "applicationContext"
      modelFingerprint: "FD00141FA85ACFE779F62C22A218026C"
      valueUuid: "fieldApplicationContext"
      methodExercised:
        expression: "getAutowireCapableBeanFactory():autowireCapableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "STATIC"
      name: "ConfigurationPropertiesBinder.class"
      modelFingerprint: "02818E1B0AD6960B222A1C4C6E39F551"
      valueUuid: "ConfigurationPropertiesBinder.class"
      methodExercised:
        expression: "get(beanFactory:fieldApplicationContext):configurationPropertiesBinder"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "CHECK_CAST_EXPRESSION_FAILURE"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor"
        parameters: []
        propertiesMap:
          applicationContext:
            sapientType: "MOCK"
            valueType: "org.springframework.context.ApplicationContext"
            uuid: "fieldApplicationContext"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "fieldApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.AutowireCapableBeanFactory"
      uuid: "autowireCapableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder"
      uuid: "ConfigurationPropertiesBinder.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder"
      uuid: "configurationPropertiesBinder"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "fieldApplicationContext"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "getOrder"
    sourceCodeSignature: "int getOrder()"
    returnType: "int"
    instructionFingerprint: "D097CF84226A0A5BDFC73B598FC0E93C"
  paths:
  - pathId: "path1"
    testPathName: "getOrderTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "89AB67113BF6098C9DF9ABFB6DE35022"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "63E8B280596E8AE5AF41A3C5E7525AEE"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor"
        parameters: []
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: -2147483647
      valueType: "int"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "postProcessBeforeInitialization"
    sourceCodeSignature: "Object postProcessBeforeInitialization(Object bean, String\
      \ beanName)"
    returnType: "java.lang.Object"
    throwsExceptions:
    - "org.springframework.beans.BeansException"
    parameters:
    - name: "bean"
      type: "java.lang.Object"
    - name: "beanName"
      type: "java.lang.String"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "C698D6B21E4EA18DDA732A014DAB1C64"
  paths:
  - pathId: "path1"
    testPathName: "postProcessBeforeInitializationWhenHasBoundValueObjectBeanName"
    constructorSignature: "<init>() : void"
    modelFingerprint: "4A18C2D8AA46D5A657B0615E60AFEA34"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "bean"
      modelFingerprint: "44CA456F7AEC99F4177F94DB9787F20F"
      valueUuid: "bean"
    - type: "INPUT"
      name: "beanName"
      modelFingerprint: "CF78E67EF6D4AB290170629993228478"
      valueUuid: "beanName"
    - type: "STATIC"
      name: "BindMethodAttribute.class"
      modelFingerprint: "3990DAF0F35AF2EB7E694B1E982FA180"
      valueUuid: "BindMethodAttribute.class"
      methodExercised:
        expression: "get(beanDefinitionRegistry:fieldBeanDefinitionRegistry,beanName:beanName):bindMethod"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7D8E87CB1B63A9579EC7584A697ED33D"
      valueUuid: "bean"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor"
        parameters: []
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "bean"
    - sapientType: "BASIC"
      content: !<regular>
        value: "beanName1"
      valueType: "java.lang.String"
      uuid: "beanName"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.BindMethodAttribute"
      uuid: "BindMethodAttribute.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "VALUE_OBJECT"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod"
    - sapientType: "NULL"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "fieldBeanDefinitionRegistry"
    - sapientType: "BASIC"
      content: !<regular>
        value: "beanName1"
      valueType: "java.lang.String"
      uuid: "beanName"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "bean"
    branches:
    - lineNumber: 85
      expression: "BindMethod.VALUE_OBJECT.equals(BindMethodAttribute.get(this.registry,\
        \ beanName))"
      range: "(85,10)-(85,89)"
      evaluatedAs: true
      internalMethodName: "hasBoundValueObject"
    - lineNumber: 78
      expression: "!hasBoundValueObject(beanName)"
      range: "(78,7)-(78,36)"
      evaluatedAs: false
  - pathId: "path2"
    testPathName: "postProcessBeforeInitializationWhenBeanIsNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "C46A518EE0FE520FE4F7367A3B6CD8E1"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "bean"
      modelFingerprint: "44CA456F7AEC99F4177F94DB9787F20F"
      valueUuid: "bean"
    - type: "INPUT"
      name: "beanName"
      modelFingerprint: "CF78E67EF6D4AB290170629993228478"
      valueUuid: "beanName"
    - type: "STATIC"
      name: "BindMethodAttribute.class"
      modelFingerprint: "5F81D8359965A68DCAEA164478C9E186"
      valueUuid: "BindMethodAttribute.class"
      methodExercised:
        expression: "get(beanDefinitionRegistry:fieldBeanDefinitionRegistry,beanName:beanName):bindMethod"
        staticAccess: true
    - type: "STATIC"
      name: "ConfigurationPropertiesBean.class"
      modelFingerprint: "B891764F15939D3C9B81ED79870606CB"
      valueUuid: "ConfigurationPropertiesBean.class"
      methodExercised:
        expression: "get(applicationContext:fieldApplicationContext,bean:bean,beanName:beanName):configurationPropertiesBean"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7D8E87CB1B63A9579EC7584A697ED33D"
      valueUuid: "bean"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor"
        parameters: []
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "bean"
    - sapientType: "BASIC"
      content: !<regular>
        value: "beanName1"
      valueType: "java.lang.String"
      uuid: "beanName"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.BindMethodAttribute"
      uuid: "BindMethodAttribute.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod"
    - sapientType: "NULL"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "fieldBeanDefinitionRegistry"
    - sapientType: "BASIC"
      content: !<regular>
        value: "beanName1"
      valueType: "java.lang.String"
      uuid: "beanName"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "ConfigurationPropertiesBean.class"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "configurationPropertiesBean"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "fieldApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "bean"
    - sapientType: "BASIC"
      content: !<regular>
        value: "beanName1"
      valueType: "java.lang.String"
      uuid: "beanName"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "bean"
    branches:
    - lineNumber: 85
      expression: "BindMethod.VALUE_OBJECT.equals(BindMethodAttribute.get(this.registry,\
        \ beanName))"
      range: "(85,10)-(85,89)"
      evaluatedAs: false
      internalMethodName: "hasBoundValueObject"
    - lineNumber: 78
      expression: "!hasBoundValueObject(beanName)"
      range: "(78,7)-(78,36)"
      evaluatedAs: true
    - lineNumber: 89
      expression: "bean == null"
      range: "(89,7)-(89,18)"
      evaluatedAs: true
      internalMethodName: "bind"
  - pathId: "path3"
    testPathName: "postProcessBeforeInitializationWhenBeanAsBindTargetGetBindMethodNotEqualsBindMethodVALUE_OBJECT"
    constructorSignature: "<init>() : void"
    modelFingerprint: "A661BA46A027B4ED66B7AE2671A44B21"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "bean"
      modelFingerprint: "44CA456F7AEC99F4177F94DB9787F20F"
      valueUuid: "bean"
    - type: "INPUT"
      name: "beanName"
      modelFingerprint: "CF78E67EF6D4AB290170629993228478"
      valueUuid: "beanName"
    - type: "STATIC"
      name: "BindMethodAttribute.class"
      modelFingerprint: "5F81D8359965A68DCAEA164478C9E186"
      valueUuid: "BindMethodAttribute.class"
      methodExercised:
        expression: "get(beanDefinitionRegistry:fieldBeanDefinitionRegistry,beanName:beanName):bindMethod"
        staticAccess: true
    - type: "STATIC"
      name: "ConfigurationPropertiesBean.class"
      modelFingerprint: "08EF7E22A8ADFCE8EA4B03A2F9F03D15"
      valueUuid: "ConfigurationPropertiesBean.class"
      methodExercised:
        expression: "get(applicationContext:fieldApplicationContext,bean:bean,beanName:beanName):configurationPropertiesBean"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "bean"
      modelFingerprint: "CFD9366145AC8EBCD48880EAF517BDAD"
      valueUuid: "configurationPropertiesBean"
      methodExercised:
        expression: "asBindTarget():bindable"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "5BBF3DC93B5F35E96FE5DC96CF8FB10E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getBindMethod():bindMethod2"
    - type: "LOCAL_VARIABLE"
      name: "bean"
      modelFingerprint: "EC19CF7CBA24DC3117870B7E97DEA77D"
      valueUuid: "configurationPropertiesBean"
      methodExercised:
        expression: "getName():string2"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "2DD5E2336866CAD339A6338968F4D82E"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "state(expression:uniqueUuid1,message:string3):void"
        staticAccess: true
    - type: "FIELD"
      name: "binder"
      modelFingerprint: "71BA882E9E9EB68CCFB89D529448E20E"
      valueUuid: "fieldConfigurationPropertiesBinder"
      methodExercised:
        expression: "bind(propertiesBean:configurationPropertiesBean):bindResult"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7D8E87CB1B63A9579EC7584A697ED33D"
      valueUuid: "bean"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor"
        parameters: []
        propertiesMap:
          binder:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder"
            uuid: "fieldConfigurationPropertiesBinder"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "bean"
    - sapientType: "BASIC"
      content: !<regular>
        value: "beanName1"
      valueType: "java.lang.String"
      uuid: "beanName"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.BindMethodAttribute"
      uuid: "BindMethodAttribute.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod"
    - sapientType: "NULL"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "fieldBeanDefinitionRegistry"
    - sapientType: "BASIC"
      content: !<regular>
        value: "beanName1"
      valueType: "java.lang.String"
      uuid: "beanName"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "ConfigurationPropertiesBean.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "configurationPropertiesBean"
    - sapientType: "NULL"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "fieldApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "bean"
    - sapientType: "BASIC"
      content: !<regular>
        value: "beanName1"
      valueType: "java.lang.String"
      uuid: "beanName"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "configurationPropertiesBean"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "configurationPropertiesBean"
    - sapientType: "BASIC"
      content: !<regular>
        value: "C"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Cannot bind @ConfigurationProperties for bean 'C'. Ensure that @ConstructorBinding\
          \ has not been applied to regular bean"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder"
      uuid: "fieldConfigurationPropertiesBinder"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "?"
      uuid: "bindResult"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "configurationPropertiesBean"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "bean"
    branches:
    - lineNumber: 85
      expression: "BindMethod.VALUE_OBJECT.equals(BindMethodAttribute.get(this.registry,\
        \ beanName))"
      range: "(85,10)-(85,89)"
      evaluatedAs: false
      internalMethodName: "hasBoundValueObject"
    - lineNumber: 78
      expression: "!hasBoundValueObject(beanName)"
      range: "(78,7)-(78,36)"
      evaluatedAs: true
    - lineNumber: 89
      expression: "bean == null"
      range: "(89,7)-(89,18)"
      evaluatedAs: false
      internalMethodName: "bind"
    - lineNumber: 92
      expression: "bean.asBindTarget().getBindMethod() != BindMethod.VALUE_OBJECT"
      range: "(92,16)-(92,77)"
      evaluatedAs: true
      internalMethodName: "bind"
  - pathId: "path4"
    testPathName: "postProcessBeforeInitializationWhenBeanAsBindTargetGetBindMethodEqualsBindMethodVALUE_OBJECT"
    constructorSignature: "<init>() : void"
    modelFingerprint: "06F180F186AC9F7DC67DFDA34FADA126"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "bean"
      modelFingerprint: "44CA456F7AEC99F4177F94DB9787F20F"
      valueUuid: "bean"
    - type: "INPUT"
      name: "beanName"
      modelFingerprint: "CF78E67EF6D4AB290170629993228478"
      valueUuid: "beanName"
    - type: "STATIC"
      name: "BindMethodAttribute.class"
      modelFingerprint: "5F81D8359965A68DCAEA164478C9E186"
      valueUuid: "BindMethodAttribute.class"
      methodExercised:
        expression: "get(beanDefinitionRegistry:fieldBeanDefinitionRegistry,beanName:beanName):bindMethod"
        staticAccess: true
    - type: "STATIC"
      name: "ConfigurationPropertiesBean.class"
      modelFingerprint: "08EF7E22A8ADFCE8EA4B03A2F9F03D15"
      valueUuid: "ConfigurationPropertiesBean.class"
      methodExercised:
        expression: "get(applicationContext:fieldApplicationContext,bean:bean,beanName:beanName):configurationPropertiesBean"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "bean"
      modelFingerprint: "CFD9366145AC8EBCD48880EAF517BDAD"
      valueUuid: "configurationPropertiesBean"
      methodExercised:
        expression: "asBindTarget():bindable"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "04D55E9778B96F6AF682CD27D8801334"
      valueUuid: "bindable"
      methodExercised:
        expression: "getBindMethod():bindMethod2"
    - type: "LOCAL_VARIABLE"
      name: "bean"
      modelFingerprint: "EC19CF7CBA24DC3117870B7E97DEA77D"
      valueUuid: "configurationPropertiesBean"
      methodExercised:
        expression: "getName():string2"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "2DD5E2336866CAD339A6338968F4D82E"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "state(expression:uniqueUuid2,message:string3):void"
        staticAccess: true
    - type: "FIELD"
      name: "binder"
      modelFingerprint: "71BA882E9E9EB68CCFB89D529448E20E"
      valueUuid: "fieldConfigurationPropertiesBinder"
      methodExercised:
        expression: "bind(propertiesBean:configurationPropertiesBean):bindResult"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7D8E87CB1B63A9579EC7584A697ED33D"
      valueUuid: "bean"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor"
        parameters: []
        propertiesMap:
          binder:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder"
            uuid: "fieldConfigurationPropertiesBinder"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "bean"
    - sapientType: "BASIC"
      content: !<regular>
        value: "beanName1"
      valueType: "java.lang.String"
      uuid: "beanName"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.BindMethodAttribute"
      uuid: "BindMethodAttribute.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod"
    - sapientType: "NULL"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "fieldBeanDefinitionRegistry"
    - sapientType: "BASIC"
      content: !<regular>
        value: "beanName1"
      valueType: "java.lang.String"
      uuid: "beanName"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "ConfigurationPropertiesBean.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "configurationPropertiesBean"
    - sapientType: "NULL"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "fieldApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "bean"
    - sapientType: "BASIC"
      content: !<regular>
        value: "beanName1"
      valueType: "java.lang.String"
      uuid: "beanName"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "configurationPropertiesBean"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "VALUE_OBJECT"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "configurationPropertiesBean"
    - sapientType: "BASIC"
      content: !<regular>
        value: "C"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Cannot bind @ConfigurationProperties for bean 'C'. Ensure that @ConstructorBinding\
          \ has not been applied to regular bean"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder"
      uuid: "fieldConfigurationPropertiesBinder"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "?"
      uuid: "bindResult"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "configurationPropertiesBean"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "bean"
    branches:
    - lineNumber: 85
      expression: "BindMethod.VALUE_OBJECT.equals(BindMethodAttribute.get(this.registry,\
        \ beanName))"
      range: "(85,10)-(85,89)"
      evaluatedAs: false
      internalMethodName: "hasBoundValueObject"
    - lineNumber: 78
      expression: "!hasBoundValueObject(beanName)"
      range: "(78,7)-(78,36)"
      evaluatedAs: true
    - lineNumber: 89
      expression: "bean == null"
      range: "(89,7)-(89,18)"
      evaluatedAs: false
      internalMethodName: "bind"
    - lineNumber: 92
      expression: "bean.asBindTarget().getBindMethod() != BindMethod.VALUE_OBJECT"
      range: "(92,16)-(92,77)"
      evaluatedAs: false
      internalMethodName: "bind"
  - pathId: "path5"
    testPathName: "postProcessBeforeInitializationWhenCaughtExceptionThrowsConfigurationPropertiesBindException"
    constructorSignature: "<init>() : void"
    modelFingerprint: "21A4608663E85D7F439C9020B096B62C"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "bean"
      modelFingerprint: "44CA456F7AEC99F4177F94DB9787F20F"
      valueUuid: "bean"
    - type: "INPUT"
      name: "beanName"
      modelFingerprint: "CF78E67EF6D4AB290170629993228478"
      valueUuid: "beanName"
    - type: "STATIC"
      name: "BindMethodAttribute.class"
      modelFingerprint: "5F81D8359965A68DCAEA164478C9E186"
      valueUuid: "BindMethodAttribute.class"
      methodExercised:
        expression: "get(beanDefinitionRegistry:fieldBeanDefinitionRegistry,beanName:beanName):bindMethod"
        staticAccess: true
    - type: "STATIC"
      name: "ConfigurationPropertiesBean.class"
      modelFingerprint: "08EF7E22A8ADFCE8EA4B03A2F9F03D15"
      valueUuid: "ConfigurationPropertiesBean.class"
      methodExercised:
        expression: "get(applicationContext:fieldApplicationContext,bean:bean,beanName:beanName):configurationPropertiesBean"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "bean"
      modelFingerprint: "CFD9366145AC8EBCD48880EAF517BDAD"
      valueUuid: "configurationPropertiesBean"
      methodExercised:
        expression: "asBindTarget():bindable"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "5BBF3DC93B5F35E96FE5DC96CF8FB10E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getBindMethod():bindMethod2"
    - type: "LOCAL_VARIABLE"
      name: "bean"
      modelFingerprint: "EC19CF7CBA24DC3117870B7E97DEA77D"
      valueUuid: "configurationPropertiesBean"
      methodExercised:
        expression: "getName():string2"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "2DD5E2336866CAD339A6338968F4D82E"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "state(expression:uniqueUuid1,message:string3):void"
        staticAccess: true
    - type: "FIELD"
      name: "binder"
      modelFingerprint: "45B93ECE00B0B6E55293029A7CBB44C7"
      valueUuid: "fieldConfigurationPropertiesBinder"
      methodExercised:
        expression: "bind(propertiesBean:configurationPropertiesBean):bindResult"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "9A883BB8598E61270F5336D6C8BABD69"
      valueUuid: "configurationPropertiesBindException"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor"
        parameters: []
        propertiesMap:
          binder:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder"
            uuid: "fieldConfigurationPropertiesBinder"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "bean"
    - sapientType: "BASIC"
      content: !<regular>
        value: "beanName1"
      valueType: "java.lang.String"
      uuid: "beanName"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.BindMethodAttribute"
      uuid: "BindMethodAttribute.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod"
    - sapientType: "NULL"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "fieldBeanDefinitionRegistry"
    - sapientType: "BASIC"
      content: !<regular>
        value: "beanName1"
      valueType: "java.lang.String"
      uuid: "beanName"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "ConfigurationPropertiesBean.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "configurationPropertiesBean"
    - sapientType: "NULL"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "fieldApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "bean"
    - sapientType: "BASIC"
      content: !<regular>
        value: "beanName1"
      valueType: "java.lang.String"
      uuid: "beanName"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "configurationPropertiesBean"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "bindable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "configurationPropertiesBean"
    - sapientType: "BASIC"
      content: !<regular>
        value: "C"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Cannot bind @ConfigurationProperties for bean 'C'. Ensure that @ConstructorBinding\
          \ has not been applied to regular bean"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder"
      uuid: "fieldConfigurationPropertiesBinder"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.RuntimeException"
        parameters: []
      valueType: "java.lang.RuntimeException"
      uuid: "bindResult"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "configurationPropertiesBean"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesBindException"
        parameters:
        - name: "bean"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
            uuid: "configurationPropertiesBean"
        - name: "cause"
          value:
            sapientType: "EXCEPTION"
            content: !<new>
              target: "java.lang.RuntimeException"
              parameters: []
            valueType: "java.lang.RuntimeException"
            uuid: "bindResult"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBindException"
      uuid: "configurationPropertiesBindException"
      fixed: true
    branches:
    - lineNumber: 85
      expression: "BindMethod.VALUE_OBJECT.equals(BindMethodAttribute.get(this.registry,\
        \ beanName))"
      range: "(85,10)-(85,89)"
      evaluatedAs: false
      internalMethodName: "hasBoundValueObject"
    - lineNumber: 78
      expression: "!hasBoundValueObject(beanName)"
      range: "(78,7)-(78,36)"
      evaluatedAs: true
    - lineNumber: 89
      expression: "bean == null"
      range: "(89,7)-(89,18)"
      evaluatedAs: false
      internalMethodName: "bind"
    - lineNumber: 92
      expression: "bean.asBindTarget().getBindMethod() != BindMethod.VALUE_OBJECT"
      range: "(92,16)-(92,77)"
      evaluatedAs: true
      internalMethodName: "bind"
    - lineNumber: 98
      expression: "catch-exception (Exception)"
      range: "(98,3)-(98,21)"
      evaluatedAs: true
      internalMethodName: "bind"
    catchBlockExercised:
      idExternalInstruction: 14
      id: 1
      catchExceptions:
      - "java.lang.Exception"
- method:
    name: "register"
    sourceCodeSignature: "void register(BeanDefinitionRegistry registry)"
    returnType: "void"
    parameters:
    - name: "registry"
      type: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
    instructionFingerprint: "3CC252F293D3EF3EB732C30E4669151F"
  paths:
  - pathId: "path1"
    testPathName: "registerWhenRegistryNotContainsBeanDefinitionBEAN_NAME"
    modelFingerprint: "4915286DD7FDC27002A1D1BBE3D5ADF2"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "registry"
      modelFingerprint: "14F926E67FDB678BF2FEC697D6F094DC"
      valueUuid: "registry"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "17A521A9364A9E421812473759FBAEA2"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:registry,message:uniqueUuid4):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "registry"
      modelFingerprint: "DE5FEA0CB679980CB39EE4739D6C69A6"
      valueUuid: "registry"
      methodExercised:
        expression: "containsBeanDefinition(beanName:string):boolean1"
    - type: "STATIC"
      name: "BeanDefinitionBuilder.class.real"
      modelFingerprint: "134C08D6CE9696A6425D8FD1F732421D"
      valueUuid: "BeanDefinitionBuilder.class.real"
      methodExercised:
        expression: "rootBeanDefinition(beanClass:uniqueUuid5):beanDefinitionBuilder"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "82E24A1A33C085D6F2A858722784EB88"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "getBeanDefinition():abstractBeanDefinition"
    - type: "LOCAL_VARIABLE"
      name: "definition"
      modelFingerprint: "C38A1C26013C5ACAB6726F82CB19F9D7"
      valueUuid: "abstractBeanDefinition"
      methodExercised:
        expression: "setRole(role:uniqueUuid8):void2"
    - type: "LOCAL_VARIABLE"
      name: "registry"
      modelFingerprint: "764E3626968BF6D00D945405C98F9CCF"
      valueUuid: "registry"
      methodExercised:
        expression: "registerBeanDefinition(beanName:string,beanDefinition:abstractBeanDefinition):void3"
        throwsExceptions:
        - "org.springframework.beans.factory.BeanDefinitionStoreException"
    - type: "STATIC"
      name: "ConfigurationPropertiesBinder.class"
      modelFingerprint: "A9B55137F3A7BDA01C815B811C525A75"
      valueUuid: "ConfigurationPropertiesBinder.class"
      methodExercised:
        expression: "register(registry:registry):void4"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Registry must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "REAL"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "BeanDefinitionBuilder.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
        method: "rootBeanDefinition"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor"
            valueType: "java.lang.Class"
            genericValueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor"
            uuid: "uniqueUuid7"
            fixed: true
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
        method: "rootBeanDefinition"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor"
            valueType: "java.lang.Class"
            genericValueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor"
            uuid: "uniqueUuid7"
            fixed: true
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.beans.factory.support.AbstractBeanDefinition"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
            method: "rootBeanDefinition"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor"
                valueType: "java.lang.Class"
                genericValueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor"
                fixed: true
          valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
          uuid: "beanDefinitionBuilder"
        methodParameters: []
        methodName: "getBeanDefinition"
      valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
      uuid: "abstractBeanDefinition"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.beans.factory.support.AbstractBeanDefinition"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
            method: "rootBeanDefinition"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor"
                valueType: "java.lang.Class"
                genericValueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor"
                fixed: true
          valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
          uuid: "beanDefinitionBuilder"
        methodParameters: []
        methodName: "getBeanDefinition"
      valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
      uuid: "abstractBeanDefinition"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 2
      valueType: "int"
      uuid: "uniqueUuid8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.beans.factory.support.AbstractBeanDefinition"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
            method: "rootBeanDefinition"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor"
                valueType: "java.lang.Class"
                genericValueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor"
                fixed: true
          valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
          uuid: "beanDefinitionBuilder"
        methodParameters: []
        methodName: "getBeanDefinition"
      valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
      uuid: "abstractBeanDefinition"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBinder"
      uuid: "ConfigurationPropertiesBinder.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 111
      expression: "!registry.containsBeanDefinition(BEAN_NAME)"
      range: "(111,7)-(111,49)"
      evaluatedAs: true
