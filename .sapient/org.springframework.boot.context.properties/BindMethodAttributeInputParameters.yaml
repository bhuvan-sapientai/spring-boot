---
modelFingerprint: "C2C5C5B17CDE03F5437A2BC151A7FA22"
targetClass:
  fullClassName: "org.springframework.boot.context.properties.BindMethodAttribute"
methods:
- method:
    name: "get"
    sourceCodeSignature: "BindMethod get(ApplicationContext applicationContext, String\
      \ beanName)"
    returnType: "org.springframework.boot.context.properties.bind.BindMethod"
    parameters:
    - name: "applicationContext"
      type: "org.springframework.context.ApplicationContext"
    - name: "beanName"
      type: "java.lang.String"
    instructionFingerprint: "EB1A815DE48550144DC4FC2DC9CD605B"
  paths:
  - pathId: "path1"
    testPathName: "getWhenApplicationContextInstanceOfConfigurableApplicationContext"
    modelFingerprint: "17CA2157D3D1990C80FAF6290F1CAD81"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "applicationContext"
      modelFingerprint: "DF659A8AABEBC6871FFB4901FD8A4D44"
      valueUuid: "applicationContext"
    - type: "INPUT"
      name: "beanName"
      modelFingerprint: "CF78E67EF6D4AB290170629993228478"
      valueUuid: "beanName"
    - type: "LOCAL_VARIABLE"
      name: "configurableApplicationContext"
      modelFingerprint: "4B8A1573FB06AF285173BDB0492070ED"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "STATIC"
      name: "BindMethodAttribute.class"
      modelFingerprint: "A818B1C685502858850FFFFFF6CC4E15"
      valueUuid: "BindMethodAttribute.class"
      methodExercised:
        expression: "get(beanFactory:configurableListableBeanFactory,beanName:beanName):bindMethod"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "203271D80776BB1AAFF802A68D05EB2E"
      valueUuid: "bindMethod"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "applicationContext"
      explicitCastForOverloadedMethods: "org.springframework.context.ApplicationContext"
    - sapientType: "BASIC"
      content: !<regular>
        value: "beanName1"
      valueType: "java.lang.String"
      uuid: "beanName"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "applicationContext"
      explicitCastForOverloadedMethods: "org.springframework.context.ApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.BindMethodAttribute"
      uuid: "BindMethodAttribute.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "beanName1"
      valueType: "java.lang.String"
      uuid: "beanName"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod"
    branches:
    - lineNumber: 40
      expression: "applicationContext instanceof ConfigurableApplicationContext configurableApplicationContext"
      range: "(40,11)-(40,101)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "getWhenApplicationContextNotInstanceOfConfigurableApplicationContext"
    modelFingerprint: "C4A74278AE27080F6433BCE7A3DBE7B0"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "applicationContext"
      modelFingerprint: "E138912CC50600D576F7DC9B4181FE20"
      valueUuid: "applicationContext"
    - type: "INPUT"
      name: "beanName"
      modelFingerprint: "CF78E67EF6D4AB290170629993228478"
      valueUuid: "beanName"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "63A8CEF7292ADD25196AC5945BC8BC31"
      valueUuid: "bindMethod"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "BASIC"
      content: !<regular>
        value: "beanName1"
      valueType: "java.lang.String"
      uuid: "beanName"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod"
      fixed: true
    branches:
    - lineNumber: 40
      expression: "applicationContext instanceof ConfigurableApplicationContext configurableApplicationContext"
      range: "(40,11)-(40,101)"
      evaluatedAs: false
- method:
    name: "get"
    sourceCodeSignature: "BindMethod get(ConfigurableListableBeanFactory beanFactory,\
      \ String beanName)"
    returnType: "org.springframework.boot.context.properties.bind.BindMethod"
    parameters:
    - name: "beanFactory"
      type: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
    - name: "beanName"
      type: "java.lang.String"
    instructionFingerprint: "E332F111C31CB60E2A0BD50E408CFF95"
  paths:
  - pathId: "path1"
    testPathName: "get1WhenBeanFactoryNotContainsBeanDefinitionBeanName"
    modelFingerprint: "9B022F05477F4374170EC91A41624367"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "beanFactory"
      modelFingerprint: "2B7EF4D05F05B01EB1F2B9BE20317A7C"
      valueUuid: "beanFactory"
    - type: "INPUT"
      name: "beanName"
      modelFingerprint: "CF78E67EF6D4AB290170629993228478"
      valueUuid: "beanName"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "1ED2994C928A680E893F2559F2AE161E"
      valueUuid: "beanFactory"
      methodExercised:
        expression: "containsBeanDefinition(beanName:beanName):boolean1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "63A8CEF7292ADD25196AC5945BC8BC31"
      valueUuid: "bindMethod"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "beanName1"
      valueType: "java.lang.String"
      uuid: "beanName"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "beanName1"
      valueType: "java.lang.String"
      uuid: "beanName"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod"
      fixed: true
    branches:
    - lineNumber: 45
      expression: "!beanFactory.containsBeanDefinition(beanName)"
      range: "(45,11)-(45,55)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "get1WhenBeanFactoryContainsBeanDefinitionBeanName"
    modelFingerprint: "9EC7931B5FC460BA7E427ECF0AC8D262"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "beanFactory"
      modelFingerprint: "2B7EF4D05F05B01EB1F2B9BE20317A7C"
      valueUuid: "beanFactory"
    - type: "INPUT"
      name: "beanName"
      modelFingerprint: "CF78E67EF6D4AB290170629993228478"
      valueUuid: "beanName"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "A763DCE22F5F535893344054774252F4"
      valueUuid: "beanFactory"
      methodExercised:
        expression: "containsBeanDefinition(beanName:beanName):boolean1"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "43015DE8529E9CD5E16E3879B302C950"
      valueUuid: "beanFactory"
      methodExercised:
        expression: "getBeanDefinition(beanName:beanName):beanDefinition"
        throwsExceptions:
        - "org.springframework.beans.factory.NoSuchBeanDefinitionException"
    - type: "LOCAL_VARIABLE"
      name: "attributes"
      modelFingerprint: "083BC01C0F959132AF776197E13E3465"
      valueUuid: "beanDefinition"
      methodExercised:
        expression: "getAttribute(name:string):object"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "203271D80776BB1AAFF802A68D05EB2E"
      valueUuid: "object"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "beanName1"
      valueType: "java.lang.String"
      uuid: "beanName"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "beanName1"
      valueType: "java.lang.String"
      uuid: "beanName"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.BeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "BASIC"
      content: !<regular>
        value: "beanName1"
      valueType: "java.lang.String"
      uuid: "beanName"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.BeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.context.properties.bind.BindMethod"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "object"
      explicitCastNeeded: true
    branches:
    - lineNumber: 45
      expression: "!beanFactory.containsBeanDefinition(beanName)"
      range: "(45,11)-(45,55)"
      evaluatedAs: false
    calledSomeStaticInternalMethod: true
- method:
    name: "get"
    sourceCodeSignature: "BindMethod get(BeanDefinitionRegistry beanDefinitionRegistry,\
      \ String beanName)"
    returnType: "org.springframework.boot.context.properties.bind.BindMethod"
    parameters:
    - name: "beanDefinitionRegistry"
      type: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
    - name: "beanName"
      type: "java.lang.String"
    instructionFingerprint: "24BDCAD9AD7D32F432E9CF7C1BDCCDCA"
  paths:
  - pathId: "path1"
    testPathName: "get2WhenBeanDefinitionRegistryNotContainsBeanDefinitionBeanName"
    modelFingerprint: "CE9DD0D92208F5DE14BB28A0010BA93C"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "beanDefinitionRegistry"
      modelFingerprint: "F394445B818426FCF6A9D1AC8D32B3C9"
      valueUuid: "beanDefinitionRegistry"
    - type: "INPUT"
      name: "beanName"
      modelFingerprint: "CF78E67EF6D4AB290170629993228478"
      valueUuid: "beanName"
    - type: "LOCAL_VARIABLE"
      name: "beanDefinitionRegistry"
      modelFingerprint: "1B8D58FE8BE33984B19A99119D790A0E"
      valueUuid: "beanDefinitionRegistry"
      methodExercised:
        expression: "containsBeanDefinition(beanName:beanName):boolean1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "63A8CEF7292ADD25196AC5945BC8BC31"
      valueUuid: "bindMethod"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "beanDefinitionRegistry"
    - sapientType: "BASIC"
      content: !<regular>
        value: "beanName1"
      valueType: "java.lang.String"
      uuid: "beanName"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "beanDefinitionRegistry"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "beanName1"
      valueType: "java.lang.String"
      uuid: "beanName"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod"
      fixed: true
    branches:
    - lineNumber: 49
      expression: "!beanDefinitionRegistry.containsBeanDefinition(beanName)"
      range: "(49,11)-(49,66)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "get2WhenBeanDefinitionRegistryContainsBeanDefinitionBeanName"
    modelFingerprint: "832795C0991B126E63F306046B56545A"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "beanDefinitionRegistry"
      modelFingerprint: "F394445B818426FCF6A9D1AC8D32B3C9"
      valueUuid: "beanDefinitionRegistry"
    - type: "INPUT"
      name: "beanName"
      modelFingerprint: "CF78E67EF6D4AB290170629993228478"
      valueUuid: "beanName"
    - type: "LOCAL_VARIABLE"
      name: "beanDefinitionRegistry"
      modelFingerprint: "1681DE3C522C86FEBFFEDADA3653B133"
      valueUuid: "beanDefinitionRegistry"
      methodExercised:
        expression: "containsBeanDefinition(beanName:beanName):boolean1"
    - type: "LOCAL_VARIABLE"
      name: "beanDefinitionRegistry"
      modelFingerprint: "63736476C02F411BB13120C1559BE0D6"
      valueUuid: "beanDefinitionRegistry"
      methodExercised:
        expression: "getBeanDefinition(beanName:beanName):beanDefinition"
        throwsExceptions:
        - "org.springframework.beans.factory.NoSuchBeanDefinitionException"
    - type: "LOCAL_VARIABLE"
      name: "attributes"
      modelFingerprint: "083BC01C0F959132AF776197E13E3465"
      valueUuid: "beanDefinition"
      methodExercised:
        expression: "getAttribute(name:string):object"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "203271D80776BB1AAFF802A68D05EB2E"
      valueUuid: "object"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "beanDefinitionRegistry"
    - sapientType: "BASIC"
      content: !<regular>
        value: "beanName1"
      valueType: "java.lang.String"
      uuid: "beanName"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "beanDefinitionRegistry"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "beanName1"
      valueType: "java.lang.String"
      uuid: "beanName"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "beanDefinitionRegistry"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.BeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "BASIC"
      content: !<regular>
        value: "beanName1"
      valueType: "java.lang.String"
      uuid: "beanName"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.BeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.context.properties.bind.BindMethod"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "object"
      explicitCastNeeded: true
    branches:
    - lineNumber: 49
      expression: "!beanDefinitionRegistry.containsBeanDefinition(beanName)"
      range: "(49,11)-(49,66)"
      evaluatedAs: false
    calledSomeStaticInternalMethod: true
- method:
    name: "get"
    sourceCodeSignature: "BindMethod get(AttributeAccessor attributes)"
    returnType: "org.springframework.boot.context.properties.bind.BindMethod"
    parameters:
    - name: "attributes"
      type: "org.springframework.core.AttributeAccessor"
    instructionFingerprint: "9F72D9471FEEFE33BC0526E9A6B2CA56"
  paths:
  - pathId: "path1"
    testPathName: "get3Test"
    modelFingerprint: "EEFD7B0A4ADFA8D4523B8E876810C42C"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "attributes"
      modelFingerprint: "4C42152AA2ECAC629B404134AC39A0C4"
      valueUuid: "attributes"
    - type: "LOCAL_VARIABLE"
      name: "attributes"
      modelFingerprint: "528E5FBA1D95750D202D9C9889E842FD"
      valueUuid: "attributes"
      methodExercised:
        expression: "getAttribute(name:string):object"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "203271D80776BB1AAFF802A68D05EB2E"
      valueUuid: "object"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.core.AttributeAccessor"
      uuid: "attributes"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.AttributeAccessor"
      uuid: "attributes"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.context.properties.bind.BindMethod"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "object"
      explicitCastNeeded: true
- method:
    name: "set"
    sourceCodeSignature: "void set(AttributeAccessor attributes, BindMethod bindMethod)"
    returnType: "void"
    parameters:
    - name: "attributes"
      type: "org.springframework.core.AttributeAccessor"
    - name: "bindMethod"
      type: "org.springframework.boot.context.properties.bind.BindMethod"
    instructionFingerprint: "2E599568E5209EA0F1AE1609DE4FF528"
  paths:
  - pathId: "path1"
    testPathName: "setTest"
    modelFingerprint: "226111B1AED2D4C572F3A68E780DA909"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "attributes"
      modelFingerprint: "4C42152AA2ECAC629B404134AC39A0C4"
      valueUuid: "attributes"
    - type: "INPUT"
      name: "bindMethod"
      modelFingerprint: "6B91717D09B94DB4B6F5CCDB6D8348F6"
      valueUuid: "bindMethod"
    - type: "LOCAL_VARIABLE"
      name: "attributes"
      modelFingerprint: "205E987F25566C4BE9CC46FC4ED9994D"
      valueUuid: "attributes"
      methodExercised:
        expression: "setAttribute(name:string,value:bindMethod):void"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.core.AttributeAccessor"
      uuid: "attributes"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.AttributeAccessor"
      uuid: "attributes"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.context.properties.bind.BindMethod"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
