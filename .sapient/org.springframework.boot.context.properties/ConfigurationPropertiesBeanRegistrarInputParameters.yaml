---
modelFingerprint: "2695645C296BE7A80EC3964D35144B6F"
targetClass:
  fullClassName: "org.springframework.boot.context.properties.ConfigurationPropertiesBeanRegistrar"
methods:
- method:
    name: "register"
    sourceCodeSignature: "void register(Class<?> type)"
    returnType: "void"
    parameters:
    - name: "type"
      type: "java.lang.Class"
    instructionFingerprint: "6C9FB382292CC833ECB7AB3EE8B840E8"
  paths:
  - pathId: "path1"
    testPathName: "registerTest"
    constructorSignature: "<init>(org.springframework.beans.factory.support.BeanDefinitionRegistry)\
      \ : void"
    modelFingerprint: "A51C5FD6B672BE7293938EAD37957CEA"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "280AC326710653999E071AC8EF640C5E"
      valueUuid: "target"
    - type: "INPUT"
      name: "type"
      modelFingerprint: "917962E93E24910C2D3103EEFA23FB8C"
      valueUuid: "type"
    - type: "STATIC"
      name: "MergedAnnotations.class"
      modelFingerprint: "9690F8B91F44D0FFDD490FFF28C819DB"
      valueUuid: "MergedAnnotations.class"
      methodExercised:
        expression: "from(element:type,searchStrategy:Enum-org.springframework.core.annotation.MergedAnnotations$SearchStrategy-TYPE_HIERARCHY):mergedAnnotations"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "79C0E0C1EE7F4CAC3BA9DBC5CD896A76"
      valueUuid: "mergedAnnotations"
      methodExercised:
        expression: "get(annotationType:uniqueUuid1):mergedAnnotation"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "5F143448FFFF5C34FFA43B1D5578DC01"
      methodExercised:
        expression: "register(type:type,annotation:mergedAnnotation):void"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "CHECK_CAST_EXPRESSION_FAILURE"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesBeanRegistrar"
        parameters:
        - name: "registry"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
            uuid: "registry"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBeanRegistrar"
      uuid: "target"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.annotation.MergedAnnotations"
      uuid: "MergedAnnotations.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.annotation.MergedAnnotations"
      uuid: "mergedAnnotations"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "type"
    - sapientType: "ENUM"
      content: !<regular>
        value: "TYPE_HIERARCHY"
      valueType: "org.springframework.core.annotation.MergedAnnotations$SearchStrategy"
      uuid: "Enum-org.springframework.core.annotation.MergedAnnotations$SearchStrategy-TYPE_HIERARCHY"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.annotation.MergedAnnotations"
      uuid: "mergedAnnotations"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.annotation.MergedAnnotation"
      genericValueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "mergedAnnotation"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.context.properties.ConfigurationProperties"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.annotation.MergedAnnotation"
      genericValueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "mergedAnnotation"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "register"
    sourceCodeSignature: "void register(Class<?> type, MergedAnnotation<ConfigurationProperties>\
      \ annotation)"
    returnType: "void"
    parameters:
    - name: "type"
      type: "java.lang.Class"
    - name: "annotation"
      type: "org.springframework.core.annotation.MergedAnnotation"
    instructionFingerprint: "5C524DC4637F0C06A3C40AB69DFCC460"
  paths:
  - pathId: "path1"
    testPathName: "register1WhenContainsBeanDefinitionName"
    constructorSignature: "<init>(org.springframework.beans.factory.support.BeanDefinitionRegistry)\
      \ : void"
    modelFingerprint: "20FF218AC349A0B7EFCBA9E926E4FC24"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "280AC326710653999E071AC8EF640C5E"
      valueUuid: "target"
    - type: "INPUT"
      name: "type"
      modelFingerprint: "37007E986744D9AD18F6620336F71083"
      valueUuid: "type"
    - type: "INPUT"
      name: "annotation"
      modelFingerprint: "68DB6DB3AC6007421F2636F33E835BB4"
      valueUuid: "annotation"
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "69EB68B0CDB53582B440F19C6FE953DB"
      valueUuid: "annotation"
      methodExercised:
        expression: "isPresent():boolean1"
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "EF5690D9B853D7D939E61254DA5EAABD"
      valueUuid: "annotation"
      methodExercised:
        expression: "getString(attributeName:uniqueUuid2):string"
        throwsExceptions:
        - "java.util.NoSuchElementException"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "A91647CB447119BB97CB86EA51675C61"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:string):boolean2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "listableBeanFactory"
      modelFingerprint: "EED04482BF7CB4790E8816043CA5C0F4"
      valueUuid: "registrycheckCast"
      methodExercised:
        expression: "containsBeanDefinition(beanName:string3):boolean4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "CHECK_CAST_EXPRESSION_FAILURE"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesBeanRegistrar"
        parameters:
        - name: "registry"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
            uuid: "registry"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBeanRegistrar"
      uuid: "target"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.annotation.MergedAnnotation"
      genericValueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "annotation"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.annotation.MergedAnnotation"
      genericValueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "annotation"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.annotation.MergedAnnotation"
      genericValueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "annotation"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "prefix"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.ListableBeanFactory"
      uuid: "registrycheckCast"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A-java.lang.Object"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 66
      expression: "annotation.isPresent()"
      range: "(66,19)-(66,40)"
      evaluatedAs: true
      internalMethodName: "getName"
    - lineNumber: 67
      expression: "StringUtils.hasText(prefix)"
      range: "(67,11)-(67,37)"
      evaluatedAs: true
      internalMethodName: "getName"
    - lineNumber: 75
      expression: "beanFactory instanceof ListableBeanFactory listableBeanFactory"
      range: "(75,7)-(75,68)"
      evaluatedAs: true
      internalMethodName: "containsBeanDefinition"
    - lineNumber: 76
      expression: "listableBeanFactory.containsBeanDefinition(name)"
      range: "(76,8)-(76,55)"
      evaluatedAs: true
      internalMethodName: "containsBeanDefinition"
    - lineNumber: 60
      expression: "!containsBeanDefinition(name)"
      range: "(60,7)-(60,35)"
      evaluatedAs: false
  - pathId: "path4"
    testPathName: "register1WhenContainsBeanDefinitionThisBeanFactoryNameAndContainsBeanDefinitionName"
    constructorSignature: "<init>(org.springframework.beans.factory.support.BeanDefinitionRegistry)\
      \ : void"
    modelFingerprint: "AD0110417A07BA94E891A76398026DAE"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "280AC326710653999E071AC8EF640C5E"
      valueUuid: "target"
    - type: "INPUT"
      name: "type"
      modelFingerprint: "37007E986744D9AD18F6620336F71083"
      valueUuid: "type"
    - type: "INPUT"
      name: "annotation"
      modelFingerprint: "68DB6DB3AC6007421F2636F33E835BB4"
      valueUuid: "annotation"
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "69EB68B0CDB53582B440F19C6FE953DB"
      valueUuid: "annotation"
      methodExercised:
        expression: "isPresent():boolean1"
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "EF5690D9B853D7D939E61254DA5EAABD"
      valueUuid: "annotation"
      methodExercised:
        expression: "getString(attributeName:uniqueUuid3):string"
        throwsExceptions:
        - "java.util.NoSuchElementException"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "A91647CB447119BB97CB86EA51675C61"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:string):boolean2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "hierarchicalBeanFactory"
      modelFingerprint: "5B8D9B26FBD209D15DCE45A1DAECD722"
      valueUuid: "registrycheckCast"
      methodExercised:
        expression: "getParentBeanFactory():beanFactory"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "CHECK_CAST_EXPRESSION_FAILURE"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesBeanRegistrar"
        parameters:
        - name: "registry"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
            uuid: "registry"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBeanRegistrar"
      uuid: "target"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.annotation.MergedAnnotation"
      genericValueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "annotation"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.annotation.MergedAnnotation"
      genericValueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "annotation"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.annotation.MergedAnnotation"
      genericValueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "annotation"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "prefix"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.HierarchicalBeanFactory"
      uuid: "registrycheckCast"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.BeanFactory"
      uuid: "beanFactory"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 66
      expression: "annotation.isPresent()"
      range: "(66,19)-(66,40)"
      evaluatedAs: true
      internalMethodName: "getName"
    - lineNumber: 67
      expression: "StringUtils.hasText(prefix)"
      range: "(67,11)-(67,37)"
      evaluatedAs: true
      internalMethodName: "getName"
    - lineNumber: 75
      expression: "beanFactory instanceof ListableBeanFactory listableBeanFactory"
      range: "(75,7)-(75,68)"
      evaluatedAs: false
      internalMethodName: "containsBeanDefinition"
    - lineNumber: 79
      expression: "beanFactory instanceof HierarchicalBeanFactory hierarchicalBeanFactory"
      range: "(79,7)-(79,76)"
      evaluatedAs: true
      internalMethodName: "containsBeanDefinition"
    - lineNumber: 71
      expression: "containsBeanDefinition(this.beanFactory, name)"
      range: "(71,10)-(71,55)"
      evaluatedAs: true
      internalMethodName: "containsBeanDefinition"
    - lineNumber: 60
      expression: "!containsBeanDefinition(name)"
      range: "(60,7)-(60,35)"
      evaluatedAs: false
  - pathId: "path8"
    testPathName: "register1WhenBeanFactoryNotInstanceOfHierarchicalBeanFactoryAndContainsBeanDefinitionNotNameAndBindMethodNotEqualsBindM"
    constructorSignature: "<init>(org.springframework.beans.factory.support.BeanDefinitionRegistry)\
      \ : void"
    modelFingerprint: "440712CB3BD56F084BDC1FECBF1B9E32"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6A831F1BE5780798E78E8F233575B742"
      valueUuid: "target"
    - type: "INPUT"
      name: "type"
      modelFingerprint: "37007E986744D9AD18F6620336F71083"
      valueUuid: "type"
    - type: "INPUT"
      name: "annotation"
      modelFingerprint: "68DB6DB3AC6007421F2636F33E835BB4"
      valueUuid: "annotation"
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "7D76C18EFB1E4D5161D4AC13CA667BA0"
      valueUuid: "annotation"
      methodExercised:
        expression: "isPresent():boolean1"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "82EA235039F6FEF096EB3277C053BA8C"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:string):boolean2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "9A8B5A6CC1A1CA3ACC459FC620F5B5C3"
      valueUuid: "annotation"
      methodExercised:
        expression: "isPresent():boolean5"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "C5643FF157EA2719474151A09523254B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "state(expression:boolean5,messageSupplier:uniqueUuid4):void"
        staticAccess: true
    - type: "STATIC"
      name: "ConfigurationPropertiesBean.class"
      modelFingerprint: "FD09BF23DE5F272563A97D619D2AAB9B"
      valueUuid: "ConfigurationPropertiesBean.class"
      methodExercised:
        expression: "deduceBindMethod(type:type):bindMethod"
        staticAccess: true
    - type: "STATIC"
      name: "BindMethodAttribute.class"
      modelFingerprint: "1786B7186BAC987F892F67394B671E3E"
      valueUuid: "BindMethodAttribute.class"
      methodExercised:
        expression: "set(attributes:rootBeanDefinition,bindMethod:bindMethod):void2"
        staticAccess: true
    - type: "FIELD"
      name: "registry"
      modelFingerprint: "2924F4C798D3FC441E5E061AF1FEE53C"
      valueUuid: "registry"
      methodExercised:
        expression: "registerBeanDefinition(beanName:string2,beanDefinition:rootBeanDefinition):void3"
        throwsExceptions:
        - "org.springframework.beans.factory.BeanDefinitionStoreException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "CHECK_CAST_EXPRESSION_FAILURE"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesBeanRegistrar"
        parameters:
        - name: "registry"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
            uuid: "registry"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBeanRegistrar"
      uuid: "target"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.annotation.MergedAnnotation"
      genericValueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "annotation"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.annotation.MergedAnnotation"
      genericValueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "annotation"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.annotation.MergedAnnotation"
      genericValueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "annotation"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean5"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean5"
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uniqueUuid4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "ConfigurationPropertiesBean.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.BindMethodAttribute"
      uuid: "BindMethodAttribute.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.beans.factory.support.RootBeanDefinition"
      uuid: "rootBeanDefinition"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "ANY"
      valueType: "org.springframework.beans.factory.support.RootBeanDefinition"
      uuid: "rootBeanDefinition"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 66
      expression: "annotation.isPresent()"
      range: "(66,19)-(66,40)"
      evaluatedAs: false
      internalMethodName: "getName"
    - lineNumber: 67
      expression: "StringUtils.hasText(prefix)"
      range: "(67,11)-(67,37)"
      evaluatedAs: false
      internalMethodName: "getName"
    - lineNumber: 75
      expression: "beanFactory instanceof ListableBeanFactory listableBeanFactory"
      range: "(75,7)-(75,68)"
      evaluatedAs: false
      internalMethodName: "containsBeanDefinition"
    - lineNumber: 79
      expression: "beanFactory instanceof HierarchicalBeanFactory hierarchicalBeanFactory"
      range: "(79,7)-(79,76)"
      evaluatedAs: false
      internalMethodName: "containsBeanDefinition"
    - lineNumber: 60
      expression: "!containsBeanDefinition(name)"
      range: "(60,7)-(60,35)"
      evaluatedAs: true
    - lineNumber: 96
      expression: "bindMethod == BindMethod.VALUE_OBJECT"
      range: "(96,7)-(96,43)"
      evaluatedAs: false
      internalMethodName: "createBeanDefinition"
  - pathId: "path2"
    testPathName: "register1WhenBindMethodEqualsBindMethodVALUE_OBJECT"
    constructorSignature: "<init>(org.springframework.beans.factory.support.BeanDefinitionRegistry)\
      \ : void"
    modelFingerprint: "8D326FBC609C89C9FE88737EF4E34199"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6A831F1BE5780798E78E8F233575B742"
      valueUuid: "target"
    - type: "INPUT"
      name: "type"
      modelFingerprint: "37007E986744D9AD18F6620336F71083"
      valueUuid: "type"
    - type: "INPUT"
      name: "annotation"
      modelFingerprint: "68DB6DB3AC6007421F2636F33E835BB4"
      valueUuid: "annotation"
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "69EB68B0CDB53582B440F19C6FE953DB"
      valueUuid: "annotation"
      methodExercised:
        expression: "isPresent():boolean1"
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "EF5690D9B853D7D939E61254DA5EAABD"
      valueUuid: "annotation"
      methodExercised:
        expression: "getString(attributeName:uniqueUuid5):string"
        throwsExceptions:
        - "java.util.NoSuchElementException"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "A91647CB447119BB97CB86EA51675C61"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:string):boolean2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "listableBeanFactory"
      modelFingerprint: "CEE66C456670E0B41E8841A48970E575"
      valueUuid: "registrycheckCast"
      methodExercised:
        expression: "containsBeanDefinition(beanName:string3):boolean4"
    - type: "LOCAL_VARIABLE"
      name: "annotation"
      modelFingerprint: "9A8B5A6CC1A1CA3ACC459FC620F5B5C3"
      valueUuid: "annotation"
      methodExercised:
        expression: "isPresent():boolean6"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "C5643FF157EA2719474151A09523254B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "state(expression:boolean6,messageSupplier:uniqueUuid6):void"
        staticAccess: true
    - type: "STATIC"
      name: "ConfigurationPropertiesBean.class"
      modelFingerprint: "315081A0C554CCA297FA42B8D609A4F8"
      valueUuid: "ConfigurationPropertiesBean.class"
      methodExercised:
        expression: "deduceBindMethod(type:type):bindMethod"
        staticAccess: true
    - type: "STATIC"
      name: "BindMethodAttribute.class"
      modelFingerprint: "A415D43EE0FB054258689C6FC7BDAC73"
      valueUuid: "BindMethodAttribute.class"
      methodExercised:
        expression: "set(attributes:rootBeanDefinition,bindMethod:bindMethod):void2"
        staticAccess: true
    - type: "FIELD"
      name: "registry"
      modelFingerprint: "CB898BD48741E0A760C1028E9DB29834"
      valueUuid: "registry"
      methodExercised:
        expression: "registerBeanDefinition(beanName:string3,beanDefinition:rootBeanDefinition):void4"
        throwsExceptions:
        - "org.springframework.beans.factory.BeanDefinitionStoreException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "CHECK_CAST_EXPRESSION_FAILURE"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesBeanRegistrar"
        parameters:
        - name: "registry"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
            uuid: "registry"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBeanRegistrar"
      uuid: "target"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.annotation.MergedAnnotation"
      genericValueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "annotation"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.annotation.MergedAnnotation"
      genericValueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "annotation"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.annotation.MergedAnnotation"
      genericValueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "annotation"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "prefix"
      valueType: "java.lang.String"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.ListableBeanFactory"
      uuid: "registrycheckCast"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A-java.lang.Object"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.annotation.MergedAnnotation"
      genericValueType: "org.springframework.boot.context.properties.ConfigurationProperties"
      uuid: "annotation"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean6"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean6"
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uniqueUuid6"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
      uuid: "ConfigurationPropertiesBean.class"
    - sapientType: "ENUM"
      content: !<regular>
        value: "VALUE_OBJECT"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.BindMethodAttribute"
      uuid: "BindMethodAttribute.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.beans.factory.support.RootBeanDefinition"
      uuid: "rootBeanDefinition"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "VALUE_OBJECT"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A-java.lang.Object"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "ANY"
      valueType: "org.springframework.beans.factory.support.RootBeanDefinition"
      uuid: "rootBeanDefinition"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 66
      expression: "annotation.isPresent()"
      range: "(66,19)-(66,40)"
      evaluatedAs: true
      internalMethodName: "getName"
    - lineNumber: 67
      expression: "StringUtils.hasText(prefix)"
      range: "(67,11)-(67,37)"
      evaluatedAs: true
      internalMethodName: "getName"
    - lineNumber: 75
      expression: "beanFactory instanceof ListableBeanFactory listableBeanFactory"
      range: "(75,7)-(75,68)"
      evaluatedAs: true
      internalMethodName: "containsBeanDefinition"
    - lineNumber: 76
      expression: "listableBeanFactory.containsBeanDefinition(name)"
      range: "(76,8)-(76,55)"
      evaluatedAs: false
      internalMethodName: "containsBeanDefinition"
    - lineNumber: 79
      expression: "beanFactory instanceof HierarchicalBeanFactory hierarchicalBeanFactory"
      range: "(79,7)-(79,76)"
      evaluatedAs: false
      internalMethodName: "containsBeanDefinition"
    - lineNumber: 60
      expression: "!containsBeanDefinition(name)"
      range: "(60,7)-(60,35)"
      evaluatedAs: true
    - lineNumber: 96
      expression: "bindMethod == BindMethod.VALUE_OBJECT"
      range: "(96,7)-(96,43)"
      evaluatedAs: true
      internalMethodName: "createBeanDefinition"
