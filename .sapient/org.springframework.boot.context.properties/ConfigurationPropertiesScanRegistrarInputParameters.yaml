---
modelFingerprint: "839662DA777CE7D8A050B5CE7EC38FD8"
targetClass:
  fullClassName: "org.springframework.boot.context.properties.ConfigurationPropertiesScanRegistrar"
methods:
- method:
    name: "registerBeanDefinitions"
    sourceCodeSignature: "void registerBeanDefinitions(AnnotationMetadata importingClassMetadata,\
      \ BeanDefinitionRegistry registry)"
    returnType: "void"
    parameters:
    - name: "importingClassMetadata"
      type: "org.springframework.core.type.AnnotationMetadata"
    - name: "registry"
      type: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.ClassNotFoundException"
    instructionFingerprint: "E321DD73B2E25C741185103CCB1FA258"
  paths:
  - pathId: "path1"
    testPathName: "registerBeanDefinitionsWhenIsComponentType"
    constructorSignature: "<init>(org.springframework.core.env.Environment,org.springframework.core.io.ResourceLoader)\
      \ : void"
    modelFingerprint: "E0CC4640C1875308A1D763A7389B6D71"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "C7823B98312BCCA9168023741EA1C66D"
      valueUuid: "target"
    - type: "INPUT"
      name: "importingClassMetadata"
      modelFingerprint: "B122F267E9AE3F017B7DA8C06952978F"
      valueUuid: "importingClassMetadata"
    - type: "INPUT"
      name: "registry"
      modelFingerprint: "6307DBD7728684407BE44EA47124BF7D"
      valueUuid: "registry"
    - type: "LOCAL_VARIABLE"
      name: "metadata"
      modelFingerprint: "AF816F966988D15C86DFB7A3EE8AA66D"
      valueUuid: "importingClassMetadata"
      methodExercised:
        expression: "getAnnotationAttributes(annotationName:string):map"
    - type: "STATIC"
      name: "AnnotationAttributes.class"
      modelFingerprint: "5E807375B8B16F1DE666213ADD237A79"
      valueUuid: "AnnotationAttributes.class"
      methodExercised:
        expression: "fromMap(map:map):annotationAttributes"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "attributes"
      modelFingerprint: "8642A2A8B80CFC636C36CBFA7EF6A81F"
      valueUuid: "annotationAttributes"
      methodExercised:
        expression: "getStringArray(attributeName:uniqueUuid1):stringArray"
    - type: "LOCAL_VARIABLE"
      name: "attributes"
      modelFingerprint: "CD0C127CC47BB6E45453B771F5EF86F7"
      valueUuid: "annotationAttributes"
      methodExercised:
        expression: "getClassArray(attributeName:uniqueUuid2):classArray"
    - type: "STATIC"
      name: "ClassUtils.class"
      modelFingerprint: "1F9AE2300781F25B632937764F876547"
      valueUuid: "ClassUtils.class"
      methodExercised:
        expression: "getPackageName(clazz:class):string2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "metadata"
      modelFingerprint: "E9B4A40616243691A3F3FAE360C6572A"
      valueUuid: "importingClassMetadata"
      methodExercised:
        expression: "getClassName():string3"
    - type: "STATIC"
      name: "ClassUtils.class"
      modelFingerprint: "EEBC21902AC055FE71AC0E052372BFC8"
      valueUuid: "ClassUtils.class"
      methodExercised:
        expression: "getPackageName(fqClassName:string3):string4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "scanner"
      modelFingerprint: "72776A406F67B569E7D1707B60493F76"
      valueUuid: "classPathScanningCandidateComponentProvider"
      methodExercised:
        expression: "setResourceLoader(resourceLoader:resourceLoader):void2"
    - type: "LOCAL_VARIABLE"
      name: "scanner"
      modelFingerprint: "4AD03E3B34F7A4BC7288675801854FFD"
      valueUuid: "classPathScanningCandidateComponentProvider"
      methodExercised:
        expression: "addIncludeFilter(includeFilter:annotationTypeFilter):void3"
    - type: "LOCAL_VARIABLE"
      name: "scanner"
      modelFingerprint: "7C5D1674AA6EBA6C72E235E0FD3F5395"
      valueUuid: "classPathScanningCandidateComponentProvider"
      methodExercised:
        expression: "addExcludeFilter(excludeFilter:typeExcludeFilter):void5"
    - type: "LOCAL_VARIABLE"
      name: "scanner"
      modelFingerprint: "B4DD6813328195B6192653C48C0B1DBC"
      valueUuid: "classPathScanningCandidateComponentProvider"
      methodExercised:
        expression: "findCandidateComponents(basePackage:object):set"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "9DC03AA313DA842156EC474794D80FD7"
      valueUuid: "object2"
      methodExercised:
        expression: "getBeanClassName():string5"
    - type: "STATIC"
      name: "ClassUtils.class"
      modelFingerprint: "B4A336654C3F438434649F85E30625F9"
      valueUuid: "ClassUtils.class"
      methodExercised:
        expression: "forName(name:string5,classLoader:uniqueUuid8):class2"
        throwsExceptions:
        - "java.lang.ClassNotFoundException"
        - "java.lang.LinkageError"
        staticAccess: true
    - type: "STATIC"
      name: "MergedAnnotations.class"
      modelFingerprint: "1E6C67C4CC2D41FA070B293C5756753D"
      valueUuid: "MergedAnnotations.class"
      methodExercised:
        expression: "from(element:class2,searchStrategy:Enum-org.springframework.core.annotation.MergedAnnotations$SearchStrategy-TYPE_HIERARCHY):mergedAnnotations"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B75294FF0A74BBE8B98EFAF46F0E53A2"
      valueUuid: "mergedAnnotations"
      methodExercised:
        expression: "isPresent(annotationType:uniqueUuid9):boolean7"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.core.annotation.AnnotationAttributes.getStringArray(java.lang.String)\
        \ : java.lang.String[]"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesScanRegistrar"
        parameters:
        - name: "environment"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.Environment"
            uuid: "environment"
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesScanRegistrar"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.type.AnnotationMetadata"
      uuid: "importingClassMetadata"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.type.AnnotationMetadata"
      uuid: "importingClassMetadata"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.context.properties.ConfigurationPropertiesScan"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.annotation.AnnotationAttributes"
      uuid: "AnnotationAttributes.class"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "org.springframework.core.annotation.AnnotationAttributes"
      uuid: "annotationAttributes"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "org.springframework.core.annotation.AnnotationAttributes"
      uuid: "annotationAttributes"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
      collectionUuid: "annotationAttributes"
    - sapientType: "BASIC"
      content: !<regular>
        value: "basePackages"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "org.springframework.core.annotation.AnnotationAttributes"
      uuid: "annotationAttributes"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "classArray"
      collectionUuid: "annotationAttributes"
    - sapientType: "BASIC"
      content: !<regular>
        value: "basePackageClasses"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getPackageName1"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.type.AnnotationMetadata"
      uuid: "importingClassMetadata"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getClassName1"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getPackageName1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getClassName1"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider"
        parameters:
        - name: "useDefaultFilters"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "uniqueUuid7"
            fixed: true
        propertiesMap:
          environment:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.Environment"
            uuid: "environment"
      valueType: "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider"
      uuid: "classPathScanningCandidateComponentProvider"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider"
        parameters:
        - name: "useDefaultFilters"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "uniqueUuid7"
            fixed: true
        propertiesMap:
          environment:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.Environment"
            uuid: "environment"
      valueType: "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider"
      uuid: "classPathScanningCandidateComponentProvider"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.core.type.filter.AnnotationTypeFilter"
      uuid: "annotationTypeFilter"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider"
        parameters:
        - name: "useDefaultFilters"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "uniqueUuid7"
            fixed: true
        propertiesMap:
          environment:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.Environment"
            uuid: "environment"
      valueType: "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider"
      uuid: "classPathScanningCandidateComponentProvider"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.TypeExcludeFilter"
      uuid: "typeExcludeFilter"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider"
        parameters:
        - name: "useDefaultFilters"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "uniqueUuid7"
            fixed: true
        propertiesMap:
          environment:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.Environment"
            uuid: "environment"
      valueType: "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider"
      uuid: "classPathScanningCandidateComponentProvider"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "org.springframework.beans.factory.config.BeanDefinition"
      uuid: "set"
    - sapientType: "BASIC"
      content: !<regular>
        value: "basePackage1"
      valueType: "java.lang.String"
      uuid: "object"
      collectionUuid: "linkedHashSet"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.BeanDefinition"
      uuid: "object2"
      collectionUuid: "set"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanClassName1"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanClassName1"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "NULL"
      uuid: "uniqueUuid8"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.annotation.MergedAnnotations"
      uuid: "MergedAnnotations.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.annotation.MergedAnnotations"
      uuid: "mergedAnnotations"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class2"
    - sapientType: "ENUM"
      content: !<regular>
        value: "TYPE_HIERARCHY"
      valueType: "org.springframework.core.annotation.MergedAnnotations$SearchStrategy"
      uuid: "Enum-org.springframework.core.annotation.MergedAnnotations$SearchStrategy-TYPE_HIERARCHY"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.annotation.MergedAnnotations"
      uuid: "mergedAnnotations"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean7"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.stereotype.Component"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.stereotype.Component"
      uuid: "uniqueUuid9"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 71
      expression: "for-each(basePackageClasses)"
      range: "(71,36)-(71,53)"
      evaluatedAs: true
      internalMethodName: "getPackagesToScan"
    - lineNumber: 74
      expression: "packagesToScan.isEmpty()"
      range: "(74,7)-(74,30)"
      evaluatedAs: true
      internalMethodName: "getPackagesToScan"
    - lineNumber: 84
      expression: "for-each(packages)"
      range: "(84,29)-(84,36)"
      evaluatedAs: true
      internalMethodName: "scan"
    - lineNumber: 85
      expression: "for-each(scanner.findCandidateComponents(basePackage))"
      range: "(85,36)-(85,79)"
      evaluatedAs: true
      internalMethodName: "scan"
    - lineNumber: 118
      expression: "MergedAnnotations.from(type, SearchStrategy.TYPE_HIERARCHY).isPresent(Component.class)"
      range: "(118,10)-(118,95)"
      evaluatedAs: true
      internalMethodName: "isComponent"
    - lineNumber: 112
      expression: "!isComponent(type)"
      range: "(112,7)-(112,24)"
      evaluatedAs: false
      internalMethodName: "register"
  - pathId: "path2"
    testPathName: "registerBeanDefinitionsWhenIsComponentNotType"
    constructorSignature: "<init>(org.springframework.core.env.Environment,org.springframework.core.io.ResourceLoader)\
      \ : void"
    modelFingerprint: "0B69620120119E70AB0A182AE93B0C11"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "C7823B98312BCCA9168023741EA1C66D"
      valueUuid: "target"
    - type: "INPUT"
      name: "importingClassMetadata"
      modelFingerprint: "B122F267E9AE3F017B7DA8C06952978F"
      valueUuid: "importingClassMetadata"
    - type: "INPUT"
      name: "registry"
      modelFingerprint: "6307DBD7728684407BE44EA47124BF7D"
      valueUuid: "registry"
    - type: "LOCAL_VARIABLE"
      name: "metadata"
      modelFingerprint: "AF816F966988D15C86DFB7A3EE8AA66D"
      valueUuid: "importingClassMetadata"
      methodExercised:
        expression: "getAnnotationAttributes(annotationName:string):map"
    - type: "STATIC"
      name: "AnnotationAttributes.class"
      modelFingerprint: "5E807375B8B16F1DE666213ADD237A79"
      valueUuid: "AnnotationAttributes.class"
      methodExercised:
        expression: "fromMap(map:map):annotationAttributes"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "attributes"
      modelFingerprint: "8642A2A8B80CFC636C36CBFA7EF6A81F"
      valueUuid: "annotationAttributes"
      methodExercised:
        expression: "getStringArray(attributeName:uniqueUuid10):stringArray"
    - type: "LOCAL_VARIABLE"
      name: "attributes"
      modelFingerprint: "CD0C127CC47BB6E45453B771F5EF86F7"
      valueUuid: "annotationAttributes"
      methodExercised:
        expression: "getClassArray(attributeName:uniqueUuid11):classArray"
    - type: "STATIC"
      name: "ClassUtils.class"
      modelFingerprint: "1F9AE2300781F25B632937764F876547"
      valueUuid: "ClassUtils.class"
      methodExercised:
        expression: "getPackageName(clazz:class):string2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "metadata"
      modelFingerprint: "E9B4A40616243691A3F3FAE360C6572A"
      valueUuid: "importingClassMetadata"
      methodExercised:
        expression: "getClassName():string3"
    - type: "STATIC"
      name: "ClassUtils.class"
      modelFingerprint: "EEBC21902AC055FE71AC0E052372BFC8"
      valueUuid: "ClassUtils.class"
      methodExercised:
        expression: "getPackageName(fqClassName:string3):string4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "scanner"
      modelFingerprint: "72776A406F67B569E7D1707B60493F76"
      valueUuid: "classPathScanningCandidateComponentProvider"
      methodExercised:
        expression: "setResourceLoader(resourceLoader:resourceLoader):void2"
    - type: "LOCAL_VARIABLE"
      name: "scanner"
      modelFingerprint: "4AD03E3B34F7A4BC7288675801854FFD"
      valueUuid: "classPathScanningCandidateComponentProvider"
      methodExercised:
        expression: "addIncludeFilter(includeFilter:annotationTypeFilter):void3"
    - type: "LOCAL_VARIABLE"
      name: "scanner"
      modelFingerprint: "7C5D1674AA6EBA6C72E235E0FD3F5395"
      valueUuid: "classPathScanningCandidateComponentProvider"
      methodExercised:
        expression: "addExcludeFilter(excludeFilter:typeExcludeFilter):void5"
    - type: "LOCAL_VARIABLE"
      name: "scanner"
      modelFingerprint: "B4DD6813328195B6192653C48C0B1DBC"
      valueUuid: "classPathScanningCandidateComponentProvider"
      methodExercised:
        expression: "findCandidateComponents(basePackage:object):set"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "9DC03AA313DA842156EC474794D80FD7"
      valueUuid: "object2"
      methodExercised:
        expression: "getBeanClassName():string5"
    - type: "STATIC"
      name: "ClassUtils.class"
      modelFingerprint: "B4A336654C3F438434649F85E30625F9"
      valueUuid: "ClassUtils.class"
      methodExercised:
        expression: "forName(name:string5,classLoader:uniqueUuid17):class2"
        throwsExceptions:
        - "java.lang.ClassNotFoundException"
        - "java.lang.LinkageError"
        staticAccess: true
    - type: "STATIC"
      name: "MergedAnnotations.class"
      modelFingerprint: "1E6C67C4CC2D41FA070B293C5756753D"
      valueUuid: "MergedAnnotations.class"
      methodExercised:
        expression: "from(element:class2,searchStrategy:Enum-org.springframework.core.annotation.MergedAnnotations$SearchStrategy-TYPE_HIERARCHY):mergedAnnotations"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "D5589DA801A1865A96FF5EC5076343EB"
      valueUuid: "mergedAnnotations"
      methodExercised:
        expression: "isPresent(annotationType:uniqueUuid18):boolean7"
    - type: "LOCAL_VARIABLE"
      name: "registrar"
      modelFingerprint: "F8CC6DA68F61310F3353750580BEC5DA"
      valueUuid: "configurationPropertiesBeanRegistrar"
      methodExercised:
        expression: "register(type:class2):void6"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.core.annotation.AnnotationAttributes.getStringArray(java.lang.String)\
        \ : java.lang.String[]"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesScanRegistrar"
        parameters:
        - name: "environment"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.Environment"
            uuid: "environment"
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesScanRegistrar"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.type.AnnotationMetadata"
      uuid: "importingClassMetadata"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.type.AnnotationMetadata"
      uuid: "importingClassMetadata"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.context.properties.ConfigurationPropertiesScan"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.annotation.AnnotationAttributes"
      uuid: "AnnotationAttributes.class"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "org.springframework.core.annotation.AnnotationAttributes"
      uuid: "annotationAttributes"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "org.springframework.core.annotation.AnnotationAttributes"
      uuid: "annotationAttributes"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
      collectionUuid: "annotationAttributes"
    - sapientType: "BASIC"
      content: !<regular>
        value: "basePackages"
      valueType: "java.lang.String"
      uuid: "uniqueUuid10"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "org.springframework.core.annotation.AnnotationAttributes"
      uuid: "annotationAttributes"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "classArray"
      collectionUuid: "annotationAttributes"
    - sapientType: "BASIC"
      content: !<regular>
        value: "basePackageClasses"
      valueType: "java.lang.String"
      uuid: "uniqueUuid11"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getPackageName1"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.type.AnnotationMetadata"
      uuid: "importingClassMetadata"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getClassName1"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getPackageName1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getClassName1"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider"
        parameters:
        - name: "useDefaultFilters"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "uniqueUuid16"
            fixed: true
        propertiesMap:
          environment:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.Environment"
            uuid: "environment"
      valueType: "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider"
      uuid: "classPathScanningCandidateComponentProvider"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider"
        parameters:
        - name: "useDefaultFilters"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "uniqueUuid16"
            fixed: true
        propertiesMap:
          environment:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.Environment"
            uuid: "environment"
      valueType: "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider"
      uuid: "classPathScanningCandidateComponentProvider"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.core.type.filter.AnnotationTypeFilter"
      uuid: "annotationTypeFilter"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider"
        parameters:
        - name: "useDefaultFilters"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "uniqueUuid16"
            fixed: true
        propertiesMap:
          environment:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.Environment"
            uuid: "environment"
      valueType: "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider"
      uuid: "classPathScanningCandidateComponentProvider"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.TypeExcludeFilter"
      uuid: "typeExcludeFilter"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider"
        parameters:
        - name: "useDefaultFilters"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "uniqueUuid16"
            fixed: true
        propertiesMap:
          environment:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.Environment"
            uuid: "environment"
      valueType: "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider"
      uuid: "classPathScanningCandidateComponentProvider"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "org.springframework.beans.factory.config.BeanDefinition"
      uuid: "set"
    - sapientType: "BASIC"
      content: !<regular>
        value: "basePackage1"
      valueType: "java.lang.String"
      uuid: "object"
      collectionUuid: "linkedHashSet"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.BeanDefinition"
      uuid: "object2"
      collectionUuid: "set"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanClassName1"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanClassName1"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "NULL"
      uuid: "uniqueUuid17"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.annotation.MergedAnnotations"
      uuid: "MergedAnnotations.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.annotation.MergedAnnotations"
      uuid: "mergedAnnotations"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class2"
    - sapientType: "ENUM"
      content: !<regular>
        value: "TYPE_HIERARCHY"
      valueType: "org.springframework.core.annotation.MergedAnnotations$SearchStrategy"
      uuid: "Enum-org.springframework.core.annotation.MergedAnnotations$SearchStrategy-TYPE_HIERARCHY"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.annotation.MergedAnnotations"
      uuid: "mergedAnnotations"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean7"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.stereotype.Component"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.stereotype.Component"
      uuid: "uniqueUuid18"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesBeanRegistrar"
        parameters:
        - name: "registry"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
            uuid: "registry"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBeanRegistrar"
      uuid: "configurationPropertiesBeanRegistrar"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class2"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 71
      expression: "for-each(basePackageClasses)"
      range: "(71,36)-(71,53)"
      evaluatedAs: true
      internalMethodName: "getPackagesToScan"
    - lineNumber: 74
      expression: "packagesToScan.isEmpty()"
      range: "(74,7)-(74,30)"
      evaluatedAs: true
      internalMethodName: "getPackagesToScan"
    - lineNumber: 84
      expression: "for-each(packages)"
      range: "(84,29)-(84,36)"
      evaluatedAs: true
      internalMethodName: "scan"
    - lineNumber: 85
      expression: "for-each(scanner.findCandidateComponents(basePackage))"
      range: "(85,36)-(85,79)"
      evaluatedAs: true
      internalMethodName: "scan"
    - lineNumber: 118
      expression: "MergedAnnotations.from(type, SearchStrategy.TYPE_HIERARCHY).isPresent(Component.class)"
      range: "(118,10)-(118,95)"
      evaluatedAs: false
      internalMethodName: "isComponent"
    - lineNumber: 112
      expression: "!isComponent(type)"
      range: "(112,7)-(112,24)"
      evaluatedAs: true
      internalMethodName: "register"
  - pathId: "path8"
    testPathName: "registerBeanDefinitionsWhenCaughtClassNotFoundException"
    constructorSignature: "<init>(org.springframework.core.env.Environment,org.springframework.core.io.ResourceLoader)\
      \ : void"
    modelFingerprint: "36F9F9FEAAD4AA24DED12A50C096EA4C"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "C7823B98312BCCA9168023741EA1C66D"
      valueUuid: "target"
    - type: "INPUT"
      name: "importingClassMetadata"
      modelFingerprint: "B122F267E9AE3F017B7DA8C06952978F"
      valueUuid: "importingClassMetadata"
    - type: "INPUT"
      name: "registry"
      modelFingerprint: "6307DBD7728684407BE44EA47124BF7D"
      valueUuid: "registry"
    - type: "LOCAL_VARIABLE"
      name: "metadata"
      modelFingerprint: "AF816F966988D15C86DFB7A3EE8AA66D"
      valueUuid: "importingClassMetadata"
      methodExercised:
        expression: "getAnnotationAttributes(annotationName:string):map"
    - type: "STATIC"
      name: "AnnotationAttributes.class"
      modelFingerprint: "5E807375B8B16F1DE666213ADD237A79"
      valueUuid: "AnnotationAttributes.class"
      methodExercised:
        expression: "fromMap(map:map):annotationAttributes"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "attributes"
      modelFingerprint: "8642A2A8B80CFC636C36CBFA7EF6A81F"
      valueUuid: "annotationAttributes"
      methodExercised:
        expression: "getStringArray(attributeName:uniqueUuid19):stringArray"
    - type: "LOCAL_VARIABLE"
      name: "attributes"
      modelFingerprint: "CD0C127CC47BB6E45453B771F5EF86F7"
      valueUuid: "annotationAttributes"
      methodExercised:
        expression: "getClassArray(attributeName:uniqueUuid20):classArray"
    - type: "STATIC"
      name: "ClassUtils.class"
      modelFingerprint: "1F9AE2300781F25B632937764F876547"
      valueUuid: "ClassUtils.class"
      methodExercised:
        expression: "getPackageName(clazz:class):string2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "metadata"
      modelFingerprint: "E9B4A40616243691A3F3FAE360C6572A"
      valueUuid: "importingClassMetadata"
      methodExercised:
        expression: "getClassName():string3"
    - type: "STATIC"
      name: "ClassUtils.class"
      modelFingerprint: "EEBC21902AC055FE71AC0E052372BFC8"
      valueUuid: "ClassUtils.class"
      methodExercised:
        expression: "getPackageName(fqClassName:string3):string4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "scanner"
      modelFingerprint: "72776A406F67B569E7D1707B60493F76"
      valueUuid: "classPathScanningCandidateComponentProvider"
      methodExercised:
        expression: "setResourceLoader(resourceLoader:resourceLoader):void2"
    - type: "LOCAL_VARIABLE"
      name: "scanner"
      modelFingerprint: "4AD03E3B34F7A4BC7288675801854FFD"
      valueUuid: "classPathScanningCandidateComponentProvider"
      methodExercised:
        expression: "addIncludeFilter(includeFilter:annotationTypeFilter):void3"
    - type: "LOCAL_VARIABLE"
      name: "scanner"
      modelFingerprint: "7C5D1674AA6EBA6C72E235E0FD3F5395"
      valueUuid: "classPathScanningCandidateComponentProvider"
      methodExercised:
        expression: "addExcludeFilter(excludeFilter:typeExcludeFilter):void5"
    - type: "LOCAL_VARIABLE"
      name: "scanner"
      modelFingerprint: "B4DD6813328195B6192653C48C0B1DBC"
      valueUuid: "classPathScanningCandidateComponentProvider"
      methodExercised:
        expression: "findCandidateComponents(basePackage:object):set"
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "9DC03AA313DA842156EC474794D80FD7"
      valueUuid: "object2"
      methodExercised:
        expression: "getBeanClassName():string5"
    - type: "STATIC"
      name: "ClassUtils.class"
      modelFingerprint: "B4A336654C3F438434649F85E30625F9"
      valueUuid: "ClassUtils.class"
      methodExercised:
        expression: "forName(name:string5,classLoader:uniqueUuid26):class2"
        throwsExceptions:
        - "java.lang.ClassNotFoundException"
        - "java.lang.LinkageError"
        staticAccess: true
    - type: "STATIC"
      name: "MergedAnnotations.class"
      modelFingerprint: "1E6C67C4CC2D41FA070B293C5756753D"
      valueUuid: "MergedAnnotations.class"
      methodExercised:
        expression: "from(element:class2,searchStrategy:Enum-org.springframework.core.annotation.MergedAnnotations$SearchStrategy-TYPE_HIERARCHY):mergedAnnotations"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "D5589DA801A1865A96FF5EC5076343EB"
      valueUuid: "mergedAnnotations"
      methodExercised:
        expression: "isPresent(annotationType:uniqueUuid27):boolean7"
    - type: "LOCAL_VARIABLE"
      name: "registrar"
      modelFingerprint: "F8CC6DA68F61310F3353750580BEC5DA"
      valueUuid: "configurationPropertiesBeanRegistrar"
      methodExercised:
        expression: "register(type:class2):void6"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.core.annotation.AnnotationAttributes.getStringArray(java.lang.String)\
        \ : java.lang.String[]"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesScanRegistrar"
        parameters:
        - name: "environment"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.Environment"
            uuid: "environment"
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesScanRegistrar"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.type.AnnotationMetadata"
      uuid: "importingClassMetadata"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.type.AnnotationMetadata"
      uuid: "importingClassMetadata"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.context.properties.ConfigurationPropertiesScan"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.annotation.AnnotationAttributes"
      uuid: "AnnotationAttributes.class"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "org.springframework.core.annotation.AnnotationAttributes"
      uuid: "annotationAttributes"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "org.springframework.core.annotation.AnnotationAttributes"
      uuid: "annotationAttributes"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
      collectionUuid: "annotationAttributes"
    - sapientType: "BASIC"
      content: !<regular>
        value: "basePackages"
      valueType: "java.lang.String"
      uuid: "uniqueUuid19"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "org.springframework.core.annotation.AnnotationAttributes"
      uuid: "annotationAttributes"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "classArray"
      collectionUuid: "annotationAttributes"
    - sapientType: "BASIC"
      content: !<regular>
        value: "basePackageClasses"
      valueType: "java.lang.String"
      uuid: "uniqueUuid20"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getPackageName1"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.type.AnnotationMetadata"
      uuid: "importingClassMetadata"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getClassName1"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getPackageName1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getClassName1"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider"
        parameters:
        - name: "useDefaultFilters"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "uniqueUuid25"
            fixed: true
        propertiesMap:
          environment:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.Environment"
            uuid: "environment"
      valueType: "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider"
      uuid: "classPathScanningCandidateComponentProvider"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider"
        parameters:
        - name: "useDefaultFilters"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "uniqueUuid25"
            fixed: true
        propertiesMap:
          environment:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.Environment"
            uuid: "environment"
      valueType: "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider"
      uuid: "classPathScanningCandidateComponentProvider"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.core.type.filter.AnnotationTypeFilter"
      uuid: "annotationTypeFilter"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider"
        parameters:
        - name: "useDefaultFilters"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "uniqueUuid25"
            fixed: true
        propertiesMap:
          environment:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.Environment"
            uuid: "environment"
      valueType: "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider"
      uuid: "classPathScanningCandidateComponentProvider"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.TypeExcludeFilter"
      uuid: "typeExcludeFilter"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider"
        parameters:
        - name: "useDefaultFilters"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "uniqueUuid25"
            fixed: true
        propertiesMap:
          environment:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.Environment"
            uuid: "environment"
      valueType: "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider"
      uuid: "classPathScanningCandidateComponentProvider"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "org.springframework.beans.factory.config.BeanDefinition"
      uuid: "set"
    - sapientType: "BASIC"
      content: !<regular>
        value: "basePackage1"
      valueType: "java.lang.String"
      uuid: "object"
      collectionUuid: "linkedHashSet"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.BeanDefinition"
      uuid: "object2"
      collectionUuid: "set"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanClassName1"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanClassName1"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "NULL"
      uuid: "uniqueUuid26"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.annotation.MergedAnnotations"
      uuid: "MergedAnnotations.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.annotation.MergedAnnotations"
      uuid: "mergedAnnotations"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class2"
    - sapientType: "ENUM"
      content: !<regular>
        value: "TYPE_HIERARCHY"
      valueType: "org.springframework.core.annotation.MergedAnnotations$SearchStrategy"
      uuid: "Enum-org.springframework.core.annotation.MergedAnnotations$SearchStrategy-TYPE_HIERARCHY"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.annotation.MergedAnnotations"
      uuid: "mergedAnnotations"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean7"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.stereotype.Component"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.stereotype.Component"
      uuid: "uniqueUuid27"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.ConfigurationPropertiesBeanRegistrar"
        parameters:
        - name: "registry"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
            uuid: "registry"
      valueType: "org.springframework.boot.context.properties.ConfigurationPropertiesBeanRegistrar"
      uuid: "configurationPropertiesBeanRegistrar"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class2"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 71
      expression: "for-each(basePackageClasses)"
      range: "(71,36)-(71,53)"
      evaluatedAs: true
      internalMethodName: "getPackagesToScan"
    - lineNumber: 74
      expression: "packagesToScan.isEmpty()"
      range: "(74,7)-(74,30)"
      evaluatedAs: true
      internalMethodName: "getPackagesToScan"
    - lineNumber: 84
      expression: "for-each(packages)"
      range: "(84,29)-(84,36)"
      evaluatedAs: true
      internalMethodName: "scan"
    - lineNumber: 85
      expression: "for-each(scanner.findCandidateComponents(basePackage))"
      range: "(85,36)-(85,79)"
      evaluatedAs: true
      internalMethodName: "scan"
    - lineNumber: 118
      expression: "MergedAnnotations.from(type, SearchStrategy.TYPE_HIERARCHY).isPresent(Component.class)"
      range: "(118,10)-(118,95)"
      evaluatedAs: false
      internalMethodName: "isComponent"
    - lineNumber: 112
      expression: "!isComponent(type)"
      range: "(112,7)-(112,24)"
      evaluatedAs: true
      internalMethodName: "register"
    - lineNumber: 106
      expression: "catch-exception (ClassNotFoundException)"
      range: "(106,3)-(106,34)"
      evaluatedAs: true
      internalMethodName: "register"
    catchBlockExercised:
      idExternalInstruction: 49
      id: 1
      catchExceptions:
      - "java.lang.ClassNotFoundException"
