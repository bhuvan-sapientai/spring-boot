---
modelFingerprint: "B5D78126A210C6890C3FC05A95BD6EE7"
targetClass:
  fullClassName: "org.springframework.boot.context.properties.IncompatibleConfigurationFailureAnalyzer"
methods:
- method:
    name: "analyze"
    sourceCodeSignature: "FailureAnalysis analyze(Throwable rootFailure, IncompatibleConfigurationException\
      \ cause)"
    returnType: "org.springframework.boot.diagnostics.FailureAnalysis"
    parameters:
    - name: "rootFailure"
      type: "java.lang.Throwable"
    - name: "cause"
      type: "org.springframework.boot.context.properties.IncompatibleConfigurationException"
    instructionFingerprint: "837F34FA94C43EB684A07892DF9DB07F"
  paths:
  - pathId: "path1"
    testPathName: "analyze2Test"
    constructorSignature: "<init>() : void"
    modelFingerprint: "0E09A014AF8B6DACA940003896485811"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "rootFailure"
      modelFingerprint: "342BEFE484C53ADA99B8405F2B8802F3"
      valueUuid: "rootFailure"
    - type: "INPUT"
      name: "cause"
      modelFingerprint: "D6E961B66104A66817DC8810F91D3AD0"
      valueUuid: "cause"
    - type: "LOCAL_VARIABLE"
      name: "cause"
      modelFingerprint: "1F52E81800222C7CD128E1698AB670E1"
      valueUuid: "cause"
      methodExercised:
        expression: "getIncompatibleKeys():collection"
    - type: "LOCAL_VARIABLE"
      name: "cause"
      modelFingerprint: "138D8F5B2A7BA6CF2C7492B4D42AA911"
      valueUuid: "cause"
      methodExercised:
        expression: "getMessage():string3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5692A7CC59196BD4385DAF99B5FF88F3"
      valueUuid: "failureAnalysis"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.IncompatibleConfigurationFailureAnalyzer"
        parameters: []
      valueType: "org.springframework.boot.context.properties.IncompatibleConfigurationFailureAnalyzer"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "rootFailure"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.IncompatibleConfigurationException"
      uuid: "cause"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.IncompatibleConfigurationException"
      uuid: "cause"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "java.lang.String"
      uuid: "collection"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.IncompatibleConfigurationException"
      uuid: "cause"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getMessage1"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.FailureAnalysis"
        parameters:
        - name: "description"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getMessage1"
            valueType: "java.lang.String"
            uuid: "string3"
        - name: "action"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Review the docs for  and change the configured values."
            valueType: "java.lang.String"
            uuid: "string2"
        - name: "cause"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.IncompatibleConfigurationException"
            uuid: "cause"
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "failureAnalysis"
      fixed: true
