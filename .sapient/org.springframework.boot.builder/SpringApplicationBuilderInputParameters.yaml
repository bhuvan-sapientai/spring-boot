---
modelFingerprint: "7E681CC7BC2294AD8A6BFD3E15028BE6"
targetClass:
  fullClassName: "org.springframework.boot.builder.SpringApplicationBuilder"
methods:
- method:
    name: "createSpringApplication"
    sourceCodeSignature: "SpringApplication createSpringApplication(ResourceLoader\
      \ resourceLoader, Class<?>... sources)"
    returnType: "org.springframework.boot.SpringApplication"
    parameters:
    - name: "resourceLoader"
      type: "org.springframework.core.io.ResourceLoader"
    - name: "sources"
      type: "java.lang.Class[]"
    instructionFingerprint: "5326F43AF87BEA32C5DE44FF1109124B"
  paths:
  - pathId: "path1"
    testPathName: "createSpringApplicationTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "B2E02ECCE43416CB8CDC6ECB1707EEEB"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2A2E3002A1B55AA06DC2CCD760607AC6"
      valueUuid: "target"
    - type: "INPUT"
      name: "resourceLoader"
      modelFingerprint: "FDCEEEDB2A3FBA968DEEBF037704477E"
      valueUuid: "resourceLoader2"
    - type: "INPUT"
      name: "sources"
      modelFingerprint: "001545587C78D08E2C822605D4A6D74C"
      valueUuid: "sources2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "4CFEF8320458F7E0A9AF975D61924BFF"
      valueUuid: "springApplication2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader2"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources2"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader2"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "sources2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader2"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources2"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "springApplication2"
      fixed: true
- method:
    name: "context"
    sourceCodeSignature: "ConfigurableApplicationContext context()"
    returnType: "org.springframework.context.ConfigurableApplicationContext"
    instructionFingerprint: "341A3DFEB795E1BF057C8B06152AE083"
  paths:
  - pathId: "path1"
    testPathName: "contextTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "7F4C9E8137CFE4CC35613D0F8A6C0E14"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2A2E3002A1B55AA06DC2CCD760607AC6"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3A0295DB3286B3A2BDA324DCCED92010"
      valueUuid: "fieldConfigurableApplicationContext"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "NULL"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "fieldConfigurableApplicationContext"
- method:
    name: "application"
    sourceCodeSignature: "SpringApplication application()"
    returnType: "org.springframework.boot.SpringApplication"
    instructionFingerprint: "AC6F3361CE2BCE10C5F1C54F38900C99"
  paths:
  - pathId: "path1"
    testPathName: "applicationTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "4247D3F498466A1B908801B02E7C9420"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2A2E3002A1B55AA06DC2CCD760607AC6"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "4CFEF8320458F7E0A9AF975D61924BFF"
      valueUuid: "springApplication"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "springApplication"
      fixed: true
- method:
    name: "run"
    sourceCodeSignature: "ConfigurableApplicationContext run(String... args)"
    returnType: "org.springframework.context.ConfigurableApplicationContext"
    parameters:
    - name: "args"
      type: "java.lang.String[]"
    instructionFingerprint: "6C7C23D1E581461DA7423F69A36F6D7A"
  paths:
  - pathId: "path1"
    testPathName: "runWhenThisNotRegisterShutdownHookAppliedAndThisRunningCompareAndSetFalseTrue"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "0D3FDA861FF913E62F89383267742C06"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2A2E3002A1B55AA06DC2CCD760607AC6"
      valueUuid: "target"
    - type: "INPUT"
      name: "args"
      modelFingerprint: "62B8E965720EE46A7489315174A3A841"
      valueUuid: "args"
    - type: "FIELD"
      name: "parent"
      modelFingerprint: "6D8CA4AFA3F1070D0B7D57B598B41033"
      valueUuid: "springApplicationBuilder3"
      methodExercised:
        expression: "run(args:args):configurableApplicationContext"
    - type: "FIELD"
      name: "application"
      modelFingerprint: "D9A3C57EA1AB7AF0A333D15A77164E96"
      valueUuid: "springApplication"
      methodExercised:
        expression: "addInitializers(initializers:applicationContextInitializerArray):void2"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "5573524FEA3E1D5F1CAD10F85EB9F52C"
      methodExercised:
        expression: "build():springApplication2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "96DD096499D5B9E09005FCD4EF1E4220"
      valueUuid: "springApplication2"
      methodExercised:
        expression: "run(args:args):configurableApplicationContext2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "AE03A11E5B8246E8E9234219567D5484"
      valueUuid: "configurableApplicationContext2"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.application.addInitializers(initializers);"
      lineNumber: 561
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: application - Method: addInitializers"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
        propertiesMap:
          parent:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
            uuid: "springApplicationBuilder3"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "springApplicationBuilder3"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
        propertiesMap:
          registerShutdownHook:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "uniqueUuid1"
            fixed: true
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "springApplication"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.builder.ParentContextApplicationContextInitializer"
              parameters:
              - name: "parent"
                value:
                  sapientType: "MOCK"
                  valueType: "org.springframework.context.ConfigurableApplicationContext"
                  uuid: "configurableApplicationContext"
            valueType: "org.springframework.boot.builder.ParentContextApplicationContextInitializer"
            uuid: "parentContextApplicationContextInitializer"
            fixed: true
      valueType: "org.springframework.context.ApplicationContextInitializer[]"
      uuid: "applicationContextInitializerArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "springApplication2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "springApplication2"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext2"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext2"
    branches:
    - lineNumber: 142
      expression: "this.running.get()"
      range: "(142,7)-(142,24)"
      evaluatedAs: false
    - lineNumber: 155
      expression: "this.parent != null"
      range: "(155,7)-(155,25)"
      evaluatedAs: true
      internalMethodName: "configureAsChildIfNecessary"
    - lineNumber: 155
      expression: "!this.configuredAsChild"
      range: "(155,30)-(155,52)"
      evaluatedAs: true
      internalMethodName: "configureAsChildIfNecessary"
    - lineNumber: 157
      expression: "!this.registerShutdownHookApplied"
      range: "(157,8)-(157,40)"
      evaluatedAs: true
      internalMethodName: "configureAsChildIfNecessary"
    - lineNumber: 147
      expression: "this.running.compareAndSet(false, true)"
      range: "(147,7)-(147,45)"
      evaluatedAs: true
- method:
    name: "build"
    sourceCodeSignature: "SpringApplication build()"
    returnType: "org.springframework.boot.SpringApplication"
    instructionFingerprint: "F0AF7360DCA534D5CBC20D11521C24F3"
  paths:
  - pathId: "path1"
    testPathName: "buildTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "516FB22AB4F7AEFE40A6DCF785441FC8"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2A2E3002A1B55AA06DC2CCD760607AC6"
      valueUuid: "target"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "A87AA7F32EBA92D68A9E2262395A5C7A"
      methodExercised:
        expression: "build(args:stringArray):springApplication2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "028879B9D88EE156E70DF0656F782828"
      valueUuid: "springApplication2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "springApplication2"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "springApplication2"
- method:
    name: "build"
    sourceCodeSignature: "SpringApplication build(String... args)"
    returnType: "org.springframework.boot.SpringApplication"
    parameters:
    - name: "args"
      type: "java.lang.String[]"
    instructionFingerprint: "57FB588FD7D52560E2F58620AFD214DE"
  paths:
  - pathId: "path1"
    testPathName: "build1WhenThisNotRegisterShutdownHookApplied"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "C6B409643868FDFD8DBBCE589D64510C"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2A2E3002A1B55AA06DC2CCD760607AC6"
      valueUuid: "target"
    - type: "INPUT"
      name: "args"
      modelFingerprint: "62B8E965720EE46A7489315174A3A841"
      valueUuid: "args"
    - type: "FIELD"
      name: "parent"
      modelFingerprint: "6D8CA4AFA3F1070D0B7D57B598B41033"
      valueUuid: "springApplicationBuilder3"
      methodExercised:
        expression: "run(args:args):configurableApplicationContext"
    - type: "FIELD"
      name: "application"
      modelFingerprint: "D9A3C57EA1AB7AF0A333D15A77164E96"
      valueUuid: "springApplication"
      methodExercised:
        expression: "addInitializers(initializers:applicationContextInitializerArray):void2"
    - type: "FIELD"
      name: "application"
      modelFingerprint: "29AB3ACF3B0FC83E931EA0858C0560BD"
      valueUuid: "springApplication"
      methodExercised:
        expression: "addPrimarySources(additionalPrimarySources:linkedHashSet):void3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "4CFEF8320458F7E0A9AF975D61924BFF"
      valueUuid: "springApplication"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.application.addInitializers(initializers);"
      lineNumber: 561
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: application - Method: addInitializers"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
        propertiesMap:
          parent:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
            uuid: "springApplicationBuilder3"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "springApplicationBuilder3"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
        propertiesMap:
          registerShutdownHook:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "uniqueUuid4"
            fixed: true
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "springApplication"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.builder.ParentContextApplicationContextInitializer"
              parameters:
              - name: "parent"
                value:
                  sapientType: "MOCK"
                  valueType: "org.springframework.context.ConfigurableApplicationContext"
                  uuid: "configurableApplicationContext"
            valueType: "org.springframework.boot.builder.ParentContextApplicationContextInitializer"
            uuid: "parentContextApplicationContextInitializer"
            fixed: true
      valueType: "org.springframework.context.ApplicationContextInitializer[]"
      uuid: "applicationContextInitializerArray"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
        propertiesMap:
          registerShutdownHook:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "uniqueUuid4"
            fixed: true
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "springApplication"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.LinkedHashSet"
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.Class<?>"
      uuid: "linkedHashSet"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
        propertiesMap:
          registerShutdownHook:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "uniqueUuid4"
            fixed: true
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "springApplication"
      fixed: true
    branches:
    - lineNumber: 155
      expression: "this.parent != null"
      range: "(155,7)-(155,25)"
      evaluatedAs: true
      internalMethodName: "configureAsChildIfNecessary"
    - lineNumber: 155
      expression: "!this.configuredAsChild"
      range: "(155,30)-(155,52)"
      evaluatedAs: true
      internalMethodName: "configureAsChildIfNecessary"
    - lineNumber: 157
      expression: "!this.registerShutdownHookApplied"
      range: "(157,8)-(157,40)"
      evaluatedAs: true
      internalMethodName: "configureAsChildIfNecessary"
- method:
    name: "child"
    sourceCodeSignature: "SpringApplicationBuilder child(Class<?>... sources)"
    returnType: "org.springframework.boot.builder.SpringApplicationBuilder"
    parameters:
    - name: "sources"
      type: "java.lang.Class[]"
    instructionFingerprint: "D4B8AF5EFF8076D717FF5B4263D8590E"
  paths:
  - pathId: "path1"
    testPathName: "childTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "09ED817887ACA3A582CE582F165B2247"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2A2E3002A1B55AA06DC2CCD760607AC6"
      valueUuid: "target"
    - type: "INPUT"
      name: "sources"
      modelFingerprint: "001545587C78D08E2C822605D4A6D74C"
      valueUuid: "sources"
    - type: "LOCAL_VARIABLE"
      name: "child"
      modelFingerprint: "B9DC3FA353215BF12F0E7D238A62432B"
      valueUuid: "springApplicationBuilder2"
      methodExercised:
        expression: "sources(sources:sources):springApplicationBuilder5"
    - type: "LOCAL_VARIABLE"
      name: "child"
      modelFingerprint: "6F084378B752E579B84CCC4A992E6F33"
      valueUuid: "springApplicationBuilder2"
      methodExercised:
        expression: "properties(defaults:linkedHashMap2):springApplicationBuilder6"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A93C60AC1298C4E9D2459C9FB86E895B"
      valueUuid: "springApplicationBuilder6"
      methodExercised:
        expression: "environment(environment:fieldConfigurableEnvironment):springApplicationBuilder7"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "CF9E9FE57BDC4D746229197A7AA16178"
      valueUuid: "springApplicationBuilder7"
      methodExercised:
        expression: "additionalProfiles(additionalProfiles:linkedHashSet4):springApplicationBuilder8"
        privateAccess: true
    - type: "FIELD"
      name: "application"
      modelFingerprint: "0D12A8F0EDB2A0ED28413DF63850D13A"
      valueUuid: "springApplication2"
      methodExercised:
        expression: "addPrimarySources(additionalPrimarySources:linkedHashSet3):void3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "6DCEBB99251892476C5A076CF3DDBB53"
      valueUuid: "springApplicationBuilder2"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "child.sources(sources);"
      lineNumber: 192
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: child - Method: sources"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources2"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "sources"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            uuid: "classArray"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "springApplicationBuilder2"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.builder.SpringApplicationBuilder"
            parameters:
            - name: "sources"
              value:
                sapientType: "ARRAY"
                content: !<array>
                  values: {}
                valueType: "java.lang.Class[]"
                uuid: "classArray"
          valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
          uuid: "springApplicationBuilder2"
          fixed: true
        methodParameters:
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
        methodName: "sources"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "springApplicationBuilder5"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "sources"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            uuid: "classArray"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "springApplicationBuilder2"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.builder.SpringApplicationBuilder"
            parameters:
            - name: "sources"
              value:
                sapientType: "ARRAY"
                content: !<array>
                  values: {}
                valueType: "java.lang.Class[]"
                uuid: "classArray"
          valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
          uuid: "springApplicationBuilder2"
          fixed: true
        methodParameters:
        - name: "defaults"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.LinkedHashMap"
              parameters: []
              values: []
            valueType: "java.util.Map"
            genericValueType: "java.lang.String,java.lang.Object"
            uuid: "linkedHashMap2"
        methodName: "properties"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "springApplicationBuilder6"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.LinkedHashMap"
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "linkedHashMap2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.builder.SpringApplicationBuilder"
            parameters:
            - name: "sources"
              value:
                sapientType: "ARRAY"
                content: !<array>
                  values: {}
                valueType: "java.lang.Class[]"
                uuid: "classArray"
          valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
          uuid: "springApplicationBuilder2"
          fixed: true
        methodParameters:
        - name: "defaults"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.LinkedHashMap"
              parameters: []
              values: []
            valueType: "java.util.Map"
            genericValueType: "java.lang.String,java.lang.Object"
            uuid: "linkedHashMap2"
        methodName: "properties"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "springApplicationBuilder6"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.springframework.boot.builder.SpringApplicationBuilder"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.boot.builder.SpringApplicationBuilder"
                parameters:
                - name: "sources"
                  value:
                    sapientType: "ARRAY"
                    content: !<array>
                      values: {}
                    valueType: "java.lang.Class[]"
                    uuid: "classArray"
              valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
              uuid: "springApplicationBuilder2"
              fixed: true
            methodParameters:
            - name: "defaults"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  collectionClass: "java.util.LinkedHashMap"
                  parameters: []
                  values: []
                valueType: "java.util.Map"
                genericValueType: "java.lang.String,java.lang.Object"
                uuid: "linkedHashMap2"
            methodName: "properties"
          valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
          uuid: "springApplicationBuilder6"
        methodParameters:
        - name: "environment"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "fieldConfigurableEnvironment"
        methodName: "environment"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "springApplicationBuilder7"
    - sapientType: "NULL"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "fieldConfigurableEnvironment"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.springframework.boot.builder.SpringApplicationBuilder"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.boot.builder.SpringApplicationBuilder"
                parameters:
                - name: "sources"
                  value:
                    sapientType: "ARRAY"
                    content: !<array>
                      values: {}
                    valueType: "java.lang.Class[]"
                    uuid: "classArray"
              valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
              uuid: "springApplicationBuilder2"
              fixed: true
            methodParameters:
            - name: "defaults"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  collectionClass: "java.util.LinkedHashMap"
                  parameters: []
                  values: []
                valueType: "java.util.Map"
                genericValueType: "java.lang.String,java.lang.Object"
                uuid: "linkedHashMap2"
            methodName: "properties"
          valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
          uuid: "springApplicationBuilder6"
        methodParameters:
        - name: "environment"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "fieldConfigurableEnvironment"
        methodName: "environment"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "springApplicationBuilder7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "springApplicationBuilder8"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.LinkedHashSet"
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.String"
      uuid: "linkedHashSet4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "uniqueUuid5"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            uuid: "classArray"
        propertiesMap:
          webApplicationType:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "Enum-org.springframework.boot.WebApplicationType-NONE"
            fixed: true
          bannerMode:
            sapientType: "ENUM"
            content: !<regular>
              value: "OFF"
            valueType: "org.springframework.boot.Banner$Mode"
            uuid: "Enum-org.springframework.boot.Banner$Mode-OFF"
            fixed: true
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "springApplication2"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.LinkedHashSet"
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.Class<?>"
      uuid: "linkedHashSet3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            uuid: "classArray"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "springApplicationBuilder2"
      fixed: true
- method:
    name: "parent"
    sourceCodeSignature: "SpringApplicationBuilder parent(Class<?>... sources)"
    returnType: "org.springframework.boot.builder.SpringApplicationBuilder"
    parameters:
    - name: "sources"
      type: "java.lang.Class[]"
    instructionFingerprint: "642BA049372632E58683A809D1B93B8D"
  paths:
  - pathId: "path1"
    testPathName: "parentWhenThisParentIsNull"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "B18161391FAE2EBA0F89EAC45B30D4D6"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2A2E3002A1B55AA06DC2CCD760607AC6"
      valueUuid: "target"
    - type: "INPUT"
      name: "sources"
      modelFingerprint: "001545587C78D08E2C822605D4A6D74C"
      valueUuid: "sources"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E626829CA3DA7B84652F9D05BCB8DA3B"
      valueUuid: "springApplicationBuilder3"
      methodExercised:
        expression: "web(webApplicationType:Enum-org.springframework.boot.WebApplicationType-NONE):springApplicationBuilder6"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A655B7F23EC81F90AF0FDEEFA26C9CCA"
      valueUuid: "springApplicationBuilder6"
      methodExercised:
        expression: "properties(defaults:linkedHashMap2):springApplicationBuilder7"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "DF2717812040731A77648CE725A58847"
      valueUuid: "springApplicationBuilder7"
      methodExercised:
        expression: "environment(environment:fieldConfigurableEnvironment):springApplicationBuilder8"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2276292B49B838A54D01F7B7E834A74F"
      valueUuid: "springApplicationBuilder8"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.parent = new SpringApplicationBuilder(sources).web(WebApplicationType.NONE)"
      lineNumber: 222
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type SpringApplicationBuilder - Method: web"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources2"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "sources"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "springApplicationBuilder3"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.builder.SpringApplicationBuilder"
            parameters:
            - name: "sources"
              value:
                sapientType: "ARRAY"
                content: !<array>
                  values: {}
                valueType: "java.lang.Class[]"
                genericValueType: "?"
                uuid: "sources"
          valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
          uuid: "springApplicationBuilder3"
          fixed: true
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "Enum-org.springframework.boot.WebApplicationType-NONE"
            fixed: true
        methodName: "web"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "springApplicationBuilder6"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "Enum-org.springframework.boot.WebApplicationType-NONE"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.builder.SpringApplicationBuilder"
            parameters:
            - name: "sources"
              value:
                sapientType: "ARRAY"
                content: !<array>
                  values: {}
                valueType: "java.lang.Class[]"
                genericValueType: "?"
                uuid: "sources"
          valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
          uuid: "springApplicationBuilder3"
          fixed: true
        methodParameters:
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "Enum-org.springframework.boot.WebApplicationType-NONE"
            fixed: true
        methodName: "web"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "springApplicationBuilder6"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.springframework.boot.builder.SpringApplicationBuilder"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.boot.builder.SpringApplicationBuilder"
                parameters:
                - name: "sources"
                  value:
                    sapientType: "ARRAY"
                    content: !<array>
                      values: {}
                    valueType: "java.lang.Class[]"
                    genericValueType: "?"
                    uuid: "sources"
              valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
              uuid: "springApplicationBuilder3"
              fixed: true
            methodParameters:
            - name: "webApplicationType"
              value:
                sapientType: "ENUM"
                content: !<regular>
                  value: "NONE"
                valueType: "org.springframework.boot.WebApplicationType"
                uuid: "Enum-org.springframework.boot.WebApplicationType-NONE"
                fixed: true
            methodName: "web"
          valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
          uuid: "springApplicationBuilder6"
        methodParameters:
        - name: "defaults"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.LinkedHashMap"
              parameters: []
              values: []
            valueType: "java.util.Map"
            genericValueType: "java.lang.String,java.lang.Object"
            uuid: "linkedHashMap2"
        methodName: "properties"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "springApplicationBuilder7"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.LinkedHashMap"
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "linkedHashMap2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.springframework.boot.builder.SpringApplicationBuilder"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.boot.builder.SpringApplicationBuilder"
                parameters:
                - name: "sources"
                  value:
                    sapientType: "ARRAY"
                    content: !<array>
                      values: {}
                    valueType: "java.lang.Class[]"
                    genericValueType: "?"
                    uuid: "sources"
              valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
              uuid: "springApplicationBuilder3"
              fixed: true
            methodParameters:
            - name: "webApplicationType"
              value:
                sapientType: "ENUM"
                content: !<regular>
                  value: "NONE"
                valueType: "org.springframework.boot.WebApplicationType"
                uuid: "Enum-org.springframework.boot.WebApplicationType-NONE"
                fixed: true
            methodName: "web"
          valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
          uuid: "springApplicationBuilder6"
        methodParameters:
        - name: "defaults"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.LinkedHashMap"
              parameters: []
              values: []
            valueType: "java.util.Map"
            genericValueType: "java.lang.String,java.lang.Object"
            uuid: "linkedHashMap2"
        methodName: "properties"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "springApplicationBuilder7"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.springframework.boot.builder.SpringApplicationBuilder"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<method_return_from_value>
                target: "org.springframework.boot.builder.SpringApplicationBuilder"
                localVariableValue:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.springframework.boot.builder.SpringApplicationBuilder"
                    parameters:
                    - name: "sources"
                      value:
                        sapientType: "ARRAY"
                        content: !<array>
                          values: {}
                        valueType: "java.lang.Class[]"
                        genericValueType: "?"
                        uuid: "sources"
                  valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
                  uuid: "springApplicationBuilder3"
                  fixed: true
                methodParameters:
                - name: "webApplicationType"
                  value:
                    sapientType: "ENUM"
                    content: !<regular>
                      value: "NONE"
                    valueType: "org.springframework.boot.WebApplicationType"
                    uuid: "Enum-org.springframework.boot.WebApplicationType-NONE"
                    fixed: true
                methodName: "web"
              valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
              uuid: "springApplicationBuilder6"
            methodParameters:
            - name: "defaults"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  collectionClass: "java.util.LinkedHashMap"
                  parameters: []
                  values: []
                valueType: "java.util.Map"
                genericValueType: "java.lang.String,java.lang.Object"
                uuid: "linkedHashMap2"
            methodName: "properties"
          valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
          uuid: "springApplicationBuilder7"
        methodParameters:
        - name: "environment"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "fieldConfigurableEnvironment"
        methodName: "environment"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "springApplicationBuilder8"
    - sapientType: "NULL"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "fieldConfigurableEnvironment"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.springframework.boot.builder.SpringApplicationBuilder"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<method_return_from_value>
                target: "org.springframework.boot.builder.SpringApplicationBuilder"
                localVariableValue:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.springframework.boot.builder.SpringApplicationBuilder"
                    parameters:
                    - name: "sources"
                      value:
                        sapientType: "ARRAY"
                        content: !<array>
                          values: {}
                        valueType: "java.lang.Class[]"
                        genericValueType: "?"
                        uuid: "sources"
                  valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
                  uuid: "springApplicationBuilder3"
                  fixed: true
                methodParameters:
                - name: "webApplicationType"
                  value:
                    sapientType: "ENUM"
                    content: !<regular>
                      value: "NONE"
                    valueType: "org.springframework.boot.WebApplicationType"
                    uuid: "Enum-org.springframework.boot.WebApplicationType-NONE"
                    fixed: true
                methodName: "web"
              valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
              uuid: "springApplicationBuilder6"
            methodParameters:
            - name: "defaults"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  collectionClass: "java.util.LinkedHashMap"
                  parameters: []
                  values: []
                valueType: "java.util.Map"
                genericValueType: "java.lang.String,java.lang.Object"
                uuid: "linkedHashMap2"
            methodName: "properties"
          valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
          uuid: "springApplicationBuilder7"
        methodParameters:
        - name: "environment"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "fieldConfigurableEnvironment"
        methodName: "environment"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "springApplicationBuilder8"
    branches:
    - lineNumber: 221
      expression: "this.parent == null"
      range: "(221,7)-(221,25)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "parentWhenThisParentIsNotNull"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "52EE9831BEAD92F8BC0EB18E50282976"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2A2E3002A1B55AA06DC2CCD760607AC6"
      valueUuid: "target"
    - type: "INPUT"
      name: "sources"
      modelFingerprint: "001545587C78D08E2C822605D4A6D74C"
      valueUuid: "sources"
    - type: "FIELD"
      name: "parent"
      modelFingerprint: "889E512A94AD63AEDE1B610F5D785D03"
      valueUuid: "springApplicationBuilder3"
      methodExercised:
        expression: "sources(sources:sources):springApplicationBuilder4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7D80DF13D49F2691FA7605551745BA28"
      valueUuid: "springApplicationBuilder3"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources2"
        propertiesMap:
          parent:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
            uuid: "springApplicationBuilder3"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "sources"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "springApplicationBuilder3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "springApplicationBuilder4"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "sources"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "springApplicationBuilder3"
    branches:
    - lineNumber: 221
      expression: "this.parent == null"
      range: "(221,7)-(221,25)"
      evaluatedAs: false
- method:
    name: "parent"
    sourceCodeSignature: "SpringApplicationBuilder parent(ConfigurableApplicationContext\
      \ parent)"
    returnType: "org.springframework.boot.builder.SpringApplicationBuilder"
    parameters:
    - name: "parent"
      type: "org.springframework.context.ConfigurableApplicationContext"
    instructionFingerprint: "7ECE4E5029F9DFFC312B6CE23E6D3BDA"
  paths:
  - pathId: "path1"
    testPathName: "parent1ThrowsNullPointerException"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "6EC512900A53585CF217A54FC46FC681"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2A2E3002A1B55AA06DC2CCD760607AC6"
      valueUuid: "target"
    - type: "INPUT"
      name: "parent"
      modelFingerprint: "EB07F63CF9AFDBF3CC47E39A026F66FA"
      valueUuid: "parent"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "4630731AEA7806FC43F83B475DCE814E"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "EXTERNAL_FIELD_WITHOUT_ACCESS"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "parent"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.NullPointerException"
        parameters: []
      valueType: "java.lang.NullPointerException"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "sibling"
    sourceCodeSignature: "SpringApplicationBuilder sibling(Class<?>... sources)"
    returnType: "org.springframework.boot.builder.SpringApplicationBuilder"
    parameters:
    - name: "sources"
      type: "java.lang.Class[]"
    instructionFingerprint: "189F24FDC951E03AD20EC2C2FF0DE98A"
  paths:
  - pathId: "path1"
    testPathName: "siblingWhenThisParentIsNotNull"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "319F5B58CFC1B5093293B8C5186098B2"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2A2E3002A1B55AA06DC2CCD760607AC6"
      valueUuid: "target"
    - type: "INPUT"
      name: "sources"
      modelFingerprint: "001545587C78D08E2C822605D4A6D74C"
      valueUuid: "sources"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "CCF86616F29E670AC478FD1E968FA9EF"
      methodExercised:
        expression: "run(args:stringArray):configurableApplicationContext"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "CDDCE82386F2C69805BF2424DA76BD6B"
      valueUuid: "springApplicationBuilder3"
      methodExercised:
        expression: "child(sources:sources):springApplicationBuilder4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "9F7A5924CBEBD32C16CC869D5ABB9D48"
      valueUuid: "springApplicationBuilder4"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources2"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "sources"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "springApplicationBuilder3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "springApplicationBuilder4"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "sources"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "springApplicationBuilder4"
    branches:
    - lineNumber: 233
      expression: "this.context == null"
      range: "(233,7)-(233,26)"
      evaluatedAs: true
      internalMethodName: "runAndExtractParent"
    - lineNumber: 236
      expression: "this.parent != null"
      range: "(236,7)-(236,25)"
      evaluatedAs: true
      internalMethodName: "runAndExtractParent"
  - pathId: "path2"
    testPathName: "siblingWhenThisParentIsNullThrowsIllegalStateException"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "C1E175F1FF256E077A1A30F07E79DEB9"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2A2E3002A1B55AA06DC2CCD760607AC6"
      valueUuid: "target"
    - type: "INPUT"
      name: "sources"
      modelFingerprint: "001545587C78D08E2C822605D4A6D74C"
      valueUuid: "sources"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "CCF86616F29E670AC478FD1E968FA9EF"
      methodExercised:
        expression: "run(args:stringArray):configurableApplicationContext"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "900843CC02A1D63678AED6C499D5F20A"
      valueUuid: "illegalStateException"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources2"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "sources"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "s"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "No parent defined yet (please use the other overloaded parent\
                \ methods to set one)"
            valueType: "java.lang.String"
            uuid: "uniqueUuid6"
            fixed: true
      valueType: "java.lang.IllegalStateException"
      uuid: "illegalStateException"
      fixed: true
    branches:
    - lineNumber: 233
      expression: "this.context == null"
      range: "(233,7)-(233,26)"
      evaluatedAs: true
      internalMethodName: "runAndExtractParent"
    - lineNumber: 236
      expression: "this.parent != null"
      range: "(236,7)-(236,25)"
      evaluatedAs: false
      internalMethodName: "runAndExtractParent"
- method:
    name: "sibling"
    sourceCodeSignature: "SpringApplicationBuilder sibling(Class<?>[] sources, String...\
      \ args)"
    returnType: "org.springframework.boot.builder.SpringApplicationBuilder"
    parameters:
    - name: "sources"
      type: "java.lang.Class[]"
    - name: "args"
      type: "java.lang.String[]"
    instructionFingerprint: "0FA8947592F03CB6C856AE8E98308AC2"
  paths:
  - pathId: "path1"
    testPathName: "sibling1WhenThisParentIsNotNull"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "28397CC0EE2274549A4BC7CD32BA8BB6"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2A2E3002A1B55AA06DC2CCD760607AC6"
      valueUuid: "target"
    - type: "INPUT"
      name: "sources"
      modelFingerprint: "001545587C78D08E2C822605D4A6D74C"
      valueUuid: "sources"
    - type: "INPUT"
      name: "args"
      modelFingerprint: "62B8E965720EE46A7489315174A3A841"
      valueUuid: "args"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "5DF583063A156C4B25241172671DD436"
      methodExercised:
        expression: "run(args:args):configurableApplicationContext"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "CDDCE82386F2C69805BF2424DA76BD6B"
      valueUuid: "springApplicationBuilder3"
      methodExercised:
        expression: "child(sources:sources):springApplicationBuilder4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "9F7A5924CBEBD32C16CC869D5ABB9D48"
      valueUuid: "springApplicationBuilder4"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources2"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "sources"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "springApplicationBuilder3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "springApplicationBuilder4"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "sources"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "springApplicationBuilder4"
    branches:
    - lineNumber: 233
      expression: "this.context == null"
      range: "(233,7)-(233,26)"
      evaluatedAs: true
      internalMethodName: "runAndExtractParent"
    - lineNumber: 236
      expression: "this.parent != null"
      range: "(236,7)-(236,25)"
      evaluatedAs: true
      internalMethodName: "runAndExtractParent"
  - pathId: "path2"
    testPathName: "sibling1WhenThisParentIsNullThrowsIllegalStateException"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "F80FA3F456DBE705C8BB4CF4A8365717"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2A2E3002A1B55AA06DC2CCD760607AC6"
      valueUuid: "target"
    - type: "INPUT"
      name: "sources"
      modelFingerprint: "001545587C78D08E2C822605D4A6D74C"
      valueUuid: "sources"
    - type: "INPUT"
      name: "args"
      modelFingerprint: "62B8E965720EE46A7489315174A3A841"
      valueUuid: "args"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "5DF583063A156C4B25241172671DD436"
      methodExercised:
        expression: "run(args:args):configurableApplicationContext"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "900843CC02A1D63678AED6C499D5F20A"
      valueUuid: "illegalStateException"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources2"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "sources"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "configurableApplicationContext"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "args"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "s"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "No parent defined yet (please use the other overloaded parent\
                \ methods to set one)"
            valueType: "java.lang.String"
            uuid: "uniqueUuid7"
            fixed: true
      valueType: "java.lang.IllegalStateException"
      uuid: "illegalStateException"
      fixed: true
    branches:
    - lineNumber: 233
      expression: "this.context == null"
      range: "(233,7)-(233,26)"
      evaluatedAs: true
      internalMethodName: "runAndExtractParent"
    - lineNumber: 236
      expression: "this.parent != null"
      range: "(236,7)-(236,25)"
      evaluatedAs: false
      internalMethodName: "runAndExtractParent"
- method:
    name: "contextFactory"
    sourceCodeSignature: "SpringApplicationBuilder contextFactory(ApplicationContextFactory\
      \ factory)"
    returnType: "org.springframework.boot.builder.SpringApplicationBuilder"
    parameters:
    - name: "factory"
      type: "org.springframework.boot.ApplicationContextFactory"
    instructionFingerprint: "778A98E95F73CB72044F7C831E63CD7A"
  paths:
  - pathId: "path1"
    testPathName: "contextFactoryTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "391FC70F54BF044576589F77AE3E5BE2"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2A2E3002A1B55AA06DC2CCD760607AC6"
      valueUuid: "target"
    - type: "INPUT"
      name: "factory"
      modelFingerprint: "862744D5A6EA381E9264DB9D79964593"
      valueUuid: "factory"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D021EF2DA45CC56546673AB5E17969F6"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ApplicationContextFactory"
      uuid: "factory"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "targetClassObject"
      fixed: true
- method:
    name: "sources"
    sourceCodeSignature: "SpringApplicationBuilder sources(Class<?>... sources)"
    returnType: "org.springframework.boot.builder.SpringApplicationBuilder"
    parameters:
    - name: "sources"
      type: "java.lang.Class[]"
    instructionFingerprint: "EFBDB29A2F02D7E0A91FDD6C04D5B3DE"
  paths:
  - pathId: "path1"
    testPathName: "sourcesTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "765387BEA557E8BE93535C0D81898617"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2A2E3002A1B55AA06DC2CCD760607AC6"
      valueUuid: "target"
    - type: "INPUT"
      name: "sources"
      modelFingerprint: "D370ACC406AEF4BAAFF6A61AC6023A04"
      valueUuid: "sources"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D021EF2DA45CC56546673AB5E17969F6"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources2"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "sources"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "targetClassObject"
      fixed: true
- method:
    name: "web"
    sourceCodeSignature: "SpringApplicationBuilder web(WebApplicationType webApplicationType)"
    returnType: "org.springframework.boot.builder.SpringApplicationBuilder"
    parameters:
    - name: "webApplicationType"
      type: "org.springframework.boot.WebApplicationType"
    instructionFingerprint: "D7F66729CEF3654B5CC89E0E9D3A34F0"
  paths:
  - pathId: "path1"
    testPathName: "webTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "7403F3D46D748D13AEDBB86F326262AD"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2A2E3002A1B55AA06DC2CCD760607AC6"
      valueUuid: "target"
    - type: "INPUT"
      name: "webApplicationType"
      modelFingerprint: "C8018C7621E24BA70976325317E1BD20"
      valueUuid: "webApplicationType"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D021EF2DA45CC56546673AB5E17969F6"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.WebApplicationType"
      uuid: "webApplicationType"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "targetClassObject"
      fixed: true
- method:
    name: "logStartupInfo"
    sourceCodeSignature: "SpringApplicationBuilder logStartupInfo(boolean logStartupInfo)"
    returnType: "org.springframework.boot.builder.SpringApplicationBuilder"
    parameters:
    - name: "logStartupInfo"
      type: "boolean"
    instructionFingerprint: "1F92DB5EFA6151798223A84C914F9D45"
  paths:
  - pathId: "path1"
    testPathName: "logStartupInfoTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "18FD26DAC34C4DC0B2EE050D7424BDF7"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2A2E3002A1B55AA06DC2CCD760607AC6"
      valueUuid: "target"
    - type: "INPUT"
      name: "logStartupInfo"
      modelFingerprint: "0E9EC15CC69B7F2382A10E5DF868CB85"
      valueUuid: "logStartupInfo"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D021EF2DA45CC56546673AB5E17969F6"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "logStartupInfo"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "targetClassObject"
      fixed: true
- method:
    name: "banner"
    sourceCodeSignature: "SpringApplicationBuilder banner(Banner banner)"
    returnType: "org.springframework.boot.builder.SpringApplicationBuilder"
    parameters:
    - name: "banner"
      type: "org.springframework.boot.Banner"
    instructionFingerprint: "F62C4B52798F426B8BEF5262D51C18F1"
  paths:
  - pathId: "path1"
    testPathName: "bannerTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "13D52C4967B339F17D8206B6898BAF13"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2A2E3002A1B55AA06DC2CCD760607AC6"
      valueUuid: "target"
    - type: "INPUT"
      name: "banner"
      modelFingerprint: "653EFFDE495F8D5F6B032AA47001933F"
      valueUuid: "banner"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D021EF2DA45CC56546673AB5E17969F6"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.Banner"
      uuid: "banner"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "targetClassObject"
      fixed: true
- method:
    name: "bannerMode"
    sourceCodeSignature: "SpringApplicationBuilder bannerMode(Banner.Mode bannerMode)"
    returnType: "org.springframework.boot.builder.SpringApplicationBuilder"
    parameters:
    - name: "bannerMode"
      type: "org.springframework.boot.Banner$Mode"
    instructionFingerprint: "A6FD86BE8B702F67E954B9AAA506C0D4"
  paths:
  - pathId: "path1"
    testPathName: "bannerModeTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "6426CDD64F2267A92017FA7C5D3D55F6"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2A2E3002A1B55AA06DC2CCD760607AC6"
      valueUuid: "target"
    - type: "INPUT"
      name: "bannerMode"
      modelFingerprint: "BB49BD83BFF5901C435AB337B1D11F85"
      valueUuid: "bannerMode"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D021EF2DA45CC56546673AB5E17969F6"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "ENUM"
      content: !<regular>
        value: "OFF"
      valueType: "org.springframework.boot.Banner$Mode"
      uuid: "bannerMode"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "targetClassObject"
      fixed: true
- method:
    name: "headless"
    sourceCodeSignature: "SpringApplicationBuilder headless(boolean headless)"
    returnType: "org.springframework.boot.builder.SpringApplicationBuilder"
    parameters:
    - name: "headless"
      type: "boolean"
    instructionFingerprint: "44C85C89DAEAA639F82A7F83DDA352AC"
  paths:
  - pathId: "path1"
    testPathName: "headlessTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "94BD7A8515D60E0FFC0BDFB0956CF3D5"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2A2E3002A1B55AA06DC2CCD760607AC6"
      valueUuid: "target"
    - type: "INPUT"
      name: "headless"
      modelFingerprint: "D3440E5DA1B4C4960F8EB54130E3AD5A"
      valueUuid: "headless"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D021EF2DA45CC56546673AB5E17969F6"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "headless"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "targetClassObject"
      fixed: true
- method:
    name: "registerShutdownHook"
    sourceCodeSignature: "SpringApplicationBuilder registerShutdownHook(boolean registerShutdownHook)"
    returnType: "org.springframework.boot.builder.SpringApplicationBuilder"
    parameters:
    - name: "registerShutdownHook"
      type: "boolean"
    instructionFingerprint: "32CB2B7358D4B57B82E1C0B027329DCE"
  paths:
  - pathId: "path1"
    testPathName: "registerShutdownHookTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "C9BE7BF169861C5065A51556858EF218"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2A2E3002A1B55AA06DC2CCD760607AC6"
      valueUuid: "target"
    - type: "INPUT"
      name: "registerShutdownHook"
      modelFingerprint: "26948365B73B0C4D96EE236FE80AE368"
      valueUuid: "registerShutdownHook"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D021EF2DA45CC56546673AB5E17969F6"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "registerShutdownHook"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "targetClassObject"
      fixed: true
- method:
    name: "main"
    sourceCodeSignature: "SpringApplicationBuilder main(Class<?> mainApplicationClass)"
    returnType: "org.springframework.boot.builder.SpringApplicationBuilder"
    parameters:
    - name: "mainApplicationClass"
      type: "java.lang.Class"
    instructionFingerprint: "FEF607D0C8D29327FE46EC1EDF7D4F51"
  paths:
  - pathId: "path1"
    testPathName: "mainTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "B0F6565315DAE7A21B989D9793C08954"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2A2E3002A1B55AA06DC2CCD760607AC6"
      valueUuid: "target"
    - type: "INPUT"
      name: "mainApplicationClass"
      modelFingerprint: "E89DAC6840B256DF5D484DB5CF5BD638"
      valueUuid: "mainApplicationClass"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D021EF2DA45CC56546673AB5E17969F6"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "mainApplicationClass"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "targetClassObject"
      fixed: true
- method:
    name: "addCommandLineProperties"
    sourceCodeSignature: "SpringApplicationBuilder addCommandLineProperties(boolean\
      \ addCommandLineProperties)"
    returnType: "org.springframework.boot.builder.SpringApplicationBuilder"
    parameters:
    - name: "addCommandLineProperties"
      type: "boolean"
    instructionFingerprint: "50D7E5B4D92F0B8054432EC7A1339A10"
  paths:
  - pathId: "path1"
    testPathName: "addCommandLinePropertiesTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "5E10B33E860C4D0883675D06B9DF710D"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2A2E3002A1B55AA06DC2CCD760607AC6"
      valueUuid: "target"
    - type: "INPUT"
      name: "addCommandLineProperties"
      modelFingerprint: "29385D21B7AF3AEE86263242A3EBC633"
      valueUuid: "addCommandLineProperties"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D021EF2DA45CC56546673AB5E17969F6"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "addCommandLineProperties"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "targetClassObject"
      fixed: true
- method:
    name: "setAddConversionService"
    sourceCodeSignature: "SpringApplicationBuilder setAddConversionService(boolean\
      \ addConversionService)"
    returnType: "org.springframework.boot.builder.SpringApplicationBuilder"
    parameters:
    - name: "addConversionService"
      type: "boolean"
    instructionFingerprint: "B51A8E0FAD5527A8F74BD6DD0428627D"
  paths:
  - pathId: "path1"
    testPathName: "setAddConversionServiceTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "CF439B522E9AA091258E77B8D351870E"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2A2E3002A1B55AA06DC2CCD760607AC6"
      valueUuid: "target"
    - type: "INPUT"
      name: "addConversionService"
      modelFingerprint: "07CBDB2F85DD5D6F92E2C4E46C82A310"
      valueUuid: "addConversionService"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D021EF2DA45CC56546673AB5E17969F6"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "addConversionService"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "targetClassObject"
      fixed: true
- method:
    name: "addBootstrapRegistryInitializer"
    sourceCodeSignature: "SpringApplicationBuilder addBootstrapRegistryInitializer(BootstrapRegistryInitializer\
      \ bootstrapRegistryInitializer)"
    returnType: "org.springframework.boot.builder.SpringApplicationBuilder"
    parameters:
    - name: "bootstrapRegistryInitializer"
      type: "org.springframework.boot.BootstrapRegistryInitializer"
    instructionFingerprint: "E614928FD8468C737A41FDA8193B26B9"
  paths:
  - pathId: "path1"
    testPathName: "addBootstrapRegistryInitializerTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "E2DB599557B96EB34A540447B07B3629"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2A2E3002A1B55AA06DC2CCD760607AC6"
      valueUuid: "target"
    - type: "INPUT"
      name: "bootstrapRegistryInitializer"
      modelFingerprint: "78C61746847C2E03C8757CCFD4E4F4E8"
      valueUuid: "bootstrapRegistryInitializer"
    - type: "FIELD"
      name: "application"
      modelFingerprint: "3972EF7452718C983676524E69C130DF"
      valueUuid: "springApplication"
      methodExercised:
        expression: "addBootstrapRegistryInitializer(bootstrapRegistryInitializer:bootstrapRegistryInitializer):void"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D021EF2DA45CC56546673AB5E17969F6"
      valueUuid: "targetClassObject"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.application.addBootstrapRegistryInitializer(bootstrapRegistryInitializer);"
      lineNumber: 404
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: application - Method: addBootstrapRegistryInitializer"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "bootstrapRegistryInitializer"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "springApplication"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.BootstrapRegistryInitializer"
      uuid: "bootstrapRegistryInitializer"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "targetClassObject"
      fixed: true
- method:
    name: "lazyInitialization"
    sourceCodeSignature: "SpringApplicationBuilder lazyInitialization(boolean lazyInitialization)"
    returnType: "org.springframework.boot.builder.SpringApplicationBuilder"
    parameters:
    - name: "lazyInitialization"
      type: "boolean"
    instructionFingerprint: "915D841CDD84DE0F9FC8DAAC99B8C801"
  paths:
  - pathId: "path1"
    testPathName: "lazyInitializationTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "8484BB1EAECAFBEE8241981DDE0AB3C3"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2A2E3002A1B55AA06DC2CCD760607AC6"
      valueUuid: "target"
    - type: "INPUT"
      name: "lazyInitialization"
      modelFingerprint: "ADF73996F9E02FB53693706CBD93982B"
      valueUuid: "lazyInitialization"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D021EF2DA45CC56546673AB5E17969F6"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "lazyInitialization"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "targetClassObject"
      fixed: true
- method:
    name: "properties"
    sourceCodeSignature: "SpringApplicationBuilder properties(String... defaultProperties)"
    returnType: "org.springframework.boot.builder.SpringApplicationBuilder"
    parameters:
    - name: "defaultProperties"
      type: "java.lang.String[]"
    instructionFingerprint: "C2488BBBCEB75167F6655C2A2DC1F8CA"
  paths:
  - pathId: "path2"
    testPathName: "propertiesWhenIndexNotGreaterThan0"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "D843C629EE0DCC174AFC1A2EA4477299"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "34D5178E6C31E1EACC02E529DBE074BE"
      valueUuid: "target"
    - type: "INPUT"
      name: "defaultProperties"
      modelFingerprint: "2C91FED54D0746BA294E26D51A8F3865"
      valueUuid: "defaultProperties"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "57873F0CAFFAADDFA4E0233509AE9A3D"
      methodExercised:
        expression: "properties(defaults:hashMap):springApplicationBuilder2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "9F7A5924CBEBD32C16CC869D5ABB9D48"
      valueUuid: "springApplicationBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "="
            valueType: "java.lang.String"
            uuid: "string"
      valueType: "java.lang.String[]"
      uuid: "defaultProperties"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "springApplicationBuilder2"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "="
              valueType: "java.lang.String"
              uuid: "string"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: ""
              valueType: "java.lang.String"
              uuid: "string7"
              fixed: true
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid1"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "hashMap"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "springApplicationBuilder2"
    branches:
    - lineNumber: 434
      expression: "for-each(properties)"
      range: "(434,26)-(434,35)"
      evaluatedAs: true
      internalMethodName: "getMapFromKeyValuePairs"
    - lineNumber: 445
      expression: "for-each(candidates)"
      range: "(445,27)-(445,36)"
      evaluatedAs: true
      internalMethodName: "lowestIndexOf"
    - lineNumber: 447
      expression: "candidateIndex > 0"
      range: "(447,8)-(447,25)"
      evaluatedAs: false
      internalMethodName: "lowestIndexOf"
    - lineNumber: 436
      expression: "index > 0"
      range: "(436,18)-(436,26)"
      evaluatedAs: false
      internalMethodName: "getMapFromKeyValuePairs"
    - lineNumber: 437
      expression: "index > 0"
      range: "(437,20)-(437,28)"
      evaluatedAs: false
      internalMethodName: "getMapFromKeyValuePairs"
  - pathId: "path1"
    testPathName: "propertiesWhenIndexGreaterThan0"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "C3A6D0A1E9E56E355349700D53ABB09E"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "34D5178E6C31E1EACC02E529DBE074BE"
      valueUuid: "target"
    - type: "INPUT"
      name: "defaultProperties"
      modelFingerprint: "3D5A3A0EE1A75C1BCF7695EC709B56BD"
      valueUuid: "defaultProperties"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "41B5E387D27D54897F6B33A2E06AD43A"
      methodExercised:
        expression: "properties(defaults:hashMap):springApplicationBuilder2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "9F7A5924CBEBD32C16CC869D5ABB9D48"
      valueUuid: "springApplicationBuilder2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "A:C:"
            valueType: "java.lang.String"
            uuid: "string"
      valueType: "java.lang.String[]"
      uuid: "defaultProperties"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "springApplicationBuilder2"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "A"
              valueType: "java.lang.String"
              uuid: "string7"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "C:"
              valueType: "java.lang.String"
              uuid: "string8"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid1"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "hashMap"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "springApplicationBuilder2"
    branches:
    - lineNumber: 434
      expression: "for-each(properties)"
      range: "(434,26)-(434,35)"
      evaluatedAs: true
      internalMethodName: "getMapFromKeyValuePairs"
    - lineNumber: 445
      expression: "for-each(candidates)"
      range: "(445,27)-(445,36)"
      evaluatedAs: true
      internalMethodName: "lowestIndexOf"
    - lineNumber: 447
      expression: "candidateIndex > 0"
      range: "(447,8)-(447,25)"
      evaluatedAs: true
      internalMethodName: "lowestIndexOf"
    - lineNumber: 448
      expression: "index != -1"
      range: "(448,14)-(448,24)"
      evaluatedAs: false
      internalMethodName: "lowestIndexOf"
    - lineNumber: 436
      expression: "index > 0"
      range: "(436,18)-(436,26)"
      evaluatedAs: true
      internalMethodName: "getMapFromKeyValuePairs"
    - lineNumber: 437
      expression: "index > 0"
      range: "(437,20)-(437,28)"
      evaluatedAs: true
      internalMethodName: "getMapFromKeyValuePairs"
- method:
    name: "properties"
    sourceCodeSignature: "SpringApplicationBuilder properties(Properties defaultProperties)"
    returnType: "org.springframework.boot.builder.SpringApplicationBuilder"
    parameters:
    - name: "defaultProperties"
      type: "java.util.Properties"
    instructionFingerprint: "CE2EC7888362EB9C9363F2290E912B39"
  paths:
  - pathId: "path1"
    testPathName: "properties1WhenCollectionsListPropertiesPropertyNamesIsNotEmpty"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "575556EC7074306AA58C3546DAFB0303"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2A2E3002A1B55AA06DC2CCD760607AC6"
      valueUuid: "target"
    - type: "INPUT"
      name: "defaultProperties"
      modelFingerprint: "EAE964276AFC561C02A76C77F97B2639"
      valueUuid: "defaultProperties"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "2642D9B5963C0C1C6922C1409521D951"
      methodExercised:
        expression: "properties(defaults:hashMap):springApplicationBuilder2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "9F7A5924CBEBD32C16CC869D5ABB9D48"
      valueUuid: "springApplicationBuilder2"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.Properties.propertyNames() : java.util.Enumeration<?>"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "defaultPropertiesItem1Key1"
              valueType: "java.lang.String"
              uuid: "object"
              collectionUuid: "arrayList"
              explicitCastNeeded: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object2"
              collectionUuid: "defaultProperties"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid10"
      valueType: "java.util.Properties"
      uuid: "defaultProperties"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "springApplicationBuilder2"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "defaultPropertiesItem1Key1"
              valueType: "java.lang.String"
              uuid: "object"
              collectionUuid: "arrayList"
              explicitCastNeeded: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object2"
              collectionUuid: "defaultProperties"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.Object"
          uuid: "uniqueUuid11"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "hashMap"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "springApplicationBuilder2"
    branches:
    - lineNumber: 468
      expression: "for-each(Collections.list(properties.propertyNames()))"
      range: "(468,21)-(468,64)"
      evaluatedAs: true
      internalMethodName: "getMapFromProperties"
- method:
    name: "properties"
    sourceCodeSignature: "SpringApplicationBuilder properties(Map<String, Object>\
      \ defaults)"
    returnType: "org.springframework.boot.builder.SpringApplicationBuilder"
    parameters:
    - name: "defaults"
      type: "java.util.Map"
    instructionFingerprint: "73BDD071639926CB65B87E6C2979F9F8"
  paths:
  - pathId: "path1"
    testPathName: "properties2WhenThisParentIsNotNull"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "1D670276A389263D7B4DF21BA45237B2"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2A2E3002A1B55AA06DC2CCD760607AC6"
      valueUuid: "target"
    - type: "INPUT"
      name: "defaults"
      modelFingerprint: "D065B6C0849F2D2744603C8A49E49E4D"
      valueUuid: "defaults"
    - type: "FIELD"
      name: "application"
      modelFingerprint: "9AD23BF10E46735A1A961C65BF9C0B95"
      valueUuid: "springApplication"
      methodExercised:
        expression: "setDefaultProperties(defaultProperties:linkedHashMap):void2"
    - type: "FIELD"
      name: "parent"
      modelFingerprint: "EDC59A1638FDDCB54D7ADDD4B2FBAEC7"
      valueUuid: "springApplicationBuilder3"
      methodExercised:
        expression: "properties(defaults:linkedHashMap):springApplicationBuilder4"
    - type: "FIELD"
      name: "parent"
      modelFingerprint: "4A391C496DE2040EDEF7AB011EA1D971"
      valueUuid: "springApplicationBuilder3"
      methodExercised:
        expression: "environment(environment:fieldConfigurableEnvironment):springApplicationBuilder5"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D021EF2DA45CC56546673AB5E17969F6"
      valueUuid: "targetClassObject"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.application.setDefaultProperties(this.defaultProperties);"
      lineNumber: 484
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: application - Method: setDefaultProperties"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
        propertiesMap:
          parent:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
            uuid: "springApplicationBuilder3"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "defaults"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "springApplication"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "linkedHashMap"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "springApplicationBuilder3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "springApplicationBuilder4"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "linkedHashMap"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "springApplicationBuilder3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "springApplicationBuilder5"
    - sapientType: "NULL"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "fieldConfigurableEnvironment"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "targetClassObject"
      fixed: true
    branches:
    - lineNumber: 485
      expression: "this.parent != null"
      range: "(485,7)-(485,25)"
      evaluatedAs: true
- method:
    name: "profiles"
    sourceCodeSignature: "SpringApplicationBuilder profiles(String... profiles)"
    returnType: "org.springframework.boot.builder.SpringApplicationBuilder"
    parameters:
    - name: "profiles"
      type: "java.lang.String[]"
    instructionFingerprint: "28A15804577C0C3ACF0FACBC6C68AF96"
  paths:
  - pathId: "path1"
    testPathName: "profilesTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "18C4F6EE4F402C8300EB6D47751DB91A"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2A2E3002A1B55AA06DC2CCD760607AC6"
      valueUuid: "target"
    - type: "INPUT"
      name: "profiles"
      modelFingerprint: "428EF24C122A142CEA28BB8A17720A55"
      valueUuid: "profiles"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "2BF57DD4BED7BBF8D480A601C3B7E06C"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "toStringArray(collection:linkedHashSet2):stringArray"
        staticAccess: true
    - type: "FIELD"
      name: "application"
      modelFingerprint: "9543983E1F313377BB46996590B643C9"
      valueUuid: "springApplication"
      methodExercised:
        expression: "setAdditionalProfiles(profiles:stringArray):void"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D021EF2DA45CC56546673AB5E17969F6"
      valueUuid: "targetClassObject"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.application.setAdditionalProfiles(StringUtils.toStringArray(this.additionalProfiles));"
      lineNumber: 499
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: application - Method: setAdditionalProfiles"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "profiles"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.String"
      uuid: "linkedHashSet2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "springApplication"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "targetClassObject"
      fixed: true
- method:
    name: "beanNameGenerator"
    sourceCodeSignature: "SpringApplicationBuilder beanNameGenerator(BeanNameGenerator\
      \ beanNameGenerator)"
    returnType: "org.springframework.boot.builder.SpringApplicationBuilder"
    parameters:
    - name: "beanNameGenerator"
      type: "org.springframework.beans.factory.support.BeanNameGenerator"
    instructionFingerprint: "BF8DCE53E6F9EE5A64EC17DBB865D9F3"
  paths:
  - pathId: "path1"
    testPathName: "beanNameGeneratorTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "40F89E2E200C38FACFB826F0C22ECF00"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2A2E3002A1B55AA06DC2CCD760607AC6"
      valueUuid: "target"
    - type: "INPUT"
      name: "beanNameGenerator"
      modelFingerprint: "A020F8D68254D7AA4F4AF4990A153E4C"
      valueUuid: "beanNameGenerator"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D021EF2DA45CC56546673AB5E17969F6"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanNameGenerator"
      uuid: "beanNameGenerator"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "targetClassObject"
      fixed: true
- method:
    name: "environment"
    sourceCodeSignature: "SpringApplicationBuilder environment(ConfigurableEnvironment\
      \ environment)"
    returnType: "org.springframework.boot.builder.SpringApplicationBuilder"
    parameters:
    - name: "environment"
      type: "org.springframework.core.env.ConfigurableEnvironment"
    instructionFingerprint: "EBA692D5ECD7757C46D4B24016DC65D9"
  paths:
  - pathId: "path1"
    testPathName: "environmentTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "444DC2AEE9DCA019AC7E2F7A9C037122"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2A2E3002A1B55AA06DC2CCD760607AC6"
      valueUuid: "target"
    - type: "INPUT"
      name: "environment"
      modelFingerprint: "3F73E3E0E26E26EEEFAD4DD95D3AE3D4"
      valueUuid: "environment"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D021EF2DA45CC56546673AB5E17969F6"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "targetClassObject"
      fixed: true
- method:
    name: "environmentPrefix"
    sourceCodeSignature: "SpringApplicationBuilder environmentPrefix(String environmentPrefix)"
    returnType: "org.springframework.boot.builder.SpringApplicationBuilder"
    parameters:
    - name: "environmentPrefix"
      type: "java.lang.String"
    instructionFingerprint: "E446AF140AF6CFEBA0A483FA605CAA3A"
  paths:
  - pathId: "path1"
    testPathName: "environmentPrefixTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "768C75F4882E874D0E6E1CA2C7BD0FDF"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2A2E3002A1B55AA06DC2CCD760607AC6"
      valueUuid: "target"
    - type: "INPUT"
      name: "environmentPrefix"
      modelFingerprint: "C196C414541BB7071DC8D07A883BDCFF"
      valueUuid: "environmentPrefix"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D021EF2DA45CC56546673AB5E17969F6"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "environmentPrefix1"
      valueType: "java.lang.String"
      uuid: "environmentPrefix"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "targetClassObject"
      fixed: true
- method:
    name: "resourceLoader"
    sourceCodeSignature: "SpringApplicationBuilder resourceLoader(ResourceLoader resourceLoader)"
    returnType: "org.springframework.boot.builder.SpringApplicationBuilder"
    parameters:
    - name: "resourceLoader"
      type: "org.springframework.core.io.ResourceLoader"
    instructionFingerprint: "C957112583CF84D0DC718B0390D1B65C"
  paths:
  - pathId: "path1"
    testPathName: "resourceLoaderTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "25606956F32012B3865C3798A72A2DE7"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2A2E3002A1B55AA06DC2CCD760607AC6"
      valueUuid: "target"
    - type: "INPUT"
      name: "resourceLoader"
      modelFingerprint: "FDCEEEDB2A3FBA968DEEBF037704477E"
      valueUuid: "resourceLoader"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D021EF2DA45CC56546673AB5E17969F6"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader2"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "targetClassObject"
      fixed: true
- method:
    name: "initializers"
    sourceCodeSignature: "SpringApplicationBuilder initializers(ApplicationContextInitializer<?>...\
      \ initializers)"
    returnType: "org.springframework.boot.builder.SpringApplicationBuilder"
    parameters:
    - name: "initializers"
      type: "org.springframework.context.ApplicationContextInitializer[]"
    instructionFingerprint: "04E101795B3D90FD4DECDB718E7D376A"
  paths:
  - pathId: "path1"
    testPathName: "initializersTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "DD554226CA57BB0419D6563C81EC8520"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2A2E3002A1B55AA06DC2CCD760607AC6"
      valueUuid: "target"
    - type: "INPUT"
      name: "initializers"
      modelFingerprint: "DD6B97BC380C90382DDB892D470AE596"
      valueUuid: "initializers"
    - type: "FIELD"
      name: "application"
      modelFingerprint: "3F68CEA0D11E8DCA346762167B6ABC73"
      valueUuid: "springApplication"
      methodExercised:
        expression: "addInitializers(initializers:initializers):void"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D021EF2DA45CC56546673AB5E17969F6"
      valueUuid: "targetClassObject"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.application.addInitializers(initializers);"
      lineNumber: 561
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: application - Method: addInitializers"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.context.ApplicationContextInitializer[]"
      genericValueType: "?"
      uuid: "initializers"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "springApplication"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.context.ApplicationContextInitializer[]"
      genericValueType: "?"
      uuid: "initializers"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "targetClassObject"
      fixed: true
- method:
    name: "listeners"
    sourceCodeSignature: "SpringApplicationBuilder listeners(ApplicationListener<?>...\
      \ listeners)"
    returnType: "org.springframework.boot.builder.SpringApplicationBuilder"
    parameters:
    - name: "listeners"
      type: "org.springframework.context.ApplicationListener[]"
    instructionFingerprint: "C8E2A529B04454642BE30052ECDC1225"
  paths:
  - pathId: "path1"
    testPathName: "listenersTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "4B9F4A174FDA87BDF098DBD31C96492A"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2A2E3002A1B55AA06DC2CCD760607AC6"
      valueUuid: "target"
    - type: "INPUT"
      name: "listeners"
      modelFingerprint: "9ED97EB9BA7FA12DC73DD7F9D369E468"
      valueUuid: "listeners"
    - type: "FIELD"
      name: "application"
      modelFingerprint: "D80E532790FEE3ED2595B054CD7E0D20"
      valueUuid: "springApplication"
      methodExercised:
        expression: "addListeners(listeners:listeners):void"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D021EF2DA45CC56546673AB5E17969F6"
      valueUuid: "targetClassObject"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.application.addListeners(listeners);"
      lineNumber: 574
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: application - Method: addListeners"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.context.ApplicationListener[]"
      genericValueType: "?"
      uuid: "listeners"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "springApplication"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.context.ApplicationListener[]"
      genericValueType: "?"
      uuid: "listeners"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "targetClassObject"
      fixed: true
- method:
    name: "applicationStartup"
    sourceCodeSignature: "SpringApplicationBuilder applicationStartup(ApplicationStartup\
      \ applicationStartup)"
    returnType: "org.springframework.boot.builder.SpringApplicationBuilder"
    parameters:
    - name: "applicationStartup"
      type: "org.springframework.core.metrics.ApplicationStartup"
    instructionFingerprint: "E19D8B3A227AA9CEFDDD70678352C527"
  paths:
  - pathId: "path1"
    testPathName: "applicationStartupTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "EE80EA63D46F2EF872D8F30B7DCAE559"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2A2E3002A1B55AA06DC2CCD760607AC6"
      valueUuid: "target"
    - type: "INPUT"
      name: "applicationStartup"
      modelFingerprint: "E6FA8D24A01675AE1A78544C1B223327"
      valueUuid: "applicationStartup"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D021EF2DA45CC56546673AB5E17969F6"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.metrics.ApplicationStartup"
      uuid: "applicationStartup"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "targetClassObject"
      fixed: true
- method:
    name: "allowCircularReferences"
    sourceCodeSignature: "SpringApplicationBuilder allowCircularReferences(boolean\
      \ allowCircularReferences)"
    returnType: "org.springframework.boot.builder.SpringApplicationBuilder"
    parameters:
    - name: "allowCircularReferences"
      type: "boolean"
    instructionFingerprint: "69721D031C04ED528AB3A08CCEC80809"
  paths:
  - pathId: "path1"
    testPathName: "allowCircularReferencesTest"
    constructorSignature: "<init>(org.springframework.core.io.ResourceLoader,java.lang.Class<?>[])\
      \ : void"
    modelFingerprint: "740EA50700D6BEBEDCB09A952A30A9FF"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2A2E3002A1B55AA06DC2CCD760607AC6"
      valueUuid: "target"
    - type: "INPUT"
      name: "allowCircularReferences"
      modelFingerprint: "25122A5B9B174B7402DA7BC8C22BB0F7"
      valueUuid: "allowCircularReferences"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D021EF2DA45CC56546673AB5E17969F6"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.builder.SpringApplicationBuilder"
        parameters:
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "sources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "sources"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "allowCircularReferences"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.builder.SpringApplicationBuilder"
      uuid: "targetClassObject"
      fixed: true
