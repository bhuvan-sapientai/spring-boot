---
modelFingerprint: "89D643CF691E7E410E6CFE0111C48331"
targetClass:
  fullClassName: "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext"
methods:
- method:
    name: "refresh"
    sourceCodeSignature: "void refresh()"
    returnType: "void"
    throwsExceptions:
    - "org.springframework.beans.BeansException"
    - "java.lang.IllegalStateException"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 7
      catchExceptions:
      - "java.lang.RuntimeException"
    instructionFingerprint: "370D6D1415AF0270CE4AEDD7B084B631"
  paths:
  - pathId: "path1"
    testPathName: "refreshTest"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "1008A86542EB8515901DB434ED436DD9"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid1):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_INTERNAL_METHOD_FAILURE"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
      valueType: "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
  - pathId: "path2"
    testPathName: "refreshWhenServerManagerIsNullThrowsRuntimeException"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "BA3869E84EA6399C30BCAC13A77D8595"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid2):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C47223612F71BFE607116AFCAAE5E423"
      valueUuid: "runtimeException"
    disabled: false
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_INTERNAL_METHOD_FAILURE"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
      valueType: "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.RuntimeException"
        parameters: []
      valueType: "java.lang.RuntimeException"
      uuid: "runtimeException"
    branches:
    - lineNumber: 68
      expression: "catch-exception (RuntimeException)"
      range: "(68,3)-(68,28)"
      evaluatedAs: true
    - lineNumber: 70
      expression: "serverManager != null"
      range: "(70,8)-(70,28)"
      evaluatedAs: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 7
      catchExceptions:
      - "java.lang.RuntimeException"
- method:
    name: "onRefresh"
    sourceCodeSignature: "void onRefresh()"
    returnType: "void"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 8
      catchExceptions:
      - "java.lang.Throwable"
    instructionFingerprint: "04C5E5C921A901450122593F7785EBFD"
  paths:
  - pathId: "path1"
    testPathName: "onRefreshWhenServerManagerIsNull"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "927668ADBE598A60CF001CB8A997E613"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid3):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "56F5408DB05C813A35D774FC3A5DFA5E"
      valueUuid: "applicationStartup2"
      methodExercised:
        expression: "start(name:uniqueUuid4):startupStep"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "67DD8F9815F351B358A53C20B39F3FB1"
      methodExercised:
        expression: "getWebServerFactoryBeanName():string3"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "8A25BC3171A33B143B1A484B69B8E304"
      methodExercised:
        expression: "getWebServerFactory(factoryBeanName:string3):reactiveWebServerFactory"
    - type: "LOCAL_VARIABLE"
      name: "createWebServer"
      modelFingerprint: "1EA0756625D8353524772108312D2C64"
      valueUuid: "startupStep"
      methodExercised:
        expression: "tag(key:uniqueUuid5,value:string4):startupStep2"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "CA8B462E63307028B95B0E76BBCB758E"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "636393991278459210BC2E80D4647619"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "getBeanDefinition(beanName:string3):beanDefinition"
        throwsExceptions:
        - "org.springframework.beans.factory.NoSuchBeanDefinitionException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "91A022C4F0E40FA22EA99B1D4C47CF5B"
      valueUuid: "beanDefinition"
      methodExercised:
        expression: "isLazyInit():boolean1"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "CA8B462E63307028B95B0E76BBCB758E"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory2"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "FIELD"
      name: "serverManager"
      modelFingerprint: "573CB9BE5FB02FA17EED605554C05247"
      valueUuid: "webServerManager"
      methodExercised:
        expression: "getWebServer():webServer"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B7E838BBA4A42878155BD00819E16B22"
      valueUuid: "configurableListableBeanFactory2"
      methodExercised:
        expression: "registerSingleton(beanName:uniqueUuid6,singletonObject:webServerGracefulShutdownLifecycle):void3"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "CA8B462E63307028B95B0E76BBCB758E"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory3"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E9695FFADC863068A8820F059C9DB926"
      valueUuid: "configurableListableBeanFactory3"
      methodExercised:
        expression: "registerSingleton(beanName:uniqueUuid7,singletonObject:webServerStartStopLifecycle):void4"
    - type: "LOCAL_VARIABLE"
      name: "createWebServer"
      modelFingerprint: "CCFEEE5C5652E7F40A6611E50FF56B41"
      valueUuid: "startupStep"
      methodExercised:
        expression: "end():void5"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_INTERNAL_METHOD_FAILURE"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
        propertiesMap:
          serverManager:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.web.reactive.context.WebServerManager"
            uuid: "webServerManager"
            fixed: true
          applicationStartup:
            sapientType: "MOCK"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup2"
      valueType: "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.metrics.ApplicationStartup"
      uuid: "applicationStartup2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.metrics.StartupStep"
      uuid: "startupStep"
    - sapientType: "BASIC"
      content: !<regular>
        value: "spring.boot.webserver.create"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getWebServerFactoryBeanName1"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.reactive.server.ReactiveWebServerFactory"
      uuid: "reactiveWebServerFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getWebServerFactoryBeanName1"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.metrics.StartupStep"
      uuid: "startupStep"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.metrics.StartupStep"
      uuid: "startupStep2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "factory"
      valueType: "java.lang.String"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.BeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getWebServerFactoryBeanName1"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.BeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.reactive.context.WebServerManager"
      uuid: "webServerManager"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.WebServer"
      uuid: "webServer"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "webServerGracefulShutdown"
      valueType: "java.lang.String"
      uuid: "uniqueUuid6"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.context.WebServerGracefulShutdownLifecycle"
      uuid: "webServerGracefulShutdownLifecycle"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory3"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "webServerStartStop"
      valueType: "java.lang.String"
      uuid: "uniqueUuid7"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.reactive.context.WebServerStartStopLifecycle"
      uuid: "webServerStartStopLifecycle"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.metrics.StartupStep"
      uuid: "startupStep"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 90
      expression: "serverManager == null"
      range: "(90,7)-(90,27)"
      evaluatedAs: true
      internalMethodName: "createWebServer"
  - pathId: "path2"
    testPathName: "onRefreshWhenCaughtThrowableThrowsApplicationContextException"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "03AC3DB4A5F04EE1BC29B178343D6733"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid8):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "56F5408DB05C813A35D774FC3A5DFA5E"
      valueUuid: "applicationStartup2"
      methodExercised:
        expression: "start(name:uniqueUuid9):startupStep"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "67DD8F9815F351B358A53C20B39F3FB1"
      methodExercised:
        expression: "getWebServerFactoryBeanName():string3"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "8A25BC3171A33B143B1A484B69B8E304"
      methodExercised:
        expression: "getWebServerFactory(factoryBeanName:string3):reactiveWebServerFactory"
    - type: "LOCAL_VARIABLE"
      name: "createWebServer"
      modelFingerprint: "1EA0756625D8353524772108312D2C64"
      valueUuid: "startupStep"
      methodExercised:
        expression: "tag(key:uniqueUuid10,value:string4):startupStep2"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "CA8B462E63307028B95B0E76BBCB758E"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "636393991278459210BC2E80D4647619"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "getBeanDefinition(beanName:string3):beanDefinition"
        throwsExceptions:
        - "org.springframework.beans.factory.NoSuchBeanDefinitionException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "91A022C4F0E40FA22EA99B1D4C47CF5B"
      valueUuid: "beanDefinition"
      methodExercised:
        expression: "isLazyInit():boolean1"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "CA8B462E63307028B95B0E76BBCB758E"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory2"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "FIELD"
      name: "serverManager"
      modelFingerprint: "573CB9BE5FB02FA17EED605554C05247"
      valueUuid: "webServerManager"
      methodExercised:
        expression: "getWebServer():webServer"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B7E838BBA4A42878155BD00819E16B22"
      valueUuid: "configurableListableBeanFactory2"
      methodExercised:
        expression: "registerSingleton(beanName:uniqueUuid11,singletonObject:webServerGracefulShutdownLifecycle):void3"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "CA8B462E63307028B95B0E76BBCB758E"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory3"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E9695FFADC863068A8820F059C9DB926"
      valueUuid: "configurableListableBeanFactory3"
      methodExercised:
        expression: "registerSingleton(beanName:uniqueUuid12,singletonObject:webServerStartStopLifecycle):void4"
    - type: "LOCAL_VARIABLE"
      name: "createWebServer"
      modelFingerprint: "CCFEEE5C5652E7F40A6611E50FF56B41"
      valueUuid: "startupStep"
      methodExercised:
        expression: "end():void5"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "34C59119B1C64B4AAC9719569EEDBB91"
      valueUuid: "applicationContextException"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_INTERNAL_METHOD_FAILURE"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
        propertiesMap:
          serverManager:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.web.reactive.context.WebServerManager"
            uuid: "webServerManager"
            fixed: true
          applicationStartup:
            sapientType: "MOCK"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup2"
      valueType: "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.metrics.ApplicationStartup"
      uuid: "applicationStartup2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.metrics.StartupStep"
      uuid: "startupStep"
    - sapientType: "BASIC"
      content: !<regular>
        value: "spring.boot.webserver.create"
      valueType: "java.lang.String"
      uuid: "uniqueUuid9"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getWebServerFactoryBeanName1"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.reactive.server.ReactiveWebServerFactory"
      uuid: "reactiveWebServerFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getWebServerFactoryBeanName1"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.metrics.StartupStep"
      uuid: "startupStep"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.metrics.StartupStep"
      uuid: "startupStep2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "factory"
      valueType: "java.lang.String"
      uuid: "uniqueUuid10"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.BeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getWebServerFactoryBeanName1"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.BeanDefinition"
      uuid: "beanDefinition"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.reactive.context.WebServerManager"
      uuid: "webServerManager"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.WebServer"
      uuid: "webServer"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "webServerGracefulShutdown"
      valueType: "java.lang.String"
      uuid: "uniqueUuid11"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.context.WebServerGracefulShutdownLifecycle"
      uuid: "webServerGracefulShutdownLifecycle"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory3"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory3"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "webServerStartStop"
      valueType: "java.lang.String"
      uuid: "uniqueUuid12"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.reactive.context.WebServerStartStopLifecycle"
      uuid: "webServerStartStopLifecycle"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.metrics.StartupStep"
      uuid: "startupStep"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.springframework.context.ApplicationContextException"
        parameters:
        - name: "msg"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Unable to start reactive web server"
            valueType: "java.lang.String"
            uuid: "uniqueUuid13"
            fixed: true
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Throwable"
              parameters: []
            valueType: "java.lang.Throwable"
            uuid: "throwable"
      valueType: "org.springframework.context.ApplicationContextException"
      uuid: "applicationContextException"
      fixed: true
    branches:
    - lineNumber: 90
      expression: "serverManager == null"
      range: "(90,7)-(90,27)"
      evaluatedAs: true
      internalMethodName: "createWebServer"
    - lineNumber: 83
      expression: "catch-exception (Throwable)"
      range: "(83,3)-(83,21)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 8
      catchExceptions:
      - "java.lang.Throwable"
- method:
    name: "getWebServerFactoryBeanName"
    sourceCodeSignature: "String getWebServerFactoryBeanName()"
    returnType: "java.lang.String"
    instructionFingerprint: "B59B57E82B33335580B982A3CD70683D"
  paths:
  - pathId: "path1"
    testPathName: "getWebServerFactoryBeanNameWhenBeanNamesLengthEquals0ThrowsMissingWebServerFactoryBeanException"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "8607C596E2E5E19185EF87EDFDB59462"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid14):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "CA8B462E63307028B95B0E76BBCB758E"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A9A227AB96F3487A3BEFE7DBC902521D"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "getBeanNamesForType(type:uniqueUuid15):stringArray"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C8DCE9419C8068DCF0DC8800A10AD4CB"
      valueUuid: "missingWebServerFactoryBeanException"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
      valueType: "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid14"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.web.reactive.server.ReactiveWebServerFactory"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.web.reactive.server.ReactiveWebServerFactory"
      uuid: "uniqueUuid15"
      fixed: true
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.springframework.boot.web.context.MissingWebServerFactoryBeanException"
        parameters:
        - name: "webServerApplicationContextClass"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.boot.web.context.WebServerApplicationContext"
            uuid: "uniqueUuid16"
            fixed: true
        - name: "webServerFactoryClass"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.springframework.boot.web.reactive.server.ReactiveWebServerFactory"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.boot.web.server.WebServerFactory"
            uuid: "uniqueUuid17"
            fixed: true
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "REACTIVE"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "Enum-org.springframework.boot.WebApplicationType-REACTIVE"
            fixed: true
      valueType: "org.springframework.boot.web.context.MissingWebServerFactoryBeanException"
      uuid: "missingWebServerFactoryBeanException"
      fixed: true
    branches:
    - lineNumber: 109
      expression: "beanNames.length == 0"
      range: "(109,7)-(109,27)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "getWebServerFactoryBeanNameWhenBeanNamesLengthGreaterThan1ThrowsApplicationContextException"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "29759150A089B226A6455E82DC89D7A2"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid18):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "CA8B462E63307028B95B0E76BBCB758E"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "18DA6AFCC243231C40CB36FEA49516A4"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "getBeanNamesForType(type:uniqueUuid19):stringArray"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "85AECEAB29670E06908D95E055B9C55B"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "arrayToCommaDelimitedString(arr:stringArray):string3"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "352E9F75803F526511F3263644094F8E"
      valueUuid: "applicationContextException"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
      valueType: "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid18"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getBeanNamesForTypeItem1"
            valueType: "java.lang.String"
            uuid: "stringArrayItem0"
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getBeanNamesForTypeItem1"
            valueType: "java.lang.String"
            uuid: "stringArrayItem1"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.web.reactive.server.ReactiveWebServerFactory"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.web.reactive.server.ReactiveWebServerFactory"
      uuid: "uniqueUuid19"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getBeanNamesForTypeItem1"
            valueType: "java.lang.String"
            uuid: "stringArrayItem0"
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getBeanNamesForTypeItem1"
            valueType: "java.lang.String"
            uuid: "stringArrayItem1"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.springframework.context.ApplicationContextException"
        parameters:
        - name: "msg"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Unable to start ReactiveWebApplicationContext due to multiple\
                \ ReactiveWebServerFactory beans : B"
            valueType: "java.lang.String"
            uuid: "string4"
      valueType: "org.springframework.context.ApplicationContextException"
      uuid: "applicationContextException"
      fixed: true
    branches:
    - lineNumber: 109
      expression: "beanNames.length == 0"
      range: "(109,7)-(109,27)"
      evaluatedAs: false
    - lineNumber: 113
      expression: "beanNames.length > 1"
      range: "(113,7)-(113,26)"
      evaluatedAs: true
  - pathId: "path3"
    testPathName: "getWebServerFactoryBeanNameWhenBeanNamesLengthNotGreaterThan1"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "49BD4C351B1947EB3FE16E79F5C99142"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid20):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "CA8B462E63307028B95B0E76BBCB758E"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "0DE58C5304155591471DAF92F3C31444"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "getBeanNamesForType(type:uniqueUuid21):stringArray"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D446A609419428DDEAA49A58091F3986"
      valueUuid: "string3"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
      valueType: "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid20"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getBeanNamesForTypeItem1"
            valueType: "java.lang.String"
            uuid: "string3"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.web.reactive.server.ReactiveWebServerFactory"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.web.reactive.server.ReactiveWebServerFactory"
      uuid: "uniqueUuid21"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanNamesForTypeItem1"
      valueType: "java.lang.String"
      uuid: "string3"
    branches:
    - lineNumber: 109
      expression: "beanNames.length == 0"
      range: "(109,7)-(109,27)"
      evaluatedAs: false
    - lineNumber: 113
      expression: "beanNames.length > 1"
      range: "(113,7)-(113,26)"
      evaluatedAs: false
- method:
    name: "getWebServerFactory"
    sourceCodeSignature: "ReactiveWebServerFactory getWebServerFactory(String factoryBeanName)"
    returnType: "org.springframework.boot.web.reactive.server.ReactiveWebServerFactory"
    parameters:
    - name: "factoryBeanName"
      type: "java.lang.String"
    instructionFingerprint: "454338ED0070C7C4AD48069FC9620C05"
  paths:
  - pathId: "path1"
    testPathName: "getWebServerFactoryTest"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "91338D20C2C7A22BADDFE9E863DEF293"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "INPUT"
      name: "factoryBeanName"
      modelFingerprint: "2298166BF6AA1711389B6D5194F0C3B0"
      valueUuid: "factoryBeanName"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid22):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "CA8B462E63307028B95B0E76BBCB758E"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "FC69ECA4C2112BC0D1F09B0936855E3C"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "getBean(name:factoryBeanName,requiredType:uniqueUuid23):object"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "F55B30607D16D994AC79F1A20CFD1619"
      valueUuid: "object"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
      valueType: "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "factoryBeanName1"
      valueType: "java.lang.String"
      uuid: "factoryBeanName"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid22"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.reactive.server.ReactiveWebServerFactory"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "factoryBeanName1"
      valueType: "java.lang.String"
      uuid: "factoryBeanName"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.web.reactive.server.ReactiveWebServerFactory"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.web.reactive.server.ReactiveWebServerFactory"
      uuid: "uniqueUuid23"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.reactive.server.ReactiveWebServerFactory"
      uuid: "object"
      explicitCastNeeded: true
- method:
    name: "getHttpHandler"
    sourceCodeSignature: "HttpHandler getHttpHandler()"
    returnType: "org.springframework.http.server.reactive.HttpHandler"
    instructionFingerprint: "3D5B23E2C4E14D5A9BC49DEB3D6DCEB4"
  paths:
  - pathId: "path1"
    testPathName: "getHttpHandlerWhenBeanNamesLengthEquals0ThrowsApplicationContextException"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "A094C9A37B997B1D8C18771F3ECD4423"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid24):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "CA8B462E63307028B95B0E76BBCB758E"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A6DC084B7328CFE4F5EB06B23EA09452"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "getBeanNamesForType(type:uniqueUuid25):stringArray"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E1F0C752195F7C88626666042C7F3012"
      valueUuid: "applicationContextException"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
      valueType: "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid24"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.http.server.reactive.HttpHandler"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.http.server.reactive.HttpHandler"
      uuid: "uniqueUuid25"
      fixed: true
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.springframework.context.ApplicationContextException"
        parameters:
        - name: "msg"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Unable to start ReactiveWebApplicationContext due to missing\
                \ HttpHandler bean."
            valueType: "java.lang.String"
            uuid: "uniqueUuid26"
            fixed: true
      valueType: "org.springframework.context.ApplicationContextException"
      uuid: "applicationContextException"
      fixed: true
    branches:
    - lineNumber: 132
      expression: "beanNames.length == 0"
      range: "(132,7)-(132,27)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "getHttpHandlerWhenBeanNamesLengthGreaterThan1ThrowsApplicationContextException"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "68C45E232E47ADF64CBA7523952C3601"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid27):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "CA8B462E63307028B95B0E76BBCB758E"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "76571280ACD477E9A173A1380EBA44A0"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "getBeanNamesForType(type:uniqueUuid28):stringArray"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "85AECEAB29670E06908D95E055B9C55B"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "arrayToCommaDelimitedString(arr:stringArray):string3"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "38F8B1D5D3890DD38F5241AF90BB931E"
      valueUuid: "applicationContextException"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
      valueType: "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid27"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getBeanNamesForTypeItem1"
            valueType: "java.lang.String"
            uuid: "stringArrayItem0"
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getBeanNamesForTypeItem1"
            valueType: "java.lang.String"
            uuid: "stringArrayItem1"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.http.server.reactive.HttpHandler"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.http.server.reactive.HttpHandler"
      uuid: "uniqueUuid28"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getBeanNamesForTypeItem1"
            valueType: "java.lang.String"
            uuid: "stringArrayItem0"
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getBeanNamesForTypeItem1"
            valueType: "java.lang.String"
            uuid: "stringArrayItem1"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.springframework.context.ApplicationContextException"
        parameters:
        - name: "msg"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Unable to start ReactiveWebApplicationContext due to multiple\
                \ HttpHandler beans : B"
            valueType: "java.lang.String"
            uuid: "string4"
      valueType: "org.springframework.context.ApplicationContextException"
      uuid: "applicationContextException"
      fixed: true
    branches:
    - lineNumber: 132
      expression: "beanNames.length == 0"
      range: "(132,7)-(132,27)"
      evaluatedAs: false
    - lineNumber: 136
      expression: "beanNames.length > 1"
      range: "(136,7)-(136,26)"
      evaluatedAs: true
  - pathId: "path3"
    testPathName: "getHttpHandlerWhenBeanNamesLengthNotGreaterThan1"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "626AA0071766F04DB2A02B9125587464"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid29):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "CA8B462E63307028B95B0E76BBCB758E"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "ED914BA2A3D8FF4D8DA12704CA31B371"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "getBeanNamesForType(type:uniqueUuid30):stringArray"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "CA8B462E63307028B95B0E76BBCB758E"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory2"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "C724EFA0F4F34D70992B7F4776591633"
      valueUuid: "configurableListableBeanFactory2"
      methodExercised:
        expression: "getBean(name:string3,requiredType:uniqueUuid31):object"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "49FFA2E7F4FF9E3552DD21E3F3247D57"
      valueUuid: "object"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
      valueType: "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid29"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getBeanNamesForTypeItem1"
            valueType: "java.lang.String"
            uuid: "string3"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.http.server.reactive.HttpHandler"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.http.server.reactive.HttpHandler"
      uuid: "uniqueUuid30"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "MOCK"
      valueType: "org.springframework.http.server.reactive.HttpHandler"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanNamesForTypeItem1"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.http.server.reactive.HttpHandler"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.http.server.reactive.HttpHandler"
      uuid: "uniqueUuid31"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.http.server.reactive.HttpHandler"
      uuid: "object"
      explicitCastNeeded: true
    branches:
    - lineNumber: 132
      expression: "beanNames.length == 0"
      range: "(132,7)-(132,27)"
      evaluatedAs: false
    - lineNumber: 136
      expression: "beanNames.length > 1"
      range: "(136,7)-(136,26)"
      evaluatedAs: false
- method:
    name: "doClose"
    sourceCodeSignature: "void doClose()"
    returnType: "void"
    instructionFingerprint: "7A1ACB5DF3E54F623E475C16C8D03B1C"
  paths:
  - pathId: "path1"
    testPathName: "doCloseWhenIsActive"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "C3460894FA39670FB8A56A56285373C2"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid32):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "EE7440D3C0AC3625AD38D51A8F5207CA"
      methodExercised:
        expression: "isActive():boolean1"
    - type: "STATIC"
      name: "AvailabilityChangeEvent.class"
      modelFingerprint: "4D9EC9E4E1F31B51D5A2347A8FECFDA3"
      valueUuid: "AvailabilityChangeEvent.class"
      methodExercised:
        expression: "publish(context:targetClassObject,state:Enum-org.springframework.boot.availability.ReadinessState-REFUSING_TRAFFIC):void2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_INTERNAL_METHOD_FAILURE"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
      valueType: "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid32"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.availability.AvailabilityChangeEvent"
      uuid: "AvailabilityChangeEvent.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "THIS"
      valueType: "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "REFUSING_TRAFFIC"
      valueType: "org.springframework.boot.availability.ReadinessState"
      uuid: "Enum-org.springframework.boot.availability.ReadinessState-REFUSING_TRAFFIC"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 146
      expression: "isActive()"
      range: "(146,7)-(146,16)"
      evaluatedAs: true
- method:
    name: "getWebServer"
    sourceCodeSignature: "WebServer getWebServer()"
    returnType: "org.springframework.boot.web.server.WebServer"
    instructionFingerprint: "9BFDC8FA7FE5631C74B3FD2CADD43CF1"
  paths:
  - pathId: "path1"
    testPathName: "getWebServerWhenServerManagerIsNull"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "E71B1F4B8C880C4B6450B0C58728B24D"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid33):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3CD5C97176934E8488411702538AEE7C"
      valueUuid: "webServer"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
      valueType: "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid33"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.boot.web.server.WebServer"
      uuid: "webServer"
      fixed: true
    branches:
    - lineNumber: 160
      expression: "serverManager != null"
      range: "(160,11)-(160,31)"
      evaluatedAs: false
- method:
    name: "getServerNamespace"
    sourceCodeSignature: "String getServerNamespace()"
    returnType: "java.lang.String"
    instructionFingerprint: "354CD6D9F91FD276D5B90A925D1406F3"
  paths:
  - pathId: "path1"
    testPathName: "getServerNamespaceTest"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "32DFA04ED998A605176BEA43CFC3F1E0"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setServerNamespace"
    sourceCodeSignature: "void setServerNamespace(String serverNamespace)"
    returnType: "void"
    parameters:
    - name: "serverNamespace"
      type: "java.lang.String"
    instructionFingerprint: "7C185200629741A742E4DE73BBBB9DEC"
  paths:
  - pathId: "path1"
    testPathName: "setServerNamespaceTest"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "6E8C3454B27977B473F9C1582F5B0A40"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
