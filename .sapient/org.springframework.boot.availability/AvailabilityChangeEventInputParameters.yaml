---
modelFingerprint: "73E54EC2C1343952856C3DE7EB9B5FF6"
methods:
- method:
    name: "getState"
    returnType: "org.springframework.boot.availability.AvailabilityState"
    signature: "getState() : org.springframework.boot.availability.AvailabilityState"
    instructionFingerprint: "C11665DDB5AB3BC007CD0F62F3522683"
    parametersTypes: []
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "getStateTest"
    nameDefinedByUser: false
    constructorSignature: "<init>(java.lang.Object,org.springframework.boot.availability.AvailabilityState)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "5A117B78BDC5D43B9711D88E19D46059"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "93ED6C4BA465F9B28AC1FEAA5F0674F4"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.availability.AvailabilityChangeEvent"
          parameters:
          - name: "source"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.lang.Object"
              uuid: "<init>_object1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "state"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.availability.AvailabilityState"
              uuid: "<init>_availabilityState1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.availability.AvailabilityChangeEvent"
          parameters:
          - name: "source"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.lang.Object"
              uuid: "<init>_object1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "state"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.availability.AvailabilityState"
              uuid: "<init>_availabilityState1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.availability.AvailabilityChangeEvent"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "20FE5AABD590479EF4401749CE7356BB"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.Assert"
        uuid: "org.springframework.util.Assert"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.availability.AvailabilityState"
            uuid: "<init>_availabilityState1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Payload must not be null"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "notNull(AvailabilityState,String): void"
        returnValue:
          sapientType: "VOID"
          valueType: "void"
          uuid: "<init>_void1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ResolvableType"
      modelFingerprint: "F7E3BC7B122B68C954974278C4DBDA31"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.core.ResolvableType"
        uuid: "org.springframework.core.ResolvableType"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.core.ResolvableType"
        name: "forInstance"
        parameters:
        - name: "instance"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.availability.AvailabilityState"
            uuid: "<init>_availabilityState1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "forInstance(AvailabilityState): ResolvableType"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.core.ResolvableType"
          uuid: "<init>_resolvableType1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8A0EC8870253C59495213C82475EAAF9"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.availability.AvailabilityState"
        uuid: "<init>_availabilityState1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "ccc44468-b0a5-319f-ae80-41e9abbf402a"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_UNSOLVABLE"
      source: "* Return the changed availability state."
      lineNumber: 49
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "getResolvableType"
    returnType: "org.springframework.core.ResolvableType"
    signature: "getResolvableType() : org.springframework.core.ResolvableType"
    instructionFingerprint: "0EB37F7E66C88E4547E9603255A019C0"
    parametersTypes: []
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "getResolvableTypeWhenStateNotInstanceOfEnum"
    nameDefinedByUser: false
    constructorSignature: "<init>(java.lang.Object,org.springframework.boot.availability.AvailabilityState)\
      \ : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "92899AE52763CB367E8907E19CFD1D5D"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "93ED6C4BA465F9B28AC1FEAA5F0674F4"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.availability.AvailabilityChangeEvent"
          parameters:
          - name: "source"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.lang.Object"
              uuid: "<init>_object1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "state"
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.availability.AvailabilityState"
              uuid: "<init>_availabilityState1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.availability.AvailabilityChangeEvent"
          parameters:
          - name: "source"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.lang.Object"
              uuid: "<init>_object1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "state"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.springframework.boot.availability.AvailabilityState"
              uuid: "<init>_availabilityState1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.availability.AvailabilityChangeEvent"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "20FE5AABD590479EF4401749CE7356BB"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.Assert"
        uuid: "org.springframework.util.Assert"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.availability.AvailabilityState"
            uuid: "<init>_availabilityState1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Payload must not be null"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "notNull(AvailabilityState,String): void"
        returnValue:
          sapientType: "VOID"
          valueType: "void"
          uuid: "<init>_void1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ResolvableType"
      modelFingerprint: "F7E3BC7B122B68C954974278C4DBDA31"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.core.ResolvableType"
        uuid: "org.springframework.core.ResolvableType"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.core.ResolvableType"
        name: "forInstance"
        parameters:
        - name: "instance"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.availability.AvailabilityState"
            uuid: "<init>_availabilityState1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "forInstance(AvailabilityState): ResolvableType"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.core.ResolvableType"
          uuid: "<init>_resolvableType1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "F09A6D6F26D98344BE8179287F25228F"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getState"
        parameters: []
        signature: "getState(): AvailabilityState"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.availability.AvailabilityState"
          uuid: "getStateType_availabilityState1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ResolvableType"
      modelFingerprint: "38E68B626851F5140B53AB8B303F40D2"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.core.ResolvableType"
        uuid: "org.springframework.core.ResolvableType"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.core.ResolvableType"
        name: "forClassWithGenerics"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.springframework.boot.availability.AvailabilityChangeEvent"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "generics"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.availability.AvailabilityState"
                  suggestedContent: !<regular>
                    value: "org.springframework.boot.availability.AvailabilityState"
                  valueType: "java.lang.Class"
                  genericValueType: "?"
                  uuid: "getStateType_class1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            suggestedContent: !<array>
              values:
                0:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.availability.AvailabilityState"
                  suggestedContent: !<regular>
                    value: "org.springframework.boot.availability.AvailabilityState"
                  valueType: "java.lang.Class"
                  genericValueType: "?"
                  uuid: "getStateType_class1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "java.lang.Class[]"
            genericValueType: "?"
            uuid: "getResolvableType_class[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "forClassWithGenerics(Class,Class[]): ResolvableType"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.core.ResolvableType"
          uuid: "getResolvableType_resolvableType1"
          fixed: false
          equalsMethodPresent: true
          explicitCastNeeded: false
        access: 137
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "F32489407E9C130A597F2624FC2D19CA"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.core.ResolvableType"
        uuid: "getResolvableType_resolvableType1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "0fdcc628-f655-30f9-a6a4-254974870393"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_UNSOLVABLE"
      source: "* Return the changed availability state."
      lineNumber: 49
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
- method:
    name: "publish"
    returnType: "void"
    signature: "publish(org.springframework.context.ApplicationContext,org.springframework.boot.availability.AvailabilityState)\
      \ : void"
    instructionFingerprint: "C21E554661FCAA9FCEB436E3ED34A1EA"
    parametersTypes:
    - "org.springframework.context.ApplicationContext"
    - "org.springframework.boot.availability.AvailabilityState"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "publishTest"
    nameDefinedByUser: false
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "AAB03A16C5A68AF6FA0E19FA503BB659"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "context"
      modelFingerprint: "E10AC7619D57B7DBEFA0BF23A0CDF7D2"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.context.ApplicationContext"
        uuid: "publish_applicationContext1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "state"
      modelFingerprint: "A2EDCBBDC302659A40DAB16A4F9695AA"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.availability.AvailabilityState"
        uuid: "publish_availabilityState1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "405FFD6068941D16583CB5701822E335"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.Assert"
        uuid: "org.springframework.util.Assert"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.ApplicationContext"
            uuid: "publish_applicationContext1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Context must not be null"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "notNull(ApplicationContext,String): void"
        returnValue:
          sapientType: "VOID"
          valueType: "void"
          uuid: "publish_void1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "AvailabilityChangeEvent"
      modelFingerprint: "C92C001AE7E09981108E60AC9C7791C5"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.availability.AvailabilityChangeEvent"
        uuid: "org.springframework.boot.availability.AvailabilityChangeEvent"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.availability.AvailabilityChangeEvent"
        name: "publish"
        parameters:
        - name: "publisher"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.ApplicationContext"
            uuid: "publish_applicationContext1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "source"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.context.ApplicationContext"
            uuid: "publish_applicationContext1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "state"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.availability.AvailabilityState"
            uuid: "publish_availabilityState1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "publish(ApplicationContext,ApplicationContext,AvailabilityState):\
          \ void"
        returnValue:
          sapientType: "VOID"
          valueType: "void"
          uuid: "publish_void2"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "VOID"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "590cd13f-424c-34cb-95b0-2654fa9768cf"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "publish"
    returnType: "void"
    signature: "publish(org.springframework.context.ApplicationEventPublisher,java.lang.Object,org.springframework.boot.availability.AvailabilityState)\
      \ : void"
    instructionFingerprint: "0F2AB2BF9ED47C4C617FCEE7B66350DD"
    parametersTypes:
    - "org.springframework.context.ApplicationEventPublisher"
    - "java.lang.Object"
    - "org.springframework.boot.availability.AvailabilityState"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "publish1Test"
    nameDefinedByUser: false
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "132924B5788CE1D3F2800F7FDB924C07"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "publisher"
      modelFingerprint: "091D70E43933869429103AAB231EEB2F"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.context.ApplicationEventPublisher"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.context.ApplicationEventPublisher"
        uuid: "publish_applicationEventPublisher1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "source"
      modelFingerprint: "26D7543A2F4ADA30195021819A4A01D1"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "java.lang.Object"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.Object"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.Object"
        uuid: "publish_object1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "state"
      modelFingerprint: "A2EDCBBDC302659A40DAB16A4F9695AA"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.availability.AvailabilityState"
        uuid: "publish_availabilityState1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "593D73B88361B543D82B96945F0A643D"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.Assert"
        uuid: "org.springframework.util.Assert"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          value:
            sapientType: "MOCK"
            suggestedContent: !<unknown_object>
              target: "org.springframework.context.ApplicationEventPublisher"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "org.springframework.context.ApplicationEventPublisher"
            uuid: "publish_applicationEventPublisher1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Publisher must not be null"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "notNull(ApplicationEventPublisher,String): void"
        returnValue:
          sapientType: "VOID"
          valueType: "void"
          uuid: "publish_void1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "20FE5AABD590479EF4401749CE7356BB"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.Assert"
        uuid: "org.springframework.util.Assert"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.availability.AvailabilityState"
            uuid: "publish_availabilityState1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Payload must not be null"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "notNull(AvailabilityState,String): void"
        returnValue:
          sapientType: "VOID"
          valueType: "void"
          uuid: "<init>_void1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ResolvableType"
      modelFingerprint: "F7E3BC7B122B68C954974278C4DBDA31"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.core.ResolvableType"
        uuid: "org.springframework.core.ResolvableType"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.core.ResolvableType"
        name: "forInstance"
        parameters:
        - name: "instance"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.availability.AvailabilityState"
            uuid: "publish_availabilityState1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "forInstance(AvailabilityState): ResolvableType"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.core.ResolvableType"
          uuid: "<init>_resolvableType1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "publisher"
      modelFingerprint: "D2D27FACB04BCC827B198CB9F01DF8E1"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.context.ApplicationEventPublisher"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.context.ApplicationEventPublisher"
        uuid: "publish_applicationEventPublisher1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "publisher"
        name: "publishEvent"
        parameters:
        - name: "event"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.availability.AvailabilityChangeEvent"
              parameters:
              - name: "source"
                value:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "java.lang.Object"
                    parameters: []
                    privateConstructor: false
                    createdByTargetCode: false
                  suggestedContent: !<new>
                    target: "java.lang.Object"
                    parameters: []
                    privateConstructor: false
                    createdByTargetCode: false
                  valueType: "java.lang.Object"
                  uuid: "publish_object1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              - name: "state"
                value:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.availability.AvailabilityState"
                  uuid: "publish_availabilityState1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              privateConstructor: false
              createdByTargetCode: true
            suggestedContent: !<new>
              target: "org.springframework.boot.availability.AvailabilityChangeEvent"
              parameters:
              - name: "source"
                value:
                  sapientType: "UNKNOWN"
                  suggestedContent: !<new>
                    target: "java.lang.Object"
                    parameters: []
                    privateConstructor: false
                    createdByTargetCode: false
                  valueType: "java.lang.Object"
                  uuid: "publish_object1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              - name: "state"
                value:
                  sapientType: "UNKNOWN"
                  valueType: "org.springframework.boot.availability.AvailabilityState"
                  uuid: "publish_availabilityState1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              privateConstructor: false
              createdByTargetCode: true
            valueType: "org.springframework.boot.availability.AvailabilityChangeEvent"
            uuid: "publish_availabilityChangeEvent1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "publishEvent(AvailabilityChangeEvent): void"
        returnValue:
          sapientType: "VOID"
          valueType: "void"
          uuid: "publish_void2"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "VOID"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "125fc076-78de-38a4-953e-6a261fd08c0c"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_UNSOLVABLE"
      source: "* Return the changed availability state."
      lineNumber: 49
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
