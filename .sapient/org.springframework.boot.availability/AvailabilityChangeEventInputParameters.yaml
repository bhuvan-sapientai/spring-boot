---
modelFingerprint: "94762530D770D05C610F48420AF2AE7C"
methods:
- method:
    name: "getState"
    signature: "getState() : org.springframework.boot.availability.AvailabilityState"
    sourceCodeSignature: "S getState()"
    instructionFingerprint: "C11665DDB5AB3BC007CD0F62F3522683"
  paths:
  - pathId: "path1"
    testPathName: "getStateTest"
    constructorSignature: "<init>(java.lang.Object,org.springframework.boot.availability.AvailabilityState)\
      \ : void"
    modelFingerprint: "5A117B78BDC5D43B9711D88E19D46059"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "93ED6C4BA465F9B28AC1FEAA5F0674F4"
      index: 1
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "20FE5AABD590479EF4401749CE7356BB"
      index: 2
      valueUuid: "uuid2"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "<init>_availabilityState1"
        - name: "message"
          valueUuid: "uuid1"
        signature: "notNull(AvailabilityState,String): void"
        returnValueUuid: "<init>_void1"
        access: 9
    - type: "STATIC"
      name: "ResolvableType"
      modelFingerprint: "F7E3BC7B122B68C954974278C4DBDA31"
      index: 3
      valueUuid: "uuid3"
      methodExercised:
        target: "org.springframework.core.ResolvableType"
        name: "forInstance"
        parameters:
        - name: "instance"
          valueUuid: "<init>_availabilityState1"
        signature: "forInstance(AvailabilityState): ResolvableType"
        returnValueUuid: "<init>_resolvableType1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8A0EC8870253C59495213C82475EAAF9"
      index: 4
      valueUuid: "<init>_availabilityState1"
    uuid: "ccc44468-b0a5-319f-ae80-41e9abbf402a"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_UNSOLVABLE"
      source: "* Return the changed availability state."
      lineNumber: 49
      details: "Method java.lang.System::currentTimeMillis has a unrepeatable behavior"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.availability.AvailabilityChangeEvent"
        parameters:
        - name: "source"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "<init>_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "state"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.availability.AvailabilityState"
            uuid: "<init>_availabilityState1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.availability.AvailabilityChangeEvent"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.availability.AvailabilityState"
      uuid: "<init>_availabilityState1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Payload must not be null"
      valueType: "java.lang.String"
      uuid: "uuid1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "uuid3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "<init>_resolvableType1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.availability.AvailabilityState"
      uuid: "<init>_availabilityState1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.availability.AvailabilityState"
      uuid: "<init>_availabilityState1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "getResolvableType"
    signature: "getResolvableType() : org.springframework.core.ResolvableType"
    sourceCodeSignature: "ResolvableType getResolvableType()"
    instructionFingerprint: "0EB37F7E66C88E4547E9603255A019C0"
  paths:
  - pathId: "path1"
    testPathName: "getResolvableTypeWhenStateNotInstanceOfEnum"
    constructorSignature: "<init>(java.lang.Object,org.springframework.boot.availability.AvailabilityState)\
      \ : void"
    modelFingerprint: "0709E1817B17812BD43518BE60ADECF2"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "93ED6C4BA465F9B28AC1FEAA5F0674F4"
      index: 1
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "20FE5AABD590479EF4401749CE7356BB"
      index: 2
      valueUuid: "uuid5"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "<init>_availabilityState1"
        - name: "message"
          valueUuid: "uuid4"
        signature: "notNull(AvailabilityState,String): void"
        returnValueUuid: "<init>_void1"
        access: 9
    - type: "STATIC"
      name: "ResolvableType"
      modelFingerprint: "F7E3BC7B122B68C954974278C4DBDA31"
      index: 3
      valueUuid: "uuid6"
      methodExercised:
        target: "org.springframework.core.ResolvableType"
        name: "forInstance"
        parameters:
        - name: "instance"
          valueUuid: "<init>_availabilityState1"
        signature: "forInstance(AvailabilityState): ResolvableType"
        returnValueUuid: "<init>_resolvableType1"
        access: 9
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "F09A6D6F26D98344BE8179287F25228F"
      index: 4
      methodExercised:
        target: "target"
        name: "getState"
        parameters: []
        signature: "getState(): AvailabilityState"
        returnValueUuid: "getStateType_availabilityState1"
        access: 1
    - type: "STATIC"
      name: "ResolvableType"
      modelFingerprint: "8EE9CEFF6C33103643A6C5D44195C8D7"
      index: 5
      valueUuid: "uuid8"
      methodExercised:
        target: "org.springframework.core.ResolvableType"
        name: "forClassWithGenerics"
        parameters:
        - name: "clazz"
          valueUuid: "uuid7"
        - name: "generics"
          valueUuid: "getResolvableType_class[]1"
        signature: "forClassWithGenerics(Class,Class[]): ResolvableType"
        returnValueUuid: "getResolvableType_resolvableType1"
        access: 137
    - type: "RESULT"
      name: "result"
      modelFingerprint: "F32489407E9C130A597F2624FC2D19CA"
      index: 6
      valueUuid: "getResolvableType_resolvableType1"
    uuid: "0fdcc628-f655-30f9-a6a4-254974870393"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_UNSOLVABLE"
      source: "* Return the changed availability state."
      lineNumber: 49
      details: "Method java.lang.System::currentTimeMillis has a unrepeatable behavior"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.availability.AvailabilityChangeEvent"
        parameters:
        - name: "source"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "<init>_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "state"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.availability.AvailabilityState"
            uuid: "<init>_availabilityState1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.availability.AvailabilityChangeEvent"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.availability.AvailabilityState"
      uuid: "<init>_availabilityState1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Payload must not be null"
      valueType: "java.lang.String"
      uuid: "uuid4"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "uuid6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "<init>_resolvableType1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.availability.AvailabilityState"
      uuid: "<init>_availabilityState1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.availability.AvailabilityState"
      uuid: "getStateType_availabilityState1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "uuid8"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "getResolvableType_resolvableType1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.availability.AvailabilityChangeEvent"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.availability.AvailabilityChangeEvent"
      uuid: "uuid7"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.springframework.boot.availability.AvailabilityState"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "getStateType_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "getResolvableType_class[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "getResolvableType_resolvableType1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "publish"
    signature: "publish(org.springframework.context.ApplicationContext,org.springframework.boot.availability.AvailabilityState)\
      \ : void"
    sourceCodeSignature: "void publish(ApplicationContext context, S state)"
    instructionFingerprint: "C21E554661FCAA9FCEB436E3ED34A1EA"
  paths:
  - pathId: "path1"
    testPathName: "publishTest"
    modelFingerprint: "AAB03A16C5A68AF6FA0E19FA503BB659"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "context"
      modelFingerprint: "E10AC7619D57B7DBEFA0BF23A0CDF7D2"
      index: 1
      valueUuid: "publish_applicationContext1"
    - type: "INPUT"
      name: "state"
      modelFingerprint: "A2EDCBBDC302659A40DAB16A4F9695AA"
      index: 2
      valueUuid: "publish_availabilityState1"
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "405FFD6068941D16583CB5701822E335"
      index: 3
      valueUuid: "uuid10"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "publish_applicationContext1"
        - name: "message"
          valueUuid: "uuid9"
        signature: "notNull(ApplicationContext,String): void"
        returnValueUuid: "publish_void1"
        access: 9
    - type: "STATIC"
      name: "AvailabilityChangeEvent"
      modelFingerprint: "C92C001AE7E09981108E60AC9C7791C5"
      index: 4
      valueUuid: "uuid11"
      methodExercised:
        target: "org.springframework.boot.availability.AvailabilityChangeEvent"
        name: "publish"
        parameters:
        - name: "publisher"
          valueUuid: "publish_applicationContext1"
        - name: "source"
          valueUuid: "publish_applicationContext1"
        - name: "state"
          valueUuid: "publish_availabilityState1"
        signature: "publish(ApplicationContext,ApplicationContext,AvailabilityState):\
          \ void"
        returnValueUuid: "publish_void2"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 5
      valueUuid: "uuid12"
    uuid: "590cd13f-424c-34cb-95b0-2654fa9768cf"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "publish_applicationContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.availability.AvailabilityState"
      uuid: "publish_availabilityState1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid10"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "publish_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "publish_applicationContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Context must not be null"
      valueType: "java.lang.String"
      uuid: "uuid9"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.availability.AvailabilityChangeEvent"
      uuid: "uuid11"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "publish_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "publish_applicationContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "publish_applicationContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.availability.AvailabilityState"
      uuid: "publish_availabilityState1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid12"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "publish"
    signature: "publish(org.springframework.context.ApplicationEventPublisher,java.lang.Object,org.springframework.boot.availability.AvailabilityState)\
      \ : void"
    sourceCodeSignature: "void publish(ApplicationEventPublisher publisher, Object\
      \ source, S state)"
    instructionFingerprint: "0F2AB2BF9ED47C4C617FCEE7B66350DD"
  paths:
  - pathId: "path1"
    testPathName: "publish1Test"
    modelFingerprint: "132924B5788CE1D3F2800F7FDB924C07"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "publisher"
      modelFingerprint: "091D70E43933869429103AAB231EEB2F"
      index: 1
      valueUuid: "publish_applicationEventPublisher1"
    - type: "INPUT"
      name: "source"
      modelFingerprint: "26D7543A2F4ADA30195021819A4A01D1"
      index: 2
      valueUuid: "publish_object1"
    - type: "INPUT"
      name: "state"
      modelFingerprint: "A2EDCBBDC302659A40DAB16A4F9695AA"
      index: 3
      valueUuid: "publish_availabilityState1"
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "593D73B88361B543D82B96945F0A643D"
      index: 4
      valueUuid: "uuid14"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "publish_applicationEventPublisher1"
        - name: "message"
          valueUuid: "uuid13"
        signature: "notNull(ApplicationEventPublisher,String): void"
        returnValueUuid: "publish_void1"
        access: 9
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "20FE5AABD590479EF4401749CE7356BB"
      index: 5
      valueUuid: "uuid16"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "publish_availabilityState1"
        - name: "message"
          valueUuid: "uuid15"
        signature: "notNull(AvailabilityState,String): void"
        returnValueUuid: "<init>_void1"
        access: 9
    - type: "STATIC"
      name: "ResolvableType"
      modelFingerprint: "F7E3BC7B122B68C954974278C4DBDA31"
      index: 6
      valueUuid: "uuid17"
      methodExercised:
        target: "org.springframework.core.ResolvableType"
        name: "forInstance"
        parameters:
        - name: "instance"
          valueUuid: "publish_availabilityState1"
        signature: "forInstance(AvailabilityState): ResolvableType"
        returnValueUuid: "<init>_resolvableType1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "publisher"
      modelFingerprint: "D2D27FACB04BCC827B198CB9F01DF8E1"
      index: 7
      valueUuid: "publish_applicationEventPublisher1"
      methodExercised:
        target: "publisher"
        name: "publishEvent"
        parameters:
        - name: "event"
          valueUuid: "publish_availabilityChangeEvent1"
        signature: "publishEvent(AvailabilityChangeEvent): void"
        returnValueUuid: "publish_void2"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 8
      valueUuid: "uuid18"
    uuid: "125fc076-78de-38a4-953e-6a261fd08c0c"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_UNSOLVABLE"
      source: "* Return the changed availability state."
      lineNumber: 49
      details: "Method java.lang.System::currentTimeMillis has a unrepeatable behavior"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationEventPublisher"
      uuid: "publish_applicationEventPublisher1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Object"
      uuid: "publish_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.availability.AvailabilityState"
      uuid: "publish_availabilityState1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid14"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "publish_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationEventPublisher"
      uuid: "publish_applicationEventPublisher1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Publisher must not be null"
      valueType: "java.lang.String"
      uuid: "uuid13"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid16"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.availability.AvailabilityState"
      uuid: "publish_availabilityState1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Payload must not be null"
      valueType: "java.lang.String"
      uuid: "uuid15"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "uuid17"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "<init>_resolvableType1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.availability.AvailabilityState"
      uuid: "publish_availabilityState1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationEventPublisher"
      uuid: "publish_applicationEventPublisher1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "publish_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.availability.AvailabilityChangeEvent"
        parameters:
        - name: "source"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Object"
            uuid: "publish_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "state"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.availability.AvailabilityState"
            uuid: "publish_availabilityState1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.availability.AvailabilityChangeEvent"
      uuid: "publish_availabilityChangeEvent1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid18"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
