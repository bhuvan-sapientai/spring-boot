---
modelFingerprint: "ACAA39397CF2A8229AEC2E749DCA3B8F"
methods:
- method:
    name: "getState"
    returnType: "org.springframework.boot.availability.AvailabilityState"
    signature: "getState(java.lang.Class<org.springframework.boot.availability.AvailabilityState>,org.springframework.boot.availability.AvailabilityState)\
      \ : org.springframework.boot.availability.AvailabilityState"
    instructionFingerprint: "27252248D1C2F3B12CFBDFDC4AA81266"
    parametersTypes:
    - "java.lang.Class"
    - "org.springframework.boot.availability.AvailabilityState"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "getStateWhenStateIsNotNull"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.apache.commons.logging.Log) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "3217D4CB7B75393BEFD30F5F55BEB988"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "CCDED7067443A576627DFE38C92F8296"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.availability.ApplicationAvailabilityBean"
          parameters:
          - name: "logger"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.apache.commons.logging.impl.NoOpLog"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.apache.commons.logging.impl.NoOpLog"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.apache.commons.logging.impl.NoOpLog"
              uuid: "<init>_log1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.availability.ApplicationAvailabilityBean"
          parameters:
          - name: "logger"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<new>
                target: "org.apache.commons.logging.impl.NoOpLog"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.apache.commons.logging.impl.NoOpLog"
              uuid: "<init>_log1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.availability.ApplicationAvailabilityBean"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "stateType"
      modelFingerprint: "DFDAB60489F3A374E7B464B84CC1F0C1"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "CLASS"
        content: !<regular>
          value: "org.springframework.boot.availability.AvailabilityState"
        valueType: "java.lang.Class"
        genericValueType: "org.springframework.boot.availability.AvailabilityState"
        uuid: "getState_class1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "defaultState"
      modelFingerprint: "61371D66857BE13E4D3718A6147590E8"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.availability.AvailabilityState"
        uuid: "getState_availabilityState1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "05ACACFD208E1575C22B98E0CD04DCCF"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.Assert"
        uuid: "org.springframework.util.Assert"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.springframework.boot.availability.AvailabilityState"
            valueType: "java.lang.Class"
            genericValueType: "org.springframework.boot.availability.AvailabilityState"
            uuid: "getState_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "StateType must not be null"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "notNull(Class,String): void"
        returnValue:
          sapientType: "VOID"
          valueType: "void"
          uuid: "getState_void1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "E1610335FCB4A4E317374582CCA418D5"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.Assert"
        uuid: "org.springframework.util.Assert"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.availability.AvailabilityState"
            uuid: "getState_availabilityState1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "DefaultState must not be null"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "notNull(AvailabilityState,String): void"
        returnValue:
          sapientType: "VOID"
          valueType: "void"
          uuid: "getState_void2"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "0CC2D8686215CE83371BE0F56579DA96"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getState"
        parameters:
        - name: "stateType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.springframework.boot.availability.AvailabilityState"
            valueType: "java.lang.Class"
            genericValueType: "org.springframework.boot.availability.AvailabilityState"
            uuid: "getState_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getState(Class): AvailabilityState"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.availability.AvailabilityState"
          uuid: "getState_availabilityState2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8A0EC8870253C59495213C82475EAAF9"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.availability.AvailabilityState"
        uuid: "getState_availabilityState2"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "64152be7-31de-3288-8023-c6b41ffd74a5"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path2"
    pathIdForUser: "path2"
    testPathName: "getStateWhenStateIsNull"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.apache.commons.logging.Log) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "4FCBA0664BABA3C354ED8918C0A0B9D3"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "CCDED7067443A576627DFE38C92F8296"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.availability.ApplicationAvailabilityBean"
          parameters:
          - name: "logger"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.apache.commons.logging.impl.NoOpLog"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.apache.commons.logging.impl.NoOpLog"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.apache.commons.logging.impl.NoOpLog"
              uuid: "<init>_log1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.availability.ApplicationAvailabilityBean"
          parameters:
          - name: "logger"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<new>
                target: "org.apache.commons.logging.impl.NoOpLog"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.apache.commons.logging.impl.NoOpLog"
              uuid: "<init>_log1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.availability.ApplicationAvailabilityBean"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "stateType"
      modelFingerprint: "DFDAB60489F3A374E7B464B84CC1F0C1"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "CLASS"
        content: !<regular>
          value: "org.springframework.boot.availability.AvailabilityState"
        valueType: "java.lang.Class"
        genericValueType: "org.springframework.boot.availability.AvailabilityState"
        uuid: "getState_class1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "defaultState"
      modelFingerprint: "61371D66857BE13E4D3718A6147590E8"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.availability.AvailabilityState"
        uuid: "getState_availabilityState1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "05ACACFD208E1575C22B98E0CD04DCCF"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.Assert"
        uuid: "org.springframework.util.Assert"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.springframework.boot.availability.AvailabilityState"
            valueType: "java.lang.Class"
            genericValueType: "org.springframework.boot.availability.AvailabilityState"
            uuid: "getState_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "StateType must not be null"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "notNull(Class,String): void"
        returnValue:
          sapientType: "VOID"
          valueType: "void"
          uuid: "getState_void1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "E1610335FCB4A4E317374582CCA418D5"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.util.Assert"
        uuid: "org.springframework.util.Assert"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.availability.AvailabilityState"
            uuid: "getState_availabilityState1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "DefaultState must not be null"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "notNull(AvailabilityState,String): void"
        returnValue:
          sapientType: "VOID"
          valueType: "void"
          uuid: "getState_void2"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "CD992911785DD7C8256644401B75005F"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getState"
        parameters:
        - name: "stateType"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.springframework.boot.availability.AvailabilityState"
            valueType: "java.lang.Class"
            genericValueType: "org.springframework.boot.availability.AvailabilityState"
            uuid: "getState_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "getState(Class): AvailabilityState"
        returnValue:
          sapientType: "NULL"
          valueType: "org.springframework.boot.availability.AvailabilityState"
          uuid: "getState_availabilityState2"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8A0EC8870253C59495213C82475EAAF9"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.availability.AvailabilityState"
        uuid: "getState_availabilityState1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "b1de45f7-b777-337e-bf3c-50193043ca77"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "getState"
    returnType: "org.springframework.boot.availability.AvailabilityState"
    signature: "getState(java.lang.Class<org.springframework.boot.availability.AvailabilityState>)\
      \ : org.springframework.boot.availability.AvailabilityState"
    instructionFingerprint: "F1B11B2C98BACD78F5B96FD62A6BBF6F"
    parametersTypes:
    - "java.lang.Class"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "getState1WhenEventIsNull"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.apache.commons.logging.Log) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "E4240961A0A288363334A6BC002B27B0"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "CCDED7067443A576627DFE38C92F8296"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.availability.ApplicationAvailabilityBean"
          parameters:
          - name: "logger"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.apache.commons.logging.impl.NoOpLog"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.apache.commons.logging.impl.NoOpLog"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.apache.commons.logging.impl.NoOpLog"
              uuid: "<init>_log1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.availability.ApplicationAvailabilityBean"
          parameters:
          - name: "logger"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<new>
                target: "org.apache.commons.logging.impl.NoOpLog"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.apache.commons.logging.impl.NoOpLog"
              uuid: "<init>_log1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.availability.ApplicationAvailabilityBean"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "stateType"
      modelFingerprint: "DFDAB60489F3A374E7B464B84CC1F0C1"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "CLASS"
        content: !<regular>
          value: "org.springframework.boot.availability.AvailabilityState"
        valueType: "java.lang.Class"
        genericValueType: "org.springframework.boot.availability.AvailabilityState"
        uuid: "getState_class1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2C20137E2A7CAF2A7B0B4DA01F8C58D5"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "NULL"
        valueType: "org.springframework.boot.availability.AvailabilityState"
        uuid: "getState_availabilityState1"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "3fc968d3-e221-3653-8a32-b058d91d7b3b"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "getLastChangeEvent"
    returnType: "org.springframework.boot.availability.AvailabilityChangeEvent"
    signature: "getLastChangeEvent(java.lang.Class<org.springframework.boot.availability.AvailabilityState>)\
      \ : org.springframework.boot.availability.AvailabilityChangeEvent<org.springframework.boot.availability.AvailabilityState>"
    instructionFingerprint: "BD41936CD82A34963CF6DA56282EC4C1"
    parametersTypes:
    - "java.lang.Class"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "getLastChangeEventTest"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.apache.commons.logging.Log) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "0988751ED313821C94D7FC634B07B200"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "CCDED7067443A576627DFE38C92F8296"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.availability.ApplicationAvailabilityBean"
          parameters:
          - name: "logger"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.apache.commons.logging.impl.NoOpLog"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.apache.commons.logging.impl.NoOpLog"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.apache.commons.logging.impl.NoOpLog"
              uuid: "<init>_log1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.availability.ApplicationAvailabilityBean"
          parameters:
          - name: "logger"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<new>
                target: "org.apache.commons.logging.impl.NoOpLog"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.apache.commons.logging.impl.NoOpLog"
              uuid: "<init>_log1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.availability.ApplicationAvailabilityBean"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "stateType"
      modelFingerprint: "DFDAB60489F3A374E7B464B84CC1F0C1"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "CLASS"
        content: !<regular>
          value: "org.springframework.boot.availability.AvailabilityState"
        valueType: "java.lang.Class"
        genericValueType: "org.springframework.boot.availability.AvailabilityState"
        uuid: "getLastChangeEvent_class1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "43F1B3031DB1F97BE9B7A26714649189"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "NULL"
        valueType: "org.springframework.boot.availability.AvailabilityChangeEvent"
        genericValueType: "?"
        uuid: "getLastChangeEvent_availabilityChangeEvent1"
        fixed: false
        collectionUuid: "<init>_concurrentHashMap1"
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "0203bd90-a4c2-3d27-9e68-62d74c87d75d"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "onApplicationEvent"
    returnType: "void"
    signature: "onApplicationEvent(org.springframework.boot.availability.AvailabilityChangeEvent<?>)\
      \ : void"
    instructionFingerprint: "0B527C48399C87804781A7B31E1759B7"
    parametersTypes:
    - "org.springframework.boot.availability.AvailabilityChangeEvent"
  paths:
  - pathId: "path5"
    pathIdForUser: "path1"
    testPathName: "onApplicationEventWhenThisLoggerNotIsDebugEnabled"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.apache.commons.logging.Log) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "D3F155ECDADFE84A07DA07DD09F92469"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "5a883584-d90a-3aac-a6ee-81724a67f666"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path4"
    pathIdForUser: "path2"
    testPathName: "onApplicationEventWhenSourceIsNull"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.apache.commons.logging.Log) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "081BDE9B87DF8B81F41F316504085381"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "83286005-9ca9-3eab-af7e-74d75b61ee66"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path1"
    pathIdForUser: "path3"
    testPathName: "onApplicationEventWhenSourceInstanceOfApplicationEventPublisher"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.apache.commons.logging.Log) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "017C7F099799929888D211543CA7AC38"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "CCDED7067443A576627DFE38C92F8296"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.availability.ApplicationAvailabilityBean"
          parameters:
          - name: "logger"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.apache.commons.logging.impl.NoOpLog"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.apache.commons.logging.impl.NoOpLog"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.apache.commons.logging.impl.NoOpLog"
              uuid: "<init>_log1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.availability.ApplicationAvailabilityBean"
          parameters:
          - name: "logger"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<new>
                target: "org.apache.commons.logging.impl.NoOpLog"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.apache.commons.logging.impl.NoOpLog"
              uuid: "<init>_log1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.availability.ApplicationAvailabilityBean"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "event"
      modelFingerprint: "B2FA26F9910EA8A1A70B87E5DF1CC5F3"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.availability.AvailabilityChangeEvent"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.availability.AvailabilityChangeEvent"
        genericValueType: "?"
        uuid: "onApplicationEvent_availabilityChangeEvent1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "event"
      modelFingerprint: "B06EB60676C8366BA2080F0EAD1AF288"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.availability.AvailabilityChangeEvent"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.availability.AvailabilityChangeEvent"
        genericValueType: "?"
        uuid: "onApplicationEvent_availabilityChangeEvent1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "event"
        name: "getState"
        parameters: []
        signature: "getState(): AvailabilityState"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.availability.AvailabilityState"
          uuid: "onApplicationEvent_availabilityState1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "event"
      modelFingerprint: "B06EB60676C8366BA2080F0EAD1AF288"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.availability.AvailabilityChangeEvent"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.availability.AvailabilityChangeEvent"
        genericValueType: "?"
        uuid: "onApplicationEvent_availabilityChangeEvent1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "event"
        name: "getState"
        parameters: []
        signature: "getState(): AvailabilityState"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.availability.AvailabilityState"
          uuid: "getLogMessage_availabilityState1"
          fixed: false
          nameForMock: "getLogMessage_availabilityState1"
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "event"
      modelFingerprint: "BA16B0D67AFFDDED0052AC48C123C17A"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.availability.AvailabilityChangeEvent"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.availability.AvailabilityChangeEvent"
        genericValueType: "?"
        uuid: "onApplicationEvent_availabilityChangeEvent1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "event"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.context.ApplicationEventPublisher"
          uuid: "getLogMessage_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "VOID"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "a4325331-e0b5-3fdc-b8e3-15262fba61d0"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "UNKNOWN_REASON"
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
  - pathId: "path2"
    pathIdForUser: "path4"
    testPathName: "onApplicationEventWhenSourceInstanceOfThrowable"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.apache.commons.logging.Log) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "A653CFCD170959CAFEBF5D9430AE22B4"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D48CA4D6FD2E15D6BE3875ECF51C5232"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.availability.ApplicationAvailabilityBean"
          parameters:
          - name: "logger"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.apache.commons.logging.impl.NoOpLog"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.apache.commons.logging.impl.NoOpLog"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.apache.commons.logging.impl.NoOpLog"
              uuid: "<init>_log1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.availability.ApplicationAvailabilityBean"
          parameters:
          - name: "logger"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.apache.commons.logging.impl.NoOpLog"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.apache.commons.logging.impl.NoOpLog"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.apache.commons.logging.impl.NoOpLog"
              uuid: "<init>_log1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.availability.ApplicationAvailabilityBean"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "event"
      modelFingerprint: "B2FA26F9910EA8A1A70B87E5DF1CC5F3"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.availability.AvailabilityChangeEvent"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.availability.AvailabilityChangeEvent"
        genericValueType: "?"
        uuid: "onApplicationEvent_availabilityChangeEvent1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "event"
      modelFingerprint: "B06EB60676C8366BA2080F0EAD1AF288"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.availability.AvailabilityChangeEvent"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.availability.AvailabilityChangeEvent"
        genericValueType: "?"
        uuid: "onApplicationEvent_availabilityChangeEvent1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "event"
        name: "getState"
        parameters: []
        signature: "getState(): AvailabilityState"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.availability.AvailabilityState"
          uuid: "onApplicationEvent_availabilityState1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "event"
      modelFingerprint: "B06EB60676C8366BA2080F0EAD1AF288"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.availability.AvailabilityChangeEvent"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.availability.AvailabilityChangeEvent"
        genericValueType: "?"
        uuid: "onApplicationEvent_availabilityChangeEvent1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "event"
        name: "getState"
        parameters: []
        signature: "getState(): AvailabilityState"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.availability.AvailabilityState"
          uuid: "getLogMessage_availabilityState1"
          fixed: false
          nameForMock: "getLogMessage_availabilityState1"
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "event"
      modelFingerprint: "BC6035E4D7A8CE584BBEC9815BEA14FB"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.availability.AvailabilityChangeEvent"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.availability.AvailabilityChangeEvent"
        genericValueType: "?"
        uuid: "onApplicationEvent_availabilityChangeEvent1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "event"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "MOCK"
          valueType: "java.lang.Throwable"
          uuid: "getLogMessage_object1"
          fixed: false
          nameForMock: "getLogMessage_object1"
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "VOID"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "38a7e1b3-288c-3652-b5a2-ff233cb89830"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "UNKNOWN_REASON"
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
  - pathId: "path3"
    pathIdForUser: "path5"
    testPathName: "onApplicationEventWhenSourceNotInstanceOfThrowable"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.apache.commons.logging.Log) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "A7784AEF5B173F639A50D77FBF2DB024"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "CCDED7067443A576627DFE38C92F8296"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.springframework.boot.availability.ApplicationAvailabilityBean"
          parameters:
          - name: "logger"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.apache.commons.logging.impl.NoOpLog"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              suggestedContent: !<new>
                target: "org.apache.commons.logging.impl.NoOpLog"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.apache.commons.logging.impl.NoOpLog"
              uuid: "<init>_log1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.springframework.boot.availability.ApplicationAvailabilityBean"
          parameters:
          - name: "logger"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<new>
                target: "org.apache.commons.logging.impl.NoOpLog"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "org.apache.commons.logging.impl.NoOpLog"
              uuid: "<init>_log1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.springframework.boot.availability.ApplicationAvailabilityBean"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "event"
      modelFingerprint: "B2FA26F9910EA8A1A70B87E5DF1CC5F3"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.availability.AvailabilityChangeEvent"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.availability.AvailabilityChangeEvent"
        genericValueType: "?"
        uuid: "onApplicationEvent_availabilityChangeEvent1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "event"
      modelFingerprint: "B06EB60676C8366BA2080F0EAD1AF288"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.availability.AvailabilityChangeEvent"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.availability.AvailabilityChangeEvent"
        genericValueType: "?"
        uuid: "onApplicationEvent_availabilityChangeEvent1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "event"
        name: "getState"
        parameters: []
        signature: "getState(): AvailabilityState"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.availability.AvailabilityState"
          uuid: "onApplicationEvent_availabilityState1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "event"
      modelFingerprint: "B06EB60676C8366BA2080F0EAD1AF288"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.availability.AvailabilityChangeEvent"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.availability.AvailabilityChangeEvent"
        genericValueType: "?"
        uuid: "onApplicationEvent_availabilityChangeEvent1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "event"
        name: "getState"
        parameters: []
        signature: "getState(): AvailabilityState"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.springframework.boot.availability.AvailabilityState"
          uuid: "getLogMessage_availabilityState1"
          fixed: false
          nameForMock: "getLogMessage_availabilityState1"
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "event"
      modelFingerprint: "186AC9A152B43856AD1D986E7CACF996"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.springframework.boot.availability.AvailabilityChangeEvent"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.springframework.boot.availability.AvailabilityChangeEvent"
        genericValueType: "?"
        uuid: "onApplicationEvent_availabilityChangeEvent1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "event"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "getLogMessage_object1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "VOID"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "82df71e9-4a6b-385f-9c85-f2c00a6b9775"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "UNKNOWN_REASON"
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
