---
modelFingerprint: "D82BEA63217ACC4263919A6EE2AC0352"
targetClass:
  fullClassName: "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebApplicationContext"
methods:
- method:
    name: "setEnvironment"
    sourceCodeSignature: "void setEnvironment(ConfigurableEnvironment environment)"
    returnType: "void"
    parameters:
    - name: "environment"
      type: "org.springframework.core.env.ConfigurableEnvironment"
    instructionFingerprint: "435401004F79567FC5D48CB686B0C368"
  paths:
  - pathId: "path1"
    testPathName: "setEnvironmentTest"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "724CF418B8DA336C86894E25BDF46AA6"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "INPUT"
      name: "environment"
      modelFingerprint: "3F73E3E0E26E26EEEFAD4DD95D3AE3D4"
      valueUuid: "environment"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid1):void"
        staticAccess: true
    - type: "FIELD"
      name: "reader"
      modelFingerprint: "ABFA3DC9A6A6A4D74B74E29F3EEB9E08"
      valueUuid: "annotatedBeanDefinitionReader"
      methodExercised:
        expression: "setEnvironment(environment:environment):void3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_INTERNAL_METHOD_FAILURE"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
      valueType: "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebApplicationContext"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.context.annotation.AnnotatedBeanDefinitionReader"
        parameters:
        - name: "registry"
          value:
            sapientType: "THIS"
            valueType: "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebApplicationContext"
            uuid: "targetClassObject"
            fixed: true
      valueType: "org.springframework.context.annotation.AnnotatedBeanDefinitionReader"
      uuid: "annotatedBeanDefinitionReader"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "setBeanNameGenerator"
    sourceCodeSignature: "void setBeanNameGenerator(BeanNameGenerator beanNameGenerator)"
    returnType: "void"
    parameters:
    - name: "beanNameGenerator"
      type: "org.springframework.beans.factory.support.BeanNameGenerator"
    instructionFingerprint: "3FAB9D32F568FC30BD96BFC9544B5198"
  paths:
  - pathId: "path1"
    testPathName: "setBeanNameGeneratorTest"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "EDAEE4D2EF15964315ED4C9FE0FC2EA0"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "INPUT"
      name: "beanNameGenerator"
      modelFingerprint: "A020F8D68254D7AA4F4AF4990A153E4C"
      valueUuid: "beanNameGenerator"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid2):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "CA8B462E63307028B95B0E76BBCB758E"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "92B1C4DB9C398980E77CB5087AC38D72"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "registerSingleton(beanName:uniqueUuid3,singletonObject:beanNameGenerator):void4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
      valueType: "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebApplicationContext"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanNameGenerator"
      uuid: "beanNameGenerator"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.context.annotation.internalConfigurationBeanNameGenerator"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanNameGenerator"
      uuid: "beanNameGenerator"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "setScopeMetadataResolver"
    sourceCodeSignature: "void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver)"
    returnType: "void"
    parameters:
    - name: "scopeMetadataResolver"
      type: "org.springframework.context.annotation.ScopeMetadataResolver"
    instructionFingerprint: "05E40F5357288F5CE20E17D27141BA24"
  paths:
  - pathId: "path1"
    testPathName: "setScopeMetadataResolverTest"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "1CE2AD96492003916DD1F38E10C8325C"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "INPUT"
      name: "scopeMetadataResolver"
      modelFingerprint: "75DE5CD0F5C107621C90882B602E4DE3"
      valueUuid: "scopeMetadataResolver"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid4):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
      valueType: "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebApplicationContext"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.annotation.ScopeMetadataResolver"
      uuid: "scopeMetadataResolver"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "register"
    sourceCodeSignature: "void register(Class<?>... annotatedClasses)"
    returnType: "void"
    parameters:
    - name: "annotatedClasses"
      type: "java.lang.Class[]"
    instructionFingerprint: "0818CBD37BDE71948E8919CF81EF94CB"
  paths:
  - pathId: "path1"
    testPathName: "registerTest"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "BD99FAD7F66FFBB960F9589DA438F290"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "INPUT"
      name: "annotatedClasses"
      modelFingerprint: "07660FE32F0B7AFB5BDD13352CDA6AA1"
      valueUuid: "annotatedClasses"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid5):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "DE164E1A13FBBF5191560D40C0C3FF6B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notEmpty(array:annotatedClasses,message:uniqueUuid6):void2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
      valueType: "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebApplicationContext"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "annotatedClasses"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "annotatedClasses"
    - sapientType: "BASIC"
      content: !<regular>
        value: "At least one annotated class must be specified"
      valueType: "java.lang.String"
      uuid: "uniqueUuid6"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "scan"
    sourceCodeSignature: "void scan(String... basePackages)"
    returnType: "void"
    parameters:
    - name: "basePackages"
      type: "java.lang.String[]"
    instructionFingerprint: "6FCA3EE8F0962C9B693B8C50E6869C41"
  paths:
  - pathId: "path1"
    testPathName: "scanTest"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "E6628B4B199DEE35A95B6674EBFC7C13"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "INPUT"
      name: "basePackages"
      modelFingerprint: "CC83FE740379E9A124F19CAA0DD56CC8"
      valueUuid: "basePackages"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid7):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "15A61C27BEB9CC2BBEFCB29E79221A89"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notEmpty(array:basePackages,message:uniqueUuid8):void2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
      valueType: "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebApplicationContext"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "basePackages"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "basePackages"
    - sapientType: "BASIC"
      content: !<regular>
        value: "At least one base package must be specified"
      valueType: "java.lang.String"
      uuid: "uniqueUuid8"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "prepareRefresh"
    sourceCodeSignature: "void prepareRefresh()"
    returnType: "void"
    instructionFingerprint: "8205DFF55C83C307704F561C2E782C73"
  paths:
  - pathId: "path1"
    testPathName: "prepareRefreshTest"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "14418BEDFF00D147A7EC0B7BCD3BA00D"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid9):void"
        staticAccess: true
    - type: "FIELD"
      name: "scanner"
      modelFingerprint: "2948DE2BD8D401BD441E7EA4066B3889"
      valueUuid: "classPathBeanDefinitionScanner"
      methodExercised:
        expression: "clearCache():void2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.scanner.clearCache();"
      lineNumber: 196
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: scanner - Method: clearCache"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
      valueType: "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebApplicationContext"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid9"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.context.annotation.ClassPathBeanDefinitionScanner"
        parameters:
        - name: "registry"
          value:
            sapientType: "THIS"
            valueType: "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebApplicationContext"
            uuid: "targetClassObject"
            fixed: true
      valueType: "org.springframework.context.annotation.ClassPathBeanDefinitionScanner"
      uuid: "classPathBeanDefinitionScanner"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "postProcessBeanFactory"
    sourceCodeSignature: "void postProcessBeanFactory(ConfigurableListableBeanFactory\
      \ beanFactory)"
    returnType: "void"
    parameters:
    - name: "beanFactory"
      type: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
    instructionFingerprint: "7E5F4F0CDFFA814143CCB55E1B5D08BB"
  paths:
  - pathId: "path1"
    testPathName: "postProcessBeanFactoryWhenThisAnnotatedClassesIsEmpty"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "9B6E796FE9BDC360E1EA61CD2ADAFF5D"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "INPUT"
      name: "beanFactory"
      modelFingerprint: "932A2700B3FDD585DF4F3E3794C50826"
      valueUuid: "beanFactory"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory2,message:uniqueUuid10):void"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationContextUtils.class"
      modelFingerprint: "6136836DF20A58E1F49A1F4F14F96C0A"
      valueUuid: "WebApplicationContextUtils.class"
      methodExercised:
        expression: "registerWebApplicationScopes(beanFactory:beanFactory,sc:fieldServletContext):void2"
        staticAccess: true
    - type: "STATIC"
      name: "WebApplicationContextUtils.class"
      modelFingerprint: "7D2D838FDEBB04CDAF88C07AC685019F"
      valueUuid: "WebApplicationContextUtils.class"
      methodExercised:
        expression: "registerEnvironmentBeans(bf:beanFactory,sc:fieldServletContext):void3"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "A64226BDFFBE09004C35DF19A122CCF8"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "isEmpty(array:fieldStringArray):boolean1"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory2"
      valueType: "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebApplicationContext"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid10"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.web.context.support.WebApplicationContextUtils"
      uuid: "WebApplicationContextUtils.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "NULL"
      valueType: "jakarta.servlet.ServletContext"
      uuid: "fieldServletContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.web.context.support.WebApplicationContextUtils"
      uuid: "WebApplicationContextUtils.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "NULL"
      valueType: "jakarta.servlet.ServletContext"
      uuid: "fieldServletContext"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "NULL"
      valueType: "java.lang.String[]"
      uuid: "fieldStringArray"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 203
      expression: "!ObjectUtils.isEmpty(this.basePackages)"
      range: "(203,7)-(203,45)"
      evaluatedAs: false
    - lineNumber: 206
      expression: "!this.annotatedClasses.isEmpty()"
      range: "(206,7)-(206,38)"
      evaluatedAs: false
- method:
    name: "registerBean"
    sourceCodeSignature: "<T> void registerBean(String beanName, Class<T> beanClass,\
      \ Supplier<T> supplier, BeanDefinitionCustomizer... customizers)"
    returnType: "void"
    parameters:
    - name: "beanName"
      type: "java.lang.String"
    - name: "beanClass"
      type: "java.lang.Class"
    - name: "supplier"
      type: "java.util.function.Supplier"
    - name: "customizers"
      type: "org.springframework.beans.factory.config.BeanDefinitionCustomizer[]"
    instructionFingerprint: "58515B29A33AFB0A4CF64ADDAD3E1494"
  paths:
  - pathId: "path1"
    testPathName: "registerBean5Test"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "2BFD126946B9E1E4D917F09143F19F97"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "INPUT"
      name: "beanName"
      modelFingerprint: "CF78E67EF6D4AB290170629993228478"
      valueUuid: "beanName"
    - type: "INPUT"
      name: "beanClass"
      modelFingerprint: "83CF41A76AAE70A883C4E38A9DE868D0"
      valueUuid: "beanClass"
    - type: "INPUT"
      name: "supplier"
      modelFingerprint: "3A56E1FD6E24D51D29D271C23F070E12"
      valueUuid: "supplier"
    - type: "INPUT"
      name: "customizers"
      modelFingerprint: "4AAD90D3AB467942F46EDC911FAEFDD7"
      valueUuid: "customizers"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid11):void"
        staticAccess: true
    - type: "FIELD"
      name: "reader"
      modelFingerprint: "FB6E88E4F8540FE6B4B383E62015281C"
      valueUuid: "annotatedBeanDefinitionReader"
      methodExercised:
        expression: "registerBean(beanClass:beanClass,name:beanName,supplier:supplier,customizers:customizers):void2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.reader.registerBean(beanClass, beanName, supplier, customizers);"
      lineNumber: 214
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: reader - Method: registerBean"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
      valueType: "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebApplicationContext"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "beanName1"
      valueType: "java.lang.String"
      uuid: "beanName"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "beanClass"
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "supplier"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.beans.factory.config.BeanDefinitionCustomizer[]"
      uuid: "customizers"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid11"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.context.annotation.AnnotatedBeanDefinitionReader"
        parameters:
        - name: "registry"
          value:
            sapientType: "THIS"
            valueType: "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebApplicationContext"
            uuid: "targetClassObject"
            fixed: true
      valueType: "org.springframework.context.annotation.AnnotatedBeanDefinitionReader"
      uuid: "annotatedBeanDefinitionReader"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "beanClass"
    - sapientType: "BASIC"
      content: !<regular>
        value: "beanName1"
      valueType: "java.lang.String"
      uuid: "beanName"
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "supplier"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.beans.factory.config.BeanDefinitionCustomizer[]"
      uuid: "customizers"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
