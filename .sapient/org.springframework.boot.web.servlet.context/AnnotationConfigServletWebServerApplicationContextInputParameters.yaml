---
modelFingerprint: "DECEB9BCE019847D7D7A772FCC529E7A"
targetClass:
  fullClassName: "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext"
methods:
- method:
    name: "setEnvironment"
    sourceCodeSignature: "void setEnvironment(ConfigurableEnvironment environment)"
    returnType: "void"
    parameters:
    - name: "environment"
      type: "org.springframework.core.env.ConfigurableEnvironment"
    instructionFingerprint: "3875C9C532B5B2F4A082D32C91544D55"
  paths:
  - pathId: "path1"
    testPathName: "setEnvironmentTest"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "203BB4431D56CC240DADA31D0F59F52E"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "INPUT"
      name: "environment"
      modelFingerprint: "3F73E3E0E26E26EEEFAD4DD95D3AE3D4"
      valueUuid: "environment"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid1):void"
        staticAccess: true
    - type: "FIELD"
      name: "reader"
      modelFingerprint: "E96B0C7B31A184741F2C49B0B5C83FB9"
      valueUuid: "annotatedBeanDefinitionReader"
      methodExercised:
        expression: "setEnvironment(environment:environment):void3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_INTERNAL_METHOD_FAILURE"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
      valueType: "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.context.annotation.AnnotatedBeanDefinitionReader"
        parameters:
        - name: "registry"
          value:
            sapientType: "THIS"
            valueType: "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext"
            uuid: "targetClassObject"
            fixed: true
      valueType: "org.springframework.context.annotation.AnnotatedBeanDefinitionReader"
      uuid: "annotatedBeanDefinitionReader"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "setBeanNameGenerator"
    sourceCodeSignature: "void setBeanNameGenerator(BeanNameGenerator beanNameGenerator)"
    returnType: "void"
    parameters:
    - name: "beanNameGenerator"
      type: "org.springframework.beans.factory.support.BeanNameGenerator"
    instructionFingerprint: "3FAB9D32F568FC30BD96BFC9544B5198"
  paths:
  - pathId: "path1"
    testPathName: "setBeanNameGeneratorTest"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "AAD81652FE3019328D8DA1E2CB9D4FC9"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "INPUT"
      name: "beanNameGenerator"
      modelFingerprint: "A020F8D68254D7AA4F4AF4990A153E4C"
      valueUuid: "beanNameGenerator"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid2):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "CA8B462E63307028B95B0E76BBCB758E"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "92B1C4DB9C398980E77CB5087AC38D72"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "registerSingleton(beanName:uniqueUuid3,singletonObject:beanNameGenerator):void4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
      valueType: "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanNameGenerator"
      uuid: "beanNameGenerator"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.context.annotation.internalConfigurationBeanNameGenerator"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanNameGenerator"
      uuid: "beanNameGenerator"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "setScopeMetadataResolver"
    sourceCodeSignature: "void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver)"
    returnType: "void"
    parameters:
    - name: "scopeMetadataResolver"
      type: "org.springframework.context.annotation.ScopeMetadataResolver"
    instructionFingerprint: "05E40F5357288F5CE20E17D27141BA24"
  paths:
  - pathId: "path1"
    testPathName: "setScopeMetadataResolverTest"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "1BFB3DEFB634FABEE608B89E37ECE3F2"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "INPUT"
      name: "scopeMetadataResolver"
      modelFingerprint: "75DE5CD0F5C107621C90882B602E4DE3"
      valueUuid: "scopeMetadataResolver"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid4):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
      valueType: "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.annotation.ScopeMetadataResolver"
      uuid: "scopeMetadataResolver"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "register"
    sourceCodeSignature: "void register(Class<?>... annotatedClasses)"
    returnType: "void"
    parameters:
    - name: "annotatedClasses"
      type: "java.lang.Class[]"
    instructionFingerprint: "0818CBD37BDE71948E8919CF81EF94CB"
  paths:
  - pathId: "path1"
    testPathName: "registerTest"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "CB58A235D4FA851DC5FA02612CE43613"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "INPUT"
      name: "annotatedClasses"
      modelFingerprint: "07660FE32F0B7AFB5BDD13352CDA6AA1"
      valueUuid: "annotatedClasses"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid5):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "DE164E1A13FBBF5191560D40C0C3FF6B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notEmpty(array:annotatedClasses,message:uniqueUuid6):void2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
      valueType: "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "annotatedClasses"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "annotatedClasses"
    - sapientType: "BASIC"
      content: !<regular>
        value: "At least one annotated class must be specified"
      valueType: "java.lang.String"
      uuid: "uniqueUuid6"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "scan"
    sourceCodeSignature: "void scan(String... basePackages)"
    returnType: "void"
    parameters:
    - name: "basePackages"
      type: "java.lang.String[]"
    instructionFingerprint: "6FCA3EE8F0962C9B693B8C50E6869C41"
  paths:
  - pathId: "path1"
    testPathName: "scanTest"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "942ADFFCD4D38A74AB336F69F9DB18E3"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "INPUT"
      name: "basePackages"
      modelFingerprint: "CC83FE740379E9A124F19CAA0DD56CC8"
      valueUuid: "basePackages"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid7):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "15A61C27BEB9CC2BBEFCB29E79221A89"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notEmpty(array:basePackages,message:uniqueUuid8):void2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
      valueType: "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "basePackages"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "basePackages"
    - sapientType: "BASIC"
      content: !<regular>
        value: "At least one base package must be specified"
      valueType: "java.lang.String"
      uuid: "uniqueUuid8"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "prepareRefresh"
    sourceCodeSignature: "void prepareRefresh()"
    returnType: "void"
    instructionFingerprint: "43F44F60DEBFA32DF529E57EE9F5BFD4"
  paths:
  - pathId: "path1"
    testPathName: "prepareRefreshTest"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "569AD62629866A04642C6E96AC8FF762"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid9):void"
        staticAccess: true
    - type: "FIELD"
      name: "scanner"
      modelFingerprint: "9664324613E9A6ACF3A42551E6EEB0F3"
      valueUuid: "classPathBeanDefinitionScanner"
      methodExercised:
        expression: "clearCache():void2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.scanner.clearCache();"
      lineNumber: 194
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: scanner - Method: clearCache"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
      valueType: "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid9"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.context.annotation.ClassPathBeanDefinitionScanner"
        parameters:
        - name: "registry"
          value:
            sapientType: "THIS"
            valueType: "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext"
            uuid: "targetClassObject"
            fixed: true
      valueType: "org.springframework.context.annotation.ClassPathBeanDefinitionScanner"
      uuid: "classPathBeanDefinitionScanner"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "postProcessBeanFactory"
    sourceCodeSignature: "void postProcessBeanFactory(ConfigurableListableBeanFactory\
      \ beanFactory)"
    returnType: "void"
    parameters:
    - name: "beanFactory"
      type: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
    instructionFingerprint: "55A5293B6E850FB187AD6D37E8BFF3EF"
  paths:
  - pathId: "path1"
    testPathName: "postProcessBeanFactoryWhenThisAnnotatedClassesIsEmpty"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "170B242AB9156F9B266A77B042CF207A"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "INPUT"
      name: "beanFactory"
      modelFingerprint: "2B7EF4D05F05B01EB1F2B9BE20317A7C"
      valueUuid: "beanFactory"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory2,message:uniqueUuid10):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "1D4B5B5FF5AD980E90EDF9E6B6E0198D"
      valueUuid: "beanFactory"
      methodExercised:
        expression: "addBeanPostProcessor(beanPostProcessor:webApplicationContextServletContextAwareProcessor):void2"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "7AA53AE3EE57D0B04D95AE39CBA2EF52"
      valueUuid: "beanFactory"
      methodExercised:
        expression: "ignoreDependencyInterface(ifc:uniqueUuid11):void3"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "B9CB55A0C48855495EEAA66886638C1A"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "B9CB55A0C48855495EEAA66886638C1A"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory2"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "STATIC"
      name: "WebApplicationContextUtils.class"
      modelFingerprint: "4BE0C2717F816CA4AB389DF0E57C7635"
      valueUuid: "WebApplicationContextUtils.class"
      methodExercised:
        expression: "registerWebApplicationScopes(beanFactory:configurableListableBeanFactory2):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "existingScopes"
      modelFingerprint: "5985F9AA8F9435BB0C0414F6541C7B8E"
      valueUuid: "servletWebServerApplicationContext.ExistingWebApplicationScopes"
      methodExercised:
        expression: "restore():void5"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      lineNumber: 255
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: existingScopes - Method: restore"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory2"
      valueType: "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid10"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.servlet.context.WebApplicationContextServletContextAwareProcessor"
      uuid: "webApplicationContextServletContextAwareProcessor"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.web.context.ServletContextAware"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.web.context.ServletContextAware"
      uuid: "uniqueUuid11"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "MOCK"
      valueType: "org.springframework.web.context.support.WebApplicationContextUtils"
      uuid: "WebApplicationContextUtils.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext$ExistingWebApplicationScopes"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
            uuid: "configurableListableBeanFactory"
      valueType: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext$ExistingWebApplicationScopes"
      uuid: "servletWebServerApplicationContext.ExistingWebApplicationScopes"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 201
      expression: "this.basePackages != null"
      range: "(201,7)-(201,31)"
      evaluatedAs: false
    - lineNumber: 204
      expression: "!this.annotatedClasses.isEmpty()"
      range: "(204,7)-(204,38)"
      evaluatedAs: false
