---
modelFingerprint: "6DEC06795CC1C5791D8FD0ED08316A1B"
targetClass:
  fullClassName: "org.springframework.boot.web.servlet.context.WebApplicationContextServletContextAwareProcessor"
methods:
- method:
    name: "getServletContext"
    sourceCodeSignature: "ServletContext getServletContext()"
    returnType: "jakarta.servlet.ServletContext"
    instructionFingerprint: "ED29B5979FE12C4FA5840D571225D7BF"
  paths:
  - pathId: "path1"
    testPathName: "getServletContextWhenServletContextIsNotNull"
    constructorSignature: "<init>(org.springframework.web.context.ConfigurableWebApplicationContext)\
      \ : void"
    modelFingerprint: "AC6F61CCF60D821C78A470FF03A2EA72"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "E12FFF495732639D69CD1B62F8161149"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "27EF2AFDDCE78B7F10C8297618B147EC"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:webApplicationContext,message:uniqueUuid1):void"
        staticAccess: true
    - type: "FIELD"
      name: "webApplicationContext"
      modelFingerprint: "245F3C4D5EBB40FDB4718E023DE7E5C9"
      valueUuid: "webApplicationContext"
      methodExercised:
        expression: "getServletContext():servletContext"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "1783DAC4B89D14E7718C0901C8D668E3"
      valueUuid: "servletContext"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.WebApplicationContextServletContextAwareProcessor"
        parameters:
        - name: "webApplicationContext"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.web.context.ConfigurableWebApplicationContext"
            uuid: "webApplicationContext"
      valueType: "org.springframework.boot.web.servlet.context.WebApplicationContextServletContextAwareProcessor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.web.context.ConfigurableWebApplicationContext"
      uuid: "webApplicationContext"
    - sapientType: "BASIC"
      content: !<regular>
        value: "WebApplicationContext must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.web.context.ConfigurableWebApplicationContext"
      uuid: "webApplicationContext"
    - sapientType: "MOCK"
      valueType: "jakarta.servlet.ServletContext"
      uuid: "servletContext"
    - sapientType: "MOCK"
      valueType: "jakarta.servlet.ServletContext"
      uuid: "servletContext"
    branches:
    - lineNumber: 47
      expression: "servletContext != null"
      range: "(47,11)-(47,32)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "getServletContextWhenServletContextIsNull"
    constructorSignature: "<init>(org.springframework.web.context.ConfigurableWebApplicationContext)\
      \ : void"
    modelFingerprint: "C0B41ECD5F137F9AA1788FFF35572F0A"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "E12FFF495732639D69CD1B62F8161149"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "27EF2AFDDCE78B7F10C8297618B147EC"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:webApplicationContext,message:uniqueUuid2):void"
        staticAccess: true
    - type: "FIELD"
      name: "webApplicationContext"
      modelFingerprint: "73A4ECA0F324DC725775FE661CD0FDAB"
      valueUuid: "webApplicationContext"
      methodExercised:
        expression: "getServletContext():servletContext"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "52BED6CDE4CADD85EBBD92F1EA08AED5"
      valueUuid: "fieldServletContext"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.WebApplicationContextServletContextAwareProcessor"
        parameters:
        - name: "webApplicationContext"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.web.context.ConfigurableWebApplicationContext"
            uuid: "webApplicationContext"
      valueType: "org.springframework.boot.web.servlet.context.WebApplicationContextServletContextAwareProcessor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.web.context.ConfigurableWebApplicationContext"
      uuid: "webApplicationContext"
    - sapientType: "BASIC"
      content: !<regular>
        value: "WebApplicationContext must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.web.context.ConfigurableWebApplicationContext"
      uuid: "webApplicationContext"
    - sapientType: "NULL"
      valueType: "jakarta.servlet.ServletContext"
      uuid: "servletContext"
      fixed: true
    - sapientType: "NULL"
      valueType: "jakarta.servlet.ServletContext"
      uuid: "fieldServletContext"
    branches:
    - lineNumber: 47
      expression: "servletContext != null"
      range: "(47,11)-(47,32)"
      evaluatedAs: false
- method:
    name: "getServletConfig"
    sourceCodeSignature: "ServletConfig getServletConfig()"
    returnType: "jakarta.servlet.ServletConfig"
    instructionFingerprint: "587E3BBB9891380262BEC1E633B0189C"
  paths:
  - pathId: "path1"
    testPathName: "getServletConfigWhenServletConfigIsNotNull"
    constructorSignature: "<init>(org.springframework.web.context.ConfigurableWebApplicationContext)\
      \ : void"
    modelFingerprint: "C82A7193ECC6C34CF36D6FC02FB6FECA"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "E12FFF495732639D69CD1B62F8161149"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "27EF2AFDDCE78B7F10C8297618B147EC"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:webApplicationContext,message:uniqueUuid3):void"
        staticAccess: true
    - type: "FIELD"
      name: "webApplicationContext"
      modelFingerprint: "B4F88548F0B7D50734EAAE7BC5363320"
      valueUuid: "webApplicationContext"
      methodExercised:
        expression: "getServletConfig():servletConfig"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "ACBDA3A73F02585F59C7EC5541D4994D"
      valueUuid: "servletConfig"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.WebApplicationContextServletContextAwareProcessor"
        parameters:
        - name: "webApplicationContext"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.web.context.ConfigurableWebApplicationContext"
            uuid: "webApplicationContext"
      valueType: "org.springframework.boot.web.servlet.context.WebApplicationContextServletContextAwareProcessor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.web.context.ConfigurableWebApplicationContext"
      uuid: "webApplicationContext"
    - sapientType: "BASIC"
      content: !<regular>
        value: "WebApplicationContext must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.web.context.ConfigurableWebApplicationContext"
      uuid: "webApplicationContext"
    - sapientType: "MOCK"
      valueType: "jakarta.servlet.ServletConfig"
      uuid: "servletConfig"
    - sapientType: "MOCK"
      valueType: "jakarta.servlet.ServletConfig"
      uuid: "servletConfig"
    branches:
    - lineNumber: 53
      expression: "servletConfig != null"
      range: "(53,11)-(53,31)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "getServletConfigWhenServletConfigIsNull"
    constructorSignature: "<init>(org.springframework.web.context.ConfigurableWebApplicationContext)\
      \ : void"
    modelFingerprint: "04F5167C4B4950EDDD5469990D34B3ED"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "E12FFF495732639D69CD1B62F8161149"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "27EF2AFDDCE78B7F10C8297618B147EC"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:webApplicationContext,message:uniqueUuid4):void"
        staticAccess: true
    - type: "FIELD"
      name: "webApplicationContext"
      modelFingerprint: "362AC37850E341EADA1E750F20795396"
      valueUuid: "webApplicationContext"
      methodExercised:
        expression: "getServletConfig():servletConfig"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2B993695692140CF95A258FF0381A9B5"
      valueUuid: "fieldServletConfig"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.WebApplicationContextServletContextAwareProcessor"
        parameters:
        - name: "webApplicationContext"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.web.context.ConfigurableWebApplicationContext"
            uuid: "webApplicationContext"
      valueType: "org.springframework.boot.web.servlet.context.WebApplicationContextServletContextAwareProcessor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.web.context.ConfigurableWebApplicationContext"
      uuid: "webApplicationContext"
    - sapientType: "BASIC"
      content: !<regular>
        value: "WebApplicationContext must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.web.context.ConfigurableWebApplicationContext"
      uuid: "webApplicationContext"
    - sapientType: "NULL"
      valueType: "jakarta.servlet.ServletConfig"
      uuid: "servletConfig"
      fixed: true
    - sapientType: "NULL"
      valueType: "jakarta.servlet.ServletConfig"
      uuid: "fieldServletConfig"
    branches:
    - lineNumber: 53
      expression: "servletConfig != null"
      range: "(53,11)-(53,31)"
      evaluatedAs: false
